[{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/App.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"app\" is not PascalCase.","line":9,"column":9,"nodeType":"Literal","endLine":9,"endColumn":14,"fix":{"range":[117,120],"text":"App"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div id=\"app\">\n    <router-view></router-view>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'app'\n};\n</script>\n\n<style lang=\"scss\">\n@import './styles/variables.scss';\n\n.items-center {\n  display: flex;\n  align-items: center;\n}\n\n.content-center {\n  display: flex;\n  justify-content: center;\n}\n\n.center {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.padding-top-bottom {\n  padding-top: 10px;\n  padding-bottom: 20px;\n}\n\n.padding-top10-bottom10 {\n  padding-top: 10px;\n  padding-bottom: 10px;\n}\n\n.el-select {\n  width: 100%;\n}\n\n.available {\n  color: green;\n}\n\n.unavailable {\n  color: red;\n}\n\n.block-padding {\n  padding-top: 15px;\n}\n\n.between {\n  padding-left: 10px;\n  padding-right: 10px;\n}\n@media screen and (max-width: 540px) {\n  .el-message {\n    min-width: 200px;\n  }\n  .el-message-box {\n    width: 210px;\n  }\n}\n\n.pms-ui .dialog-list-btn {\n  display: inline-block;\n  margin-right: 16px;\n  font-size: 14px;\n  color: #fff;\n  background-color: #3d61d1;\n  height: 32px;\n  width: 70px;\n  cursor: pointer;\n  line-height: 32px;\n  text-align: center;\n  cursor: pointer;\n  border-radius: 3px;\n  vertical-align: middle;\n  font-weight: bolder;\n  padding: 0;\n  border: 0;\n  font-weight: 400;\n}\n\n.pms-ui .el-table th {\n  background-color: #f0f2f5;\n}\n.pms-ui .el-table .el-table-column--selection > .cell {\n  text-overflow: clip;\n}\n.pms-ui .el-table--border td,\n.pms-ui .el-table--border th,\n.pms-ui\n  .el-table__body-wrapper\n  .el-table--border.is-scrolling-left\n  ~ .el-table__fixed {\n  border-right: none;\n}\n.pms-ui .el-table th > .cell {\n  color: #575757;\n  font: 12px/1.5 'Helvetica Neue Light', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  word-break: break-word;\n  &.highlight{\n    color: #3d6ed1;\n  }\n}\n.pms-ui .el-table__expanded-cell tr.el-table__row,\n.pms-ui .el-table thead.is-group th {\n  background-color: rgb(241, 243, 246);\n}\n.pms-ui\n  .el-table__expanded-cell\n  .el-table--enable-row-hover\n  .el-table__body\n  tr:hover\n  > td {\n  background-color: rgb(241, 243, 246);\n}\n.pms-ui .el-input__inner,\n.pms-ui .el-range-input {\n  height: 28px;\n  line-height: 28px;\n  padding: 1px 1px 1px 3px;\n  border: 1px solid #c2c2c2;\n  background-color: #f0f3fa;\n  border-radius: 0px;\n}\n.pms-ui .el-date-editor--daterange {\n  background-color: #e5e5e5;\n}\n.pms-ui .el-input--prefix .el-input__inner {\n  padding-left: 30px;\n}\n.pms-ui .el-input--suffix .el-input__inner {\n  padding-right: 30px;\n}\n.pms-ui .el-input__inner:hover {\n  border: 1px solid #3d61d1;\n  background-color: #faf1e0;\n}\n.pms-ui .el-input__inner:focus {\n  outline-offset: -2px;\n  outline: -webkit-focus-ring-color auto 5px;\n}\n.pms-ui .el-col .el-form-item {\n  height: 36px;\n  line-height: 36px;\n}\n.pms-ui .el-form-item__label {\n  color: #565258;\n}\n.pms-ui .el-date-table .available {\n  color: #333;\n  background-color: #f5f5f5;\n}\n.pms-ui .el-date-table .prev-month,\n.pms-ui .el-date-table .next-month {\n  visibility: hidden;\n}\n.pms-ui .el-date-table th {\n  color: #999;\n  font-size: 12px;\n  line-height: 25px;\n  font-weight: 700;\n  text-align: center;\n  vertical-align: middle;\n  border-bottom: none;\n}\n.pms-ui .el-date-range-picker__header div {\n  font-size: 14px;\n  font-weight: 700;\n  color: #333;\n}\n.pms-ui .el-date-range-picker__header .el-icon-d-arrow-left,\n.pms-ui .el-date-range-picker__header .el-icon-d-arrow-right {\n  display: none;\n}\n.pms-ui .el-tabs__item {\n  display: inline-block;\n  height: 35px;\n  margin-bottom: 5px;\n  border-bottom: 2px solid transparent;\n  line-height: 35px;\n  font-size: 24px;\n  font-weight: 400;\n  color: #575757;\n}\n.pms-ui .el-tabs__item.is-active {\n  color: #3d61d1;\n}\n.pms-ui .el-pagination.is-background .el-pager li:not(.disabled).active {\n  background-color: #3d61d1;\n}\n.pms-ui .el-checkbox__input.is-checked .el-checkbox__inner {\n  background-color: #3d61d1;\n  border-color: #3d61d1;\n}\n.pms-ui .el-date-editor--daterange:hover {\n  background: #e5e5e5;\n  border: 1px solid #c2c2c2;\n}\n.pms-ui .el-date-editor--daterange {\n  vertical-align: -2px;\n  width: 100%;\n  margin-left: -4px;\n}\n.el-select .el-input .el-select__caret {\n  line-height: 28px;\n}\n.pms-ui .current-row:hover {\n  background-color: #e4f6ff !important;\n  cursor: pointer;\n}\n.pms-ui .el-table td {\n  font-size: 14px;\n  color: #000;\n  font-weight: 400;\n}\n.pms-ui .list-btn {\n  display: inline-block;\n  margin-right: 5px;\n  font-size: 14px;\n  color: #fff;\n  background-color: #3d61d1;\n  height: 32px;\n  width: 70px;\n  cursor: pointer;\n  line-height: 30px;\n  text-align: center;\n  cursor: pointer;\n  border-radius: 3px;\n  vertical-align: middle;\n  font-weight: bolder;\n  padding: 0;\n  border: 0;\n  font-weight: 400;\n  &.white-blue {\n    background-color: #fff;\n    color: $blue;\n    border: 1px solid $blue;\n  }\n  &.simple-blue {\n    background-color: transparent;\n    color: $blue;\n    border: 1px solid transparent;\n  }\n}\n.pms-ui .create-btn {\n  float: right;\n  margin-top: -56px;\n  min-width: 160px;\n  padding: 0 20px;\n  font-size: 14px;\n  color: #fff;\n  background-color: #3d61d1;\n  text-align: center;\n  height: 50px;\n  cursor: pointer;\n  border-radius: 3px;\n  line-height: 50px;\n  vertical-align: middle;\n  font-weight: bolder;\n  transition: background 0.3s linear;\n  box-sizing: content-box;\n}\n.pms-ui-detail .approve-btn,\n.pms-ui-detail .reject-btn,\n.pms-ui-detail .delete-btn {\n  float: left;\n  width: 180px;\n  height: 50px;\n  margin: 15px 10px 0 0;\n  line-height: 50px;\n  font-size: 14px;\n  text-align: center;\n  vertical-align: middle;\n  color: #86cd57;\n  cursor: pointer;\n  border: 1px solid #86cd57;\n  border-radius: 3px;\n  background-color: #fff;\n  transition: background 0.3s linear;\n}\n.pms-ui-detail .delete-btn {\n  border-color: #f56c6c;\n  color: #f56c6c;\n}\n.pms-ui-detail .delete-btn:hover {\n  background-color: #f56c6c;\n  color: #fff;\n}\n.pms-ui-detail .reject-btn {\n  margin: 15px 0 0 0;\n}\n.pms-ui-detail .approve-btn:hover,\n.pms-ui-detail .reject-btn:hover {\n  background-color: #86cd57;\n  color: #fff;\n  border-color: #fff;\n}\n.pms-ui .mass-reject-btn {\n  margin-left: 5px;\n  margin-right: 20px;\n  color: #e57471;\n  border: 1px solid #e57471;\n  background-color: #fff;\n}\n.pms-ui .export-history-btn {\n  width: 120px;\n  margin-left: 5px;\n  margin-right: 20px;\n}\n.pms-ui .clear-btn {\n  font-weight: 500;\n  color: #555555;\n  background-color: #fff;\n  border: 1px solid #e4e4e4;\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/CRT.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/FBS/expiryConfig.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/FBS/inbound.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/FBS/inventory.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/FBS/productNomination.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/FBS/rtsInterface.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/FBS/rtsSettings.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/FBS/rules.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/FBS/sellerAndShop.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/FBS/sellerSku.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/FBS/shopWhiteList.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/actionLog.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/addedService.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/approvalFlow.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/asn.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/asnControl.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/autoTaskReport.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/backMargin.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/backlogDashboard.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/brand.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/budgetLine.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/budgetRequest.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/buyingRequest.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/carton.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/categoryCluster.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/categoryGroup.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/common.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/config/shopBlackList.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/config/supplierDashboard.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/crReport.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/createCRT.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/crossDock.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/feeTypeConfig.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/history.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/homePage.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/inboundPlanning.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/inboundReservation.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/inventoryDashboard.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/inventoryHealth.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/inventoryHealthOverview.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/iscCommon.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/lifecycle.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/listingRequest.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/login.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/marketingCenter.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/moveTransfer.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/nominate.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/notificationCenter.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/ownership.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/paymentRequest.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/paymentRequestConfig.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/priceChange.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/priceChangeConfig.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/purchaseOrder.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/purchaseRequest.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/replenishment.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/rop.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/rtsCalendars.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/rtsMgt.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/salesForecast.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/shop.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/shopConfig.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/skuMgt.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/statementManagement.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/stockAdjustment.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/subFeeManagement.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/supplier.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/supplierCenterModule.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/supplierConfig.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/supplierRequest.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/supplierSKU.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/targetMarginConfig.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/unitConfig.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/updateRequest.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/userRole.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/userSetting.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/warehouseConfig.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/api/workHandover.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/ApprovalFlow/actionLog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/ApprovalFlow/filter.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/ApprovalFlow/table.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":295,"column":81,"nodeType":"VIdentifier","messageId":"deprecated","endLine":295,"endColumn":87},{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":298,"column":48,"nodeType":"VIdentifier","messageId":"deprecated","endLine":298,"endColumn":54},{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":303,"column":30,"nodeType":"VIdentifier","messageId":"deprecated","endLine":303,"endColumn":36},{"ruleId":"vue/no-template-shadow","severity":2,"message":"Variable 'item' is already declared in the upper scope.","line":334,"column":26,"nodeType":"Identifier","endLine":334,"endColumn":30},{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":346,"column":28,"nodeType":"VIdentifier","messageId":"deprecated","endLine":346,"endColumn":34}],"errorCount":5,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n<div class=\"approveFlow-wrapper\">\n  <template v-if=\"!isSimpleRoleConfig && !isStockAdjustment\">\n  <el-row v-if='canEditApprovalFlow' class=\"approval-btn-wrapper\">\n    <el-button class=\"list-btn green\" :loading=\"actionLoading\" v-if=\"sections.length > 0\" @click=\"onSave\" :disabled=\"config.noSectionChange\">\n      {{$t('approvalFlow.save')}}\n    </el-button>\n    <el-button class=\"list-btn green\" v-else @click=\"onInitSections\">{{$t('approvalFlow.initSections')}}</el-button>\n  </el-row>\n  <section class='flow-info'>\n    <span v-if=\"isBMType\">{{`Flow Type-${config.activeTab} - ${formatBMType} - ${formatCampaignType}`}}</span>\n    <span v-else>{{approvalFlowTabInfo}}</span>\n  </section>\n  <el-table v-if='canEditApprovalFlow' :data=\"sections\" border size=\"mini\">\n    <el-table-column v-if='isPRType || isBuyingRequestFlow' align='center' type=\"index\" width='160px' :label='`NO`'>\n      <template slot-scope=\"scope\">\n        <el-row>\n          <div class='el-icon-minus role-select-icon-btn' @click=\"onDelSection(scope.$index)\"></div>\n          {{scope.$index + 1}}\n          <div class='el-icon-plus role-select-icon-btn' @click=\"onAddSection(scope.row, scope.$index)\"></div>\n        </el-row>\n      </template>\n    </el-table-column>\n    <el-table-column v-if='isPRType || isBuyingRequestFlow' align='center' :label=\"$t('approvalFlow.valueSection') + '(' + config.currency + ')'\">\n      <template slot-scope=\"scope\">\n        <div style=\"display: inline-flex;\" class=\"items-center\">\n          <!-- left -->\n          <el-input-number class=\"input-number\" :controls=\"false\" v-if=\"scope.row.isFirst\" disabled type=\"number\" v-model=\"scope.row.minValue\" @change=\"onSectionValueChange(scope.row, 0)\"></el-input-number>\n          <el-input-number class=\"input-number\" :controls=\"false\" v-else type=\"number\" v-model=\"scope.row.minValue\" @change=\"onSectionValueChange(scope.row, 0)\"></el-input-number>\n          <span class=\"between\">-</span>\n          <!-- right -->\n          <el-input-number class=\"input-number\" :controls=\"false\" v-if=\"scope.row.isLast\" disabled type=\"number\" v-model=\"scope.row.maxValue\" @change=\"onSectionValueChange(scope.row, 1)\"></el-input-number>\n          <el-input-number class=\"input-number\" :controls=\"false\" v-else type=\"number\" v-model=\"scope.row.maxValue\" @change=\"onSectionValueChange(scope.row, 1)\"></el-input-number>\n        </div>\n      </template>\n    </el-table-column>\n\n    <el-table-column align='center' :label=\"$t('approvalFlow.finalApprovalRole')\" :width=\"(isPRType || isPriceChange || isPaymentRequestFlow || isBuyingRequestFlow) ? 'auto' : '700'\">\n      <template slot-scope=\"scope\">\n        {{scope.row.finalRoleList.map(finalRole => ((roleList.find(role => role.id === finalRole.role_id) || { name: '' }).name)).join(' --> ')}}\n      </template>\n    </el-table-column>\n\n    <el-table-column align='left' width=\"auto\">\n      <template slot-scope=\"scope\" slot=\"header\">\n        <span>{{$t('approvalFlow.approvalRole')}}</span>\n        <el-popover v-if=\"isPaymentRequestFlow\" placement=\"top\" width=\"320px\" popper-class=\"break-word\" :content=\"$t('invoiceApprovalFlowTips')\">\n         <svg-icon iconClass=\"question\" slot=\"reference\" className=\"question-icon\"></svg-icon>\n        </el-popover>\n      </template>\n      <template slot-scope=\"scope\">\n        <div class=\"role-select-warpper\" v-for=\"(item, index) in scope.row.roleList\" :key=\"index\">\n          <el-select class='role-select' v-model=\"item.role_id\" @change=\"changeRoleItem\">\n            <el-option v-for=\"role in roleList\" :key=\"role.id\" :value=\"role.id\" :label=\"role.name\"></el-option>\n          </el-select>\n          <i @click=\"onDelRole(scope.row, index)\" class=\"role-delete-icon el-icon-close\"></i>\n        </div>\n        <el-row class=\"add-role-row\">\n          <i @click=\"onAddRole(scope.row)\" class=\"el-icon-circle-plus-outline add-role-icon\"></i>\n          <span @click=\"onAddRole(scope.row)\" class=\"add-role-text\">Add New Role</span>\n        </el-row>\n      </template>\n    </el-table-column>\n\n    <el-table-column v-if=\"isPriceChange\" align=\"center\" width=\"635px\" key=\"price-change-column\">\n     <template slot=\"header\" slot-scope=\"scope\">\n       <el-popover\n          placement=\"top\"\n          :title=\"$t('approvalFlow.triggerTitle')\"\n          width=\"560\"\n          trigger=\"hover\"\n          >\n          <p>{{$t('approvalFlow.triggerContentTitle1')}}</p>\n          <p>{{$t('approvalFlow.triggerContentTitle2')}}</p>\n          <h4 >{{$t('approvalFlow.triggerContentTitle3')}}</h4>\n          <p>{{$t('approvalFlow.triggerContentTitle4')}}</p>\n          <p>{{$t('approvalFlow.triggerContentTitle5')}}</p>\n          <p>{{$t('approvalFlow.triggerContentTitle6')}}</p>\n          <span slot=\"reference\">{{$t('approvalFlow.triggerCondition')}}<i class=\"el-icon el-icon-question\"></i></span>\n        </el-popover>\n     </template>\n      <template slot-scope=\"scope\">\n        <el-row v-for=\"(item, index) in scope.row.roleList\" :key=\"index\">\n          <el-checkbox-group v-if=\"Array.isArray(item.price_change_trigger_conditions)\" v-model=\"item.price_change_trigger_conditions\" @change=\"changePriceChangeConditions\">\n            <el-checkbox :label=\"1\">{{$t('approvalFlow.grossMarginTarget')}}</el-checkbox>\n            <el-checkbox :label=\"2\">{{$t('approvalFlow.promotionPriceCheckPoint')}}</el-checkbox>\n            <el-checkbox :label=\"3\">{{$t('approvalFlow.originalPriceCheckPoint')}}</el-checkbox>\n          </el-checkbox-group>\n        </el-row>\n        <div class=\"trigger-condition-block\"></div>\n      </template>\n    </el-table-column>\n\n    <el-table-column v-if=\"isPRType\" align=\"left\" header-align='left' :label=\"$t('approvalFlow.action')\" width='160px'>\n      <template slot-scope=\"scope\">\n        <div class='action-list'>\n          <el-row class='action-item' v-for=\"(item, index) in scope.row.roleList\" :key=\"index\">\n            <div class='action-item-btn' v-if='showConfigBtn(item.role_id)' size=\"mini\" @click=\"showCategoryConfig(item.role_id)\">{{$t('approvalFlow.approvalConfig')}}</div>\n          </el-row>\n        </div>\n      </template>\n    </el-table-column>\n\n    <template v-if=\"isPaymentRequestFlow\">\n      <el-table-column  align=\"center\"  width='230px'>\n        <template slot-scope=\"scope\"  slot=\"header\">\n          {{$t('approvalFlowPriceOverwrite')}}\n          <el-popover placement=\"top\" width=\"300px\" trigger=\"hover\"  :content=\"$t('approvalFlowPriceOverwriteTip')\">\n            <svg-icon iconClass=\"question\" slot=\"reference\" className=\"question-icon\"></svg-icon>\n          </el-popover>\n        </template>\n        <template slot-scope=\"scope\">\n          <div class=\"block-flex content-block\" v-for=\"(item, index) in scope.row.roleList\" :key=\"`${item.role_id} ${index}`\">\n            <el-checkbox v-model=\"item.price_overwrite_to_higher\" :disabled=\"index === 0\" @change=\"checkSections\">{{$t('approvalFlowToHigher')}}</el-checkbox>\n            <el-checkbox v-model=\"item.price_overwrite_to_lower\" :disabled=\"index === 0\" @change=\"checkSections\">{{$t('approvalFlowToLower')}}</el-checkbox>\n          </div>\n        </template>\n      </el-table-column>\n\n      <el-table-column  align=\"center\"  width='230px'>\n        <template slot-scope=\"scope\" slot=\"header\">\n          {{$t('approvalFlowQtyOverwrite')}}\n          <el-popover placement=\"top\" width=\"300px\" trigger=\"hover\" :content=\"$t('approvalFlowQtyOverwriteTip')\">\n            <svg-icon iconClass=\"question\" slot=\"reference\" className=\"question-icon\"></svg-icon>\n          </el-popover>\n        </template>\n        <template slot-scope=\"scope\">\n          <div class=\"block-flex content-block\" v-for=\"(item, index) in scope.row.roleList\" :key=\"`${item.role_id} ${index}`\">\n            <el-checkbox v-model=\"item.qty_overwrite_to_higher\" :disabled=\"index === 0\" @change=\"checkSections\">{{$t('approvalFlowToHigher')}}</el-checkbox>\n            <el-checkbox v-model=\"item.qty_overwrite_to_lower\" :disabled=\"index === 0\" @change=\"checkSections\">{{$t('approvalFlowToLower')}}</el-checkbox>\n          </div>\n        </template>\n      </el-table-column>\n\n      <el-table-column width=\"250px\" key=\"payment_date_column\">\n        <template slot=\"header\" slot-scope=\"scope\">\n          <ul class=\"block-flex no-margin-bottom\">\n            <li class=\"block-item\">\n            <span class=\"block-item-title\">{{$t('invoiceExpectedPaymentDate')}}</span>\n              <el-popover\n                placement=\"top\"\n                trigger=\"hover\"\n                width=\"200\"\n              >\n              <p>{{$t('invoiceExpectedPaymentDateHoverTips')}}</p>\n              <svg-icon iconClass=\"question\" slot=\"reference\" className=\"question-icon\"></svg-icon>\n              </el-popover>\n            </li>\n            <li class=\"block-item\">\n              <span class=\"block-item-title\">{{$t('invoiceScheduledPaymentDate')}}</span>\n              <el-popover\n                placement=\"top\"\n                trigger=\"hover\"\n                width=\"200\"\n              >\n              <p>{{$t('invoiceScheduledPaymentDateHoverTips')}}</p>\n              <svg-icon iconClass=\"question\" slot=\"reference\" className=\"question-icon\"></svg-icon>\n              </el-popover>\n            </li>\n          </ul>\n        </template>\n        <template slot-scope=\"scope\">\n          <ul class=\"block-flex content-block\" v-for=\"(item, index) in scope.row.roleList\" :key=\"`${item.role_id} ${index}`\">\n            <li class=\"block-item\">\n              <el-switch\n              active-color=\"#55CC77\"\n              inactive-color=\"#B7B7B7\"\n              v-model=\"item.expected_payment_date\"\n              @change=\"checkSections\"\n              ></el-switch>\n            </li>\n            <li class=\"block-item\">\n              <el-switch\n              active-color=\"#55CC77\"\n              inactive-color=\"#B7B7B7\"\n              v-model=\"item.sche_payment_date\"\n              @change=\"checkSections\"\n              ></el-switch>\n            </li>\n          </ul>\n        </template>\n      </el-table-column>\n    </template>\n\n  </el-table>\n  <el-table v-else :data='sections' border size='mini'>\n    <el-table-column v-if='isPRType || isPriceChange || isBuyingRequestFlow' align='center' type=\"index\" width='160px' :label='`NO`'></el-table-column>\n    <el-table-column v-if='isPRType || isBuyingRequestFlow' align='center' :label=\"$t('approvalFlow.valueSection') + '(' + config.currency + ')'\">\n      <template slot-scope=\"scope\">\n        {{`${scope.row.minValue} - ${scope.row.maxValue}`}}\n      </template>\n    </el-table-column>\n\n    <el-table-column v-if=\"!isPaymentRequestFlow\" align='center' :label=\"$t('approvalFlow.finalApprovalRole')\" width=\"auto\" key=\"finalApprovalRole-block\">\n      <template slot-scope=\"scope\">\n        {{scope.row.finalRoleList.map(finalRole => ((roleList.find(role => role.id === finalRole.role_id) || { name: '' }).name)).join(' --> ')}}\n      </template>\n    </el-table-column>\n\n    <el-table-column v-else align='center' :label=\"$t('approvalFlow.finalApprovalRole')\" width=\"auto\" key=\"finalApprovalRole-block\">\n      <template slot-scope=\"scope\">\n        <div class=\"approvalRole-block\" v-for=\"(item,index) in scope.row.finalRoleList.map(finalRole => ((roleList.find(role => role.id === finalRole.role_id) || { name: '' }).name))\" :key=\"item\">\n            <p>{{item}}</p>\n            <svg-icon iconClass=\"arrow-down\" class=\"role-arrow-icon\" v-if=\"index !== scope.row.finalRoleList.length -1 \"></svg-icon>\n        </div>\n      </template>\n    </el-table-column>\n\n    <el-table-column v-if=\"isPriceChange\" :label=\"$t('approvalFlow.triggerCondition')\" width=\"635px\">\n      <template slot-scope=\"scope\" v-if=\"Array.isArray(scope.row.roleList)\">\n        <el-row v-for=\"(item, index) in scope.row.roleList\" :key=\"index\">\n          <el-checkbox-group v-if=\"Array.isArray(item.price_change_trigger_conditions)\" v-model=\"item.price_change_trigger_conditions\" disabled>\n            <el-checkbox :label=\"1\">{{$t('approvalFlow.grossMarginTarget')}}</el-checkbox>\n            <el-checkbox :label=\"2\">{{$t('approvalFlow.promotionPriceCheckPoint')}}</el-checkbox>\n            <el-checkbox :label=\"3\">{{$t('approvalFlow.originalPriceCheckPoint')}}</el-checkbox>\n          </el-checkbox-group>\n        </el-row>\n      </template>\n    </el-table-column>\n\n    <template v-if=\"isPaymentRequestFlow\" >\n       <el-table-column  align=\"center\"  width='200px' key=\"payment_price_config_column\">\n        <template slot-scope=\"scope\"  slot=\"header\">\n          {{$t('approvalFlowPriceOverwrite')}}\n          <el-popover placement=\"top\" width=\"300px\" trigger=\"hover\"  :content=\"$t('approvalFlowPriceOverwriteTip')\">\n            <svg-icon iconClass=\"question\" slot=\"reference\" className=\"question-icon\"></svg-icon>\n          </el-popover>\n        </template>\n        <template slot-scope=\"scope\">\n          <div class=\"block-flex content-block text-center\" v-for=\"(item, index) in scope.row.roleList\" :key=\"`${item.role_id} ${index}`\">\n            <span class=\"block-align-center\">{{formatPriceOverwrite(item)}}</span>\n          </div>\n        </template>\n      </el-table-column>\n\n      <el-table-column  align=\"center\"  width='200px' key=\"payment_qty_config_column\">\n        <template slot-scope=\"scope\" slot=\"header\">\n          {{$t('approvalFlowQtyOverwrite')}}\n          <el-popover placement=\"top\" width=\"300px\" trigger=\"hover\" :content=\"$t('approvalFlowQtyOverwriteTip')\">\n            <svg-icon iconClass=\"question\" slot=\"reference\" className=\"question-icon\"></svg-icon>\n          </el-popover>\n        </template>\n        <template slot-scope=\"scope\">\n          <div class=\"block-flex content-block text-center\" v-for=\"(item, index) in scope.row.roleList\" :key=\"`${item.role_id} ${index}`\">\n           <span class=\"block-align-center\">{{formatQtyOverwrite(item)}}</span>\n          </div>\n        </template>\n      </el-table-column>\n\n      <el-table-column width=\"380px\" align=\"center\" key=\"payment_date_column\">\n        <template slot=\"header\" slot-scope=\"scope\">\n          <ul class=\"block-flex\">\n            <li class=\"block-item\">\n            <span class=\"block-item-title\">{{$t('invoiceExpectedPaymentDate')}}</span>\n              <el-popover\n                placement=\"top\"\n                trigger=\"hover\"\n                width=\"200\"\n              >\n              <p>{{$t('invoiceExpectedPaymentDateHoverTips')}}</p>\n              <svg-icon iconClass=\"question\" slot=\"reference\" className=\"question-icon\"></svg-icon>\n              </el-popover>\n            </li>\n            <li class=\"block-item\">\n              <span class=\"block-item-title\">{{$t('invoiceSchedualedPaymentDate')}}</span>\n              <el-popover\n                placement=\"top\"\n                trigger=\"hover\"\n                width=\"200\"\n              >\n              <p>{{$t('invoiceSchedualedPaymentDateHoverTips')}}</p>\n              <svg-icon iconClass=\"question\" slot=\"reference\" className=\"question-icon\"></svg-icon>\n              </el-popover>\n            </li>\n          </ul>\n        </template>\n        <template slot-scope=\"scope\">\n          <ul class=\"block-flex content-block no-margin-bottom\" v-for=\"(item, index) in scope.row.roleList\" :key=\"`${item.role_id} ${index}`\">\n            <li class=\"block-item\">\n              {{!!item.expected_payment_date ? $t('commonOn') : $t('commonOff')}}\n            </li>\n            <li class=\"block-item\">\n              {{!!item.sche_payment_date ? $t('commonOn') : $t('commonOff')}}\n            </li>\n          </ul>\n        </template>\n      </el-table-column>\n    </template>\n  </el-table>\n  </template>\n  <template v-else>\n    <div id=\"approval-role-tab-con\" class=\"pms-new-ui\">\n      <div class=\"pms-clearfix\">\n        <el-row v-if='isEditApproval && canEditApprovalFlow' class=\"approval-simple-btn-wrapper\">\n          <el-button :loading=\"actionLoading\" v-if=\"sections.length > 0\" @click.native=\"onSave\" :disabled=\"config.noSectionChange\">\n            {{$t('approvalFlow.save')}}\n          </el-button>\n          <el-button class=\"white-grey\" @click.native=\"triggerChange(true)\">\n            {{$t('commonCancel')}}\n          </el-button>\n        </el-row>\n        <el-row v-else-if=\"canEditApprovalFlow\" class=\"approval-simple-btn-wrapper\">\n          <el-button  @click.native=\"triggerChange(false)\">\n            {{$t('commonEdit')}}\n          </el-button>\n        </el-row>\n        <section class=\"header-tab-section\" v-if=\"!isStockAdjustment\">\n          <el-tabs\n            v-model=\"activeTab\"\n            type=\"card\"\n            class=\"approval-ele-ui approval-wrapper-tab-card\"\n            @tab-click=\"clickTab\"\n            :before-leave=\"changeTab\"\n          >\n            <el-tab-pane\n              v-for=\"item in titleTabs\"\n              :key=\"item.value\"\n              :label=\"$t(item.label)\"\n              :name=\"item.value\"\n            ></el-tab-pane>\n          </el-tabs>\n      </section>\n      </div>\n      <section class=\"content-tab-section\" :class=\"{ 'not-tab': isStockAdjustment }\">\n        <el-form ref=\"form\" label-position=\"right\" label-width=\"190px\">\n          <el-form-item\n          class=\"role-form\"\n          :label=\"`${$t('approvalRoleConfig')}:`\"\n          v-if=\"isEditApproval && canEditApprovalFlow\">\n            <div v-if=\"sections.length\">\n            <div v-for=\"(item, index) in sections[0].roleList\" :key=\"index\" >\n              <el-select class='role-select' v-model=\"item.role_id\" @change=\"changeRoleItem\">\n                <el-option\n                  v-for=\"item in roleList\"\n                  :key=\"item.id\"\n                  :label=\"item.name\"\n                  :value=\"item.id\">\n                </el-option>\n              </el-select>\n              <i class=\"el-icon-close delete-role-btn\" @click=\"onDelRole( sections[0], index)\"></i>\n              <el-row  class='flow-arrow' v-show=\"index !== sections[0].roleList.length-1\">\n                <div class='el-icon-bottom bottom-select-icon-btn'></div>\n              </el-row>\n            </div>\n            </div>\n            <el-row @click.native=\"onAddRole(sections[0])\" class=\"role-add-con\">\n              <span class='el-icon-circle-plus-outline role-add-icon-btn'></span>\n              <span class=\"role-add-text\">{{$t('addNewApprovalRole')}}</span>\n            </el-row>\n          </el-form-item>\n\n          <el-form-item\n          class=\"role-form\"\n          :label=\"`${$t('approvalRoleConfig')}:`\"\n          v-else>\n            <div v-if=\"sections.length\">\n            <div v-for=\"(item, index) in sections[0].roleList\" :key=\"index\" >\n              <p class=\"el-select\">{{getRoleName(item.role_id)}}</p>\n              <el-row  class='flow-arrow' v-show=\"index !== sections[0].roleList.length-1\">\n                <div class='el-icon-bottom bottom-select-icon-btn'></div>\n              </el-row>\n            </div>\n            </div>\n          </el-form-item>\n\n        </el-form>\n      </section>\n    </div>\n  </template>\n\n</div>\n</template>\n\n<script>\nimport { getNotifyConfig, modifyFlowSections } from '@/api/approvalFlow';\nimport { hasPermission } from '@/utils/permission';\nimport { Permission, BMTypeList, CampaignTypeList } from '@/utils/constant';\n\nconst localOutright = 'local_outright';\nconst localConsignment = 'local_consignment';\nconst cbConsignment = 'cb_Consignment';\n\nexport default {\n  props: {\n    config: {\n      required: true,\n      type: Object\n    },\n    searchForm: {\n      required: true,\n      type: Object\n    },\n    roleList: {\n      required: true,\n      type: Array\n    }\n  },\n  data() {\n    return {\n      canEditApprovalFlow: false,\n      sections: [],\n      originSections: '',\n      actionLoading: false,\n      activeTab: 'local_outright',\n      isEditApproval: false,\n      originSearchForm: {},\n      originActiveTab: ''\n    };\n  },\n  computed: {\n    titleTabs() {\n      let result = [];\n      if (this.searchForm.flowType === '15') {\n        result = [{ value: localOutright, label: 'localOutright' },\n        { value: localConsignment, label: 'localConsignment' }, { value: cbConsignment, label: 'cbConsignment' }];\n      }\n      return result;\n    },\n    isSimpleRoleConfig() {\n      return this.searchForm.flowType === '15' || this.searchForm.flowType === '20';\n    },\n    isBuyingRequestFlow() {\n      return this.searchForm.flowType === '17';\n    },\n    isStockAdjustment() {\n      return this.searchForm.flowType === '6';\n    },\n    isPaymentRequestFlow() {\n      return this.searchForm.flowType === '14';\n    },\n    isPriceChange() {\n      return this.searchForm.flowType === '12';\n    },\n    formatBMType() {\n      return (BMTypeList.find(item => this.searchForm.bmType === item.value) || {}).label;\n    },\n    formatCampaignType() {\n      return (CampaignTypeList.find(item => this.searchForm.campaignType === item.value) || {}).label;\n    },\n    isBMType() {\n      return this.searchForm.flowType === '8' || this.searchForm.flowType === '9';\n    },\n    isPRType() {\n      return this.searchForm.flowType === '1' && this.searchForm.supplierType !== '2';\n    },\n    isUniversal() {\n      return (this.$store.getters.organizations.filter(item => item.id === this.$store.getters.organization)[0] || {}).type === 0;\n    },\n    approvalFlowTabInfo() {\n      const { purchaseType } = this.searchForm;\n      const ishiddenPurchaseType = this.isBuyingRequestFlow;\n      return `Approval Flow - ${this.searchForm.warehouse || 'All'}` + ((!ishiddenPurchaseType && purchaseType) ? `-${purchaseType}` : '');\n    }\n  },\n  created() {\n    this.canEditApprovalFlow = hasPermission(Permission.APPROVAL_FLOW_MODIFY);\n  },\n  methods: {\n    formatPriceOverwrite(row) {\n      const result = [];\n      if (row.price_overwrite_to_higher) {\n        result.push(this.$t('approvalFlowToHigher'));\n      }\n      if (row.price_overwrite_to_lower) {\n        result.push(this.$t('approvalFlowToLower'));\n      }\n      return result.length ? result.join('/') : '/';\n    },\n    formatQtyOverwrite(row) {\n      const result = [];\n      if (row.qty_overwrite_to_higher) {\n        result.push(this.$t('approvalFlowToHigher'));\n      }\n      if (row.qty_overwrite_to_lower) {\n        result.push(this.$t('approvalFlowToLower'));\n      }\n      return result.length ? result.join('/') : '/';\n    },\n    changeTab(activeName, oldActiveName) {\n      this.originActiveTab = oldActiveName;\n    },\n    clickTab(value) {\n      this.originSearchForm = JSON.parse(JSON.stringify(this.searchForm));\n      if (this.activeTab === localOutright) {\n        this.searchForm.purchaseType = 'Outright';\n        this.searchForm.supplierType = 1;\n      } else if (this.activeTab === localConsignment) {\n        this.searchForm.purchaseType = 'Consignment';\n        this.searchForm.supplierType = 1;\n      } else if (this.activeTab === cbConsignment) {\n        this.searchForm.purchaseType = 'Consignment';\n        this.searchForm.supplierType = 2;\n      }\n      this.commonSelectChange(this.activeTab, () => {\n        this.searchForm = this.originSearchForm;\n        this.activeTab = this.originActiveTab;\n      });\n    },\n    resetDetail() {\n      this.$emit('setSearchFrom', this.searchForm);\n      this.$emit('resetDetail');\n    },\n    commonSelectChange(tips, catchFun) {\n      if (this.config.noSectionChange) {\n        this.resetDetail();\n        return true;\n      }\n      this.$confirm(`The modify will not save，confirm to switch to other tab?`, 'Warning', {\n        showCancel: true\n      }).then(resp => {\n        this.resetDetail();\n      }).catch(() => {\n        catchFun && typeof catchFun === 'function' && catchFun();\n      });\n      this.setSearchFrom();\n    },\n    triggerChange(isCancel) {\n      if (isCancel && this.originSections.length) {\n        this.sections = JSON.parse(this.originSections);\n        // 由于 JSON.stringify 会将 Infinity 转为 null，所以要修改回来\n        if (this.sections.length > 0) {\n          this.sections[0].maxValue = Infinity;\n        }\n      }\n      this.isEditApproval = !this.isEditApproval;\n      this.$emit('changeEditApproval', this.isEditApproval);\n    },\n    getRoleName(id) {\n      return this.roleList.find(item => item.id === id).name;\n    },\n    checkSections() {\n      const flag = JSON.stringify(this.sections) === this.originSections;\n      this.$emit('checkSections', flag);\n    },\n    onInitSections() {\n      if (this.sections.length > 0) {\n        return;\n      }\n      const roleListItem = { role_id: this.roleList[0].id };\n      const finalRoleListItem = { role_id: this.roleList[0].id };\n      if (this.isPriceChange) {\n        roleListItem.price_change_trigger_conditions = [];\n        finalRoleListItem.price_change_trigger_conditions = [];\n      }\n      if (this.isPaymentRequestFlow) {\n        roleListItem.expected_payment_date = false;\n        roleListItem.sche_payment_date = false;\n        roleListItem.price_overwrite_to_higher = false;\n        roleListItem.price_overwrite_to_lower = false;\n        roleListItem.qty_overwrite_to_higher = false;\n        roleListItem.qty_overwrite_to_lower = false;\n\n        finalRoleListItem.expected_payment_date = false;\n        finalRoleListItem.sche_payment_date = false;\n        finalRoleListItem.price_overwrite_to_higher = false;\n        finalRoleListItem.price_overwrite_to_lower = false;\n        finalRoleListItem.qty_overwrite_to_higher = false;\n        finalRoleListItem.qty_overwrite_to_lower = false;\n      }\n      this.sections.push({\n        minValue: 0,\n        maxValue: Infinity,\n        roleList: [roleListItem],\n        finalRoleList: [finalRoleListItem]\n      });\n      this.fixSectionMinMax();\n      this.setFirstLastFlag();\n      this.checkSections();\n    },\n    validateSections() {\n      if (this.sections.length === 0) {\n        this.$message.error('sections is empty');\n        return false;\n      }\n      for (let i = 0; i < this.sections.length; i++) {\n        // check minValue < maxValue\n        if (this.sections[i].minValue >= this.sections[i].maxValue) {\n          this.$message.error('section: ' + (i + 1) + ': minValue should less than maxValue');\n          return false;\n        }\n        // check first minValue === 0\n        if (i === 0 && this.sections[i].minValue !== 0) {\n          this.$message.error('section: ' + (i + 1) + ': first minValue should equal to 0');\n          return false;\n        }\n        // check last maxValue === Infinity\n        if (i === this.sections.length - 1 && this.sections[i].maxValue !== Infinity) {\n          this.$message.error('section: ' + (i + 1) + ': last maxValue should equal to Infinity');\n          return false;\n        }\n        // check curSection.minValue === preSection.maxValue\n        if (i > 0 && this.sections[i].minValue !== this.sections[i - 1].maxValue) {\n          this.$message.error('section: ' + (i + 1) + ': minValue should equal to pre section maxValue');\n          return false;\n        }\n        // check roleList not empty\n        if (this.sections[i].finalRoleList.length === 0) {\n          this.$message.error('section: ' + (i + 1) + ': approval role is empty');\n          return false;\n        }\n        // check each role unique\n        const roleSet = new Set();\n        this.sections[i].finalRoleList.map(item => roleSet.add(item.role_id));\n        if (roleSet.size !== this.sections[i].finalRoleList.length) {\n          this.$message.error('section: ' + (i + 1) + ': roles in a section can not be the same');\n          return false;\n        }\n        // check if preSection is prefix of curSection\n        if (i > 0) {\n          if (this.sections[i].finalRoleList.length <= this.sections[i - 1].finalRoleList.length) {\n            this.$message.error('section: ' + (i + 1) + ': roles in this section are fewer than pre-section');\n            return false;\n          }\n          for (let j = 0; j < this.sections[i - 1].length; j++) {\n            if (this.sections[i].finalRoleList[j] !== this.sections[i - 1].finalRoleList[j]) {\n              this.$message.error('section: ' + (i + 1) + ': roles in this section are not prefix of pre-section');\n              return false;\n            }\n          }\n        }\n      }\n      return true;\n    },\n    onSave() {\n      if (this.actionLoading || !this.validateSections()) {\n        return;\n      }\n      if (this.isStockAdjustment) {\n        this.$confirm(this.$t('approvalFlowStockAdjustmentSubmitTips'), this.$t('commonTips'), {\n          confirmButtonText: this.$t('commonConfirm'),\n          cancelButtonText: this.$t('commonCancel')\n        }).then(() => {\n          this._onSave();\n        }).catch(() => {});\n        return;\n      }\n      this._onSave();\n    },\n    _onSave() {\n      const params = {\n        flow_config_id: this.config.flowID,\n        sections: this.sections.map((item, index) => {\n          let finalRoleList = item.finalRoleList;\n          if (this.isPriceChange) {\n            finalRoleList = item.finalRoleList.map(role => {\n              if (Array.isArray(role.price_change_trigger_conditions) && role.price_change_trigger_conditions.length < 1) {\n                return Object.assign({}, role, { price_change_trigger_conditions: [0] });\n              } else {\n                return role;\n              }\n            });\n          }\n          if (this.isPaymentRequestFlow) {\n            finalRoleList = item.finalRoleList.map(role => {\n              return {\n                role_id: role.role_id,\n                expected_payment_date: !!role.expected_payment_date,\n                sche_payment_date: !!role.sche_payment_date,\n                price_overwrite_to_higher: Number(role.price_overwrite_to_higher),\n                price_overwrite_to_lower: Number(role.price_overwrite_to_lower),\n                qty_overwrite_to_higher: Number(role.qty_overwrite_to_higher),\n                qty_overwrite_to_lower: Number(role.qty_overwrite_to_lower)\n              };\n            });\n          }\n          return {\n            sequence: index + 1,\n            role_list: finalRoleList,\n            section: {\n              min_value: item.minValue,\n              max_value: item.isLast ? (this.$store.getters.flowMaxValue || 30000000000) : item.maxValue\n            }\n          };\n        })\n      };\n      this.actionLoading = true;\n      modifyFlowSections(params).then(resp => {\n        this.actionLoading = false;\n        if (resp.status !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.$message.success(this.$t('commonSubmitSuccess'));\n          this.isEditApproval = false;\n          this.$emit('changeEditApproval', this.isEditApproval);\n          this.originSections = JSON.stringify(this.sections);\n          this.checkSections();\n        }\n      }).catch(() => { this.actionLoading = false; });\n    },\n    fixSectionMinMax() {\n      // make first section's minValue = 0, last section's maxValue = Infinity, each section.minValue == preSection.maxValue\n      this.sections.forEach((section, idx, sections) => {\n        if (idx === 0) {\n          section.minValue = 0;\n        }\n        if (idx === sections.length - 1) {\n          section.maxValue = Infinity;\n        }\n        if (idx > 0) {\n          section.minValue = sections[idx - 1].maxValue;\n        }\n      });\n    },\n    onAddSection(row, idx) {\n      if (this.roleList.length <= 0) {\n        this.$message.error('Please add some roles first!');\n        return;\n      }\n      const roleListItem = { role_id: this.roleList[0].id };\n      const finalRoleListItem = { role_id: this.roleList[0].id };\n      if (this.isPriceChange) { // 应该不生效\n        roleListItem.price_change_trigger_conditions = [];\n        finalRoleListItem.price_change_trigger_conditions = [];\n      }\n      const newSection = {\n        minValue: this.sections[idx].maxValue,\n        maxValue: this.sections[idx].maxValue,\n        roleList: [roleListItem],\n        finalRoleList: [finalRoleListItem]\n      };\n      if (idx === this.sections.length - 1) {\n        row.maxValue = row.minValue + 100000;\n        newSection.minValue = row.maxValue;\n        this.sections.splice(idx, 1, row);\n      }\n      this.sections.splice(idx + 1, 0, newSection);\n      this.fixSectionMinMax();\n      this.fixFinalRoleList();\n      this.setFirstLastFlag();\n      this.checkSections();\n    },\n    setFirstLastFlag() {\n      // set the isFirst and isLast flag in each section\n      this.sections.forEach((section, idx, sections) => {\n        section.isFirst = false;\n        section.isLast = false;\n        if (idx === 0) {\n          section.isFirst = true;\n        }\n        if (idx === sections.length - 1) {\n          section.isLast = true;\n        }\n      });\n    },\n    onDelSection(idx) {\n      this.sections.splice(idx, 1);\n      this.fixSectionMinMax();\n      this.fixFinalRoleList();\n      this.setFirstLastFlag();\n      this.checkSections();\n    },\n    onSectionValueChange(row, leftRight) {\n      const idx = this.sections.indexOf(row);\n      if (leftRight === 0) {\n        this.sections[idx - 1].maxValue = row.minValue;\n      } else {\n        this.sections[idx + 1].minValue = row.maxValue;\n      }\n      this.checkSections();\n    },\n    onDelRole(row, index) {\n      if (row.roleList.length <= 0) {\n        return;\n      }\n      row.roleList.splice(index, 1);\n      this.fixFinalRoleList();\n      if (this.isPaymentRequestFlow && this.sections.length) {\n        const firstApproveRole = this.sections[0].roleList[0];\n        if (firstApproveRole) {\n          firstApproveRole.price_overwrite_to_higher = false;\n          firstApproveRole.price_overwrite_to_lower = false;\n          firstApproveRole.qty_overwrite_to_higher = false;\n          firstApproveRole.qty_overwrite_to_lower = false;\n        }\n      }\n      this.checkSections();\n    },\n    changePriceChangeConditions(conditions) {\n      conditions = conditions.sort((prev, next) => {\n        return prev - next;\n      });\n      this.checkSections();\n    },\n    changeRoleItem() {\n      this.fixFinalRoleList();\n      this.checkSections();\n    },\n    fixFinalRoleList() {\n      this.sections.forEach((section, idx, sections) => {\n        if (idx === 0) {\n          section.finalRoleList = section.roleList;\n        } else {\n          section.finalRoleList = sections[idx - 1].finalRoleList.concat(section.roleList);\n        }\n      });\n    },\n    showConfigBtn(roleID) {\n      if (this.searchForm.flowType !== '1') {\n        return false;\n      }\n      const role = this.roleList.filter(role => role.id === roleID)[0] || { type: 0 };\n      if (role.type === 0) {\n        return this.isUniversal;\n      } else {\n        return true;\n      }\n    },\n    showCategoryConfig(roleID) {\n      const params = {\n        role_id: roleID,\n        flow_config_id: this.config.flowID\n      };\n      getNotifyConfig(params).then(resp => {\n        if (resp.status !== 0 && resp.status !== 114) {\n          this.$message.error(resp.info);\n        } else {\n          const data = resp.data || {};\n          const startTime = !data.is_realtime && data.period ? `${this.formatTime(data.period.begin_hour)}:${this.formatTime(data.period.begin_minute)}` : '';\n          const endTime = !data.is_realtime && data.period ? `${this.formatTime(data.period.end_hour)}:${this.formatTime(data.period.end_minute)}` : '';\n          const categoryConfigData = Object.assign({}, data, {\n            roleID,\n            interval_hours: data.interval_hours || '',\n            workday_type: data.workday_type || '',\n            is_realtime: !!data.is_realtime,\n            startTime,\n            endTime,\n            universalRole: (this.roleList.filter(role => role.id === roleID)[0] || { type: 0 }).type === 0\n          });\n          this.$emit('showConfigDialog', categoryConfigData);\n          this.checkSections();\n        }\n      });\n    },\n    formatTime(time) {\n      return time < 10 ? `0${time}` : time;\n    },\n    onAddRole(row) {\n      if (!row) {\n        this.onInitSections();\n        return;\n      }\n      if (this.roleList.length <= 0) {\n        this.$message.error('Please add some roles first!');\n        return;\n      }\n      const newRoleItem = {\n        role_id: this.roleList[0].id\n      };\n      if (this.isPriceChange) {\n        newRoleItem.price_change_trigger_conditions = [];\n      }\n      if (this.isPaymentRequestFlow) {\n        newRoleItem.expected_payment_date = false;\n        newRoleItem.sche_payment_date = false;\n\n        newRoleItem.price_overwrite_to_higher = false;\n        newRoleItem.price_overwrite_to_lower = false;\n        newRoleItem.qty_overwrite_to_higher = false;\n        newRoleItem.qty_overwrite_to_lower = false;\n      }\n      row.roleList.push(newRoleItem);\n      this.fixFinalRoleList();\n      this.checkSections();\n    },\n    resetSections() {\n      this.sections = [];\n      this.originSections = '';\n      this.checkSections();\n    },\n    setSectionFromApprovalDetail(sections) {\n      this.sections = sections.map((section, idx, sections) => {\n        let roleList;\n        if (idx === 0) {\n          roleList = section['role_list'];\n        } else {\n          roleList = section['role_list'].slice(sections[idx - 1]['role_list'].length, section['role_list'].length);\n        }\n        return {\n          minValue: section['section']['min_value'],\n          maxValue: section['section']['max_value'],\n          roleList: roleList.map((role, index) => {\n            if (this.isPriceChange && role.price_change_trigger_conditions.includes(0)) {\n              role.price_change_trigger_conditions.splice(role.price_change_trigger_conditions.indexOf(0), 1);\n            }\n            if (this.isPaymentRequestFlow) {\n              this.$set(role, 'price_overwrite_to_higher', index === 0 ? false : Boolean(role.price_overwrite_to_higher));\n              this.$set(role, 'price_overwrite_to_lower', index === 0 ? false : Boolean(role.price_overwrite_to_lower));\n              this.$set(role, 'qty_overwrite_to_higher', index === 0 ? false : Boolean(role.qty_overwrite_to_higher));\n              this.$set(role, 'qty_overwrite_to_lower', index === 0 ? false : Boolean(role.qty_overwrite_to_lower));\n            }\n            return role;\n          }),\n          finalRoleList: section['role_list'].map(role => {\n            if (this.isPriceChange && role.price_change_trigger_conditions.includes(0)) {\n              role.price_change_trigger_conditions.splice(role.price_change_trigger_conditions.indexOf(0), 1);\n            }\n            if (this.isPaymentRequestFlow) {\n              role.price_overwrite_to_higher = Boolean(role.price_overwrite_to_higher);\n              role.price_overwrite_to_lower = Boolean(role.price_overwrite_to_lower);\n              role.qty_overwrite_to_higher = Boolean(role.qty_overwrite_to_higher);\n              role.qty_overwrite_to_lower = Boolean(role.qty_overwrite_to_lower);\n            }\n            return role;\n          })\n        };\n      });\n\n      this.fixSectionMinMax();\n      this.fixFinalRoleList();\n      this.setFirstLastFlag();\n      this.originSections = JSON.stringify(this.sections);\n      this.checkSections();\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.approveFlow-wrapper{\n  .flow-info {\n    width: fit-content;\n    height: 36px;\n    font-size: 14px;\n    line-height: 36px;\n    padding: 0 50px 0 30px;\n    background-color: #7DA3ED;\n    color: #fff;\n    font-weight: 600;\n  }\n  .approval-btn-wrapper{\n    float:right;\n    z-index: 1;\n  }\n  .list-btn {\n    width: auto;\n    font-size: 14px;\n    height: 32px;\n    line-height: 32px;\n    padding: 0px 16px;\n    color: #fff;\n    background-color: #3d6ed1;\n    border-radius: 2px;\n  }\n  .role-select-warpper {\n    display:flex;\n    align-items: center;\n    margin-top:16px;\n    .role-select{\n      flex:1;\n    }\n    .role-delete-icon {\n      display: inline-block;\n      width: 18px;\n      height: 18px;\n      margin-left: 4px;\n      line-height: 18px;\n      border-radius: 50%;\n      text-align: center;\n      background-color: #C0C4CC;\n      color: #fff;\n      font-size: 14px;\n      font-weight: 700;\n    }\n  }\n  .role-select {\n    max-width: 240px;\n    height: 32px;\n    line-height: 32px;\n  }\n  .add-role-row {\n    margin-top: 16px;\n    .add-role-icon {\n      font-size: 16px;\n      color: #3D62D1;\n      font-weight: 700;\n    }\n    .add-role-text {\n      margin-left: 3px;\n      font-size: 14px;\n      color: #3D62D1;\n    }\n  }\n  .icon-disabled {\n    color: #c0c4cc;\n    cursor: not-allowed;\n  }\n  .action-item-btn {\n    display: inline-block;\n    margin-top: 16px;\n    font-size: 13px;\n    color: #fff;\n    background-color: #3d6ed1;\n    height: 32px;\n    width: 120px;\n    cursor: pointer;\n    line-height: 32px;\n    text-align: center;\n    cursor: pointer;\n    border-radius: 3px;\n    vertical-align: middle;\n    font-weight: bolder;\n    padding: 0;\n    border: 0;\n    font-weight: 400;\n    font-family: \"Helvetica Light\",\"Helvetica Neue Light\",Helvetica,Arial,sans-serif;\n  }\n  .action-list {\n    display: inline-block;\n    vertical-align: 50px;\n  }\n  .action-btn-list {\n    margin-bottom: 5px;\n  }\n  .trigger-condition-block{\n    height: 36px;\n    width: 0;\n    background-color: transparent;\n    visibility: hidden\n  }\n  .approvalRole-block{\n    height:48px;\n    vertical-align: baseline;\n  }\n  .block-flex{\n    display: flex;\n    align-items: center;\n    &.content-block {\n      height: 48px;\n      &:last-child {\n        margin-bottom: 24px;\n      }\n    }\n    .block-item{\n      flex: 1;\n    }\n    .block-item-title {\n      font-size: 12px;\n      font-weight: bold;\n    }\n    .question-icon{\n      width: 14px;\n      height: 14px;\n\n    }\n  }\n  .text-center{\n    text-align: center;\n  }\n  .block-align-center{\n    margin: auto;\n  }\n\n}\n</style>\n<style lang=\"scss\">\n.approveFlow-wrapper{\n  .el-table .cell {\n    word-break: break-word;\n    .role-select .el-input__inner {\n      height: 32px;\n      line-height: 32px;\n    }\n  }\n}\n\n.items-center .input-number.el-input-number.is-without-controls {\n  width: 40%;\n}\n\n#approval-role-tab-con {\n  .approval-simple-btn-wrapper {\n    float: right;\n    z-index: 1;\n    // bottom: 5px;\n    .edit-btn, .save-btn {\n      background: #3D6ED1;\n      border-radius: 2px;\n      font-family: Helvetica;\n      font-size: 14px;\n      color: #FFFFFF;\n    }\n    .save-btn.is-disabled {\n      color: #b3b3b3;\n      background-color: #fafafa;\n      border-color: #b3b3b3;\n    }\n    .cancel-btn {\n      background: #FFFFFF;\n      border: 1px solid #D9D9D9;\n      border-radius: 2px;\n      font-family: Helvetica;\n      font-size: 14px;\n      color: rgba(0,0,0,0.65);\n    }\n  }\n  .content-tab-section {\n    border: 1px solid #DCDFE6;\n    margin-top: -15px;\n    border-top-width: 0;\n    padding-top: 15px;\n    margin-top: 10px;\n    &.not-tab {\n      border-top-width: 1px;\n    }\n  }\n  .el-tabs__item {\n    margin-bottom: 0px;\n    font-family: Helvetica;\n    font-size: 14px;\n    color: #333333;\n    &.is-active {\n      font-family: Helvetica-Bold;\n      font-size: 14px;\n      color: #3D62D1;\n    }\n  }\n  .bottom-select-icon-btn {\n    width: 20px;\n    height: 20px;\n    background: #3D6ED1;\n    color: #ffffff;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  .el-select, .flow-arrow {\n    width: 240px;\n    display: flex;\n    justify-content: center;\n  }\n  .el-select{\n    display: inline-block;\n    text-align: center;\n  }\n  .el-select input {\n    height: 32px;\n    padding-left: 10px;\n  }\n  .flow-arrow {\n    padding: 4px 0;\n  }\n  .role-add-con {\n    width: 260px;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    margin-top: 10px;\n    margin-bottom: 100px;\n  }\n  .role-add-icon-btn {\n    font-size: 16px;\n    background: rgba(255,255,255,.5);\n    color: #3D62D1;\n  }\n  .role-add-text {\n    font-family: Helvetica-Bold;\n    font-size: 14px;\n    color: #3D62D1;\n    letter-spacing: 0;\n    line-height: 14px;\n    margin-left: 5px;\n  }\n  .delete-role-btn {\n    margin-left: 10px;\n    padding: 2px;\n    background: #c0c4cc;\n    border-radius: 50%;\n    border: none;\n    color: #ffffff;\n    cursor: pointer;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/ApproveList/checkInboundDialog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/ApproveList/exportHistoryDialog.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"exportHistory\" is not PascalCase.","line":33,"column":9,"nodeType":"Literal","endLine":33,"endColumn":24,"fix":{"range":[1178,1191],"text":"ExportHistory"}},{"ruleId":"vue/no-deprecated-props-default-this","severity":2,"message":"Props default value factory functions no longer have access to `this`.","line":87,"column":20,"nodeType":"ThisExpression","messageId":"deprecated","endLine":87,"endColumn":24},{"ruleId":"vue/no-deprecated-props-default-this","severity":2,"message":"Props default value factory functions no longer have access to `this`.","line":87,"column":42,"nodeType":"ThisExpression","messageId":"deprecated","endLine":87,"endColumn":46},{"ruleId":"vue/no-deprecated-props-default-this","severity":2,"message":"Props default value factory functions no longer have access to `this`.","line":87,"column":79,"nodeType":"ThisExpression","messageId":"deprecated","endLine":87,"endColumn":83},{"ruleId":"vue/no-deprecated-props-default-this","severity":2,"message":"Props default value factory functions no longer have access to `this`.","line":92,"column":20,"nodeType":"ThisExpression","messageId":"deprecated","endLine":92,"endColumn":24},{"ruleId":"vue/no-deprecated-props-default-this","severity":2,"message":"Props default value factory functions no longer have access to `this`.","line":92,"column":28,"nodeType":"ThisExpression","messageId":"deprecated","endLine":92,"endColumn":32},{"ruleId":"vue/no-deprecated-props-default-this","severity":2,"message":"Props default value factory functions no longer have access to `this`.","line":93,"column":20,"nodeType":"ThisExpression","messageId":"deprecated","endLine":93,"endColumn":24},{"ruleId":"vue/no-deprecated-props-default-this","severity":2,"message":"Props default value factory functions no longer have access to `this`.","line":96,"column":20,"nodeType":"ThisExpression","messageId":"deprecated","endLine":96,"endColumn":24},{"ruleId":"vue/no-deprecated-props-default-this","severity":2,"message":"Props default value factory functions no longer have access to `this`.","line":110,"column":20,"nodeType":"ThisExpression","messageId":"deprecated","endLine":110,"endColumn":24},{"ruleId":"vue/no-deprecated-props-default-this","severity":2,"message":"Props default value factory functions no longer have access to `this`.","line":113,"column":19,"nodeType":"ThisExpression","messageId":"deprecated","endLine":113,"endColumn":23},{"ruleId":"vue/no-deprecated-props-default-this","severity":2,"message":"Props default value factory functions no longer have access to `this`.","line":115,"column":26,"nodeType":"ThisExpression","messageId":"deprecated","endLine":115,"endColumn":30},{"ruleId":"vue/no-deprecated-props-default-this","severity":2,"message":"Props default value factory functions no longer have access to `this`.","line":125,"column":38,"nodeType":"ThisExpression","messageId":"deprecated","endLine":125,"endColumn":42},{"ruleId":"vue/no-deprecated-props-default-this","severity":2,"message":"Props default value factory functions no longer have access to `this`.","line":127,"column":17,"nodeType":"ThisExpression","messageId":"deprecated","endLine":127,"endColumn":21},{"ruleId":"vue/no-deprecated-destroyed-lifecycle","severity":2,"message":"The `beforeDestroy` lifecycle hook is deprecated. Use `beforeUnmount` instead.","line":267,"column":3,"nodeType":"Identifier","messageId":"deprecatedBeforeDestroy","endLine":267,"endColumn":16,"suggestions":[{"messageId":"insteadBeforeUnmount","fix":{"range":[7917,7930],"text":"beforeUnmount"},"desc":"Instead, change to `beforeUnmount`."}]}],"errorCount":14,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <el-dialog\n    @close=\"closeDialog\"\n    :visible.sync=\"historyVisible\"\n    :title=\"$t(title) || (isUplodHistory ? $t('userRole.userList.uploadHistory') : $t('purchaseRequest.exportHistory'))\"\n  >\n    <list-view :dataList=\"dataList\" v-loading=\"loading || outsideLoading\" :config=\"{ align: 'center' }\" :tableSchema=\"tableSchema\">\n    </list-view>\n    <section v-if=\"historyVisible\" class=\"pagination-center\">\n      <el-pagination\n        background\n        layout=\"sizes, prev, pager, next\"\n        :current-page=\"searchParams.page_no\"\n        :total.sync=\"total\"\n        :page-sizes=\"[10, 20, 50, 100]\"\n        :page-size=\"searchParams.count\"\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handlePageChange\"\n      ></el-pagination>\n    </section>\n  </el-dialog>\n</template>\n\n<script>\nimport ListView from '@/components/ApproveList/list';\nimport { getExportHistory, getExportHistoryForFBS, downloadHistoryResult } from '@/api/history';\nimport { downloadBlobFile } from '@/utils/downloadFile';\nimport moment from 'moment';\nimport { ExportTaskTypeMap, getContentType } from '@/utils/constant';\n\n// TODO: 这个文件用于多种场景，应该把业务依赖抽离\nexport default {\n  name: 'exportHistory',\n  components: {\n    ListView\n  },\n  data() {\n    return {\n      historyVisible: false,\n      loading: false,\n      total: 0,\n      dataList: [],\n      searchParams: {\n        page_no: 1,\n        count: 10\n      },\n      timeID: null\n    };\n  },\n  props: {\n    visible: {\n      type: Boolean, // 是否可见\n      default: false\n    },\n    interval: { // 轮询更新时间间隔，0则不轮询\n      type: Number,\n      default: 0\n    },\n    taskType: { // 如果是export 需要扩展补充ExportTaskTypeMap常量，和filename有关\n      // type: Number,\n      required: true\n    },\n    isUplodHistory: {\n      type: Boolean,\n      default: false\n    },\n    getFileName: { // 如果有则优先级更高，否则采用默认值\n      type: Function,\n      required: false\n    },\n    source: { // B2C、FBS\n      type: String,\n      default: 'B2C'\n    },\n    needErrorFile: { // 如果=true，则通过是否有result_link值来判断是否显示下载按钮\n      default: false,\n      type: Boolean\n    },\n    title: { // 如果有值，则优先取传入值\n      default: ''\n    },\n    tableSchema: {\n      type: Array,\n      default() {\n        return [\n          {\n            label: this.isUplodHistory ? this.$t('approvalFlow.uploadTime') : this.$t('purchaseOrder.createTime'),\n            field: 'ctime',\n            render: (schema, row) => (row.ctime ? moment(row.ctime * 1000).format('YYYY-MM-DD HH:mm') : '/')\n          },\n          {\n            label: this.$t(this.isUplodHistory ? 'filename' : 'userRole.userList.username'),\n            field: this.isUplodHistory ? 'file_name' : 'operator'\n          },\n          {\n            label: this.$t('userRole.userList.status'),\n            field: 'status',\n            type: 'enum',\n            options: [\n              { label: 'waiting', value: 0 }, // 兼容isc状态\n              { label: 'Processing', value: 1 },\n              { label: 'Success', value: 2 },\n              { label: 'Fail', value: 3 },\n              { label: 'Download', value: 4 }, // 兼容isc状态\n              { label: 'Partial Success', value: 12 }\n            ]\n          },\n          {\n            columnKey: 'action',\n            label: this.$t('purchaseRequest.action'),\n            width: '180px',\n            render: (schema, row) => {\n              if (this.needErrorFile) {\n                if (!row.result_link) return null;\n              } else if (this.isUplodHistory) {\n                if (![3, 12].includes(row.status)) return null;\n              } else if (row.status !== 2) {\n                return null;\n              }\n              return [\n                'el-button',\n                {\n                  class: 'action-btn',\n                  props: { type: 'default', size: 'mini' },\n                  on: { click: () => this.downloadResult(row) }\n                },\n                this.$t('purchaseRequest.download')\n              ];\n            }\n          }\n        ];\n      }\n    },\n    isOutsideData: { // 是否是外源数据\n      type: Boolean,\n      default: false\n    },\n    outsideData: {\n      // 外部数据源，是一个数组\n      type: Array,\n      default: () => []\n    },\n    outsideTotal: {\n      // 外部数据源总共条数\n      type: Number,\n      default: 0\n    },\n    outsideLoading: {\n      type: Boolean,\n      default: false\n    },\n    customDownloadAction: { // 是否自定义download事件\n      type: Boolean,\n      default: false\n    }\n  },\n  methods: {\n    getHistory(params = {}) {\n      if (this.isOutsideData) {\n        this.$emit('getHistoryData', this.searchParams);\n      } else {\n        this.loading = true;\n        let func = () => Promise.resolve();\n        if (this.source === 'B2C') {\n          func = getExportHistory;\n        } else {\n          func = getExportHistoryForFBS;\n        }\n        func({ ...params, task_type: this.taskType })\n          .then(resp => {\n            if (resp.retcode !== 0) {\n              this.$message.error(resp.info);\n            } else {\n              this.dataList = resp.data.task_history_list || [];\n              this.total = resp.data.total || 0;\n            }\n            this.loading = false;\n          })\n          .catch(() => {\n            this.$message.error(`Server error, please retry and report to dev if retry doesn't work.`);\n            this.loading = false;\n          });\n      }\n    },\n    handleSizeChange(count) {\n      this.searchParams.page_no = 1;\n      this.searchParams.count = count;\n      this.getHistory(this.searchParams);\n    },\n    handlePageChange(pageIndex) {\n      this.searchParams.page_no = pageIndex;\n      this.getHistory(this.searchParams);\n    },\n    closeDialog() {\n      this.$emit('close');\n    },\n    downloadResult(row) {\n      if (this.customDownloadAction) { // 自定义下载事件\n        this.$emit('download', row);\n        return false;\n      }\n      downloadHistoryResult({ task_id: row.task_id, result_link: row.result_link })\n        .then(resp => {\n          if (resp.type === 'application/json') {\n            // 下载失败的出现错误提示\n            const reader = new FileReader();\n            reader.onloadend = () => {\n              const result = JSON.parse(reader.result);\n              if (result.retcode !== 0) {\n                this.$message.error(result.info);\n              }\n            };\n            reader.readAsText(resp);\n          } else {\n            // console.log(resp);\n            let fileName = 'result';\n            if (typeof this.getFileName === 'function') {\n              fileName = this.getFileName(row, resp.type);\n            } else if (this.isUplodHistory) {\n              fileName = `${row.file_name}_result.${getContentType(resp.type)}`;\n            } else if (this.source === 'B2C') {\n              fileName = `${ExportTaskTypeMap[this.taskType]}_${moment().format('YYYYMMDDHHmmss')}.${getContentType(resp.type)}`;\n            } else {\n              fileName = `${this.taskType}_${moment().format('YYYYMMDDHHmmss')}.${getContentType(resp.type)}`;\n            }\n            downloadBlobFile(resp, fileName);\n          }\n        })\n        .catch(e => {\n          this.$message.error('Download Failed');\n        });\n    }\n  },\n  watch: {\n    '$props.visible': {\n      handler(curr, prev) {\n        this.historyVisible = curr;\n        this.searchParams = {\n          page_no: 1,\n          count: 10\n        };\n        if (curr) {\n          this.getHistory(this.searchParams);\n        }\n        if (curr && this.interval) {\n          this.timeID = setInterval(() => {\n            if (this.dataList.some(item => item.status === 1)) {\n              this.getHistory(this.searchParams);\n            }\n          }, this.interval);\n        } else if (!curr && this.interval) {\n          clearInterval(this.timeID);\n        }\n      },\n      immediate: true\n    },\n    outsideData: {\n      handler(nv, ov) {\n        if (nv) {\n          this.dataList = this.outsideData;\n          this.total = this.outsideTotal;\n        }\n      },\n      immediate: true\n    }\n  },\n  beforeDestroy() {\n    clearInterval(this.timeID);\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.pagination-center {\n  margin-top: 20px;\n  display: flex;\n  justify-content: center;\n}\n/deep/ .el-dialog__header {\n  text-align: left;\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/ApproveList/index.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"approveList\" is not PascalCase.","line":191,"column":9,"nodeType":"Literal","endLine":191,"endColumn":22,"fix":{"range":[6783,6794],"text":"ApproveList"}},{"ruleId":"vue/no-unused-components","severity":2,"message":"The \"tableComps\" component has been registered but not used.","line":242,"column":5,"nodeType":"Property","endLine":242,"endColumn":15},{"ruleId":"vue/no-deprecated-destroyed-lifecycle","severity":2,"message":"The `beforeDestroy` lifecycle hook is deprecated. Use `beforeUnmount` instead.","line":245,"column":3,"nodeType":"Identifier","messageId":"deprecatedBeforeDestroy","endLine":245,"endColumn":16,"suggestions":[{"messageId":"insteadBeforeUnmount","fix":{"range":[8134,8147],"text":"beforeUnmount"},"desc":"Instead, change to `beforeUnmount`."}]}],"errorCount":3,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div id=\"app-container\">\n    <el-container>\n      <el-header class=\"approve-header\">\n        <slot name=\"header\">\n          <h2>{{ $t('purchaseRequest.prListTitle') }}</h2>\n        </slot>\n        <div class=\"create-btn\" v-if=\"!createHidden && canCreatePR\" @click=\"onCreatePR\">\n          <span class=\"sprite-entry-add add-btn\"></span>\n          {{ $t('purchaseRequest.newRequest') }}\n        </div>\n      </el-header>\n      <el-main class=\"approve-list\">\n        <search-form\n          :exportBtns=\"exportBtns\"\n          :searchSchema=\"computedSearchSchema\"\n          :actionSchema=\"searchActionSchema\"\n          :firstShowCount=\"firstShowCount\"\n          :merchantType=\"merchantType\"\n          @exportGroup=\"onExportGroup\"\n          @search=\"onEmitSearch\"\n          @exportAction=\"onExport\"\n          @massAction=\"onMassAction\"\n          @selectChange=\"onSelectChange\"\n          @exportHistoryAction=\"onExportHistory\"\n          :initShowMore=\"computedShowMore\"\n          @toggleShowMore=\"toggleShowMore\"\n        >\n          <template slot=\"option-box-left\">\n            <upload-btn-group\n              v-if=\"activeTab === 'poList'\"\n              class=\"po-upload-btn-group\"\n              ref=\"uploadBtnGroup\"\n              :actionUrl=\"actionUrl\"\n              :tableSchema=\"uploadTableSchema\"\n              :searchParams=\"uploadTableSeachParams\"\n              :loading=\"uploadTableLoading\"\n              :dataList=\"uploadTableList\"\n              :uploadParams=\"uploadParams\"\n              :interval=\"10000\"\n              showHistoryImmediate\n              @onBtnClick=\"handleDropDownClick\"\n              @onHistory=\"handleHistoryDialog\"\n            ></upload-btn-group>\n            <div v-if=\"activeTab === 'myPR'\" class=\"mass-upload\">\n              <span class=\"download-btn\">\n                <i class=\"el-icon-download\" @click=\"onDownTmp\">{{ $t('purchaseRequest.template') }}</i>\n              </span>\n\n              <el-upload\n                class=\"upload-btn el-button--medium\"\n                action=\"/api/purchase_request_list_sku_upload/\"\n                :with-credentials=\"true\"\n                :multiple=\"true\"\n                :limit=\"15\"\n                ref=\"massUpload\"\n                :show-file-list=\"false\"\n                :on-success=\"onUploadSuccess\"\n                :on-error=\"onUploadError\"\n                :on-exceed=\"onUploadMaxError\"\n                :data=\"getCsrfData()\"\n                :headers=\"getCsrfHeader()\"\n              >\n                <el-tooltip\n                  class=\"item\"\n                  effect=\"light\"\n                  content=\"Support uploading at most 15 excels at one time\"\n                  placement=\"top\"\n                >\n                  <span class=\"list-btn\">{{ $t('purchaseRequest.massUpload') }}</span>\n                </el-tooltip>\n              </el-upload>\n              <span class=\"list-btn\" @click=\"showHistory\">{{ $t('userRole.userList.uploadHistory') }}</span>\n            </div>\n          </template>\n          <template slot=\"option-box-left-end\">\n            <upload-btn-group\n              v-if=\"showUpdateIBDateBtn\"\n              class=\"update-ib-date-btn-group\"\n              :actionUrl=\"updateIBDateActionUrl\"\n              :showHistory=\"true\"\n              :needDefaultSuccessTips=\"true\"\n              :historyVersion=\"2\"\n              :historyProps=\"updateIBDateHistoryProps\"\n              :uploadParams=\"updateIBDateUploadParams\"\n              @onBtnClick=\"onDownUpdateIBDateTmp\"\n            ></upload-btn-group>\n          </template>\n        </search-form>\n\n        <check-all-table\n          :dataList=\"purchaseRequestList\"\n          v-loading=\"loading\"\n          @sortChange=\"sortChange\"\n          @rowClick=\"rowClick\"\n          @checked=\"handleCheckRows\"\n          :tableConfig=\"{ showCheckBox: false, align: 'center' }\"\n          :tableSchema=\"tableSchema\"\n          :isShowDisplayOption=\"showDisplayOptions\"\n        >\n          <template slot=\"displayOptionsColumn\">\n            <options-field\n              btnType=\"icon\"\n              @fieldChange=\"displayOptionsChange\"\n              dropdownText=\"Display Options\"\n              :fieldList=\"fieldConfig.list || []\"\n              :defaultList=\"fieldConfig.default\"\n            >\n            </options-field>\n          </template>\n        </check-all-table>\n        <mass-generate\n          :visible=\"massGeneratePOShow\"\n          :selectedPR=\"checkedRows\"\n          @close=\"closePODialog\"\n          @massSuccess=\"massGeneratePOSuccess\"\n        ></mass-generate>\n        <div class=\"content-center padding-top-bottom\">\n          <template>\n            <el-pagination\n              :current-page=\"pageNo\"\n              :page-sizes=\"[10, 20, 50, 100]\"\n              background\n              layout=\"sizes, prev, pager, next\"\n              :total.sync=\"total\"\n              :page-size=\"pageSize\"\n              @current-change=\"handleCurrentChange\"\n              @size-change=\"handleSizeChange\"\n            >\n            </el-pagination>\n          </template>\n        </div>\n      </el-main>\n    </el-container>\n\n    <export-history-dialog\n      :visible=\"historyVisible\"\n      :taskType=\"20\"\n      :isUplodHistory=\"true\"\n      :getFileName=\"getFileName\"\n      @close=\"historyVisible = false\"\n      :interval=\"10000\"\n    >\n    </export-history-dialog>\n  </div>\n</template>\n\n<script>\nimport { concat, uniqBy } from 'lodash';\nimport {\n  getPurchaseRequestList,\n  getPurchaseApprovalList,\n  getPRListExport,\n  massApprovalPRList,\n  getPRListAsyncExport\n} from '@/api/purchaseRequest';\nimport {\n  getNewPurchaseOrderList,\n  getPOListExport,\n  massDownloadPoPDF,\n  checkPDFDownloadStatus,\n  downloadOnePDF,\n  getPOListAsyncExport\n} from '@/api/purchaseOrder';\nimport { getUploadTaskList, downLoadZIP } from '@/api/asn';\nimport { getCategoryList } from '@/api/userRole';\nimport { parsePurchaseRequestList, parsePurchaseOrderListSearch } from '@/utils';\nimport {\n  Permission,\n  SearchSchemaMap,\n  PurchaseRequestStatus,\n  PurchaseOrderStatus,\n  PendingPoStatus,\n  poConfirmationCountryWhileList\n} from '@/utils/constant';\nimport { hasPermission } from '@/utils/permission';\nimport { downloadBlobFile } from '@/utils/downloadFile';\nimport { formatPRListParams, formatValue } from '@/utils/format';\nimport MassGeneratePO from '@/components/Dialog/massGeneratePO.vue';\nimport SearchForm from './search';\nimport OptionsField from './optionsField';\nimport uploadBtnGroup from '@/components/upload/uploadBtnGroup';\nimport CheckAllTable from '@/components/CheckAllTable';\nimport moment from 'moment';\nimport { reportMessage, tabTypeMap } from '@/uatu';\nimport tableComps from '@/components/ApproveList/list';\nimport ExportHistoryDialog from './exportHistoryDialog';\nimport { getCsrfHeader, getCsrfData } from '@/utils/cookie';\n\nexport default {\n  name: 'approveList',\n  data() {\n    return {\n      loading: false,\n      canCreatePR: false,\n      canMassApproval: false,\n      orderField: '',\n      orderMethod: '',\n      massGeneratePOShow: false,\n      canMassGeneratePO: false,\n      canMassUpdateExpectedIBDate: false,\n      searchForm: {\n        region: ''\n      },\n      purchaseRequestList: [],\n      total: 0,\n      pageNo: 1,\n      pageSize: 10,\n      checkedType: '',\n      checkedRows: [],\n      categoryList: [],\n      usedQueryParams: false,\n      actionUrl: '/api/asn/mass_upload/',\n      uploadParams: {\n        btnText: 'purchaseOrder.uploadASN'\n      },\n      uploadTableList: [],\n      uploadTableSeachParams: {\n        page_no: 1,\n        count: 10,\n        total: 0\n      },\n      uploadTableLoading: false,\n      exportBtns: [\n        { text: 'purchaseOrder.poExcel', onClick: 'onExport' },\n        { text: 'purchaseOrder.poContract', onClick: 'onExportContract' }\n      ],\n      taskIds: [],\n      timer: null,\n      historyVisible: false,\n      showMoreByTab: {},\n      updateIBDateActionUrl: '/api/purchase_request/mass_update_expected_inbound_date',\n      updateIBDateHistoryProps: { taskType: 40 }\n    };\n  },\n  components: {\n    MassGenerate: MassGeneratePO,\n    SearchForm,\n    CheckAllTable,\n    OptionsField,\n    uploadBtnGroup,\n    tableComps,\n    ExportHistoryDialog\n  },\n  beforeDestroy() {\n    this.resetTimer();\n  },\n  methods: {\n    getCsrfData,\n    getCsrfHeader,\n    getFileName(row) {\n      return `${row.file_name}_result.txt`;\n    },\n    isCountryInWhileList(country) {\n      return (poConfirmationCountryWhileList || []).includes(country);\n    },\n    toggleShowMore(val) {\n      this.$set(this.showMoreByTab, this.activeTab, val);\n    },\n    showHistory() {\n      this.historyVisible = true;\n    },\n    onUploadSuccess(resp) {\n      this.$refs.massUpload.clearFiles();\n      if (resp.status !== 0) {\n        if (resp.status === 58) {\n          return this.onUploadWithInvalidSku({ skuIds: resp.data.purchase_price_cannot_modify_sku_ids });\n        }\n        this.$message.error(resp.info);\n      } else {\n        this.$message.success(resp.info);\n      }\n    },\n    onUploadError(resp) {\n      this.$refs.massUpload.clearFiles();\n      this.$message.error('Upload Failed');\n    },\n    onUploadMaxError() {\n      this.$message.error('System only support uploading 15 files at one time.');\n    },\n    onDownTmp() {\n      window.open('/admin/data/PRListTemplate.xlsx');\n    },\n    onDownUpdateIBDateTmp() {\n      window.open('/admin/data/massUpdateIBDate.xlsx');\n    },\n    onUploadWithInvalidSku({ skuIds }) {\n      const skuIDStr = (skuIds || []).join(',');\n      const h = this.$createElement;\n      this.$msgbox({\n        title: 'Tips',\n        message: h('div', null, [\n          h('p', { style: 'color: green; font-size: 16px;' }, 'Upload successfully!'),\n          h('p', null, 'Purchase price(pre-tax) in file is different from that in system: sku id'),\n          h('p', null, skuIDStr)\n        ]),\n        showCancelButton: true,\n        showConfirmButton: false,\n        closeOnClickModal: false,\n        cancelButtonText: this.$t('purchaseRequest.close')\n      }).catch(() => {});\n    },\n    resetTimer() {\n      if (this.timer) {\n        clearTimeout(this.timer);\n      }\n    },\n    onExportGroup(command) {\n      if (command.onClick && typeof this[command.onClick] === 'function') {\n        this[command.onClick]();\n      }\n    },\n    downloadOnePDF(order_id) {\n      downloadOnePDF(order_id)\n        .then(resp => {\n          if (resp.type === 'application/json') {\n            const reader = new FileReader();\n            reader.onloadend = () => {\n              const result = JSON.parse(reader.result);\n              if (result.retcode !== 0) {\n                this.$message({ type: 'error', message: result.info });\n              }\n            };\n            reader.readAsText(resp);\n          } else {\n            downloadBlobFile(resp, `${order_id}_${moment().format('YYYYMMDDHHmmss')}.pdf`);\n          }\n        })\n        .catch(e => {\n          this.$message({ type: 'error', message: e });\n        });\n    },\n    async onExportContract() {\n      if (this.checkedType === 'all') {\n        return this.$message.info('Export all pages pdf is not supported');\n      }\n      if (this.checkedRows.length === 0) {\n        this.$message.error('Please select some lines first!');\n        return;\n      } else if (this.checkedRows.length === 1) {\n        if (this.checkedRows[0].status !== 4) {\n          this.$message({\n            type: 'success',\n            message: this.$t('purchaseOrder.zipDownloading'),\n            during: 0,\n            showClose: true\n          });\n          this.downloadOnePDF(this.checkedRows[0].orderID);\n        } else {\n          this.$message({ type: 'error', message: this.$t('purchaseOrder.invalidData') });\n        }\n      } else {\n        const params = {\n          order_ids: this.checkedRows.filter(item => item.status !== 4).map(item => item.orderID) || []\n        };\n        if (params.order_ids.length < 1) {\n          return this.$message({ type: 'error', message: this.$t('purchaseOrder.invalidData') });\n        }\n        this.$message({\n          type: 'success',\n          message: this.$t('purchaseOrder.zipDownloading'),\n          during: 0,\n          showClose: true\n        });\n        try {\n          const res = await massDownloadPoPDF(params);\n          this.commonFetchAction(res, data => {\n            const { task_id = '' } = data;\n            this.taskIds.push(task_id);\n            if (this.taskIds.length <= 1) {\n              this.loopCheckDowloadStatus();\n            }\n          });\n        } catch (e) {\n          this.$messsage({\n            type: 'error',\n            message: e\n          });\n        }\n      }\n    },\n    loopCheckDowloadStatus() {\n      let isAllFinish = false;\n      let error_count = 0;\n      function loopStatus() {\n        this.timer = setTimeout(() => {\n          const self = this;\n          checkPDFDownloadStatus({ task_ids: this.taskIds })\n            .then(res => {\n              if (res && res.retcode === 0) {\n                const { tasks = [] } = res.data;\n                tasks.forEach(item => {\n                  if (item.status === 2) {\n                    self.downloadZip(item);\n                  } else if (item.status === 3) {\n                    self.$message({\n                      type: 'error',\n                      message: (res.data && res.data.err_msg) || 'Error during download'\n                    });\n                  }\n                });\n                isAllFinish = tasks.every(item => item.status !== 1);\n                if (isAllFinish) {\n                  clearTimeout(self.timer);\n                  self.taskIds = [];\n                } else {\n                  loopStatus.call(self);\n                }\n              }\n            })\n            .catch(e => {\n              self.$message({ type: 'error', message: e });\n              error_count++;\n              if (error_count < 3) {\n                loopStatus.call(self);\n              } else {\n                clearTimeout(self.timer);\n                self.taskIds = [];\n                error_count = 0;\n              }\n            });\n        }, 10000);\n      }\n      loopStatus.call(this);\n    },\n    downloadZip({ result_link = '', task_id = '' }) {\n      if (!result_link || !task_id) return;\n      const params = {\n        task_id,\n        result_link\n      };\n      downLoadZIP(params)\n        .then(resp => {\n          if (resp.type === 'application/json') {\n            const reader = new FileReader();\n            reader.onloadend = () => {\n              const result = JSON.parse(reader.result);\n              if (result.retcode !== 0) {\n                this.$message({ type: 'error', message: result.info });\n              }\n            };\n            reader.readAsText(resp);\n          } else {\n            downloadBlobFile(resp, `${this.order_id}_${moment().format('YYYYMMDDHHmmss')}.zip`);\n          }\n        })\n        .catch(e => {\n          this.$message({ type: 'error', message: e });\n        });\n    },\n    commonFetchAction(res, cb) {\n      if (res && res.retcode === 0) {\n        cb && cb(res.data);\n      } else {\n        this.$message({\n          type: 'error',\n          message: res.info || this.$t('common.timeoutTips')\n        });\n      }\n    },\n    async handleHistoryDialog(searchParams) {\n      this.uploadTableSeachParams = searchParams;\n      this.uploadTableLoading = true;\n      try {\n        const res = await getUploadTaskList(this.uploadTableSeachParams);\n        if (res && res.retcode === 0) {\n          this.uploadTableList = res.data.upload_tasks;\n          this.uploadTableSeachParams.total = res.data.total;\n        } else {\n          this.$message.error(res.info || \"Network did't work, please try it later!\");\n        }\n      } catch (e) {\n        this.$alert(e);\n      }\n      this.uploadTableLoading = false;\n    },\n    downloadUploadHistory(id) {\n      if (!id && id !== 0) return;\n      const a = document.createElement('a');\n      a.href = `/api/asn/upload_task/result/download/?task_id=${id}`;\n      a.download = `upload_history_report_${id}.txt`;\n      a.click();\n    },\n    formatTime(time) {\n      if (time === 0) return '0';\n      return moment(time * 1000).format('YYYY-MM-DD HH:mm');\n    },\n    handleDropDownClick(action) {\n      if (action === 'downLoad') {\n        this.handleDownLoadASNTemplate();\n      }\n    },\n    handleDownLoadASNTemplate() {\n      const a = document.createElement('a');\n      a.href = '/admin/data/ASN_mass_upload_template.xls';\n      a.download = 'ASN_mass_upload_template.xls';\n      a.click();\n    },\n    formatValue,\n    onReset() {\n      Object.keys(this.searchForm).forEach(key => {\n        this.$set(this.searchForm, key, '');\n      });\n    },\n    getSchemaConfig(item) {\n      const field = item.field || item;\n      const schema = SearchSchemaMap[field] || {};\n      const config = typeof item !== 'object' ? {} : item;\n      let disabled = false;\n      if (Array.isArray(schema.disabledCondition)) {\n        schema.disabledCondition.find(item => {\n          if (item.disabledValue.includes(this.searchForm[item.field])) {\n            disabled = true;\n          }\n        });\n      }\n      return {\n        ...schema,\n        ...config,\n        field,\n        options:\n          typeof schema.options === 'function' ? schema.options(this[schema.optionsField]) : this[schema.optionsField],\n        change: this[schema.change],\n        label: this.$t(item.label || schema.label),\n        hidden:\n          typeof schema.hidden === 'function' ? schema.hidden(this[schema.hiddenField]) : !!this[schema.hiddenField],\n        defaultValue: this.searchForm[field],\n        disabled: item.disabled || disabled\n      };\n    },\n    closePODialog() {\n      this.massGeneratePOShow = false;\n    },\n    displayOptionsChange(list) {\n      this.$emit('changeTableSchema', list);\n    },\n    massGeneratePOSuccess() {\n      this.onSearch();\n      this.massGeneratePOShow = false;\n    },\n    onMassAction(action) {\n      if (this.checkedRows.length === 0) {\n        this.$message.error('Please select some lines first!');\n        return;\n      }\n      // action为2代表批量生成po操作\n      if (action === 2) {\n        const result = [];\n        this.checkedRows.forEach(item => {\n          if (!item.supplier_id) {\n            result.push(item.sbs_vendor_id);\n          }\n        });\n        if (result.length !== 0) {\n          this.$message.error(\n            `PR: ${result.join(',')}of SBS Vendor ID can't  generate PO before getting vendor site id `\n          );\n          return;\n        }\n        this.massGeneratePOShow = true;\n        return;\n      }\n      if (action === 3) {\n        this.$emit('massSend', this.checkedRows);\n        return;\n      }\n      this.$prompt('', action === 1 ? this.$t('purchaseRequest.reason') : this.$t('purchaseRequest.comment'), {\n        confirmButtonText: this.$t('purchaseRequest.confirm'),\n        cancelButtonText: this.$t('purchaseRequest.close'),\n        inputValidator: value => {\n          if (action !== 1) return true;\n          if (!value || value.length <= 0) return `Reason is required`;\n          return value.length <= 128 ? true : `Reason cannot be longer than 128 characters`;\n        },\n        center: true\n      })\n        .then(({ value }) => {\n          const params = {\n            request_list: this.checkedRows.map(item => item.requestID),\n            remark: value || '',\n            action\n          };\n          massApprovalPRList(params).then(resp => {\n            if (resp.retcode === 2014) {\n              this.$message.error(\n                `The PR ：${resp.data.request_id}  need multiple approve，can't use mass approve / reject!`\n              );\n              const params = formatPRListParams(this, 1);\n              this.getList(params);\n            } else if (resp.retcode !== 0) {\n              this.$message.error(resp.info);\n            } else {\n              this.$message.success('success');\n              const params = formatPRListParams(this, 1);\n              this.getList(params);\n            }\n          });\n        })\n        .catch(() => {});\n    },\n    handleSizeChange(size) {\n      this.pageSize = size;\n      this.onSearch();\n    },\n    onEmitSearch(form) {\n      this.searchForm = { ...this.searchForm, ...form };\n      this.onSearch();\n    },\n    onSearch() {\n      const page = 1;\n      this.handleCurrentChange(page);\n    },\n    sortChange(row, column) {\n      const fieldList = ['totalValue', 'hasApproval']; // only fieldList use api sort\n      if (fieldList.includes(row.prop)) {\n        this.orderField = row.prop;\n        this.orderMethod = row.order;\n        const page = 1;\n        this.handleCurrentChange(page);\n      }\n    },\n    async onSelectChange(field, value) {\n      if (field !== 'region') return;\n      this.$emit('change-region', value);\n      const categoryID = this.computedSearchSchema.find(schema => schema.field === 'categoryID');\n      if (categoryID) {\n        let result = [];\n        const commonParams = { catids: 0, country: value };\n        const lists = await Promise.all([\n          getCategoryList({ ...commonParams, use_global: '1' }),\n          getCategoryList({ ...commonParams, use_global: '0' })\n        ]);\n        lists.forEach(({status, info, data}) => {\n          if (status !== 0) {\n            this.$message.error(info);\n          } else {\n            result = concat(result, data.cats || []);\n          }\n        });\n        result = uniqBy(result, 'catid');\n        this.categoryList = result;\n      }\n    },\n    rowClick(row, column, event) {\n      if (column.columnKey !== 'action') {\n        if (this.activeTab === 'poList') {\n          window.open(`/admin/purchase/order/podetail/${row.orderID}`);\n        } else if ((row.status === 0 || row.status === 6) && ['myPR', 'allPR'].includes(this.activeTab)) {\n          window.open(`/admin/purchase/request/edit/${row.requestID}`);\n        } else {\n          window.open(`/admin/purchase/request/detail/${row.requestID}?activeTab=${this.activeTab}`);\n        }\n      }\n    },\n    handleCheckRows(type, rows) {\n      this.checkedType = type;\n      this.checkedRows = rows;\n    },\n    onCreatePR() {\n      this.$router.push({ path: 'create' });\n    },\n    handleCurrentChange(page) {\n      if (typeof page === 'number') {\n        this.pageNo = page;\n      } else {\n        this.pageNo = 1;\n      }\n      this.loading = true;\n      const params = formatPRListParams(this, this.pageNo);\n      if (params.supplier_type !== 'CB') {\n        this.searchForm.CBNominationType = '';\n      } else {\n        params.cb_nomination_type = this.searchForm.CBNominationType || 0;\n      }\n      reportMessage(tabTypeMap[this.activeTab], params);\n      this.getList(params);\n    },\n    onExport() {\n      if (this.checkedRows.length === 0) {\n        this.$message.error('Please select some lines first!');\n        return;\n      }\n      if (this.checkedType === 'all') {\n        return this.onAsyncExport();\n      }\n      const activeTabMap = {\n        myPR: 1,\n        myPending: 2,\n        pendingPO: 4,\n        allPR: 6,\n        poList: ''\n      };\n      this.$confirm(\n        this.$t(this.activeTab === 'poList' ? 'purchaseOrder.warnBtnPDFContent' : 'purchaseRequest.warnBtnPDFContent'),\n        this.$t('purchaseOrder.warnBtnPDFTitle'),\n        { confirmButtonText: this.$t('purchaseOrder.Confirm'), cancelButtonText: this.$t('purchaseOrder.cancelPoPDF') }\n      )\n        .then(() => {\n          const field = this.activeTab === 'poList' ? 'orderID' : 'requestID';\n          const requestIDs = this.checkedRows.map(item => item[field]).join('&');\n          const fun = this.activeTab === 'poList' ? getPOListExport : getPRListExport;\n          fun(requestIDs, activeTabMap[this.activeTab]);\n        })\n        .catch(() => {});\n    },\n    onExportHistory() {\n      this.$emit('showExportHistory');\n    },\n    onAsyncExport() {\n      this.$confirm(\n        this.$t(this.activeTab === 'poList' ? 'purchaseOrder.warnBtnPDFContent' : 'purchaseRequest.warnBtnPDFContent'),\n        this.$t('purchaseOrder.warnBtnPDFTitle'),\n        { confirmButtonText: this.$t('purchaseOrder.Confirm'), cancelButtonText: this.$t('purchaseOrder.cancelPoPDF') }\n      )\n        .then(() => {\n          const params = formatPRListParams(this, this.pageNo);\n          if (params.supplier_type !== 'CB') {\n            this.searchForm.CBNominationType = '';\n          } else {\n            params.cb_nomination_type = this.searchForm.CBNominationType || 0;\n          }\n          const extraParamsMap = {\n            myPR: { created_by: this.$store.getters.username, pr_list_type: 1 },\n            myPending: { pr_list_type: 2 },\n            pendingPO: { status: params.status || 3, pr_list_type: 4 },\n            allPR: { pr_list_type: 6 },\n            poList: {}\n          };\n          const fun = this.activeTab === 'poList' ? getPOListAsyncExport : getPRListAsyncExport;\n          fun({ ...params, ...(extraParamsMap[this.activeTab] || {}) })\n            .then(resp => {\n              if (resp.retcode !== 0) {\n                this.$message.error(resp.info);\n              } else {\n                this.$message.success('Success, please find the result in “Export History”!');\n              }\n            })\n            .catch(() => {\n              this.$message.error(`Server error, please retry and report to dev if retry doesn't work.`);\n            });\n        })\n        .catch(() => {});\n    },\n    getList(params) {\n      let fun;\n      if (this.activeTab === 'myPending') {\n        fun = getPurchaseApprovalList;\n        params.op = this.activeTab === 'myPending' ? 1 : 2;\n      } else if (this.activeTab === 'myPR') {\n        fun = getPurchaseRequestList;\n        params.created_by = this.$store.getters.username;\n      } else if (this.activeTab === 'poList') {\n        fun = getNewPurchaseOrderList;\n        // params.created_by = this.$store.getters.username\n      } else if (this.activeTab === 'pendingPO') {\n        fun = getPurchaseRequestList;\n        params.status = params.status || 3;\n      } else if (this.activeTab === 'allPR') {\n        fun = getPurchaseRequestList;\n      }\n      fun(params)\n        .then(resp => {\n          if (resp.status !== 0) {\n            this.$message.error(resp.info);\n            this.total = 0;\n            this.purchaseRequestList = [];\n          } else {\n            this.purchaseRequestList = resp.data['purchase_request_list']\n              ? parsePurchaseRequestList(resp.data['purchase_request_list'])\n              : parsePurchaseOrderListSearch(resp.data['po_list']);\n            this.total = resp.data['total'];\n          }\n          this.loading = false;\n        })\n        .catch(() => {\n          this.$message.error('Get List Failed!');\n          this.purchaseRequestList = [];\n          this.total = 0;\n          this.loading = false;\n        });\n    }\n  },\n  props: {\n    firstShowCount: {\n      default: undefined\n    },\n    activeTab: {\n      default: 'allPR'\n    },\n    createHidden: {\n      default: false\n    },\n    searchSchema: {\n      default: () => []\n    },\n    tableSchema: {\n      default: () => []\n    },\n    fieldConfig: {\n      type: Object,\n      default: () => ({})\n    },\n    merchantType: {\n      // sbs vendor id 新增seller数据，这里需要传All查询所有，不传默认查询supplier\n      type: String,\n      default: ''\n    }\n  },\n  watch: {\n    activeTab: {\n      handler(now, prev) {\n        if (!now) return;\n        this.onReset();\n        this.total = 0;\n        this.purchaseRequestList = [];\n        this.orderField = '';\n        this.orderMethod = '';\n        const params = {\n          skip: 0,\n          limit: this.pageSize || 10\n        };\n        this.categoryList = [];\n\n        let myRegion = '';\n        if (!this.$store.getters.isUniversalUser) {\n          myRegion = this.$store.getters.country;\n          this.$set(this.searchForm, 'region', myRegion);\n          params.region = myRegion;\n          this.$emit('change-region', myRegion);\n        }\n\n        if (!this.usedQueryParams) {\n          const queryParams = this.$route.query || {};\n          const {\n            status,\n            backlogDuration = '',\n            createdBy = '',\n            purchaseType = '',\n            durationType = '',\n            prCreatedBy = '',\n            region = '',\n            supplierType = ''\n          } = queryParams;\n          this.searchForm = {\n            ...this.searchForm,\n            createdBy,\n            prCreatedBy,\n            purchaseType,\n            durationType,\n            backlogDuration: +backlogDuration || '',\n            supplierType,\n            region: region || myRegion,\n            status: status === '0' ? 0 : +status || ''\n          };\n          if (queryParams.ctimeLeft && queryParams.ctimeRight && queryParams.ctimeLeft !== queryParams.ctimeRight) {\n            this.searchForm.ctime = [queryParams.ctimeLeft * 1000, queryParams.ctimeRight * 1000];\n          }\n          this.usedQueryParams = true;\n          this.onSearch();\n        } else {\n          this.getList(params);\n        }\n        this.resetTimer();\n      },\n      immediate: true\n    }\n  },\n  computed: {\n    updateIBDateUploadParams() {\n      return {\n        historyText: this.$t('MassUploadHistory'),\n        btnText: 'massUpdateExpectedIBDate'\n      };\n    },\n    showDisplayOptions() {\n      return ['myPending', 'allPR', 'pendingPO', 'myPR'].includes(this.activeTab);\n    },\n    showUpdateIBDateBtn() {\n      return (\n        this.activeTab === 'pendingPO' &&\n        this.canMassUpdateExpectedIBDate &&\n        // Pending PO Generation or Pending Supplier Confirmation\n        ['', 7].includes(this.searchForm.status)\n      );\n    },\n    computedShowMore() {\n      return this.showMoreByTab[this.activeTab];\n    },\n    countryList() {\n      return [...new Set([...this.$store.getters.countryList.map(item => item.country)])];\n    },\n    warehouseList() {\n      const userWarehouseList = this.$store.getters.warehouseList\n        .filter(item => item.country === this.searchForm.region)\n        .map(item => ({ label: item.warehouse, value: item.warehouse }));\n      return userWarehouseList.length < 1 ? [] : [{ label: 'All', value: '' }, ...userWarehouseList];\n    },\n    statusList() {\n      if (this.activeTab === 'pendingPO') {\n        return PendingPoStatus;\n      }\n      const arr = this.activeTab === 'poList' ? PurchaseOrderStatus : PurchaseRequestStatus;\n      return [{ value: '', label: 'All' }, ...arr];\n    },\n    currencyList() {\n      return this.$store.getters.currencyMap;\n    },\n    hasExportPermission() {\n      return true;\n    },\n    computedSearchSchema() {\n      return this.searchSchema\n        .filter(item => {\n          if (item.isOnlyTW) {\n            return this.searchForm.region === 'TW';\n          }\n          return true;\n        })\n        .map(item => this.getSchemaConfig(item));\n    },\n    canSendToSupplier() {\n      return this.$store.getters.countrySelectList.some(region => this.isCountryInWhileList(region.value));\n    },\n    searchActionSchema() {\n      return [\n        { type: 'search', hasPermission: true },\n        { type: 'clear', hasPermission: true },\n        { type: 'export', hasPermission: this.activeTab !== 'poList' && this.hasExportPermission },\n        { type: 'exportGroup', hasPermission: this.activeTab === 'poList' && this.hasExportPermission },\n        { type: 'exportHistory', hasPermission: this.hasExportPermission },\n        { type: 'mass-approve', hasPermission: this.activeTab === 'myPending' && this.canMassApproval },\n        { type: 'mass-reject', hasPermission: this.activeTab === 'myPending' && this.canMassApproval },\n        {\n          type: 'mass-generate',\n          hasPermission: this.activeTab === 'pendingPO' && this.canMassGeneratePO && !this.searchForm.status\n        },\n        {\n          type: 'mass-send',\n          hasPermission:\n            this.activeTab === 'pendingPO' &&\n            this.canSendToSupplier &&\n            this.canMassGeneratePO &&\n            !this.searchForm.status\n        },\n        { type: 'upload', hasPermission: this.activeTab === 'myPR' && this.canCreatePR }\n      ].filter(item => item.hasPermission);\n    },\n    uploadTableSchema() {\n      return [\n        {\n          label: this.$t('approvalFlow.uploadTime'),\n          field: 'ctime',\n          render: (schema, row) => `${this.formatTime(row.ctime)}`\n        },\n        { label: this.$t('userRole.userList.username'), field: 'uploader' },\n        {\n          label: this.$t('userRole.userList.status'),\n          field: 'status',\n          type: 'enum',\n          options: [\n            { label: 'Processing', value: 1 },\n            { label: 'Success', value: 2 },\n            { label: 'Fail', value: 3 }\n          ]\n        },\n        {\n          columnKey: 'action',\n          label: this.$t('purchaseRequest.action'),\n          width: '180px',\n          render: (schema, row) => {\n            return row.status === 3\n              ? [\n                  'el-button',\n                  {\n                    class: 'action-btn',\n                    props: { type: 'default', size: 'mini' },\n                    on: { click: () => this.downloadUploadHistory(row.id) }\n                  },\n                  this.$t('purchaseRequest.download')\n                ]\n              : null;\n          }\n        }\n      ];\n    }\n  },\n  created() {\n    this.loading = true;\n    this.canCreatePR = hasPermission(Permission.MY_PURCHASE_REQUEST);\n    this.canMassApproval = true;\n    this.canMassGeneratePO = hasPermission(Permission.EDIT_PO_DRAFTS);\n    this.canMassUpdateExpectedIBDate = hasPermission(Permission.UPDATE_INBOUND_DATE);\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n// .approve-header {\n//   margin-top: 11px;\n// }\n.add-btn {\n  display: inline-block;\n  margin: 0 5px -10px -20px;\n}\n.supplier-id:hover {\n  text-decoration: underline;\n}\n.po-upload-btn-group {\n  // position: relative;\n  // top: -56px;\n}\n.mass-upload {\n  .download-btn {\n    color: #3d6ed1;\n    cursor: pointer;\n    font-size: 12px;\n  }\n  .upload-btn {\n    display: inline-block;\n    padding: 0;\n  }\n  .list-btn {\n    border: 1px solid #3d6ed1;\n    color: #3d6ed1;\n    background-color: #fff;\n    width: auto;\n    padding: 0 20px;\n    margin-right: 12px;\n  }\n}\n\n.update-ib-date-btn-group::v-deep {\n  .el-button-group .el-button,\n  .upload-history {\n    border: 1px solid #3d6ed1;\n    color: #3d6ed1;\n    background-color: #fff;\n  }\n  .upload-history {\n    margin-left: 12px;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/ApproveList/list.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/ApproveList/optionsField.vue","messages":[{"ruleId":"vue/require-prop-type-constructor","severity":2,"message":"The \"namespace\" property should be a constructor.","line":43,"column":16,"nodeType":"Literal","endLine":43,"endColumn":18}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-dropdown class=\"options-field-dropdown pms-ele-ui\" :hide-on-click=\"false\">\n    <template v-if=\"btnType === 'btn'\">\n      <span class=\"list-btn\">{{dropdownText || ''}}</span>\n      <el-dropdown-menu class=\"options-field-menu\" slot=\"dropdown\">\n        <el-checkbox-group :min=\"1\" @change=\"handleListChange\" v-model=\"checkList\">\n          <el-dropdown-item v-for=\"item in fieldList\" :key=\"item.field\">\n            <el-checkbox :label=\"item.field\">\n              {{item.label}}\n            </el-checkbox>\n          </el-dropdown-item>\n        </el-checkbox-group>\n      </el-dropdown-menu>\n    </template>\n    <template v-else>\n      <i class=\"display-icon el-icon-s-tools\" v-if=\"btnType === 'icon'\"></i>\n      <el-dropdown-menu class=\"options-field-menu icon\" slot=\"dropdown\">\n        <h5 class=\"dropdown-menu-title\">{{$t('commonMoreColumn')}}({{fieldList.length}})</h5>\n        <el-checkbox-group class=\"dropdown-menu-checkbox-group\" :min=\"min ||null\" @change=\"handleListChange\" v-model=\"checkList\">\n          <el-dropdown-item v-for=\"item in fieldList\" :key=\"item.field\">\n            <el-checkbox class=\"pms-ele-ui\" :label=\"item.field\">\n              {{item.label}}\n            </el-checkbox>\n          </el-dropdown-item>\n        </el-checkbox-group>\n      </el-dropdown-menu>\n    </template>\n  </el-dropdown>\n\n</template>\n\n<script>\n\nimport { getLocalStorage, setLocalStorage } from '@/utils/localStorage';\n\nexport default {\n  data() {\n    return {\n      checkList: []\n    };\n  },\n  props: {\n    namespace: '', // 命名空间\n    btnType: {\n      default: 'btn'\n    },\n    min: {\n      // 配置至少勾选几项，默认为1\n      type: Number,\n      default: 1\n    },\n    fieldList: { // 字段结构\n      type: Array,\n      required: true\n    },\n    dropdownText: {\n      type: String,\n      default: ''\n    },\n    defaultList: { // 默认值\n      type: Array,\n      default: () => []\n    }\n  },\n  methods: {\n    handleListChange(list) {\n      if (this.namespace) {\n        this.checkList = list;\n        setLocalStorage(this.namespace + '_displayOptions', list);\n      }\n      this.$emit('fieldChange', list);\n    }\n  },\n  watch: {\n    '$props.defaultList': {\n      handler(list) {\n        this.checkList = this.defaultList || [];\n      }\n    }\n  },\n  mounted() {\n    let defaultList = this.defaultList || [];\n    if (this.namespace) {\n      defaultList = getLocalStorage(this.namespace + '_displayOptions') || defaultList;\n      this.$emit('fieldChange', defaultList);\n    }\n    this.checkList = defaultList;\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  .options-field-dropdown {\n    vertical-align: middle;\n    cursor: pointer;\n    padding: 0;\n    .display-icon{\n     font-size: 16px;\n    }\n  }\n  .options-field-menu {\n      position: fixed;\n      max-height: 50%;\n      overflow-y: auto;\n      padding: 20px;\n      &.icon{\n        max-height: 240px;\n        padding: 0 4px;\n        overflow-y: hidden;\n        background-color: #E8E9EC;\n      .dropdown-menu-title{\n          height: 32px;\n          line-height: 32px;\n          padding-left: 16px;\n          border-bottom: 1px solid #ccc;\n          font-size: 12px;\n          color: rgba(0,0,0,0.55);\n          letter-spacing: 0;\n        }\n         .dropdown-menu-checkbox-group{\n          max-height:170px;\n          overflow-y: auto;\n        }\n        .dropdown-menu-confirm-btn{\n          font-size: 14px;\n          color: rgba(0,0,0,0.85);\n          height: 32px;\n          line-height: 32px;\n          text-align: center;\n          border-top: 1px solid #ccc;\n        }\n      }\n    }\n\n</style>\n<style lang=\"scss\">\n @import '~@/styles/common.scss';\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/ApproveList/search.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":2,"column":40,"nodeType":"VIdentifier","messageId":"deprecated","endLine":2,"endColumn":46},{"ruleId":"vue/no-template-shadow","severity":2,"message":"Variable 'item' is already declared in the upper scope.","line":52,"column":23,"nodeType":"Identifier","endLine":52,"endColumn":27},{"ruleId":"vue/no-template-shadow","severity":2,"message":"Variable 'item' is already declared in the upper scope.","line":102,"column":22,"nodeType":"Identifier","endLine":102,"endColumn":26}],"errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-form :model=\"searchForm\" @submit.native.prevent=\"onSearch\" class=\"pms-search-form\">\n    <el-button v-show=\"false\" native-type=\"submit\"></el-button>\n    <el-row>\n      <el-col\n        v-for=\"item in visibleSearchSchema || []\"\n        :key=\"item.field\"\n        :offset=\"item.offset || 0\"\n        :span=\"item.width\"\n        :class=\"getColClass(item.type, item.colClass)\"\n      >\n        <el-form-item v-if=\"item.type === 'date'\" :class=\"item.class || ''\" :label=\"item.label\">\n          <el-date-picker\n            :popperClass=\"'pms-date-picker'\"\n            :default-value=\"item.defaultValue\"\n            :picker-options=\"item.pickerOptions || {}\"\n            @change=\"onSearch\"\n            popper-class=\"pms-ui\"\n            :format=\"item.format || undefined\"\n            :value-format=\"item.valueFormat || ''\"\n            v-model=\"searchForm[item.field]\"\n            :type=\"item.dateType || 'date'\"\n          >\n          </el-date-picker>\n        </el-form-item>\n        <el-form-item v-else-if=\"item.type === 'dateRange'\" :class=\"item.class || ''\" :label=\"item.label\">\n          <el-date-picker\n            :popperClass=\"'pms-date-picker'\"\n            :default-value=\"item.defaultValue\"\n            :picker-options=\"item.pickerOptions || {}\"\n            :value-format=\"item.valueFormat\"\n            @change=\"onSearch\"\n            popper-class=\"pms-ui\"\n            v-model=\"searchForm[item.field]\"\n            type=\"daterange\"\n            start-placeholder=\"Begin\"\n            end-placeholder=\"End\"\n            :default-time=\"['00:00:00', '23:59:59']\"\n            :clearable=\"false\"\n          ></el-date-picker>\n        </el-form-item>\n        <el-form-item v-else-if=\"item.type === 'select'\" :label=\"item.label\" :class=\"item.class || ''\">\n          <el-select\n            v-model=\"searchForm[item.field]\"\n            :multiple=\"item.multiple\"\n            @change=\"onChange(item)\"\n            :clearable=\"item.clearable\"\n            :placeholder=\"$t(item.placeholder)\"\n            :disabled=\"item.disabled\"\n          >\n            <el-option\n              v-for=\"(item, index) in item.options || []\"\n              :key=\"`${item.value}${index}`\"\n              :label=\"item.label\"\n              :value=\"item.value\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item v-else-if=\"item.type === 'cascader'\" :label=\"item.label\" :class=\"item.class || ''\">\n          <el-cascader\n            v-model=\"searchForm[item.field]\"\n            :options=\"item.options || []\"\n            :props=\"{ expandTrigger: 'click' }\"\n            @change=\"onChange(item)\"></el-cascader>\n        </el-form-item>\n        <el-form-item v-else-if=\"item.type === 'input'\" :label=\"item.label\" :class=\"item.class || ''\">\n          <el-input\n            placeholder=\"Input\"\n            :class=\"item.class || ''\"\n            v-model=\"searchForm[item.field]\"\n            @change=\"onChangeInput(item)\"\n            clearable\n            :disabled=\"!!item.disabled\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item v-else-if=\"item.type === 'totalValue'\" :label=\"item.label\" :class=\"item.class || ''\">\n          <div class=\"el-date-editor el-range-editor el-input__inner el-date-editor--daterange el-range-editor--medium\">\n            <input\n              type=\"number\"\n              v-model.number=\"searchForm[item.leftField]\"\n              placeholder=\"greater or equal\"\n              class=\"el-range-input\"\n            />\n            <span class=\"el-range-separator\">-</span>\n            <input\n              type=\"number\"\n              v-model.number=\"searchForm[item.rightField]\"\n              placeholder=\"less or equal\"\n              class=\"el-range-input\"\n            />\n          </div>\n        </el-form-item>\n        <el-form-item v-else-if=\"item.type === 'categoryName'\" :label=\"item.label\" :class=\"item.class || ''\">\n          <el-select\n            filterable\n            @change=\"onSearch\"\n            :placeholder=\"searchForm.region ? 'select' : 'please select a region first'\"\n            class=\"category-multiple\"\n            v-model=\"searchForm[item.field]\"\n          >\n            <el-option\n              v-for=\"item in item.options\"\n              :key=\"item.catid\"\n              :label=\"item.display_name\"\n              :value=\"item.catid\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item v-else-if=\"item.type === 'autoComplete'\" :label=\"item.label\" :class=\"item.class || ''\">\n          <el-autocomplete\n            v-model.trim=\"searchForm[item.field]\"\n            :fetch-suggestions=\"(...params) => onAutoCompleteFetch(item.field, searchForm, ...params)\"\n            @blur=\"(...params) => onAutoCompleteBlur(item.field, ...params)\"\n            @select=\"(...params) => onAutoCompleteSelect(item.field, ...params)\"\n            :placeholder=\"item.placeholder\"\n            clearable\n          >\n          </el-autocomplete>\n        </el-form-item>\n        <el-form-item\n          v-else-if=\"item.type === 'sbsVendorId'\"\n          :label=\"item.label\"\n          :class=\"item.class || ''\"\n        >\n          <el-autocomplete\n            v-model=\"searchForm[item.field]\"\n            :fetch-suggestions=\"getSbsVendorID\"\n            clearable\n            placeholder=\"Please input SBS Vendor ID\"\n            @select=\"handleSBSVendorIDSelect\"\n          ></el-autocomplete>\n        </el-form-item>\n        <el-checkbox\n          v-else-if=\"item.type === 'checkbox'\"\n          :class=\"item.class || ''\"\n          @change=\"onSearch\"\n          v-model=\"searchForm[item.field]\"\n          :disabled=\"item.disabled\"\n          >{{ item.label }}</el-checkbox\n        >\n        <el-checkbox\n          v-else-if=\"item.type === 'myself'\"\n          :class=\"item.class || ''\"\n          @change=\"onChange(item)\"\n          v-model=\"searchForm[item.field]\"\n          :disabled=\"item.disabled\"\n          >{{ item.label }}</el-checkbox\n        >\n      </el-col>\n    </el-row>\n    <el-row>\n      <el-form-item class=\"search-action-box\">\n        <span v-if=\"isShowMoreBtn && showMore === false\" class=\"more-btn\" @click=\"toggleShowMore(true)\"\n          >{{ $t('commonMore') }}<i class=\"el-icon-arrow-down\"></i\n        ></span>\n        <span v-if=\"isShowMoreBtn && showMore === true\" class=\"more-btn\" @click=\"toggleShowMore(false)\"\n          >{{ $t('commonLess') }}<i class=\"el-icon-arrow-up\"></i\n        ></span>\n        <div v-if=\"actionSchemaKeys['clear']\" class=\"list-btn light-btn clear-btn\" @click=\"onReset(initAfterReset && 'init')\">\n          {{ $t('purchaseRequest.clear') }}\n        </div>\n        <div v-if=\"actionSchemaKeys['search']\" class=\"list-btn\" @click=\"onSearch\">\n          {{ $t('purchaseRequest.search') }}\n        </div>\n      </el-form-item>\n    </el-row>\n    <el-row v-if=\"showOptions\" class=\"option-box\">\n      <el-form-item class=\"option-box-left\">\n        <slot name=\"option-box-left\"></slot>\n\n        <div\n          v-if=\"actionSchemaKeys['mass-approve']\"\n          class=\"mass-approve-btn list-btn light-btn\"\n          @click=\"onMassAction(0)\"\n        >\n          {{ $t('purchaseRequest.massApprove') }}\n        </div>\n        <div v-if=\"actionSchemaKeys['mass-reject']\" class=\"mass-reject-btn list-btn light-btn\" @click=\"onMassAction(1)\">\n          {{ $t('purchaseRequest.massReject') }}\n        </div>\n        <div\n          v-if=\"actionSchemaKeys['mass-generate']\"\n          class=\"mass-generate-btn list-btn light-btn\"\n          @click=\"onMassAction(2)\"\n        >\n          {{ $t('purchaseRequest.massGenerate') }}\n        </div>\n        <div v-if=\"actionSchemaKeys['mass-send']\" class=\"mass-send-btn list-btn light-btn\" @click=\"onMassAction(3)\">\n          {{ $t('prMassSendToSupplier') }}\n        </div>\n        <div v-if=\"actionSchemaKeys['sync']\" class=\"list-btn light-btn\" @click=\"onSync\">\n          {{ $t('purchaseRequest.sync') }}\n        </div>\n        <slot name=\"option-box-left-end\"></slot>\n      </el-form-item>\n      <el-form-item class=\"option-box-right\">\n        <div v-if=\"actionSchemaKeys['export']\" class=\"list-btn light-btn\" @click=\"onExport\">\n          {{ $t('purchaseRequest.export') }}\n        </div>\n        <el-dropdown\n          v-if=\"actionSchemaKeys['exportGroup']\"\n          class=\"exportGroup-btn\"\n          split-button\n          type=\"primary\"\n          @command=\"onExportContentClick\"\n        >\n          <span>{{ $t('purchaseRequest.export') }}</span>\n          <el-dropdown-menu slot=\"dropdown\">\n            <el-dropdown-item :command=\"btn\" v-for=\"btn in exportBtns\" :key=\"btn.text\">\n              <i v-if=\"btn.icon\" :class=\"btn.icon\" class=\"btn-icon\"></i><span>{{ $t(btn.text) }}</span>\n            </el-dropdown-item>\n          </el-dropdown-menu>\n        </el-dropdown>\n        <div\n          v-if=\"actionSchemaKeys['exportHistory']\"\n          class=\"export-history-btn list-btn light-btn\"\n          @click=\"onExportHistory\"\n        >\n          <i class=\"el-icon-upload\"></i>\n          <span>{{ $t('purchaseRequest.exportHistory') }}</span>\n        </div>\n      </el-form-item>\n    </el-row>\n  </el-form>\n</template>\n\n<script>\nimport { getSbsVendorSupplierSearch } from '@/api/supplier';\nexport default {\n  data() {\n    return {\n      searchForm: {},\n      // uploadHeader: {},\n      showMore: false\n    };\n  },\n  props: {\n    showOptions: {\n      type: Boolean,\n      default: true\n    },\n    initShowMore: {\n      type: Boolean,\n      default: false\n    },\n    searchSchema: {\n      type: Array,\n      required: false\n    },\n    actionSchema: {\n      type: Array,\n      required: false,\n      default: () => []\n    },\n    exportBtns: {\n      type: Array,\n      default: () => []\n    },\n    // 首次显示的筛选项数量\n    firstShowCount: {\n      type: Number,\n      default: 100\n    },\n    merchantType: { // sbs vendor id 新增seller数据，这里需要传All查询所有，不传默认查询supplier\n      type: String,\n      default: ''\n    }\n  },\n  computed: {\n    visibleSearchSchema() {\n      const schema = this.searchSchema || [];\n      return schema.filter((item, index) => !item.hidden && (this.showMore || index < this.firstShowCount));\n    },\n    isShowMoreBtn() {\n      return this.firstShowCount && this.firstShowCount < this.searchSchema.length;\n    },\n    actionSchemaKeys() {\n      const data = {};\n      this.actionSchema.forEach(item => {\n        data[item.type] = item;\n      });\n      return data;\n    },\n    countryList() {\n      return [...new Set([...this.$store.getters.countryList.map(item => item.country)])];\n    },\n    initAfterReset() {\n      return (this.actionSchema.find(item => item.type === 'clear') || {}).isNeedInit;\n    }\n  },\n  methods: {\n    onChangeInput(item) {\n      if (item.change) item.change(this.searchForm[item.field]);\n    },\n    setSearchForm(field, value) {\n      this.$set(this.searchForm, field, value);\n    },\n    toggleShowMore(val) {\n      this.showMore = val;\n      this.$emit('toggleShowMore', val);\n    },\n    getColClass(type, colClass) {\n      let result = type === 'dateRange' || type === 'totalValue' ? 'long-col' : '';\n      if (colClass) {\n        result += ` ${colClass}`;\n      }\n      return result;\n    },\n    handleSBSVendorIDSelect(item) {\n      this.searchForm.sbs_vendor_id = item.sbs_vendor_id;\n    },\n    async getSbsVendorID(value, cb) {\n      try {\n        const params = {\n          pageno: 1,\n          count: 20,\n          sbs_vendor_id: `${value}`.trim(),\n          approval_country: this.countryList.join('_')\n        };\n        if (this.merchantType) {\n          params.merchant_type = this.merchantType;\n        }\n        const resp = await getSbsVendorSupplierSearch(params);\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n          cb([]);\n        } else {\n          const { list = [] } = resp.data || {};\n          if (Array.isArray(list) && list.length) {\n            list.map(item => {\n              item.value = item.sbs_vendor_id;\n            });\n            return cb(list);\n          } else {\n            this.$message.error(`Supplier doesn't exist or supplier id is wrong.`);\n          }\n          cb([]);\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    onExportContentClick(command) {\n      this.$emit('exportGroup', command);\n    },\n    onAutoCompleteFetch(field, searchForm, queryString = '', cb) {\n      this.$emit('autoCompleteFetch', { field, searchForm, queryString, cb });\n    },\n    onAutoCompleteBlur(field) {\n      this.$emit('autoCompleteBlur', { field });\n    },\n    onAutoCompleteSelect(field, selectedItem) {\n      this.$emit('autoCompleteSelect', { field, selectedItem });\n    },\n    onChange(schema) {\n      const { field = '', relationFields = [] } = schema;\n      const value = this.searchForm[field];\n      this.$emit('selectChange', field, value);\n      if (relationFields.length) {\n        relationFields.forEach(item => {\n          this.$set(this.searchForm, item.field, item.onChange(value));\n        });\n      }\n      this.onSearch();\n    },\n    onSearch() {\n      this.$nextTick(() => {\n        this.searchForm.sbs_vendor_id = this.searchForm.sbsVendorId;\n        this.$emit('search', this.searchForm);\n      });\n    },\n    onSync() {\n      this.$emit('sync');\n    },\n    onReset(type) {\n      this.searchForm = {};\n      const list = this.searchSchema;\n      if (Array.isArray(list) && list.length) {\n        list.forEach(item => {\n          this.$set(\n            this.searchForm,\n            item.field,\n            type === 'init' ? (item.defaultValue !== undefined ? item.defaultValue : '') : ''\n          );\n          if (item.leftField) {\n            this.$set(\n              this.searchForm,\n              item.leftField,\n              type === 'init' ? (item.defaultLeftValue !== undefined ? item.defaultLeftValue : '') : ''\n            );\n          }\n          if (item.rightField) {\n            this.$set(\n              this.searchForm,\n              item.rightField,\n              type === 'init' ? (item.defaultRightValue !== undefined ? item.defaultRightValue : '') : ''\n            );\n          }\n        });\n      }\n      this.$emit('clickReset', this.searchForm);\n    },\n    onMassAction(action) {\n      this.$emit('massAction', action);\n    },\n    onExport() {\n      this.$emit('exportAction');\n    },\n    onExportHistory() {\n      this.$emit('exportHistoryAction');\n    }\n  },\n  watch: {\n    '$props.searchSchema': {\n      handler(now = [], prev = []) {\n        const size = new Set([...now.map(item => item.field), ...prev.map(item => item.field)]).size;\n        if ((size !== prev.length || size !== now.length) && now.length) {\n          this.onReset('init');\n        }\n      },\n      immediate: true\n    },\n    '$props.initShowMore'(val) {\n      this.showMore = val;\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.search-action-box {\n  text-align: right;\n  .more-btn {\n    cursor: pointer;\n    color: #3d6ed1;\n    margin-right: 12px;\n  }\n}\n\n.option-box {\n  display: flex;\n  border-top: rgb(241, 241, 241) solid 2px;\n  padding: 16px 0;\n  .option-box-left {\n    text-align: left;\n    flex: 1;\n  }\n  .option-box-right {\n    text-align: right;\n    flex: 1;\n  }\n  .el-button--medium {\n    padding: 0;\n  }\n  .el-form-item {\n    margin: 0;\n  }\n}\n\n.pms-ui .list-btn {\n  margin-right: 12px;\n\n  width: auto;\n  padding: 0 20px;\n  white-space: nowrap;\n\n  &.light-btn {\n    border: 1px solid #3d6ed1;\n    color: #3d6ed1;\n    background-color: #fff;\n  }\n\n  &.clear-btn {\n    color: #555555;\n    background-color: #fff;\n    border: 1px solid #e4e4e4;\n  }\n\n  &.mass-approve-btn {\n    border: 1px solid #50962b;\n    color: #50962b;\n    background-color: #fff;\n  }\n\n  &.mass-reject-btn {\n    color: #e57471;\n    border: 1px solid #e57471;\n    background-color: #fff;\n  }\n\n  &:last-child {\n    margin: 0;\n  }\n}\n</style>\n<style lang=\"scss\">\n.exportGroup-btn {\n  margin-right: 8px;\n  vertical-align: middle;\n  .el-button--primary {\n    background-color: #3d6ed1;\n    border-color: #3d6ed1;\n  }\n  .el-button--medium {\n    padding: 8px 12px;\n  }\n  .el-dropdown__caret-button {\n    padding: 8px 6px;\n  }\n}\n\n.pms-search-form {\n  .el-autocomplete {\n    width: 100%;\n  }\n  .el-form-item--medium .el-form-item__content {\n    display: inline-block;\n  }\n  .el-low {\n    display: flex;\n  }\n\n  .el-col {\n    float: none;\n    display: inline-block;\n    // min-width: 258px;\n    width: calc(25% - 12px);\n    // flex: 1 0 258px;\n    vertical-align: middle;\n    margin: 0 12px 16px 0;\n\n    .el-form-item {\n      width: 100%;\n      display: flex;\n      border: 1px solid #e2e6ec;\n      border-radius: 4px;\n      box-sizing: content-box;\n      height: 30px;\n      line-height: 30px;\n      margin: 0px;\n    }\n  }\n\n  .long-col {\n    width: calc(50% - 12px);\n    .el-form-item__label {\n      max-width: 236px;\n    }\n  }\n\n  .el-form-item__label {\n    max-width: 128px;\n    background-color: #fafbfd;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    padding: 0 8px;\n    border-radius: 4px 0 0 4px;\n    border-right: 1px solid #e2e6ec;\n  }\n  .el-form-item__content {\n    flex: 1;\n  }\n  .el-input__inner,\n  .el-range-input {\n    border: 0;\n    background-color: transparent;\n    height: auto;\n    padding: 0 0 0 8px;\n    vertical-align: initial;\n    text-align: left;\n    margin: 0;\n    line-height: 30px;\n    &:hover {\n      border: 0;\n      background-color: #faf1e0;\n    }\n  }\n  .el-form-item--medium .el-form-item__content,\n  .el-form-item--medium .el-form-item__label,\n  .el-cascader--medium.el-cascader {\n    line-height: 30px;\n    color: #333;\n  }\n  .el-cascader--medium.el-cascader {\n    width: 100%;\n  }\n  .el-input.is-disabled .el-input__inner {\n    background-color: #fafbfd;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/Attachment/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/Attachment/mixins.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/BaseItem/baseForm/index.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"baseForm\" is not PascalCase.","line":21,"column":9,"nodeType":"Literal","endLine":21,"endColumn":19,"fix":{"range":[749,757],"text":"BaseForm"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div>\n    <el-form ref=\"baseForm\" label-position=\"left\" :rules=\"useRules\" :model=\"form\" v-bind=\"formProp\">\n      <el-row v-for=\"item in useSchema\" :key=\"item.field\" :span=\"span\">\n        <el-form-item :required=\"item.required\" :prop=\"item.field\" :label=\"`${item.label} :`\" :showMessage=\"item.isEdit\">\n          <slot v-if=\"item.isExtend\" :schema=\"item\"> </slot>\n          <pms-form-item v-else @input=\"onInput\" :renderData=\"{ schema: item, form: form }\"></pms-form-item>\n        </el-form-item>\n      </el-row>\n    </el-form>\n  </div>\n</template>\n\n<script>\nimport PMSFormItem from '../formItem';\nimport { SchemaFactory } from '@/components/BaseItem/baseForm/schemaFactory';\n\n// TODO: 已废弃，封装价值太低，建议直接使用el-form\n\nexport default {\n  name: 'baseForm',\n  components: {\n    'pms-form-item': PMSFormItem\n  },\n  props: {\n    form: Object, // 必填\n    schema: Array, // 必填\n    rules: Object, // 可选\n\n    type: String, // 可选，=simple时，不需要额外实例化SchemaFactory\n    isEdit: Boolean, // 可选, =simple时使用，其他则在schema中定义\n\n    // 可选，样式\n    formProp: {\n      default: () => ({\n        labelWidth: 'auto'\n      })\n    },\n    span: {\n      default: 24\n    }\n  },\n  data() {\n    return {\n      formSchema: {}\n    };\n  },\n  created() {\n    if (this.type === 'simple') {\n      this.formSchema = new SchemaFactory();\n    }\n  },\n  computed: {\n    useSchema() {\n      if (this.type === 'simple') {\n        return this.formSchema.getSchema({\n          config: this.schema,\n          form: this.form,\n          isEdit: this.isEdit\n        });\n      }\n      return this.schema;\n    },\n    useRules() {\n      if (this.type === 'simple') {\n        return this.formSchema.getRules(this.useSchema);\n      }\n      return this.rules;\n    }\n  },\n  methods: {\n    async validateForm() {\n      const res = await this.$refs['baseForm'].validate();\n      return res;\n    },\n    onInput(...params) {\n      this.$emit('input', ...params);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped></style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/BaseItem/baseForm/schemaFactory.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/BaseItem/baseItem/types/checkbox-group.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/BaseItem/baseItem/types/el-switch.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/BaseItem/baseItem/types/index.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/BaseItem/baseItem/types/radio-group.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/BaseItem/baseItem/types/select.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/BaseItem/common.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/BaseItem/formItem.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/BaseItem/index.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/BaseItem/schemaComponents/date-picker/index.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/BaseItem/schemaComponents/enum.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/BaseItem/schemaComponents/index.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/BaseItem/schemaComponents/input-array-inline/index.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/BaseItem/schemaComponents/input-array-inline/index.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"inputArrayInline\" is not PascalCase.","line":31,"column":9,"nodeType":"Literal","endLine":31,"endColumn":27,"fix":{"range":[903,919],"text":"InputArrayInline"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div>\n    <div v-for=\"(item, index) in value\" :key=\"index\" class=\"input-array-inline\">\n      <div class=\"input-array-input\">\n        <slot :index=\"index\" :value=\"value\">\n          <el-input\n            v-model=\"value[index]\"\n            @change=\"value => change(value, index)\"\n            :maxlength=\"maxStringLength\"\n            :disabled=\"disabled[index]\"\n          ></el-input>\n        </slot>\n      </div>\n      <span v-if=\"maxStringLength\" class=\"input-array-tips\">\n        <span>{{ item.length }}/{{ maxStringLength }}</span>\n      </span>\n      <i class=\"el-icon-remove\" v-if=\"isShowBtn && value.length > 1\" @click=\"removeOne(index)\"></i>\n      <i\n        class=\"el-icon-circle-plus\"\n        v-if=\"isShowBtn && value.length < count && index === value.length - 1\"\n        @click=\"addOne()\"\n      ></i>\n    </div>\n  </div>\n</template>\n\n<script>\n// 行内input类型\n\nexport default {\n  name: 'inputArrayInline',\n  model: {\n    prop: 'value',\n    event: 'input'\n  },\n  props: {\n    value: {\n      type: Array,\n      default: () => {\n        return [];\n      }\n    },\n    maxStringLength: {\n      type: Number,\n      default: null\n    },\n    count: {\n      // 最大数量\n      type: Number,\n      default: 1\n    },\n    btnLabel: {\n      type: String,\n      default: 'commonAddNewOne'\n    },\n    isShowBtn: {\n      default: true\n    },\n    disabled: {\n      type: Array,\n      default: () => []\n    }\n  },\n  watch: {\n    value: {\n      handler(now) {\n        if (now.length < 1) this.addOne();\n      },\n      immediate: true\n    }\n  },\n  data() {\n    return {};\n  },\n  methods: {\n    change(value, index) {\n      this.$emit('input', this.value, 'input', index);\n    },\n    addOne() {\n      this.$emit('input', this.value.concat(['']), 'add');\n    },\n    removeOne(index) {\n      this.value.splice(index, 1);\n      this.$emit('input', this.value, 'remove', index);\n    }\n  }\n};\n</script>\n<style lang=\"scss\">\n.input-array-inline {\n  .el-input__inner {\n    width: 240px;\n  }\n}\n</style>\n<style lang=\"scss\" scoped>\n.input-array-inline {\n  margin: 0 5px 10px 0;\n  display: inline-block;\n  .input-array-input {\n    display: inline-block;\n  }\n  .input-array-tips {\n    color: #333;\n    opacity: 0.5;\n  }\n  .el-icon-remove {\n    font-size: 18px;\n    color: #f56c6c;\n  }\n  .el-icon-circle-plus {\n    font-size: 18px;\n    color: #409eff;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/BaseItem/schemaComponents/input-array-pms-user/index.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/BaseItem/schemaComponents/input-array-pms-user/index.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"inputArrayPmsUser\" is not PascalCase.","line":26,"column":9,"nodeType":"Literal","endLine":26,"endColumn":28,"fix":{"range":[768,785],"text":"InputArrayPmsUser"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div>\n    <input-array-inline v-bind=\"$props\" @input=\"onInput\">\n      <template v-slot=\"slotProps\">\n        <el-autocomplete\n          v-model=\"value[slotProps.index]\"\n          :maxlength=\"maxStringLength\"\n          :fetchSuggestions=\"checkEmailInUserList\"\n          @select=\"onSelect(slotProps.index, $event)\"\n          @input=\"onChange(slotProps.index, $event)\"\n          :disabled=\"disabled[slotProps.index]\"\n        ></el-autocomplete>\n      </template>\n    </input-array-inline>\n  </div>\n</template>\n\n<script>\n// 行内input类型\nimport inputArrayInline from '../input-array-inline/index.vue';\nimport { getUsers } from '@/api/userRole';\nimport { commonFetchAction } from '@/utils';\nimport { emailTypes } from '@/utils/constant';\n\nexport default {\n  name: 'inputArrayPmsUser',\n  components: {\n    inputArrayInline\n  },\n  model: {\n    prop: 'value',\n    event: 'input'\n  },\n  props: {\n    value: {\n      type: Array,\n      default: () => {\n        return [];\n      }\n    },\n    maxStringLength: {\n      type: Number,\n      default: null\n    },\n    count: {\n      // 最大数量\n      type: Number,\n      default: 1\n    },\n    btnLabel: {\n      type: String,\n      default: 'commonAddNewOne'\n    },\n    isShowBtn: {\n      default: true\n    },\n    disabled: {\n      type: Array,\n      default: () => []\n    }\n  },\n  data() {\n    return {\n      emailTypes\n    };\n  },\n  methods: {\n    onChange(index, value) {\n      this.$emit('input', this.value, 'input', index);\n    },\n    onInput(...params) {\n      this.$emit('input', ...params);\n    },\n    onSelect(index, item) {\n      this.$emit('select', item, index);\n    },\n    async checkEmailInUserList(value, cb) {\n      if (!value) {\n        return cb([]);\n      }\n      try {\n        const params = {\n          email: value\n        };\n        const res = await getUsers(params);\n        commonFetchAction(res, data => {\n          if (data.users.length < 1) {\n            return cb([{ value, email: value, phone: '', fromCreate: true }]);\n          }\n          cb(\n            (data.users || [])\n              .map(user => {\n                return {\n                  value: user.email,\n                  email: user.email,\n                  phone: user.phone\n                };\n              })\n              .filter(user => this.emailTypes.includes(user.email.slice(user.email.indexOf('@'))))\n          );\n        });\n      } catch (e) {\n        // this.$message({ type: 'error', message: e });\n        cb([]);\n      }\n    }\n    // addOne() {\n    //   this.$emit('input', this.value.concat(['']));\n    // },\n    // removeOne(index) {\n    //   this.value.splice(index, 1);\n    //   this.$emit('input', this.value, index);\n    // }\n  }\n};\n</script>\n<style lang=\"scss\">\n// .input-array-inline {\n//   .el-input__inner {\n//     width: 240px;\n//   }\n// }\n//\n</style>\n//\n<style lang=\"scss\" scoped>\n// .input-array-inline {\n//   margin: 0 5px 10px 0;\n//   display: inline-block;\n//   .input-array-input {\n//     display: inline-block;\n//   }\n//   .input-array-tips {\n//     color: #333;\n//     opacity: 0.5;\n//   }\n//   .el-icon-remove {\n//     font-size: 18px;\n//     color: #f56c6c;\n//   }\n//   .el-icon-circle-plus {\n//     font-size: 18px;\n//     color: #409eff;\n//   }\n// }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/BaseItem/schemaComponents/input-array/index.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/BaseItem/schemaComponents/input-array/index.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"inputArray\" is not PascalCase.","line":35,"column":9,"nodeType":"Literal","endLine":35,"endColumn":21,"fix":{"range":[1004,1014],"text":"InputArray"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div>\n    <div v-for=\"(item, index) in value\" :key=\"index\" class=\"input-array-line\">\n      <div class=\"input-array-input\">\n        <slot :index=\"index\" :value=\"value\">\n        <el-input\n          v-model=\"value[index]\"\n          @change=\"value => change(value, index)\"\n          :maxlength=\"maxStringLength\"\n          type=\"textarea\"\n          :autosize=\"{ minRows: 2, maxRows: 4 }\"\n          :disabled=\"disabled[index]\"\n        ></el-input>\n        </slot>\n      </div>\n      <span class=\"input-array-tips\">\n        <span>{{ item.length }}/{{ maxStringLength }}</span>\n        <i v-if=\"value.length > 1\" class=\"el-icon-error remove-icon\" @click=\"removeOne(index)\"></i>\n      </span>\n    </div>\n\n    <div>\n      <el-button v-if=\"value.length < count\" type=\"text\" class=\"add-btn\" @click=\"addOne\">\n        <i class=\"el-icon-circle-plus-outline add-icon\"></i>\n        {{ $t(btnLabel) }}\n      </el-button>\n    </div>\n  </div>\n</template>\n\n<script>\n// textarea类型，一行一个\n\nexport default {\n  name: 'inputArray',\n  props: {\n    model: {\n      prop: 'value',\n      event: 'input'\n    },\n    value: {\n      type: Array,\n      default: () => {\n        return [];\n      }\n    },\n    maxStringLength: {\n      type: Number,\n      default: 20\n    },\n    count: {\n      type: Number,\n      default: 1\n    },\n    btnLabel: {\n      type: String,\n      default: 'commonAddNewOne'\n    },\n    disabled: {\n      type: Array,\n      default: () => []\n    }\n  },\n  data() {\n    return {};\n  },\n  methods: {\n    change(value, index) {\n      this.$emit('input', this.value, index);\n    },\n    addOne() {\n      this.$emit('input', this.value.concat(['']));\n    },\n    removeOne(index) {\n      this.value.splice(index, 1);\n      this.$emit('input', this.value, index);\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.input-array-line {\n  margin-bottom: 10px;\n  .input-array-input {\n    display: inline-block;\n    width: 480px;\n  }\n  .input-array-tips {\n    color: #333;\n    opacity: 0.5;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/BaseItem/schemaComponents/number-range/index.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/BaseItem/schemaTemplate/fieldConfig/brand_id.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/BaseItem/schemaTemplate/fieldConfig/category_cluster.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/BaseItem/schemaTemplate/fieldConfig/l1_category.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/BaseItem/schemaTemplate/fieldConfig/sbs_vendor_id.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/BaseItem/schemaTemplate/fieldConfig/seller_id.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/BaseItem/schemaTemplate/fieldConfig/shop_id.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/BaseItem/schemaTemplate/fieldConfig/supplier_id.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/BaseItem/schemaTemplate/index.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/BaseItem/schemaTemplate/utils.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/BaseItem/schemaTypes/checkbox-group.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/BaseItem/schemaTypes/el-switch.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/BaseItem/schemaTypes/index.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/BaseItem/schemaTypes/radio-group.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/BaseItem/tableItem.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/BaseRenderItem/categorySearch.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/Breadcrumb/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/BudgetRequset/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/Canvas/signature.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/CheckAllTable/checkAllCrossTable.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/CheckAllTable/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/CheckAllTable/list.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/Comments/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/Dialog/addSkuDialog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/Dialog/massGeneratePO.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/Dialog/remarkDialog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/Dialog/remarkLogDialog.vue","messages":[{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"inbound_id\" is not in camelCase.","line":31,"column":5,"nodeType":"Property","endLine":33,"endColumn":6},{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"carton_seq\" is not in camelCase.","line":34,"column":5,"nodeType":"Property","endLine":36,"endColumn":6}],"errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"remark-log-container\">\n    <el-dialog class=\"pms-ui\" width=\"800px\"\n      :title=\"$t('remarkLog')\" :visible.sync=\"dialogVisible\" @close=\"onCloseDialog\">\n      <el-table :data=\"remarkList\" border max-height=\"500\" :row-class-name=\"getRowClass\">\n        <el-table-column :label=\"$t('commonRemark')\" prop=\"remark\" width=\"540\"></el-table-column>\n        <el-table-column :label=\"$t('commonCreateTime')\" prop=\"ctime\">\n          <template slot-scope=\"scope\">\n            {{formatTime(scope.row.ctime)}}\n          </template>\n        </el-table-column>\n        <el-table-column :label=\"$t('commonAction')\" prop=\"ctime\">\n          <template slot-scope=\"scope\">\n            <span v-if=\"scope.row.is_del === 0\" class=\"delete-text\" @click=\"deleteRemark(scope.row.id)\">{{$t('commonDelete')}}</span>\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { apiGetCartonRemark, apiDeleteCartonRemark } from '@/api/carton';\nimport moment from 'moment';\nexport default {\n  props: {\n    visible: {\n      required: true,\n      type: Boolean\n    },\n    inbound_id: {\n      required: true\n    },\n    carton_seq: {\n      require: true\n    }\n  },\n  data() {\n    return {\n      remarkList: [],\n      dialogVisible: false\n    };\n  },\n  watch: {\n    visible: {\n      handler(val) {\n        this.dialogVisible = val;\n        if (val) {\n          this.getList();\n        }\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    getRowClass({ row, rowIndex }) {\n      if (row.is_del === 1) {\n        return 'has-delete';\n      }\n    },\n    formatTime(val) {\n      return moment(val * 1000).format('YYYY-MM-DD');\n    },\n    onCloseDialog() {\n      this.$emit('close');\n    },\n    deleteRemark(id) {\n      apiDeleteCartonRemark({ id }).then(res => {\n        if (res.retcode === 0) {\n          this.getList();\n          this.$message.success(this.$t('commonSuccess'));\n        } else {\n          this.$message.error(res.info);\n        }\n      }).catch(err => {\n        this.$message.error(err.message);\n      });\n    },\n    getList() {\n      apiGetCartonRemark({\n        inbound_id: this.inbound_id,\n        carton_seq: this.carton_seq\n      }).then(res => {\n        if (res.retcode === 0) {\n          this.remarkList = res.data.remark_list;\n        } else {\n          this.$message.error(res.info);\n        }\n      }).catch(e => {\n        this.$message.error(e.message);\n      });\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.remark-log-container {\n  .delete-text {\n    color: #3D6ED1;\n    cursor: pointer;\n  }\n}\n</style>\n\n<style lang=\"scss\">\n@import \"~@/styles/common.scss\";\n.remark-log-container {\n  .el-table {\n    border-radius: 4px;\n  }\n  .el-dialog__body {\n    padding-top: 14px;\n    padding-bottom: 24px;\n  }\n  .el-table__row.has-delete .cell {\n    color: #999999;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/Dialog/removeSkuReason.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/Dialog/stockApprovalDialog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/DowloadCenter/uploadHistoryDialog.vue","messages":[{"ruleId":"vue/no-deprecated-props-default-this","severity":2,"message":"Props default value factory functions no longer have access to `this`.","line":59,"column":20,"nodeType":"ThisExpression","messageId":"deprecated","endLine":59,"endColumn":24},{"ruleId":"vue/no-deprecated-props-default-this","severity":2,"message":"Props default value factory functions no longer have access to `this`.","line":62,"column":20,"nodeType":"ThisExpression","messageId":"deprecated","endLine":62,"endColumn":24},{"ruleId":"vue/no-deprecated-props-default-this","severity":2,"message":"Props default value factory functions no longer have access to `this`.","line":63,"column":20,"nodeType":"ThisExpression","messageId":"deprecated","endLine":63,"endColumn":24},{"ruleId":"vue/no-deprecated-props-default-this","severity":2,"message":"Props default value factory functions no longer have access to `this`.","line":66,"column":20,"nodeType":"ThisExpression","messageId":"deprecated","endLine":66,"endColumn":24},{"ruleId":"vue/no-deprecated-props-default-this","severity":2,"message":"Props default value factory functions no longer have access to `this`.","line":74,"column":20,"nodeType":"ThisExpression","messageId":"deprecated","endLine":74,"endColumn":24},{"ruleId":"vue/no-deprecated-props-default-this","severity":2,"message":"Props default value factory functions no longer have access to `this`.","line":82,"column":38,"nodeType":"ThisExpression","messageId":"deprecated","endLine":82,"endColumn":42},{"ruleId":"vue/no-deprecated-props-default-this","severity":2,"message":"Props default value factory functions no longer have access to `this`.","line":84,"column":17,"nodeType":"ThisExpression","messageId":"deprecated","endLine":84,"endColumn":21},{"ruleId":"vue/no-deprecated-destroyed-lifecycle","severity":2,"message":"The `beforeDestroy` lifecycle hook is deprecated. Use `beforeUnmount` instead.","line":164,"column":3,"nodeType":"Identifier","messageId":"deprecatedBeforeDestroy","endLine":164,"endColumn":16,"suggestions":[{"messageId":"insteadBeforeUnmount","fix":{"range":[5161,5174],"text":"beforeUnmount"},"desc":"Instead, change to `beforeUnmount`."}]}],"errorCount":8,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-dialog @close=\"closeDialog\" :visible.sync=\"historyVisible\" :title=\"$t('commonUploadHistory')\">\n    <list-view\n      :dataList=\"dataList\"\n      v-loading=\"loading\"\n      :config=\"{ align: 'center' }\"\n      :tableSchema=\"tableSchema\"\n    >\n    </list-view>\n    <section v-if=\"historyVisible\" class=\"pagination-center\">\n      <el-pagination background layout=\"sizes, prev, pager, next\" :current-page='searchParams.page_no'\n        :total.sync=\"total\" :page-sizes='[10, 20, 50, 100]' :page-size=\"searchParams.count\"\n        @size-change='handleSizeChange' @current-change=\"handlePageChange\"></el-pagination>\n    </section>\n  </el-dialog>\n</template>\n\n<script>\nimport ListView from '@/components/ApproveList/list';\n// import { getExportHistory, downloadHistoryResult } from '@/api/history';\nimport { uploadLifecycleHistoryMore, downloadHistoryResult } from '@/api/lifecycle';\nimport { downloadBlobFile } from '@/utils/downloadFile';\nimport moment from 'moment';\nimport { ExportTaskTypeMap, showUploadTypeMap, getContentType } from '@/utils/constant';\nexport default {\n  components: {\n    ListView\n  },\n  data() {\n    return {\n      historyVisible: false,\n      loading: false,\n      total: 0,\n      dataList: [],\n      searchParams: {\n        page_no: 1,\n        count: 10\n      },\n      timeID: null\n    };\n  },\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    interval: {\n      type: Number,\n      default: 0\n    },\n    taskType: {\n      type: Array,\n      required: true\n    },\n    tableSchema: {\n      type: Array,\n      default() {\n        return [\n          { label: this.$t('purchaseOrder.createTime'), field: 'ctime',\n            render: (schema, row) => row.ctime ? moment(row.ctime * 1000).format('YYYY-MM-DD HH:mm') : '/'\n          },\n          { label: this.$t('userRole.userList.username'), field: 'operator' },\n          { label: this.$t('Type'), field: 'task_type', type: 'enum',\n            options: showUploadTypeMap\n          },\n          { label: this.$t('userRole.userList.status'), field: 'status', type: 'enum',\n            options: [\n              { label: 'Processing', value: 1 },\n              { label: 'Success', value: 2 },\n              { label: 'Fail', value: 3 }\n            ]\n          },\n          { columnKey: 'action',\n            label: this.$t('purchaseRequest.action'),\n            width: '180px',\n            render: (schema, row) => {\n              return row.result_link ? [\n                'el-button',\n                {\n                  class: 'action-btn',\n                  props: { type: 'default', size: 'mini' },\n                  on: { click: () => this.downloadResult(row) }\n                },\n                this.$t('purchaseRequest.download')\n              ] : null;\n            }\n          }\n        ];\n      }\n    }\n  },\n  methods: {\n    getHistory(params = {}) {\n      this.loading = true;\n      // getExportHistory({ ...params, task_type: this.taskType }).then(resp => {\n      uploadLifecycleHistoryMore({ ...params, task_type_list: this.taskType }).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.dataList = resp.data.task_history_list || [];\n          this.total = resp.data.total || 0;\n        }\n        this.loading = false;\n      }).catch(() => {\n        this.$message.error(`Server error, please retry and report to dev if retry doesn't work.`);\n        this.loading = false;\n      });\n    },\n    handleSizeChange(count) {\n      this.searchParams.page_no = 1;\n      this.searchParams.count = count;\n      this.getHistory(this.searchParams);\n    },\n    handlePageChange(pageIndex) {\n      this.searchParams.page_no = pageIndex;\n      this.getHistory(this.searchParams);\n    },\n    closeDialog() {\n      this.$emit('close');\n    },\n    downloadResult(row) {\n      downloadHistoryResult({ task_id: row.task_id, result_link: row.result_link }).then(resp => {\n        if (resp.type === 'application/json') {\n          const reader = new FileReader();\n          reader.onloadend = () => {\n            const result = JSON.parse(reader.result);\n            if (result.retcode !== 0) {\n              this.$message.error(result.info);\n            }\n          };\n          reader.readAsText(resp);\n        } else {\n          downloadBlobFile(resp, `${ExportTaskTypeMap[row.task_type]}_${moment().format('YYYYMMDDHHmmss')}.${getContentType(resp.type)}`);\n        }\n      }).catch((e) => {\n        this.$message.error('Download Failed');\n      });\n    }\n  },\n  watch: {\n    '$props.visible': {\n      handler(curr, prev) {\n        this.historyVisible = curr;\n        this.searchParams = {\n          page_no: 1,\n          count: 10\n        };\n        if (curr) {\n          this.getHistory(this.searchParams);\n        }\n        if (curr && this.interval) {\n          this.timeID = setInterval(() => {\n            if (this.dataList.some(item => item.status === 1)) {\n              this.getHistory(this.searchParams);\n            }\n          }, this.interval);\n        } else if (!curr && this.interval) {\n          clearInterval(this.timeID);\n        }\n      },\n      immediate: true\n    }\n  },\n  beforeDestroy() {\n    clearInterval(this.timeID);\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  .pagination-center {\n    margin-top: 20px;\n    display: flex;\n    justify-content: center;\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/DropdownSelect/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/Editor/supplierEditor.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/Hamburger/index.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"hamburger\" is not PascalCase.","line":17,"column":9,"nodeType":"Literal","endLine":17,"endColumn":20,"fix":{"range":[1346,1355],"text":"Hamburger"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div>\n    <svg t=\"1492500959545\" @click=\"toggleClick\" class=\"svg-icon hamburger\" :class=\"{'is-active':isActive}\" style=\"\" viewBox=\"0 0 1024 1024\"\n      version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"1691\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"64\" height=\"64\">\n      <path d=\"M966.8023 568.849776 57.196677 568.849776c-31.397081 0-56.850799-25.452695-56.850799-56.850799l0 0c0-31.397081 25.452695-56.849776 56.850799-56.849776l909.605623 0c31.397081 0 56.849776 25.452695 56.849776 56.849776l0 0C1023.653099 543.397081 998.200404 568.849776 966.8023 568.849776z\"\n        p-id=\"1692\"></path>\n      <path d=\"M966.8023 881.527125 57.196677 881.527125c-31.397081 0-56.850799-25.452695-56.850799-56.849776l0 0c0-31.397081 25.452695-56.849776 56.850799-56.849776l909.605623 0c31.397081 0 56.849776 25.452695 56.849776 56.849776l0 0C1023.653099 856.07443 998.200404 881.527125 966.8023 881.527125z\"\n        p-id=\"1693\"></path>\n      <path d=\"M966.8023 256.17345 57.196677 256.17345c-31.397081 0-56.850799-25.452695-56.850799-56.849776l0 0c0-31.397081 25.452695-56.850799 56.850799-56.850799l909.605623 0c31.397081 0 56.849776 25.452695 56.849776 56.850799l0 0C1023.653099 230.720755 998.200404 256.17345 966.8023 256.17345z\"\n        p-id=\"1694\"></path>\n    </svg>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'hamburger',\n  props: {\n    isActive: {\n      type: Boolean,\n      default: false\n    },\n    toggleClick: {\n      type: Function,\n      default: null\n    }\n  }\n};\n</script>\n\n<style scoped>\n.hamburger {\n    display: inline-block;\n    cursor: pointer;\n    width: 20px;\n    height: 20px;\n    transform: rotate(90deg);\n    transition: .38s;\n    transform-origin: 50% 50%;\n}\n\n.hamburger.is-active {\n    transform: rotate(0deg);\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/Home/link.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/LangSelect/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/Mobile/Dropdown.vue","messages":[{"ruleId":"vue/v-on-style","severity":2,"message":"Expected '@' instead of 'v-on:'.","line":8,"column":9,"nodeType":"VAttribute","endLine":8,"endColumn":57,"fix":{"range":[244,249],"text":"@"}},{"ruleId":"vue/v-on-style","severity":2,"message":"Expected '@' instead of 'v-on:'.","line":14,"column":10,"nodeType":"VAttribute","endLine":14,"endColumn":44,"fix":{"range":[431,436],"text":"@"}},{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"dropdown\" is not PascalCase.","line":21,"column":9,"nodeType":"Literal","endLine":21,"endColumn":19,"fix":{"range":[550,558],"text":"Dropdown"}},{"ruleId":"vue/require-valid-default-prop","severity":2,"message":"Type of the default value for 'options' prop must be a function.","line":25,"column":16,"nodeType":"ArrayExpression","endLine":25,"endColumn":18}],"errorCount":4,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"<template>\n  <div v-if='visible' class='mobile-drop'>\n    <ul class='drop-list'>\n      <li\n        v-for='(item, index) in options'\n        :class='index === activeOption ? \"drop-option active-option\" : \"drop-option\"'\n        :key=item\n        v-on:touchend.stop.prevent='switchOption(index)'\n      >\n        {{item}}\n        <span v-if='index === activeOption' class='el-icon-check chekced'></span>\n      </li>\n    </ul>\n    <div v-on:touchend.stop.prevent='close' class='drop-other'></div>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'dropdown',\n  props: {\n    options: {\n      type: Array,\n      default: []\n    },\n    visible: {\n      required: true,\n      default: false\n    },\n    activeOption: {\n      required: true,\n      default: 0\n    }\n  },\n  methods: {\n    switchOption(option) {\n      if (this.activeOption !== option) {\n        this.$emit('change', option);\n      } else {\n        this.close();\n      }\n    },\n    close() {\n      this.$emit('close');\n    }\n  }\n};\n</script>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\n  .mobile-drop {\n    display: flex;\n    flex-direction: column;\n    position: fixed;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    z-index: 9999;\n    background-color: transparent;\n    margin-top: 44px;\n    overflow: hidden;\n    font-family: AppleSystemUIFont;\n    font-size: 17px;\n    color: #030303;\n    letter-spacing: -0.41px;\n    .drop-list {\n      border-top: 1px solid rgba(0,0,0,0.25);\n      background-color: #fff;\n    }\n    .drop-option {\n      width: 100%;\n      height: 44px;\n      line-height: 44px;\n      margin-left:15px;\n      border-top: 1px solid rgba(0,0,0,0.25);\n      background-color: #fff;\n      overflow: hidden;\n      .chekced {\n        float: right;\n        margin: 12px 30px 0 0;\n        font-weight: bold;\n      }\n      &:first-child {\n        border-top: none;\n      }\n    }\n    .active-option {\n      color: #007AFF;\n    }\n    .drop-other {\n      flex: 1;\n      background-color: rgba(51,51,51,0.5);\n    }\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/Mobile/MessageBox.vue","messages":[{"ruleId":"vue/v-on-style","severity":2,"message":"Expected '@' instead of 'v-on:'.","line":2,"column":46,"nodeType":"VAttribute","endLine":2,"endColumn":80,"fix":{"range":[56,61],"text":"@"}},{"ruleId":"vue/v-on-style","severity":2,"message":"Expected '@' instead of 'v-on:'.","line":3,"column":30,"nodeType":"VAttribute","endLine":3,"endColumn":69,"fix":{"range":[121,126],"text":"@"}},{"ruleId":"vue/v-on-style","severity":2,"message":"Expected '@' instead of 'v-on:'.","line":6,"column":15,"nodeType":"VAttribute","endLine":6,"endColumn":49,"fix":{"range":[264,269],"text":"@"}},{"ruleId":"vue/v-on-style","severity":2,"message":"Expected '@' instead of 'v-on:'.","line":7,"column":15,"nodeType":"VAttribute","endLine":7,"endColumn":51,"fix":{"range":[398,403],"text":"@"}},{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"messageBox\" is not PascalCase.","line":16,"column":9,"nodeType":"Literal","endLine":16,"endColumn":21,"fix":{"range":[592,602],"text":"MessageBox"}}],"errorCount":5,"warningCount":0,"fixableErrorCount":5,"fixableWarningCount":0,"source":"<template>\n  <div v-if='visible' class='mobile-message' v-on:touchend.stop.prevent='close'>\n    <div class='message-box' v-on:touchend.stop.prevent='whiteEvent'>\n      <p class='message-title'>{{config.title}}</p>\n      <section class='message-btn'>\n        <span v-on:touchend.stop.prevent='close' class='message-btn-text' v-if='config.cancelBtnText'>{{config.cancelBtnText}}</span>\n        <span v-on:touchend.stop.prevent='confirm' class='message-btn-text'>{{config.confirmBtnText || 'Confirm'}}</span>\n      </section>\n    </div>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'messageBox',\n  props: {\n    config: {\n      type: Object\n    },\n    visible: {\n      required: true,\n      default: false\n    }\n  },\n  methods: {\n    confirm() {\n      typeof this.config.confirm === 'function' && this.config.confirm();\n    },\n    close() {\n      typeof this.config.cancel === 'function' && this.config.cancel();\n    },\n    whiteEvent() {}\n  }\n};\n</script>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\n  .mobile-message {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: fixed;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    z-index: 9999;\n    background-color: rgba(0,0,0,0.4);\n    overflow: hidden;\n    .message-box {\n      width: 270px;\n      height: 125.5px;\n      border-radius: 12px;\n      font-family: SFUIText-Regular;\n      font-size: 17px;\n      color: #030303;\n      background-color: #F1F1F1;\n      .message-title {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        font-family: SFUIText-Regular;\n        font-size: 17px;\n        color: #030303;\n        width: 100%;\n        height: 81.5px;\n        overflow: hidden;\n      }\n      .message-btn {\n        display: flex;\n        height: 44px;\n        line-height: 44px;\n        text-align: center;\n        border-top: 1px solid #EAEAEA;\n      }\n      .message-btn-text {\n        display: inline-block;\n        flex: 1;\n        font-family: SFNSText;\n        color: #007AFF;\n        &:nth-child(2) {\n          border-left: 1px solid #EAEAEA;\n        }\n      }\n    }\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/Mobile/Tabs.vue","messages":[{"ruleId":"vue/v-on-style","severity":2,"message":"Expected '@' instead of 'v-on:'.","line":7,"column":7,"nodeType":"VAttribute","endLine":7,"endColumn":39,"fix":{"range":[205,210],"text":"@"}},{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"tabs\" is not PascalCase.","line":17,"column":9,"nodeType":"Literal","endLine":17,"endColumn":15,"fix":{"range":[326,330],"text":"Tabs"}},{"ruleId":"vue/require-valid-default-prop","severity":2,"message":"Type of the default value for 'tabs' prop must be a function.","line":21,"column":16,"nodeType":"ArrayExpression","endLine":21,"endColumn":18}],"errorCount":3,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"<template>\n  <ul class='flex mobile-tabs'>\n    <li\n      v-for='(item, index) in tabs'\n      :class='index === activeTab ? \"flex-cell mobile-tab active-tab\" : \"flex-cell mobile-tab\"'\n      :key=item\n      v-on:touchend='switchTab(index)'\n    >\n      {{item}}\n    </li>\n  </ul>\n</template>\n\n<script>\n\nexport default {\n  name: 'tabs',\n  props: {\n    tabs: {\n      type: Array,\n      default: []\n    },\n    activeTab: {\n      required: true,\n      default: 0\n    }\n  },\n  methods: {\n    switchTab(tab) {\n      if (this.activetab !== tab) {\n        this.$emit('change', tab);\n      }\n    }\n  }\n};\n</script>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\n  .flex {\n    display: flex;\n  }\n  .flex-cell {\n    flex: 1;\n  }\n  .mobile-tabs {\n    margin: 10px;\n    border-radius: 5px;\n    font-family: SFUIText-Regular;\n  }\n  .mobile-tab {\n    height: 30px;\n    line-height: 30px;\n    text-align: center;\n    color: #007AFF;\n    background-color: #fff;\n    border: 1px solid #007AFF;\n    border-right: none;\n    &:first-child{\n      border-top-left-radius: 5px;\n      border-bottom-left-radius: 5px;\n    }\n    &:last-child{\n      border-right: 1px solid #007AFF;\n      border-top-right-radius: 5px;\n      border-bottom-right-radius: 5px;\n    }\n  }\n  .active-tab {\n    background-color: #007AFF;\n    color: #fff;\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/Mobile/TopBar.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"topbar\" is not PascalCase.","line":12,"column":9,"nodeType":"Literal","endLine":12,"endColumn":17,"fix":{"range":[190,196],"text":"Topbar"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <section>\n    <slot name='bar-left'></slot>\n    <slot name='bar-center'></slot>\n    <slot name='bar-right'></slot>\n  </section>\n</template>\n\n<script>\n\nexport default {\n  name: 'topbar'\n};\n</script>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/Mobile/index.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/Overview/summaryOverview.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/Overview/valueOverview.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/PDFJS/embed.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/RTSManagement/actionLogDialog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/RTSManagement/addASNDialog.vue","messages":[{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":145,"column":25,"nodeType":"ThisExpression","endLine":145,"endColumn":29},{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"order_id\" is not in camelCase.","line":210,"column":5,"nodeType":"Property","endLine":213,"endColumn":6},{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"reservation_id\" is not in camelCase.","line":221,"column":5,"nodeType":"Property","endLine":224,"endColumn":6},{"ruleId":"vue/no-deprecated-destroyed-lifecycle","severity":2,"message":"The `beforeDestroy` lifecycle hook is deprecated. Use `beforeUnmount` instead.","line":277,"column":3,"nodeType":"Identifier","messageId":"deprecatedBeforeDestroy","endLine":277,"endColumn":16,"suggestions":[{"messageId":"insteadBeforeUnmount","fix":{"range":[11976,11989],"text":"beforeUnmount"},"desc":"Instead, change to `beforeUnmount`."}]}],"errorCount":4,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n<el-dialog class=\"add-asn-dialog\" :visible=\"dialogVisible\" @close=\"closeDialog\">\n  <section slot=\"title\">\n      {{$t('purchaseOrder.addASN')}}<span v-if=\"isNotTW\" class=\"sub-title\">{{`(${`${$t('IRRemainIBQuota')}: ${remainIBQty || '/'}`})`}}</span>\n      <span class=\"process-info\" v-if=\"dialogFormDisabled\">\n        <i class=\"el-icon-loading\"></i>\n        In Process\n      </span>\n      <div class=\"error-message\" v-if=\"reservationStatus === 3\">{{`Failed: ${failedMessage}`}}</div>\n    </section><section class=\"total-baseInfo-section\">\n    <el-row v-for=\"(base,index) in baseInfoList\" :key=\"index\" class=\"baseInfo-row\">\n      <el-col :span=\"12\" v-for=\"(item, idx) in base\" :key=\"item.label + idx\">\n        <span class=\"supplier-label\">{{item.label}}</span>\n        <span class='supplier-gap'>{{':'}}</span>\n        <span class='supplier-info'>{{item.value}}</span>\n      </el-col>\n    </el-row>\n    <el-form :model=\"asnForm\" ref=\"createModeForm\" label-width=\"120px\" :disabled=\"isResubmit || isResync\">\n      <el-form-item :label='$t(\"purchaseOrder.shipBySku\")' :rules=\"{ required: true, trigger: 'change', message: 'Ship By Sku is required'}\" prop=\"create_mode\">\n        <span class='supplier-gap'>{{':'}}</span>\n        <el-radio-group v-model=\"asnForm.create_mode\">\n          <el-radio :label=\"1\">No</el-radio>\n          <el-radio :label=\"2\">Yes</el-radio>\n        </el-radio-group>\n      </el-form-item>\n    </el-form>\n  </section>\n  <section class=\"total-skuList-section\">\n    <h3 class=\"title\">{{$t('purchaseOrder.pendingAddASN')}}</h3>\n    <el-table :data=\"(pendingASN.sku_list || []).filter(sku => !!sku.pending_asn_qty)\">\n      <el-table-column :label=\"$t('purchaseOrder.skuID')\" prop=\"sku_id\"></el-table-column>\n      <el-table-column :label=\"$t('purchaseOrder.skuName')\" prop=\"sku_name\"></el-table-column>\n      <el-table-column :label=\"$t('commonPendingASNQty(pcs)')\" prop=\"pending_asn_qty\"></el-table-column>\n      <el-table-column v-if=\"!hideSkuService\" :label=\"$t('serviceDetail')\" >\n        <template slot-scope=\"scope\">\n          <div v-if=\"!getHasService(scope.row.add_service_detail)\">N/A</div>\n          <el-row\n            v-else\n            v-for=\"item in getServiceDetailList(scope.row.add_service_detail)\"\n            :key=\"item.key\"\n            class=\"sku-service-row\"\n          >\n            <span class=\"label\">{{item.key}}</span>\n            <span>{{item.value}}</span>\n          </el-row>\n        </template>\n      </el-table-column>\n    </el-table>\n  </section>\n  <div class=\"btn-wrapper\" v-if=\"!hideAddASNBtn\">\n    <a @click=\"addPendingASN\" class=\"add-asd-btn\"><i class=\"el-icon-plus\"></i>{{$t('purchaseOrder.createASN')}}</a>\n  </div>\n  <section class=\"asn-list-section\" v-if=\"Array.isArray(asnForm.asn_list) && asnForm.asn_list.length > 0\">\n    <el-form label-width='200px' label-position=\"right\" ref=\"asnForm\" :model=\"asnForm\" :disabled=\"isResync\">\n        <section v-for='(item, index) in asnForm.asn_list' :key='index' class='asn-info'>\n          <i class=\"el-icon-remove asn-delete-icon\" @click=\"deleteASNItem(index)\"></i>\n           <el-form-item :rules=\"{ validator: validateDeliveryDate(item), trigger: 'change'}\"\n           :prop=\"`asn_list.${index}.expected_delivery_date_str`\" v-loading=\"fetching\" :label='$t(\"asnControlExpectedDeliveryDate\")'>\n              <el-date-picker value-format='yyyy-MM-dd HH:mm:ss'\n              class='asn-date-range' type='date' :popper-class='`asn-date-picker`'\n              :editable=false :picker-options='dateOptions'\n              format='yyyy-MM-dd' :clearable=\"false\"\n              :disabled=\"isFixedInboundDate\"\n              :value='item.expected_delivery_date_str'\n              @input=\"(value) => handleChangeDeliveryDate(value, item, index)\"\n              ></el-date-picker>\n            </el-form-item>\n            <el-form-item :rules=\"{ validator: validateDeliveryDate(item), trigger: 'change'}\"\n           :prop=\"`asn_list.${index}.expected_delivery_date_str`\" v-loading=\"fetching\" :label='$t(\"purchaseOrder.expectedDeliveryDate\")'>\n              <el-time-picker value-format='yyyy-MM-dd HH:mm:ss'\n              class='asn-date-range' type='date' :popper-class='`asn-date-picker`'\n              :editable=false :picker-options=\"{ selectableRange: (getDateTimeslot(item) || []).map(time => {\n                return `${formatTime(time.beg_time)}:00 - ${formatTime(time.end_time)}:00`;\n              })}\"\n              format='HH:mm' :clearable=\"false\"\n              :value='item.expected_delivery_date_str'\n              @input=\"(value) => handleChangeDeliveryTime(value, item, index)\"\n              ></el-time-picker>\n            </el-form-item>\n          <el-form-item :label='$t(\"purchaseOrder.availableTimeSlot\")'>\n            <p>\n              <span v-for=\"time in getDateTimeslot(item) || []\" :key=\"time.id\" class=\"date-timeslot\">\n                {{`${formatTime(time.beg_time)}-${formatTime(time.end_time)}`}}\n              </span>\n            </p>\n          </el-form-item>\n\n          <el-table border :data='item.sku_list'>\n            <el-table-column align='center' prop='sku_id' :label='$t(\"purchaseOrder.skuID\")'></el-table-column>\n            <el-table-column align='center' prop='sku_name' :label='$t(\"purchaseOrder.skuName\")'></el-table-column>\n            <el-table-column align='center' prop='pending_asn_qty' :label='$t(\"purchaseOrder.pendingASNQty\")'></el-table-column>\n            <el-table-column align='center' :label=\"$t('commonSellingType')\" min-width=\"120\">\n              <template slot=\"header\" slot-scope='scope'>\n                <span>{{$t('commonSellingType')}}</span>\n                <el-popover placement=\"top\" trigger=\"hover\" width=\"320px\" popper-class=\"break-word\" :content=\"$t('commonSellingTypeTips')\">\n                  <svg-icon slot=\"reference\" iconClass=\"question\" class=\"question-icon\"></svg-icon>\n                </el-popover>\n              </template>\n              <template slot-scope='scope'>{{formatSellingType(scope.row.selling_type)}}</template>\n            </el-table-column>\n            <el-table-column align='center' prop='quantity' :label='`${$t(\"purchaseOrder.shippingQty\")} (Unit)`' width=\"160px\">\n              <template slot-scope='scope'>\n                <el-input-number @change='changeQuantity(scope.row)' size=\"small\" :precision='0' :min='0' :controls='false' v-model.number='scope.row.quantity'></el-input-number>\n              </template>\n            </el-table-column>\n            <el-table-column align='center' :label='$t(\"approvalFlow.unitName\")' width=\"100px\">\n              <template slot-scope='scope'>\n                <el-select @change='changeQuantity(scope.row)' v-model='scope.row.unit_rate'>\n                  <el-option v-for='unit in scope.row.unit_list || []' :key='unit.unit_id' :value='unit.unit_rate' :label='unit.unit_name'></el-option>\n                </el-select>\n              </template>\n            </el-table-column>\n            <el-table-column align='center' prop='shipping_qty' :label='$t(\"commonShippingQty(pcs)\")'>\n              <template slot-scope='scope'>\n                <span>{{scope.row.shipping_qty}}</span>\n              </template>\n            </el-table-column>\n            <el-table-column v-if=\"!hideSkuService\" align='center' :label='`${$t(\"serviceDetail\")}`' min-width=\"150px\">\n              <template slot-scope='scope'>\n                <span v-if=\"!Object.keys(scope.row.add_service_detail).length\">N/A</span>\n                <el-row\n                  v-else\n                  v-for=\"serviceType in Object.keys(scope.row.add_service_detail)\"\n                  :key=\"serviceType\"\n                  class=\"service-detail-edit\"\n                >\n                  <el-input-number\n                    v-model=\"scope.row.add_service_detail[serviceType]\"\n                    :disabled=\"!isOpenAddedService\"\n                    :min=\"0\"\n                    :controls=\"false\"\n                    @change=\"onServiceDetailChange(scope.row)\"\n                  />\n                  <span>{{$t(getServiceLabel(serviceType))}}</span>\n                </el-row>\n              </template>\n            </el-table-column>\n          </el-table>\n        </section>\n      </el-form>\n  </section>\n  <section class=\"btn-wrapper\">\n    <el-footer align='center'>\n      <template v-if=\"reservationStatus === 3\">\n        <template v-if=\"this.canResyncFromApi\">\n          <el-button :loading='loading' @click='confirmResync'>{{$t('commonConfirmResync')}}</el-button>\n        </template>\n        <template v-else>\n          <el-button :loading='loading' @click='confirmCreate'>{{$t('purchaseRequest.reSubmit')}}</el-button>\n          <el-button :loading='loading' class='white-red' @click='deleteASN'>{{$t('purchaseOrder.delete')}}</el-button>\n        </template>\n      </template>\n      <template v-else>\n        <el-button :loading='loading || dialogFormDisabled' @click='confirmCreate'>{{$t('purchaseRequest.confirm')}}</el-button>\n       <el-button class='white-blue' @click='closeDialog'>{{$t('purchaseRequest.close')}}</el-button>\n      </template>\n    </el-footer>\n  </section>\n</el-dialog>\n</template>\n\n<script>\nimport moment from 'moment';\nimport { isEmpty, isInteger } from 'lodash';\nimport { flow, filter, map } from 'lodash/fp';\nimport { createASN, getASNStatus, getLastASN, deleteASN, updateASN, fetchTimeSlot, massResyncASN } from '@/api/asn';\nimport { getASNControlConfig } from '@/api/asnControl';\nimport { divMod } from '@/utils/numberUtils';\nimport { ReturnCodeMap, inboundTypeList } from '@/utils/constant';\nimport { isValidASNList } from '@/utils/validate';\nimport { getUnitList } from '@/api/unitConfig';\nimport checkIRRemainQty from '@/mixins/checkIRRemainQty';\nimport { formatSellingType } from '@/utils';\nimport { isOpenAddedService } from '@/utils/switch';\n\nconst LoopInterval = 10000;\n\nconst SERVICE_KEY_TO_LABEL = {\n  bundling_qty: 'serviceTypeBundling',\n  labeling_qty: 'serviceTypeLabeling',\n  repackage_qty: 'serviceTypeRepackaging'\n};\n\nconst getServiceLabel = type => {\n  return SERVICE_KEY_TO_LABEL[type] || '';\n};\n\nconst getDefaultServiceDetail = (serviceDetail, shippingQty) => {\n  if (isEmpty(serviceDetail)) {\n    return {};\n  }\n  return Object.entries(serviceDetail).reduce(\n    (acc, [key, value]) => {\n      if (!value) {\n        return acc;\n      }\n      return { ...acc, [key]: Math.min(value, shippingQty) }; // service detail的值需要小于等于shipping qty\n    },\n    {}\n  );\n};\n\nexport default {\n  mixins: [checkIRRemainQty],\n  props: {\n    visible: {\n      type: Boolean,\n      required: true\n    },\n    order_id: {\n      type: String,\n      required: true\n    },\n    pendingASN: {\n      type: Object,\n      default: () => {}\n    },\n    inboundType: {\n      type: Number\n    },\n    reservation_id: {\n      type: String,\n      default: ''\n    },\n    rtsUnits: {\n      type: Array,\n      default: () => []\n    },\n    isResync: {\n      type: Boolean,\n      default: false\n    },\n    isResubmit: {\n      type: Boolean,\n      default: false\n    },\n    hideSkuService: { // 隐藏addition service相关信息，在RTS中创建ASN时为true\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      isOpenAddedService,\n      asnControlConfig: {\n        cb_modify_switch: 2,\n        not_cb_modify_switch: 2\n      },\n      canResyncFromApi: false,\n      dialogVisible: false,\n      timeSlotMap: {},\n      dateOptions: {\n        disabledDate(time) {\n          const timestamp = time.getTime();\n          const now = Date.now();\n          return (timestamp < now - 86400000) || (timestamp > now + 90 * 86400000);\n        }\n      },\n      timeOptions: {\n        format: 'HH:mm'\n      },\n      loading: false,\n      fetching: false,\n      asnForm: {\n        order_id: this.$props.order_id,\n        inbound_type: this.$props.inboundType,\n        create_mode: 1,\n        asn_list: [] // 当前已用的asn数量\n      },\n      pendingList: [], // 完整的可编辑asn数量\n      reservationStatus: 0, // 3: resync/resubmit\n      reservationID: '',\n      failedMessage: '',\n      timeID: null\n    };\n  },\n  beforeDestroy() {\n    clearTimeout(this.timeID);\n  },\n  computed: {\n    isNotTW() {\n      return this.pendingASN.po_country !== 'TW';\n    },\n    dialogFormDisabled() {\n      return this.reservationStatus === 1;\n    },\n    hideAddASNBtn() {\n      return this.asnForm.asn_list.length >= 5 || [1, 3].includes(this.reservationStatus);\n    },\n    timeList() {\n      return [...new Set((this.asnForm.asn_list || []).filter(asn => !!asn.expected_delivery_date_str).map(asn => {\n        return moment(asn.expected_delivery_date_str, 'YYYY-MM-DD HH:mm:ss').format('YYYY-MM-DD');\n      }))];\n    },\n    baseInfoList() {\n      const inboundType = (inboundTypeList.find(item => item.value === this.asnForm.inbound_type) || { label: '' }).label;\n      return [\n        [\n          { label: this.$t('purchaseOrder.reserveOrderId'), value: this.asnForm.order_id },\n          { label: this.$t('purchaseOrder.inboundType'), value: inboundType }\n        ],\n        [\n          { label: this.$t('purchaseOrder.vendorSideID'), value: this.pendingASN.supplier_id },\n          { label: this.$t('purchaseOrder.supplierName'), value: this.pendingASN.supplier_name }\n\n        ],\n        [\n          { label: this.$t('purchaseOrder.warehouse'), value: this.pendingASN.warehouse },\n          { label: this.$t('purchaseRequest.region'), value: this.pendingASN.po_country }\n        ]\n      ];\n    },\n    isFixedInboundDate() {\n      const field = this.pendingASN.supplier_is_cb ? 'cb_modify_switch' : 'not_cb_modify_switch';\n      return this.inboundType === 0 && this.asnControlConfig[field] === 2;\n    }\n  },\n  methods: {\n    getServiceLabel,\n    formatSellingType,\n    startLoop() {\n      getASNStatus({ reservation_id: this.reservationID }).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          if (resp.data.reservation_status !== 2) {\n            // 1-processing, 2-success, 3-failed\n            this.reservationStatus = resp.data.reservation_status || 1;\n            this.canResyncFromApi = resp.data.can_resync || false;\n            this.failedMessage = resp.data.failed_msg || '';\n            if (resp.data.reservation_status === 1) {\n              this.timeID = setTimeout(() => this.startLoop(), LoopInterval);\n            }\n          } else {\n            this.$message.success('Success');\n            this.$emit('close');\n            this.$emit('refresh');\n          }\n        }\n      }).catch(() => { this.timeID = setTimeout(() => this.startLoop(), LoopInterval); });\n    },\n    deleteASN() {\n      this.loading = true;\n      deleteASN({ reservation_id: this.reservationID }).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.$message.success('Success');\n          this.$emit('refresh');\n          this.$emit('close');\n        }\n        this.loading = false;\n      }).catch(() => { this.loading = false; });\n    },\n    onServiceDetailChange(sku) {\n      const values = Object.values(sku.add_service_detail);\n      const hasService = values.some(value => isInteger(value) && value > 0);\n      sku.has_service = hasService;\n    },\n    getHasService(detail) {\n      if (isEmpty(detail)) {\n        return false;\n      }\n      return Object.values(detail).some(value => !!value);\n    },\n    getServiceDetailList(detail) {\n      if (isEmpty(detail)) {\n        return [];\n      }\n      const fn = flow(\n        detail => Object.entries(detail),\n        filter(([key, value]) => !!value),\n        map(([key, value]) => ({\n          key: this.$t(getServiceLabel(key)),\n          value\n        }))\n      );\n      return fn(detail);\n    },\n    handleChangeDeliveryDate(value, item, index) {\n      this.$set(this.asnForm.asn_list[index], 'expected_delivery_date_str', value);\n      this.$nextTick(() => {\n        typeof this.$refs.asnForm.validateField === 'function' && this.$refs.asnForm.validateField(`asn_list.${index}.expected_delivery_date_str`);\n      });\n    },\n    handleChangeDeliveryTime(value, item, index) {\n      const date = moment(this.asnForm.asn_list[index].expected_delivery_date_str, 'YYYY-MM-DD HH:mm:ss').format('YYYY-MM-DD');\n      const time = moment(value, 'YYYY-MM-DD HH:mm:ss').format('HH:mm:ss');\n      this.$set(this.asnForm.asn_list[index], 'expected_delivery_date_str', `${date} ${time}`);\n      this.$nextTick(() => {\n        typeof this.$refs.asnForm.validateField === 'function' && this.$refs.asnForm.validateField(`asn_list.${index}.expected_delivery_date_str`);\n      });\n    },\n    deleteASNItem(index) {\n      this.$confirm('Are you sure you want to delete this ASN?', 'Tips', {\n        confirmButtonText: 'Confirm',\n        cancelButtonText: 'Cancel',\n        type: 'warning'\n      }).then(() => {\n        this.asnForm.asn_list.splice(index, 1);\n        this.$message({\n          type: 'success',\n          message: 'Delete successfully!'\n        });\n      });\n    },\n    changeQuantity(row) {\n      row.shipping_qty = row.unit_rate * row.quantity || 0;\n    },\n    formatTime(time) {\n      let [hour, minute] = divMod(time, 3600);\n      minute = Math.floor(minute / 60);\n      hour = hour < 10 ? `0${hour}` : hour;\n      minute = minute < 10 ? `0${minute}` : minute;\n      return `${hour}:${minute}`;\n    },\n    getDateTimeslot(item) {\n      if (!item.expected_delivery_date_str) return;\n      return this.timeSlotMap[moment(item.expected_delivery_date_str, 'YYYY-MM-DD HH:mm:ss').format('YYYY-MM-DD')] || '';\n    },\n    getDateLoading(item) {\n      return item.expected_delivery_date_str && this.fetching && !this.getDateTimeslot(item);\n    },\n    validateDeliveryDate(item) {\n      return (rule, value, cb) => {\n        if (!item.expected_delivery_date_str) {\n          return cb(new Error('Expect Delivery Date is required'));\n        }\n        const hhmm = /(\\d{2}):(\\d{2})/.exec(item.expected_delivery_date_str);\n        let timeStamp = -1;\n        if (hhmm && hhmm.length > 2) {\n          timeStamp = (parseInt(hhmm[1]) || 0) * 3600 + (parseInt(hhmm[2]) || 0) * 60;\n        } // 判断时间是否在有效班次timeslot内\n        let isInShift = false;\n        const timeSlotArr = this.getDateTimeslot(item);\n        if (Array.isArray(timeSlotArr)) {\n          if (timeSlotArr.length > 0) {\n            isInShift = timeSlotArr.some(time => {\n              return timeStamp <= time.end_time && timeStamp >= time.beg_time;\n            });\n          } else {\n            return cb(new Error(this.$t('asnTimeSlotUnavailableTips')));\n          }\n        } else {\n          isInShift = true;\n        }\n        if (!isInShift) {\n          return cb(new Error('invalid expected delivery date'));\n        }\n        cb();\n      };\n    },\n    fetchTimeSlot(date) {\n      const params = {\n        warehouse: this.pendingASN.warehouse,\n        date: date\n      };\n      this.fetching = true;\n      fetchTimeSlot(params).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.timeSlotMap[date] = resp.data.shifts;\n        }\n        this.fetching = false;\n      }).catch(() => {\n        this.fetching = false;\n        this.$message.error('Get Timeslot Failed');\n      });\n    },\n    closeDialog() {\n      this.$emit('close');\n    },\n    getUnitList() {\n      return new Promise((resolve, reject) => {\n        const params = {\n          limit: 1000,\n          country: this.pendingASN.po_country\n        };\n        getUnitList(params).then(resp => {\n          if (resp.status !== 0) {\n            this.$message.error(resp.info);\n          } else {\n            const OnetoOneUnits = resp.data.unit_rate_list.filter(item => item.inbound_quantity === 1).map(item => ({\n              unit_id: item.unit_id, unit_name: item.unit_name, unit_rate: item.inbound_quantity\n            }));\n            resolve(OnetoOneUnits);\n          }\n        });\n      });\n    },\n    async confirmResync() {\n      try {\n        this.loading = true;\n        const params = {\n        reservation_id: this.reservationID,\n        order_id: this.asnForm.order_id,\n        inbound_type: this.asnForm.inbound_type\n      };\n      const res = await massResyncASN(params);\n      if (res && res.retcode === 0) {\n        const { data } = res;\n        this.$message({ type: 'success', message: `${data.resync_success_total + data.neednt_resync_total} succeeded, ${data.resync_fail_total} failed .Please check error message and try later.`});\n        this.$emit('close');\n        this.$emit('refresh');\n      } else {\n         this.$message({ type: 'error', message: res.info || res.message});\n      }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loading = false;\n      }\n    },\n    confirmCreate() {\n      const pendingList = this.reservationStatus === 3 ? this.pendingList : this.pendingASN.sku_list;\n      let asnList = [];\n      if (this.asnForm.create_mode === 1) {\n        asnList = JSON.parse(JSON.stringify(this.asnForm.asn_list));\n      } else {\n        this.asnForm.asn_list.forEach(item => {\n          item.sku_list.forEach(sku => {\n            asnList.push({\n              expected_delivery_date_str: item.expected_delivery_date_str,\n              sku_list: [sku]\n            });\n          });\n        });\n      }\n      // NOTE resubmit时，this.pendingList可能没有附加服务的信息，这时候取this.pendingASN.sku_list\n      const pendingAdditionServiceList = isEmpty(pendingList) ? this.pendingASN.sku_list : pendingList;\n      const errorMessage = isValidASNList(asnList, pendingList, this.hideSkuService, pendingAdditionServiceList);\n      if (errorMessage) {\n        this.$message.error(errorMessage);\n        return true;\n      }\n      this.$refs.createModeForm.validate(isCreateModeValid => {\n        if (isCreateModeValid) {\n          this.$refs.asnForm && this.$refs.asnForm.validate(async(isValid) => {\n            if (isValid) {\n              if (this.inboundType === 1) { // rts的asn单,后台返回unit_list=[],需要补充缺失unit_list\n                asnList.forEach(asn => {\n                  asn.sku_list.forEach(sku => {\n                    if (this.rtsUnits) {\n                      sku.unit_list = this.rtsUnits;\n                    }\n                  });\n                });\n              }\n              let requestFun = createASN;\n              let params = {};\n              params = JSON.parse(JSON.stringify(this.asnForm));\n              params.asn_list = asnList.map(item => {\n                item.sku_list = item.sku_list.filter(sku => !!sku.shipping_qty).map(sku => ({\n                  ...sku,\n                  unit_id: (sku.unit_list.find(unit => unit.unit_rate === sku.unit_rate) || {}).unit_id\n                }));\n                return item;\n              });\n              if (this.reservationStatus === 3) {\n                requestFun = updateASN;\n                params = {\n                  ...params,\n                  reservation_id: this.reservationID,\n                  order_id: this.inboundType === 0 ? this.$route.params.order_id : this.$route.params.rts_id\n                };\n              }\n              this.loading = true;\n              requestFun(params).then(resp => {\n                if (resp.retcode !== 0) {\n                  if (resp.retcode === ReturnCodeMap.ASN_SKU_BUFFER_WARNING) {\n                    this.$message.warning(resp.info);\n                    this.$emit('close');\n                    this.$emit('refresh');\n                  } else {\n                    this.$message.error(resp.info);\n                  }\n                } else {\n                  if (resp.data.reservation_status && resp.data.reservation_status !== 2) {\n                    // 1-processing, 2-success, 3-failed\n                    this.reservationStatus = resp.data.reservation_status;\n                    this.reservationID = resp.data.reservation_id;\n                    this.failedMessage = resp.data.failed_msg || '';\n                    this.$emit('refresh');\n                    if (resp.data.reservation_status === 1) {\n                      this.timeID = setTimeout(() => this.startLoop(), LoopInterval);\n                    }\n                  } else {\n                    this.$message.success('Success');\n                    this.$emit('close');\n                    this.$emit('refresh');\n                  }\n                }\n                this.loading = false;\n              }).catch(() => { this.loading = false; });\n            }\n          });\n        }\n      });\n    },\n    addPendingASN() {\n      if (this.asnForm.asn_list.length < 5 && !this.dialogFormDisabled) {\n        this.asnForm.asn_list.push({\n          expected_delivery_date_str: this.inboundType === 0 && this.pendingASN.expected_inbound_date_str\n            ? `${this.pendingASN.expected_inbound_date_str} 00:00:00` : '',\n          timeSlotArr: [],\n          timeSlot: '',\n          sku_list: this.pendingASN.sku_list.filter(sku => !!sku.pending_asn_qty).map(item => {\n            const isFirst = this.asnForm.asn_list.length === 0;\n            const unit_rate = item.unit_list[0] && item.unit_list[0].unit_rate || 1;\n            const quantity = Math.floor(item.pending_asn_qty / unit_rate) || 0;\n            const shippingQty = isFirst ? unit_rate * quantity || 0 : undefined;\n            const addServiceDetail = getDefaultServiceDetail(item.add_service_detail, shippingQty);\n            return {\n              ...item,\n              unit_rate,\n              add_service_detail: addServiceDetail,\n              quantity: isFirst ? quantity : undefined,\n              shipping_qty: shippingQty\n            };\n          })\n        });\n      } else {\n        this.$message.error('Can not add more than 5 ASN!');\n      }\n    },\n    getASNConfig(country) {\n      getASNControlConfig({ country }).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.asnControlConfig = resp.data.inbound_time_configs;\n        }\n      }).catch(() => {\n        this.$message.error('Get ASN Control Config Failed');\n      });\n    }\n  },\n  watch: {\n    '$props.visible': {\n      async handler(isShow) {\n        this.reservationStatus = '';\n        let hasError = false;\n        if (isShow) {\n          if (this.inboundType === 1) {\n            this.pendingASN.sku_list.forEach(sku => {\n              sku.unit_list = this.rtsUnits || [];\n            });\n          }\n          this.asnForm.create_mode = 1; // 新建弹窗设置默认是为1\n          try {\n            let params = {};\n            if (this.isResubmit || this.isResync) {\n              params = { reservation_id: this.reservation_id }; // 精确查找出某个预约单\n            } else {\n              params = { order_id: this.order_id }; // 查找当前orderid下最近一个预约单\n            }\n            await getLastASN(params).then(resp => {\n              if (resp.retcode !== 0) {\n                this.$message.error(resp.info);\n                hasError = true;\n                this.$emit('close');\n              } else {\n                this.reservationStatus = resp.data.reservation_status;\n                this.canResyncFromApi = resp.data.can_resync || false;\n                this.reservationID = resp.data.reservation_id || '';\n                this.failedMessage = resp.data.failed_msg || '';\n                if ([1, 3].includes(resp.data.reservation_status)) {\n                  this.$message.info(`there is a order ${resp.data.reservation_status === 1 ? 'in process' : 'failed'}, plz checking first`);\n                  this.asnForm.asn_list = [];\n                  const asnList = resp.data.reservation_data.asn_list || [];\n                  asnList.forEach(asn => {\n                    const skuList = asn.sku_list || [];\n                    this.pendingList = (this.pendingASN.sku_list || []).map(item => {\n                      const existedSku = skuList.find(sku => sku.sku_id === item.sku_id) || { shipping_qty: 0 }; // 在编辑和预约单重新提交的情况下，从接口拿到剩余可用的sku（以去除当前预约单存在的sku数量）\n                      return { ...item, pending_asn_qty: item.pending_asn_qty + existedSku.shipping_qty };\n                    });\n                    skuList.forEach(sku => {\n                      // add sku that is not in pending data\n                      if (!this.pendingList.find(item => item.sku_id === sku.sku_id)) {\n                        this.pendingList.push({ ...sku, pending_asn_qty: sku.shipping_qty });\n                      }\n                    });\n                    asn.sku_list.forEach(sku => {\n                      if (this.inboundType === 1) {\n                        sku.unit_list = this.rtsUnits || [];\n                      }\n                      sku.pending_asn_qty = (this.pendingList.find(item => item.sku_id === sku.sku_id) || { pending_asn_qty: 0 }).pending_asn_qty;\n                    });\n                    this.asnForm.asn_list.push(asn);\n                  });\n                  if (resp.data.reservation_data.create_mode === 2) {\n                    this.asnForm.create_mode = 2;\n                    this.pendingList = asnList.map(asn => {\n                      return asn.sku_list[0];\n                    });\n                  }\n                  if (resp.data.reservation_status === 1) {\n                    this.timeID = setTimeout(() => this.startLoop(), LoopInterval);\n                  }\n                }\n              }\n            });\n            if (this.pendingASN.po_country !== 'TW') {\n              this.getWmsRemainingIbQuota(this.pendingASN.warehouse, this.pendingASN.expected_inbound_date_str, this.pendingASN.supplier_id);\n            }\n          } catch (error) {\n            hasError = true;\n            this.$message.error('Get ASN Failed!' + error);\n            this.$emit('close');\n          }\n        }\n        if (hasError) return;\n        this.loading = false;\n        this.dialogVisible = isShow;\n        if (isShow && [1, 3].includes(this.reservationStatus)) {\n          return;\n        }\n        if (!isShow) {\n          this.asnForm.asn_list = [];\n          clearTimeout(this.timeID);\n        }\n      }\n    },\n    timeList: {\n      handler(curr) {\n        if (curr.length) {\n          const cacheList = Object.keys(this.timeSlotMap || {});\n          curr.filter(item => item && !cacheList.includes(item)).forEach(time => {\n            this.fetchTimeSlot(time);\n          });\n        } else {\n          this.timeSlotMap = {};\n        }\n      },\n      immediate: true\n    },\n    '$props.pendingASN': {\n      handler(curr) {\n        if (curr && this.inboundType === 0 && curr.po_country) {\n          this.getASNConfig(curr.po_country);\n        }\n      },\n      immediate: true\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.add-asn-dialog{\n  .sub-title{\n    font-size: 14px;\n    color: $black_light_one;\n    margin-left: 8px;\n  }\n  .process-info {\n    margin-left: 30px;\n    color: #909399;\n  }\n  .error-message {\n    color: #f56c6c;\n    overflow: hidden;\n    margin-top:4px;\n  }\n  .total-baseInfo-section {\n    padding: 0 20px;\n    border-bottom: 1px dashed #ccc;\n    padding-bottom: 10px;\n  }\n  .baseInfo-row{\n    margin: 16px 0;\n  }\n   .supplier-label{\n      display: inline-block;\n      width: 120px;\n      word-break: break-word;\n\n    }\n    .supplier-gap{\n      margin-right: 20px;\n    }\n    .supplier-info{\n      display: inline-block;\n      max-width: 150px;\n      word-break: break-word;\n      vertical-align: top;\n    }\n  .total-skuList-section{\n    .title {\n      font-size: 16px;\n      font-weight: 500;\n      color: grey;\n      margin-top: 30px;\n      margin-bottom: 15px;\n    }\n  }\n  .btn-wrapper{\n    margin-top: 30px;\n    text-align: center;\n    .add-asd-btn{\n      width: 100%;\n      display: block;\n      border: 1px dashed #ccc;\n      padding: 11px;\n      cursor: pointer;\n      background-color: #fff;\n      &:hover, &:link{\n        background-color:#f0f3fa;\n      }\n      i {\n        margin-right: 10px;\n      }\n      &.is-disabled{\n        cursor: not-allowed;\n        background-color: #f0f3fa;\n        color: rgb(114, 114, 114);\n      }\n    }\n  }\n  .asn-list-section{\n    border-top: 1px solid #ccc;\n    margin-top:30px;\n    padding-top:10px;\n    .asn-delete-icon{\n      position: absolute;\n      top: 10px;\n      right: 10px;\n      font-size: 22px;\n      color: red;\n      cursor: pointer;\n      z-index: 1;\n    }\n    .date-timeslot{\n      margin-right: 10px;\n      font-size: 14px;\n\n    }\n  }\n}\n\n.sku-service-row {\n  .label {\n    display: inline-block;\n    width: 90px;\n  }\n\n  & + .sku-service-row {\n    margin-top: 5px;\n  }\n}\n\n.service-detail-edit {\n  display: flex;\n  align-items: center;\n\n  .el-input-number {\n    width: 60px;\n  }\n\n  & + .service-detail-edit {\n    margin-top: 5px;\n  }\n\n  > * + * {\n    margin-left: 10px;\n  }\n}\n\n</style>\n<style lang=\"scss\">\n.asn-list-section{\n  .asn-info{\n    margin: 30px 0px;\n    border-bottom: 1px dashed #d6d6d6;\n    padding-bottom: 30px;\n    position: relative;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/RTSManagement/checkInbound.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":6,"column":62,"nodeType":"VIdentifier","messageId":"deprecated","endLine":6,"endColumn":68},{"ruleId":"vue/no-unused-components","severity":2,"message":"The \"SearchFrom\" component has been registered but not used.","line":150,"column":5,"nodeType":"Property","endLine":150,"endColumn":15}],"errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"check-inbound-wrapper pms-new-ui\">\n    <div class=\"check-inbound-title-wrapper\">\n       <slot name=\"checkInboundTitle\"></slot>\n    </div>\n    <el-form :model=\"searchForm\" label-width=\"120px\" @submit.native.prevent='onSearch' :inline=\"true\" class=\"check-inbound-form\">\n      <el-button v-show=\"false\" native-type=\"submit\"></el-button>\n      <el-form-item :label=\"$t('purchaseOrder.expectedDeliveryDate')\" class=\"input-bg\" label-width=\"160px\">\n        <el-date-picker @change='changeExpectDelieryTime' clearable popper-class='pms-ui' v-model=\"expected_delivery_time_arr\" value-format=\"yyyy-MM-dd HH:mm:ss\" type=\"daterange\" start-placeholder=\"Begin\" end-placeholder=\"End\" :default-time=\"['00:00:00', '23:59:59']\"></el-date-picker>\n      </el-form-item>\n      <el-form-item :label=\"$t('purchaseRequest.status')\">\n        <el-select v-model=\"searchForm.status\" @change='onSearch'>\n          <el-option v-for=\"item in statusOptions || []\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"></el-option>\n        </el-select>\n      </el-form-item>\n      <el-form-item :label=\"$t('purchaseOrder.inboundID')\" >\n        <el-input v-model=\"searchForm.inbound_id\" clearable></el-input>\n      </el-form-item>\n      <el-form-item>\n        <el-button @click='onSearch'>{{$t('purchaseRequest.search')}}</el-button>\n      </el-form-item>\n    </el-form>\n   <section class=\"checkInbound-btn-wrapper\">\n      <el-button class='white-blue' v-if=\"!!config.canExportASN\" :loading=\"loadingResync\" @click=\"onMassResync\">{{$t('commonMassResync')}}</el-button>\n      <el-button class='white-red' v-if=\"!!config.canExportASN\" @click=\"onMassCancel\">{{$t('purchaseRequest.massCancel')}}</el-button>\n      <el-button class=\"list-btn\" v-if=\"isShowAddASNBtn\" @click=\"handleAddASN\">{{$t('purchaseOrder.createASN')}}</el-button>\n      <el-dropdown v-if=\"!!config.canExportASN\" class='exportGroup-btn' split-button type=\"primary\" @command=\"onExportContentClick\">\n        <span>{{$t('purchaseRequest.export')}}</span>\n        <el-dropdown-menu slot=\"dropdown\">\n          <el-dropdown-item :command=\"btn\" v-for=\"btn in exportBtns\" :key=\"btn.text\" >\n            <span>{{$t(btn.text)}}</span>\n          </el-dropdown-item>\n        </el-dropdown-menu>\n      </el-dropdown>\n    </section>\n    <el-checkbox-group v-model=\"checkedRows\">\n      <el-table :data=\"tableList\" v-loading=\"tableLoading\">\n        <el-table-column column-key=\"action\" width=\"60px\" align=\"center\" class=\"\">\n          <template slot-scope=\"scope\" slot=\"header\">\n            <section class=\"select-all-table-column-new\">\n              <span class=\"el-checkbox\">\n                <span :class=\"`el-checkbox__input ${checkedType ? 'is-checked' : ''}`\" @click=\"resetCheckedType\" >\n                  <span :class=\"`el-checkbox__inner ${checkedType ? 'is-checked' : ''}`\"></span>\n                </span>\n              </span>\n              <el-dropdown placement=\"bottom\" trigger=\"click\" class=\"select-page-dropdown-new ml4\" @command=\"changeSelectPageType\">\n                <i class=\"icon-arrow-down el-icon-arrow-down\"></i>\n                <el-dropdown-menu class=\"options-field-menu\" slot=\"dropdown\">\n                  <el-dropdown-item command=\"current\">Current Page</el-dropdown-item>\n                  <el-dropdown-item command=\"all\">All Pages</el-dropdown-item>\n                </el-dropdown-menu>\n              </el-dropdown>\n            </section>\n          </template>\n          <template slot-scope=\"scope\">\n            <el-checkbox :disabled=\"checkedType === 'all'\" :label=\"scope.row\">{{''}}</el-checkbox>\n          </template>\n        </el-table-column>\n        <el-table-column :label=\"$t('purchaseOrder.inboundID')\" prop=\"inbound_id\">\n          <template slot-scope=\"scope\">\n            <div>\n              {{scope.row.inbound_id}}\n              <el-tag v-if=\"scope.row.has_additional_service\" effect=\"plain\" type=\"danger\" size=\"mini\">\n                {{$t('valueAddedService')}}\n              </el-tag>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column :label=\"$t('purchaseRequest.skuQty')\" prop=\"sku_qty\"></el-table-column>\n        <el-table-column :label=\"$t('commonPendingInboundQty(pcs)')\" prop=\"pending_inbound_qty\"></el-table-column>\n        <el-table-column :label=\"$t('commonTotalInboundQty(pcs)')\" prop=\"total_inbound_qty\"></el-table-column>\n        <el-table-column :label=\"$t('purchaseOrder.expectedDeliveryDate')\" width=\"160\" prop=\"expected_delivery_date\">\n          <template slot-scope=\"scope\">\n            {{scope.row.expected_delivery_date || '/'}}\n          </template>\n        </el-table-column>\n        <el-table-column :label=\"$t('purchaseOrder.actualDeliveryDate')\" prop=\"actual_delivery_date\" width=\"160\">\n          <template slot-scope=\"scope\">\n            {{scope.row.actual_delivery_date || '/'}}\n          </template>\n        </el-table-column>\n        <el-table-column :label=\"$t('purchaseOrder.actualReceivedTime')\" width=\"160\" prop=\"actual_inbound_date\">\n          <template slot-scope=\"scope\">\n            {{scope.row.actual_inbound_date || '/'}}\n          </template>\n        </el-table-column>\n        <el-table-column :label=\"$t('purchaseRequest.status')\" width=\"140\">\n          <template slot-scope=\"scope\">\n            {{formatStatus(scope.row.status)}}\n          </template>\n        </el-table-column>\n        <el-table-column :label=\"$t('purchaseOrder.Action')\" width=\"120\">\n          <template slot-scope=\"scope\">\n            <div class=\"action-btn-vertical\" >\n              <template v-if=\"scope.row.inbound_id\">\n                <el-button size=\"mini\" class=\"white-blue\" @click=\"handleASNDetail(scope.row)\">{{$t('opHistory.detail')}}</el-button>\n                <el-button v-if=\"config.canExportASN && [1, 6].includes(scope.row.status)\" class=\"white-red\" size=\"mini\" :loading='loading' @click=\"handleASNCancel(scope.row)\">{{$t('purchaseOrder.cancel')}}</el-button>\n              </template>\n              <template v-else>\n                <el-button v-if=\"scope.row.can_resync\"  :loading=\"loadingResync\" size=\"mini\" class=\"white-blue\" @click=\"handleReSync(scope.row)\">{{$t('commonResync')}}</el-button>\n                <el-button v-else size=\"mini\" @click=\"handleResubmit(scope.row)\">{{$t('purchaseRequest.reSubmit')}}</el-button>\n              </template>\n            </div>\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-checkbox-group>\n    <section class=\"content-center\">\n      <el-pagination background layout=\"sizes, prev, pager, next \" :current-page=\"pager.page_no\" :total=\"total\" :page-sizes='[10, 20, 50, 100]' :page-size=\"pager.count\" @size-change='handleSizeChange' @current-change=\"handleCurrentChange\" ></el-pagination>\n    </section>\n    <cancel-dialog\n      @refresh=\"refreshASNData\" :asnList=\"checkedRows\" :visible='cancelDialogShow' :searchParams=\"cancelSearchParams\"\n      :cancelType=\"checkedType === 'all' ? 2 : 1\" @close=\"onCancelMassCancel\"></cancel-dialog>\n    <AddAsnDialog\n      :visible='addASNdialogVisible'\n      :order_id=\"config.order_id || ''\"\n      :pendingASN=\"pendingASN || {}\"\n      :inboundType=\"config.inbound_type\"\n      :isResubmit=\"isResubmit\"\n      :isResync=\"isResync\"\n      :reservation_id=\"reservation_id\"\n      :rtsUnits=\"onetoOneUnitList\"\n      :hideSkuService=\"hideSkuService\"\n      @close=\"closeAddASNDialog\"\n      @refresh=\"refreshASNData\"\n    />\n    <ASNPDFDialog :visible=\"isShowPDFDialog\" @close='closePDFDialog' :order_id=\"config.order_id\" :region=\"config.region || ''\" :vendorSideId=\"config.supplier_id || ''\"/>\n  </div>\n</template>\n\n<script>\nimport SearchFrom from '@/components/ApproveList/search';\nimport CancelDialog from '@/views/asnTracking/cancelDialog';\nimport moment from 'moment';\nimport AddAsnDialog from './addASNDialog';\nimport ASNPDFDialog from '@/views/purchaseOrder/asnPDFDialog';\nimport { downloadBlobFile } from '@/utils/downloadFile';\nimport { exportASNExcel, cancelASN, getPendingASN, massResyncASN } from '@/api/asn';\nimport { getRTSInboundTableList } from '@/api/rtsMgt';\nimport { commonFetchAction } from '@/utils';\nimport { ASNStatusList } from '@/utils/constant';\nimport { formatParams } from '@/utils/formatParams';\nimport { getUnitList } from '@/api/unitConfig';\n\nexport default {\n  components: {\n    AddAsnDialog,\n    ASNPDFDialog,\n    CancelDialog,\n    SearchFrom\n  },\n  props: {\n    config: {\n      type: Object,\n      required: true\n    },\n    hideSkuService: { // 是否隐藏add asn弹框中的sku service detail\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      loadingResync: false,\n      addASNdialogVisible: false,\n      pendingASN: {},\n      checkedRows: [],\n      checkedType: '',\n      cancelDialogShow: false,\n      isShowPDFDialog: false,\n      tableList: [],\n      expected_delivery_time_arr: [],\n      searchForm: {\n        expected_delivery_date_str_left: '',\n        expected_delivery_date_str_right: '',\n        status: '',\n        inbound_id: ''\n      },\n      isResubmit: false,\n      isResync: false,\n      reservation_id: '',\n      loading: false,\n      tableLoading: false,\n      pager: {\n        page_no: 1,\n        count: 10\n      },\n      total: 0,\n      statusOptions: ASNStatusList,\n      exportBtns: [\n        { text: 'purchaseOrder.InboundOrderExcel', onClick: 'onExportExcel' },\n        { text: 'purchaseOrder.InboundOrderPDF', onClick: 'onExportPDF' }\n      ],\n      onetoOneUnitList: []\n    };\n  },\n  computed: {\n    isShowAddASNBtn() {\n      const pendingASNSkuLength = Array.isArray(this.pendingASN.sku_list) && this.pendingASN.sku_list.filter(sku => !!sku.pending_asn_qty).length || 0;\n      if (this.config.inbound_type === 0) {\n        return [1, 2, 6].includes(this.pendingASN.po_status) && pendingASNSkuLength;\n      } else {\n        return this.config.canAddASN && pendingASNSkuLength;\n      }\n    },\n    cancelSearchParams() {\n      const params = formatParams({\n        order_id: this.config.order_id,\n        inbound_type: this.config.inbound_type,\n        ...this.searchForm\n      });\n      if (params.status !== undefined) {\n        params.status = Number(params.status) || 0;\n      }\n      return {\n        check_inbound_params: params\n      };\n    }\n  },\n  created() {\n    this.getPendingASN();\n  },\n  methods: {\n    onMassResync() {\n      if (this.checkedRows.length === 0) {\n        return this.$message.error('Please select some lines first!');\n      }\n      this._massResync(this.checkedRows.map(item => item.asn_id));\n    },\n    handleResubmit(row) {\n      this.isResubmit = true;\n      this.isResync = false;\n      this.reservation_id = row.reservation_id;\n      this.updatePendingASN();\n    },\n    handleReSync(row) {\n      this.isResync = true;\n      this.isResubmit = false;\n      this.reservation_id = row.reservation_id;\n      this.updatePendingASN();\n    },\n    async _massResync(asn_ids) {\n      try {\n        this.loadingResync = true;\n        const params = {\n          order_id: this.config.order_id,\n          inbound_type: this.config.inbound_type\n        };\n        if (this.checkedType === 'all') {\n          params.filters = formatParams({\n            expected_delivery_date_str_left: this.searchForm.expected_delivery_date_str_left,\n            expected_delivery_date_str_right: this.searchForm.expected_delivery_date_str_right,\n            order_id: this.config.order_id,\n            status: this.searchForm.status ? Number(this.searchForm.status) : '',\n            inbound_id: this.searchForm.inbound_id\n          });\n        } else {\n          params.asn_ids = asn_ids;\n        }\n        const res = await massResyncASN(params);\n        if (res && res.retcode === 0) {\n          const { data } = res;\n          this.$message({ type: data.need_resync_total === 0 ? 'error' : 'success', message: data.need_resync_total === 0 ? 'No date need  resync' : `${data.resync_success_total + data.neednt_resync_total} succeeded, ${data.resync_fail_total} failed .Please check error message and try later.`});\n        } else {\n          this.$message({ type: 'error', message: res.info || res.message});\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loadingResync = false;\n      }\n    },\n    changeExpectDelieryTime(valueArr) {\n      if (Array.isArray(valueArr) && valueArr.length > 0) {\n        this.searchForm.expected_delivery_date_str_left = valueArr[0];\n        this.searchForm.expected_delivery_date_str_right = valueArr[1];\n      } else {\n        this.searchForm.expected_delivery_date_str_left = '';\n        this.searchForm.expected_delivery_date_str_right = '';\n      }\n      this.onSearch();\n    },\n    formatStatus(status) {\n      return (this.statusOptions.find(item => Number(item.value) === status) || { label: '' }).label;\n    },\n    closeAddASNDialog() {\n      this.addASNdialogVisible = false;\n    },\n    changeSelectPageType(type) {\n      this.checkedType = type;\n      this.checkedRows = this.tableList;\n    },\n    resetCheckedType() {\n      this.checkedType = '';\n      this.checkedRows = [];\n    },\n    onMassCancel() {\n      if (this.checkedRows.length === 0) {\n        return this.$message.error('Please select some lines first!');\n      }\n      this.cancelDialogShow = true;\n    },\n    onCancelMassCancel() {\n      this.cancelDialogShow = false;\n    },\n    handleASNDetail(row) {\n      this.$router.push(`/admin/inbound/asn/detail/${row.asn_id}`);\n    },\n    getUnitList() {\n      return new Promise((resolve, reject) => {\n        const params = {\n          limit: 1000,\n          country: this.config.region\n        };\n        getUnitList(params).then(resp => {\n          if (resp.status !== 0) {\n            this.$message.error(resp.info);\n          } else {\n            this.onetoOneUnitList = resp.data.unit_rate_list.filter(item => item.inbound_quantity === 1).map(item => ({ unit_id: item.unit_id, unit_name: item.unit_name, unit_rate: item.inbound_quantity }));\n            return resolve();\n          }\n        });\n      });\n    },\n    updatePendingASN() {\n      this.getPendingASN().then(() => {\n        this.showAddASNDialog();\n      });\n    },\n    getPendingASN() {\n      return new Promise((resolve, reject) => {\n        getPendingASN({ order_id: this.config.order_id, inbound_type: this.config.inbound_type }).then(resp => {\n          if (resp.retcode !== 0) {\n            this.$message.error(resp.info);\n          } else {\n            this.pendingASN = resp.data;\n            // this.pendingASN.sku_list = this.pendingASN.sku_list.filter(sku => !!sku.pending_asn_qty);\n            if (this.config.inbound_type === 1) {\n              this.getUnitList().then(() => {\n                return resolve();\n              });\n            } else {\n              return resolve();\n            }\n          }\n        });\n      });\n    },\n    showAddASNDialog() {\n      this.addASNdialogVisible = true;\n    },\n    handleAddASN() {\n      this.isResubmit = false;\n      this.isResync = false;\n      this.updatePendingASN();\n    },\n    handleASNCancel(row) {\n      this.loading = true;\n      this.$prompt('Cancel Reason', `Confirm to Cancel this ASN ?`, {\n        confirmButtonText: 'Confirm',\n        cancelButtonText: 'Cancel',\n        inputValidator: value => value && value.replace(/(^\\s*)|(\\s*$)/g, '').length > 0 ? true : 'Reason Can Not Be Empty!'\n      }).then(({ value }) => {\n        return cancelASN({ cancel_type: 1, asn_id_list: [parseInt(row.asn_id)], cancel_reason_option: 0, cancel_reason: value }).then(resp => {\n          if (resp.retcode !== 0) {\n            this.$message.error(resp.info);\n          } else {\n            this.$message.success('Success');\n            this.refreshASNData();\n          }\n          this.loading = false;\n        });\n      }).catch(() => { this.loading = false; });\n    },\n    onExportExcel() {\n      const { order_id } = this.config;\n      if (order_id) {\n        const params = { order_id };\n        exportASNExcel(params).then(res => {\n          if (res.retcode) {\n            return this.$message.error(res.info || res.message);\n          }\n          downloadBlobFile(res, `${order_id}_${moment().format('YYYYMMDDHHmm')}.xls`);\n        }).catch(e => {\n          this.$alert(e);\n        });\n      }\n    },\n    onExportPDF() {\n      this.isShowPDFDialog = true;\n    },\n    closePDFDialog() {\n      this.isShowPDFDialog = false;\n    },\n    onExportContentClick(command) {\n      if (command.onClick && typeof this[command.onClick] === 'function') {\n        this[command.onClick]();\n      }\n    },\n    formatTime(time) {\n      if (!time) return '-';\n      return moment(time * 1000).format('YYYY-MM-DD HH:mm:ss');\n    },\n    handleSizeChange(count) {\n      this.pager.count = count;\n      this.onSearch();\n    },\n    handleCurrentChange(page_no) {\n      this.pager.page_no = page_no;\n      this.onSearch();\n    },\n    refreshASNData() {\n      this.getPendingASN();\n      this.refreshCheckInboundList();\n    },\n    refreshCheckInboundList() {\n      Object.keys(this.searchForm).forEach(key => {\n        this.searchForm[key] = '';\n      });\n      this.pager.page_no = 1;\n      this.onSearch();\n    },\n    async onSearch() {\n      this.tableLoading = true;\n      const params = {\n        order_id: this.config.order_id,\n        inbound_type: this.config.inbound_type,\n        ...this.pager,\n        ...this.searchForm\n      };\n      this.resetCheckedType();\n      try {\n        const res = await getRTSInboundTableList(formatParams(params));\n        commonFetchAction(res, (data) => {\n          this.tableList = data.asn_list;\n          this.total = data.total;\n          this.tableLoading = false;\n        });\n      } catch (e) {\n        this.$message.error(e);\n        this.tableLoading = false;\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.check-inbound-wrapper {\n  .check-inbound-title-wrapper {\n    margin-top: 30px;\n  }\n  .right-btn-section {\n    float: right;\n  }\n  .cancel-btn {\n    width:auto;\n    // min-width: 70px;\n    // padding: 0 10px;\n    font-size: 14px;\n    background-color: #F56C6C\n  }\n  .checkInbound-btn-wrapper{\n    float:right;\n    margin-bottom: 10px;\n  }\n}\n</style>\n<style lang=\"scss\">\n.check-inbound-wrapper {\n  .exportGroup-btn{\n    margin-right: 8px;\n    vertical-align: middle;\n    .el-button--primary{\n      background-color: #3d6ed1;\n      border-color: #3d6ed1;\n    }\n    .el-button--medium{\n      padding: 8px 12px;\n    }\n    .el-dropdown__caret-button{\n      padding: 8px 6px;\n    }\n  }\n  .check-inbound-form{\n    .el-form-item__content {\n      display: inline-block;\n    }\n  }\n  .action-btn-vertical{\n    .el-button {\n      margin-left: 0;\n      margin-bottom: 10px;\n    }\n  }\n  .select-page-dropdown {\n    margin-left: -20px;\n    .el-button {\n      border: none;\n      background: unset;\n      padding: 0 0 0 10px;\n      &:nth-child(1) {\n        width: 20px;\n        padding-right: 16px;\n      }\n      &::before {\n        width: 0;\n      }\n    }\n  }\n}\n\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/ScrollBar/index.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"scrollBar\" is not PascalCase.","line":13,"column":9,"nodeType":"Literal","endLine":13,"endColumn":20,"fix":{"range":[285,294],"text":"ScrollBar"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div class=\"scroll-container\" ref=\"scrollContainer\" @wheel.prevent=\"handleScroll\" >\n    <div class=\"scroll-wrapper\" ref=\"scrollWrapper\" :style=\"{top: top + 'px'}\">\n      <slot></slot>\n    </div>\n  </div>\n</template>\n\n<script>\nconst delta = 117;\n\nexport default {\n  name: 'scrollBar',\n  data() {\n    return {\n      top: 0\n    };\n  },\n  methods: {\n    handleScroll(e) {\n      const eventDelta = e.wheelDelta || -e.deltaY * 3;\n      const $container = this.$refs.scrollContainer;\n      const $containerHeight = $container.offsetHeight;\n      const $wrapper = this.$refs.scrollWrapper;\n      const $wrapperHeight = $wrapper.offsetHeight;\n      if (eventDelta > 0) {\n        this.top = Math.min(0, this.top + eventDelta);\n      } else {\n        if ($containerHeight - delta < $wrapperHeight) {\n          if (this.top >= -($wrapperHeight - $containerHeight + delta)) {\n            this.top = Math.max(this.top + eventDelta, $containerHeight - $wrapperHeight - delta);\n          }\n        } else {\n          this.top = 0;\n        }\n      }\n    }\n  }\n};\n</script>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\n@import '../../styles/variables.scss';\n\n.scroll-container {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  background-color: $menuBg;\n  .scroll-wrapper {\n    position: absolute;\n     width: 100%!important;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/Sku/gift.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/Sku/giftGroup.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"giftGroupList\" is not PascalCase.","line":41,"column":9,"nodeType":"Literal","endLine":41,"endColumn":24,"fix":{"range":[2536,2549],"text":"GiftGroupList"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <el-table :data=\"skuGroupList\" border size=\"mini\" :span-method='groupApproval' class=\"gift-group-wrapper\">\n    <el-table-column align='center' type=\"index\" label='NO'></el-table-column>\n    <el-table-column align='center' prop=\"skuID\" :label=\"$t('purchaseRequest.skuID')\" width=\"auto\"></el-table-column>\n    <el-table-column align='center' prop=\"externalSkuID\" :label=\"$t('purchaseRequest.externalSkuID')\" width=\"auto\"></el-table-column>\n    <el-table-column align='center' prop=\"skuName\" :label=\"$t('purchaseRequest.skuName')\" width=\"auto\"></el-table-column>\n    <el-table-column align='center' prop=\"categoryName\" :label=\"$t('userRole.userList.categoryName')\" width=\"auto\"></el-table-column>\n    <el-table-column align='center' prop='unit_name' :label=\"$t('purchaseRequest.unit')\" width=\"auto\"></el-table-column>\n    <el-table-column align='center' :label=\"$t('PRRequestedQty(pcs)')\" width=\"auto\">\n      <template slot-scope='scope'>\n        {{formatValue(scope.row.quantity * scope.row.unit_rate || 0)}}\n      </template>\n    </el-table-column>\n    <el-table-column align='center' prop='barcode' :label=\"$t('supplier.barCode')\"></el-table-column>\n    <el-table-column align='center' :label=\"$t('commonSellingType')\" min-width=\"120\">\n      <template slot=\"header\" slot-scope='scope'>\n        <span>{{$t('commonSellingType')}}</span>\n        <el-popover placement=\"top\" trigger=\"hover\" width=\"320px\" popper-class=\"break-word\" :content=\"$t('commonSellingTypeTips')\">\n          <svg-icon slot=\"reference\" iconClass=\"question\" class=\"question-icon\"></svg-icon>\n        </el-popover>\n      </template>\n      <template slot-scope='scope'>{{formatSellingType(scope.row.selling_type)}}</template>\n    </el-table-column>\n    <el-table-column align='center' prop='quantity' :label=\"$t('PRGiftQty(unit)')\" width=\"auto\"></el-table-column>\n    <el-table-column v-if='needGroup' align='center' :columnKey='`groupAction`' width='120px' :label='$t(\"purchaseRequest.action\")'>\n      <template slot-scope=\"scope\">\n        <div class='pms-ui'>\n          <el-button v-if='scope.row.canApproval' @click='approvalGroup' class='list-btn'>{{$t('purchaseRequest.approval')}}</el-button>\n          <el-button v-if='scope.row.canApproval' @click='rejectGroup' class='list-btn danger-list-btn'>{{$t('purchaseRequest.reject')}}</el-button>\n        </div>\n      </template>\n    </el-table-column>\n  </el-table>\n</template>\n\n<script>\nimport { formatValue } from '@/utils/format';\nimport { formatSellingType } from '@/utils';\n\nexport default {\n  name: 'giftGroupList',\n  data() {\n    return {\n      expandedRows: []\n    };\n  },\n  props: {\n    purchaseRequest: {\n      require: true,\n      type: Object,\n      default: () => {}\n    }\n  },\n  methods: {\n    formatValue,\n    formatSellingType,\n    groupApproval({ row, column, rowIndex, columnIndex }) {\n      if (column.columnKey === 'groupName' || column.columnKey === 'groupAction') {\n        const group = this.groupMap[row.canApproval ? 'canApproval' : 'canView'];\n        const groupFirstSku = group.giftList[0];\n        return row.skuID === groupFirstSku.skuID ? [group.giftList.length, 1] : [0, 0];\n      }\n    },\n    approvalGroup() {\n      this.$emit('approvalGroup', this.groupMap.canApproval.giftList.map(gift => gift.skuID));\n    },\n    rejectGroup() {\n      this.$emit('rejectGroup', this.groupMap.canApproval.giftList.map(gift => gift.skuID));\n    }\n  },\n  computed: {\n    groupMap() {\n      if (!this.needGroup) return {};\n      const groupMap = {\n        canApproval: {\n          giftList: [],\n          canApproval: true\n        },\n        canView: {\n          giftList: [],\n          canApproval: false\n        }\n      };\n      const giftList = this.purchaseRequest.giftList || [];\n      giftList.forEach(sku => {\n        if (sku.canApproval) {\n          groupMap.canApproval.giftList.push(sku);\n        } else {\n          groupMap.canView.giftList.push(sku);\n        }\n      });\n      return groupMap;\n    },\n    skuGroupList() {\n      if (!this.needGroup) {\n        return this.purchaseRequest.giftList;\n      }\n      let list = [];\n      Object.values(this.groupMap).forEach(item => {\n        list = [...list, ...item.giftList];\n      });\n      return list;\n    },\n    needGroup() {\n      return this.purchaseRequest.needGroup && this.purchaseRequest.orderType === 2;\n    }\n  }\n};\n</script>\n\n<style scoped>\n  .group-list-table {\n    border: 1px solid #f0f2f5;\n  }\n  .danger-list-btn {\n    margin-top: 10px;\n    margin-left: 0px;\n    background-color: #f56c6c;\n  }\n  .pms-group-table {\n    position: relative;\n    left: 0%;\n    top: 0;\n    z-index: 999;\n  }\n\n</style>\n<style lang=\"scss\">\n.gift-group-wrapper{\n  .svg-icon.question-icon{\n    width: 12px;\n    height: 12px;\n  }\n}\n\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/Sku/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/Sku/inventoryHealthTag.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/Sku/poSku.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/Sku/prCreateSku.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/SvgIcon/index.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"svg-icon\" is not PascalCase.","line":9,"column":9,"nodeType":"Literal","endLine":9,"endColumn":19,"fix":{"range":[176,184],"text":"SvgIcon"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <svg :class=\"svgClass\" aria-hidden=\"true\" @click=\"$emit('click')\">\n    <use :xlink:href=\"iconName\"></use>\n  </svg>\n</template>\n\n<script>\nexport default {\n  name: 'svg-icon',\n  props: {\n    iconClass: {\n      type: String,\n      required: true\n    },\n    className: {\n      type: String\n    }\n  },\n  computed: {\n    iconName() {\n      return `#icon-${this.iconClass}`;\n    },\n    svgClass() {\n      if (this.className) {\n        return 'svg-icon ' + this.className;\n      } else {\n        return 'svg-icon';\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.svg-icon {\n  width: 1em;\n  height: 1em;\n  vertical-align: -0.15em;\n  fill: currentColor;\n  overflow: hidden;\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/Switch/index.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"switch-component\" is not PascalCase.","line":10,"column":9,"nodeType":"Literal","endLine":10,"endColumn":27,"fix":{"range":[298,314],"text":"SwitchComponent"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div class=\"switch-component\" :class=\"{'is-active': isActive, 'is-disabled': disabled}\" @click=\"toggleSwitch\">\n    <span class=\"switch-text\" v-if=\"text\">{{text}}</span>\n    <i class=\"el-icon-loading loading\" v-if=\"loading\"></i>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'switch-component',\n  props: {\n    isActive: {\n      type: Boolean,\n      default: false\n    },\n    text: {\n      type: String,\n      default: ''\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    loading: {\n      default: false\n    }\n  },\n  methods: {\n    toggleSwitch() {\n      if (this.disabled) return;\n      this.$emit('toggle');\n    }\n  }\n};\n</script>\n<style scoped lang=\"scss\">\n@import \"~@/styles/variables.scss\";\n.switch-component{\n  margin: 0;\n  display: inline-block;\n  position: relative;\n  min-width: 50px;\n  height: 23px;\n  font-size: 12px;\n  border: 1px solid #BBBBBB;\n  outline: none;\n  border-radius: 30px;\n  box-sizing: border-box;\n  background: #BBBBBB;\n  cursor: pointer;\n  transition: border-color .3s,background-color .3s;\n  vertical-align: middle;\n  .switch-text{\n    color: #fff;\n    display:inline-block;\n    vertical-align: top;\n    margin-top: 3px;\n    margin-right: 5px;\n    margin-left: 25px;\n    line-height: 16px;\n  }\n  &:after{\n    content: \"\";\n    position: absolute;\n    top: 1px;\n    left: 1px;\n    border-radius: 100%;\n    transition: all .3s;\n    width: 19px;\n    height: 19px;\n    background-color: #fff;\n  }\n  .loading{\n    position: absolute;\n    top: 4px;\n    left: 3px;\n    color: $black_light_one;\n    font-size:14px;\n    z-index: 1;\n  }\n  &.is-active{\n    border-color: #55CC77;\n    background-color: #55CC77;\n    .switch-text{\n      margin-right: 25px;\n      margin-left: 5px;\n    }\n    &:after{\n      left: 100%;\n      margin-left: -19px;\n    }\n    .loading{\n      left: 100%;\n      margin-left: -16px;\n    }\n  }\n  &.is-disabled{\n    cursor: not-allowed;\n    opacity: 0.5;\n  }\n}\n\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/actionLogDialog/actionLog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/actionLogDialog/actionLogOld.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/actionLogDialog/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/actionLogDialog/supplierActionLog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/common/addSomethingBtn.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/common/checkAllColumn.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/common/exportBtnGroup.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/common/goback.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/common/listForm/autoComplete.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"listAutoComplete\" is not PascalCase.","line":17,"column":9,"nodeType":"Literal","endLine":17,"endColumn":27,"fix":{"range":[413,429],"text":"ListAutoComplete"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <el-form-item>\n    <label slot=\"label\" :title=\"props.label\">{{props.label}}</label>\n    <el-autocomplete\n      v-bind=\"$attrs\"\n      v-model.trim=\"searchForm[props.field]\"\n      :fetch-suggestions=\"autoCompleteFetch\"\n      @blur='autoCompleteBlur'\n      @select=\"autoCompleteSelect\"\n      @change=\"emitChange\"\n    ></el-autocomplete>\n  </el-form-item>\n</template>\n\n<script>\nexport default {\n  name: 'listAutoComplete',\n  props: {\n    searchForm: {\n      required: true,\n      type: Object,\n      default: () => {}\n    },\n    props: {\n      required: true,\n      type: Object,\n      default: () => {}\n    }\n  },\n  methods: {\n    emitChange(value) {\n      this.$emit('change', { field: this.props.field, value: value });\n    },\n    autoCompleteFetch(query, cb) {\n      if (this.props.fetchMethod && typeof this.props.fetchMethod === 'function') {\n        this.props.fetchMethod(query, cb);\n      } else {\n        cb([]);\n      }\n    },\n    autoCompleteBlur(...argu) {\n      if (this.props.blurMethod && typeof this.props.blurMethod === 'function') {\n        this.props.blurMethod(...argu);\n      }\n    },\n    autoCompleteSelect(...argu) {\n      if (this.props.selectMethod && typeof this.props.selectMethod === 'function') {\n        this.props.selectMethod(...argu);\n      }\n    }\n  }\n};\n</script>\n\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/common/listForm/datePicker.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"listDatePicker\" is not PascalCase.","line":36,"column":9,"nodeType":"Literal","endLine":36,"endColumn":25,"fix":{"range":[1275,1289],"text":"ListDatePicker"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <el-form-item class=\"list-date-picker-form\">\n     <label slot=\"label\" :title=\"props.label\">{{props.label}}</label>\n     <el-date-picker\n      v-bind=\"$attrs\"\n      v-if=\"['datetimerange', 'daterange', 'monthrange'].includes(props.dateType)\"\n      v-model=\"searchForm[props.field]\"\n      :type=\"props.dateType || 'daterange'\"\n      :default-value=\"props.defaultValue\"\n      :picker-options=\"props.pickerOptions || {}\"\n      :format=\"props.format || undefined\" :value-format=\"props.valueFormat || ''\"\n      :default-time=\"props.defaultTime || ['00:00:00', '23:59:59']\"\n      @change=\"emitChange\"\n      :popper-class=\"`${props['popper-class']} pms-new-ui`\"\n      :disabled=\"props.disabled || false\"\n      >\n    </el-date-picker>\n    <el-date-picker\n      v-else\n      v-bind=\"$attrs\"\n      v-model=\"searchForm[props.field]\"\n      :type=\"props.dateType || 'date'\"\n      :default-value=\"props.defaultValue\"\n      :picker-options=\"props.pickerOptions || {}\"\n      :format=\"props.format || undefined\" :value-format=\"props.valueFormat || ''\"\n       :popper-class=\"`${props['popper-class']} pms-new-ui`\"\n       :disabled=\"props.disabled || false\"\n       @change=\"emitChange\"\n      >\n    </el-date-picker>\n  </el-form-item>\n</template>\n\n<script>\nexport default {\n  name: 'listDatePicker',\n  props: {\n    searchForm: {\n      required: true,\n      type: Object,\n      default: () => {}\n    },\n    props: {\n      required: true,\n      type: Object,\n      default: () => {}\n    }\n  },\n  methods: {\n    emitChange(value) {\n      this.$emit('change', { field: this.props.field, value: value });\n    }\n  }\n};\n</script>\n<style lang=\"scss\">\n.list-date-picker-form{\n  .el-date-editor{\n    .el-input__icon{\n      line-height: 27px;\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/common/listForm/formItem.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"listFormItem\" is not PascalCase.","line":11,"column":9,"nodeType":"Literal","endLine":11,"endColumn":23,"fix":{"range":[327,339],"text":"ListFormItem"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <el-form-item>\n    <label slot=\"label\" :title=\"props.label\">{{props.label}}</label>\n    <pms-form-item @input=\"emitChange\" :renderData=\"{ schema: props, form: searchForm }\"></pms-form-item>\n  </el-form-item>\n</template>\n\n<script>\nimport PMSFormItem from '@/components/BaseItem/formItem';\nexport default {\n  name: 'listFormItem',\n  props: {\n    searchForm: {\n      required: true,\n      type: Object,\n      default: () => {}\n    },\n    props: {\n      required: true,\n      type: Object,\n      default: () => {}\n    }\n  },\n  components: {\n    'pms-form-item': PMSFormItem\n  },\n  methods: {\n    emitChange(props, value) {\n      this.$emit('change', { field: this.props.field, value });\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/common/listForm/input.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"listInput\" is not PascalCase.","line":14,"column":9,"nodeType":"Literal","endLine":14,"endColumn":20,"fix":{"range":[283,292],"text":"ListInput"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <el-form-item>\n    <label slot=\"label\" :title=\"props.label\">{{props.label}}</label>\n    <el-input\n      v-model=\"searchForm[props.field]\"\n      @change=\"emitChange\"\n      v-bind=\"$attrs\"\n    ></el-input>\n  </el-form-item>\n</template>\n\n<script>\nexport default {\n  name: 'listInput',\n  props: {\n    searchForm: {\n      required: true,\n      type: Object,\n      default: () => {}\n    },\n    props: {\n      required: true,\n      type: Object,\n      default: () => {}\n    }\n  },\n  methods: {\n    emitChange(value) {\n      this.$emit('change', { field: this.props.field, value: value });\n    }\n  }\n};\n</script>\n\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/common/listForm/listInputRange.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"listInputRange\" is not PascalCase.","line":20,"column":9,"nodeType":"Literal","endLine":20,"endColumn":25,"fix":{"range":[492,506],"text":"ListInputRange"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <el-form-item class=\"input-range-form-item\">\n    <label slot=\"label\" :title=\"props.label\">{{props.label}}</label>\n    <el-input\n      v-model=\"searchForm[(props.field || {}).left]\"\n      @change=\"handleLeftChange\"\n      v-bind=\"$attrs\"\n    ></el-input>\n    <span>-</span>\n    <el-input\n      v-model=\"searchForm[(props.field || {}).right]\"\n      @change=\"handleRightChange\"\n      v-bind=\"$attrs\"\n    ></el-input>\n  </el-form-item>\n</template>\n\n<script>\nexport default {\n  name: 'listInputRange',\n  props: {\n    searchForm: {\n      required: true,\n      type: Object,\n      default: () => {}\n    },\n    props: {\n      required: true,\n      type: Object,\n      default: () => {}\n    }\n  },\n  methods: {\n    handleLeftChange(value) {\n      this.emitChange(this.props.field.left, value);\n    },\n    handleRightChange(value) {\n      this.emitChange(this.props.field.right, value);\n    },\n    emitChange(field, value) {\n      this.$emit('change', { field, value });\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.input-range-form-item{\n  /deep/ .el-form-item__content{\n    display:flex;\n    border: 1px solid #dcdfe6;\n    .el-input__inner{\n      border: 0;\n      height:30px;\n      line-height:30px;\n      vertical-align: top;\n    }\n  }\n}\n</style>\n\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/common/listForm/select.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"listSelect\" is not PascalCase.","line":15,"column":9,"nodeType":"Literal","endLine":15,"endColumn":21,"fix":{"range":[416,426],"text":"ListSelect"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <el-form-item>\n    <label slot=\"label\" :title=\"props.label\">{{props.label}}</label>\n    <el-select v-model=\"searchForm[props.field]\"\n        v-bind=\"$attrs\"\n        @change=\"emitChange\"\n        >\n      <el-option v-for=\"item in props.options || []\" :key=\"item.value\" :value=\"item.value\" :label=\"item.label\"></el-option>\n    </el-select>\n  </el-form-item>\n</template>\n\n<script>\nexport default {\n  name: 'listSelect',\n  props: {\n    searchForm: {\n      required: true,\n      type: Object,\n      default: () => {}\n    },\n    props: {\n      required: true,\n      type: Object,\n      default: () => {}\n    }\n  },\n  methods: {\n    emitChange(value) {\n      this.$emit('change', { field: this.props.field, value: value });\n    }\n  }\n};\n</script>\n\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/common/listSearch.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":3,"column":44,"nodeType":"VIdentifier","messageId":"deprecated","endLine":3,"endColumn":50}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div>\n    <el-form class=\"pms-list-form\" @submit.native.prevent=\"onSearch\">\n      <el-button v-show=\"false\" native-type=\"submit\"></el-button>\n      <div\n        v-for=\"component in components\"\n        :key=\"component.key || JSON.stringify(component.props.field)\"\n        :class=\"{ 'long-col': component.isLongCol }\"\n      >\n        <el-popover\n          placement=\"top\"\n          width=\"300px\"\n          trigger=\"hover\"\n          :disabled=\"!(component.props.disabled && component.props.disabledTip)\"\n          :content=\"component.props.disabledTip\"\n        >\n          <component\n            :is=\"component.name\"\n            v-bind=\"component.props\"\n            :props=\"component.props\"\n            slot=\"reference\"\n            :searchForm=\"searchForm\"\n            @change=\"emitChange\"\n          ></component>\n        </el-popover>\n      </div>\n    </el-form>\n  </div>\n</template>\n\n<script>\nimport listInput from './listForm/input';\nimport listSelect from './listForm/select';\nimport listAutoComplete from './listForm/autoComplete';\nimport listDatePicker from './listForm/datePicker';\nimport listFormItem from './listForm/formItem';\nimport listInputRange from './listForm/listInputRange';\nconst validableComponents = [\n  'listInput',\n  'listSelect',\n  'listAutoComplete',\n  'listDatePicker',\n  'listFormItem',\n  'listInputRange'\n];\n\nexport default {\n  props: {\n    components: {\n      required: true,\n      type: Array,\n      default: () => [],\n      validator: value => {\n        if (!Array.isArray(value)) {\n          return false;\n        }\n        if (value.length) {\n          const isInValidData = value.some(item => {\n            if (!validableComponents.includes(item.name)) {\n              return true;\n            }\n            if (!item.props || Object.prototype.toString.call(item.props) !== '[object Object]') {\n              return true;\n            }\n            return false;\n          });\n          if (isInValidData) {\n            return false;\n          }\n        }\n        return true;\n      }\n    },\n    searchForm: {\n      type: Object,\n      default: () => {}\n    }\n  },\n  components: {\n    listInput,\n    listSelect,\n    listAutoComplete,\n    listDatePicker,\n    listFormItem,\n    listInputRange\n  },\n  methods: {\n    onSearch() {\n      this.$emit('search');\n    },\n    emitChange(value) {\n      this.$emit('change', value);\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.pms-list-form {\n  display: grid;\n  grid-auto-flow: row dense;\n  grid-gap: 16px 10px;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  .long-col {\n    grid-column-start: span 2;\n  }\n  /deep/ .el-form-item {\n    display: flex;\n    color: #333;\n    margin-bottom: 0;\n    .el-form-item__label {\n      max-width: 148px;\n      background-color: #fafbfd;\n      white-space: nowrap;\n      text-overflow: ellipsis;\n      overflow: hidden;\n      padding: 0 8px;\n      border-radius: 4px 0 0 4px;\n      border: 1px solid #e2e6ec;\n      border-right: 0;\n      height: 32px;\n      line-height: 32px;\n      box-sizing: border-box;\n    }\n    .el-form-item__content {\n      flex: 1;\n      height: 32px;\n      line-height: 32px;\n      box-sizing: border-box;\n      > div {\n        width: 100%;\n      }\n    }\n  }\n  /deep/ .long-col {\n    .el-form-item {\n      .el-form-item__label {\n        max-width: 236px;\n      }\n    }\n  }\n\n  /deep/ .el-input__inner {\n    border-top-left-radius: 0px;\n    border-bottom-left-radius: 0px;\n  }\n  /deep/ .el-input.is-disabled .el-input__inner {\n    background-color: #fafbfd;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/common/listTab.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/common/noData.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/common/pmsPagination.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/common/textPopover/index.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"text-popover\" is not PascalCase.","line":11,"column":9,"nodeType":"Literal","endLine":11,"endColumn":23,"fix":{"range":[303,315],"text":"TextPopover"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <el-popover placement=\"top\" trigger=\"hover\" width=\"300px\" :content=\"text\" :disabled=\"disabledPopover\">\n    <span ref=\"text\" slot=\"reference\" :style=\"textStyle\">{{ text || '-' }}</span>\n  </el-popover>\n</template>\n\n<script>\nimport { getTextWidth } from './utils';\n\nexport default {\n  name: 'text-popover',\n  props: {\n    text: {\n      type: String,\n      default: ''\n    },\n    maxWidth: {\n      // unit = px\n      type: Number,\n      default: 1\n    },\n    line: {\n      type: Number,\n      default: 2\n    }\n  },\n  computed: {\n    disabledPopover() {\n      const textWidth = getTextWidth(this.text);\n      if (this.line && textWidth) {\n        return (textWidth + 12) / this.line <= this.maxWidth; // 不同文字折行的方式不同，比如英文，会提前折行，中文也有这种情况，所以要加12px的部分做一个兼容。\n      }\n      return true;\n    },\n    textStyle() {\n      return {\n        maxWidth: this.maxWidth + 'px',\n        display: '-webkit-box',\n        '-webkit-box-orient': 'vertical',\n        '-webkit-line-clamp': this.line,\n        'word-break': 'break-all'\n      };\n    }\n  }\n};\n</script>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/common/textPopover/utils.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/common/topTips.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"topTips\" is not PascalCase.","line":14,"column":9,"nodeType":"Literal","endLine":14,"endColumn":18,"fix":{"range":[398,405],"text":"TopTips"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <section class=\"top-tips-wrapper\" :class=\"colorMap[type] || 'green'\">\n    <svg-icon :iconClass=\"iconMap[type] || 'srmSuccess'\" class=\"top-tips-svg flex-left-box\"></svg-icon>\n    <div class=\"flex-right-box\">\n      <p class=\"top-tips-content\" v-if=\"content\">{{content}}</p>\n      <slot v-else></slot>\n    </div>\n  </section>\n</template>\n\n<script>\n// 详情页顶部提示语组件\nexport default {\n  name: 'topTips',\n  props: {\n    type: {\n      type: String,\n      default: '' // warning, error, success, disabled\n    },\n    content: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      iconMap: {\n        warning: 'srmWarning',\n        error: 'srmWarning',\n        disabled: 'srmTips',\n        success: 'srmSuccess'\n      },\n      colorMap: {\n        warning: 'orange',\n        error: 'red',\n        disabled: 'grey',\n        success: 'green'\n      }\n    };\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.top-tips-wrapper {\n  display: flex;\n  justify-content: flex-start;\n  align-items: flex-start;\n  padding: 10px 16px;\n  font-size: 14px;\n  line-height: 1.2em;\n  color: #666666;\n  border-radius: 4px;\n  margin-bottom: 16px;\n  border:1px solid transparent;\n  .flex-right-box {\n    flex: 1;\n  }\n  .top-tips-content{\n    white-space: normal;\n    word-break: break-word;\n  }\n  .top-tips-svg {\n    width: 14px;\n    height: 14px;\n    vertical-align: top;\n    margin-right: 8px;\n  }\n  &.orange {\n    background-color: $orange_bg;\n    // border-color:$orange;\n    .top-tips-svg {\n      fill: #ffc400;\n    }\n  }\n  &.green {\n    background-color: $green_bg;\n    // border-color:$green;\n    .top-tips-svg {\n      fill: #55cc77;\n    }\n  }\n  &.red {\n    background-color: $red_bg;\n    // border-color:$red;\n    .top-tips-svg {\n      fill: #ff514b;\n    }\n  }\n  &.grey {\n    background-color: #f1f1f1;\n    color: $black;\n    // border-color:$black_light_one;\n    .top-tips-svg {\n      fill: #333;\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/common/uploadBtnGroup.vue","messages":[{"ruleId":"vue/require-prop-type-constructor","severity":2,"message":"The \"disabled\" property should be a constructor.","line":46,"column":15,"nodeType":"Literal","endLine":46,"endColumn":20},{"ruleId":"vue/require-prop-type-constructor","severity":2,"message":"The \"btnText\" property should be a constructor.","line":49,"column":14,"nodeType":"Literal","endLine":49,"endColumn":16},{"ruleId":"vue/require-prop-type-constructor","severity":2,"message":"The \"historyBtnText\" property should be a constructor.","line":50,"column":21,"nodeType":"Literal","endLine":50,"endColumn":23}],"errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <span class=\"btn-margin\">\n    <el-dropdown class=\"btn-margin\" @command=\"onDownloadTemp\">\n      <el-upload :disabled=\"disabled\" ref=\"uploadComponent\" v-bind=\"computedUploadParams\">\n        <el-button :disabled=\"disabled\" class=\"white-blue\" :loading=\"isLoading\">\n          {{ btnText || $t('commonMassUpload') }}\n          <i class=\"el-icon-arrow-down el-icon--right\"></i>\n        </el-button>\n      </el-upload>\n      <el-dropdown-menu slot=\"dropdown\">\n        <el-dropdown-item command=\"template\">\n          <i class=\"el-icon-download\"></i>\n          {{ $t('commonTemplate') }}\n        </el-dropdown-item>\n      </el-dropdown-menu>\n    </el-dropdown>\n    <el-button class=\"white-blue\" :loading=\"isLoading\" @click=\"isShowHistory = true\">{{\n       historyBtnText || $t('commonUploadHistory')\n    }}</el-button>\n    <exportHistoryDialog\n      v-if=\"isShowHistory\"\n      :taskType=\"taskType\"\n      :visible=\"true\"\n      :isUplodHistory=\"true\"\n      :interval=\"10000\"\n      @close=\"isShowHistory = false\"\n    ></exportHistoryDialog>\n  </span>\n</template>\n<script>\nimport exportHistoryDialog from '@/components/ApproveList/exportHistoryDialog';\nimport { ajax } from '@/utils/request';\nimport { getCsrfHeader, getCsrfData } from '@/utils/cookie';\n\nexport default {\n  components: {\n    exportHistoryDialog\n  },\n  data() {\n    return {\n      isShowHistory: false,\n      isLoading: false\n    };\n  },\n  props: {\n    disabled: false,\n    uploadParams: {}, // el-upload参数透传\n    taskType: Number,\n    btnText: '',\n    historyBtnText: ''\n  },\n  computed: {\n    computedUploadParams() {\n      const data = {\n        withCredentials: true,\n        showFileList: false,\n        limit: 1,\n        name: 'file',\n        onSuccess: this.onSuccess,\n        onError: this.onError,\n        ...this.uploadParams\n      };\n      data.headers = { ...data.headers, ...getCsrfHeader() };\n      data.data = { ...data.data, ...getCsrfData() };\n      return data;\n    }\n  },\n  methods: {\n    ajax,\n    onDownloadTemp() {\n      this.$emit('downloadTemplate');\n    },\n    onSuccess(res) {\n      this.$refs.uploadComponent.clearFiles();\n      if (!res || res.retcode !== 0) {\n        const tips = (res && res.message) || this.$t('commonUploadFailed');\n        this.$message.error(tips);\n      } else if (res.retcode === 0) {\n        this.$message.success(this.$t('commonUploadHistorySuccessTips'));\n      }\n    },\n    onError() {\n      this.$message.error(this.$t('commonUploadFailed'));\n      this.$refs.uploadComponent.clearFiles();\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped></style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/fileListAttachment/imagePreviewer.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/fileListAttachment/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/layout/detail.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/layout/list.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/marketingCenter/addSkuDialog/index.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":16,"column":24,"nodeType":"VIdentifier","messageId":"deprecated","endLine":16,"endColumn":30},{"ruleId":"vue/no-unused-components","severity":2,"message":"The \"ListMassUpload\" component has been registered but not used.","line":147,"column":5,"nodeType":"Property","endLine":147,"endColumn":19}],"errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-dialog\n    @close=\"handleCancelDialogue\" :visible.sync=\"dialogVisible\" class=\"marketing-center-add-skus-dialog pms-ui\" :width=\"width\" :show-close=\"false\">\n    <header class=\"dialog-title\" slot=\"title\">\n      <h3 class=\"title\">Add SKU\n        <span class=\"title-remark\">{{$t(info.addTip)}}</span>\n      </h3>\n    </header>\n    <section class=\"search-view\">\n      <div class=\"search-row\">\n          <el-input\n          :placeholder=\"$t('promotionNominationAddSkuPlaceholder')\"\n          v-model=\"products\"\n          class=\"input-with-select\"\n          style=\"width:100%\"\n          @keyup.enter.native=\"onSearch\">\n            <el-select v-model=\"selectMode\" slot=\"prepend\" placeholder=\"请选择\" class=\"input-select\" :autosize=\"{ maxRows: 4 }\">\n              <el-option label=\"Product ID\" value=\"1\"></el-option>\n              <el-option label=\"SKU ID\" value=\"2\"></el-option>\n            </el-select>\n            <el-button slot=\"append\" :loading=\"vloading\" icon=\"el-icon-search\" @click=\"onSearch\" class=\"list-btn\"></el-button>\n          </el-input>\n        </div>\n    </section>\n    <section class=\"table-view\">\n      <div class=\"left-table\">\n        <div class=\"table-connector\">\n          <div class=\"add-sku-show-available\"><el-checkbox v-model=\"only_available\" v-if=\"availableOnly\" @change=\"onSearch\">{{$t('addSkuAvailbleOnly')}}</el-checkbox></div>\n          <button @click=\"selectProducts\">{{$t('commonAddSelected')}} >></button>\n        </div>\n        <el-table\n        v-loading=\"vloading\"\n        @selection-change=\"changeProductsSelect\"\n        :data=\"skuList\"\n        border\n        height=\"460\">\n          <el-table-column type=\"selection\" width=\"40\" :selectable=\"isSelectDisable\"></el-table-column>\n          <el-table-column\n          :label=\"$t(schema.label)\"\n          v-for=\"schema in skuSchema\"\n          :key=\"schema.label\"\n          :width=\"schema.width\"\n          :align=\"schema.align || ''\"\n          >\n            <template slot-scope=\"scope\">\n              <pms-table-item :class=\"!isSelectDisable(scope.row) && schema.label !== popKey ? 'marketing-add-sku-disable' : ''\" :renderData=\"getTableCellRender(schema, scope.row, scope.$index)\"></pms-table-item>\n              <el-popover placement=\"right\"\n              trigger=\"hover\"\n              popper-class=\"price-change-add-sku-tip\"\n              v-if=\"schema.label === popKey && !(!Array.isArray(scope.row.reason) || scope.row.reason.length === 0)\">\n                <div>\n                  <ul>\n                    <li v-for=\"reason in scope.row.reason\" :key=\"typeof reason === 'string' ? reason : reason.content\">\n                      <div v-if=\"typeof reason === 'string'\">{{reason}}</div>\n                      <div v-if=\"typeof reason !== 'string' && reason.content\">\n                        {{reason.content}}\n                        <div :class=\"reason.class\"  :style=\"reason.style\"></div>\n                      </div>\n                    </li>\n                  </ul>\n                </div>\n                <svg-icon class=\"icon_question\" icon-class=\"question\" slot=\"reference\"/>\n              </el-popover>\n            </template>\n          </el-table-column>\n          <el-table-column :label=\"$t('commonAction')\" align=\"center\" width=\"90px\">\n            <template slot-scope=\"scope\">\n              <div v-if=\"scope.row.reason.length > 0\"> </div>\n              <div class=\"added-btn\" v-else-if=\"skuMap[scope.row.sku_id] || scope.row.isAdded\">{{$t('commonAdded')}}</div>\n              <div class=\"add-btn\" @click=\"addSku(scope.row)\" v-else>{{$t('commonAdd')}}</div>\n            </template>\n          </el-table-column>\n        </el-table>\n        <el-pagination\n          :current-page=\"pageInfo.page_no\"\n          background\n          layout=\"prev, pager, next\" :total.sync=\"pageTotal\"\n          @current-change=\"handleChangeProductPageIndex\"\n        ></el-pagination>\n      </div>\n\n      <div class=\"right-table\">\n        <div class=\"table-connector\">\n          <div>\n            <h4> {{$t('commonSkuAdded') + ' ('+ selectList.length +')'}} </h4>\n          </div>\n        </div>\n        <el-table :data=\"computedSelectList\" border height=\"460\">\n          <el-table-column type=\"index\" width=\"50\" label=\"No.\"> </el-table-column>\n          <el-table-column\n          :label=\"$t(schema.label)\"\n          v-for=\"schema in selectedSchema\"\n          :width=\"schema.width\"\n          :align=\"schema.align || ''\"\n          :key=\"schema.label\">\n            <template slot-scope=\"scope\">\n              <pms-table-item :renderData=\"getTableCellRender(schema, scope.row, scope.$index)\"></pms-table-item>\n            </template>\n          </el-table-column>\n          <el-table-column :label=\"$t('commonAction')\" align=\"center\" width=\"80\">\n            <template slot-scope=\"scope\">\n              <div class=\"remove-btn\" @click=\"removeSelect(scope.row)\">{{$t('purchaseRequest.remove')}}</div>\n            </template>\n          </el-table-column>\n        </el-table>\n        <el-pagination\n          :current-page=\"selectPager.pageIndex\" background layout=\"prev, pager, next\" :total.sync=\"selectPager.total\"\n          :page-size=\"10\" @current-change=\"handleChangeSelectPageIndex\"\n        ></el-pagination>\n      </div>\n    </section>\n    <div class=\"footer-row\" slot=\"footer\">\n      <div class=\"el-button\" @click=\"handleCancelDialogue\">{{$t('supplier.cancel')}}</div>\n      <div v-loading=\"loading\" @click=\"handleNext\" class=\"el-button\">{{$t('supplier.next')}}</div>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nimport pmsTableItem from '@/components/BaseItem/tableItem';\nimport ListMassUpload from '@/components/upload/blobResponseUpload';\nimport {getProductSkuDetailList } from '@/api/nominate';\nexport default {\n  data() {\n    return {\n      checkedRows: [],\n      dialogVisible: false,\n      only_available: true,\n      selectMode: '1',\n      products: '',\n      productList: [],\n      skuMap: {},\n      vloading: false,\n      pageInfo: {\n        count: 10,\n        page_no: 1\n      },\n      searching: false,\n      selectList: [],\n      selectPager: {\n        total: 0,\n        pageIndex: 1\n      }\n    };\n  },\n  components: {\n    ListMassUpload,\n    pmsTableItem\n  },\n  props: {\n    visible: { // 控制dialog显示与否\n      type: Boolean,\n      default: false\n    },\n    pageTotal: {\n      type: Number,\n      default: 0\n    },\n    info: { // 从哪里进入的add页面 // addTip, region,campaign_id,campaign_type\n      type: Object,\n      default: () => ({})\n    },\n    loading: { // 是否在加载\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    skuList: { // 搜出来的skuList 配合this.$emit('getSku')使用\n      type: Array,\n      default: () => ([])\n    },\n    skuSchema: { // 搜索出来的sku展示内容,label注意传翻译以前的key\n      type: Array\n    },\n    selectedSchema: { // 选中的sku展示内容，label同上\n      type: Array\n    },\n    popKey: {\n      type: String,\n      default: 'commonSkuIDOrName'\n    },\n    availableOnly: {\n      type: Boolean,\n      default: false\n    },\n    hasDefault: {\n      type: Boolean,\n      default: true\n    },\n    width: {\n      default: '1080px'\n    }\n  },\n  computed: {\n    computedSelectList() {\n      const start = (this.selectPager.pageIndex - 1) * 10;\n      return this.selectList.slice(start, start + 10);\n    },\n    computedAdded() {\n      return true;\n    }\n  },\n  methods: {\n    getTableCellRender(schema, row, index) {\n      return { schema, row, index };\n    },\n    changeProductsSelect(rows) {\n      this.checkedRows = rows || [];\n    },\n    isSelectDisable(row, index) {\n      return row.reason.length > 0 ? false : (row.isAdded ? false : !this.skuMap[row.sku_id]);\n    },\n    handleCancelDialogue() {\n      this.$emit('close');\n    },\n    handleChangeProductPageIndex(index) {\n        this.pageInfo.page_no = index;\n        this.getList();\n    },\n    handleChangeSelectPageIndex(index) {\n      this.selectPager.pageIndex = index;\n    },\n    handleNext() {\n      if (this.selectList.length === 0) return this.$message.error('Please add some sku first!');\n      this.vloading = true;\n      const itemList = this.selectList.map(item => item.sku_id);\n      const campaignId = this.info.campaign_id ? this.info.campaign_id : this.$route.params.id === undefined ? 0 : Number(this.$route.params.id);\n      getProductSkuDetailList({ region: this.info.region, sku_ids: itemList, campaign_id: campaignId}).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.$message.success('Success');\n          this.$emit('addProducts', resp.data.items.map(item => ({ ...item })));\n          this.$emit('close');\n        }\n      }).catch((e) => {\n        this.$message.error(e);\n      }).finally(() => {\n        this.vloading = false;\n      });\n    },\n    addSku(skuItem) {\n      if (!this.skuMap[skuItem.sku_id]) {\n        this.selectList.push(skuItem);\n        this.$set(this.skuMap, skuItem.sku_id, true);\n      }\n    },\n    onSearch() {\n      this.pageInfo.page_no = 1;\n      this.getList();\n    },\n    getList() {\n      const content = this.products.trim().replace(/(<\\w+?.*?>)|(<\\/\\w+?>)/g, '');\n      let list = [];\n      const reqObj = { region: this.info.region, ...this.pageInfo};\n      if (this.selectMode === '1') {\n        list = [...new Set(content.trim().split(/\\s*[，,]\\s*/).filter(item => item !== ''))].map(item => Number(item) || 0);\n        reqObj.item_ids = list;\n      } else if (this.selectMode === '2') {\n        list = [...new Set(content.trim().split(/\\s*[，,]\\s*/).filter(item => item !== ''))].map(item => item || '');\n        reqObj.sku_ids = list;\n      }\n      if (list.length > 100) {\n        return this.$message.error(`${this.selectMode === '1' ? 'Product' : 'SKU'} ID cann't be more than 100`);\n      }\n      if (this.availableOnly) {\n        this.$set(reqObj, 'only_available', this.only_available);\n      }\n      this.$emit('getSku', reqObj);\n    },\n    onClear() {\n      this.products = '';\n    },\n    removeSelect(row) {\n      const index = this.selectList.findIndex(item => item.sku_id === row.sku_id);\n      if (index !== -1) {\n        this.$set(this.skuMap, row.sku_id, false);\n        this.skuMap[row.sku_id] = false;\n        this.selectList.splice(index, 1);\n        this.selectPager.total = this.selectList.length;\n        if ((this.selectPager.pageIndex - 1) * 10 + 1 > this.selectList.length) {\n          this.selectPager.pageIndex = 1;\n        }\n      }\n    },\n    selectProducts() {\n      this.checkedRows.forEach(item => {\n        if (!this.skuMap[item.sku_id]) {\n          this.selectList.push(item);\n          this.$set(this.skuMap, item.sku_id, true);\n        }\n      });\n      this.selectPager = {\n        pageIndex: 1,\n        total: this.selectList.length\n      };\n    },\n    uploadSuccess(res) {\n      this.$emit('uploadSuccess', res);\n      this.$emit('close');\n    },\n    uploadError(res) {\n      this.$emit('uploadError', res);\n    }\n  },\n  watch: {\n    '$props.visible': {\n      handler(curr) {\n        this.dialogVisible = curr;\n        this.skuMap = {};\n        this.selectList = [];\n        this.productList = [];\n        this.checkedRows = [];\n        this.products = '';\n        this.pageInfo = {count: 10, page_no: 1};\n        this.selectPager = { total: 0, pageIndex: 1 };\n        if (curr && this.hasDefault) {\n          this.onSearch();\n        }\n      },\n    immediate: false\n    },\n    '$props.loading': {\n      handler(curr) {\n        this.vloading = curr;\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  .marketing-center-add-skus-dialog {\n    &/deep/.el-dialog {\n      margin-top: 10vh !important;\n    }\n    .dialog-title {\n      .title-remark {\n        margin-left: 10px;\n        color: #CCCCCC;\n        font-size: 14px;\n      }\n    }\n    &/deep/.el-dialog__body {\n      padding: 10px 20px 0;\n    }\n    .upload-row {\n      text-align: right;\n    }\n    .search-view {\n      display: flex;\n      align-items: center;\n      .search-row {\n        flex: 3;\n        display: flex;\n        align-items: center;\n        & /deep/ .el-input__inner {\n            border: none;\n        }\n        & /deep/ .el-input-group__prepend {\n          border: none;\n        }\n        .input-with-select {\n          border: 1px solid #E2E6EC;\n          border-radius: 4px;\n          overflow: hidden;\n          .input-select {\n            width: 110px;\n            border-right: 1px solid #E2E6EC;\n            .el-input__inner:focus {\n              border: none;\n            }\n          }\n          & /deep/.el-input-group__append\n            {\n              border: none;\n              border-left: 1px solid #E2E6EC;\n              padding: 0;\n            }\n\n        }\n        .input-products {\n          margin-right: 10px;\n        }\n        .list-btn {\n          width: 10px;\n        }\n      }\n      .chosen-title {\n        flex: 2;\n        margin-left: 80px;\n      }\n    }\n    .table-view {\n      display: flex;\n      margin: 20px 0 10px;\n      justify-content: center;\n      align-items: flex-start;\n      .left-table {\n        flex: 3.5;\n        text-align: center;\n        margin-right: 36px;\n        .marketing-add-sku-disable {\n          color: #aaa;\n        }\n        .icon_question {\n          color: #aaa;\n        }\n      }\n      .right-table {\n        flex: 2;\n        text-align: center;\n      }\n      .el-table {\n        margin-bottom: 20px;\n        & /deep/ .remove-btn{\n          color:#3D6ED1;\n          cursor: pointer;\n        }\n        & /deep/ .add-btn{\n          color: #3D6ED1;\n          cursor: pointer;\n        }\n        & /deep/ .added-btn{\n          color: #aaa;\n          cursor: not-allowed;\n        }\n      }\n      .table-connector {\n        width: 100%;\n        height: 30px;\n        text-align: right;\n        display: flex;\n        justify-content: space-between;\n        &>button{\n          background-color:#3D6ED1;\n          color: #fff;\n          font-size: 12px;\n          border: none;\n          border-radius:2px;\n          padding: 4px;\n          height: 20px;\n          cursor: pointer;\n        }\n        .add-sku-show-available {\n        }\n        &>div\n        {\n          text-align: left;\n          &>h4{\n            font-size: 14px;\n            line-height: 22px;\n            color: #000;\n          }\n        }\n      }\n    }\n    .footer-row {\n      text-align: right;\n      &>div {\n        width: 85px;\n      }\n      &>div:last-child {\n        background: #3D6ED1;\n        color:white;\n      }\n    }\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/marketingCenter/cancelDialog/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/marketingCenter/createDialog/promotion.vue","messages":[{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"create_mode\" is not in camelCase.","line":88,"column":5,"nodeType":"Property","endLine":91,"endColumn":6}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-dialog class='promotion-creator' @close='onCloseDialog' :title=\"dialogTitle\" :visible.sync=\"dialogVisible\" width=\"600px\">\n    <el-form :model=\"form\" class=\"create-issue-form\" ref=\"DialogFrom\" label-width=\"136px\" :disabled=\"!canEdit\" :rules=\"rules\" label-position=\"right\">\n      <template v-if=\"hasSubType\">\n        <el-form-item :label=\"`${$t('commonCampaignType')}:`\">\n          <span>{{$t('commonProductPromotion')}}</span>\n        </el-form-item>\n        <el-form-item :label=\"`${$t('commonSubType')}:`\">\n          <span>{{formatType(form.campaign_type)}}</span>\n        </el-form-item>\n      </template>\n      <el-form-item v-else :label=\"`${$t('commonCampaignType')}:`\">\n        <span>{{formatType(form.campaign_type)}}</span>\n      </el-form-item>\n      <el-form-item :label=\"$t('marketingCenter.campaignName') + ': '\" prop=\"campaign_name\">\n        <div v-if=\"canEdit\">\n          <el-input v-model=\"form.campaign_name\" clearable :maxlength=\"100\" class=\"promotion-input\" show-word-limit></el-input>\n        </div>\n        <span v-else>{{form.campaign_name}}</span>\n      </el-form-item>\n      <el-form-item :label=\"$t('marketingCenter.campaignTime') + ': '\" prop=\"campaign_time\">\n        <el-date-picker v-if=\"canEdit\" v-model=\"form.campaign_time\" class=\"promotion-date-picker\"  type=\"datetimerange\" start-placeholder=\"Begin\" end-placeholder=\"End\"\n         format=\"yyyy-MM-dd HH:mm\" value-format=\"yyyy-MM-dd HH:mm:ss\" :default-time=\"['00:00:00', '23:59:00']\" :disabled=\"modifyData.is_auto_black || modifyData.has_confirmed || modifyData.is_start\"></el-date-picker>\n         <span v-else>{{formatCampaginTime}}</span>\n         <span class=\"time-zone\">{{timeZoneDesc}}</span>\n      </el-form-item>\n    </el-form>\n    <div class=\"user-footer-btn\">\n      <div class='white-grey' @click=\"onCloseDialog\">{{$t('commonCancel')}}</div>\n      <div class='dialog-list-btn' type=\"primary\" v-if=\"canEdit\" v-loading=\"loadingConfirm\" @click=\"onClickSubmit\">{{ $t('commonConfirm')}}</div>\n      <div class='dialog-list-btn' type=\"primary\" v-if=\"!canEdit && modifyData.can_modify && canOperate\" @click=\"onModify\">{{ $t('purchaseOrder.modify')}}</div>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nimport { commonFetchAction } from '@/utils';\nimport { createCampaign, updateCampaign } from '@/api/marketingCenter';\nimport { formatParams } from '@/utils/formatParams';\nimport { MarketingCampaignTypeList, TimeZoneByCountry } from '@/utils/constant';\nimport moment from 'moment';\n\nexport default {\n  data() {\n    const validatorTime = (rule, value, cb) => {\n      if (Array.isArray(value)) {\n        if (value.length > 1) {\n          const endTime = value[1];\n          if (+new Date(endTime) <= +new Date()) {\n            return cb(new Error('Invalid End Time'));\n          }\n        }\n      }\n      cb();\n    };\n    return {\n      MarketingCampaignTypeList: MarketingCampaignTypeList,\n      dialogVisible: false,\n      loadingConfirm: false,\n      form: {\n        campaign_name: '',\n        campaign_type: '',\n        campaign_time: ''\n      },\n      rules: {\n        campaign_name: [\n          { required: true, trigger: 'blur', message: 'Campaign Name is required' }\n        ],\n        campaign_type: [\n          { required: true, trigger: 'blur', message: 'Campaign Type is required' }\n        ],\n        campaign_time: [\n          { required: true, trigger: 'blur', message: 'Campaign Time is required' },\n          { validator: validatorTime, trigger: 'blur' }\n        ]\n      }\n    };\n  },\n  props: {\n    visible: {\n      type: Boolean,\n      required: true\n    },\n    modifyData: {\n      type: Object,\n      default: () => {}\n    },\n    create_mode: { // 0-create, 1-modify, 2-view,\n      type: Number,\n      default: 0\n    },\n    region: {\n      type: String,\n      required: true\n    },\n    hasSubType: {\n      type: Boolean,\n      default: false\n    },\n    campaignType: {\n      type: Number,\n      default: 1\n    },\n    canOperate: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    dialogTitle() {\n      let title = '';\n      switch (this.create_mode) { // 0-create, 1-modify, 2-view\n        case 0: title = this.$t('marketingCenter.newCampaign'); break;\n        case 1: title = this.$t('marketingCenter.modifyCampaign'); break;\n        case 2: title = this.$t('marketingCenter.viewCampaign'); break;\n      }\n      return title;\n    },\n    canEdit() {\n      return [0, 1].includes(this.create_mode);\n    },\n    formatCampaginTime() {\n      let str = '';\n      if (this.modifyData.campaign_start_time_str) {\n        str += moment(this.modifyData.campaign_start_time_str).format('YYYY-MM-DD HH:mm');\n      }\n      if (this.modifyData.campaign_end_time_str) {\n        str += ' - ' + moment(this.modifyData.campaign_end_time_str).format('YYYY-MM-DD HH:mm');\n      }\n      return str;\n    },\n    timeZoneDesc() {\n      return `${TimeZoneByCountry[this.region]}00`;\n    }\n  },\n  methods: {\n    formatType(type) {\n      return (this.MarketingCampaignTypeList.find(item => item.value === type) || { label: '' }).label;\n    },\n    onModify() {\n      this.$emit('modify');\n    },\n    onCloseDialog() {\n      this.$emit('close');\n    },\n    onClickSubmit() {\n      this.$refs.DialogFrom.validate(isValid => {\n        if (isValid && !this.loadingConfirm) {\n          this.onSubmitCampaign();\n        }\n      });\n    },\n    getChangeLog() {\n      const catchData = this.modifyData;\n      let isChange = false;\n      const { form } = this;\n      const result = [];\n      if (catchData.campaign_name !== form.campaign_name) {\n        isChange = true;\n        result.push({ field: 'Campaign Name', before: catchData.campaign_name, after: form.campaign_name });\n      }\n      if (catchData.campaign_type !== form.campaign_type) {\n        isChange = true;\n        result.push({ field: 'Campaign Type', before: this.formatType(catchData.campaign_type), after: this.formatType(form.campaign_type) });\n      }\n      if (Array.isArray(form.campaign_time) && form.campaign_time.length > 1) {\n        if (catchData.campaign_start_time_str !== form.campaign_time[0]) {\n          isChange = true;\n          result.push({ field: 'Campaign Start Time', before: catchData.campaign_start_time_str.substring(0, catchData.campaign_start_time_str.length - 3), after: form.campaign_time[0].substring(0, form.campaign_time[0].length - 3) });\n        }\n        if (catchData.campaign_end_time_str !== form.campaign_time[1]) {\n          isChange = true;\n          result.push({ field: 'Campaign End Time', before: catchData.campaign_end_time_str.substring(0, catchData.campaign_end_time_str.length - 3), after: form.campaign_time[1].substring(0, form.campaign_time[1].length - 3) });\n        }\n      }\n      return {result, isChange};\n    },\n    async onSubmitCampaign() {\n      try {\n        this.loadingConfirm = true;\n        let campaign_start_time_str = '';\n        let campaign_end_time_str = '';\n        if (Array.isArray(this.form.campaign_time) && this.form.campaign_time.length > 1) {\n          campaign_start_time_str = this.form.campaign_time[0];\n          campaign_end_time_str = this.form.campaign_time[1];\n        }\n        const params = {\n          region: this.region,\n          campaign_name: this.form.campaign_name,\n          campaign_type: this.form.campaign_type,\n          campaign_start_time_str,\n          campaign_end_time_str\n        };\n        let requestFun = () => {};\n        if (this.create_mode === 0) { // 0-create 1-modify\n          requestFun = createCampaign;\n        } else {\n          const changeLog = this.getChangeLog();\n          if (!changeLog.isChange) { return this.$message.error(this.$t('commonNotChangeAnyThing')); }\n          requestFun = updateCampaign;\n          params.id = this.modifyData.id;\n          params.change_log = JSON.stringify(changeLog.result);\n        }\n        const res = await requestFun(formatParams(params));\n        commonFetchAction(res, (data) => {\n          this.$message({ type: 'success', message: this.create_mode === 0 ? 'Create Successfully!' : 'Submit Sucessfully!' });\n          this.onCloseDialog();\n          this.$emit('refresh');\n        });\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loadingConfirm = false;\n      }\n    }\n  },\n  watch: {\n    visible(isShow) {\n      if ([1, 2].includes(this.create_mode)) {\n        this.form.campaign_name = this.modifyData.campaign_name;\n        this.form.campaign_type = this.modifyData.campaign_type;\n        this.form.campaign_time = [this.modifyData.campaign_start_time_str, this.modifyData.campaign_end_time_str];\n      } else {\n        this.form.campaign_name = '';\n        this.form.campaign_type = this.campaignType;\n        this.form.campaign_time = '';\n      }\n      this.$refs.DialogFrom && typeof this.$refs.DialogFrom.clearValidate === 'function' && this.$refs.DialogFrom.clearValidate();\n      this.dialogVisible = isShow;\n    }\n  }\n};\n</script>\n<style lang=\"scss\" >\n.promotion-creator {\n  .el-input__inner{\n    background: #FFFFFF;\n    border: 1px solid #E5E5E5;\n    border-radius: 4px;\n    &:hover {\n      background: #FFFFFF;\n      border: 1px solid #3d61d1;\n    }\n  }\n  .promotion-input {\n    width: 350px;\n  }\n  .el-form-item {\n   &.is-error {\n     .promotion-input{\n        .el-input__inner{\n          border: 1px solid #F56C6C;\n        }\n      }\n      .promotion-date-picker {\n        .el-range-input {\n          border: 0;\n          background-color: transparent;\n        }\n      }\n   }\n  }\n  .promotion-date-picker{\n    width: 350px;\n    .el-range-input {\n      border: 0;\n      background-color: transparent;\n    }\n  }\n  .user-footer-btn{\n    margin-top: 40px;\n    display: flex;\n    justify-content: flex-end;\n    .white-grey {\n      width: 70px;\n      text-align: center;\n      line-height: 32px;\n      border-radius: 3px;\n      cursor: pointer;\n      background-color: #fff;\n      color: rgba(0, 0, 0, 0.65);\n      border: 1px solid #ccc;\n      margin-right: 12px;\n    }\n  }\n  .time-zone {\n    font-family: Helvetica;\n    font-size: 12px;\n    line-height: 21px;\n    color: #999999;\n  }\n}\n\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/marketingCenter/createDialog/sellerDiscount.vue","messages":[{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":8,"column":32,"nodeType":"ThisExpression","endLine":8,"endColumn":36},{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":15,"column":26,"nodeType":"ThisExpression","endLine":15,"endColumn":30},{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":42,"column":27,"nodeType":"ThisExpression","endLine":42,"endColumn":31},{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":44,"column":32,"nodeType":"ThisExpression","endLine":44,"endColumn":36},{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":54,"column":33,"nodeType":"ThisExpression","endLine":54,"endColumn":37},{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"create_mode\" is not in camelCase.","line":230,"column":5,"nodeType":"Property","endLine":233,"endColumn":6}],"errorCount":6,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-dialog class='pms-ui promotion-creator' @close='onCloseDialog' :title=\"dialogTitle\" :visible.sync=\"dialogVisible\" width=\"812px\">\n    <el-form :model=\"form\" class=\"create-issue-form\" ref=\"DialogFrom\" label-width=\"150px\" :disabled=\"!canEdit\" :rules=\"rules\" label-position=\"right\">\n      <el-form-item :label=\"$t('commonCampaignType') + ': '\">\n        {{$t('marketingCenter.sellerDiscount')}}\n      </el-form-item>\n      <el-form-item :label=\"$t('applicableShop') + ': '\" prop=\"shop_id\">\n        <div v-if=\"canEdit && !this.isDuplicate\">\n          <el-select v-model=\"form.shop_id\"\n              :remote-method=\"getShopList\"\n              filterable\n              clearable\n              remote\n              @change=\"handleSelectShopName\"\n              :disabled=\"this.create_mode === 1\"\n              class=\"seller-discount-input\"\n              >\n            <el-option v-for=\"item in shopList\" :label=\"item.label\" :key=\"item.value\" :value=\"item.value\"></el-option>\n          </el-select>\n        </div>\n        <span v-else>{{shopName}}</span>\n      </el-form-item>\n      <el-form-item :label=\"$t('discountName') + ': '\" prop=\"campaign_name\">\n        <div v-if=\"canEdit\">\n          <el-input  v-model=\"form.campaign_name\" clearable :maxlength=\"100\" class=\"seller-discount-input discount-name\" show-word-limit></el-input>\n        </div>\n        <span v-else>{{form.campaign_name}}</span>\n      </el-form-item>\n\n      <el-form-item :label=\"$t('marketingCenter.discountTime') + ': '\" required prop=\"campaign_time\">\n        <template v-if=\"canEdit\">\n          <el-date-picker v-model=\"form.campaign_start_time_str\" :picker-options=\"startPickerOptions\" placeholder=\"Begin\" type=\"datetime\" :disabled=\"isPending || isOver\"\n          default-time=\"00:00:00\" format=\"yyyy-MM-dd HH:mm\" value-format=\"yyyy-MM-dd HH:mm:ss\" @change=\"onDateChange\" class=\"seller-discount-input\"></el-date-picker>\n          <span>-</span>\n          <el-date-picker v-model=\"form.campaign_end_time_str\" :picker-options=\"endPickerOptions\" placeholder=\"End\" type=\"datetime\" :disabled=\"isOver\"\n          default-time=\"23:59:00\"  format=\"yyyy-MM-dd HH:mm\" value-format=\"yyyy-MM-dd HH:mm:ss\" @change=\"onDateChange\" class=\"seller-discount-input\"></el-date-picker>\n        </template>\n        <span v-else>{{formatCampaginTime}}</span>\n        <span class=\"time-zone\">{{timeZoneDesc}}</span>\n      </el-form-item>\n\n      <el-form-item v-if=\"this.isCreate\" :label=\"$t('frequency')\" prop=\"recurring_frequency\"\n        :rules=\"[{ required: true, trigger: 'change', message: 'Frequency is required'}]\">\n        <el-radio-group  v-if=\"this.isCreate\" v-model=\"form.recurring_frequency\" @change=\"onChangeFrequency\">\n          <el-radio  :label=\"1\"> {{$t('frequencyOneTime')}}</el-radio>\n          <el-radio v-if=\"showWeekly\" :label=\"2\"> {{$t('frequencyWeekly')}}</el-radio>\n          <el-radio v-if=\"showMonthly\" :label=\"3\"> {{$t('frequencyMonthly')}}</el-radio>\n        </el-radio-group>\n        <span v-else>{{getFrequencyText(form.recurring_frequency)}}</span>\n      </el-form-item>\n\n      <template v-if=\"(create_mode === 2 || isCreate) && (form.recurring_frequency === 2 || form.recurring_frequency === 3)\">\n        <el-form-item  :label=\"`${$t('recurringEndDate')}:`\" prop=\"recurring_end_time_str\" :rules=\"[{ required: true, trigger: 'change', message: 'Recurring End Date is required'}]\">\n          <el-date-picker v-if=\"this.isCreate\" v-model=\"form.recurring_end_time_str\" :picker-options=\"recurringEndPickerOptions\"  type=\"datetime\" default-time=\"23:59:59\" format=\"yyyy-MM-dd HH:mm\" value-format=\"yyyy-MM-dd HH:mm:ss\"\n          class=\"seller-discount-input\"></el-date-picker>\n          <span v-else>{{form.recurring_end_time_str}}</span>\n          <span class=\"time-zone\">{{timeZoneDesc}}</span>\n        </el-form-item>\n        <el-form-item :label=\"`${$t('recurringCampaign')}:`\">\n          <span class=\"total-text\">(Total: {{form.recurring_list.length}})</span>\n          <el-table :data=\"form.recurring_list\" size=\"mini\" :row-class-name=\"rowClassName\" border :max-height=\"150\">\n            <el-table-column :label=\"$t('commonCampaignName')\" prop=\"campaign_name\"></el-table-column>\n            <el-table-column :label=\"$t('sellerDiscountTime')\" :width=\"340\">\n              <template slot-scope=\"scope\">\n                {{moment(scope.row.campaign_start_time_str).format('YYYY-MM-DD HH:mm') }} ~ {{moment(scope.row.campaign_end_time_str).format('YYYY-MM-DD HH:mm') }}\n                <span class=\"time-zone\">{{timeZoneDesc}}</span>\n              </template>\n            </el-table-column>\n          </el-table>\n        </el-form-item>\n      </template>\n    </el-form>\n    <div class=\"content-center user-footer-btn\">\n      <div class='dialog-list-btn cancel-btn' @click=\"onCloseDialog\">{{$t('commonCancel')}}</div>\n      <div class='dialog-list-btn' type=\"primary\" v-if=\"canEdit\" v-loading=\"loadingConfirm\" @click=\"onClickSubmit\">{{ $t('commonConfirm')}}</div>\n      <div class='dialog-list-btn' type=\"primary\" v-if=\"!canEdit && modifyData.can_modify && !isOver && canOperate\" @click=\"onModify\">{{ $t('commonLogModify')}}</div>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nimport { commonFetchAction } from '@/utils';\nimport { createSellerDiscount, updateSellerDiscount, getRecurringList } from '@/api/marketingCenter';\nimport { formatParams } from '@/utils/formatParams';\nimport { getShopList } from '@/api/shopConfig';\nimport moment from 'moment';\nimport { sellerDiscountFrequencyList, TimeZoneByCountry } from '@/utils/constant';\nconst DefaultRecurringFrequency = 1;\nexport default {\n  data() {\n    const validatorTime = (rule, value, cb) => {\n      if (!this.form.campaign_start_time_str) {\n        return cb(new Error('InvalidStartTimeTip'));\n      }\n      if (!moment(this.form.campaign_start_time_str).isAfter(moment())) {\n        if (this.isPending) { // 活动进行中不做校验\n          return cb();\n        }\n        return cb(new Error(this.$t('StartTimeMustMoreThanNowTip')));\n      }\n      if (!this.form.campaign_end_time_str) {\n        return cb(new Error(this.$t('InvalidEndTimeTip')));\n      }\n      if (moment(this.form.campaign_end_time_str) <= moment(this.form.campaign_start_time_str)) {\n        return cb(new Error(this.$t('EndTimeMustMoreThanStartTimeTip')));\n      }\n      if (!moment(this.form.campaign_end_time_str).isAfter(moment(this.form.campaign_start_time_str))) {\n        return cb(new Error(' End Time Must more than Start Time'));\n      }\n      // 不是进行中的活动 大于180天\n      if (!this.isPending && moment(this.form.campaign_end_time_str).diff(moment(this.form.campaign_start_time_str), 'seconds') > 180 * 24 * 60 * 60) {\n        return cb(new Error(this.$t('sellerDiscountDayTip')));\n      }\n      // 活动进行中 且 原间隔大于180天\n      if (this.isPending && this.endToStartMoreThan180) {\n        // 如果现在距离活动开始时间超过 180天\n        if (this.currentToStartMoreThan180) {\n          // 当前活动结束时间 距离现在大于30天\n          if (moment(this.form.campaign_end_time_str).diff(moment(), 'seconds') > 30 * 24 * 60 * 60) {\n            return cb(new Error(this.$t('sellerDiscountDayTipMoreThan30')));\n          }\n        } else {\n          // 当前结束时间 大于 开始时间 超过180天\n          if (moment(this.form.campaign_end_time_str).diff(moment(this.form.campaign_start_time_str), 'seconds') > 180 * 24 * 60 * 60) {\n            return cb(new Error(this.$t('sellerDiscountDayTip')));\n          }\n        }\n      }\n      if (this.isCreate && this.form.recurring_frequency === 2) { // weekly\n        if (moment(this.form.campaign_end_time_str).diff(moment(this.form.campaign_start_time_str), 'days') > 7) {\n          return cb(new Error(this.$t('sellerDiscountDayTipMoreThan7')));\n        }\n      }\n      if (this.isCreate && this.form.recurring_frequency === 3) { // monthly\n        if (moment(this.form.campaign_end_time_str).diff(moment(this.form.campaign_start_time_str), 'days') > 28) {\n          return cb(new Error(this.$t('sellerDiscountDayTipMoreThan28')));\n        }\n      }\n      cb();\n    };\n    return {\n      moment,\n      dialogVisible: false,\n      loadingConfirm: false,\n      shopList: [],\n      form: {\n        shop_id: '',\n        campaign_name: '',\n        campaign_time: [],\n        campaign_start_time_str: '',\n        campaign_end_time_str: '',\n        recurring_frequency: DefaultRecurringFrequency,\n        recurring_end_time_str: '',\n        recurring_list: []\n      },\n      shopName: '',\n      rules: {\n        campaign_name: [\n          { required: true, trigger: 'blur', message: 'Campaign Name is required' }\n        ],\n        shop_id: [\n          { required: true, trigger: 'blur', message: 'Applicable Shop Name is required' }\n        ],\n        campaign_time: [\n          { validator: validatorTime, trigger: ['blur', 'change'] }\n        ]\n      },\n      startPickerOptions: {\n        disabledDate: time => {\n          const oneDay = 60 * 60 * 24 * 1000;\n          const onedayLess1ms = oneDay - 1; // 1ms 为了解决当天可以选择的问题\n          if (this.create_mode === 0 || this.isDuplicate) { // create\n            return time.getTime() <= (Date.now() - onedayLess1ms); // 开始时间不能小于当前时间\n          } else { // modify\n            if (this.isNotStarted) { // 活动未开始 && 开始时间不能小于当前活动开始时间  && 开始时间不能大于当前活动结束时间\n              return time.getTime() < new Date(this.modifyData.campaign_start_time_str).getTime() - onedayLess1ms ||\n              time.getTime() > new Date(this.modifyData.campaign_end_time_str).getTime();\n            }\n          }\n        }\n      },\n      endPickerOptions: {\n        disabledDate: time => {\n          const oneDay = 60 * 60 * 24 * 1000;\n          const onedayLess1ms = oneDay - 1; // 1ms 为了解决当天可以选择的问题\n          const dayNum180 = 180 * oneDay;\n          if (this.create_mode === 0) { // create  结束时间不能小于开始时间 && 间隔不能超过180天\n            if (this.form.recurring_frequency === 2) { // weekly\n              return time.getTime() < new Date(this.form.campaign_start_time_str).getTime() - onedayLess1ms ||\n                   time.getTime() > new Date(this.form.campaign_start_time_str).getTime() + 7 * oneDay;\n            }\n            if (this.form.recurring_frequency === 3) { // monthly\n              const endTime = moment(this.form.campaign_start_time_str).add('1', 'months').format('YYYY-MM-DD HH:mm:ss');\n              return time.getTime() < new Date(this.form.campaign_start_time_str).getTime() - onedayLess1ms ||\n                   time.getTime() > new Date(endTime).getTime();\n            }\n            return time.getTime() < new Date(this.form.campaign_start_time_str).getTime() - onedayLess1ms ||\n                   time.getTime() > new Date(this.form.campaign_start_time_str).getTime() + dayNum180;\n          } else {\n            // 活动进行中 当： 结束日期 - 开始日期 > 180 && 当前日期 - 开始时间 >180 则： 新的结束时间 - 当前日期 <= 30\n            if (this.isPending && this.endToStartMoreThan180 && this.currentToStartMoreThan180) {\n              return time.getTime() < (Date.now() - oneDay) ||\n                     time.getTime() > Date.now() + 28 * oneDay;\n            }\n            // 必须大于开始时间 && 不能大于当前活动结束时间 && 间隔不超过180\n            return time.getTime() < new Date(this.form.campaign_start_time_str).getTime() - onedayLess1ms ||\n                   time.getTime() > new Date(this.modifyData.campaign_end_time_str).getTime() ||\n                   time.getTime() > new Date(this.form.campaign_start_time_str).getTime() + dayNum180;\n          }\n        }\n      },\n      recurringEndPickerOptions: {\n        disabledDate: time => {\n          const endTime = moment(this.form.campaign_start_time_str).add('180', 'days').format('YYYY-MM-DD HH:mm:ss');\n          return time.getTime() < new Date(this.form.campaign_end_time_str).getTime() ||\n                time.getTime() > new Date(endTime).getTime();\n        }\n      }\n    };\n  },\n  props: {\n    visible: {\n      type: Boolean,\n      required: true\n    },\n    modifyData: {\n      type: Object,\n      default: () => {}\n    },\n    create_mode: {\n      type: Number,\n      default: 0 // 0-create, 1-modify, 2-view, 3-duplicate\n    },\n    region: {\n      type: String,\n      required: true\n    },\n    canOperate: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    dialogTitle() {\n      let title = '';\n      switch (this.create_mode) { // 0-create, 1-modify, 2-view, 3-duplicate\n        case 0: title = this.$t('marketingCenter.newCampaign'); break;\n        case 1: title = this.$t('marketingCenter.modifyDiscount'); break;\n        case 2: title = this.$t('marketingCenter.viewDiscount'); break;\n        case 3: title = this.$t('duplicateDiscount'); break;\n      }\n      return title;\n    },\n    canEdit() {\n      return [0, 1, 3].includes(this.create_mode);\n    },\n    formatCampaginTime() {\n      let str = '';\n      if (this.modifyData.campaign_start_time_str) {\n        str += moment(this.modifyData.campaign_start_time_str).format('YYYY-MM-DD HH:mm');\n      }\n      if (this.modifyData.campaign_end_time_str) {\n        str += ' - ' + moment(this.modifyData.campaign_end_time_str).format('YYYY-MM-DD HH:mm');\n      }\n      return str;\n    },\n    isNotStarted() { // 活动未开始\n      return moment().isBefore(this.modifyData.campaign_start_time_str);\n    },\n    isPending() { // 活动进行中\n      return moment().isAfter(this.modifyData.campaign_start_time_str) && moment().isBefore(this.modifyData.campaign_end_time_str);\n    },\n    isOver() { // 活动已结束\n      return moment().isAfter(this.modifyData.campaign_end_time_str);\n    },\n    endToStartMoreThan180() {\n      return moment(this.modifyData.campaign_end_time_str).diff(moment(this.modifyData.campaign_start_time_str), 'days') > 180;\n    },\n    currentToStartMoreThan180() {\n      return moment().diff(moment(this.modifyData.campaign_start_time_str), 'days') > 180;\n    },\n    isDuplicate() {\n      return this.create_mode === 3;\n    },\n    isCreate() {\n      return this.create_mode === 0;\n    },\n    showWeekly() {\n      return moment(this.form.campaign_end_time_str).diff(moment(this.form.campaign_start_time_str), 'seconds') <= 7 * 24 * 60 * 60;\n    },\n    showMonthly() {\n      return moment(this.form.campaign_end_time_str).diff(moment(this.form.campaign_start_time_str), 'seconds') <= 28 * 24 * 60 * 60;\n    },\n    // 周期时间列表\n    recurringList() {\n      const { campaign_start_time_str, campaign_end_time_str, recurring_frequency, recurring_end_time_str, campaign_name} = this.form;\n      if (recurring_frequency === 1 || !campaign_start_time_str || !campaign_end_time_str || !recurring_end_time_str) {\n        return [];\n      }\n      if (this.form.recurring_frequency === 2) { // weekly\n        const ret = [];\n        // 获取可以有几个周期\n        const frequency = moment(recurring_end_time_str).diff(moment(campaign_end_time_str), 'weeks');\n        for (let i = 1; i <= frequency; i++) {\n          const startTimeStr = moment(campaign_start_time_str).format('HH:mm:ss');\n          const endTimeStr = moment(campaign_end_time_str).format('HH:mm:ss');\n          const start_time = `${moment(campaign_start_time_str).add(i, 'weeks').format('YYYY-MM-DD')} ${startTimeStr}`;\n          const end_time = `${moment(campaign_end_time_str).add(7 * i, 'days').format('YYYY-MM-DD')} ${endTimeStr}`;\n          ret.push({campaign_start_time_str: start_time, campaign_end_time_str: end_time, campaign_name: `${campaign_name} - ${i}`});\n        }\n        return ret;\n      }\n      if (this.form.recurring_frequency === 3) { // monthly\n        // 周期数\n        const frequency = moment(recurring_end_time_str).diff(moment(campaign_end_time_str), 'months');\n        // 开始时间所在月\n        const startMonth = moment(campaign_start_time_str).get('month');\n        // 结束时间所在月\n        const endMonth = moment(campaign_end_time_str).get('month');\n        // 是否跨月\n        const isCrossMonth = startMonth !== endMonth;\n        // 活动间隔时间\n        const diffDiscountDays = moment(campaign_end_time_str).diff(moment(campaign_start_time_str), 'days');\n\n        if (!frequency) return [];\n        if (!isCrossMonth) { // 没有跨月\n          // 目标活动月 月末最后一天\n          const endOfDiscountMonths = moment(campaign_end_time_str).endOf('month');\n          // 目标活动月 第一天\n          const startOfDiscountMonths = moment(campaign_start_time_str).startOf('month');\n          // 活动结束时间与月末的时间间隔天数\n          const diffToMonthEndDays = endOfDiscountMonths.diff(moment(campaign_end_time_str), 'days');\n          // 活动开始时间与月初的间隔天数\n          const diffToMonthStartDays = moment(campaign_start_time_str).diff(startOfDiscountMonths, 'days');\n\n          let end_time = '';\n          let start_time = '';\n          const ret = [];\n\n          for (let i = 1; i <= frequency; i++) {\n            // 最后一天\n            const endOfcurrMonths = moment(campaign_start_time_str).add(i, 'months').endOf('month').format('YYYY-MM-DD');\n             // 第一天\n            const startOfcurrMonths = moment(campaign_start_time_str).add(i, 'months').startOf('month').format('YYYY-MM-DD');\n\n            const startTimeStr = moment(campaign_start_time_str).format('HH:mm:ss');\n            const endTimeStr = moment(campaign_end_time_str).format('HH:mm:ss');\n            // 当月活动开始时间\n            const startTime = `${moment(startOfcurrMonths).add(diffToMonthStartDays, 'days').format('YYYY-MM-DD')} ${startTimeStr}`;\n            if (moment(startTime).isValid() && moment(startTime) <= moment(endOfcurrMonths)) {\n              start_time = startTime;\n              // 根据活动间隔天数 获取结束时间\n              const endTime = `${moment(startTime).add(diffDiscountDays, 'days').format('YYYY-MM-DD')} ${endTimeStr}`;\n              // 结束时间合法 并且结束时间小于走后一天 取endTime，不合法取月末最后一天\n              end_time = moment(endTime).isValid() && moment(endTime) <= moment(endOfcurrMonths) ? endTime : `${moment(endOfcurrMonths).format('YYYY-MM-DD')} ${endTimeStr}`;\n            } else { // 开始时间不合法\n              // 根据距离月末最后一天的间隔 获取结束时间\n              end_time = `${moment(endOfcurrMonths).subtract(diffToMonthEndDays, 'days').format('YYYY-MM-DD')} ${endTimeStr}`;\n              // 根据活动间隔获取活动开始时间\n              start_time = `${moment(end_time).subtract(diffDiscountDays, 'days').format('YYYY-MM-DD')} ${startTimeStr}`;\n              // 如果开始时间不合法 或者开始时间是小于第一天 取第一天为开始时间\n              if (!moment(start_time).isValid() || moment(start_time) < moment(startOfcurrMonths)) {\n                start_time = `${moment(startOfcurrMonths).format('YYYY-MM-DD')} ${startTimeStr}`;\n              }\n            }\n            ret.push({campaign_start_time_str: start_time, campaign_end_time_str: end_time, campaign_name: `${campaign_name} - ${i}`});\n          }\n          return ret;\n        } else { // 跨月\n          // 目标活动月 前面一个月的 月末最后一天\n          const endOfDiscountMonths = moment(campaign_start_time_str).endOf('month');\n          // 活动开始时间 与 月末 的时间间隔\n          const diffToMonthEndDays = moment(endOfDiscountMonths).diff(moment(campaign_start_time_str), 'days');\n          const ret = [];\n          for (let i = 1; i <= frequency; i++) {\n            // 周期月 月末最后一天\n            const endOfcurrMonths = moment(campaign_start_time_str).add(i, 'months').endOf('month');\n            // 结束时间直接新增几个月之后的时间\n            const end_time = moment(campaign_end_time_str).add(i, 'months').format('YYYY-MM-DD 23:59:00');\n            // 开始时间 距离 月末时间 为diffToMonthEndDays\n            const start_time = moment(endOfcurrMonths).subtract(diffToMonthEndDays, 'days').format('YYYY-MM-DD 00:00:00');\n            ret.push({campaign_start_time_str: start_time, campaign_end_time_str: end_time, campaign_name: `${campaign_name} - ${i}`});\n          }\n          return ret;\n        }\n      }\n      return [];\n    },\n    timeZoneDesc() {\n      return `${TimeZoneByCountry[this.region]}00`;\n    }\n  },\n  methods: {\n    rowClassName({row}) {\n      if (row.isOver) {\n        return 'row-grey';\n      }\n    },\n    onChangeFrequency(value) {\n      if (value === 1) {\n        this.form.recurring_list = [];\n      }\n    },\n    getFrequencyText(value) {\n      return (sellerDiscountFrequencyList.find(item => item.value === value) || {}).label;\n    },\n    onDateChange() {\n      this.form.campaign_time = [this.form.campaign_start_time_str, this.form.campaign_end_time_str];\n    },\n    handleSelectShopName(shop_id) {\n      const selectedShop = this.shopList.find(item => item.value === shop_id);\n      if (selectedShop) {\n        this.shopName = selectedShop.label;\n      }\n    },\n    async getShopList(query = '') {\n      try {\n        const opt = {\n          count: 200,\n          page_no: 1,\n          country: this.region,\n          shop_name: query\n        };\n        const res = await getShopList(opt);\n        commonFetchAction(res, (data) => {\n          this.shopList = data.shops.map(item => ({ label: item.shop_name, value: item.shop_id }));\n        });\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    // 获取周期性活动 所有的周期列表\n    async getRecurringList(id) {\n      try {\n        const res = await getRecurringList({id});\n        commonFetchAction(res, (data) => {\n          const {recurring_frequency, recurring_end_time_str, recurring_list} = data;\n          const recurringList = recurring_list.map(item => {\n            return {\n              ...item,\n              isOver: moment().isAfter(item.campaign_end_time_str)\n            };\n          });\n          this.form = {\n            ...this.form,\n            recurring_frequency,\n            recurring_end_time_str,\n            recurring_list: recurringList\n          };\n        });\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    onModify() {\n      this.$emit('modify');\n    },\n    onCloseDialog() {\n      this.$emit('close');\n    },\n    onClickSubmit() {\n      this.$refs.DialogFrom.validate(isValid => {\n        if (isValid && !this.loadingConfirm) {\n          this.onSubmit();\n        }\n      });\n    },\n    getChangeLog() {\n      const catchData = this.modifyData;\n      const { form } = this;\n      const result = [];\n      if (catchData.campaign_name !== form.campaign_name) {\n        result.push({ field: 'Campaign Name', before: catchData.campaign_name, after: form.campaign_name });\n      }\n      if (catchData.shop_id !== form.shop_id) {\n        result.push({ field: 'Applicable Shop', before: `${catchData.shop_name}(${catchData.shop_id})`, after: `${this.shopName}(${form.shop_id})` });\n      }\n      if (catchData.campaign_start_time_str !== form.campaign_start_time_str) {\n        result.push({ field: 'Campaign Start Time', before: catchData.campaign_start_time_str.substring(0, catchData.campaign_start_time_str.length - 3), after: form.campaign_start_time_str.substring(0, form.campaign_start_time_str.length - 3) });\n      }\n      if (catchData.campaign_end_time_str !== form.campaign_end_time_str) {\n        result.push({ field: 'Campaign End Time', before: catchData.campaign_end_time_str.substring(0, catchData.campaign_end_time_str.length - 3), after: form.campaign_end_time_str.substring(0, form.campaign_end_time_str.length - 3) });\n      }\n\n      return result;\n    },\n    isDifferentData() {\n      let isDiff = false;\n      if (this.form.campaign_name !== this.modifyData.campaign_name ||\n        this.shopName !== this.modifyData.shop_name ||\n        this.form.shop_id !== this.modifyData.shop_id ||\n        this.form.campaign_start_time_str !== this.modifyData.campaign_start_time_str ||\n        this.form.campaign_end_time_str !== this.modifyData.campaign_end_time_str\n      ) {\n        isDiff = true;\n      }\n      return isDiff;\n    },\n    async onSubmit() {\n      if (this.create_mode === 0 || (this.create_mode === 1 && this.isDifferentData()) || this.isDuplicate) {\n        try {\n          this.loadingConfirm = true;\n\n          const params = {\n            region: this.region,\n            campaign_name: this.form.campaign_name,\n            shop_id: this.form.shop_id,\n            shop_name: this.shopName,\n            campaign_start_time_str: this.form.campaign_start_time_str,\n            campaign_end_time_str: this.form.campaign_end_time_str,\n            recurring_frequency: this.form.recurring_frequency\n          };\n          if (this.isCreate && this.form.recurring_frequency !== DefaultRecurringFrequency) { // 创建活动\n            params.recurring_end_time_str = this.form.recurring_end_time_str;\n            params.recurring_list = this.form.recurring_list;\n          }\n          if (this.isDuplicate) { // 复制活动\n            params.recurring_frequency = DefaultRecurringFrequency;\n          }\n          let requestFun = () => {};\n          if (this.create_mode === 0 || this.isDuplicate) { // 0-create 1-modify  3-duplicate\n            requestFun = createSellerDiscount;\n          } else {\n            requestFun = updateSellerDiscount;\n            params.id = this.modifyData.id;\n            params.change_log = JSON.stringify(this.getChangeLog());\n          }\n          const res = await requestFun(formatParams(params));\n          commonFetchAction(res, (data) => {\n            this.$message({ type: 'success', message: this.create_mode === 0 ? 'Create Successfully!' : 'Submit Sucessfully!' });\n            this.onCloseDialog();\n            if (this.isDuplicate) {\n              const campaignId = data.campaign_id_list.length ? data.campaign_id_list[0] : 0;\n              this.$store.commit('setDuplicateId', this.modifyData.id);\n              this.$router.push(`/admin/marketingCenter/nominateProducts/create/${campaignId}`);\n            }\n            this.$emit('refresh');\n          });\n        } catch (e) {\n          this.$message({ type: 'error', message: '333' + e });\n        } finally {\n          this.loadingConfirm = false;\n        }\n      } else {\n        this.$message({ type: 'info', message: this.$t('noChangeTip') });\n      }\n    }\n  },\n  watch: {\n    visible(isShow) {\n      if ([1, 2, 3].includes(this.create_mode)) {\n        this.form.campaign_name = this.modifyData.campaign_name;\n        this.form.campaign_time = [this.modifyData.campaign_start_time_str, this.modifyData.campaign_end_time_str];\n        this.form.campaign_start_time_str = this.modifyData.campaign_start_time_str;\n        this.form.campaign_end_time_str = this.modifyData.campaign_end_time_str;\n        this.shopName = this.modifyData.shop_name;\n        this.form.shop_id = this.modifyData.shop_id;\n        this.form.recurring_frequency = this.modifyData.recurring_frequency;\n        this.form.recurring_end_time_str = this.modifyData.recurring_end_time_str;\n        if (this.shopName) {\n          this.getShopList(this.shopName);\n        }\n        if (this.modifyData.is_recurring && this.modifyData.id) {\n          this.getRecurringList(this.modifyData.id);\n        }\n      } else {\n        this.form.campaign_name = '';\n        this.form.campaign_time = [];\n        this.form.shop_id = '';\n        this.shopName = '';\n        this.form.campaign_start_time_str = '';\n        this.form.campaign_end_time_str = '';\n        this.form.recurring_frequency = 1;\n        this.form.recurring_end_time_str = '';\n        this.form.recurring_list = [];\n      }\n      this.$nextTick(() => {\n        this.$refs.DialogFrom && typeof this.$refs.DialogFrom.clearValidate === 'function' && this.$refs.DialogFrom.clearValidate();\n      });\n      this.dialogVisible = isShow;\n    },\n    recurringList(nv) {\n      if (this.isCreate) {\n        this.form.recurring_list = nv;\n      }\n    }\n  }\n};\n</script>\n<style lang=\"scss\">\n.promotion-creator{\n  .campaign-name-input {\n    width: 530px;\n  }\n  .user-footer-btn{\n    margin-top: 40px;\n    display: flex;\n    justify-content: flex-end;\n  }\n  .cancel-btn{\n    color: #333333;\n    border: 1px solid #D9D9D9;\n    background-color: #fff;\n  }\n  .seller-discount-input{\n    width: 260px;\n    &.discount-name {\n      width: 530px;\n    }\n    .el-input__inner{\n      background: #FFFFFF;\n      border: 1px solid #E5E5E5;\n      border-radius: 4px;\n    }\n  }\n  .el-form-item {\n   &.is-error {\n     .seller-discount-input{\n        width: 260px;\n        &.discount-name {\n          width: 530px;\n        }\n        .el-input__inner{\n          border: 1px solid #F56C6C;\n        }\n      }\n   }\n  }\n  .row-grey{\n    color: #333333;\n    opacity: 0.5;\n  }\n  .el-radio {\n    &.is-checked {\n      .el-radio__inner, .el-radio__label {\n        border-color: #3d61d1;\n        color: #3d61d1;\n      }\n    }\n  }\n  .time-zone {\n    font-family: Helvetica;\n    font-size: 12px;\n    line-height: 21px;\n    color: #999999;\n  }\n  .total-text {\n    position: absolute;\n    margin-left: -70px;\n    margin-top: 20px;\n    opacity: 0.6;\n    font-family: PingFangSC-Semibold;\n    font-size: 12px;\n    color: rgba(51,51,51,0.80);\n  }\n}\n\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/marketingCenter/historyDialog/promotion.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/marketingCenter/historyDialog/sellerDiscount.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/marketingCenter/pageHeader/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/marketingCenter/promotionList/index.vue","messages":[{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":92,"column":7,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":92,"endColumn":8,"fix":{"range":[3962,3963],"text":""}},{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":133,"column":10,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":133,"endColumn":11,"fix":{"range":[4679,4680],"text":""}},{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":136,"column":10,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":136,"endColumn":11,"fix":{"range":[4700,4701],"text":""}}],"errorCount":3,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"<template>\n  <div class='pms-ui marketing-promotion-table'>\n    <el-table :data=\"list\" border v-loading=\"loading\" @row-click=\"rowClick\">\n      <el-table-column\n      v-for=\"item in schema\"\n      :label=\"$t(item.label)\"\n      :key=\"item.label\"\n      :prop=\"item.field\"\n      :width=\"item.width || ''\"\n      :fixed=\"item.props && (item.props.fixed || false)\"\n      :class-name=\"item.props && (item.props.class || '')\"\n      :align=\"item.props && (item.props.align || '')\"\n      >\n        <template slot-scope=\"scope\">\n          <pms-table-cell :renderData=\"getTableCellRender(item, scope.row, scope.$index)\"></pms-table-cell>\n        </template>\n      </el-table-column>\n      <el-table-column align=\"left\" :label=\"$t('userRole.userList.action')\" width=\"170px\" column-key=\"action\">\n        <template slot-scope=\"scope\">\n          <el-button type=\"primary\" class=\"list-btn text-blue-btn\" @click=\"onHistoryDialog(scope.row)\">{{$t('commonHistory')}}</el-button>\n          <el-popover\n            placement=\"bottom\"\n            popper-class=\"promotion-table-inner-more-style\"\n            width=\"130px\"\n            v-model=\"scope.row.isShowMoreVisible\"\n            v-if=\"canOperate && (scope.row.can_cancel || canDuplicate(scope.row))\"\n            >\n            <div style=\"text-align: center; margin: 0\">\n              <button class=\"list-btn dup-btn\" v-if=\"canDuplicate(scope.row)\" @click=\"onDuplicate(scope.row)\">{{$t('sellerDiscountActionMoreDuplicate')}}</button>\n              <button class=\"list-btn cancel-btn\" v-if=\"scope.row.can_cancel\" @click=\"onCancel(scope.row)\">{{$t('sellerDiscountActionMoreCancel')}}</button>\n            </div>\n            <el-button slot=\"reference\" class=\"list-btn text-blue-btn btn-middle-line\">{{$t('sellerDiscountActionMore')}}</el-button>\n          </el-popover>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('marketingCenter.nominate')\" width=\"120px\" column-key=\"nomination\" v-if=\"canNominate\">\n        <template slot-scope=\"scope\">\n          <el-popover\n            placement=\"top-start\"\n            width=\"200\"\n            v-if=\"isNeedConfigFlow && canShowNomination(scope.row)\"\n            trigger=\"hover\"\n            :disabled=\"hasConfigFlow\"\n            :content=\"$t('PriceChangeNominatePopOver')\">\n            <span slot=\"reference\">\n              <el-button\n              :disabled=\"!hasConfigFlow\"\n              class=\"list-btn success-btn\"\n              @click=\"onNomination(scope.row)\">{{$t('marketingCenter.nominate')}}</el-button>\n            </span>\n            </el-popover>\n          <el-button class=\"list-btn success-btn\" v-if=\"!isNeedConfigFlow && canShowNomination(scope.row)\" @click=\"onNomination(scope.row)\">{{$t('marketingCenter.nominate')}}</el-button>\n        </template>\n      </el-table-column>\n      <el-table-column v-if=\"canViewNomiation\" column-key=\"viewNomination\">\n        <template slot-scope=\"scope\" >\n            <el-button class=\"list-btn text-blue-btn\" v-if=\"scope.row.has_nomination\" @click=\"onViewNomination(scope.row)\">{{$t('marketingCenter.viewNomination')}}</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n  </div>\n</template>\n\n<script>\nimport { checkHasConfigFlow } from '@/api/nominate';\nconst PMSTableCell = {\n  props: {\n    renderData: {\n      required: true\n    }\n  },\n  render(h) {\n    const { schema, row, index } = this.$props.renderData;\n    if (typeof schema.render === 'function') {\n      const data = schema.render(schema, row, index, h);\n      const renderElement = Array.isArray(data) ? data : ['span', data];\n      return h(...renderElement);\n    } else if (schema.type === 'enum') {\n      const options = schema.options || [];\n      const option =\n        options.find((item) => item.value === row[schema.field]) || {};\n      return h('span', option.label || '');\n    } else {\n      return h('span', row[schema.field]);\n    }\n  }\n};\nexport default {\n  components: {\n    'pms-table-cell': PMSTableCell\n  },\n  data () {\n    return {\n      canNomiation: true,\n      canViewNomiation: true,\n      loading: false,\n      hasConfigFlow: false\n      // showAddSku: true,\n      // skuLoading: false\n    };\n  },\n  props: {\n    list: {\n      required: true,\n      type: Array\n    },\n    schema: {\n      required: true,\n      type: Array\n    },\n    hasDuplicate: { // 是否复制功能\n      required: false,\n      type: Boolean,\n      default: false\n    },\n    canOperate: {\n      required: true,\n      type: Boolean,\n      default: false\n    },\n    canNominate: {\n      required: true,\n      type: Boolean,\n      default: false\n    },\n    isNeedConfigFlow: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {},\n  watch: {},\n  created () {\n\n  },\n  mounted () {\n\n  },\n  methods: {\n    rowClick(row, column, event) {\n      this.$emit('rowClick', {row, column, event});\n    },\n    onHistoryDialog(row) {\n      this.$emit('log', row);\n    },\n    onDuplicate(row) {\n      this.$emit('duplicate', row);\n    },\n    onCancel(row) {\n      this.$emit('cancel', row);\n    },\n    onNomination(row) {\n      this.$emit('nominate', row);\n    },\n    onViewNomination(row) {\n      this.$emit('viewNomination', row);\n    },\n    getTableCellRender(schema, row, index) {\n      return { schema, row, index };\n    },\n    canShowNomination(row) {\n      if (row.campaign_status === 2) {\n        return false;\n      }\n      return row.can_nominate;\n    },\n    checkHasConfigFlow(region) {\n      checkHasConfigFlow({region}).then(res => {\n        if (res.retcode === 0) {\n          this.hasConfigFlow = res.data.has_approval_flow_config;\n        } else {\n          this.$message.error(res.info);\n        }\n      });\n    },\n    canDuplicate(row) {\n      return this.hasDuplicate;\n    }\n\n  }\n};\n</script>\n\n<style lang='scss' scoped>\n    .list-btn{\n      font-size: 14px;\n      width: auto;\n      min-width: 70px;\n      padding-left: 10px;\n      padding-right: 10px;\n    }\n    .text-blue-btn {\n      margin:0;\n      background: none;\n      border: none;\n      color:rgb(70,112,202);\n      padding: 0;\n    }\n    .btn-middle-line{\n      border-left:1px solid #BBB;\n      border-radius:0;\n    }\n    .success-btn{\n      border: 1px solid rgb(70,112,202);\n      background:none;\n      color: rgb(70,112,202);\n    }\n</style>\n<style lang='scss'>\n.promotion-table-inner-more-style{\n  width: 110px;\n  padding: 0;\n  min-width: 100px !important;\n.cancel-btn,.dup-btn{\n      display: block;\n      color: red;\n      background: none;\n      border:none;\n      margin: 10px;\n      cursor: pointer;\n    }\n    .dup-btn{\n      color: rgb(70,112,202);\n    }\n}\n.marketing-promotion-table{\n  .time-zone-in-table {\n    color: #999;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/marketingCenter/searchForm/Index.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":2,"column":53,"nodeType":"VIdentifier","messageId":"deprecated","endLine":2,"endColumn":59}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-form class=\"price-change-search-form\" @submit.native.prevent=\"onSearch\">\n    <el-row class=\"price-change-search\">\n      <el-col :offset=\"schema.offset || 0\" :span=\"schema.width || 5\" v-for=\"schema in visibleSearchSchema\" :key=\"Array.isArray(schema.field) ? schema.field[0] : schema.field\" :class=\"{'long-col': longColType.includes(schema.type)}\">\n        <el-form-item :label=\"schema.label\">\n          <pms-form-item @input=\"modifyForm\" :renderData=\"{ schema, form }\"></pms-form-item>\n        </el-form-item>\n      </el-col>\n    </el-row>\n    <el-form-item :class=\"{'search-action-box': true, 'one-row': searchButtonPosition}\">\n      <span v-if=\"isShowMoreBtn && showMore === false\" class=\"more-btn\" @click=\"toggleShowMore(true)\"\n        >{{ $t('commonMore') }}<i class=\"el-icon-arrow-down\"></i\n      ></span>\n      <span v-if=\"isShowMoreBtn && showMore === true\" class=\"more-btn\" @click=\"toggleShowMore(false)\"\n        >{{ $t('commonLess') }}<i class=\"el-icon-arrow-up\"></i\n      ></span>\n      <div class=\"list-btn light-btn clear-btn\" @click=\"onReset\">\n        {{ $t('purchaseRequest.clear') }}\n      </div>\n      <div class=\"list-btn\" @click=\"onSearch\">\n        {{ $t('purchaseRequest.search') }}\n      </div>\n    </el-form-item>\n\n  </el-form>\n</template>\n\n<script>\nimport PMSFormItem, { getSelectOptions } from '@/components/BaseItem/formItem';\nimport moment from 'moment';\nimport { getSupplierList } from '@/api/supplier';\nimport { getCategories } from '@/api/shop';\nimport { getShopList } from '@/api/shopConfig';\nimport { categoryTreeData, getCategoryTreeMap } from '@/utils/treeData';\nimport { commonFetchAction } from '@/utils';\n\nexport default {\n  data() {\n    return {\n      categoryProps: {\n        label: 'category_name',\n        value: 'category_id',\n        checkStrictly: true,\n        expandTrigger: 'hover'\n      },\n      categoryOptions: [],\n      longColType: ['datetimerange', 'daterange', 'inputrange'],\n      showMore: false,\n      shopList: []\n    };\n  },\n  props: {\n    moduleName: {\n      type: String\n    },\n    form: {\n      type: Object,\n      required: true\n    },\n    region: String,\n    // 首次显示的筛选项数量\n    firstShowCount: {\n      type: Number,\n      default: 100\n    },\n    // serach field\n    searchSchemaFields: {\n      type: Array,\n      default: () => []\n    }\n  },\n  watch: {\n\n  },\n  components: {\n    'pms-form-item': PMSFormItem\n  },\n  computed: {\n    schemaList() {\n      return [\n        { type: 'select', width: 5, label: this.$t('commonRegion'), field: 'region', on: { change: this.onSearch },\n          defaultValue: this.$store.getters.country, getChildren: h => getSelectOptions(this.countryList.map(item => ({ value: item, label: item })), h)\n        },\n        { type: 'input', width: 5, label: this.$t('commonShopID'), field: 'shop_id', props: { placeholder: 'please Input' } },\n        {\n          type: 'select', width: 5, label: this.$t('commonShopName'), field: 'shop_name', getChildren: h => getSelectOptions(this.shopList, h),\n          props: {\n            'remote-method': this.getShopList, filterable: true, clearable: true,\n            remote: true, loading: this.shopLoading, placeholder: 'please Input'\n          },\n          on: { change: this.handleSelectShopIdByName }\n        },\n        { type: 'input', width: 5, label: this.moduleName === 'sellerDiscount' ? this.$t('discountName') : this.$t('commonCampaignName'), field: 'campaign_name',\n        props: { placeholder: 'please select' } },\n        { type: 'input', width: 5, label: this.$t('commonLabelCreator'), field: 'creator', props: { placeholder: 'please select' } },\n        { type: 'select', width: 5, label: this.$t('commonStatus'), field: 'campaign_status', on: { change: this.onSearch },\n          options: [\n            { label: this.$t('CampaignStatusAll'), value: '' },\n            { label: this.$t('campaignStatusNormal'), value: 1 },\n            { label: this.$t('campaignStatusCancelled'), value: 2 }\n          ]\n        },\n        { type: 'datetimerange', width: 10, label: this.moduleName === 'sellerDiscount' ? this.$t('sellerDiscountTime') : this.$t('promotionCampaignTime'), field: 'campaign_time',\n          render: (schema, row, h) => ['el-date-picker', { class: schema.class || '',\n            on: {\n              input: (value) => { this.modifyForm(schema, value); }\n            },\n            props: {\n              value: this.form[schema.field],\n              type: 'datetimerange',\n              editable: false,\n              'start-placeholder': 'Begin',\n              'end-placeholder': 'End',\n              'prefix-icon': 'el-icon-date',\n              format: 'yyyy-MM-dd HH:mm:ss',\n              'value-format': 'yyyy-MM-dd HH:mm:ss',\n              class: 'ele-input-width-style',\n              'default-time': ['00:00:00', '23:59:59']\n            }\n          }]\n        },\n        {\n          type: 'autocomplete', width: 5, label: this.$t('commonVendorSiteIDOrName'), field: 'supplier_id',\n          render: (schema, row, h) => ['el-autocomplete', { class: schema.class || '',\n            on: {\n              blur: this.onSupplierBlur,\n              select: this.onSupplierSelect\n            },\n            props: {\n              value: this.form[schema.field],\n              placeholder: 'Please Input',\n              'trigger-on-focus': false,\n              'value-key': 'value',\n              'fetch-suggestions': (value, callback) => this.getSuppliers(value, callback)\n            }\n          }]\n        }\n      ].filter(item => this.searchSchemaFields.includes(item.field));\n    },\n\n    searchButtonPosition() {\n      const totalWidth = this.schemaList.reduce((total, item) => {\n        return total + item.width;\n      }, 0);\n      return totalWidth % 20 !== 0;\n    },\n\n    countryList() {\n      return [...new Set([...this.$store.getters.countryList.map(item => item.country)])];\n    },\n    visibleSearchSchema() {\n      const schema = this.schemaList || [];\n      return schema.filter((item, index) => (this.showMore || index < this.firstShowCount));\n    },\n    // more less 切换\n    isShowMoreBtn() {\n      return this.firstShowCount && this.firstShowCount < this.schemaList.length;\n    }\n  },\n  methods: {\n    toggleShowMore(val) {\n      this.showMore = val;\n    },\n    modifyInputRange(field, value) {\n      this.$emit('modify', field, value);\n    },\n    modifyForm(schema, value) {\n      this.$emit('modify', schema.field, value);\n    },\n    getCategoryOptions(region) {\n      getCategories({ country: region }).then(({ data: { categories }}) => {\n        const arr = categories || [];\n        this.categoryTreeMap = getCategoryTreeMap(arr);\n        const res = categoryTreeData(arr, {\n          key: 'category_id'\n        });\n        this.categoryOptions = res;\n      }).catch(() => {});\n    },\n    onSearch() {\n      this.$emit('search');\n    },\n    onReset() {\n      this.schemaList.forEach(schema => {\n        if (Array.isArray(schema.field)) {\n          schema.field.forEach((field) => {\n            this.$emit('modify', field, undefined);\n          });\n        } else {\n          this.$emit('modify', schema.field, schema.defaultValue === null ? undefined : schema.defaultValue || '');\n        }\n      });\n      this.onSearch();\n    },\n    async getShopList(query = '') {\n      try {\n        const opt = {\n          count: 200,\n          page_no: 1,\n          country: this.form.region,\n          shop_name: query\n        };\n        const res = await getShopList(opt);\n        commonFetchAction(res, (data) => {\n          this.shopList = data.shops.map(item => ({ label: item.shop_name, value: item.shop_id }));\n        });\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    handleSelectShopIdByName(shop_id) {\n      this.$emit('modify', 'shop_id', shop_id);\n    },\n    getSuppliers(value, callback) {\n      const params = { pageno: 1, count: 20, key: `${value}`.trim(), approval_country: this.countryList.join('_') };\n      getSupplierList(params).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          const { list = [] } = resp.data || {};\n          if (Array.isArray(list) && list.length) {\n            return callback(list.map(item => ({ ...item, value: `${item.supplier_id} ${item.name}` })));\n          } else {\n            this.$message.error('This Supplier ID is not exist');\n          }\n        }\n        callback([]);\n      }).catch(() => {\n        this.$message.error('Get Supplier Failed');\n        callback([]);\n      });\n    },\n    onSupplierBlur() {\n      if (this.form.cacheSupplier !== this.form.supplier_id) {\n        this.$emit('modify', 'cacheSupplier', '');\n        this.$emit('modify', 'supplier_id', '');\n      }\n    },\n    onSupplierSelect(item) {\n      this.$emit('modify', 'cacheSupplier', item.supplier_id);\n      this.$emit('modify', 'supplier_id', item.supplier_id);\n    },\n    getPickerOptions(schema, form) {\n      return {\n        disabledDate(time) {\n          if (schema.startField) {\n            return time <= moment(form[schema.startField] || 0, 'YYYY-MM-DD HH:mm:ss');\n          }\n        }\n      };\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  .search-form {\n    margin-top: 20px;\n    .el-date-editor, .el-input-number {\n      width: 100%;\n      text-align: left;\n    }\n    .compared-date-picker {\n      max-width: calc(166.67% - 160px + 53.33px); // basic span-6, compared span-4\n    }\n    .el-autocomplete {\n      width: 100%;\n    }\n    .el-col {\n      height: 48px;\n      line-height: 48px;\n    }\n    .right-action-btn {\n      float: right;\n      .mass-btn {\n        width: 120px;\n        background-color: #50962B;\n      }\n      .mass-reject-btn {\n        color: #fff;\n        background-color: #f56c6c;\n        margin: 0;\n      }\n      .hidden-btn {\n        visibility: hidden;\n      }\n    }\n  }\n  .price-change-search-form {\n    .list-btn{\n      width: auto;\n      min-width: 70px;\n      padding: 0 8px;\n    }\n    .hidden-btn {\n      visibility: hidden;\n    }\n    .search-action-box {\n      text-align: right;\n      margin-bottom: 16px;\n      .more-btn {\n        cursor: pointer;\n        color: #3d6ed1;\n        margin-right: 12px;\n      }\n    }\n    .one-row{\n      margin-top: -46px;\n    }\n    .option-box {\n      display: flex;\n      border-top: rgb(241, 241, 241) solid 2px;\n      padding: 16px 0;\n      .option-box-left {\n        text-align: left;\n        flex: 1;\n      }\n      .option-box-right {\n        text-align: right;\n        flex: 1;\n      }\n      .el-button--medium {\n        padding: 0;\n      }\n      .el-form-item {\n        margin: 0;\n      }\n    }\n  }\n</style>\n\n<style lang=\"scss\">\n  .price-change-search {\n    .el-input-number .el-input__inner {\n      text-align: left;\n    }\n  }\n  .price-change-search-form {\n    .el-form-item--medium .el-form-item__content {\n      display: inline-block;\n    }\n    .el-low {\n      display: flex;\n    }\n\n    .el-col {\n      float: none;\n      display: inline-block;\n      width: calc(25% - 12px);\n      vertical-align: middle;\n      margin: 0 12px 16px 0;\n\n      .el-form-item {\n        display: flex;\n        border: 1px solid #e2e6ec;\n        border-radius: 4px;\n        box-sizing: content-box;\n        height: 30px;\n        line-height: 30px;\n        margin: 0px;\n      }\n    }\n\n    .long-col {\n      width: calc(50% - 12px);\n      .el-form-item__label {\n        max-width: 236px;\n      }\n    }\n\n    .el-form-item__label {\n      max-width: 224px;\n      background-color: #fafbfd;\n      white-space: nowrap;\n      text-overflow: ellipsis;\n      overflow: hidden;\n      padding: 0 8px;\n      border-radius: 4px 0 0 4px;\n      border-right: 1px solid #e2e6ec;\n    }\n    .el-form-item__content {\n      flex: 1;\n      .el-cascader, .el-input__inner {\n        width: 100%;\n      }\n      .input-range-wrapper{\n        display: flex;\n        .el-input-number{\n          flex: 1;\n        }\n        .range-separator{\n          margin: 0 10px;\n        }\n      }\n      .el-input-number--medium, .el-cascader--medium{\n        line-height: 30px;\n      }\n      .el-autocomplete {\n        width: 100%;\n      }\n    }\n    .el-autocomplete {\n      width: 100%;\n    }\n    .ele-input-width-style{\n      width: 100% !important;\n    }\n    .el-input__inner,\n    .el-range-input {\n      border: 0;\n      background-color: transparent;\n      height: auto;\n      padding: 0 0 0 8px;\n      vertical-align: initial;\n      text-align: left;\n      margin: 0;\n      line-height: 30px;\n      &:hover {\n        border: 0;\n        background-color: #faf1e0;\n      }\n    }\n    .el-form-item--medium .el-form-item__content,\n    .el-form-item--medium .el-form-item__label {\n      line-height: 30px;\n      color: #333;\n    }\n    .el-input.is-disabled .el-input__inner {\n      background-color: #fafbfd;\n    }\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/photoPreview/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/productCategory/comboSelect.vue","messages":[{"ruleId":"import/no-unresolved","severity":2,"message":"Unable to resolve path to module 'vue-select'.","line":77,"column":21,"nodeType":"Literal","endLine":77,"endColumn":33},{"ruleId":"vue/require-valid-default-prop","severity":2,"message":"Type of the default value for 'options' prop must be a function.","line":106,"column":16,"nodeType":"ArrayExpression","endLine":106,"endColumn":18}],"errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-select\n    class=\"pms-element-ui combo-select\"\n    popper-class=\"pms-element-ui\"\n    v-model=\"formItem.value\"\n    filterable\n    :clearable=\"clearable\"\n    :multiple=\"multiple\"\n    :multiple-limit=\"5\"\n    :placeholder=\"$t('pleaseChoose')\"\n    :no-data-text=\"$t('commonNoData')\"\n    :no-match-text=\"$t('commonNoData')\"\n    @change=\"handleSelectChange\"\n    @visible-change=\"handleVisibleChange\"\n  >\n    <el-option\n      v-for='option in formattedOptions'\n      :key='option.id'\n      :label='option.value'\n      :value='option.id'\n    />\n    <div v-if=\"addedOptions.length\" class=\"self-fill-options\">\n      <div class=\"self-fill-title\">{{$t('SelfFillOptions')}}</div>\n      <el-option\n        v-for='option in addedOptions'\n        :key='option.id'\n        :label='option.value'\n        :value='option.id'\n      />\n    </div>\n    <el-option v-if=\"canAddOption\" value=\"add\" class=\"add-item-option\" disabled >\n      <el-button v-if=\"!isAdding\" @click=\"handleAddItem\" type=\"text\" icon=\"el-icon-plus\">\n        {{$t('addNewItem')}}\n      </el-button>\n      <div v-else class=\"add-item-content\">\n         <template v-if=\"!isDateType\">\n          <el-input v-model.trim=\"addInput\" size=\"mini\" />\n          <VSelect\n            v-if=\"isShowUnits\"\n            class=\"v-select\"\n            v-model=\"addSelect\"\n            :options=\"addUnits\"\n            :appendToBody=\"true\"\n            :clearable=\"false\"\n            :searchable=\"false\"\n          />\n        </template>\n        <el-date-picker\n          v-else\n          v-model=\"addInput\"\n          :type=\"getTimePickerType(formItem)\"\n          value-format=\"timestamp\"\n          @focus=\"onPickerFocus\"\n          popper-class=\"date-picker-popper\"\n          :popper-options=\"{boundariesElement: 'scrollParent'}\"\n        />\n        <el-button\n          class=\"add-confirm-button pms-element-ui\"\n          icon=\"el-icon-check\"\n          size=\"mini\"\n          :disabled=\"!canConfirmAdd\"\n          @click=\"handleAddItemConfirm\"\n        />\n        <el-button\n          class=\"add-confirm-button pms-element-ui\"\n          icon=\"el-icon-close\"\n          size=\"mini\"\n          @click=\"handleAddItemCancel\"\n        />\n      </div>\n    </el-option>\n  </el-select>\n</template>\n\n<script>\nimport { isEmpty, isInteger, isNaN, concat, get } from 'lodash';\nimport VSelect from 'vue-select'; // 用el-select会有问题, v-select see: https://vue-select.org/api/props.html\nimport i18n from '@/lang';\nimport {\n  getIsComboValueWithUnit, COMBO_PROPERTY_VALUE_SEPERATOR, formatPropTimeValue, getPropDisplayValue\n} from '@/utils';\n\nconst checkValueType = (value, valueType) => {\n  if (valueType === 'INTEGERS') {\n    const formattedValue = Number(value);\n    if (!isInteger(formattedValue)) {\n      return i18n.t('inputPositiveInteger');\n    }\n  } else if (valueType === 'NUMBER') {\n    const formattedValue = Number(value);\n    if (isNaN(formattedValue)) {\n      return i18n.t('inputNumber');\n    }\n  }\n  return '';\n};\n\nexport default {\n  name: 'ComboSelect',\n  components: { VSelect },\n  props: {\n    formItem: Object,\n    currentRegion: String,\n    options: {\n      type: Array,\n      default: []\n    },\n    multiple: {\n      type: Boolean,\n      default: false\n    },\n    clearable: {\n      type: Boolean,\n      default: false\n    },\n    canAddOption: {\n      type: Boolean,\n      default: false\n    },\n    isShowUnits: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      addInput: '', // 自定义选项的值\n      addSelect: '', // 自定义选项的单位（量词才会有）\n      isAdding: false,\n      addedOptions: [] // 自定义的选项\n    };\n  },\n  methods: {\n    onPickerFocus() {\n      // 阻止datepicker的popper点击冒泡，否则会关闭外层dropdown\n      this.$nextTick(() => {\n        const pop = document.querySelector('.date-picker-popper');\n        pop.onmousedown = e => {\n          e.stopPropagation();\n        };\n      });\n    },\n    formatPropOptionLabel(option) {\n      return getPropDisplayValue(option, this.currentRegion);\n    },\n    handleSelectChange(value) {\n      this.$emit('onSelectChange', this.formItem);\n    },\n    handleAddItem() {\n      this.isAdding = true;\n    },\n    getTimePickerType(prop) {\n      return get(prop, 'ext_info.datetime_format') === 1 ? 'month' : 'date';\n    },\n    handleAddItemConfirm() {\n      const { inputValidator } = this.formItem;\n      const item = this.addInput;\n      const errorMessage = checkValueType(item, inputValidator);\n      if (errorMessage) {\n        this.$message.error(errorMessage);\n        return;\n      }\n\n      let id = item;\n      let value = item;\n      if (this.isShowUnits) { // 如果是量词\n        value = `${item}${this.addSelect.label}`;\n        id = `${item}${COMBO_PROPERTY_VALUE_SEPERATOR}${this.addSelect.label}`;\n      } else if (this.isDateType) { // 如果是日期格式\n        id = item / 1000;\n        value = formatPropTimeValue(this.formItem.ext_info, item / 1000);\n      }\n\n      const existOptions = concat(this.options, this.addedOptions);\n      const existValues = existOptions.map(item => item.value);\n      if (existValues.includes(value)) {\n        this.$message.error(this.$t('optionExists'));\n        return;\n      }\n\n      this.addedOptions.push({ id, value });\n      this.resetAddItem();\n    },\n    handleAddItemCancel() {\n      this.resetAddItem();\n    },\n    handleVisibleChange() {\n      this.resetAddItem();\n    },\n    resetAddItem() {\n      this.addInput = '';\n      this.addSelect = '';\n      this.isAdding = false;\n    }\n  },\n  computed: {\n    isDateType() {\n      return this.formItem.inputValidator === 'TIME_PICKER';\n    },\n    formattedOptions() {\n      return this.options.map(item => {\n        const value = this.isDateType\n          ? formatPropTimeValue(this.formItem.ext_info, item.value)\n          : this.formatPropOptionLabel(item);\n\n        return { ...item, value };\n      });\n    },\n    canConfirmAdd() {\n      if (!this.isShowUnits) {\n        return !!this.addInput;\n      }\n      return !!this.addInput && !isEmpty(this.addSelect);\n    },\n    addUnits() {\n      return (this.formItem.units || []).map(item => ({ label: item, id: item }));\n    }\n  },\n  watch: {\n    formItem: {\n      handler(item) {\n        const { is_quantitative, options } = item;\n        if (!item.value) {\n          return;\n        }\n\n        const values = Array.isArray(item.value) ? item.value : [item.value];\n        for (const value of values) { // 遇到自定义的值，在option中增加该选项\n          if (is_quantitative && getIsComboValueWithUnit(value)) {\n            const fragments = value.split(COMBO_PROPERTY_VALUE_SEPERATOR);\n            this.addedOptions.push({\n              id: value,\n              value: `${fragments[0]}${fragments[1]}`\n            });\n          } else if (this.isDateType) {\n            const optionIds = options.map(item => item.id);\n            if (!optionIds.includes(value)) {\n              this.addedOptions.push({\n                id: value,\n                value: formatPropTimeValue(this.formItem.ext_info, value)\n              });\n            }\n          } else {\n            const optionIds = options.map(item => item.id);\n            if (!optionIds.includes(value)) {\n              this.addedOptions.push({ id: value, value });\n            }\n          }\n        }\n      },\n      immediate: true\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.add-item-option {\n  cursor: default;\n  color: #606266;\n  border-top: 1px solid #e5e5e5;\n  padding-top: 1px;\n\n  .el-input {\n    width: auto;\n  }\n\n  .add-confirm-button {\n    width: 28px;\n    height: 28px;\n    padding: 0;\n    margin-left: 4px;\n  }\n\n  .add-item-content {\n    display: inline-flex;\n    align-items: center;\n\n    .el-input {\n      width: 200px;\n    }\n  }\n}\n\n.self-fill-options {\n  padding-top: 10px;\n  margin-bottom: 5px;\n\n  .self-fill-title {\n    padding-left: 20px;\n    font-size: 14px;\n    color: #999;\n  }\n}\n</style>\n\n<style lang=\"scss\">\n@import \"vue-select/dist/vue-select.css\";\n\n.v-select {\n  margin-left: 5px;\n\n  .vs__dropdown-toggle {\n    height: 28px;\n    width: 100px;\n  }\n\n  .vs__open-indicator {\n    transform: scale(0.6);\n  }\n}\n\n.vs__dropdown-menu {\n  z-index: 10000;\n\n  .vs__dropdown-option {\n    color: #606266;\n    background: transparent;\n    font-size: 14px;\n    padding: 0 20px;\n    height: 34px;\n    line-height: 34px;\n\n    &:hover,\n    &:focus\n    &:active {\n      color: #606266 !important;\n      background-color: #F5F7FA !important;\n    }\n  }\n}\n\n.el-date-editor {\n  .el-input__inner {\n    height: 28px !important;\n  }\n}\n\n.el-input__inner {\n  &:focus {\n    border-color: #EE4D2D !important;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/productCategory/propertyDisplay.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/productCategory/propertyForm.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/productCategory/utils.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/quillEditor/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/sbsVendorIdForm/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/shopNameToId.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/star/editableStar.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/star/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/steps/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/stockAdjustmentList/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/supplier/commonSku.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/supplier/shopInfo.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/supplierSearch/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/tabsHeader/index.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"tabsHeader\" is not PascalCase.","line":30,"column":9,"nodeType":"Literal","endLine":30,"endColumn":21,"fix":{"range":[931,941],"text":"TabsHeader"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <el-header :class=\"['tabs-header', newStyle ? 'new-style': '', 'pms-ele-ui']\">\n    <el-tabs tab-position='bottom' :stretch=\"stretch\" :style='tabStyle' v-model=\"activeTab\" @tab-click=\"handleTabClick\">\n      <el-tab-pane\n        :disabled=\"isTabsDisabled\"\n        v-for='item in tabs'\n        :key='item.name'\n        :label=\"canTranslate ? $t(item.label) : item.label\"\n        :name='item.name'\n      >\n      </el-tab-pane>\n    </el-tabs>\n    <div class='create-btn' v-if='!createHidden && !newStyle' @click='handleCreateClick'>\n      <span class='sprite-entry-add add-btn'></span>\n      {{$t(createBtnText)}}\n    </div>\n    <div v-if=\"newStyle\" class=\"list-right-btns-wrapper\">\n      <div class=\"btn\" @click='handleCreateClick'>\n        <span>\n          <i class=\"el-icon-plus\"></i>\n          {{$t(createBtnText)}}\n        </span>\n      </div>\n    </div>\n  </el-header>\n</template>\n\n<script>\nexport default {\n  name: 'tabsHeader',\n  data() {\n    return {\n      activeTab: ''\n    };\n  },\n  props: {\n    createHidden: {\n      default: false\n    },\n    stretch: {\n      type: Boolean,\n      default: true\n    },\n    tabStyle: {\n      default: () => ({\n        width: '1066px',\n        height: '60px'\n      })\n    },\n    canTranslate: {\n      type: Boolean,\n      default: true\n    },\n    tabs: {\n      required: true,\n      type: Array,\n      default: () => []\n    },\n    createBtnText: {\n      default: 'purchaseRequest.newRequest'\n    },\n    defaultTab: {},\n    newStyle: {\n      type: Boolean,\n      default: false\n    },\n    isTabsDisabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  methods: {\n    handleTabClick(tab) {\n      if (this.activeTab !== tab.name) {\n        this.activeTab = tab.name;\n      }\n      this.$emit('tabChange', tab);\n    },\n    handleCreateClick() {\n      this.$emit('onCreate');\n    }\n  },\n  watch: {\n    '$props.tabs': {\n      handler: function(now, prev) {\n        if (this.$props.defaultTab) {\n          this.activeTab = this.$props.defaultTab;\n        } else {\n          this.activeTab = now[0].name;\n        }\n      },\n      immediate: true\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import '~@/styles/common.scss';\n// .tabs-header {\n//   margin-top: 11px;\n// }\n.new-style{\n  position: relative;\n}\n.add-btn {\n  display: inline-block;\n  margin: 0 5px -10px -20px;\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/trackingHistory/index.vue","messages":[{"ruleId":"import/no-unresolved","severity":2,"message":"Unable to resolve path to module 'ssc-ui-vue-pro'.","line":10,"column":33,"nodeType":"Literal","endLine":10,"endColumn":49},{"ruleId":"import/no-unresolved","severity":2,"message":"Unable to resolve path to module 'ssc-ui-vue-pro/dist/ssc-ui-vue-pro.css'.","line":11,"column":8,"nodeType":"Literal","endLine":11,"endColumn":48},{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":30,"column":7,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":30,"endColumn":8,"fix":{"range":[512,513],"text":""}}],"errorCount":3,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n<div>\n  <tracking-history\n  :list=\"list\"\n  :title=\"title\"\n  :class=\"`pms-tracking-history-style ${className}`\"/>\n</div>\n</template>\n<script>\nimport { TrackingHistory } from 'ssc-ui-vue-pro';\nimport 'ssc-ui-vue-pro/dist/ssc-ui-vue-pro.css';\nexport default {\n  components: {\n    TrackingHistory\n  },\n  props: {\n    title: {\n      type: String,\n      default: ''\n    },\n    list: {\n      type: Array,\n      default: () => []\n    },\n    className: {\n      type: String,\n      default: ''\n    }\n  },\n  data () {\n    return {};\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.pms-tracking-history-style {\n  &.ssc-tracking-history {\n    width: 100%;\n    padding: 0;\n    .title {\n      display: inline-block;\n      padding-right: 10px;\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/upload/blobResponseUpload.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/upload/listMassUpload.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/upload/skuUpload.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/components/upload/uploadBtnGroup.vue","messages":[{"ruleId":"vue/no-deprecated-destroyed-lifecycle","severity":2,"message":"The `beforeDestroy` lifecycle hook is deprecated. Use `beforeUnmount` instead.","line":221,"column":3,"nodeType":"Identifier","messageId":"deprecatedBeforeDestroy","endLine":221,"endColumn":16,"suggestions":[{"messageId":"insteadBeforeUnmount","fix":{"range":[6177,6190],"text":"beforeUnmount"},"desc":"Instead, change to `beforeUnmount`."}]}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div :class=\"`upload-btn-group-wrapper${uploadParams.disabled ? ' disabled' : ''}`\">\n    <el-dropdown split-button type=\"primary\" @command=\"onBtnClick\" v-if=\"uploadShow\">\n      <el-upload\n        ref=\"uploadComponent\"\n        :disabled=\"uploadParams.disabled\"\n        :action=\"actionUrl\"\n        :accept=\"uploadParams.accept\"\n        :on-success=\"handleUploadSuccess\"\n        :on-error=\"handleUploadError\"\n        :with-credentials='true'\n        :show-file-list='uploadParams.showFileList || false'\n        :limit='uploadParams.limit || 1'\n        :name='uploadParams.name || \"file\"'\n        :headers=\"uploadHeader\"\n        :data=\"uploadData\"\n      >\n        <span>{{$t(uploadParams.btnText || 'approvalFlow.upload')}}</span>\n      </el-upload>\n      <el-dropdown-menu slot=\"dropdown\">\n        <el-dropdown-item :command=\"btn\" v-for=\"btn in btnGroups\" :key=\"btn.text\" >\n          <i :class=\"btn.icon\" class=\"btn-icon\"></i><span>{{$t(btn.text)}}</span>\n        </el-dropdown-item>\n      </el-dropdown-menu>\n    </el-dropdown>\n    <div v-if=\"showHistory\" class='list-btn upload-history' @click=\"onHistory\">\n      <i class=\"el-icon-upload\"></i><span>{{uploadParams.historyText || $t('userRole.userList.uploadHistory')}}</span>\n    </div>\n\n    <!-- 新版需要使用historyVersion=2 -->\n    <ExportHistoryDialog\n      v-if=\"historyVersion === 2\"\n      v-bind=\"historyPropsComputed\"\n      @close=\"historyVisible = false\"\n    ></ExportHistoryDialog>\n\n    <!-- 旧版已废弃 -->\n    <el-dialog v-if=\"historyVersion === 1\" :visible.sync=\"historyVisible\" :title=\"$t('userRole.userList.uploadHistory')\">\n      <table-comps\n          :dataList=\"dataList\"\n          v-loading=\"loading\"\n          :config=\"{ align: 'center' }\"\n          :tableSchema=\"tableSchema\"\n        >\n        </table-comps>\n        <section class='pagination-center'>\n          <el-pagination background layout=\"sizes, prev, pager, next\" :current-page='searchParams.page_no' :total.sync=\"searchParams.total\" :page-sizes='[10, 20, 50, 100]' :page-size=\"searchParams.count\" @size-change='handleSizeChange' @current-change=\"handlePageChange\"></el-pagination>\n        </section>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport tableComps from '@/components/ApproveList/list';\nimport { getCsrfHeader, getCsrfData } from '@/utils/cookie';\nimport ExportHistoryDialog from '@/components/ApproveList/exportHistoryDialog';\n\n/**\n * 简单异步上传使用示例\n    <uploadBtnGroup\n      actionUrl=\"/api/supplier/request/mass_upload\"\n      :showHistory=\"true\"\n      :historyVersion=\"2\"\n      :historyProps=\"{\n        taskType: 201\n      }\"\n      :needDefaultSuccessTips=\"true\"\n      @onBtnClick=\"onDownloadTemplate\"\n    >\n    </uploadBtnGroup>\n */\n\nexport default {\n  components: {\n    tableComps,\n    ExportHistoryDialog\n  },\n  props: {\n    needDefaultSuccessTips: {\n      type: Boolean,\n      default: false\n    },\n    historyProps: {\n      type: Object\n    },\n    historyVersion: {\n      type: Number,\n      default: 1\n    },\n    searchParams: {\n      type: Object,\n      default: () => ({})\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    dataList: {\n      type: Array,\n      default: () => []\n    },\n    actionUrl: {\n      type: String,\n      required: true\n    },\n    uploadParams: {\n      type: Object,\n      required: false,\n      default: () => ({})\n    },\n    btnGroups: {\n      type: Array,\n      default: () => [\n        {\n          text: 'purchaseRequest.template',\n          action: 'downLoad',\n          icon: 'el-icon-download'\n        }\n      ]\n    },\n    tableSchema: {\n      type: Array,\n      default: () => []\n    },\n    interval: {\n      type: Number,\n      default: 0\n    },\n    showHistoryImmediate: {\n      type: Boolean,\n      default: false\n    },\n    showHistory: {\n      type: Boolean,\n      default: true\n    },\n    uploadShow: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data() {\n    return {\n      historyVisible: false,\n      timeID: null\n    };\n  },\n  computed: {\n    historyPropsComputed() {\n      return {\n        interval: 10000,\n        isUplodHistory: true,\n        visible: this.historyVisible,\n        ...this.historyProps\n      };\n    },\n    uploadHeader() {\n      return Object.assign(this.getCsrfHeader(), this.$store.getters.uploadHeader);\n    },\n    uploadData() {\n      return Object.assign({}, this.getCsrfData(), this.uploadParams.uploadData || {});\n    }\n  },\n  methods: {\n    getCsrfData,\n    getCsrfHeader,\n    handleUploadSuccess(res) {\n      if (res && res.retcode === 0) {\n        // this.$message.success('Upload Success!');\n        this.$refs.uploadComponent.clearFiles();\n        this.$emit('uploadSuccess', res);\n        if (this.needDefaultSuccessTips) {\n          const tips = this.showHistory ? 'File uploaded, please find the result in “Upload History”!' : 'Upload Success';\n          this.$message.success(tips);\n        }\n        if (this.showHistoryImmediate) {\n          this.onHistory();\n        }\n      } else {\n        this.$refs.uploadComponent.clearFiles();\n        if (this.uploadParams.uploadFailedEmit) {\n          this.$emit('uploadFailed', res);\n        } else {\n          this.$message.error(res.message || res.info);\n        }\n      }\n    },\n    handleUploadError() {\n      this.$message.error('Upload Failed!');\n      this.$refs.uploadComponent.clearFiles();\n    },\n    onHistory() {\n      this.historyVisible = true;\n      this.$emit('onHistory', this.searchParams);\n    },\n    handleSizeChange(count) {\n      this.$emit('onHistory', Object.assign({}, this.searchParams, { page_no: 1, count }));\n    },\n    handlePageChange(page_no) {\n      this.$emit('onHistory', Object.assign({}, this.searchParams, { page_no }));\n    },\n    onBtnClick(btn) {\n      this.$emit('onBtnClick', (btn || {}).action);\n    }\n  },\n  watch: {\n    historyVisible: {\n      handler(curr) {\n        if (curr && this.interval) {\n          this.timeID = setInterval(() => {\n            if (this.dataList.some(item => item.status === 1)) {\n              this.$emit('onHistory', this.searchParams);\n            }\n          }, this.interval);\n        } else if (!curr && this.interval) {\n          clearInterval(this.timeID);\n        }\n      }\n    }\n  },\n  beforeDestroy() {\n    clearInterval(this.timeID);\n  }\n};\n</script>\n<style lang=\"scss\">\n.upload-btn-group-wrapper{\n  .el-dropdown {\n    vertical-align: middle;\n  }\n  .el-button{\n    height: 32px;\n    padding: 7px 15px;\n    &.el-button--primary{\n      background-color: $blue;\n      border-color: $blue;\n    }\n  }\n\n  &.disabled {\n    opacity: 0.4;\n    cursor: default;\n\n    .el-button,\n    .el-upload {\n      cursor: default;\n    }\n  }\n}\n</style>\n<style lang=\"scss\" scoped>\n.pagination-center {\n    display: flex;\n    justify-content: center;\n    margin-top: 20px;\n  }\n.upload-btn-group-wrapper{\n  display: inline-block;\n  .upload-btn{\n    margin-right: -3px;\n    width: auto;\n    padding:0 10px;\n  }\n  .upload-history{\n    width: auto;\n    padding: 0 7px;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/docs/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/icons/index.js","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"svg-icon\" is not PascalCase.","line":5,"column":15,"nodeType":"Literal","endLine":5,"endColumn":25,"fix":{"range":[112,120],"text":"SvgIcon"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import Vue from 'vue';\nimport SvgIcon from '@/components/SvgIcon';// svg组件\n\n// register globally\nVue.component('svg-icon', SvgIcon);\n\nconst requireAll = requireContext => requireContext.keys().map(requireContext);\nconst req = require.context('./svg', false, /\\.svg$/);\nrequireAll(req);\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/lang/en.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/lang/gt.js","messages":[{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":36,"column":23,"nodeType":"ArrowFunctionExpression","messageId":"unexpectedSpace","endLine":36,"endColumn":24,"fix":{"range":[735,736],"text":""}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"/* eslint-disable no-console */\nimport Vue from 'vue';\nimport i18n from '@/lang';\n\n/**\n * 使用说明\n * gt(翻译文案，模块名)\n * getTranslationKey() 查看当前新增key，仅在run dev状态下可用\n * uploadTranslationKey(资源地址，翻译平台鉴权token)\n */\n\nfunction getTranslationKey() {\n  let keys = sessionStorage.getItem('collectKeys');\n  if (keys) {\n    keys = JSON.parse(keys);\n  } else {\n    keys = {};\n  }\n  return keys;\n}\n\nfunction clearTranslationKey() {\n  sessionStorage.removeItem('collectKeys');\n  console.log('Removed!');\n}\n\nfunction stringToArrayBuffer(str) {\n  const buffer = new ArrayBuffer(str.length);\n  const view = new Uint8Array(buffer);\n  for (let i = 0; i < str.length; ++i) {\n    view[i] = str.charCodeAt(i) & 0xff;\n  }\n  return buffer;\n}\n\nconst postKeys = async ({ keys, resourceURL, token }) => {\n  const check = window.prompt('These key will be upload, please enter y to confirm:\\n' + Object.keys(keys).join('\\n'));\n  if (check !== 'y') return;\n  const uri = resourceURL.replace('resources', 'api/resources').replace('lang', 'languagestoken') + '/import/json';\n  const data = JSON.stringify(keys, null, 4);\n  const form = new FormData();\n  const blob = new Blob([stringToArrayBuffer(data)], { type: 'application/json' });\n  form.append('file', blob, 'dev.json');\n\n  const response = await fetch(uri, {\n    body: form,\n    headers: {\n      Authorization: token\n    },\n    method: 'POST'\n  });\n  const result = await response.json();\n  return result;\n};\n\nasync function uploadTranslationKey(resourceURL, token) {\n  resourceURL = resourceURL || localStorage.getItem('gt_resourceURL');\n  token = token || localStorage.getItem('gt_token');\n  if (!resourceURL || !token) {\n    console.error('resourceURL and token is required');\n    return;\n  }\n  localStorage.setItem('gt_resourceURL', resourceURL);\n  localStorage.setItem('gt_token', token);\n  console.log('resourceURL and token is save in localStorage');\n\n  const keys = getTranslationKey();\n  const res = await postKeys({ keys, resourceURL, token });\n  if (res && res.status === 'success') {\n    console.log('Upload Success!', { request: res.requests.updated, ...res.entities });\n    clearTranslationKey();\n    return 'Uploading....';\n  }\n\n  console.error(res, 'Upload Failed!');\n  return;\n}\n\nfunction addTranslationKey(key, value) {\n  const keys = getTranslationKey();\n\n  if (keys[key] && keys[key] !== value) {\n    console.error(`the new key [${key}] is conflict: [old]${keys[key]} [new]${value}`);\n    return;\n  }\n\n  keys[key] = value;\n\n  sessionStorage.setItem('collectKeys', JSON.stringify(keys));\n  window.getTranslationKey = getTranslationKey;\n  window.clearTranslationKey = clearTranslationKey;\n  window.uploadTranslationKey = uploadTranslationKey;\n}\n\n// 默认为common\nexport function gt(label, namespace) {\n  const key = (namespace || 'common') + (label || '').replace(/\\s/g, '');\n\n  if (process.env.NODE_ENV === 'development') {\n    if (!label) {\n      throw new Error('label is required!');\n    }\n    // if (!namespace) {\n    //   throw new Error(`namespace is required for ${label}`);\n    // }\n\n    // 检测新增\n    const hasKey = i18n.te(key);\n    if (!hasKey) {\n      addTranslationKey(key, label);\n    } else {\n      // 检测冲突\n      if (i18n.t(key) !== label) {\n        console.error(`you key [${key}] is already existed but different: [old]${i18n.t(key)} [new]${label}`);\n      }\n    }\n  }\n\n  return label ? i18n.t(key) : '';\n}\n\nVue.prototype.$gt = gt;\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/lang/gt2.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/lang/index.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/lang/tt.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/lang/zh-CN.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/lang/zh-TW.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/main.js","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"text-popover\" is not PascalCase.","line":70,"column":15,"nodeType":"Literal","endLine":70,"endColumn":29,"fix":{"range":[1920,1932],"text":"TextPopover"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import Vue from 'vue';\n\nimport SSCUI from 'ssc-ui-vue'; // 需在element-ui前面引用\nimport 'ssc-ui-vue/dist/ssc-ui-vue-new.css';\n\nVue.use(SSCUI);\n// import { Menu, Input, Popover, Icon, Table, Checkbox } from 'ssc-ui-vue';\n\n// import 'ssc-ui-vue/lib/menu/style/index.css';\n// import 'ssc-ui-vue/lib/input/style/index.css';\n// import 'ssc-ui-vue/lib/popover/style/index.css';\n// import 'ssc-ui-vue/lib/icon/style/index.css';\n// import 'ssc-ui-vue/lib/checkbox/style/index.css';\n// import 'ssc-ui-vue/lib/table/style/index.css';\n\n// Vue.use(Menu);\n// Vue.use(Input);\n// Vue.use(Popover);\n// Vue.use(Icon);\n// Vue.use(Table);\n// Vue.use(Checkbox);\n\nimport 'normalize.css/normalize.css'; // A modern alternative to CSS resets\n\nimport ElementUI from 'element-ui';\nimport '@/styles/element-variables.scss';\n// import 'element-ui/lib/theme-chalk/index.css';\n\nimport '@/styles/index.scss'; // global css\n\nimport App from './App';\nimport router from './router';\nimport store from './store';\n\nimport i18n from '@/lang';\nimport '@/lang/tt';\nimport '@/lang/gt';\nimport '@/lang/gt2';\n\nimport '@/icons'; // icon\nimport '@/permission'; // permission control\n\nimport axios from 'axios';\nVue.prototype.$http = axios;\nimport './report';\n// v-TODO: 按需加载会报出eslint：Cannot find module 'echarts/build/webpack.base.conf.js'\n// import * as echarts from 'echarts/core';\n// import {\n//   BarChart,\n//   PieChart,\n//   LineChart\n// } from 'echarts/charts';\n// import {\n//   TitleComponent,\n//   TooltipComponent,\n//   GridComponent,\n//   LegendComponent,\n//   GraphicComponent\n// } from 'echarts/components';\n// import {\n//   CanvasRenderer\n// } from 'echarts/renderers';\n// echarts.use(\n//   [TitleComponent, TooltipComponent, GridComponent, LegendComponent,\n//     GraphicComponent, BarChart, PieChart, LineChart, CanvasRenderer]\n// );\n// Vue.prototype.$echarts = echarts;\n\nimport TextPopover from '@/components/common/textPopover/index';\nVue.component('text-popover', TextPopover);\n\nVue.use(ElementUI, {\n  size: 'medium',\n  i18n: (key, value) => i18n.t(key, value)\n});\n\nVue.config.productionTip = false;\n\nnew Vue({\n  router,\n  store,\n  i18n,\n  // template: '<App/>',\n  // components: { App }\n  render: h => h(App) // 需要用render的方式渲染\n}).$mount('#app');\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/mixins/checkIRRemainQty.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/mixins/uploadCsrfData.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/permission.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/report/api.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/report/index.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/report/report.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/router/index.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/store/getters.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/store/index.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/store/modules/app.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/store/modules/inboundCalendar.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/store/modules/inboundReservationCreatePR.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/store/modules/paymentRequest.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/store/modules/permission.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/store/modules/prDetail.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/store/modules/rtsDetail.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/store/modules/searchForm.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/store/modules/sellerDiscount.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/store/modules/user.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/store/modules/userSetting.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/uatu.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/utils/constant.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/utils/cookie.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/utils/countryCode.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/utils/downloadFile.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/utils/format.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/utils/formatParams.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/utils/getProperties.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/utils/i18n.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/utils/index.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/utils/localStorage.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/utils/moment.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/utils/numberUtils.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/utils/permission.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/utils/productCategory.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/utils/productInfoValidate.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/utils/request.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/utils/router.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/utils/safeGet.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/utils/supplierDetailValidate.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/utils/switch.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/utils/treeData.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/utils/validate.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/403/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/404/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/CRTList/actionLog.vue","messages":[{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"crt_id\" is not in camelCase.","line":179,"column":5,"nodeType":"Property","endLine":181,"endColumn":6}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-dialog\n    :visible.sync=\"dialogVisible\"\n    width=\"800px\"\n    lock-scroll\n    custom-class=\"pms-dialog\"\n    :title=\"$t('commonActionLog')\"\n    @close=\"onClose\"\n  >\n    <ul class=\"log-tabs_wrapper\">\n      <li\n        v-for=\"(tab, index) in tabs\"\n        :key=\"tab\"\n        class=\"log-tab_item\"\n        :class=\"{'is-active': activeTabIndex === index}\"\n        @click=\"changeTabItem(index)\"\n      >{{$t(tab)}}</li>\n    </ul>\n    <section\n      class=\"log-item-wrapper pms-log-table status-log\"\n      v-if=\"activeTabIndex === 0\"\n      v-loading=\"loading\"\n    >\n       <el-table :data=\"statusLogs || []\">\n        <el-table-column :label=\"$t('commonOperationTime')\">\n          <template slot-scope=\"scope\">{{moment(scope.row.modify_time * 1000).format('YYYY-MM-DD HH:mm')}}</template>\n        </el-table-column>\n        <el-table-column :label=\"$t('commonOperator')\" prop=\"operator\"></el-table-column>\n        <el-table-column :label=\"$t('commonAction')\">\n          <template slot-scope=\"scope\">{{formatAction(scope.row.type)}}</template>\n        </el-table-column>\n      </el-table>\n     <section class=\"log-pagination-wrapper\">\n        <el-pagination\n          small\n          layout=\"prev, pager, next\"\n          background\n          :total=\"statusTotal\"\n          :page-size=\"statusPager.count\"\n          @current-change=\"(...argu) => handleCurrentChange('status', ...argu)\"\n          class=\"pms-ele-ui pms-pagination\"\n        >\n        </el-pagination>\n      </section>\n    </section>\n\n    <section\n      class=\"log-item-wrapper pms-log-table supplier-log\"\n      v-if=\"activeTabIndex === 1\"\n      v-loading=\"loadingSupplier\"\n    >\n      <el-table :data=\"supplierLogs || []\">\n       <el-table-column :label=\"$t('commonOperationTime')\" prop=\"modify_time\">\n         <template slot-scope=\"scope\">{{moment(scope.row.modify_time * 1000).format('YYYY-MM-DD HH:mm')}}</template>\n       </el-table-column>\n        <el-table-column :label=\"$t('commonOperator')\" prop=\"operator\"></el-table-column>\n        <el-table-column :label=\"$t('commonAction')\" width=\"400px\">\n          <template slot-scope=\"scope\">\n            <ul>\n              <li v-for=\"(item, index) in scope.row.actionList || []\" :key=\"index\" class=\"action-li\">\n                <div class=\"collapse-title-wrapper pms-clearfix\">\n                  <span class=\"collapse-left-title\" :class=\"item.action === 1 ? 'green': item.action === 2 ?'blue' : 'red'\">{{formatSupplierAction(item.action)}}</span>\n                  <span class=\"collapse-right-title pms-float-right\">\n                    {{formatSupplierLength(item.action, item.children.length)}}\n                    <i class=\"el-icon-caret-bottom collapse-right-icon\" :class=\"{'is-active': item.isActive}\" @click=\"handleShowCollapse(item)\"></i>\n                  </span>\n                </div>\n                <div class=\"collapse-content-wrapper\" v-show=\"item.isActive || false\">\n                  <div v-if=\"item.action === 1\">\n                    <el-table :data=\"item.children\" class=\"pms-table-small supplier-log-table\" border>\n                      <el-table-column :label=\"$t('commonVendorSiteID')\" prop=\"field\"></el-table-column>\n                      <el-table-column :label=\"$t('commonSupplierName')\"   prop=\"before\" ></el-table-column>\n                      <el-table-column :label=\"$t('commonShopID')\"  prop=\"after\"></el-table-column>\n                    </el-table>\n                  </div>\n                  <div v-if=\"item.action === 2\">\n                    <el-table :data=\"item.children\" class=\"pms-table-small supplier-log-table\" border>\n                      <el-table-column :label=\"$t('commonVendorSiteID')\" prop=\"field\"></el-table-column>\n                      <el-table-column :label=\"$t('commonLogBefore')\"   prop=\"before\"></el-table-column>\n                      <el-table-column :label=\"$t('commonLogAfter')\"  prop=\"after\"></el-table-column>\n                    </el-table>\n                  </div>\n                  <div v-if=\"item.action === 3\">\n                    <el-table :data=\"item.children\" class=\"pms-table-small supplier-log-table\" border>\n                      <el-table-column :label=\"$t('commonVendorSiteID')\" prop=\"field\"></el-table-column>\n                      <el-table-column :label=\"$t('commonSupplierName')\"   prop=\"before\"></el-table-column>\n                    </el-table>\n                  </div>\n                </div>\n              </li>\n            </ul>\n          </template>\n        </el-table-column>\n      </el-table>\n      <section class=\"log-pagination-wrapper\">\n        <el-pagination\n          small\n          layout=\"prev, pager, next\"\n          background\n          :total=\"supplierTotal\"\n          :page-size=\"supplierPager.count\"\n          @current-change=\"(...argu) => handleCurrentChange('supplier', ...argu)\"\n          class=\"pms-ele-ui pms-pagination\"\n        ></el-pagination>\n      </section>\n    </section>\n\n    <!-- Sku Action Log -->\n    <section\n      class=\"log-item-wrapper pms-log-table supplier-log\"\n      v-if=\"activeTabIndex === 2\"\n      v-loading=\"loadingSku\">\n      <el-table :data=\"skuLogs || []\">\n       <el-table-column :label=\"$t('commonOperationTime')\" prop=\"modify_time\">\n         <template slot-scope=\"scope\">{{moment(scope.row.modify_time * 1000).format('YYYY-MM-DD HH:mm')}}</template>\n       </el-table-column>\n        <el-table-column :label=\"$t('commonOperator')\" prop=\"operator\"></el-table-column>\n        <el-table-column :label=\"$t('commonAction')\" width=\"400px\">\n          <template slot-scope=\"scope\">\n            <ul>\n              <li v-for=\"(item, index) in scope.row.actionList || []\" :key=\"index\" class=\"action-li\">\n                <div class=\"collapse-title-wrapper pms-clearfix\">\n                  <span class=\"collapse-left-title\" :class=\"item.action === 1 ? 'green': item.action === 2 ?'blue' : 'red'\">{{formatSkuAction(item.action)}}</span>\n                  <span class=\"collapse-right-title pms-float-right\">\n                    {{formatSkuLength(item.action, item.children.length)}}\n                    <i class=\"el-icon-caret-bottom collapse-right-icon\" :class=\"{'is-active': item.isActive}\" @click=\"handleShowCollapse(item)\"></i>\n                  </span>\n                </div>\n                <div class=\"collapse-content-wrapper\" v-show=\"item.isActive || false\">\n                  <div v-if=\"item.action === 1\">\n                    <el-table :data=\"item.children\" class=\"pms-table-small supplier-log-table\" border>\n                      <el-table-column :label=\"$t('skuIdAndShopId')\" prop=\"field\"></el-table-column>\n                      <el-table-column :label=\"$t('commonDetail')\"  prop=\"after\"></el-table-column>\n                      <el-table-column></el-table-column>\n                    </el-table>\n                  </div>\n                  <div v-if=\"item.action === 2\">\n                    <el-table :data=\"item.children\" class=\"pms-table-small supplier-log-table\" border>\n                      <el-table-column :label=\"$t('skuIdAndShopId')\" prop=\"field\"></el-table-column>\n                      <el-table-column :label=\"$t('commonLogBefore')\"   prop=\"before\"></el-table-column>\n                      <el-table-column :label=\"$t('commonLogAfter')\"  prop=\"after\"></el-table-column>\n                    </el-table>\n                  </div>\n                  <div v-if=\"item.action === 3\">\n                    <el-table :data=\"item.children\" class=\"pms-table-small supplier-log-table\" border>\n                      <el-table-column :label=\"$t('skuIdAndShopId')\" prop=\"field\"></el-table-column>\n                      <el-table-column :label=\"$t('commonDetail')\"   prop=\"before\"></el-table-column>\n                      <el-table-column></el-table-column>\n                    </el-table>\n                  </div>\n                </div>\n              </li>\n            </ul>\n          </template>\n        </el-table-column>\n      </el-table>\n      <section class=\"log-pagination-wrapper\">\n        <el-pagination\n          small\n          layout=\"prev, pager, next\"\n          background\n          :total=\"skuTotal\"\n          :page-size=\"skuPager.count\"\n          @current-change=\"(...argu) => handleCurrentChange('sku', ...argu)\"\n          class=\"pms-ele-ui pms-pagination\"\n        ></el-pagination>\n      </section>\n    </section>\n    <el-button slot=\"footer\" class=\"list-btn\" @click=\"onClose\">{{$t('commonOK')}}</el-button>\n  </el-dialog>\n</template>\n\n<script>\nimport { getStatusLogs, getSupplierLogs, getCommonLogs } from '@/api/CRT';\nimport { CRTStatusActions, CRTSupplierActions, CRTSkuActions } from '@/utils/constant';\nimport moment from 'moment';\nexport default {\n  props: {\n    crt_id: {\n      required: true\n    },\n    visible: {\n      type: Boolean,\n      required: true,\n      default: false\n    }\n  },\n  data() {\n    return {\n      statusPager: {\n        count: 10,\n        page_no: 1\n      },\n      statusTotal: 0,\n      supplierPager: {\n        count: 10,\n        page_no: 1\n      },\n      supplierTotal: 0,\n      skuTotal: 0,\n      skuPager: {\n        count: 10,\n        page_no: 1\n      },\n      dialogVisible: false,\n      statusLogs: [],\n      supplierLogs: [],\n      skuLogs: [],\n      loading: false,\n      loadingSupplier: false,\n      loadingSku: false,\n      activeTabIndex: 0,\n      tabs: ['CRTStatusLogs', 'CRTSupplierLogs', 'CRTSkuLogs']\n    };\n  },\n  watch: {\n    visible(value) {\n      this.dialogVisible = value;\n      if (value) {\n        this.getStatusLogs();\n        this.getSupplierLogs();\n        this.getSkuLogs();\n      }\n    }\n  },\n  methods: {\n    moment,\n    formatSupplierLength(action, len) {\n      if (action === 1 || action === 3) {\n        return this.$t('CRTActionSuppliers', { count: len });\n      } else {\n        return this.$t('CRTActionOfSuppliers', { count: len });\n      }\n    },\n    formatSkuLength(action, len) {\n      return this.$t('CRTActionSku', { count: len });\n    },\n    formatSupplierAction(action) {\n      const output = (\n        CRTSupplierActions.find(item => item.value === action) || {\n          label: ''\n        }\n      ).label;\n      if (output) {\n        return this.$t(output);\n      } else {\n        return '';\n      }\n    },\n    formatSkuAction(action) {\n      const output = (\n        CRTSkuActions.find(item => item.value === action) || {\n          label: ''\n        }\n      ).label;\n      if (output) {\n        return this.$t(output);\n      } else {\n        return '';\n      }\n    },\n    formatAction(action) {\n      const output = (\n        CRTStatusActions.find(item => item.value === action) || {\n          label: ''\n        }\n      ).label;\n      if (output) {\n        return this.$t(output);\n      } else {\n        return '';\n      }\n    },\n    changeTabItem(index) {\n      this.activeTabIndex = index;\n    },\n    handleCurrentChange(type, index) {\n      if (type === 'status') {\n        this.statusPager.page_no = index;\n        this.getStatusLogs();\n      } else if (type === 'supplier') {\n        this.supplierPager.page_no = index;\n        this.getSupplierLogs();\n      } else if (type === 'sku') {\n        this.skuPager.page_no = index;\n        this.getSkuLogs();\n      }\n    },\n    handleShowCollapse(item) {\n      item.isActive = !item.isActive;\n    },\n    async getStatusLogs() {\n      try {\n        this.loading = true;\n        const params = {\n          crt_id: this.crt_id,\n          ...this.statusPager\n        };\n        const res = await getStatusLogs(params);\n        if (res && res.retcode === 0) {\n          this.statusLogs = res.data.change_list || [];\n          this.statusTotal = res.data.total;\n        } else {\n          this.$message({ type: 'error', message: res.info });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loading = false;\n      }\n    },\n    async getSupplierLogs() {\n      try {\n        this.loadingSupplier = true;\n        const params = {\n          crt_id: this.crt_id,\n          ...this.supplierPager\n        };\n        const res = await getSupplierLogs(params);\n\n        if (res && res.retcode === 0) {\n          this.supplierLogs = (res.data.change_list || []).map(item => {\n            const actionObj = {};\n            item.content.forEach(child => {\n              if (!actionObj[child.action]) {\n                actionObj[child.action] = [];\n              }\n              actionObj[child.action].push(child);\n            });\n            const actionList = Object.keys(actionObj).map(key => {\n              return {\n                isActive: false,\n                action: Number(key),\n                children: actionObj[key]\n              };\n            });\n            return Object.assign({}, item, { actionList });\n          });\n          this.supplierTotal = res.data.total;\n        } else {\n          this.$message({ type: 'error', message: res.info });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loadingSupplier = false;\n      }\n    },\n    async getSkuLogs() {\n      try {\n        this.loadingSku = true;\n        const params = {\n          crt_id: this.crt_id,\n          type: 6,\n          ...this.skuPager\n        };\n        const res = await getCommonLogs(params);\n\n        if (res && res.retcode === 0) {\n          this.skuLogs = (res.data.change_list || []).map(item => {\n            const actionObj = {};\n            item.content.forEach(child => {\n              if (!actionObj[child.action]) {\n                actionObj[child.action] = [];\n              }\n              actionObj[child.action].push(child);\n            });\n            const actionList = Object.keys(actionObj).map(key => {\n              return {\n                isActive: false,\n                action: Number(key),\n                children: actionObj[key]\n              };\n            });\n            return Object.assign({}, item, { actionList });\n          });\n          this.skuTotal = res.data.total;\n        } else {\n          this.$message({ type: 'error', message: res.info });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loadingSku = false;\n      }\n    },\n    onClose() {\n      this.$emit('close');\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n@import \"~@/styles/variables.scss\";\n.log-item-wrapper {\n  max-height: 500px;\n  overflow: auto;\n  .log-pagination-wrapper{\n    text-align: center;\n    margin: 16px 0px 0px;\n  }\n}\n.log-tabs_wrapper{\n  overflow: hidden;\n  margin-bottom: 8px;\n  .log-tab_item{\n    float: left;\n    color: $black ;\n    background-color:#fff;\n    height: 32px;\n    line-height: 32px;\n    padding:0 8px;\n    border-bottom: 2px solid transparent;\n    cursor: pointer;\n    &.is-active {\n      background-color: #f5f5f5;\n      color: $blue;\n      font-weight: bold;\n      border-bottom-color: $blue\n    }\n  }\n}\n.action-li{\n  margin-bottom: 8px;\n}\n.collapse-title-wrapper{\n  background-color: $grey-bg;\n  padding: 12px 16px;\n  margin-bottom: 4px;\n  font-weight: bold;\n  .collapse-left-title{\n    &::before{\n      content: '';\n      display: inline-block;\n      width: 5px;\n      height: 5px;\n      vertical-align: middle;\n      background-color: #fff;\n      margin-right: 4px;\n      border-radius: 100%;\n    }\n    &.green {\n      &:before {\n        background-color: $green\n      }\n    }\n    &.blue {\n      &:before {\n        background-color: $blue\n      }\n\n    }\n    &.red {\n      &:before {\n        background-color: $red\n      }\n    }\n  }\n  .collapse-right-icon{\n    cursor: pointer;\n    transition: all 0.5s;\n    &.is-active {\n      transform: rotate(180deg);\n    }\n  }\n\n}\n.collapse-content-wrapper{\n  background-color: #fff;\n  padding: 2px 16px;\n}\n</style>\n<style lang=\"scss\">\n@import \"~@/styles/common.scss\"; // ~@ = @ = 'src' webpack alias path\n.pms-dialog {\n  .el-dialog__body {\n    padding: 8px 24px 16px;\n  }\n}\n.pms-log-table {\n  .el-table {\n    .el-table__header-wrapper {\n      th {\n        height: 54px;\n        background-color: #f5f5f5;\n        font-size: 14px;\n        line-height: 1.5em;\n        font-weight: normal;\n        .cell {\n          word-break: break-word;\n        }\n      }\n    }\n    .el-table__body {\n      td {\n        height: 70px;\n        .cell {\n          word-break: break-word;\n        }\n      }\n    }\n  }\n}\n.pms-table-small{\n  &.el-table{\n    font-size: 10px;\n    .el-table__header-wrapper{\n      .el-table__header{\n        th {\n          font-size: inherit;\n          height: 20px;\n          padding: 0;\n        }\n      }\n    }\n    .el-table__body-wrapper{\n      .el-table__body{\n        td {\n          font-size: inherit;\n          height: 20px;\n          padding: 0;\n        }\n      }\n    }\n  }\n}\n.supplier-log-table{\n  &.el-table {\n    .el-table__header-wrapper {\n      .el-table__header{\n        th {\n          color: rgba(51,51,51,0.80);\n          font-weight: bold;\n          background-color: #EBEBEB;\n        }\n      }\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/CRTList/detail.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/CRTList/list.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":13,"column":44,"nodeType":"VIdentifier","messageId":"deprecated","endLine":13,"endColumn":50},{"ruleId":"vue/no-unused-components","severity":2,"message":"The \"tabsHeader\" component has been registered but not used.","line":203,"column":17,"nodeType":"Property","endLine":203,"endColumn":27}],"errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-container class=\"crt-wrapper pms-ele-ui pms-ui\">\n    <section class=\"list-header-wrapper pms-clearfix\">\n      <el-button\n        class=\"list-btn list-btn_list-add pms-float-right\"\n        icon=\"el-icon-plus\"\n        @click=\"routerToCreate\"\n        v-if=\"canOperate\"\n      >{{$t('CRTNewTemplate')}}</el-button>\n      <h3 class=\"list-header-title\">{{$t('CRTChargingReportTemplates')}}</h3>\n    </section>\n    <section class=\"main-wrapper\">\n      <el-form :model=\"searchForm\" @submit.native.prevent=\"onResetPageNoSearch\">\n        <el-button v-show=\"false\" native-type=\"submit\"></el-button>\n        <el-row>\n          <el-col\n            v-for=\"item in searchSchema\"\n            :key=\"item.field\"\n            :span=\"item.width\"\n            :offset=\"item.offset || 0\"\n          >\n            <el-form-item\n              :label-width=\"item.labelWidth || '120px'\"\n              :class=\"item.class || ''\"\n              :label=\"item.label\"\n            >\n              <el-select\n                v-if=\"item.type === 'select'\"\n                :multiple=\"item.multiple\"\n                :clearable=\"item.clearable\"\n                v-model=\"searchForm[item.field]\"\n                :disabled=\"item.disabled || false\"\n                :collapse-tags=\"true\"\n                @change=\"(...argu) => onChangeSelect(item.field, ...argu)\"\n              >\n                <el-option\n                  v-for=\"option in item.options || []\"\n                  :key=\"option.value\"\n                  :label=\"item.field === 'region' ? option.label: $t(option.label)\"\n                  :value=\"option.value\"\n                ></el-option>\n              </el-select>\n              <el-input v-if=\"item.type === 'input'\" v-model=\"searchForm[item.field]\"></el-input>\n              <el-autocomplete\n                v-else-if=\"item.type === 'supplierID'\"\n                popper-class=\"pms-ele-ui supplierIDCompleteWrapperWidth\"\n                class=\"el-autocomplete_width_100\"\n                v-model=\"searchForm[item.field]\"\n                :fetch-suggestions=\"getVendorSiteID\"\n                clearable\n                :placeholder=\"$t('commonVendorSiteIDPlaceholder')\"\n                @select=\"handleVendorSiteIDSelect\"\n              ></el-autocomplete>\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row type=\"flex\" justify=\"space-between\" class=\"action-row\">\n          <el-col>\n            <el-dropdown :split-button=\"true\" type=\"primary\" @command=\"onBtnClick\" v-if=\"canOperate\">\n              <p>{{$t('commonMassUpload')}}</p>\n              <el-dropdown-menu slot=\"dropdown\">\n                <el-dropdown-item :command=\"btn.id\" v-for=\"btn in btnGroups\" :key=\"btn.id\" >\n                  <el-upload\n                    class=\"list-btn\"\n                    :action=\"actionUrl\"\n                    :data=\"uploadData\"\n                    :with-credentials=\"true\"\n                    ref=\"massUpload\"\n                    :show-file-list=\"false\"\n                    :on-success=\"onUploadSuccess\"\n                    :on-error=\"onUploadError\"\n                    :headers=\"getCsrfHeader()\"\n                  >{{$t(btn.btnText)}}</el-upload>\n                </el-dropdown-item>\n              </el-dropdown-menu>\n            </el-dropdown>\n            <el-button class=\"list-btn white-blue\" v-if=\"canOperate\" @click=\"showExportHistory\">\n               <i class=\"el-icon-upload\"></i>\n               <span>{{$t('commonUploadHistory')}}</span>\n            </el-button>\n            <el-dropdown :split-button=\"true\" class=\"template-btn\" @command=\"downLoadTemplate\">\n              <p type=\"text\" class=\"link-btn\"><i class=\"el-icon-download\"></i>{{$t('commonTemplate')}}</p>\n              <el-dropdown-menu slot=\"dropdown\">\n                <el-dropdown-item v-for=\"item in templateList\" :command=\"item.id\" :key=\"item.id\">{{$t(item.btnText)}}</el-dropdown-item>\n              </el-dropdown-menu>\n            </el-dropdown>\n          </el-col>\n          <el-col class=\"text-right\">\n            <div class=\"list-btn\" @click=\"onResetPageNoSearch\">{{$t('commonSearch')}}</div>\n            <div class=\"list-btn white-blue\" @click=\"onReset\">{{$t('commonClear')}}</div>\n          </el-col>\n        </el-row>\n      </el-form>\n      <el-table\n        :data=\"tableList\"\n        border\n        v-loading=\"loading\"\n        @row-click=\"rowClick\"\n      >\n        <el-table-column prop=\"crt_id\">\n          <template slot-scope=\"scope\" slot='header'>\n            <span>{{$t('CRReportCRTID')}}</span>\n            <el-popover\n                  popper-class=\"crt-popover-break-word\"\n                  placement=\"top\"\n                  width=\"400\"\n                  trigger=\"hover\"\n                >\n                <div class=\"icon-tips-wrapper\">\n                  {{$t('CRTChargingReportTemplateID')}}\n                </div>\n                <svg-icon slot=\"reference\" iconClass=\"question-circle\" class=\"question-icon\"></svg-icon>\n              </el-popover>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"crt_name\">\n          <template slot-scope=\"scope\" slot='header'>\n            <span>{{$t('CRReportCRTName')}}</span>\n            <el-popover\n                  popper-class=\"crt-popover-break-word\"\n                  placement=\"top\"\n                  width=\"400\"\n                  trigger=\"hover\"\n                >\n                <div class=\"icon-tips-wrapper\">\n                  {{$t('CRTChargingReportTemplateName')}}\n                </div>\n                <svg-icon slot=\"reference\" iconClass=\"question-circle\" class=\"question-icon\"></svg-icon>\n              </el-popover>\n          </template>\n        </el-table-column>\n        <el-table-column :label=\"$t('commonStatus')\">\n          <template slot-scope=\"scope\">\n            <span\n              class=\"status-span\"\n              :class=\"scope.row.crt_status === 1 ? 'orange' : scope.row.crt_status === 2 ? 'green' : 'red'\"\n            >{{$t(formatStatus(scope.row.crt_status)) || ''}}</span>\n          </template>\n        </el-table-column>\n        <el-table-column :label=\"$t('CRReportGenerationPeriod')\">\n          <template\n            slot-scope=\"scope\"\n          >{{$t(formatGenerationPeriod(scope.row.generate_period)) || ''}}</template>\n        </el-table-column>\n        <el-table-column :label=\"$t('commonClientType')\">\n          <template\n            slot-scope=\"scope\"\n          >{{formatSupplierType(scope.row.supplier_type, scope.row.purchase_type) || ''}}</template>\n        </el-table-column>\n\n        <el-table-column prop=\"supplier_qty\" :label=\"$t('CRTSupplierQty')\"></el-table-column>\n\n        <el-table-column :label=\"$t('commonCreatedBy')\" prop=\"creator\"></el-table-column>\n\n        <el-table-column :label=\"$t('commonCtime')\">\n          <template slot-scope=\"scope\">\n            <p>{{moment(scope.row.ctime * 1000).format('YYYY-MM-DD HH:mm') || ''}}</p>\n          </template>\n        </el-table-column>\n        <el-table-column :label=\"$t('commonMtime')\">\n          <template slot-scope=\"scope\">\n            <p>{{moment(scope.row.mtime * 1000).format('YYYY-MM-DD HH:mm') || ''}}</p>\n          </template>\n        </el-table-column>\n      </el-table>\n      <section class=\"pagination-center\">\n        <el-pagination\n          background\n          layout=\"sizes, prev, pager, next\"\n          :current-page=\"pager.page_no\"\n          :page-sizes=\"[10, 20, 50, 100]\"\n          :total.sync=\"total\"\n          :page-size=\"pager.count\"\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleChangePage\"\n        ></el-pagination>\n      </section>\n    </section>\n    <upload-history-dialog :interval=\"15000\" type=\"upload\" :taskType=\"taskType\" :visible=\"isShowExportHistory\" @close=\"closeExportHistory\">\n    </upload-history-dialog>\n  </el-container>\n</template>\n\n<script>\nimport { formatParams } from '@/utils/formatParams';\nimport { getChargingReportTemplateList, exportCRT, exportCRTSku } from '@/api/CRT';\nimport {\n  CRLGenerationPeriodList,\n  CRTStatusList,\n  CRTempSupplierTypeList as CRTSupplierTypeList,\n  Permission\n} from '@/utils/constant';\nimport tabsHeader from '@/components/tabsHeader';\nimport moment from 'moment';\nimport { hasPermission } from '@/utils/permission';\nimport { getSupplierList } from '@/api/supplier';\nimport { downloadBlobFile } from '@/utils/downloadFile';\nimport uploadHistoryDialog from '@/components/DowloadCenter/uploadHistoryDialog';\nimport { getCsrfHeader, getCsrfData } from '@/utils/cookie';\n\nconst moduleName = 'ChargingReportTemplate';\nexport default {\n  components: { tabsHeader, uploadHistoryDialog },\n  data() {\n    const defaultCountry = (\n      this.$store.getters.countrySelectList[0] || { value: '' }\n    ).value;\n    return {\n      isShowExportHistory: false,\n      canOperate: false,\n      lastSearchForm: {\n        region: this.defaultCountry,\n        count: 10,\n        page_no: 1\n      },\n      defaultCountry,\n      searchForm: {\n        crt_id: '',\n        crt_name: '',\n        supplier_purcharse_type: '', // 前端自定义\n        creator: '',\n        generate_period_list: [],\n        vendor_site_id: '',\n        crt_status_list: [],\n        region: defaultCountry\n      },\n      loading: false,\n      pager: {\n        page_no: 1,\n        count: 10\n      },\n      total: 0,\n      tableList: [],\n      templateList: [{ btnText: 'supplierTemplate', id: 'supplier' }, { btnText: 'discountSKUTemplate', id: 'sku' }],\n      btnGroups: [{ btnText: 'CRTMassModifyMapping', id: 'supplier' }, { btnText: 'massUploadDiscountSKU', id: 'sku' }],\n      actionUrl: '',\n      taskType: [14, 30]\n    };\n  },\n  computed: {\n    uploadData() {\n      return Object.assign(getCsrfData(), { region: this.searchForm.region });\n    },\n    searchSchema() {\n      return [\n        {\n          type: 'select',\n          width: 5,\n          label: this.$t('commonRegion'),\n          field: 'region',\n          options: this.countryList\n        },\n        {\n          type: 'input',\n          width: 5,\n          label: this.$t('CRReportCRTID'),\n          field: 'crt_id'\n        },\n        {\n          type: 'input',\n          width: 5,\n          label: this.$t('CRReportCRTName'),\n          field: 'crt_name'\n        },\n        {\n          type: 'supplierID',\n          width: 5,\n          label: this.$t('commonVendorSiteID'),\n          field: 'vendor_site_id'\n        },\n        {\n          type: 'select',\n          multiple: true,\n          width: 5,\n          label: this.$t('commonStatus'),\n          field: 'crt_status_list',\n          options: CRTStatusList\n        },\n        {\n          type: 'select',\n          width: 5,\n          clearable: true,\n          label: this.$t('commonClientType'),\n          field: 'supplier_purcharse_type',\n          options: CRTSupplierTypeList\n        },\n        {\n          type: 'select',\n          width: 5,\n          label: this.$t('CRReportGenerationPeriod'),\n          multiple: true,\n          field: 'generate_period_list',\n          options: CRLGenerationPeriodList\n        },\n        {\n          type: 'input',\n          width: 5,\n          label: this.$t('commonCreator'),\n          field: 'creator'\n        }\n      ];\n    },\n    countryList() {\n      return [\n        ...new Set([\n          ...this.$store.getters.countryList.map(item => item.country)\n        ])\n      ].map(item => ({ value: item, label: item }));\n    }\n  },\n  methods: {\n    moment,\n    getCsrfData,\n    getCsrfHeader,\n    routerToCreate() {\n      this.$router.push('/admin/finance/crt/management/create');\n    },\n    formatSupplierType(supplierType, purchasType) {\n      if (supplierType === 1) {\n        // CB\n        return this.$t('CRTSupplierTypeCB');\n      } else {\n        return ['', this.$t('CRTSupplierTypeLocalOutright'), this.$t('CRTSupplierTypeLocalConsignment'), this.$t('CRTSupplierTypeLocalFBS')][purchasType];\n      }\n    },\n    onChangeSelect(field, value) {\n      if (field === 'region') {\n        this.searchForm.vendor_site_id = '';\n      }\n      this.onResetPageNoSearch();\n    },\n    formatGenerationPeriod(value) {\n      return (\n        CRLGenerationPeriodList.find(item => item.value === value) || {\n          label: ''\n        }\n      ).label;\n    },\n    formatStatus(value) {\n      return (CRTStatusList.find(item => item.value === value) || { label: '' })\n        .label;\n    },\n    showExportHistory() {\n      this.isShowExportHistory = true;\n    },\n    closeExportHistory() {\n      this.isShowExportHistory = false;\n    },\n    onUploadSuccess(resp) {\n      // this.$refs.massUpload.clearFiles();\n      if (resp.retcode !== 0) {\n        this.$message.error(resp.info);\n      } else {\n        this.$message.success(this.$t('commonUploadSuccess'));\n      }\n    },\n    onUploadError(resp) {\n      // this.$refs.massUpload.clearFiles();\n      this.$message.error(this.$t('commonUploadFailed'));\n    },\n    onBtnClick(command) {\n      // console.log(command);\n      if (command === 'sku') {\n        this.actionUrl = '/api/charging_report/template/sku/mass_upload/async';\n      } else if (command === 'supplier') {\n        this.actionUrl = '/api/charging_report/bulk_template/supplier/upload/';\n      }\n    },\n    downLoadTemplate(command) {\n      if (command === 'sku') {\n        this.downloadSkuTemplate();\n      } else if (command === 'supplier') {\n        this.onExport();\n      }\n    },\n    downloadSkuTemplate() {\n      const params = {\n        region: this.searchForm.region\n      };\n      exportCRTSku(params).then(resp => {\n        if (resp.type === 'application/json') {\n          const reader = new FileReader();\n          reader.onloadend = () => {\n            const result = JSON.parse(reader.result);\n            if (result.retcode !== 0) {\n              this.$message({ type: 'error', message: result.info });\n            }\n          };\n          reader.readAsText(resp);\n        } else {\n          downloadBlobFile(resp, `Sku_${moment().format('YYYYMMDDHHmmss')}.xlsx`);\n        }\n      }).catch((e) => { this.$message({ type: 'error', message: e }); });\n    },\n    onExport() {\n      const params = {\n        region: this.searchForm.region\n      };\n      exportCRT(params).then(resp => {\n        if (resp.type === 'application/json') {\n          const reader = new FileReader();\n          reader.onloadend = () => {\n            const result = JSON.parse(reader.result);\n            if (result.retcode !== 0) {\n              this.$message({ type: 'error', message: result.info });\n            }\n          };\n          reader.readAsText(resp);\n        } else {\n          downloadBlobFile(resp, `CRT_${moment().format('YYYYMMDDHHmmss')}.xls`);\n        }\n      }).catch((e) => { this.$message({ type: 'error', message: e }); });\n    },\n    async getVendorSiteID(query = '', cb) {\n      try {\n        const params = {\n          pageno: 1,\n          count: 20,\n          key: `${query}`.trim(),\n          approval_country:\n            this.searchForm.region ||\n            this.countryList.map(item => item.value).join('_'),\n            merchant_type: 'ALL' // sbs vendor id新增字段， ALL, SUPPLIER,SELLER, 不传后台默认返回SUPPLIER数据\n        };\n        const resp = await getSupplierList(params);\n        if (resp.status !== 0) {\n          this.$message.error(resp.info);\n          cb([]);\n        } else {\n          cb(\n            resp.data.list.map(supplier => {\n              return {\n                value: `${supplier['supplier_id']} ${supplier['name']}`,\n                supplierID: supplier['supplier_id'],\n                supplierName: supplier['name']\n              };\n            })\n          );\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    handleVendorSiteIDSelect(item) {\n      this.searchForm.vendor_site_id = item.supplierID;\n    },\n    onReset() {\n      Object.keys(this.searchForm).forEach(key => {\n        if (key === 'region') {\n          this.searchForm[key] = this.defaultCountry;\n        } else if (Array.isArray(this.searchForm[key])) {\n          this.searchForm[key] = [];\n        } else {\n          this.searchForm[key] = '';\n        }\n      });\n      this.onSearch();\n    },\n    handleChangePage(page_no) {\n      this.pager.page_no = page_no;\n      this.onSearch();\n    },\n    handleSizeChange(count) {\n      this.pager.count = count;\n      this.pager.page_no = 1;\n      this.onSearch();\n    },\n    onResetPageNoSearch() {\n      this.handleChangePage(1);\n    },\n    async onSearch() {\n      const { crt_id, crt_name, supplier_purcharse_type, creator, generate_period_list, vendor_site_id, crt_status_list, region } = this.searchForm;\n      const params = {\n        ...this.pager,\n        crt_id,\n        crt_name,\n        creator,\n        vendor_site_id,\n        region\n      };\n      if (Array.isArray(crt_status_list) && crt_status_list.length) {\n        params.crt_status_list = crt_status_list;\n      }\n      if (Array.isArray(generate_period_list) && generate_period_list.length) {\n        params.generate_period_list = generate_period_list;\n      }\n      if (supplier_purcharse_type === 'CB') {\n        params.supplier_type = 1;\n        params.purchase_type = '';\n      }\n      if (supplier_purcharse_type === 'LocalOutright') {\n        params.supplier_type = 2;\n        params.purchase_type = 1;\n      }\n      if (supplier_purcharse_type === 'LocalConsignment') {\n        params.supplier_type = 2;\n        params.purchase_type = 2;\n      }\n      if (supplier_purcharse_type === 'LocalFBS') {\n        params.supplier_type = 2;\n        params.purchase_type = 3;\n      }\n      this.loading = true;\n      try {\n        const res = await getChargingReportTemplateList(formatParams(params));\n        // const res = {\n        //   retcode: 0,\n        //   message: 'success',\n        //   data: {\n        //     charging_report_template_list: [\n        //       {\n        //         id: 1,\n        //         crt_id: 'CRTID20040001',\n        //         crt_name: 'KKK',\n        //         generate_period: 1,\n        //         supplier_type: 1,\n        //         purchase_type: 2,\n        //         crt_status: 1,\n        //         supplier_qty: 100,\n        //         creator: 'bai.li@shopee.com',\n        //         ctime: 1585798588,\n        //         mtime: 1585798588\n        //       },\n        //       {\n        //         id: 2,\n        //         crt_id: 'CRTID20040001',\n        //         crt_name: 'KKK',\n        //         generate_period: 2,\n        //         supplier_type: 2,\n        //         purchase_type: 1,\n        //         crt_status: 2,\n        //         supplier_qty: 100,\n        //         creator: 'bai.li@shopee.com',\n        //         ctime: 1585798588,\n        //         mtime: 1585798588\n        //       },\n        //       {\n        //         id: 1,\n        //         crt_id: 'CRTID20040001',\n        //         crt_name: 'KKK',\n        //         generate_period: 3,\n        //         supplier_type: 2,\n        //         purchase_type: 2,\n        //         crt_status: 3,\n        //         supplier_qty: 100,\n        //         creator: 'bai.li@shopee.com',\n        //         ctime: 1585798588,\n        //         mtime: 1585798588\n        //       },\n        //       {\n        //         id: 1,\n        //         crt_id: 'CRTID20040001',\n        //         crt_name: 'KKK',\n        //         generate_period: 1,\n        //         supplier_type: 2,\n        //         purchase_type: 1,\n        //         crt_status: 2,\n        //         supplier_qty: 100,\n        //         creator: 'bai.li@shopee.com',\n        //         ctime: 1585798588,\n        //         mtime: 1585798588\n        //       },\n        //       {\n        //         id: 1,\n        //         crt_id: 'CRTID20040001',\n        //         crt_name: 'KKK',\n        //         generate_period: 1,\n        //         supplier_type: 2,\n        //         purchase_type: 1,\n        //         crt_status: 2,\n        //         supplier_qty: 100,\n        //         creator: 'bai.li@shopee.com',\n        //         ctime: 1585798588,\n        //         mtime: 1585798588\n        //       },\n        //       {\n        //         id: 1,\n        //         crt_id: 'CRTID20040001',\n        //         crt_name: 'KKK',\n        //         generate_period: 1,\n        //         supplier_type: 2,\n        //         purchase_type: 1,\n        //         crt_status: 2,\n        //         supplier_qty: 100,\n        //         creator: 'bai.li@shopee.com',\n        //         ctime: 1585798588,\n        //         mtime: 1585798588\n        //       },\n        //       {\n        //         id: 1,\n        //         crt_id: 'CRTID20040001',\n        //         crt_name: 'KKK',\n        //         generate_period: 1,\n        //         supplier_type: 2,\n        //         purchase_type: 1,\n        //         crt_status: 2,\n        //         supplier_qty: 100,\n        //         creator: 'bai.li@shopee.com',\n        //         ctime: 1585798588,\n        //         mtime: 1585798588\n        //       }\n        //     ],\n        //     total: 10\n        //   }\n        // };\n        if (res && res.retcode === 0) {\n          this.tableList = res.data.charging_report_template_list || [];\n          this.total = res.data.total || 0;\n          this.lastSearchForm = params;\n        } else {\n          this.$message({ type: 'error', message: res.info });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loading = false;\n      }\n    },\n    cacheSearchCondition(form) {\n      this.$store.commit('setActiveTab', {\n        module: moduleName,\n        tab: moduleName\n      });\n      this.$store.commit('setSearchForm', {\n        module: moduleName,\n        form: form || null,\n        field: 'field'\n      });\n    },\n    rowClick(row, column, event) {\n      this.cacheSearchCondition(this.lastSearchForm);\n      if (row.crt_status === 1) {\n        this.$router.push(`/admin/finance/crt/management/create/${row.crt_id}`);\n      } else {\n        this.$router.push(`/admin/finance/CRT/detail/${row.crt_id}`);\n      }\n    }\n  },\n  created() {\n    this.canOperate = hasPermission(Permission.CHARGING_REPORT_TEMPLATE_EDIT);\n    const cacheConditionObj = this.$store.getters.searchForm[moduleName];\n    if (cacheConditionObj && cacheConditionObj.field) {\n      const cacheCondition = cacheConditionObj.field;\n      this.pager.count = cacheCondition.count;\n      this.pager.page_no = cacheCondition.page_no;\n      [\n        'crt_id',\n        'crt_name',\n        'vendor_site_id',\n        'generate_period_list',\n        'crt_status_list',\n        'purchase_type',\n        'supplier_type',\n        'creator',\n        'region'\n      ].forEach(key => {\n        if (cacheCondition[key]) {\n          this.searchForm[key] = cacheCondition[key];\n        }\n      });\n    }\n    this.onSearch();\n  }\n};\n</script>\n\n<style scoped lang=\"scss\">\n@import \"~@/styles/variables.scss\";\n.crt-wrapper {\n  padding: 0 20px;\n  display: block;\n  .list-header-wrapper {\n    margin: 16px 0px;\n    .list-header-title {\n      font-size: 24px;\n      font-weight: normal;\n      color: $black;\n    }\n  }\n  .main-wrapper {\n    width: 100%;\n    padding: 0;\n  }\n  .pagination-center {\n    display: flex;\n    justify-content: center;\n    margin-top: 20px;\n  }\n  .status-span {\n    font-size: 12px;\n    display: inline-block;\n    padding: 2px;\n    word-break: nowrap;\n    border-radius: 2px;\n    &.green {\n      color: $green;\n      background-color: $green-bg;\n    }\n    &.orange {\n      color: $orange;\n      background-color: $orange-bg;\n    }\n    &.red {\n      color: $red;\n      background-color: $red-bg;\n    }\n  }\n  .action-row {\n    margin-bottom: 16px;\n  }\n  .text-right {\n    text-align: right;\n  }\n  .list-btn {\n    font-size: 14px;\n    width: auto;\n    min-width: 70px;\n    padding-left: 10px;\n    padding-right: 10px;\n  }\n  .warning-icon {\n    font-size: 12px;\n    color: $red;\n    vertical-align: middle;\n    margin: 0px 4px 1px 0;\n  }\n}\n</style>\n<style lang=\"scss\">\n@import \"~@/styles/common.scss\";\n.crt-popover-break-word {\n  word-break: break-word;\n  .icon-tips-wrapper{\n    text-align: left;\n    display: flex;\n  }\n}\n.crt-wrapper {\n  .el-date-editor.el-input,\n  .el-date-editor.el-input__inner {\n    width: auto;\n  }\n  .template-btn button {\n    border: none;\n  }\n  .template-btn .el-button-group .el-button:first-child:hover {\n      background: none;\n      cursor: auto;\n    }\n  .el-table {\n    .cell {\n      word-break: break-word;\n    }\n  }\n  .exportGroup-btn {\n    margin-right: 8px;\n    vertical-align: middle;\n    .el-button--primary {\n      background-color: #3d6ed1;\n      border-color: #3d6ed1;\n    }\n    .el-button--medium {\n      padding: 8px 12px;\n    }\n    .el-dropdown__caret-button {\n      padding: 8px 6px;\n    }\n  }\n  .el-autocomplete_width_100{\n    width: 100%;\n    .el-input--suffix{\n      .el-input__inner{\n        padding-right: 10px;\n      }\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/CRTList/version.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/CRTList/versionHistory.vue","messages":[{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"crt_id\" is not in camelCase.","line":34,"column":5,"nodeType":"Property","endLine":36,"endColumn":6}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-dialog\n    :visible.sync=\"dialogVisible\"\n    width=\"800px\"\n    lock-scroll\n    custom-class=\"pms-dialog crt-version-dialog\"\n    :title=\"$t('CRTVersionHistory')\"\n    @close=\"onClose\"\n  >\n    <section v-loading=\"loading\" class=\"log-item-wrapper pms-log-table\">\n      <el-table class=\"log-item log-table\" :data=\"tableList\">\n        <el-table-column :label=\"$t('CRTVersion')\" prop=\"crt_version\">\n          <template slot-scope=\"scope\">\n            <router-link class=\"link-text\" :to=\"`/admin/finance/CRT/version/${crt_id}?version=${scope.row.crt_version}`\">{{`V.${scope.row.crt_version}`}}</router-link>\n            <p v-if=\"scope.row.is_current\">{{$t('CRTVersionCurrentVersion')}}</p>\n          </template>\n        </el-table-column>\n        <el-table-column :label=\"$t('commonMtime')\" prop=\"modify_time\"></el-table-column>\n        <el-table-column :label=\"$t('CRTEffectiveTime')\" prop=\"effective_time\"></el-table-column>\n        <el-table-column :label=\"$t('commonOperator')\" prop=\"operator\"></el-table-column>\n      </el-table>\n    </section>\n    <section slot=\"footer\">\n      <el-button class=\"list-btn\" @click=\"onClose\">{{$t('commonOK')}}</el-button>\n    </section>\n  </el-dialog>\n</template>\n\n<script>\nimport { getCRTVersionHistoryList } from '@/api/CRT';\n\nexport default {\n  props: {\n    crt_id: {\n      required: true\n    },\n    visible: {\n      type: Boolean,\n      required: true,\n      default: false\n    }\n  },\n  data() {\n    return {\n      dialogVisible: false,\n      tableList: [],\n      loading: false\n    };\n  },\n  watch: {\n    visible(value) {\n      this.dialogVisible = value;\n      if (value) {\n        this.getVersionHistory();\n      }\n    }\n  },\n  methods: {\n    async getVersionHistory() {\n      try {\n        this.loading = true;\n        const params = {\n          crt_id: this.crt_id\n        };\n        const res = await getCRTVersionHistoryList(params);\n        if (res && res.retcode === 0) {\n          this.tableList = res.data.crt_version_list || [];\n        } else {\n          this.$message({ type: 'error', message: res.info });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loading = false;\n      }\n    },\n    onClose() {\n      this.$emit('close');\n    }\n  }\n};\n</script>\n<style lang=\"scss\">\n@import \"~@/styles/variables.scss\";\n@import \"~@/styles/common.scss\"; // ~@ = @ = 'src' webpack alias path\n.pms-dialog {\n  .el-dialog__body {\n    padding: 8px 24px 16px;\n  }\n}\n.pms-log-table {\n  .el-table {\n    .el-table__header-wrapper {\n      th {\n        height: 54px;\n        background-color: #f5f5f5;\n        font-size: 14px;\n        line-height: 1.5em;\n        font-weight: normal;\n        .cell {\n           word-break: break-word;\n        }\n\n      }\n    }\n    .el-table__body {\n      td {\n        height: 70px;\n        .cell{\n          word-break: break-word;\n        }\n      }\n    }\n  }\n}\n.crt-version-dialog{\n  .link-text{\n    color: $blue\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/constant/index.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/inboundRequest/MassOperateDialog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/inboundRequest/actionLog.vue","messages":[{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"request_id\" is not in camelCase.","line":117,"column":5,"nodeType":"Property","endLine":119,"endColumn":6}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-dialog\n    :visible.sync=\"dialogVisible\"\n    width=\"800px\"\n    lock-scroll\n    custom-class=\"pms-ele-ui pms-dialog\"\n    :title=\"$t('commonActionLog')\"\n    @close=\"onClose\"\n  >\n    <section v-loading=\"loading\" class=\"order-log\">\n      <el-row class=\"row-header\">\n        <el-col :span=\"1\">\n          <div class=\"empty-block\"></div>\n        </el-col>\n        <el-col :span=\"5\">{{$t('commonAction')}}</el-col>\n        <el-col :span=\"6\">{{$t('commonLogStatusAfterOperate')}}</el-col>\n        <el-col :span=\"6\">{{$t('commonLogOperatorOrOperationTime')}}</el-col>\n        <el-col :span=\"6\">{{$t('commonReason')}}</el-col>\n      </el-row>\n      <section class=\"row-body-wrapper\" v-if=\"Array.isArray(tableList) && tableList.length > 0\">\n        <el-row class=\"row-body\" :gutter=\"20\" v-for=\"(item, index) in tableList\" :key=\"index\">\n          <el-col :span=\"1\">\n            <i\n              class=\"el-icon-caret-bottom icon-caret\"\n              :class=\"{'show': item.isShowContent}\"\n              v-if=\"Array.isArray(item.content) && item.content.length\"\n              @click=\"toggleContent(item)\"\n            ></i>\n            <span class=\"empty-block\"></span>\n          </el-col>\n          <el-col :span=\"5\">{{formatAction(item.action)}}</el-col>\n          <el-col :span=\"6\">{{item.status}}</el-col>\n          <el-col\n            :span=\"6\"\n          >{{`${item.operator}/${moment(item.modify_time * 1000).format('YYYY-MM-DD HH:mm')}`}}</el-col>\n\n          <el-col :span=\"6\">{{item.remark|| '/'}}</el-col>\n          <div class=\"pms-clearfix\"></div>\n          <transition name=\"fade\">\n            <div v-if=\"item.isShowContent\" class=\"row-expand\">\n              <el-col :span=\"23\" :offset=\"1\">\n                <el-table :data=\"item.content\" border class=\"pms-ele-ui small-table\">\n                  <el-table-column :label=\"$t('commonLogModifyField')\" prop=\"field\"></el-table-column>\n                  <el-table-column :label=\"$t('commonSkuID')\" prop=\"sku_id\">\n                    <template slot-scope=\"scope\">{{scope.row.sku_id || '/'}}</template>\n                  </el-table-column>\n                  <el-table-column :label=\"$t('commonBefore')\" prop=\"before\"></el-table-column>\n                  <el-table-column :label=\"$t('commonAfter')\" prop=\"after\"></el-table-column>\n                </el-table>\n              </el-col>\n            </div>\n          </transition>\n        </el-row>\n      </section>\n      <section v-else class=\"row-body-wrapper\">\n        <NoData />\n      </section>\n    </section>\n    <section slot=\"footer\">\n      <el-pagination\n        small\n        layout=\"prev, pager, next\"\n        background\n        :total=\"total\"\n        :page-size=\"pager.count\"\n        @current-change=\"handleCurrentChange\"\n        class=\"pms-ele-ui pms-pagination pms-text-center\"\n      ></el-pagination>\n      <el-button class=\"list-btn\" @click=\"onClose\">{{$t('commonOK')}}</el-button>\n    </section>\n  </el-dialog>\n</template>\n\n<script>\nimport { getInboundRequestActionLog } from '@/api/FBS/inbound';\nimport NoData from '@/components/common/noData';\nimport moment from 'moment';\nconst actionList = [\n  {\n    value: 1,\n    label: 'Submit'\n  },\n  {\n    value: 2,\n    label: 'Re-Submit'\n  },\n  {\n    value: 3,\n    label: 'Approve'\n  },\n  {\n    value: 4,\n    label: 'Reject'\n  },\n  {\n    value: 5,\n    label: 'Cancel'\n  },\n  {\n    value: 6,\n    label: 'Expire'\n  },\n  {\n    value: 7,\n    label: 'Modify'\n  },\n  {\n    value: 8,\n    label: 'Ship'\n  }\n];\nexport default {\n  components: {\n    NoData\n  },\n  props: {\n    request_id: {\n      required: true\n    },\n    visible: {\n      type: Boolean,\n      required: true,\n      default: false\n    }\n  },\n  data() {\n    return {\n      pager: {\n        count: 10,\n        page_no: 1\n      },\n      total: 0,\n      dialogVisible: false,\n      tableList: [],\n      loading: false\n    };\n  },\n  watch: {\n    '$props.visible': {\n      handler(value) {\n        this.dialogVisible = value;\n        if (value) {\n          this.getActionLog();\n        }\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    moment,\n    toggleContent(item) {\n      item.isShowContent = !item.isShowContent;\n    },\n    handleCurrentChange(index) {\n      this.pager.page_no = index;\n      this.getActionLog();\n    },\n    formatAction(value) {\n      return (actionList.find(item => item.value === value) || { label: '' })\n        .label;\n    },\n    async getActionLog() {\n      try {\n        this.loading = true;\n        const params = {\n          ir_id: this.request_id,\n          ...this.pager\n        };\n        // const res = {\n        //   retcode: 0,\n        //   message: \"success\",\n        //   data: {\n        //     total: 1,\n        //     change_list: [\n        //       {\n        //         change_id: 1,\n        //         content: [\n        //           {\n        //             field: \"\",\n        //             before: \"\",\n        //             after: \"\"\n        //           }\n        //         ],\n        //         remark: \"\",\n        //         operator: \"a@shopee.com\",\n        //         modify_time: 123123123,\n        //         action: 1, // #1 Submit2 Resubmit3 Approve4: reject5: cancel,6: Expire7: Modify\n        //         status: \"Pending Approval\"\n        //       }\n        //     ]\n        //   }\n        // };\n        const res = await getInboundRequestActionLog(params);\n        if (res && res.retcode === 0) {\n          this.tableList = (res.data.change_list || []).map(item => ({\n            ...item,\n            isShowContent: false\n          }));\n          this.total = res.data.total || 0;\n        } else {\n          this.$message({ type: 'error', message: res.message || res.info });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loading = false;\n      }\n    },\n    onClose() {\n      this.$emit('close');\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n@import \"~@/styles/variables.scss\";\n.order-log {\n  .row-header {\n    background: $grey_bg;\n    align-items: center;\n    font-size: 12px;\n    font-weight: bold;\n    line-height: 1.2em;\n    padding: 16px 0;\n  }\n  .row-body-wrapper {\n    max-height: 400px;\n    overflow-x: hidden;\n    overflow-y: auto;\n  }\n  .row-body {\n    padding: 16px 0;\n    line-height: 1.2em;\n    align-items: center;\n    border-bottom: 1px solid $grey_bg;\n    font-size: 14px;\n    .icon-caret {\n      color: $blue;\n      font-size: 16px;\n      cursor: pointer;\n      transition: all 0.3s ease-in;\n      &.show {\n        transform: rotate(180deg);\n      }\n    }\n  }\n  .row-expand {\n    margin-top: 16px;\n  }\n  .empty-block {\n    display: block;\n    width: 1px;\n    height: 1px;\n  }\n}\n</style>\n<style lang=\"scss\">\n@import \"~@/styles/common.scss\"; // ~@ = @ = 'src' webpack alias path\n.pms-dialog {\n  .el-dialog__body {\n    padding: 8px 24px 16px;\n  }\n}\n.pms-ele-ui {\n  &.small-table {\n    th {\n      background-color: #ebebeb;\n      color: $black_light_one;\n      font-size: 12px;\n      font-weight: blod;\n      padding: 4px 0;\n    }\n    td {\n      font-size: 12px;\n      padding: 4px 0;\n      color: $black;\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/inboundRequest/addSkuDialog.vue","messages":[{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"shop_id\" is not in camelCase.","line":121,"column":5,"nodeType":"Property","endLine":123,"endColumn":6}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-dialog\n    :visible.sync=\"dialogVisible\"\n    width=\"1200px\"\n    :close-on-click-modal=\"false\"\n    :close-on-press-escape=\"false\"\n    lock-scroll\n    custom-class=\"pms-dialog pms-ele-ui pms-ui fbs-createShopWhiteList-dialog\"\n    :title=\"$t('FBSAddSku')\"\n    @close=\"onClose\"\n  >\n    <section>\n      <el-row :gutter=\"40\">\n        <el-col :span=\"13\" class=\"search-shop-block\">\n          <el-input v-model=\"searchText\" :placeholder=\"$t('FBSSearchSkuPlaceholder')\">\n            <i slot=\"suffix\" class=\"el-icon-search search-icon\" @click=\"handleCurrentChange(1)\"></i>\n          </el-input>\n          <div class=\"pms-text-right mt24\">\n            <el-button\n              class=\"list-btn add-selected-btn\"\n              :disabled=\"!selection.length\"\n              @click=\"onAddAllSelected\"\n            >{{$t('FBSAddSelected')}} >></el-button>\n          </div>\n          <el-table\n            border\n            :data=\"searchSkuList\"\n            class=\"search-shop-table\"\n            v-loading=\"loadingSearch\"\n            height=\"450px\"\n            @selection-change=\"onChangeSelection\"\n          >\n            <el-table-column type=\"selection\" width=\"55px\" :selectable=\"handleSelectable\"></el-table-column>\n            <el-table-column :label=\"$t('commonSkuID')\" prop=\"sku_id\"></el-table-column>\n            <el-table-column :label=\"$t('commonSkuName')\" prop=\"sku_name\"></el-table-column>\n            <el-table-column :label=\"$t('commonShopID')\" prop=\"shop_id\"></el-table-column>\n            <el-table-column :label=\"$t('commonShopName')\" prop=\"shop_name\"></el-table-column>\n            <el-table-column :label=\"$t('commonStatus')\" prop=\"sku_status\" width=\"100px\">\n              <template slot-scope=\"scope\">{{formatSkuStatus(scope.row.sku_status)}}</template>\n            </el-table-column>\n            <el-table-column :label=\"$t('commonAction')\" width=\"80px\">\n              <template slot-scope=\"scope\">\n                <el-button\n                  type=\"text\"\n                  class=\"link-btn\"\n                  :disabled=\"scope.row.disabled\"\n                  @click=\"onAddSku(scope.row)\"\n                >{{scope.row.disabled ? $t('FBSAdded'): $t('FBSAdd') + ' >'}}</el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n          <section class=\"pms-text-center mt16\">\n            <el-pagination\n              small\n              layout=\"sizes, prev, pager, next\"\n              background\n              :total=\"total\"\n              :page-size=\"pager.count\"\n              @size-change=\"handleSizeChange\"\n              @current-change=\"handleCurrentChange\"\n              class=\"pms-ele-ui pms-pagination\"\n            >\n              <span\n                class=\"pagination-info\"\n              >{{$t('commonPagination', { firstItem: pager.count * (pager.page_no - 1) + 1, lastItem: pager.count * (pager.page_no - 1) + searchSkuList.length, total })}}</span>\n            </el-pagination>\n          </section>\n        </el-col>\n        <el-col :span=\"11\" class=\"search-shop-block\">\n          <h5 class=\"shop-title\">{{`${$t('FBSSkuAdded')} (${allAddSkuList.length})`}}</h5>\n          <el-table border :data=\"addSkuList\" height=\"500px\">\n            <el-table-column :label=\"$t('commonSkuID')\" prop=\"sku_id\"></el-table-column>\n            <el-table-column :label=\"$t('commonSkuName')\" prop=\"sku_name\"></el-table-column>\n            <el-table-column :label=\"$t('commonAction')\" width=\"80px\">\n              <template slot-scope=\"scope\">\n                <el-button\n                  type=\"text\"\n                  class=\"link-btn\"\n                  @click=\"onRemoveShop(scope.row, scope.$index)\"\n                >{{$t('commonRemove')}}</el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n          <section class=\"pms-text-center mt16\">\n            <el-pagination\n              small\n              layout=\"sizes, prev, pager, next\"\n              background\n              :total=\"allAddSkuList.length\"\n              :page-size=\"pagerAdd.count\"\n              @size-change=\"handleAddSizeChange\"\n              @current-change=\"handleAddCurrentChange\"\n              class=\"pms-ele-ui pms-pagination\"\n            >\n              <span\n                class=\"pagination-info\"\n              >{{$t('commonPagination', { firstItem: pagerAdd.count * (pagerAdd.page_no - 1) + 1, lastItem: pagerAdd.count * (pagerAdd.page_no - 1) + allAddSkuList.length, total: allAddSkuList.length})}}</span>\n            </el-pagination>\n          </section>\n        </el-col>\n      </el-row>\n    </section>\n    <section slot=\"footer\">\n      <el-button class=\"list-btn white-grey\" @click=\"onClose\">{{$t('commonCancel')}}</el-button>\n      <el-button\n        class=\"list-btn\"\n        :loading=\"loadingConfirm\"\n        @click=\"onConfirm\"\n      >{{$t('commonConfirm')}}</el-button>\n    </section>\n  </el-dialog>\n</template>\n\n<script>\nimport moment from 'moment';\nimport { searchSkuInFBS } from '@/api/FBS/inbound';\nimport { FESKUStatus } from '@/utils/constant';\n\nexport default {\n  props: {\n    shop_id: {\n      required: true\n    },\n    warehouse: {\n      type: String,\n      default: ''\n    },\n    visible: {\n      type: Boolean,\n      required: true,\n      default: false\n    }\n  },\n  data() {\n    return {\n      searchText: '',\n      searchSkuList: [],\n      total: 0,\n      addSkuList: [],\n      selection: [],\n      pager: {\n        count: 10,\n        page_no: 1\n      },\n      allAddSkuList: [],\n      pagerAdd: {\n        count: 10,\n        page_no: 1\n      },\n      dialogVisible: false,\n      loadingSearch: false,\n      loadingConfirm: false\n    };\n  },\n  watch: {\n    visible: {\n      handler(value) {\n        this.dialogVisible = value;\n        if (value) {\n          this.onSearch();\n        } else {\n          this.clearData();\n        }\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    moment,\n    clearData() {\n      this.searchText = '';\n      this.searchSkuList = [];\n      this.addSkuList = [];\n      this.allAddSkuList = [];\n      this.selection = [];\n      this.total = 0;\n      this.pager = {\n        count: 10,\n        page_no: 1\n      };\n      this.pagerAdd = {\n        count: 10,\n        page_no: 1\n      };\n    },\n    onConfirm() {\n      this.$emit('addSku', this.allAddSkuList);\n      this.onClose();\n    },\n    handleSelectable(row) {\n      return !row.disabled;\n    },\n    onAddAllSelected() {\n      if (this.selection.length < 1) return;\n      this.selection.forEach(item => { item.disabled = true; });\n      const allSkuIds = this.allAddSkuList.map(item => item.sku_id);\n      const noRepeatSelection = this.selection.filter(item => !allSkuIds.includes(item.sku_id));\n      this.allAddSkuList = [...noRepeatSelection, ...this.allAddSkuList];\n      this.pagingSkuList();\n    },\n    onChangeSelection(list) {\n      this.selection = list;\n    },\n    formatSearchParams() {\n      const temp = this.searchText.split(/[\\n\\s+,，；;]/g);\n      for (let i = 0; i < temp.length; i++) {\n        if (temp[i] === '') {\n          // 删除数组中空值\n          temp.splice(i, 1);\n          i--;\n        }\n      }\n      return {\n        sku_ids: temp\n      };\n    },\n    async onSearch() {\n      try {\n        this.loadingSearch = true;\n        let params = {\n          shop_id: this.shop_id,\n          warehouse: this.warehouse,\n          ...this.pager\n        };\n        if (String(this.searchText).trim()) {\n          const extra = this.formatSearchParams(this.searchText);\n          params = { ...params, ...extra };\n        }\n        const res = await searchSkuInFBS(params);\n        if (res && res.retcode === 0) {\n          const addSkuIDList = this.allAddSkuList.map(item => item.sku_id);\n          this.searchSkuList = (res.data.sku_list || []).map(item => {\n            return Object.assign({}, item, {\n              disabled: addSkuIDList.includes(item.sku_id) || item.sku_status !== 1 || item.fbs_status !== 1\n            });\n          });\n          this.total = res.data.total || 0;\n        } else {\n          this.$message({ type: 'error', message: res.info || res.message });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loadingSearch = false;\n      }\n    },\n    onRemoveShop(row, index) {\n      this.addSkuList.splice(index, 1);\n      // remove item in allAddSkuList\n      const allSkuIds = this.allAddSkuList.map(item => item.sku_id);\n      const number = allSkuIds.indexOf(row.sku_id);\n      this.allAddSkuList.splice(number, 1);\n\n      const target = this.searchSkuList.find(\n        item => item.sku_id === row.sku_id\n      );\n      if (target) {\n        target.disabled = false;\n      }\n    },\n    onAddSku(row) {\n      if (row.disabled) return;\n      this.allAddSkuList.splice(0, 0, row);\n      row.disabled = true;\n      this.pagingSkuList();\n    },\n\n    handleSizeChange(count) {\n      this.pager.count = count;\n      this.onSearch();\n    },\n    handleCurrentChange(page_no) {\n      this.pager.page_no = page_no;\n      this.onSearch();\n    },\n    handleAddSizeChange(count) {\n      this.pagerAdd.count = count;\n      this.pagingSkuList();\n    },\n    handleAddCurrentChange(page_no) {\n      this.pagerAdd.page_no = page_no;\n      this.pagingSkuList();\n    },\n    pagingSkuList() {\n      const start = (this.pagerAdd.page_no - 1) * this.pagerAdd.count;\n      const end = this.pagerAdd.page_no * this.pagerAdd.count;\n      this.addSkuList = this.allAddSkuList.slice(start, end);\n    },\n    formatSkuStatus(value) {\n      return (FESKUStatus.find(item => item.value === value) || { label: '' })\n        .label;\n    },\n    onClose() {\n      this.$emit('close');\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n@import \"~@/styles/variables.scss\";\n.step-wrapper {\n  text-align: center;\n  margin: 24px 0;\n  .step-ul {\n    margin: auto;\n    display: inline-block;\n    .step-li {\n      color: $grey;\n      vertical-align: middle;\n      font-weight: bold;\n      .step-number {\n        width: 20px;\n        height: 20px;\n        line-height: 18px;\n        font-size: 12px;\n        border-radius: 100%;\n        text-align: center;\n        display: inline-block;\n        border: 1px solid $grey;\n        color: inherit;\n        background-color: inherit;\n        margin-right: 8px;\n        border: 1px solid inherit;\n      }\n      .step-label {\n        color: $grey;\n      }\n      .step-line {\n        display: inline-block;\n        width: 110px;\n        height: 1px;\n        background-color: $grey;\n        margin: 0 16px;\n        vertical-align: middle;\n      }\n      &.is-active {\n        .step-number {\n          border-color: $blue;\n          color: #fff;\n          background-color: $blue;\n        }\n        .step-label {\n          color: $black;\n        }\n      }\n    }\n  }\n}\n.search-shop-block {\n  .shop-title {\n    font-size: 14px;\n    color: $black;\n    line-height: 22px;\n    margin-bottom: 16px;\n    font-weight: normal;\n  }\n  .search-shop-table {\n    margin-top: 16px;\n  }\n  .search-icon {\n    font-size: 16px;\n    position: relative;\n    top: 50%;\n    right: 4px;\n    transform: translateY(-50%);\n    cursor: pointer;\n  }\n  .add-selected-btn {\n    padding: 2px 4px;\n  }\n}\n.mass-fill-wrapper {\n  padding: 8px 14px;\n  border: 1px solid lighten($color: $grey, $amount: 10);\n  background-color: rgba(241, 242, 245, 0.4);\n  margin-bottom: 12px;\n  .mass-fill-col {\n    display: flex;\n    align-items: center;\n    padding-right: 16px;\n    .mass-fill-label {\n      font-size: 12px;\n      width: 120px;\n      display: inline-block;\n      line-height: 1.2em;\n      word-break: break-word;\n    }\n    .fill-btn {\n      font-size: 12px;\n      white-space: pre-line;\n    }\n  }\n  .mass-fill-btn-col {\n    padding-right: 0;\n    padding-left: 16px;\n  }\n}\n.error-box {\n  margin-top: 8px;\n  .error-tips {\n    color: $red;\n    font-size: 12px;\n  }\n}\n.inbound-limit-tips {\n  background: #fff6e1;\n  border-radius: 4px;\n  border-radius: 4px;\n  padding: 16px;\n  margin-bottom: 16px;\n  display: flex;\n  .limit-icon {\n    width: 28px;\n    .limit-icon-svg {\n      width: 24px;\n      height: 24px;\n    }\n  }\n  .limit-text {\n    flex: 1;\n    padding-left: 8px;\n    .limit-title {\n      color: $black;\n      font-size: 14px;\n      margin-bottom: 8px;\n    }\n    .limit-content {\n      text-align: left;\n      font-size: 14px;\n      font-weight: normal;\n      line-height: 1.5em;\n    }\n  }\n}\n</style>\n<style lang=\"scss\">\n@import \"~@/styles/common.scss\"; // ~@ = @ = 'src' webpack alias path\n.pms-dialog {\n  .el-dialog__body {\n    padding: 8px 24px 16px;\n  }\n}\n.fbs-createShopWhiteList-dialog {\n  .error-input {\n    .el-input__inner {\n      border-color: $red;\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/inboundRequest/common.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/inboundRequest/component/cartonVariation.vue","messages":[{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":33,"column":7,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":33,"endColumn":8,"fix":{"range":[1133,1134],"text":""}},{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":145,"column":10,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":145,"endColumn":11,"fix":{"range":[3693,3694],"text":""}},{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":148,"column":10,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":148,"endColumn":11,"fix":{"range":[3714,3715],"text":""}}],"errorCount":3,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"<template>\n  <div class=\"fbs-single-carton-variation\">\n    <el-dialog class=\"pms-ui\" :width=\"isSingle ? '700px' : '1050px'\"\n      :title=\"dialogTitle\" :visible.sync=\"dialogVisible\" @close=\"onCloseDialog\">\n      <p><span class=\"number-strong\">{{valueFormat(total)}}</span> {{$t('Variations')}}, <span class=\"number-strong\">{{valueFormat(pcs)}}</span> {{$t('commonPcs')}}</p>\n      <section class=\"fbs-caton-sku-table pms-ui\" v-loading=\"loading\">\n        <list-view\n          :dataList=\"list\"\n          :tableSchema=\"tableSchema\"\n        />\n        <el-pagination\n        background\n        layout=\"prev, pager, next\"\n        samll\n        :current-page=\"pager.page_no\"\n        :page-sizes=\"[10, 20, 50, 100]\"\n        :total.sync=\"total\"\n        :page-size=\"pager.count\"\n        @current-change=\"handleChangePage\"\n      ></el-pagination>\n    </section>\n    </el-dialog>\n  </div>\n</template>\n<script>\nimport { getSingleCartonSku, getInboundCartonSku } from '@/api/carton';\nimport { formatValue } from '@/utils/formatParams';\nimport ListView from '@/components/ApproveList/list';\nexport default {\n  components: {\n    ListView\n  },\n  data () {\n    return {\n      dialogVisible: false,\n      loading: false,\n      list: [],\n      cartonList: [],\n      pager: {\n        count: 10,\n        page_no: 1\n      },\n      total: 0,\n      pcs: 0\n    };\n  },\n  props: {\n    visible: {\n      type: Boolean,\n      require: true\n    },\n    cartonSeq: {\n      type: Number\n    },\n    inboundId: {\n      type: String\n    },\n    isSingle: {\n      type: Boolean\n    }\n  },\n  computed: {\n    tableSchema() {\n      const schema = [\n        {\n          field: 'sku_id',\n          label: this.$t('commonSkuID'),\n          columnKey: 'sku_id',\n          width: 120,\n          align: 'left',\n          fixed: 'left'\n        },\n        {\n          field: 'sku_name',\n          label: this.$t('commonSkuName'),\n          columnKey: 'sku_name',\n          width: 160,\n          align: 'left',\n          fixed: 'left'\n        },\n        {\n          field: 'fulfillment_sku_name',\n          columnKey: 'fulfillment_sku_name',\n          width: 160,\n          label: this.$t('FBSFulfillmentSkuName'),\n          align: 'left',\n          fixed: 'left'\n        },\n        {\n          field: 'approved_qty',\n          columnKey: 'approved_qty',\n          label: this.$t('approvedQty'),\n          align: 'left',\n          fixed: 'left'\n        }\n      ];\n      if (this.isSingle) {\n        schema.push({\n          field: 'carton_qty',\n          columnKey: 'carton_qty',\n          label: `${this.$t('commonCarton')} #${this.cartonSeq || 0}`,\n          align: 'left',\n          width: '85'\n        });\n      } else {\n        this.cartonList.forEach(carton => {\n          const cartonSchema = {\n            field: carton.toString(),\n            caolumnKey: `carton_${carton}`,\n            label: `${this.$t('commonCarton')} #${carton || 0}`,\n            align: 'left',\n            width: '85',\n            render: (schema, row) => {\n              return row[carton.toString()] || '0';\n            }\n          };\n          schema.push(cartonSchema);\n        });\n      }\n      return schema;\n    },\n    dialogTitle() {\n      return this.isSingle ? `${this.$t('commonCarton')}#${this.cartonSeq || 0} ${this.$t('Variations')}` : this.$t('fbsVariationDetail');\n    }\n  },\n  watch: {\n    visible: {\n      handler(nv) {\n        this.dialogVisible = nv;\n        if (!nv) {\n          this.pager = {\n            page_no: 1,\n            count: 10\n          };\n          this.cartonList = [];\n          this.list = [];\n          this.total = 0;\n          this.pcs = 0;\n        } else {\n          this.getList();\n        }\n      }\n    }\n  },\n  created () {\n\n  },\n  mounted () {\n\n  },\n  methods: {\n    onCloseDialog() {\n      this.$emit('close');\n    },\n    async getList() {\n      const func = this.isSingle ? getSingleCartonSku : getInboundCartonSku;\n      const params = {\n        inbound_id: this.inboundId,\n        ...this.pager\n      };\n      if (this.isSingle) {\n        params.carton_seq = this.cartonSeq;\n      }\n      this.loading = true;\n      const {retcode, info, data} = await func(params);\n      this.loading = false;\n      try {\n        if (retcode === 0) {\n          this.list = data.sku_list || [];\n          this.total = data.total || 0;\n          this.pcs = data.pcs || 0;\n          this.cartonList = data.carton_seqs || [];\n          if (!this.isSingle) {\n            this.list = this.list.map(item => ({...item, ...item.carton_map}));\n          }\n        } else {\n          this.$message.error(info);\n        }\n      } catch (e) {\n        this.$message.error('Error');\n      }\n    },\n    valueFormat(val) {\n      return formatValue(val);\n    },\n    handleSizeChange(value) {\n      this.pager.count = value;\n      this.getList();\n    },\n    handleChangePage(value) {\n      this.pager.page_no = value;\n      this.getList();\n    }\n  }\n};\n</script>\n\n<style lang='scss' scoped>\n  .fbs-single-carton-variation {\n    .number-strong {\n      color: #EE4D2D;\n    }\n    .fbs-caton-sku-table {\n      margin-top: 16px;\n      text-align: center;\n    }\n  }\n</style>\n<style lang='scss'>\n  .fbs-single-carton-variation {\n    .el-dialog__body {\n      padding: 14px 20px 30px;\n    }\n    .fbs-caton-sku-table {\n      .el-table {\n        margin-bottom: 20px;\n      }\n    }\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/inboundRequest/component/packedCarton.vue","messages":[{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":70,"column":7,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":70,"endColumn":8,"fix":{"range":[2009,2010],"text":""}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div class=\"fbs-inbound-packed-carton\">\n    <section class=\"fbs-caton-table pms-ui\" v-if=\"total !== 0\">\n      <div class=\"section-title\">\n        <h3>{{$t('FBSPackedCarton')}}</h3>\n        <el-button @click=\"onAllVariation\" class=\"list-btn white-blue\">\n          {{$t('fbsVariationDetail')}}\n        </el-button>\n    </div>\n      <list-view\n        :dataList=\"list\"\n        :tableSchema=\"tableSchema\"\n      />\n      <el-pagination\n      background\n      layout=\"sizes, prev, pager, next\"\n      :current-page=\"pager.page_no\"\n      :page-sizes=\"[10, 20, 50, 100]\"\n      :total.sync=\"total\"\n      :page-size=\"pager.count\"\n      @size-change=\"handleSizeChange\"\n      @current-change=\"handleChangePage\"\n    ></el-pagination>\n    </section>\n    <section class=\"fbs-carton-shipment-status\" v-if=\"displayShipmentList.length\">\n      <div class=\"section-title\">\n        <h3>{{$t('commonSeaShipmentStatus')}}</h3>\n      </div>\n      <tracking-history\n      :list=\"displayShipmentList\"\n      className=\"fbs-inbound-carton-shipment\"\n      :title=\"$t('commonSeaShipmentStatus')\"/>\n    </section>\n    <remark-dialog\n    :visible=\"remarkVisible\"\n    :inbound_id=\"inboundId\"\n    :carton_seq=\"currentInboudSeq\"\n    @close=\"remarkVisible = false\"\n    />\n    <carton-variation\n      :visible=\"variationVisible\"\n      :inboundId=\"inboundId\"\n      :cartonSeq=\"currentInboudSeq\"\n      :isSingle=\"isSingle\"\n      @close=\"variationVisible = false\"\n    />\n  </div>\n</template>\n\n<script>\nimport ListView from '@/components/ApproveList/list';\nimport remarkDialog from '@/components/Dialog/remarkLogDialog';\nimport { getFBSInboundPackedInfo } from '@/api/carton';\nimport cartonVariation from './cartonVariation';\nimport TrackingHistory from '@/components/trackingHistory';\nimport { InboundShipmentStatus } from '../../constant';\nexport default {\n  components: {\n    ListView,\n    remarkDialog,\n    cartonVariation,\n    TrackingHistory\n  },\n  props: {\n    inboundId: {\n      type: String,\n      require: true\n    }\n  },\n  data () {\n    return {\n      list: [{}],\n      shipmentLog: [\n        {\n        status: 1,\n        ship_date_str: '2021-03-20',\n        remark: 'dshfajkshfiu'\n      },\n      {\n        status: 2,\n        ship_date_str: '2021-03-21',\n        remark: 'dshfajkshfiu'\n      },\n      {\n        status: 3,\n        ship_date_str: '2021-03-24',\n        remark: 'dshfajkshfiu'\n      },\n      {\n        status: 5,\n        ship_date_str: '2021-03-25',\n        remark: 'dshfajkshfiu'\n      }],\n      total: 0,\n      pager: {\n        count: 10,\n        page_no: 1\n      },\n      remarkVisible: false,\n      variationVisible: false,\n      isSingle: false,\n      currentInboudSeq: 0\n    };\n  },\n  computed: {\n    tableSchema() {\n      return [\n        {\n          label: '',\n          columnKey: 'carton_seq',\n          field: 'carton_seq',\n          align: 'left',\n          render: (schema, row) => {\n            return `${this.$t('commonCarton')} #${row.carton_seq}`;\n          }\n        },\n        {\n          label: this.$t('FBSCartonNumber'),\n          align: 'left',\n          field: 'carton_number',\n          columnKey: 'carton_number'\n        },\n        {\n          label: this.$t('FBSDimensionTitle'),\n          field: 'width',\n          align: 'left',\n          render: (schema, row) => {\n            return `${row.length} * ${row.width} * ${row.height}`; // 长宽高\n          }\n        },\n        {\n          label: this.$t('FBSWeightTitle'),\n          align: 'left',\n          field: 'weight',\n          columnKey: 'weight'\n        },\n        {\n          label: this.$t('commonRemark'),\n          align: 'left',\n          field: 'remark',\n          columnKey: 'remark',\n          render: (schema, row) => {\n            return row.remark || '-';\n          }\n        },\n        {\n          label: this.$t('commonAction'),\n          columnKey: 'action',\n          width: 180,\n          align: 'left',\n          render: (schema, row, index, h) => {\n            return [\n              'div',\n              {},\n              [\n                {\n                  render: h(\n                    'el-button',\n                    {\n                      props: {type: 'text'},\n                      on: { click: () => this.onRemarkLog(row) }\n                    },\n                    this.$t('commonRemarkLog')\n                  )\n                },\n                {\n                  render: h(\n                    'el-button',\n                    {\n                      props: {type: 'text'},\n                      on: { click: () => this.onCatonVariation(row)}\n                    },\n                    this.$t('Variations')\n                  )\n                }\n              ].map(item => item.render)\n            ];\n          }\n        }\n      ];\n    },\n    displayShipmentList() {\n      const list = [];\n      const _this = this;\n      this.shipmentLog.forEach(item => {\n        const statusItem = InboundShipmentStatus.find(status => status.value === item.status) || {label: 'commonUnknown', des: 'commonUnknown'};\n        const log = {\n          date: item.ship_date_str,\n          status: this.$t(statusItem.label),\n          contents: [\n            { value: _this.$t(statusItem.des), key: 'status' + item.status + item.ship_date_str},\n            { label: _this.$t('commonRemark'), value: item.remark, key: 'remark' + item.status + item.ship_date_str}\n          ]\n        };\n        list.push(log);\n      });\n      if (list.length) {\n        list[0].statusType = 'success';\n      }\n      return list;\n    }\n  },\n  watch: {\n    'inboundId': {\n      handler(nv) {\n        if (nv) {\n          this.init();\n        }\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    init() {\n      this.pager = {\n        count: 10,\n        page_no: 1\n      };\n      this.total = 0;\n      this.list = [];\n      this.shipmentLog = [];\n      this.getList(true);\n    },\n    onRemarkLog(row) {\n      this.currentInboudSeq = row.carton_seq;\n      this.remarkVisible = true;\n    },\n    onCatonVariation(row) {\n      this.isSingle = true;\n      this.currentInboudSeq = row.carton_seq;\n      this.variationVisible = true;\n    },\n    onAllVariation() {\n      this.isSingle = false;\n      this.variationVisible = true;\n    },\n    handleSizeChange(count) {\n      this.pager.count = count;\n      this.getList(false);\n    },\n    handleChangePage(page_no) {\n      this.pager.page_no = page_no;\n      this.getList(false);\n    },\n    async getList(needShipment) {\n      const params = {\n        inbound_id: this.inboundId,\n        ignore_shipment: needShipment ? 0 : 1,\n        ...this.pager\n      };\n      const {data, info, retcode} = await getFBSInboundPackedInfo(params);\n      try {\n        if (retcode === 0) {\n          this.list = data.carton_list || [];\n          this.total = data.total || 0;\n          if (needShipment) {\n            this.shipmentLog = data.shipment_log || [];\n          }\n        } else {\n          this.$message.error(info);\n        }\n      } catch (e) {\n        this.$$message.error(e);\n      }\n    }\n  }\n};\n</script>\n\n<style lang='scss' scoped>\n  .fbs-inbound-packed-carton {\n    .section-title {\n      margin-bottom: 24px;\n      display: flex;\n      justify-content: space-between;\n      line-height: 34px;\n    }\n    .fbs-caton-table {\n      text-align: center;\n      /deep/ .el-pagination {\n        margin-top: 20px;\n      }\n      margin-bottom: 37px;\n    }\n  }\n</style>\n<style lang='scss'>\n.fbs-inbound-carton-shipment {\n  &.pms-tracking-history-style {\n    .title {\n      display: none;\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/inboundRequest/create.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/inboundRequest/detail.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/inboundRequest/inventoryHealthOverview.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/inboundRequest/list.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":21,"column":44,"nodeType":"VIdentifier","messageId":"deprecated","endLine":21,"endColumn":50}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-container class=\"FBS-inbound-request-wrapper pms-ele-ui pms-ui\" v-loading=\"loadingMassUpload\">\n    <section class=\"list-header-wrapper\">\n      <div class=\"list-create-btn\" v-if=\"canProcess\">\n        <el-button class=\"list-btn\" @click=\"onCreateRequest\">\n          <i class=\"el-icon-plus\"></i>\n          <span>{{$t('commonNewRequest')}}</span>\n        </el-button>\n      </div>\n\n      <el-tabs class=\"pms-ele-ui\" tab-position=\"bottom\" v-model=\"activeTab\" @tab-click=\"onTabClick\">\n        <el-tab-pane\n          v-for=\"item in headerTabs\"\n          :key=\"item.value\"\n          :label=\"$t(item.label)\"\n          :name=\"item.value\"\n        ></el-tab-pane>\n      </el-tabs>\n    </section>\n    <section class=\"main-wrapper\">\n      <el-form :model=\"searchForm\" @submit.native.prevent=\"onResetPageNoSearch\">\n        <el-button v-show=\"false\" native-type=\"submit\"></el-button>\n        <el-row>\n          <el-col\n            v-for=\"item in searchSchema\"\n            :key=\"item.field\"\n            :span=\"item.width\"\n            :offset=\"item.offset || 0\"\n          >\n            <el-form-item\n              :label-width=\"item.labelWidth || '130px'\"\n              :class=\"item.class || ''\"\n              :label=\"item.label\"\n            >\n              <template v-if=\"item.isSelfDefineLabel\" slot=\"label\">\n                <span>{{$t(item.label)}}</span>\n                <el-popover popper-class=\"break-word pms-ele-ui fbs-inbound-request\" placement=\"top\" width=\"400\" trigger=\"hover\">\n                  <div class=\"pms-text-left\">{{$t('FBSPleaseFilterRegionFirst')}}</div>\n                  <svg-icon slot=\"reference\" iconClass=\"question-circle\" class=\"question-icon\"></svg-icon>\n                </el-popover>\n              </template>\n              <el-input\n                v-if=\"item.type === 'input'\"\n                v-model=\"searchForm[item.field]\"\n                @change=\"onResetPageNoSearch\"\n              ></el-input>\n              <el-select\n                v-if=\"item.type === 'select'\"\n                :multiple=\"item.multiple\"\n                v-model=\"searchForm[item.field]\"\n                :disabled=\"item.disabled || false\"\n                :collapse-tags=\"true\"\n                @change=\"(value) => onChangeSelect(value, item.field)\"\n              >\n                <el-option\n                  v-for=\"option in item.options || []\"\n                  :key=\"option.value\"\n                  :label=\"option.label\"\n                  :value=\"option.value\"\n                ></el-option>\n              </el-select>\n              <el-select\n                v-if=\"item.type === 'shopIDName'\"\n                clearable\n                filterable\n                remote\n                :remote-method=\"getShopIdName\"\n                v-model=\"searchForm[item.field]\"\n                :disabled=\"item.disabled || false\"\n                @change=\"onResetPageNoSearch\"\n              >\n                <el-option\n                  v-for=\"option in shopIDSelectOptions\"\n                  :key=\"option.value\"\n                  :label=\"option.label\"\n                  :value=\"option.value\"\n                ></el-option>\n              </el-select>\n              <div v-if=\"item.type === 'date'\">\n                <el-date-picker\n                 :disabled=\"item.disabled || false\"\n                  @change=\"onResetPageNoSearch\"\n                  format=\"yyyy-MM-dd HH:mm\"\n                  value-format=\"yyyy-MM-dd HH:mm:ss\"\n                  class=\"list-date-picker-width\"\n                  popper-class=\"pms-new-ui fbs-inbound-time-pick-popper\"\n                  v-model=\"searchForm[item.field_start]\"\n                  type=\"datetime\"\n                ></el-date-picker>\n                <span>-</span>\n                <el-date-picker\n                  :disabled=\"item.disabled || false\"\n                  @change=\"onResetPageNoSearch\"\n                  format=\"yyyy-MM-dd HH:mm\"\n                  value-format=\"yyyy-MM-dd HH:mm:ss\"\n                  default-time=\"23:59:59\"\n                  class=\"list-date-picker-width\"\n                  popper-class=\"pms-new-ui fbs-inbound-time-pick-popper\"\n                  v-model=\"searchForm[item.field_end]\"\n                  type=\"datetime\"\n                ></el-date-picker>\n              </div>\n              <SBSVendorIdForm\n                v-if=\"item.type === 'sbsVendorId'\"\n                merchantType=\"SELLER\"\n                @getSBSVendorID=\"handleSBSVendorIDSelect\">\n              </SBSVendorIdForm>\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row type=\"flex\" justify=\"space-between\" class=\"mb16\">\n          <el-col :span=\"20\">\n            <el-button\n              v-if=\"isMyPA && canApprove\"\n              class=\"list-btn white-green\"\n              @click=\"onMassApproveOrReject('approve')\"\n            >{{$t('commonMassApprove')}}</el-button>\n            <el-button\n              v-if=\"isMyPA && canApprove\"\n              class=\"list-btn white-red\"\n              @click=\"onMassApproveOrReject('reject')\"\n            >{{$t('commonMassReject')}}</el-button>\n\n            <el-dropdown\n              :loading=\"loadingExport\"\n              class=\"exportGroup-btn white-blue mr8\"\n              split-button\n              type=\"primary\"\n              @command=\"onExportContentClick\"\n            >\n              <el-popover popper-class=\"break-word\" placement=\"top\" width=\"270\" trigger=\"hover\">\n                <div class=\"pms-text-left\">{{$t('FBSInboundExportTips') + ': 50'}}</div>\n                <span slot=\"reference\">{{$t('commonExport')}}</span>\n              </el-popover>\n              <el-dropdown-menu slot=\"dropdown\" class=\"exportGrop-btn\">\n                <el-dropdown-item :command=\"btn\" v-for=\"btn in exportBtns\" :key=\"btn.text\">\n                  <span :class=\"{'is-disabled': checkedRows.length > 50 }\" v-if=\"!btn.params\">\n                    {{$t(btn.text)}}</span>\n                  <span v-else>{{$t(btn.text)}}</span>\n                </el-dropdown-item>\n              </el-dropdown-menu>\n            </el-dropdown>\n            <!-- 批量创建单据 -->\n            <el-dropdown v-if=\"!isMyPA && canProcess\" split-button @command=\"onUploadMore\" type=\"primary\" class=\"exportGroup-btn white-blue mr8\">\n              <el-upload\n              action=\"/fbs/inbound/request/mass_upload\"\n              :with-credentials=\"true\"\n              :limit=\"1\"\n              ref=\"massUpload\"\n              :show-file-list=\"false\"\n              :http-request=\"handleMassUploadRequest\"\n            ><span>{{$t('commonMassUpload')}}</span></el-upload>\n            <el-dropdown-menu slot=\"dropdown\">\n              <el-dropdown-item command=\"template\">\n                <i class=\"el-icon-download\"></i>\n                {{ $t('commonTemplate') }}</el-dropdown-item>\n                <el-dropdown-item command=\"history\">\n                {{ $t('commonUploadHistory') }}</el-dropdown-item>\n            </el-dropdown-menu>\n            </el-dropdown>\n            <!-- 批量更新货运状态 -->\n            <el-dropdown v-if=\"activeTab === 'all' && canProcess\" split-button @command=\"onUpdateMore\" type=\"primary\" class=\"exportGroup-btn white-blue mr8\">\n              <el-upload\n              action=\"/fbs/inbound/request/mass_upload\"\n              :with-credentials=\"true\"\n              :limit=\"1\"\n              ref=\"massUpdateShipment\"\n              :show-file-list=\"false\"\n              :http-request=\"handleMassUpdateShipment\"\n            ><span>{{$t('fbsCartonShipmentStatus')}}</span></el-upload>\n            <el-dropdown-menu slot=\"dropdown\">\n              <el-dropdown-item command=\"shipmentTemplate\">\n                <i class=\"el-icon-download\"></i>\n                {{ $t('commonTemplate') }}</el-dropdown-item>\n                <el-dropdown-item command=\"shipmentHistory\">\n                {{ $t('commonUploadHistory') }}</el-dropdown-item>\n            </el-dropdown-menu>\n            </el-dropdown>\n            <!-- 批量处理carton remark信息 -->\n            <el-dropdown v-if=\"activeTab === 'all' && canProcess\" split-button @command=\"onUpdateMore\" type=\"primary\" class=\"exportGroup-btn white-blue mr8\">\n              <el-upload\n              action=\"/fbs/inbound/request/mass_upload\"\n              :with-credentials=\"true\"\n              :limit=\"1\"\n              ref=\"massUpdateRemark\"\n              :show-file-list=\"false\"\n              :http-request=\"handleMassUpdateRemark\"\n            ><span>{{$t('fbsCartonRemark')}}</span></el-upload>\n            <el-dropdown-menu slot=\"dropdown\">\n              <el-dropdown-item command=\"remarkTemplate\">\n                <i class=\"el-icon-download\"></i>\n                {{ $t('commonTemplate') }}</el-dropdown-item>\n                <el-dropdown-item command=\"remarkHistory\">\n                {{ $t('commonUploadHistory') }}</el-dropdown-item>\n            </el-dropdown-menu>\n            </el-dropdown>\n            <!-- 批量修改approve信息加审批 -->\n            <el-dropdown v-if=\"isMyPA && canApprove\" split-button @command=\"onModifyMore\" type=\"primary\" class=\"exportGroup-btn mr8\">\n              <el-upload\n              action=\"/fbs/inbound/request/approved_upload\"\n              :with-credentials=\"true\"\n              :limit=\"1\"\n              ref=\"massModify\"\n              :show-file-list=\"false\"\n              :http-request=\"handleMassModifyRequest\"\n            ><span>{{$t('commonMassModify')}}</span></el-upload>\n            <el-dropdown-menu slot=\"dropdown\">\n              <el-dropdown-item command=\"template\">\n                <i class=\"el-icon-download\"></i>\n                {{ $t('commonTemplate') }}</el-dropdown-item>\n            </el-dropdown-menu>\n            </el-dropdown>\n          </el-col>\n          <el-col class=\"pms-text-right\" :span=\"4\">\n            <el-button\n              class=\"list-btn\"\n              @click=\"onResetPageNoSearch\"\n            >{{$t('commonSearch')}}</el-button>\n            <el-button\n              class=\"list-btn white-blue\"\n              @click=\"onReset\"\n            >{{$t('commonClear')}}</el-button>\n          </el-col>\n        </el-row>\n      </el-form>\n\n      <el-checkbox-group v-model=\"checkedRows\">\n        <list-view\n          :dataList=\"tableList\"\n          :config=\"tableConfig\"\n          @selectionChange=\"selectionChange\"\n          @sortChange=\"sortChange\"\n          :tableSchema=\"tableSchema\"\n          v-loading=\"loading\"\n        >\n          <template slot=\"checkColumn\">\n            <el-table-column\n              fixed\n              column-key=\"action\"\n              width=\"85px\"\n              align=\"center\"\n              label-class-name=\"pms-ele-ui select-all-table-column\"\n            >\n              <template slot-scope=\"scope\" slot=\"header\">\n                <el-dropdown\n                  @click=\"resetCheckedType\"\n                  placement=\"bottom\"\n                  split-button\n                  trigger=\"click\"\n                  class=\"select-page-dropdown\"\n                  @command=\"changeSelectPageType\"\n                >\n                  {{formatCheckedType}}\n                  <el-dropdown-menu class=\"options-field-menu\" slot=\"dropdown\">\n                    <el-dropdown-item command=\"current\">{{$t('commonCurrentPage')}}</el-dropdown-item>\n                    <el-dropdown-item command=\"all\">{{$t('commonAllPage')}}</el-dropdown-item>\n                  </el-dropdown-menu>\n                </el-dropdown>\n              </template>\n              <template slot-scope=\"scope\">\n                <el-checkbox :disabled=\"checkedType === 'all'\" :label=\"scope.row\">{{''}}</el-checkbox>\n              </template>\n            </el-table-column>\n          </template>\n          <template slot=\"displayOptions\">\n            <el-table-column width=\"30px\" fixed=\"right\">\n              <template slot-scope=\"scope\" slot=\"header\">\n                <options-field\n                  btnType=\"icon\"\n                  class=\"option-field-wrapper\"\n                  @fieldChange=\"displayOptionsChange\"\n                  :dropdownText=\"$t('commonDisplayOptions')\"\n                  :fieldList=\"fieldConfig.list || []\"\n                  :defaultList=\"fieldConfig.default\"\n                ></options-field>\n              </template>\n              <template slot-scope=\"scope\"></template>\n            </el-table-column>\n          </template>\n        </list-view>\n      </el-checkbox-group>\n      <section class=\"pagination-center\">\n        <el-pagination\n          background\n          layout=\"sizes, prev, pager, next\"\n          :current-page=\"pager.page_no\"\n          :page-sizes=\"[10, 20, 50, 100]\"\n          :total.sync=\"total\"\n          :page-size=\"pager.count\"\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleChangePage\"\n        ></el-pagination>\n      </section>\n    </section>\n    <MassOperateDialog\n      :visible=\"massDialog\"\n      @close=\"onCloseMassDialog\"\n      @refresh=\"onResetPageNoSearch\"\n      @setUploadFromFalse=\"isFromUpload = false\"\n      :mode=\"massMode\"\n      :isFromUpload=\"isFromUpload\"\n      :pendingkey=\"uploadPendingkey\"\n      :warehouse=\"massWarehouse\"\n      :supplier=\"massSupplier\"\n      :selectedList=\"massSelectedList\"\n    ></MassOperateDialog>\n    <export-history-dialog\n      :needErrorFile=\"true\"\n      :source=\"historySource\"\n      :isUplodHistory=\"isUploadHistory\"\n      :interval=\"15000\"\n      :taskType=\"taskType\"\n      :visible=\"isShowExportHistory\"\n      @close=\"closeExportHistory\"\n    ></export-history-dialog>\n    <mass-validate-unlist\n    @close=\"onCloseValidateDialog\"\n    :data=\"unlistCheckData\"\n    :visible=\"validateUnlistVisible\"\n    :loading=\"massCreateLoading\"\n    />\n  </el-container>\n</template>\n\n<script>\nimport { formatParams } from '@/utils/formatParams';\nimport ExportHistoryDialog from '@/components/ApproveList/exportHistoryDialog';\nimport MassOperateDialog from './MassOperateDialog';\nimport massValidateUnlist from './massValidateUnlist';\nimport {\n  getMyPAInboundList,\n  getInboundList,\n  massExportInboundExcel,\n  massExportInboundPDF,\n  massUploadApproveFile,\n  massCreateInboundTicket,\n  massUpdateCartonRemark,\n  massUpdateShipment\n} from '@/api/FBS/inbound';\nimport { downloadBlobFile, downloadTemplate } from '@/utils/downloadFile';\nimport {\n  FBSInboundRequestStatusList,\n  FBSInboundListDefaultDisplayList,\n  FBSInboundListDisplayFieldList,\n  Permission,\n  FBSInboundTypeList\n} from '@/utils/constant';\nimport moment from 'moment';\nimport { hasPermission } from '@/utils/permission';\nimport { getShopListByIdOrName, getWarehouseListByCountry } from '@/api/shopConfig';\nimport ListView from '@/components/ApproveList/list';\nimport OptionsField from '@/components/ApproveList/optionsField';\nimport SBSVendorIdForm from '@/components/sbsVendorIdForm/index.vue';\n\nimport { delivery_method_options, getOptionLabel } from './common';\n\nconst StorageKey = 'pmsFBSInboundLisDisplayFields';\nconst moduleName = 'FBSInboundRequestList';\nconst FBSShopTypeList = [\n  { value: 2, label: 'CB' },\n  { value: 1, label: 'Local' }\n];\nconst tableHiddenField = {\n  all: [],\n  myPA: ['inbound_id', 'approve_inbound_time', 'approve_total_qty', 'inbound_total_qty', 'status', 'create_source', 'requester'],\n  myRequest: ['request_inbound_time', 'request_total_qty', 'create_source', 'requester']\n};\nexport default {\n  components: {\n    ExportHistoryDialog,\n    OptionsField,\n    ListView,\n    MassOperateDialog,\n    SBSVendorIdForm,\n    massValidateUnlist\n  },\n  data() {\n    const storageList = localStorage.getItem(StorageKey);\n    return {\n      headerTabs: [\n        { value: 'all', label: 'commonAll' },\n        {\n          value: 'myPA',\n          label: 'commonMyPendingApprovals'\n        },\n        {\n          value: 'myRequest',\n          label: 'commonMyRequest'\n        }\n      ],\n\n      warehouseList: [],\n      activeTab: 'all',\n      taskType: '',\n      isShowExportHistory: false,\n      validateUnlistVisible: false,\n      massCreateLoading: false,\n      unlistCheckData: {},\n      shopIDSelectOptions: [],\n      canProcess: false,\n      canApprove: false,\n      isActionLogDialog: false,\n      statusClass: {\n        1: 'orange',\n        2: 'orange',\n        3: 'green',\n        4: 'red',\n        5: 'green',\n        6: 'green',\n        7: 'orange',\n        8: 'green',\n        9: 'grey',\n        10: 'grey',\n        11: 'red',\n        12: 'green'\n      },\n      lastSearchForm: {},\n      checkedType: '',\n      checkedRows: [],\n      searchForm: {\n        region: '',\n        warehouse: '',\n        shop_id: '',\n        ir_id: '',\n        inbound_id: '',\n        request_inbound_time_start: '',\n        request_inbound_time_end: '',\n        approve_inbound_time_start: '',\n        approve_inbound_time_end: '',\n        shop_type: '',\n        status: '',\n        order_by: '',\n        create_source: '',\n        requester_contain: '',\n        delivery_method: undefined,\n        sbs_vendor_id: '',\n        inbound_type: ''\n      },\n      tableConfig: {\n        showCheckBox: false,\n        align: 'center'\n      },\n      exportBtns: [\n        { text: 'commonExportExcel', onClick: 'onExportExcel' },\n        { text: 'commonExportPDF', onClick: 'onExportPDF' },\n        { text: 'commonExportHistory', onClick: 'showExportHistory', params: 17}\n      ],\n      massDialog: false,\n      massMode: 'approve',\n      massWarehouse: '', // 批量审批的warehouse\n      massSupplier: '',\n      massSelectedList: [],\n      isFromUpload: false,\n      uploadPendingkey: '',\n      loading: false,\n      loadingMassUpload: false,\n      loadingExport: false,\n      pager: {\n        page_no: 1,\n        count: 10\n      },\n      total: 0,\n      tableList: [],\n      showTableSchemaList: storageList\n        ? JSON.parse(storageList)\n        : FBSInboundListDefaultDisplayList,\n      timer: null,\n      hasLoadingConfirmBox: false\n    };\n  },\n  computed: {\n    isMyPA() {\n      return this.activeTab === 'myPA';\n    },\n    searchSchema() {\n      return [\n        {\n          type: 'select',\n          width: 6,\n          label: this.$t('commonRegion'),\n          field: 'region',\n          options: [{ label: 'All', value: '' }, ...this.countryList]\n        },\n        {\n          type: 'select',\n          width: 6,\n          label: this.$t('commonWarehouse'),\n          field: 'warehouse',\n          options: this.warehouseList,\n          disabled: !this.searchForm.region\n        },\n        {\n          type: 'date',\n          labelWidth: '220px',\n          width: 12,\n          label: this.$t('FBSRequestedInboundDate'),\n          field_start: 'request_inbound_time_start',\n          field_end: 'request_inbound_time_end',\n          disabled: !this.searchForm.region,\n          isSelfDefineLabel: true,\n          hidden: this.activeTab === 'myRequest'\n        },\n        {\n          type: 'shopIDName',\n          width: 6,\n          label: this.$t('commonShopIDOrName'),\n          field: 'shop_id'\n        },\n        {\n          type: 'select',\n          width: 6,\n          label: this.$t('commonStatus'),\n          field: 'status',\n          options: [\n            { label: 'All', value: '' },\n            ...this.filterStatusList\n          ],\n          hidden: this.isMyPA\n        },\n        {\n          type: 'date',\n          width: 12,\n          labelWidth: '220px',\n          label: this.$t('FBSApprovedInboundDate'),\n          field_start: 'approve_inbound_time_start',\n          field_end: 'approve_inbound_time_end',\n          disabled: !this.searchForm.region,\n          isSelfDefineLabel: true,\n          hidden: this.isMyPA\n        },\n        {\n          type: 'input',\n          width: 6,\n          label: this.$t('commonRequestID'),\n          field: 'ir_id'\n        },\n        {\n          type: 'input',\n          width: 6,\n          label: this.$t('commonInboundID'),\n          field: 'inbound_id',\n          hidden: this.isMyPA\n        },\n        {\n          type: 'sbsVendorId',\n          width: 6,\n          label: this.$t('commonSBSVendorID'),\n          field: 'sbs_vendor_id'\n        },\n        {\n          type: 'select',\n          width: 6,\n          label: this.$t('commonInboundType'),\n          field: 'inbound_type',\n          options: [\n            { label: 'All', value: '' },\n            ...FBSInboundTypeList\n          ]\n        },\n        {\n          type: 'select',\n          width: 6,\n          label: this.$t('commonShopType'),\n          field: 'shop_type',\n          options: [{ label: 'All', value: '' }, ...FBSShopTypeList]\n        },\n        {\n          type: 'select',\n          width: 6,\n          label: this.$t('commonSource'),\n          field: 'create_source',\n          options: [\n            { label: 'All', value: '' },\n            { value: 'SELLER', label: 'Seller' },\n            { value: 'SHOPEE', label: 'Shopee' }\n          ],\n          hidden: this.activeTab !== 'all'\n        },\n        {\n          type: 'input',\n          width: 6,\n          label: this.$t('commonRequester'),\n          field: 'requester_contain',\n          hidden: this.activeTab !== 'all'\n        },\n        {\n          type: 'select',\n          width: 6,\n          label: this.$gt('Delivery Method'),\n          field: 'delivery_method',\n          options: [{\n            label: 'All',\n            value: undefined\n          }, ...delivery_method_options]\n        }\n      ].filter(item => !item.hidden);\n    },\n    formatCheckedType() {\n      return this.checkedType === 'all'\n        ? this.$t('commonAllPage')\n        : this.$t('commonCurrentPage');\n    },\n    countryList() {\n      return this.$store.getters.countrySelectList;\n    },\n    fieldConfig() {\n      const hiddenFieldList = tableHiddenField[this.activeTab] || [];\n      const storageList = localStorage.getItem(StorageKey);\n      return {\n        list: FBSInboundListDisplayFieldList.filter(item => !hiddenFieldList.includes(item.field)).map(item => ({\n          ...item,\n          label: this.$t(item.label)\n        })),\n        default: storageList\n          ? JSON.parse(storageList)\n          : FBSInboundListDefaultDisplayList\n      };\n    },\n    tableSchema() {\n      const hiddenFieldList = tableHiddenField[this.activeTab] || [];\n      return [\n        {\n          columnKey: 'ir_id',\n          field: 'ir_id',\n          label: this.$t('commonRequestID')\n        },\n        {\n          columnKey: 'inbound_id',\n          field: 'inbound_id',\n          label: this.$t('commonInboundID'),\n          render: (schema, row) => {\n            return row.inbound_id || '/';\n          }\n        },\n        {\n          columnKey: 'sbs_vendor_id',\n          field: 'sbs_vendor_id',\n          label: this.$t('commonSBSVendorID')\n        },\n        {\n          columnKey: 'inbound_type',\n          field: 'inbound_type',\n          label: this.$t('commonInboundType'),\n          render: (schema, row) => {\n            return (\n              FBSInboundTypeList.find(item => item.value === row.inbound_type) || {\n                label: ''\n              }\n            ).label;\n          }\n        },\n        {\n          columnKey: 'inbound_warehouse',\n          field: 'warehouse',\n          label: this.$t('FBSInboundWarehouse')\n        },\n        {\n          columnKey: 'delivery_method',\n          field: 'delivery_method',\n          label: this.$gt('Delivery Method'),\n          render: (schema, row) => {\n            const value = row[schema.field];\n            return getOptionLabel(delivery_method_options, value);\n          }\n        },\n        {\n          columnKey: 'shop_id_name',\n          field: 'shop_id',\n          label: this.$t('commonShopIDOrName'),\n          render: (schema, row) => {\n            return `${row.shop_id}/${row.shop_name}`;\n          }\n        },\n        {\n          columnKey: 'shop_type',\n          field: 'shop_type',\n          label: this.$t('commonShopType'),\n          render: (schema, row) => {\n            return (\n              FBSShopTypeList.find(item => item.value === row.shop_type) || {\n                label: ''\n              }\n            ).label;\n          }\n        },\n        {\n          columnKey: 'request_inbound_time',\n          width: '140px',\n          field: 'request_inbound_time',\n          label: this.$t('FBSRequestedInboundDate'),\n          sortable: this.activeTab !== 'all',\n          render: (schema, row) => {\n            if (row.request_time_level === 1) {\n              return row.request_inbound_time.replace('00:00:00', 'AM').replace('12:00:00', 'PM') || '/';\n            } else if (row.request_time_level === 2) {\n              return row.request_inbound_time.slice(0, 16) || '/';\n            } else if (row.request_time_level === 3) {\n              return `${row.request_inbound_time.slice(0, 10)} - ${row.request_inbound_time_end.slice(0, 10)}` || '/';\n            }\n          }\n        },\n        {\n          columnKey: 'approve_inbound_time',\n          field: 'approve_inbound_time',\n          width: '140px',\n          label: this.$t('FBSApprovedInboundDate'),\n          sortable: this.activeTab !== 'all',\n          render: (schema, row) => {\n            return row.approve_inbound_time || '/';\n          }\n        },\n        {\n          columnKey: 'request_total_qty',\n          field: 'request_total_qty',\n          width: '140px',\n          label: this.$t('FBSRequestedInboundQuantitypcs'),\n          sortable: this.activeTab !== 'all'\n        },\n        {\n          columnKey: 'approve_total_qty',\n          field: 'approve_total_qty',\n          width: '135px',\n          label: this.$t('FBSApprovedInboundQuantitypcs'),\n          sortable: this.activeTab !== 'all'\n        },\n        {\n          columnKey: 'inbound_total_qty',\n          field: 'inbound_total_qty',\n          width: '140px',\n          label: this.$t('FBSActualInboundQuantitypcs'),\n          sortable: this.activeTab !== 'all'\n        },\n        {\n          columnKey: 'status',\n          field: 'status',\n          width: '150px',\n          label: this.$t('commonStatus'),\n          render: (schema, row, index, h) => {\n            return ['span', { 'class': `pms-ele-ui status-span ${this.statusClass[row.status]}` }, this.formatStatus(row)];\n          }\n        },\n        {\n          columnKey: 'create_source',\n          field: 'create_source',\n          label: this.$t('commonSource')\n        },\n        {\n          columnKey: 'requester',\n          field: 'requester',\n          label: this.$t('commonRequester')\n        },\n        {\n          columnKey: 'action',\n          field: 'action',\n          label: this.$t('commonAction'),\n          width: '100px',\n          render: (schema, row, index, h) => {\n            return [\n              'div',\n              {},\n              [\n                {\n                  render: h(\n                    'el-button',\n                    {\n                      class: 'list-btn white-blue',\n                      on: { click: () => this.onDetail(row) }\n                    },\n                    this.$t('commonDetail')\n                  )\n                }\n              ].map(item => item.render)\n            ];\n          }\n        }\n      ].filter(item => this.showTableSchemaList.includes(item.field) && !hiddenFieldList.includes(item.field));\n    },\n    historySource() {\n      const fbs = ['inbound_shipment_status_upload', 'inbound_carton_remark_upload'];\n      return fbs.includes(this.taskType) ? 'FBS' : 'B2C';\n    },\n    isUploadHistory() {\n      const uploadTypes = [38, 'inbound_shipment_status_upload', 'inbound_carton_remark_upload'];\n      return uploadTypes.includes(this.taskType);\n    },\n    filterStatusList() {\n      const statusList = [...FBSInboundRequestStatusList];\n      if (this.searchForm.shop_type === 1) {\n        const packedIndex = statusList.findIndex(item => item.value === 12);\n        if (packedIndex > -1) {\n          statusList.splice(packedIndex, 1);\n        }\n      }\n      return statusList;\n    }\n  },\n  methods: {\n    moment,\n    onCloseValidateDialog() {\n      this.validateUnlistVisible = false;\n    },\n    formatStatus(row) {\n      let text = (\n        FBSInboundRequestStatusList.find(item => item.value === row.status) || {\n          label: ''\n        }\n      ).label;\n      if (row.status === 2) {\n        text += `: ${row.next_approval_role_name}`;\n      }\n      return text;\n    },\n    onChangeSelect(value, field) {\n      if (field === 'region') {\n        this.searchForm.warehouse = '';\n        this.warehouseList = [];\n        if (value) {\n          this.getWarehouseListByCountry();\n        }\n      } else if (field === 'shop_type' && value === 1 && this.searchForm.status === 12) {\n        this.searchForm.status = '';\n      }\n      this.onResetPageNoSearch();\n    },\n    async getWarehouseListByCountry() {\n      try {\n        const opt = {\n          country: this.searchForm.region\n        };\n        getWarehouseListByCountry(opt).then(res => {\n          if (res && res.retcode === 0) {\n            this.warehouseList = (res.data.warehouses || []).map(item => ({\n              value: item.whs_id,\n              label: item.whs_id\n            }));\n          }\n        });\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    handleSBSVendorIDSelect(value) {\n      this.searchForm.sbs_vendor_id = value;\n    },\n    onShowMassDialog(mode) {\n      this.massMode = mode;\n      this.massDialog = true;\n    },\n    onCloseMassDialog() {\n      this.massDialog = false;\n      this.massSelectedList = [];\n      this.isFromUpload = false;\n      this.massWarehouse = '';\n      this.massSupplier = '';\n    },\n    onMassApproveOrReject(type, warehouse) {\n      if (this.checkedRows.length < 1) {\n        return this.$message({\n          type: 'error',\n          message: this.$t('commonPleaseChooseAtLeastOneOption')\n        });\n      }\n      let onlyOneWarehouse = '';\n      let onlySupplier = '';\n\n      const hasDifferentWarehouse = this.checkedRows.some(item => {\n        if (!onlyOneWarehouse) {\n          onlyOneWarehouse = item.warehouse;\n          return false;\n        }\n        return onlyOneWarehouse !== item.warehouse;\n      });\n      if (hasDifferentWarehouse) {\n        return this.$message.error(\n          this.$t('FBSCannotSelectedDifferentWarehouse')\n        );\n      }\n\n      const hasDifferentSupplier = this.checkedRows.some(item => {\n        if (!onlySupplier) {\n          onlySupplier = item.supplier_id;\n          return false;\n        }\n        return onlySupplier !== item.supplier_id;\n      });\n      if (hasDifferentSupplier) {\n        return this.$message.error(\n          this.$t('FBSInboundMassApprovedSupplierTip')\n        );\n      }\n\n      const hasDifferentDelivery = !this.checkedRows.every(item => item.delivery_method === this.checkedRows[0].delivery_method);\n      if (hasDifferentDelivery) {\n        return this.$message.error(\n          // The Delivery Method of selected requests should be the same.\n          this.$t('inboundMassApproveDeliveryTips')\n        );\n      }\n\n      this.massWarehouse = warehouse || this.checkedRows[0].warehouse;\n      this.massSupplier = onlySupplier || this.checkedRows[0].supplier_id;\n      this.massSelectedList = this.checkedRows.map(item => item.ir_id);\n      this.onShowMassDialog(type);\n    },\n    sortChange(row, column) {\n      const fieldList = [\n        'request_inbound_time',\n        'approve_inbound_time',\n        'request_total_qty',\n        'approve_total_qty',\n        'inbound_total_qty'\n      ]; // only fieldList use api sort\n      if (fieldList.includes(row.prop)) {\n        if (row.order === 'descending') {\n          this.searchForm.order_by = `-${row.prop}`;\n        } else if (row.order === 'ascending') {\n          this.searchForm.order_by = row.prop;\n        } else {\n          this.searchForm.order_by = '';\n        }\n        this.onResetPageNoSearch();\n      }\n    },\n    resetCheckedType() {\n      this.checkedType = '';\n      this.checkedRows = [];\n    },\n    selectionChange(selection) {\n      this.checkedRows = selection;\n    },\n    changeSelectPageType(type) {\n      this.checkedType = type;\n      this.checkedRows = this.tableList; // el-table中的data;\n    },\n    displayOptionsChange(list) {\n      this.showTableSchemaList = list;\n      localStorage.setItem(StorageKey, JSON.stringify(list));\n    },\n    onExportContentClick(command) {\n      if (command.params === 17) {\n        this[command.onClick](17);\n      } else {\n        if (this.checkedRows.length < 1) {\n          return this.$message({\n            type: 'error',\n            message: this.$t('commonPleaseChooseAtLeastOneOption')\n          });\n        }\n        if (this.checkedRows.length > 50) {\n          return;\n        }\n        if (command.onClick && typeof this[command.onClick] === 'function') {\n          this[command.onClick]();\n        }\n      }\n    },\n    onExportPDF() {\n      const params = {};\n      if (this.checkedType === 'all') {\n        params.filter = formatParams(this.searchForm);\n        params.filter.page_no = this.pager.page_no;\n        params.filter.count = this.pager.count;\n      } else {\n        params.ir_ids = this.checkedRows.map(item => item.ir_id);\n      }\n      if (this.activeTab === 'myRequest') {\n        params.is_my_request = 1;\n      }\n      massExportInboundPDF(params)\n        .then(res => {\n          if (res && res.retcode === 0) {\n            this.$message({\n              type: 'success',\n              message: this.$t('commonExportHistorySuccessTips')\n            });\n          } else {\n            this.$message({ type: 'error', message: res.info || res.message });\n          }\n        })\n        .catch(e => {\n          this.$message({ type: 'error', message: e });\n        })\n        .finally(() => {\n          this.loadingExport = false;\n        });\n    },\n    onExportExcel() {\n      const params = {};\n      if (this.checkedType === 'all') {\n        params.filter = formatParams(this.searchForm);\n        params.filter.page_no = this.pager.page_no;\n        params.filter.count = this.pager.count;\n      } else {\n        params.ir_ids = this.checkedRows.map(item => item.ir_id);\n      }\n      if (this.activeTab === 'myRequest') {\n        params.is_my_request = 1;\n      }\n      massExportInboundExcel(params)\n        .then(res => {\n          if (res && res.retcode === 0) {\n            this.$message({\n              type: 'success',\n              message: this.$t('commonExportHistorySuccessTips')\n            });\n          } else {\n            this.$message({ type: 'error', message: res.info || res.message });\n          }\n        })\n        .catch(e => {\n          this.$message({ type: 'error', message: e });\n        })\n        .finally(() => {\n          this.loadingExport = false;\n        });\n    },\n    onUploadMore(type) {\n      if (type === 'template') {\n        downloadTemplate('FBS_Inbound_Request_Template.xlsx');\n      } else if (type === 'history') {\n        this.showExportHistory(38);\n      }\n    },\n    onUpdateMore(type) { // 处理update shipment 和 update remark\n      if (type === 'shipmentTemplate') {\n        window.open('/admin/data/FBS_Sea_Ship_Status_Template.xlsx');\n      } else if (type === 'shipmentHistory') {\n        this.showExportHistory('inbound_shipment_status_upload');\n      } else if (type === 'remarkTemplate') {\n        window.open('/admin/data/FBS_Carton_Remark_Template.xlsx');\n      } else if (type === 'remarkHistory') {\n        this.showExportHistory('inbound_carton_remark_upload');\n      }\n    },\n\n    onModifyMore(type) {\n      if (type === 'template') {\n        this.onDownloadUpdateTemplate();\n      }\n    },\n    showExportHistory(type) {\n      this.taskType = type;\n      this.isShowExportHistory = true;\n    },\n    closeExportHistory() {\n      this.isShowExportHistory = false;\n    },\n    onShowInboundLimitDialog() {\n      this.isInboundLimitDialog = true;\n    },\n    closeInboundLimitDialog() {\n      this.isInboundLimitDialog = false;\n    },\n    setTimeoutLoading() {\n      this.timer = setInterval(\n        () => {\n          if (this.loadingMassUpload && !this.hasLoadingConfirmBox) {\n            this.$confirm(\n              this.$t('FBSMassUploadLoadingTips'),\n              this.$t('commonTips'),\n              {\n                confirmButtonText: this.$t('commonConfirm'),\n                cancelButtonText: this.$t('commonCancel'),\n                customClass: 'pms-ele-ui',\n                confirmButtonClass: 'list-btn',\n                cancelButtonClass: 'list-btn white'\n              }\n            )\n              .then(() => {\n                this.hasLoadingConfirmBox = false;\n              })\n              .catch(e => {\n                this.loadingMassUpload = false;\n                this.hasLoadingConfirmBox = false;\n                clearInterval(this.timer);\n              });\n            this.hasLoadingConfirmBox = true;\n          }\n        },\n        30000\n      );\n    },\n    handleMassUpdateShipment({ file }) {\n      const formData = new FormData();\n      formData.append('file', file);\n      massUpdateShipment(formData).then(res => {\n        if (res.retcode === 0) {\n          this.$message.success(this.$t('commonUploadSuccessTip'));\n        } else {\n          this.$message.error(res.info || res.message);\n        }\n      }).catch(e => {\n        this.$message.error('Upload failed! Please try again.');\n      }).finally(_ => {\n        this.$refs.massUpdateShipment.clearFiles();\n      });\n    },\n    handleMassUpdateRemark({ file }) {\n      const formData = new FormData();\n      formData.append('file', file);\n      massUpdateCartonRemark(formData).then(res => {\n        if (res.retcode === 0) {\n          this.$message.success(this.$t('commonUploadSuccessTip'));\n        } else {\n          this.$message.error(res.info || res.message);\n        }\n      }).catch(e => {\n        this.$message.error('Upload failed! Please try again.');\n      }).finally(_ => {\n        this.$refs.massUpdateRemark.clearFiles();\n      });\n    },\n    handleMassUploadRequest({ file }) {\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('upload_confirmed', 0);\n      this.validateUnlistVisible = true;\n      this.massCreateLoading = true;\n      massCreateInboundTicket(formData).then(res => {\n        if (res.retcode === 0) {\n          this.$message.success(this.$t('commonUploadSuccessTip'));\n          this.validateUnlistVisible = false;\n        } else if (res.retcode === 9004) { // 当上传的文件中包含 Unlist sku 则弹出二次确认\n          const list = res.data.delisted_sku_list || [];\n          const total = res.data.total_sku || 0;\n          const link = res.data.result_link || '';\n          this.unlistCheckData = {list, total, link };\n        } else {\n          this.$message.error(res.info || res.message);\n          this.validateUnlistVisible = false;\n        }\n      }).catch(e => {\n        this.$message.error('Upload failed! Please try again.');\n        this.validateUnlistVisible = false;\n      }).finally(_ => {\n        this.$refs.massUpload.clearFiles();\n        this.massCreateLoading = false;\n      });\n    },\n    handleMassModifyRequest({ file }) {\n      const formData = new FormData();\n      formData.append('attachment', file);\n      this.loadingMassUpload = true;\n      this.setTimeoutLoading();\n      massUploadApproveFile(formData)\n        .then(resp => {\n          if (resp.type === 'application/json') {\n            const reader = new FileReader();\n            reader.onloadend = () => {\n              const result = JSON.parse(reader.result);\n              if (result.retcode !== 0) {\n                this.$message.error(result.info);\n              } else {\n                this.uploadPendingkey = result.data.pending_key || '';\n                this.massSelectedList = result.data.list || [];\n                this.massWarehouse = result.data.whs_id || '';\n                this.massSupplier = result.data.supplier_id || '';\n                this.isFromUpload = true;\n                this.onShowMassDialog('approve');\n              }\n            };\n            reader.readAsText(resp);\n          } else {\n            downloadBlobFile(\n              resp,\n              `ErrorFile${moment().format('YYYYMMDDHHmmss')}.xls`\n            );\n          }\n          this.$refs.massModify.clearFiles();\n        })\n        .catch(e => {\n          this.$message.error(e);\n        })\n        .finally(() => {\n          this.loadingMassUpload = false;\n        });\n    },\n    onDownloadUpdateTemplate() {\n      // edit\n      window.open('/admin/data/FBS_tab_upload_template.xlsx');\n    },\n    getShopIdName(query) {\n      if (query !== '') {\n        const params = {\n          search_type: 0,\n          shop_id_or_name: query,\n          page_no: 1,\n          count: 20\n        };\n        getShopListByIdOrName(params)\n          .then(res => {\n            if (res && res.retcode === 0) {\n              this.shopIDSelectOptions = (res.data.shop_list || []).map(item => ({\n                value: item.shop_id,\n                label: `${item.shop_id}(${item.shop_name})`\n              }));\n            }\n          })\n          .catch(e => {\n            this.$message.error(e);\n          });\n      }\n    },\n    onTabClick() {\n      this.onReset();\n      this.onResetPageNoSearch();\n    },\n    onCreateRequest() {\n      this.$router.push('/admin/fbs/inbound/create');\n    },\n    cacheSearchCondition(form) {\n      this.$store.commit('setActiveTab', {\n        module: moduleName,\n        tab: this.activeTab\n      });\n      this.$store.commit('setSearchForm', {\n        module: moduleName,\n        form: form || null,\n        field: 'searchParams'\n      });\n    },\n    onDetail(row) {\n      this.cacheSearchCondition(this.lastSearchForm);\n      this.$router.push(`/admin/fbs/inbound/detail/${row.ir_id}`);\n    },\n    onReset() {\n      Object.keys(this.searchForm).forEach(key => {\n        this.searchForm[key] = '';\n      });\n      this.shopIDSelectOptions = [];\n    },\n    handleChangePage(page_no) {\n      this.pager.page_no = page_no;\n      this.onSearch();\n    },\n    handleSizeChange(count) {\n      this.pager.count = count;\n      this.pager.page_no = 1;\n      this.onSearch();\n    },\n    onResetPageNoSearch() {\n      this.handleChangePage(1);\n    },\n    async onSearch() {\n      try {\n        const params = {\n          ...this.pager,\n          ...formatParams(this.searchForm)\n        };\n        if (this.activeTab === 'myRequest') {\n          params.is_my_request = 1;\n        }\n        this.loading = true;\n        let func = () => Promise.resolve();\n        if (this.isMyPA) {\n          func = getMyPAInboundList;\n        } else {\n          func = getInboundList;\n        }\n        const res = await func(params);\n        if (res && res.retcode === 0) {\n          this.tableList = res.data.ir_list || [];\n          this.total = res.data.total || 0;\n          this.lastSearchForm = params;\n          this.resetCheckedType();\n        } else {\n          this.$message({ type: 'error', message: res.info });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loading = false;\n      }\n    }\n  },\n  created() {\n    this.canProcess = hasPermission(Permission.PROCESS_INBOUND_REQUEST);\n    this.canApprove = hasPermission(Permission.APPROVE_INBOUND_REQUEST);\n    if (this.$store.getters.inboundInfo.region) {\n      const { inboundInfo } = this.$store.getters;\n      this.searchForm.region = inboundInfo.region;\n      this.searchForm.warehouse = inboundInfo.whsID;\n      this.searchForm.approve_inbound_time_start = Array.isArray(inboundInfo.dateRange) ? inboundInfo.dateRange[0] : '';\n      this.searchForm.approve_inbound_time_end = Array.isArray(inboundInfo.dateRange) ? inboundInfo.dateRange[1] : '';\n      this.$store.commit('clearInboundCalendarData');\n    } else {\n      const cacheConditionObj = this.$store.getters.searchForm[moduleName];\n      if (\n        cacheConditionObj &&\n        cacheConditionObj.activeTab &&\n        cacheConditionObj.searchParams\n      ) {\n        this.activeTab = cacheConditionObj.activeTab;\n        const searchParams = cacheConditionObj.searchParams;\n        this.pager.count = searchParams.count;\n        this.pager.page_no = searchParams.page_no;\n        [\n          'region',\n          'warehouse',\n          'delivery_method',\n          'shop_id',\n          'ir_id',\n          'inbound_id',\n          'request_inbound_time_start',\n          'request_inbound_time_end',\n          'approve_inbound_time_start',\n          'approve_inbound_time_end',\n          'shop_type',\n          'status',\n          'order_by',\n          'create_source',\n          'requester_contain'\n        ].forEach(key => {\n          if (searchParams[key]) {\n            this.searchForm[key] = searchParams[key];\n          }\n        });\n      }\n    }\n    // 从query获取参数\n    if (this.$route.query.status) this.searchForm.status = +this.$route.query.status;\n    if (this.$route.query.delivery_method) this.searchForm.delivery_method = +this.$route.query.delivery_method;\n    this.onSearch();\n  }\n};\n</script>\n\n<style scoped lang=\"scss\">\n@import \"~@/styles/variables.scss\";\n.FBS-inbound-request-wrapper {\n  padding: 0 20px;\n  display: block;\n  .list-header-wrapper {\n    position: relative;\n    margin-bottom: 16px;\n    .set-inbound-limits {\n      color: $blue;\n      font-size: 14px;\n      margin-right: 16px;\n      cursor: pointer;\n      .set-inbound-icon {\n        font-size: 16px;\n      }\n      .set-inbound-text {\n        margin-left: 4px;\n      }\n    }\n    .list-create-btn {\n      position: absolute;\n      right: 0;\n      top: 5px;\n      z-index: 1;\n    }\n  }\n  .question-icon {\n    width: 14px;\n    height: 14px;\n    fill: $grey;\n  }\n  .main-wrapper {\n    width: 100%;\n    padding: 0;\n  }\n  .pagination-center {\n    display: flex;\n    justify-content: center;\n    margin-top: 20px;\n  }\n  .list-date-picker-width{\n    width: 47.5%;\n  }\n  .el-autocomplete {\n    width: 100%;\n  }\n}\n</style>\n<style lang=\"scss\">\n@import \"~@/styles/common.scss\";\n.exportGrop-btn{\n  .is-disabled {\n    cursor: not-allowed;\n    color: $grey;\n  }\n}\n.fbs-inbound-time-pick-popper{\n  .el-time-panel{\n    left: auto;\n    right:0;\n  }\n\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/inboundRequest/massValidateUnlist.vue","messages":[{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":53,"column":7,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":53,"endColumn":8,"fix":{"range":[2369,2370],"text":""}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div class=\"fbs-inbound-mass-vaidate-dialog\">\n    <el-dialog\n    :title=\"loading ? '' : $t('SkuInfoConfirmation')\"\n    :visible.sync=\"dialogVisible\"\n    @close=\"onClose\"\n    >\n    <div v-if=\"loading\" v-loading=\"loading\" class=\"fbs-inbound-loading\"></div>\n    <div v-else>\n      <section class=\"fbs-inbound-confirm-tips\">\n        <p>You have raise <span class=\"fbs-inbound-number-strong\">{{data.total || 0}}</span> SKU in this inbound request,</p>\n        <p>These <span class=\"fbs-inbound-number-strong\">{{(data.list || {}).length || 0}}</span> SKU are Unlist status, still confirm to raise inbound request?</p>\n        <p class=\"fbs-inbound-confirm-alert-tip first-tip\">{{$t('FBSInboundUploadUnlistTip1', {num: data.total || 0})}}</p>\n        <p class=\"fbs-inbound-confirm-alert-tip\">{{$t('FBSInboundUploadUnlistTip2')}}</p>\n      </section>\n      <div class=\"pms-ui\">\n        <el-table :data=\"data.list || []\">\n          <el-table-column :label=\"$t('commonSkuID')\" prop=\"sku_id\"></el-table-column>\n          <el-table-column :label=\"$t('commonSkuName')\" prop=\"sku_name\"></el-table-column>\n          <el-table-column :label=\"$t('FBSFulfillmentSKUName')\" prop=\"fulfillment_sku_name\"></el-table-column>\n        </el-table>\n      </div>\n    </div>\n    <div slot=\"footer\" class=\"dialog-footer pms-ui\" v-if=\"!loading\">\n      <div class=\"fbs-inbound-download-sku-button\">\n        <el-button type=\"primary\" :loading=\"loading\" @click=\"onDownload\">\n        {{$t('FBSInboundDownloadAll')}}\n        <i class=\"el-icon-download\"></i>\n      </el-button></div>\n      <el-button @click=\"onClose\" :loading=\"loading\">{{$t('commonCancel')}}</el-button>\n      <el-button type=\"primary\" :loading=\"loading\">\n      <el-upload\n        action=\"/fbs/inbound/request/mass_upload\"\n        :with-credentials=\"true\"\n        :limit=\"1\"\n        ref=\"massUploadNotNeedConfirm\"\n        :show-file-list=\"false\"\n        :http-request=\"handleMassUploadRequest\"\n      ><span>{{$t('FBSInboundUploadFinal')}}</span></el-upload></el-button>\n    </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { massCreateInboundTicket } from '@/api/FBS/inbound';\nimport { downloadHistoryResult } from '@/api/lifecycle';\nimport { downloadBlobFile } from '@/utils/downloadFile';\nimport { getContentType } from '@/utils/constant';\nimport moment from 'moment';\nexport default {\n  components: {},\n  data () {\n    return {\n      dialogVisible: false\n    };\n  },\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    data: {\n      type: Object,\n      default: () => ({})\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {},\n  watch: {\n    '$props.visible': {\n      handler(cur) {\n        this.dialogVisible = cur;\n      }\n    }\n  },\n  methods: {\n    onClose() {\n      this.$emit('close');\n    },\n    onDownload() {\n      if (this.data.link) {\n        downloadHistoryResult({ task_id: '', result_link: this.data.link }).then(resp => {\n          if (resp.type === 'application/json') {\n            const reader = new FileReader();\n            reader.onloadend = () => {\n              const result = JSON.parse(reader.result);\n              if (result.retcode !== 0) {\n                this.$message.error(result.info);\n              }\n            };\n            reader.readAsText(resp);\n          } else {\n            downloadBlobFile(resp, `sku_checking_list_${moment().format('YYYYMMDD')}.${getContentType(resp.type)}`);\n          }\n        }).catch((e) => {\n          this.$message.error('Download Failed');\n        });\n      }\n    },\n    handleMassUploadRequest({ file }) {\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('upload_confirmed', 1);\n      massCreateInboundTicket(formData).then(res => {\n        if (res.retcode === 0) {\n          this.$message.success(this.$t('commonUploadSuccessTip'));\n          this.onClose();\n        } else {\n          this.$message.error(res.info || res.message);\n        }\n      }).catch(e => {\n        this.$message.error('Upload failed! Please try again.');\n      }).finally(_ => {\n        this.$refs.massUploadNotNeedConfirm.clearFiles();\n      });\n    }\n  }\n};\n</script>\n\n<style lang='scss' scoped>\n  .fbs-inbound-loading {\n    height: 300px;\n  }\n  .fbs-inbound-number-strong {\n    color: #3d6ed1;\n    font-weight: 600;\n  }\n  .fbs-inbound-confirm-tips {\n    margin-bottom: 15px;\n  }\n  .fbs-inbound-download-sku-button {\n    text-align: left;\n  }\n  .fbs-inbound-confirm-alert-tip {\n    color: red;\n    &.first-tip {\n      margin-top: 10px;\n    }\n  }\n</style>\n<style lang='scss'>\n.fbs-inbound-mass-vaidate-dialog {\n  .el-dialog__body {\n    padding: 0 20px;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/inboundRequest/serviceAddtionInfo.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/inboundRequest/settings/actionLog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/inboundRequest/settings/index.vue","messages":[{"ruleId":"vue/no-use-v-if-with-v-for","severity":2,"message":"This 'v-if' should be moved to the wrapper element.","line":230,"column":17,"nodeType":"VAttribute","endLine":230,"endColumn":114}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-container class=\"FBS-inbound-settings-wrapper pms-ele-ui pms-ui\">\n    <section class=\"list-header-wrapper\">\n      <el-tabs class=\"pms-ele-ui\" tab-position=\"bottom\" v-model=\"activeCountry\" :before-leave=\"onBeforeLeaveCountry\">\n        <el-tab-pane v-for=\"item in countryList\" :key=\"item.value\" :label=\"item.label\" :name=\"item.value\"></el-tab-pane>\n      </el-tabs>\n    </section>\n    <section class=\"main-wrapper\">\n      <el-row type=\"flex\" justify=\"space-between\">\n        <div class=\"flow-type\" :span=\"15\">\n          <h3 class=\"setting-title\">{{ $t('FBSInboundRequestSettings') }}</h3>\n        </div>\n        <div :span=\"9\">\n          <el-button class=\"list-btn white-blue\" @click=\"onShowActionLog\">{{ $t('commonActionLog') }}</el-button>\n          <el-button class=\"list-btn\" v-if=\"canOperate && !isEdit\" @click=\"onEdit\">{{ $t('commonEdit') }}</el-button>\n          <el-button class=\"list-btn white-grey\" v-if=\"isEdit\" @click=\"onCancel\">{{ $t('commonCancel') }}</el-button>\n          <el-button class=\"list-btn\" v-if=\"isEdit\" :loading=\"loading\" @click=\"onSave\">{{\n            $t('commonSave')\n          }}</el-button>\n        </div>\n      </el-row>\n      <el-radio-group v-model=\"shopType\" class=\"shop-type-btn\">\n        <el-radio-button :label=\"1\">{{ $t('fbsLocal') }}</el-radio-button>\n        <el-radio-button :label=\"2\">{{ $t('fbsCb') }}</el-radio-button>\n      </el-radio-group>\n      <section class=\"setting-wrapper\">\n        <h1 class=\"setting-block-title\">{{$gt('Time Settings')}}</h1>\n        <el-form ref=\"formData\" :model=\"formData\" :rules=\"rules\" label-width=\"280px\" label-position=\"right\">\n          <el-form-item prop=\"cutOffTime\">\n            <template slot=\"label\">\n              <span>{{ $t('FBSInboundRequestCutOffTime') }}</span>\n              <el-popover popper-class=\"break-word pms-ele-ui\" placement=\"top\" width=\"400\" trigger=\"hover\">\n                <div class=\"pms-text-left\">{{ $t('FBSInboundRequestCutOffTimeTips') }}</div>\n                <svg-icon slot=\"reference\" iconClass=\"question-circle\" class=\"question-icon\"></svg-icon>\n              </el-popover>\n              <span>:</span>\n            </template>\n            <template v-if=\"isEdit\">\n              <el-input v-model=\"formData.cutOffTime\" class=\"inbound-request-input\"></el-input>\n              <span class=\"ml8\">{{ $t('FBSDays') }}</span>\n            </template>\n            <span v-else>{{ formData.cutOffTime !== '' ? `${formData.cutOffTime} ${$t('FBSDays')}` : '-' }}</span>\n          </el-form-item>\n          <el-form-item prop=\"timeLevel\" :label=\"$t('FBSInboundTimeDetailLevel') + ': '\">\n            <template slot=\"label\">\n              <span>{{ $t('FBSInboundTimeDetailLevel') }}</span>\n              <el-popover popper-class=\"break-word pms-ele-ui\" placement=\"top\" width=\"400\" trigger=\"hover\">\n                <div class=\"pms-text-left\">{{ $t('FBSInboundRequesttimeLevelTips') }}</div>\n                <svg-icon slot=\"reference\" iconClass=\"question-circle\" class=\"question-icon\"></svg-icon>\n              </el-popover>\n              <span>:</span>\n            </template>\n            <div v-if=\"isEdit\" class=\"time-level-wrapper\">\n              <el-radio-group v-model=\"formData.timeLevel\" class=\"\">\n                <el-radio :label=\"1\">{{ $t('FBSAMOrPM') }}</el-radio>\n                <el-radio :label=\"2\">{{ $t('FBSHours') }}</el-radio>\n                <el-radio :label=\"3\">{{ $t('FBSPeriod') }}</el-radio>\n              </el-radio-group>\n              <div class=\"period-input-wrapper\">\n                <el-input\n                  class=\"period-input\"\n                  :placeholder=\"$t('FBSMaxPeriod')\"\n                  :disabled=\"formData.timeLevel !== 3\"\n                  v-model=\"formData.maxPeriod\"\n                ></el-input>\n                {{ $t('FBSDays') }}\n              </div>\n            </div>\n            <span v-else>{{\n              formData.timeLevel == 1\n                ? $t('FBSAMOrPM')\n                : formData.timeLevel === 2\n                ? $t('FBSHours')\n                : `${$t('FBSMaxPeriod')} ${formData.maxPeriod} ${$t('FBSDays')}`\n            }}</span>\n          </el-form-item>\n          <el-form-item prop=\"editCutOff\">\n            <template slot=\"label\">\n              <span>{{ $t('FBSInboundRequestEditingCutOff') }}</span>\n              <el-popover popper-class=\"break-word pms-ele-ui\" placement=\"top\" width=\"400\" trigger=\"hover\">\n                <div class=\"pms-text-left\">{{ $t('FBSInboundRequestEditingCutOffTips') }}</div>\n                <svg-icon slot=\"reference\" iconClass=\"question-circle\" class=\"question-icon\"></svg-icon>\n              </el-popover>\n              <span>:</span>\n            </template>\n            <template v-if=\"isEdit\">\n              <el-input v-model=\"formData.editCutOff\" class=\"inbound-request-input\"></el-input>\n              <span class=\"ml8\">{{ $t('FBSDaysInAdvance') }}</span>\n            </template>\n            <span v-else>{{\n              formData.editCutOff !== '' ? `${formData.editCutOff} ${$t('FBSDaysInAdvance')}` : '-'\n            }}</span>\n          </el-form-item>\n          <el-form-item>\n            <template slot=\"label\">\n              <span>{{ $t('FBSInboundRequestAutoCancellation') }}</span>\n              <el-popover popper-class=\"break-word pms-ele-ui\" placement=\"top\" width=\"400\" trigger=\"hover\">\n                <div class=\"pms-text-left\">{{ $t('FBSInboundRequestAutoCancellationTips') }}</div>\n                <svg-icon slot=\"reference\" iconClass=\"question-circle\" class=\"question-icon\"></svg-icon>\n              </el-popover>\n              <span>:</span>\n            </template>\n            <template v-if=\"isEdit\">\n              <el-form-item label-width=\"0\" prop=\"autoCancelDays\" :rules=\"autoCancellationRules\">\n                <el-input v-model=\"formData.autoCancelDays\" class=\"inbound-request-input\"></el-input>\n                <span class=\"ml8\">{{ $t('FBSDays') }}</span>\n              </el-form-item>\n            </template>\n            <template v-else>\n              <p>\n                {{ typeof formData.autoCancelDays === 'number' ? `${formData.autoCancelDays} ${$t('FBSDays')}` : '-' }}\n              </p>\n            </template>\n          </el-form-item>\n\n          <el-form-item v-if=\"shopType === 1\" prop=\"pickup_enable\">\n            <template slot=\"label\">\n              <span>{{ $gt('Pickup Service') }}</span>\n              <el-popover popper-class=\"break-word pms-ele-ui\" placement=\"top\" trigger=\"hover\">\n                <div class=\"pms-text-left\">{{ $gt('Enabled for SPX pickup') }}</div>\n                <svg-icon slot=\"reference\" iconClass=\"question-circle\" class=\"question-icon\"></svg-icon>\n              </el-popover>\n              <span>:</span>\n            </template>\n            <template v-if=\"isEdit\">\n              <el-form-item label-width=\"0\">\n                <el-switch v-model=\"formData.pickup_enable\"> </el-switch>\n              </el-form-item>\n            </template>\n            <template v-else>\n              <p>\n                {{ formData.pickup_enable ? 'On' : 'Off' }}\n              </p>\n            </template>\n          </el-form-item>\n          <el-form-item v-if=\"formData.pickup_enable && shopType === 1\" prop=\"pickup_cut_off_time\">\n            <template slot=\"label\">\n              <span>{{ $gt('Pickup Lead-Time Time') }}</span>\n              <el-popover popper-class=\"break-word pms-ele-ui\" placement=\"top\" trigger=\"hover\">\n                <div class=\"pms-text-left\">\n                  {{ $gt('Seller can request SPX inbound pickup X days before the approved inbound date') }}\n                </div>\n                <svg-icon slot=\"reference\" iconClass=\"question-circle\" class=\"question-icon\"></svg-icon>\n              </el-popover>\n              <span>:</span>\n            </template>\n            <template v-if=\"isEdit\">\n              <el-form-item label-width=\"0\">\n                <el-input-number\n                  v-model=\"formData.pickup_cut_off_time\"\n                  class=\"input-text-left\"\n                  placeholder=\"Please Input\"\n                  :min=\"0\"\n                  :max=\"30\"\n                  :controls=\"false\"\n                ></el-input-number>\n              </el-form-item>\n            </template>\n            <template v-else>\n              <p>\n                {{ formData.pickup_cut_off_time || 0 }}\n              </p>\n            </template>\n          </el-form-item>\n          <el-form-item v-if=\"formData.pickup_enable && shopType === 1\" prop=\"deliverable_warehouses\">\n            <template slot=\"label\">\n              <span>{{ $gt('Deliverable to Warehouse') }}</span>\n              <el-popover popper-class=\"break-word pms-ele-ui\" placement=\"top\" trigger=\"hover\">\n                <div class=\"pms-text-left\">{{ $gt('Shopee warehouse available for SPX inbound pickup') }}</div>\n                <svg-icon slot=\"reference\" iconClass=\"question-circle\" class=\"question-icon\"></svg-icon>\n              </el-popover>\n              <span>:</span>\n            </template>\n            <template v-if=\"isEdit\">\n              <el-form-item label-width=\"0\">\n                <el-select\n                  v-model=\"formData.deliverable_warehouses\"\n                  placeholder=\"Please Select\"\n                  class=\"select-width\"\n                  multiple\n                >\n                  <el-option v-for=\"(item, i) in whsOptions\" v-bind=\"item\" :key=\"'deliverable_warehouses'+ i\"> </el-option>\n                </el-select>\n              </el-form-item>\n            </template>\n            <template v-else>\n              <p>\n                {{\n                  Array.isArray(formData.deliverable_warehouses) && formData.deliverable_warehouses.length\n                    ? formData.deliverable_warehouses.join(',')\n                    : '-'\n                }}\n              </p>\n            </template>\n          </el-form-item>\n          <el-form-item v-if=\"formData.pickup_enable && shopType === 1\" prop=\"pickup_email_recipients\">\n            <template slot=\"label\">\n              <span>{{ $gt('Pickup Email Recipients') }}</span>\n              <span>:</span>\n            </template>\n            <template v-if=\"isEdit\">\n              <el-form-item label-width=\"0\">\n                <el-input\n                  placeholder=\"Please Input\"\n                  v-model=\"addEmail\"\n                  :class=\"'email-input-width ' + (isFocusEmailInput ? 'is-focus' : '')\"\n                  @focus=\"isFocusEmailInput = true\"\n                  @blur=\"isFocusEmailInput = false\"\n                >\n                  <template slot=\"append\">\n                    <el-select\n                      v-model=\"addEmailType\"\n                      placeholder=\"Please Select\"\n                      class=\"email-select-width\"\n                      @focus=\"isFocusEmailInput = true\"\n                      @blur=\"isFocusEmailInput = false\"\n                    >\n                      <el-option v-for=\"item in emailTypeOptions\" v-bind=\"item\" :key=\"item.value\"> </el-option>\n                    </el-select>\n                  </template>\n                </el-input>\n                <el-button type=\"text\" :disabled=\"formData.pickup_email_recipients.length >= 20\" @click=\"onAddEmail()\">\n                  <i class=\"el-icon-circle-plus-outline\"></i>\n                  Recipients\n                </el-button>\n              </el-form-item>\n            </template>\n            <div class=\"email-show-box\">\n              <span\n                v-if=\"Array.isArray(formData.pickup_email_recipients) && formData.pickup_email_recipients.length\"\n                class=\"email-item\"\n                v-for=\"(emailItem, index) in formData.pickup_email_recipients\"\n                :key=\"index + 'email'\"\n              >\n                {{ emailItem }}\n                <i v-if=\"isEdit\" class=\"el-icon-error email-remove-icon\" @click=\"onRemoveEmail(index)\"></i>\n              </span>\n              <span v-if=\"!(Array.isArray(formData.pickup_email_recipients) && formData.pickup_email_recipients.length)\"\n                >-</span\n              >\n            </div>\n          </el-form-item>\n        </el-form>\n        <section v-if=\"shopType === 2\">\n          <h1 class=\"setting-block-title\">{{$gt('Inland Delivery Buffer')}}\n            <el-popover popper-class=\"break-word pms-ele-ui\" placement=\"top\" width=\"400\" trigger=\"hover\">\n              <div class=\"pms-text-left\">{{ $gt('Inland delivery buffer between clearance time and approved inbound time.') }}</div>\n              <svg-icon slot=\"reference\" iconClass=\"question-circle\" class=\"question-icon\"></svg-icon>\n            </el-popover>\n          </h1>\n          <el-form class=\"inbound-setting-form\" ref=\"deliveryBufferWhsForm\" label-position=\"right\" label-width=\"280px\" :model=\"deliveryBufferWhsForm\" :show-message=\"isEdit\">\n            <el-row v-for=\"item in deliveryBufferWhsSchema\" :key=\"item.field\" span=\"24\">\n              <el-form-item :required=\"item.required\" :prop=\"item.field\" :label=\"`${item.label} :`\">\n                <formItem @input=\"onInputDeliveryBufferWhsForm\" :renderData=\"{ schema: item, form: deliveryBufferWhsForm }\"></formItem>\n                <span v-if=\"item.suffix\">{{item.suffix}}</span>\n              </el-form-item>\n            </el-row>\n          </el-form>\n          <h1 class=\"setting-block-title\">{{$gt('Carton Settings')}}\n            <el-popover popper-class=\"break-word pms-ele-ui\" placement=\"top\" width=\"400\" trigger=\"hover\">\n              <div class=\"pms-text-left\">{{ $gt('The maximum value of a carton.') }}</div>\n              <svg-icon slot=\"reference\" iconClass=\"question-circle\" class=\"question-icon\"></svg-icon>\n            </el-popover>\n          </h1>\n          <el-form class=\"inbound-setting-form\" ref=\"cartonForm\" label-position=\"right\" label-width=\"280px\" :model=\"formData\" :show-message=\"isEdit\">\n            <el-row v-for=\"item in cartonSchema\" :key=\"item.field\" span=\"24\">\n              <el-form-item :required=\"item.required\" :prop=\"item.field\" :label=\"`${item.label} :`\">\n                <formItem @input=\"onInputCartonForm\" :renderData=\"{ schema: item, form: formData }\"></formItem>\n                <span v-if=\"item.suffix\">{{item.suffix}}</span>\n              </el-form-item>\n            </el-row>\n          </el-form>\n        </section>\n      </section>\n    </section>\n    <actionLog :visible=\"actionLogDialog\" :configID=\"configID\" @close=\"closeActionLogDialog\"></actionLog>\n  </el-container>\n</template>\n\n<script>\nimport { getSettings, updateSettings } from '@/api/FBS/inbound';\nimport { Permission } from '@/utils/constant';\nimport moment from 'moment';\nimport { hasPermission } from '@/utils/permission';\nimport actionLog from './actionLog';\nimport formItem from '@/components/BaseItem/formItem';\n\nfunction filterNull(data) {\n  const res = {};\n  Object.keys(data).forEach(key => {\n    if (data[key] !== null) res[key] = data[key];\n  });\n  return res;\n}\n\nconst DEFAULT_FORM = {\n  cutOffTime: '',\n  timeLevel: '',\n  editCutOff: 2,\n  autoCancellationForCB: '',\n  autoCancellationForLocal: '',\n  autoCancelDays: '',\n  maxPeriod: '',\n  deliverable_warehouses: [],\n  pickup_cut_off_time: 0,\n  pickup_email_recipients: []\n};\nexport default {\n  components: {\n    actionLog,\n    formItem\n  },\n  data() {\n    return {\n      deliveryBufferWhsForm: {},\n      activeCountry: this.$store.getters.country,\n      configID: '',\n      shopType: 1,\n      cacheShopType: 1,\n      isFocusEmailInput: false,\n      formData: JSON.parse(JSON.stringify(DEFAULT_FORM)),\n      isEdit: false,\n      canOperate: false,\n      loading: false,\n      actionLogDialog: false,\n      cacheData: {},\n      addEmail: '',\n      addEmailType: '@shopee.com',\n      emailTypeOptions: [\n        {\n          label: '@shopee.com',\n          value: '@shopee.com'\n        },\n        {\n          label: '@sea.com',\n          value: '@sea.com'\n        },\n        {\n          label: '@seagroup.com',\n          value: '@seagroup.com'\n        }\n      ]\n    };\n  },\n  computed: {\n    cartonSchema() {\n      return [\n        {\n          field: 'carton_weight',\n          label: this.$gt('Weight'),\n          suffix: 'kg'\n        },\n        {\n          field: 'carton_length',\n          label: this.$gt('Length'),\n          suffix: 'cm'\n        },\n        {\n          field: 'carton_width',\n          label: this.$gt('Width'),\n          suffix: 'cm'\n        },\n        {\n          field: 'carton_height',\n          label: this.$gt('Height'),\n          suffix: 'cm'\n        },\n        {\n          field: 'carton_max_sku',\n          label: this.$gt('Max Number Of Variations Per Carton'),\n          props: {\n            controls: false,\n            precision: 0,\n            min: 1\n          }\n        }\n      ].map(item => {\n        return {\n          required: true,\n          type: this.isEdit ? 'input-number' : 'text',\n          getDefaultText(value) {\n              return value || value === 0 ? value : '-';\n          },\n          props: {\n            controls: false,\n            precision: 2,\n            min: 0.01\n          },\n          ...item\n        };\n      });\n    },\n    deliveryBufferWhsSchema() {\n      return this.whsOptions.map(item => {\n        const key = item.label;\n        return {\n          field: key,\n          label: key,\n          type: this.isEdit ? 'input-number' : 'text',\n          getDefaultText(value) {\n            return value || value === 0 ? value : '-';\n          },\n          suffix: this.$t('FBSDays'),\n          required: true,\n          props: {\n            controls: false,\n            precision: 0,\n            min: 1\n          }\n        };\n      });\n    },\n    isLocal() {\n      return this.shopType === 1;\n    },\n    countryList() {\n      return this.$store.getters.countrySelectList;\n    },\n    whsOptions() {\n      const list = this.$store.getters.warehouseList\n        .filter(item => item.country === this.activeCountry)\n        .map(item => ({\n          label: item.warehouse,\n          value: item.warehouse\n        }));\n      return list;\n    },\n    rules() {\n      return {\n        cutOffTime: {\n          validator: this.naturalNumberValidator(this.$t('FBSInboundRequestCutOffTime')),\n          trigger: 'blur'\n        },\n        timeLevel: {\n          required: true,\n          trigger: 'change',\n          validator: this.timeLevelValid\n        },\n        pickup_cut_off_time: {\n          required: true,\n          trigger: 'change',\n          validator: this.naturalNumberValidator(this.$gt('Pickup Lead-Time Time'))\n        },\n        deliverable_warehouses: {\n          required: true,\n          trigger: 'change',\n          validator: this.validatorArrayRequired(this.$gt('Deliverable to Warehouse'))\n        },\n        editCutOff: {\n          validator: this.naturalNumberValidator(this.$t('FBSInboundRequestEditingCutOff')),\n          trigger: 'blur'\n        }\n      };\n    },\n    autoCancellationRules() {\n      return {\n        validator: this.naturalNumberValidator(this.$t('FBSInboundRequestAutoCancellation')),\n        trigger: 'blur'\n      };\n    }\n  },\n  watch: {\n    shopType(nv, ov) {\n      if (this.isEdit && this.cacheShopType !== nv) {\n        return new Promise((resolve, reject) => {\n          this.$confirm(this.$t('supplierConfigChangeTypeTips'), 'Warning', {\n            cancelButtonText: this.$t('commonCancel'),\n            confirmButtonText: this.$t('commonConfirm'),\n            customClass: 'pms-ele-ui',\n            confirmButtonClass: 'list-btn',\n            cancelButtonClass: 'list-btn white-grey'\n          })\n            .then(resp => {\n              this.isEdit = false;\n              this.cacheShopType = nv;\n              resolve();\n              this.getPageData(nv);\n            })\n            .catch(() => {\n              this.shopType = ov;\n              reject();\n            });\n        });\n      } else if (!this.isEdit) {\n        this.cacheShopType = nv;\n        this.getPageData(nv);\n      }\n    },\n    'formData.timeLevel'(nv) {\n      if (nv) {\n        this.formData.maxPeriod = '';\n      }\n    }\n  },\n  methods: {\n    onInputCartonForm(schema, value) {\n      this.$set(this.formData, schema.field, value);\n    },\n    onInputDeliveryBufferWhsForm(schema, value) {\n      this.$set(this.deliveryBufferWhsForm, schema.field, value);\n    },\n    moment,\n    onAddEmail() {\n      if (!this.addEmail || this.formData.pickup_email_recipients.includes(this.addEmail + this.addEmailType)) return;\n      this.formData.pickup_email_recipients.push(this.addEmail + this.addEmailType);\n    },\n    onRemoveEmail(index) {\n      this.formData.pickup_email_recipients.splice(index, 1);\n    },\n    timeLevelValid(rules, value, cb) {\n      if (!value) {\n        return cb(new Error(this.$t('FBSInboundTimeDetailLevel')));\n      } else if (value === 3 && (isNaN(parseInt(this.formData.maxPeriod)) || Number(this.formData.maxPeriod) < 0)) {\n        return cb(new Error(this.$t('FBSInboundTimeDetailLevelMaxPeriod')));\n      }\n      cb();\n    },\n    validatorArrayRequired(target) {\n      return (rules, value, cb) => {\n        if (!Array.isArray(value) || value.length === 0) {\n          return cb(new Error(target + 'is Required'));\n        }\n        cb();\n      };\n    },\n    naturalNumberValidator(target) {\n      return (rules, value, cb) => {\n        if (value && (isNaN(parseInt(value)) || Number(value) < 0)) {\n          return cb(new Error(this.$t('FBSMustBeNatureNumber', { target })));\n        }\n        cb();\n      };\n    },\n    onEdit() {\n      this.isEdit = true;\n    },\n    onCancel() {\n      // this.formData = JSON.parse(JSON.stringify(DEFAULT_FORM));\n      // this.formData.cutOffTime = this.cacheData.cutOffTime;\n      // this.formData.timeLevel = this.cacheData.timeLevel;\n      // this.formData.editCutOff = this.cacheData.editCutOff;\n      // this.formData.autoCancelDays = this.cacheData.autoCancelDays;\n      // this.formData.maxPeriod = this.cacheData.maxPeriod;\n      // this.formData = JSON.parse(JSON.stringify(this.formData));\n      this.getPageData();\n      this.isEdit = false;\n      this.$refs.formData.clearValidate();\n    },\n    onShowActionLog() {\n      this.actionLogDialog = true;\n    },\n    closeActionLogDialog() {\n      this.actionLogDialog = false;\n    },\n\n    onBeforeLeaveCountry(activeCountry) {\n      if (this.isEdit) {\n        return new Promise((resolve, reject) => {\n          this.$confirm(this.$t('supplierConfigChangeTypeTips'), 'Warning', {\n            cancelButtonText: this.$t('commonCancel'),\n            confirmButtonText: this.$t('commonConfirm'),\n            customClass: 'pms-ele-ui',\n            confirmButtonClass: 'list-btn',\n            cancelButtonClass: 'list-btn white-grey'\n          })\n            .then(resp => {\n              this.activeCountry = activeCountry;\n              this.isEdit = false;\n              resolve();\n              this.getPageData();\n            })\n            .catch(() => {\n              reject();\n            });\n        });\n      } else {\n        this.activeCountry = activeCountry;\n        this.getPageData();\n        return true;\n      }\n    },\n    async onSave() {\n      const checkList = ['formData'];\n      if (this.shopType === 2) {\n        checkList.push('deliveryBufferWhsForm', 'cartonForm');\n      }\n\n      const res = await Promise.all(checkList.map(name => {\n        return this.$refs[name].validate();\n      }));\n      if (res) this._submitData();\n    },\n    async _submitData() {\n      try {\n        const params = {\n          region: this.activeCountry,\n          shop_type: this.shopType,\n          create_cut_off_time: String(this.formData.cutOffTime).trim() === '' ? -1 : Number(this.formData.cutOffTime),\n          inbound_time_detail_level: this.formData.timeLevel,\n          max_period: String(this.formData.maxPeriod).trim() === '' ? -1 : Number(this.formData.maxPeriod),\n          edit_cut_off_time: String(this.formData.editCutOff).trim() === '' ? -1 : Number(this.formData.editCutOff),\n          auto_cancel_days:\n            String(this.formData.autoCancelDays).trim() === '' ? -1 : Number(this.formData.autoCancelDays),\n          pickup_enable: this.formData.pickup_enable,\n          pickup_cut_off_time: this.formData.pickup_cut_off_time,\n          deliverable_warehouses: this.formData.deliverable_warehouses,\n          pickup_email_recipients: this.formData.pickup_email_recipients\n        };\n\n        if (this.shopType === 2) {\n          params.inland_delivery_buffer = this.whsOptions.map(item => {\n            const key = item.label;\n            return {\n              warehouse: key,\n              buffer: parseInt(this.deliveryBufferWhsForm[key])\n            };\n          });\n          this.cartonSchema.forEach(item => {\n            params[item.field] = this.formData[item.field];\n          });\n        }\n\n        this.loading = true;\n        const res = await updateSettings(params);\n        if (res && res.retcode === 0) {\n          this.$message({\n            type: 'success',\n            message: this.$t('commonSuccess')\n          });\n          this.isEdit = false;\n          this.getPageData(this.shopType);\n        } else {\n          this.$message({ type: 'error', message: 'commonFailed' });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loading = false;\n      }\n    },\n    async getPageData(shopType) {\n      try {\n        const params = {\n          region: this.activeCountry,\n          shop_type: shopType || this.shopType\n        };\n        // console.log('params', params);\n        this.loading = true;\n        // const res = {\n        //   retcode: 0,\n        //   message: 'success',\n        //   data: {\n        //     id: 233,\n        //     region: 'TW',\n        //     create_cut_off_time: -1, // -1: 未填\n        //     edit_cut_off_time: -1, // -1 未填\n        //     inbound_time_detail_level: -1, // -1:未填   1: AM/PM  2: hours\n        //     auto_cancel_cb_days: -1, // -1 未填\n        //     auto_cancel_local_days: -1 // -1 未填\n        //   }\n        // };\n        const res = await getSettings(params);\n        if (res && res.retcode === 0) {\n          this.configID = res.data.id;\n          this.formData = Object.assign({}, JSON.parse(JSON.stringify(DEFAULT_FORM)), filterNull(res.data));\n          this.formData.cutOffTime = res.data.create_cut_off_time === -1 ? '' : res.data.create_cut_off_time;\n          this.formData.timeLevel = res.data.inbound_time_detail_level;\n          this.formData.maxPeriod = res.data.max_period === -1 ? '' : res.data.max_period;\n          this.formData.editCutOff = res.data.edit_cut_off_time === -1 ? '' : res.data.edit_cut_off_time;\n          this.formData.autoCancelDays = res.data.auto_cancel_days === -1 ? '' : res.data.auto_cancel_days;\n          this.deliveryBufferWhsForm = (res.data.inland_delivery_buffer || []).reduce((acc, cur) => {\n            acc[cur.warehouse] = cur.buffer;\n            return acc;\n          }, {});\n          this.formData = JSON.parse(JSON.stringify(this.formData));\n          // this.cacheData = JSON.parse(JSON.stringify(this.formData));\n        } else {\n          this.$message({ type: 'error', message: res.info || res.message });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loading = false;\n      }\n    }\n  },\n  created() {\n    this.canOperate = hasPermission(Permission.EDIT_INBOUND_REQUEST_SETTINGS);\n    this.getPageData();\n  }\n};\n</script>\n\n<style scoped lang=\"scss\">\n@import '~@/styles/variables.scss';\n\n.setting-block-title {\n  color: #333;\n  font-size: 16px;\n  font-weight: 500;\n  margin-bottom: 18px;\n}\n\n.inbound-setting-form {\n  /deep/ .el-input-number--medium {\n    width: 96px;\n    margin-right: 5px;\n    .el-input__inner {\n     text-align: left;\n    }\n  }\n}\n\n.email-show-box {\n  border: 1px solid #ddd;\n  padding: 0 8px 4px;\n  border-radius: 2px;\n  .email-item {\n    position: relative;\n    display: inline-block;\n    margin-top: 12px;\n    margin-right: 50px;\n    background-color: #f8f8f8;\n    border-radius: 4px;\n    line-height: 1.5em;\n    padding: 0 15px 0 8px;\n    .email-remove-icon {\n      color: #b8b8b8;\n      position: absolute;\n      right: -6px;\n      top: -6px;\n      cursor: pointer;\n    }\n  }\n}\n\n.FBS-inbound-settings-wrapper {\n  padding: 0 20px;\n  display: block;\n  .list-header-wrapper {\n    position: relative;\n    margin-bottom: 16px;\n  }\n  .tab-wrapper {\n    margin-top: 32px;\n  }\n  .main-wrapper {\n    width: 100%;\n    padding: 0;\n    .flow-type {\n      display: flex;\n      align-items: center;\n      .flow-type-title {\n        font-size: 14px;\n        margin-right: 12px;\n      }\n      .flow-type-select {\n        width: 240px;\n      }\n    }\n    .setting-wrapper {\n      padding: 20px;\n      border: 1px solid #ececec;\n      .setting-title {\n        font-size: 18px;\n        line-height: 21px;\n        margin-bottom: 16px;\n      }\n      .role-title {\n        font-size: 14px;\n        font-weight: normal;\n        width: 160px;\n        margin-top: 7px;\n      }\n      .role-content {\n        .role-edit-wrapper {\n          margin-bottom: 24px;\n        }\n        .role-select {\n          width: 240px;\n        }\n        .role-delete-icon {\n          color: #c0c4cc;\n          font-size: 18px;\n          vertical-align: middle;\n          cursor: pointer;\n          margin-left: 8px;\n        }\n      }\n      .show-wrapper {\n        margin-top: 16px;\n        font-size: 14px;\n        .role-name {\n          font-weight: bold;\n          margin-right: 16px;\n          vertical-align: middle;\n        }\n        .role-arrow-icon {\n          fill: $blue;\n          width: 16px;\n          height: 16px;\n          margin-right: 16px;\n          vertical-align: middle;\n        }\n      }\n      .add-new-btn {\n        font-size: 14px;\n        font-weight: bold;\n        vertical-align: baseline;\n        margin: 0;\n        .add-new-icon {\n          font-size: 16px;\n          font-weight: bold;\n          vertical-align: baseline;\n        }\n      }\n      .time-level-wrapper {\n        display: flex;\n        align-items: center;\n      }\n      .period-input-wrapper {\n        margin-left: -60px;\n        .period-input {\n          width: 100px;\n        }\n      }\n    }\n  }\n}\n</style>\n<style lang=\"scss\">\n@import '~@/styles/common.scss';\n\n.FBS-inbound-settings-wrapper {\n  .input-text-left .el-input__inner {\n    text-align: left;\n  }\n  .email-input-width {\n    position: relative;\n    width: 340px;\n    border: 1px solid #dcdfe6;\n    border-radius: 2px;\n    &.is-focus {\n      outline: #3d61d1 solid 1px;\n      outline-offset: 0;\n    }\n    .el-select {\n      .el-input__inner {\n        border-left: 1px solid #dcdfe6 !important;\n      }\n    }\n    .el-input__inner {\n      width: 200px;\n      border-color: transparent !important;\n      &:focus {\n        outline: 0;\n      }\n    }\n    .email-select-width {\n      width: 140px;\n      .el-input__inner {\n        width: 100%;\n      }\n    }\n    &:hover {\n      .el-input__inner {\n        background: #fafdfd;\n      }\n    }\n  }\n\n  .select-width {\n    width: 200px;\n  }\n  .inbound-request-input {\n    width: 96px;\n  }\n  .el-form {\n    .el-form-item {\n      margin-bottom: 18px;\n    }\n  }\n  .shop-type-btn {\n    margin-top: 20px;\n    .el-radio-button__orig-radio:checked + .el-radio-button__inner {\n      background-color: #3d6ed1;\n      border-color: #3d6ed1;\n    }\n    .el-radio-button__inner {\n      border-radius: 0;\n      width: 100px;\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/inboundRequest/singleValidateUnlist.vue","messages":[{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":37,"column":7,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":37,"endColumn":8,"fix":{"range":[1558,1559],"text":""}},{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":79,"column":10,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":79,"endColumn":11,"fix":{"range":[2208,2209],"text":""}}],"errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"<template>\n  <div class=\"fbs-inbound-single-vaidate-dialog\">\n    <el-dialog\n    :title=\"$t('SkuInfoConfirmation')\"\n    :visible.sync=\"dialogVisible\"\n    @close=\"onClose\"\n    >\n    <section class=\"fbs-inbound-confirm-tips\">\n      <p>You have raise <span class=\"fbs-inbound-number-strong\">{{total}}</span> SKU in this inbound request,</p>\n      <p>These <span class=\"fbs-inbound-number-strong\">{{list.length}}</span> SKU are Unlist status, still confirm to raise inbound request?</p>\n    </section>\n    <div class=\"pms-ui\" v-loading=\"loading\">\n      <el-table :data=\"list\">\n        <el-table-column :label=\"$t('commonSkuID')\" prop=\"sku_id\"></el-table-column>\n        <el-table-column :label=\"$t('commonSkuName')\" prop=\"sku_name\"></el-table-column>\n        <el-table-column :label=\"$t('FBSFulfillmentSKUName')\" prop=\"fulfillment_sku_name\"></el-table-column>\n        <el-table-column :label=\"$t('commonAction')\" width=\"100\">\n          <template slot-scope=\"scope\">\n            <el-button @click=\"removeSkuItem(scope.row.sku_id)\" type=\"text\" class=\"remove-button\">{{$t('commonRemove')}}</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </div>\n    <div slot=\"footer\" class=\"dialog-footer pms-ui\">\n      <el-button @click=\"onClose\" :loading=\"loading\">{{$t('commonBackToEdit')}}</el-button>\n      <el-button type=\"primary\" :loading=\"loading\" :disabled=\"total === 0\"\n      @click=\"confirm\">{{$t('commonConfirmSubmit')}}</el-button>\n    </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  components: {},\n  data () {\n    return {\n      dialogVisible: false\n    };\n  },\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    list: {\n      type: Array,\n      default: () => []\n    },\n    total: {\n      type: Number,\n      default: 0\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {},\n  watch: {\n    '$props.visible': {\n      handler(cur) {\n        this.dialogVisible = cur;\n      }\n    }\n  },\n  methods: {\n    onClose() {\n      this.$emit('close');\n    },\n    removeSkuItem(sku_id) {\n      this.$emit('remove', sku_id);\n    },\n    confirm() {\n      this.$emit('confirm', true);\n    }\n  },\n  created () {}\n};\n</script>\n\n<style lang='scss' scoped>\n  .fbs-inbound-number-strong {\n    color: #3d6ed1;\n    font-weight: 600;\n  }\n  .fbs-inbound-confirm-tips {\n    margin-bottom: 15px;\n  }\n</style>\n<style lang='scss'>\n.fbs-inbound-single-vaidate-dialog {\n  .el-dialog__body {\n    padding: 0 20px;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/inboundRequest/utils.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/inventory/config/expirationAlert/actionLog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/inventory/config/expirationAlert/index.vue","messages":[{"ruleId":"vue/no-template-shadow","severity":2,"message":"Variable 'region' is already declared in the upper scope.","line":8,"column":20,"nodeType":"Identifier","endLine":8,"endColumn":26},{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":167,"column":7,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":167,"endColumn":8,"fix":{"range":[7370,7371],"text":""}},{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":586,"column":10,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":586,"endColumn":11,"fix":{"range":[21258,21259],"text":""}},{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":591,"column":10,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":591,"endColumn":11,"fix":{"range":[21403,21404],"text":""}}],"errorCount":4,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"<template>\n  <div class=\"fbs-expiration-alert\">\n    <div class=\"fbs-inventory-config-region\">\n      <div>\n        <span>{{$t('commonRegion')}}</span>\n          <el-select v-model=\"region\" placeholder=\"Please Select\" @change=\"onBeforeLeaveRegion\">\n            <el-option\n            v-for=\"region in regionList\"\n            :key=\"region.value\"\n            :label=\"region.label\"\n            :value=\"region.value\"></el-option>\n          </el-select>\n      </div>\n    </div>\n    <div class=\"fbs-expiration-alert-tab\">\n      <el-tabs v-model=\"shopType\" type=\"card\" @tab-click=\"onTabClick\">\n        <el-tab-pane\n        v-for=\"item in shopTypeList\"\n        :key=\"item.value\"\n        :name=\"item.label\"\n        :label=\"item.label\"\n        >\n        </el-tab-pane>\n      </el-tabs>\n    </div>\n    <div class=\"fbs-expiration-alert-content pms-ele-ui pms-ui\">\n      <div class=\"alert-control\">\n          <el-button class=\"list-btn white-blue\" v-if=\"!isEdit\" @click=\"onShowActionLog(true)\">\n            {{$t('commonActionLog')}}\n          </el-button>\n          <el-button class=\"list-btn\" v-if=\"canOperate && !isEdit\" @click=\"onEdit\">\n            {{$t('commonEdit')}}\n          </el-button>\n          <el-button class=\"list-btn white-grey\" v-if=\"isEdit\" @click=\"onCancel\">\n            {{$t('commonCancel')}}\n          </el-button>\n          <el-button class=\"list-btn\" v-if=\"isEdit\" :loading=\"loading\" @click=\"onSave\">\n            {{$t('commonSave')}}\n          </el-button>\n      </div>\n      <ul class=\"alert-form\">\n        <li>\n          <span>{{$t('FBSExpiryLabel')}}</span>\n          <el-select v-model=\"form.expiry_labels\" multiple placeholder=\"Please Select\" v-if=\"isEdit\" @change=\"onFormChange('expiry_labels', $event)\">\n            <el-option v-for=\"item in expiryLabels\" :key=\"item.value\" :value=\"item.value\" :label=\"item.label\" />\n          </el-select>\n          <p v-else>{{Array.isArray(form.expiry_labels) ? transformExpiry(form.expiry_labels) : '-'}}</p>\n        </li>\n        <li>\n          <span>{{$t('commonCategory')}}</span>\n          <el-select v-model=\"form.category_type\" placeholder=\"Please Select\" v-if=\"isEdit\" @change=\"onFormChange('category_type', $event)\">\n            <el-option v-for=\"item in categories\"\n            :key=\"item.value\"\n            :label=\"item.label\"\n            :value=\"item.value\"\n            ></el-option>\n          </el-select>\n          <p v-else>{{(categories.find(item => item.value === form.category_type) || {}).label|| '-'}}</p>\n        </li>\n      </ul>\n      <div class=\"fbs-alert-table pms\">\n        <el-table :data=\"tableList\" v-loading=\"loading\">\n          <el-table-column :label=\"$t('commonCategory')\">\n            <template slot-scope=\"scope\">\n              <div v-if=\"form.category_type === 0\">{{$t('commonAllCategories')}}</div>\n              <div v-else>\n                <div v-if=\"isEdit\">\n                  <el-select v-model=\"tableList[scope.$index].category_id\" :class=\"checkCategory(scope.row, scope.$index) ? 'expiry-error-input' : ''\">\n                    <el-option\n                    v-for=\"item in categoryList\"\n                    :key=\"item.catid\"\n                    :value=\"item.catid\"\n                    :label=\"item.name\"\n                    :disabled=\"categorySelectedList.includes(item.catid)\"\n                    ></el-option>\n                  </el-select>\n                </div>\n                <div v-else>{{(categoryList.find(item => item.catid === scope.row.category_id) || {} ).name}}</div>\n              </div>\n            </template>\n          </el-table-column>\n          <el-table-column :label=\"$t('FBSExpirationMetrics')\">\n            <template slot-scope=\"scope\">\n              <div v-if=\"isEdit\">\n                <el-select v-model=\"tableList[scope.$index].expiration_metrics\" @change=\"onMetricesChange(scope.$index)\">\n                    <el-option\n                    v-for=\"item in expirationMetics\"\n                    :key=\"item.value\"\n                    :value=\"item.value\"\n                    :label=\"item.label\"\n                    ></el-option>\n                </el-select>\n              </div>\n              <div v-else>{{(expirationMetics.find(item => scope.row.expiration_metrics === item.value) || {label: '-'}).label}}</div>\n            </template>\n          </el-table-column>\n          <el-table-column :label=\"$t('FBSNotForSale')\" v-if=\"hasLabel(1)\">\n            <template slot-scope=\"scope\">\n              <div v-if=\"isEdit\" class=\"expiry-input-group\">\n                <el-input :value=\"0\" disabled type=\"number\">\n                </el-input>\n                <span> - </span>\n                <el-input v-model=\"tableList[scope.$index].not_for_sale\" type=\"number\" :class=\"checkSale(scope.row) ? 'expiry-error-input' : ''\" @change=\"onSaleChange($event, scope.$index)\">\n                  <template slot=\"append\">{{scope.row.expiration_metrics === 0 ? 'day' : '%'}}</template>\n                </el-input>\n              </div>\n              <div v-else>{{`0 - ${scope.row.not_for_sale}${scope.row.expiration_metrics === 0 ? 'day' : '%'}`}}</div>\n            </template>\n          </el-table-column>\n          <el-table-column :label=\"$t('FBSExpiringTag')\" v-if=\"hasLabel(2)\">\n            <template slot-scope=\"scope\">\n              <div v-if=\"isEdit\" class=\"expiry-input-group\">\n                <el-input :value=\"getExpiryPreNumber(scope.row)\" disabled type=\"number\">\n                </el-input>\n                <span> - </span>\n                <el-input v-model=\"tableList[scope.$index].expiring_tag\" type=\"number\" :class=\"checkTag(scope.row) ? 'expiry-error-input' : ''\" @change=\"onTagChange($event, scope.$index)\">\n                  <template slot=\"append\">{{scope.row.expiration_metrics === 0 ? 'day' : '%'}}</template>\n                </el-input>\n              </div>\n              <div v-else>\n                {{`${getExpiryPreNumber(scope.row)} - ${scope.row.expiring_tag}${scope.row.expiration_metrics === 0 ? 'day' : '%'}`}}\n              </div>\n            </template>\n          </el-table-column>\n          <el-table-column\n          :width=\"200\"\n          :label=\"$t('commonAction')\"\n          v-if=\"isEdit && form.category_type === 1\">\n            <template slot-scope=\"scope\">\n              <el-button type=\"text\" @click=\"removeItem(scope.row, scope.$index)\">\n                {{$t('commonRemove')}}\n              </el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n        <el-button class=\"add-new-button\"\n          v-if=\"isEdit && form.category_type === 1\"\n          @click=\"addNewCategroy\"\n        >\n        <svg-icon class=\"icon_add\" icon-class=\"srmAdd\" />\n        {{$t('commonAddNewCategory')}}</el-button>\n      </div>\n    </div>\n    <action-log\n    :visible=\"actionVisible\"\n    @close=\"onShowActionLog(false)\"\n    :shopType=\"shopType\"\n    :region=\"region\"\n    :category=\"categoryList\"\n    :labels=\"expiryLabels\"\n    ></action-log>\n  </div>\n</template>\n\n<script>\nimport { Permission } from '@/utils/constant';\nimport { hasPermission } from '@/utils/permission';\nimport { getCategoryList } from '@/api/userRole';\nimport { getExpiryConfig, saveExpiryConfig } from '@/api/FBS/expiryConfig';\nimport actionLog from './actionLog';\nconst tableFields = ['expiration_metrics', 'not_for_sale', 'expiring_tag', 'category_id'];\nexport default {\n  name: 'FBSInventoryExpiryAlert',\n  components: {\n    actionLog\n  },\n  data () {\n    return {\n      region: this.$store.getters.country,\n      cacheRegion: this.$store.getters.country,\n      actionVisible: false,\n      loading: false,\n      isSaving: false,\n      form: {\n        category_type: 1,\n        expiry_labels: [1, 2]\n      },\n      cacheFormDetail: {},\n      cacheFormEdit: {},\n      shopType: 'CB',\n      cacheShopType: 'CB',\n      canOperate: false,\n      isEdit: false,\n      tableList: [],\n      cacheTableList: [],\n      categoryList: []\n    };\n  },\n  computed: {\n    regionList() {\n      return this.$store.getters.countrySelectList;\n    },\n    categorySelectedList() {\n      return this.tableList.map(item => item.category_id);\n    },\n    expirationMetics() {\n      return [\n        {value: 0, label: this.$t('FBSDaysBeforeExpiry')},\n        {value: 1, label: this.$t('FBSPercentOfLifecycle')}\n      ];\n    },\n    shopTypeList() {\n      return [\n          { value: 1, label: 'CB' },\n          { value: 0, label: 'Local'}\n        ];\n      },\n    expiryLabels() {\n      return [\n        {value: 1, label: this.$t('FBSNotForSale')},\n        {value: 2, label: this.$t('FBSExpiringTag')}\n      ];\n    },\n    categories() {\n      return [\n        {value: 0, label: this.$t('FBSByAllCategories')},\n        {value: 1, label: this.$t('FBSbyIndividualCategory')}\n      ];\n    }\n  },\n  methods: {\n    transformExpiry(labels) {\n      return labels.map(item => {\n        return (this.expiryLabels.find(expiryItem => expiryItem.value === item) || {}).label;\n      }).join('; ');\n    },\n    hasLabel(label) {\n      return (this.isEdit && Array.isArray(this.cacheFormEdit.expiry_labels) && this.cacheFormEdit.expiry_labels.includes(label)) || (!this.isEdit && Array.isArray(this.form.expiry_labels) && this.form.expiry_labels.includes(label));\n    },\n    onTabClick() {\n      if (this.shopType !== this.cacheShopType) {\n        if (this.isEdit) {\n          this.$confirm(this.$t('supplierConfigChangeTypeTips'), 'Warning', {\n          cancelButtonText: this.$t('commonCancel'),\n          confirmButtonText: this.$t('commonConfirm'),\n          customClass: 'pms-ele-ui',\n          confirmButtonClass: 'list-btn',\n          cancelButtonClass: 'list-btn white-grey'\n          }).then(resp => {\n            this.cacheShopType = this.shopType;\n            this.getConfig();\n            this.isEdit = false;\n          })\n          .catch(() => {\n            this.shopType = this.cacheShopType;\n          });\n        } else {\n          this.cacheShopType = this.shopType;\n          this.getConfig();\n        }\n      }\n    },\n    getExpiryPreNumber(row) {\n      if (this.isEdit && this.cacheFormEdit.expiry_labels.includes(1)) {\n        return Number(row.not_for_sale) || 0;\n      } else if (!this.isEdit && this.form.expiry_labels.includes(1)) {\n        return Number(row.not_for_sale) || 0;\n      } else {\n        return 0;\n      }\n    },\n    onFormChange(field, value) {\n      if (field === 'expiry_labels' && value.length === 0) {\n        this.form = {...this.cacheFormEdit};\n        return this.$message.error(this.$t('ExpiryLabelAtLeastTip'));\n      }\n      if (this.tableList.length === 0) {\n        this.cacheFormEdit = {...this.form};\n        this.isSaving = false;\n        this.onResetTable();\n        return;\n      } else if (this.tableList.length === 1 && !this.tableList[0].not_for_sale && !this.tableList[0].expiring_tag) {\n        this.cacheFormEdit = {...this.form};\n        this.isSaving = false;\n        if (field === 'expiry_labels') {\n            this.tableList.forEach((item, index) => {\n              this.onMetricesChange(index);\n            });\n          } else {\n            this.onResetTable();\n          }\n        return;\n      }\n      const content = field === 'category_type' ? this.$t('ExpiryCategoryChangeTip') : this.$t('ExpiryLabelChangeTip');\n      this.$confirm(content, 'Warning', {\n        cancelButtonText: this.$t('commonCancel'),\n        confirmButtonText: this.$t('commonConfirm'),\n        customClass: 'pms-ele-ui',\n        confirmButtonClass: 'list-btn',\n        cancelButtonClass: 'list-btn white-grey'\n      })\n        .then(resp => {\n          this.cacheFormEdit = {...this.form};\n          this.isSaving = false;\n          if (field === 'expiry_labels') {\n            this.tableList.forEach((item, index) => {\n              this.onMetricesChange(index);\n            });\n          } else {\n            this.onResetTable();\n          }\n        })\n        .catch(() => {\n          this.form = {...this.cacheFormEdit};\n        });\n    },\n    onSaleChange(sale, index) {\n      let value = Number(sale) || 0;\n      const target = this.tableList[index];\n      if (target.expiration_metrics === 0) {\n        value = Math.round(value);\n        if (value <= 0) {\n          target.not_for_sale = 1;\n        } else {\n          target.not_for_sale = Number(value);\n        }\n      }\n      if (target.expiration_metrics === 1) {\n        if (value <= 0) {\n          target.not_for_sale = 0.01;\n        } else if (value > 99.99) {\n          target.not_for_sale = 99.99;\n        } else {\n          target.not_for_sale = Number(value.toFixed(2));\n        }\n      }\n      if (target.expiring_tag !== undefined) {\n        this.onTagChange(target.expiring_tag, index);\n      }\n    },\n    onMetricesChange(index) {\n      const target = this.tableList[index];\n      this.$delete(target, 'not_for_sale');\n      this.$delete(target, 'expiring_tag');\n    },\n    onTagChange(value, index) {\n      value = Number(value) || 0;\n      const target = this.tableList[index];\n      const preNum = this.getExpiryPreNumber(target);\n      if (target.expiration_metrics === 0) {\n        value = Math.round(value);\n        if (value < preNum || value === preNum) {\n          target.expiring_tag = preNum + 1;\n        } else {\n          target.expiring_tag = Number(value);\n        }\n      }\n      if (target.expiration_metrics === 1) {\n        if (value < preNum || value === preNum) {\n          target.expiring_tag = preNum + 0.01;\n        } else if (value > 100) {\n          target.expiring_tag = 100;\n        } else {\n          target.expiring_tag = Number(value.toFixed(2));\n        }\n      }\n    },\n    checkSale(row) {\n      if (!Number(row.not_for_sale) && this.isSaving) {\n        return this.$t('commonIsRequired', {target: this.$t('FBSNotForSale')});\n      }\n      return '';\n    },\n    checkCategory(row, index) {\n      if (row.category_id !== 0 && !row.category_id && this.isSaving) {\n        return this.$t('categoryRequired');\n      }\n      const hasSame = this.tableList.some((item, i) => {\n        return index !== i && item.category_id !== undefined && item.category_id === row.category_id;\n      });\n      if (hasSame) {\n        return this.$t('ExpiryCategoryDuplicate');\n      }\n      return '';\n    },\n    checkTag(row) {\n      if (!Number(row.expiring_tag) && this.isSaving) {\n        return this.$t('commonIsRequired', {target: this.$t('FBSExpiringTag')});\n      }\n      return '';\n    },\n    onResetTable() {\n      this.isSaving = false;\n      this.tableList = [{\n        expiration_metrics: 0\n      }];\n    },\n    onBeforeLeaveRegion(value) {\n      if (this.isEdit) {\n        this.$confirm(this.$t('supplierConfigChangeTypeTips'), 'Warning', {\n          cancelButtonText: this.$t('commonCancel'),\n          confirmButtonText: this.$t('commonConfirm'),\n          customClass: 'pms-ele-ui',\n          confirmButtonClass: 'list-btn',\n          cancelButtonClass: 'list-btn white-grey'\n        }).then(resp => {\n          this.cacheRegion = value;\n          this.getConfig();\n          this.getCategoryList();\n          this.isEdit = false;\n        })\n        .catch(() => {\n          this.region = this.cacheRegion;\n        });\n      } else {\n        this.getConfig();\n        this.getCategoryList();\n      }\n    },\n    onShowActionLog(isShow) {\n      this.actionVisible = isShow;\n    },\n    onEdit() {\n      this.isEdit = true;\n      this.cacheTableList = this.tableList.map(item => {\n        return {...item};\n      });\n      this.cacheFormDetail = {...this.form};\n      this.cacheFormEdit = {...this.form};\n    },\n    addNewCategroy() {\n      this.isSaving = false;\n      this.tableList.push({\n        expiration_metrics: 0\n      });\n    },\n    getCategoryList() {\n      getCategoryList({ catids: 0, country: this.region, cs_status_list: 1 }).then(catResp => {\n          if (catResp.status !== 0) {\n            this.$message.error(catResp.info);\n          } else {\n            this.categoryList = catResp.data.cats || [];\n          }\n        });\n    },\n    onCancel() {\n      this.isEdit = false;\n      this.tableList = this.cacheTableList.map(item => {\n        return {...item};\n      });\n      this.form = {...this.cacheFormDetail};\n    },\n    removeItem(row, index) {\n      this.tableList.splice(index, 1);\n    },\n    checkAll() {\n      return this.tableList.some((item, index) => {\n        let hasError = false;\n        if (this.cacheFormEdit.category_type === 1) {\n          const message = this.checkCategory(item, index);\n          if (message.length) {\n            this.$message.error(message);\n            hasError = true;\n          }\n        }\n        if (this.cacheFormEdit.expiry_labels.includes(1)) {\n          const message = this.checkSale(item);\n          if (message) {\n            this.$message.error(message);\n            hasError = true;\n          }\n        }\n        if (this.cacheFormEdit.expiry_labels.includes(2)) {\n          const message = this.checkTag(item);\n          if (message) {\n            this.$message.error(message);\n            hasError = true;\n          }\n        }\n        return hasError;\n      });\n    },\n    hasChangeCheck() {\n      let hasChange = this.form.expiry_labels.length !== this.cacheFormDetail.expiry_labels.length;\n      if (!hasChange) {\n        this.form.expiry_labels.some(item => {\n          if (!this.cacheFormDetail.expiry_labels.includes(item)) {\n            hasChange = true;\n            return true;\n          }\n        });\n        if (!hasChange && this.form.category_type !== this.cacheFormDetail.category_type) {\n          hasChange = true;\n        }\n        if (!hasChange && this.tableList.length !== this.cacheTableList.length) {\n          hasChange = true;\n        }\n        if (!hasChange && this.tableList.length !== 0) {\n          if (this.form.category_type === 0) {\n            tableFields.some(field => {\n              if (this.tableList[0][field] !== this.cacheTableList[0][field]) {\n                if ((field === 'not_for_sale' && this.form.expiry_labels.includes(1)) || (field === 'expiring_tag' && this.form.expiry_labels.includes(2))) {\n                  hasChange = Number(this.tableList[0][field]) !== Number(this.cacheTableList[0][field]);\n                } else {\n                  hasChange = true;\n                }\n              }\n              return hasChange;\n            });\n          } else {\n            this.tableList.some((item, index) => {\n              const config = this.cacheTableList.find(cacheItem => Number(item.category_id) === Number(cacheItem.category_id));\n              if (!config) {\n                hasChange = true;\n              } else {\n                tableFields.some(field => {\n                  if (item[field] !== config[field]) {\n                    if ((field === 'not_for_sale' && this.form.expiry_labels.includes(1)) || (field === 'expiring_tag' && this.form.expiry_labels.includes(2))) {\n                      hasChange = Number(item[field]) !== Number(this.cacheTableList[index][field]);\n                    } else if (field === 'expiration_metrics' || field === 'category_id') {\n                      hasChange = true;\n                    }\n                  }\n                  return hasChange;\n                });\n              }\n              return hasChange;\n            });\n          }\n        }\n      }\n      return hasChange;\n    },\n    onSave() {\n      if (!this.hasChangeCheck()) {\n        return this.$message(this.$t('FBSExpiryChangedTip'));\n      }\n      this.isSaving = true;\n      if (!this.checkAll()) {\n        const shop_type = this.shopTypeList.find(item => item.label === this.shopType).value;\n        const params = {\n          shop_type,\n          ...this.cacheFormEdit,\n          category_configurations: this.tableList\n        };\n        const header = {'X-Region': this.region};\n        this.loading = true;\n        params.category_configurations.forEach((item, index) => {\n          item.not_for_sale = Number(item.not_for_sale);\n          item.expiring_tag = Number(item.expiring_tag);\n        });\n        saveExpiryConfig(params, header).then(res => {\n          if (res.retcode === 0 && res.header.retcode === 0) {\n            this.$message.success(this.$t('commonSaveSuccess'));\n            this.isEdit = false;\n            this.getConfig();\n          } else {\n            this.$message.error(res.message);\n          }\n        }).finally(_ => {\n          this.loading = false;\n        });\n      }\n    },\n    resetConfig() {\n      this.tableList = [];\n      this.form = {\n        category_type: 1,\n        expiry_labels: [1, 2]\n      };\n    },\n    getConfig() {\n      const shop_type = this.shopTypeList.find(item => item.label === this.shopType).value;\n      this.loading = true;\n      getExpiryConfig({shop_type}, {'X-Region': this.region}).then(res => {\n        if (res.retcode === 0 && res.header.retcode === 0) {\n          if (!res.data) {\n            this.resetConfig();\n          } else {\n            this.tableList = res.data.category_configuration || [];\n            this.form = {category_type: res.data.category_type, expiry_labels: res.data.expiry_labels};\n          }\n        } else {\n          this.resetConfig();\n          this.$message.error(res.message || res.info);\n        }\n      }).catch(e => {\n        this.resetConfig();\n        this.$message.error('Error');\n      }).finally(_ => {\n          this.loading = false;\n      });\n    }\n  },\n  watch: {},\n  created () {\n    this.canOperate = hasPermission(Permission.EDIT_FBS_INVENTORY_CONFIG);\n    this.getCategoryList();\n    this.getConfig();\n  },\n  mounted () {\n\n  }\n};\n</script>\n\n<style lang='scss' scoped>\n.fbs-expiration-alert-content {\n  padding: 16px;\n  border: 1px solid #E4E7ED;\n  border-top: none;\n  .alert-control {\n    text-align: right;\n  }\n  .alert-form {\n    margin-bottom: 40px;\n    li {\n      display: inline-flex;\n      align-content: center;\n      margin-right: 40px;\n      span, p {\n        font-size: 14px;\n        line-height: 32px;\n        color: #333333\n      }\n      span {\n        margin-right: 12px;\n      }\n      p {\n        width: 260px;\n      }\n    }\n  }\n  .fbs-alert-table {\n    .expiry-input-group {\n      display: flex;\n      .el-input:first-child {\n        width: 100px;\n      }\n      /deep/ input[type=number] {\n        -moz-appearance: textfield;\n      }\n      /deep/ input[type=number]::-webkit-inner-spin-button,\n      /deep/ input[type=number]::-webkit-outer-spin-button {\n          -webkit-appearance: none;\n          margin: 0;\n      }\n      /deep/ .el-input-group__append, .el-input-group__prepend {\n        padding: 0 5px;\n      }\n      span {\n        padding: 0 5px;\n      }\n    }\n  }\n  .add-new-button{\n    padding:0;\n    border:none;\n    margin-top:10px;\n    color: #3D62D1;\n    font-size: 18px;\n    font-weight: 600;\n    &:hover{\n      background-color: #fff;;\n    }\n    .icon_add{\n      font-size:16px;\n      padding: 2px;\n      border:1px solid #3d62d1;\n      border-radius:15px;\n    }\n  }\n}\n</style>\n<style lang='scss'>\n.fbs-expiration-alert {\n  .fbs-expiration-alert-tab {\n    .el-tabs__header {\n      margin:  0;\n    }\n  }\n  .fbs-expiration-alert-content {\n    .alert-form {\n      .el-select {\n        width: 260px;\n      }\n    }\n  }\n  .expiry-error-input {\n    .el-input__inner {\n      border:1px solid red !important;\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/inventory/config/index.vue","messages":[{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":20,"column":7,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":20,"endColumn":8,"fix":{"range":[601,602],"text":""}},{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":27,"column":12,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":27,"endColumn":13,"fix":{"range":[701,702],"text":""}},{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":59,"column":10,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":59,"endColumn":11,"fix":{"range":[1818,1819],"text":""}}],"errorCount":3,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"<template>\n  <div class=\"fbs-inventory-config\">\n    <el-tabs v-model=\"activeName\" @tab-click=\"handleTabClick\" class=\"fbs-inventory-tabs\">\n      <el-tab-pane v-for=\"tab in tabList\" :label=\"tab.label\" :name=\"tab.value\" :key=\"tab.value\">\n      </el-tab-pane>\n  </el-tabs>\n    <replenish v-if=\"cacheActive === 'replenish'\"  ref=\"replenish\"/>\n    <expiration v-if=\"cacheActive === 'expiration'\" ref=\"expiration\"/>\n  </div>\n</template>\n\n<script>\nimport replenish from './replenishAltert';\nimport expiration from './expirationAlert';\nexport default {\n  components: {\n    replenish,\n    expiration\n  },\n  data () {\n    return {\n      activeName: '',\n      cacheActive: ''\n    };\n  },\n  computed: {\n    tabList () {\n      const list = [\n        { value: 'replenish', label: this.$t('FBSReplenishAlert')},\n        { value: 'expiration', label: this.$t('FBSExpirationAlert')}\n      ];\n      return list;\n    }\n  },\n  watch: {},\n  methods: {\n    handleTabClick(tab, event) {\n      if (this.cacheActive !== this.activeName) {\n        if (this.$refs[this.cacheActive].isEdit) {\n          this.$confirm(this.$t('supplierConfigChangeTypeTips'), 'Warning', {\n          cancelButtonText: this.$t('commonCancel'),\n          confirmButtonText: this.$t('commonConfirm'),\n          customClass: 'pms-ele-ui',\n          confirmButtonClass: 'list-btn',\n          cancelButtonClass: 'list-btn white-grey'\n          }).then(resp => {\n            this.cacheActive = this.activeName;\n            this.$router.replace(`/admin/fbs/inventory/config?activeTab=${tab.name}`);\n          }).catch(() => {\n            this.activeName = this.cacheActive;\n          });\n        } else {\n          this.cacheActive = this.activeName;\n          this.$router.replace(`/admin/fbs/inventory/config?activeTab=${tab.name}`);\n        }\n      }\n    }\n  },\n  created () {\n    let activeTab = this.$route.query.activeTab;\n    if (!activeTab) {\n      activeTab = 'replenish';\n      this.$router.replace(`/admin/fbs/inventory/config?activeTab=replenish`);\n    }\n    this.activeName = activeTab;\n    this.cacheActive = activeTab;\n  }\n};\n</script>\n\n<style lang='scss'>\n.fbs-inventory-config {\n    padding: 17px 20px;\n  .fbs-inventory-tabs {\n    .el-tabs__item {\n      display: inline-block;\n      height: 35px;\n      margin-bottom: 5px;\n      border-bottom: 2px solid transparent;\n      line-height: 35px;\n      font-size: 18px;\n      font-weight: 400;\n      color: #575757;\n    &.is-active {\n      color: #3d6ed1;\n      }\n    &.is-top:nth-child(2) {\n      padding-left: 20px;\n      }\n    }\n    .el-tabs__active-bar {\n      background-color: #3d6ed1;\n    }\n    .el-tabs__nav-prev {\n      left: 5px;\n      line-height: 40px;\n    }\n    .el-tabs__nav-next {\n      right: 5px;\n      line-height: 40px;\n    }\n  }\n  .fbs-inventory-config-region {\n    margin-bottom: 24px;\n    &>div{\n      display: flex;\n      width: 321px;\n      border:1px solid rgb(220, 223, 230);\n      border-radius:4px;\n      overflow: hidden;\n      &>span{\n        flex-shrink: 0;\n        border: #FAFBFD;\n        border-right: 1px solid rgb(220, 223, 230);\n        background: rgb(250, 251, 253);\n        font-size: 14px;\n        padding: 0 8px;\n      }\n      &>* {\n      height: 32px;\n      line-height:32px;\n      }\n      .el-select--medium>.el-input--medium>.el-input__inner{\n        border:none;\n      }\n    }\n  }\n}\n</style>\n<style lang='scss' scoped>\n.fbs-inventory-config {\n\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/inventory/config/replenishAltert/actionLog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/inventory/config/replenishAltert/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/inventory/config/replenishAltert/labelWithTip.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/inventory/fbsInventory/dataList.vue","messages":[{"ruleId":"vue/no-unused-components","severity":2,"message":"The \"ListView\" component has been registered but not used.","line":34,"column":5,"nodeType":"Property","endLine":34,"endColumn":13},{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"Pager\" is not in camelCase.","line":41,"column":5,"nodeType":"Property","endLine":41,"endColumn":18}],"errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"fbs-inventory-table pms-ui\">\n    <check-all-table\n      :dataList=\"itemList\"\n      @checked='handleCheckRows'\n      :tableConfig=\"tableConfig\"\n      :tableSchema=\"tableSchema\"\n    ></check-all-table>\n    <el-pagination\n      :current-page=\"Pager.pageIndex\" background layout=\"sizes, prev, pager, next\" :total.sync=\"Pager.total\"\n      :page-size=\"Pager.size\" :page-sizes=\"[10, 20, 50, 100]\"\n      @current-change=\"handleChangePageIndex\" @size-change=\"handleChangePageSize\"\n    ></el-pagination>\n  </div>\n</template>\n\n<script>\nimport CheckAllTable from '@/components/CheckAllTable/index';\nimport ListView from '@/components/ApproveList/list';\nimport { FBSInventoryCBOptionList } from '@/utils/constant';\nimport { formatValue } from '@/utils/formatParams';\n\nexport default {\n  data() {\n    return {\n      tableConfig: {\n        showCheckBox: false,\n        align: 'center'\n      }\n    };\n  },\n  components: {\n    CheckAllTable,\n    ListView\n  },\n  props: {\n    itemList: {\n      type: Array,\n      default: () => []\n    },\n    Pager: Object\n  },\n  methods: {\n    handleChangePageIndex(index) {\n      this.$emit('getItemList', index);\n    },\n    handleChangePageSize(size) {\n      this.$emit('getItemList', 1, size);\n    },\n    handleCheckRows(type, rows) {\n      this.$emit('checked', type, rows);\n    }\n  },\n  computed: {\n    tableSchema() {\n      return [\n        { field: 'shop_id', label: this.$t('commonShopIDOrName'),\n          render: (schema, row) => `${row.shop_id}/${row.shop_name}`\n        },\n        { field: 'cb_option', label: this.$t('commonCBOption'),\n          type: 'enum', options: FBSInventoryCBOptionList },\n        { field: 'sku_id', label: this.$t('commonSkuIDOrName'),\n          render: (schema, row) => `${row.sku_id}/${row.sku_name}`\n        },\n        // todo 后端写错了字段，影响范围较大，暂时前端用错误字段\n        { field: 'wharehouse', label: this.$t('commonWarehouse') },\n        { field: 'region', label: this.$t('commonRegion') },\n        { field: 'pending_inbound', label: this.$t('commonPendingInbound'),\n          render: (schema, row) => formatValue(row[schema.field])\n        },\n        { field: 'sellable', label: this.$t('commonSellable'),\n          render: (schema, row) => formatValue(row[schema.field])\n        },\n        { field: 'order_reserved', label: this.$t('fbsInventoryReserved'),\n          render: (schema, row) => formatValue(row[schema.field])\n        },\n        { field: 'unfulfillable', label: this.$t('fbsInventoryUnfulfillable'),\n          render: (schema, row) => formatValue(row[schema.field])\n        }\n      ].filter(item => !item.hidden);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  .fbs-inventory-table {\n    margin: -4px 0 20px 0;\n  }\n  .el-pagination {\n    margin-top: 14px;\n    text-align: center;\n  }\n</style>\n\n<style lang=\"scss\">\n  .fbs-inventory-table {\n    .sub-fee-period-type-cell {\n      .short-term-title {\n        padding-right: 2px;\n      }\n      .short-term-date {\n        display: inline-block;\n        width: 70px;\n        opacity: 0.35;\n        font-size: 12px;\n        color: #000000;\n        text-align: left;\n      }\n    }\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/inventory/fbsInventory/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/inventory/fbsInventory/searchForm.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":2,"column":40,"nodeType":"VIdentifier","messageId":"deprecated","endLine":2,"endColumn":46}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-form class=\"search-form\" @submit.native.prevent=\"onSearch\">\n    <el-row>\n      <el-col :span=\"schema.width || 6\" v-for=\"schema in schemaList\" :key=\"schema.field\">\n        <el-form-item :label-width=\"schema.labelWidth || '180px'\" :label=\"schema.label\">\n          <pms-form-item @input=\"modifyForm\" :renderData=\"{ schema, form }\"></pms-form-item>\n        </el-form-item>\n      </el-col>\n    </el-row>\n    <el-row>\n      <el-col :span=\"12\" class=\"left-col\">\n        <div class=\"list-btn search-btn white-blue\" @click=\"onExport\">{{$t(\"commonExport\")}}</div>\n        <div class='export-history-btn list-btn white-blue' @click=\"showExportHistory\">\n          {{$t('commonExportHistory')}}\n        </div>\n      </el-col>\n      <el-col :span=\"12\" class=\"right-col\">\n        <div class=\"list-btn search-btn\" @click=\"onSearch\">{{$t(\"rule.search\")}}</div>\n        <div class=\"list-btn clear-btn\" @click=\"onReset\">{{$t(\"purchaseRequest.clear\")}}</div>\n        <el-button native-type=\"submit\" class=\"hidden-btn\"></el-button>\n      </el-col>\n    </el-row>\n  </el-form>\n</template>\n\n<script>\nimport PMSFormItem, { getSelectOptions } from '@/components/BaseItem/formItem';\nimport { getShopListByIdOrName } from '@/api/shopConfig';\nimport { getSkuIDOrName } from '@/api/FBS/productNomination';\nimport { FBSInventoryCBOptionList } from '@/utils/constant';\n\nexport default {\n  data() {\n    return {\n      shopIDSelectOptions: []\n    };\n  },\n  props: {\n    form: {\n      type: Object,\n      required: true\n    }\n  },\n  components: {\n    'pms-form-item': PMSFormItem\n  },\n  computed: {\n    isUniversalUser() {\n      return this.$store.getters.isUniversalUser;\n    },\n    regionList() {\n      return this.$store.getters.countrySelectList || [];\n    },\n    warehouseList() {\n      const region = this.form.region;\n      return this.$store.getters.warehouseList.filter(warehouse => {\n        return warehouse.country === region;\n      }).map(warehouse => ({ label: warehouse.warehouse, value: warehouse.warehouse }));\n    },\n    schemaList() {\n      return [\n        { field: 'region', type: 'select', label: this.$t('commonRegion'),\n          on: { change: (region) => this.onRegionChange(region) },\n          defaultValue: this.isUniversalUser ? '' : this.$store.getters.country,\n          getChildren: (h) => getSelectOptions(this.isUniversalUser ? [{ label: 'All', value: '' }, ...this.regionList] : this.regionList, h)\n        },\n        { field: 'shop_id', type: 'select', label: this.$t('commonShopIDOrName'),\n          render: (schema, row, h) => ['el-select', {\n            props: {\n              clearable: true, filterable: true, remote: true,\n              value: this.form.shop_id, 'remote-method': this.getShopIdName\n            },\n            on: {\n              input: (value) => { this.modifyForm(schema, value); },\n              change: () => this.onSearch()\n            }\n          }, this.shopIDSelectOptions.map(item => {\n            return h('el-option', { props: { label: item.label, value: item.value }});\n          })]\n        },\n        { field: 'cb_option', type: 'select', label: this.$t('commonCBOption'),\n          getChildren: (h) => getSelectOptions(FBSInventoryCBOptionList, h),\n          on: { change: () => this.onSearch() }\n        },\n        { field: 'sku', type: 'select', label: this.$t('commonSkuIDOrName'),\n          render: (schema, row, h) => (['el-autocomplete', {\n            props: {\n              'popper-class': 'pms-ele-ui supplierIDCompleteWrapperWidth',\n              value: this.form[schema.field],\n              'fetch-suggestions': this.getSkuID,\n              clearable: true\n            },\n            on: {\n              input: (value) => { this.modifyForm(schema, value); },\n              select: (item) => this.handleSkuIDSelect(item)\n            }\n          }])\n        },\n        { field: 'warehouse', type: 'select', label: this.$t('commonWarehouse'),\n          getChildren: (h) => getSelectOptions([{ label: 'All', value: '' }, ...this.warehouseList], h),\n          on: { change: () => this.onSearch() }\n        }\n      ];\n    }\n  },\n  methods: {\n    modifyForm(schema, value) {\n      this.$emit('modify', schema.field, value);\n    },\n    getShopIdName(query) {\n      if (query !== '') {\n        const params = {\n          search_type: 0,\n          shop_id_or_name: query,\n          page_no: 1,\n          count: 20\n        };\n        getShopListByIdOrName(params).then(res => {\n          if (res && res.retcode === 0) {\n            this.shopIDSelectOptions = res.data.shop_list.filter(item => {\n              return !this.form.region || (item.country === this.form.region);\n            }).map(item => ({\n              value: item.shop_id,\n              label: `${item.shop_id}(${item.shop_name})`\n            }));\n          }\n        }).catch(e => { this.$message.error(e); });\n      }\n    },\n    async getSkuID(query = '', cb) {\n      if (`${query}`.trim() === '') return;\n      try {\n        const params = {\n          query: `${query}`.trim(),\n          country: this.form.region || this.regionList.map(item => item.value).join('_')\n        };\n        const resp = await getSkuIDOrName(params);\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n          cb([]);\n        } else {\n          cb(resp.data.map(sku => {\n            return {\n              value: `${sku['sku_id']} ${sku['sku_name']}`,\n              skuID: sku['sku_id']\n            };\n          })\n          );\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    handleSkuIDSelect(item) {\n      this.$emit('modify', 'sku', item.skuID);\n      this.onSearch();\n    },\n    onRegionChange(region) {\n      this.$emit('modify', 'warehouse', '');\n      this.onSearch();\n    },\n    onExport() {\n      this.$emit('export');\n    },\n    showExportHistory() {\n      this.$emit('showExportHistory');\n    },\n    onSearch() {\n      this.$emit('search');\n    },\n    onReset() {\n      this.schemaList.forEach(schema => {\n        this.$emit('modify', schema.field, schema.defaultValue === null ? undefined : schema.defaultValue || '');\n      });\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  .search-form {\n    margin: 22px 0 20px 0;\n    .el-col {\n      height: 58px;\n      line-height: 58px;\n    }\n    .action-row {\n      margin-top: -18px;\n      margin-right: -4px;\n    }\n    .left-col {\n      display: flex;\n      align-items: center;\n      justify-content: flex-start;\n      .white-blue {\n        background: #fff;\n        color: #3D6ED1;\n        border: 1px solid #3D6ED1;\n        border-radius: 2px;\n      }\n    }\n    .right-col {\n      display: flex;\n      align-items: center;\n      justify-content: flex-end;\n      padding-right: 4px;\n      .search-btn {\n        background: #3D6ED1;\n        border-radius: 2px;\n      }\n      .clear-btn {\n        color: #3D6ED1;\n        border: 1px solid #3D6ED1;\n        border-radius: 2px;\n      }\n      .hidden-btn {\n        margin-left: -10px;\n        padding: 0;\n        width: 0;\n        height: 0;\n        visibility: hidden;\n      }\n    }\n  }\n</style>\n\n<style lang=\"scss\">\n  .sub-fee-list .search-form {\n    .el-input__inner {\n      height: 32px;\n    }\n    .el-cascader .el-input__inner {\n      height: 32px !important;\n    }\n    .el-cascader__tags {\n      .el-tag {\n        max-width: calc(100% - 60px);\n        overflow: hidden;\n        text-overflow: ellipsis;\n      }\n    }\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/inventory/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/inventory/layout.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/inventory/stockMovement/detail.vue","messages":[{"ruleId":"vue/no-deprecated-filter","severity":2,"message":"Filters are deprecated.","line":50,"column":33,"nodeType":"VFilterSequenceExpression","messageId":"noDeprecatedFilter","endLine":50,"endColumn":62},{"ruleId":"vue/no-deprecated-filter","severity":2,"message":"Filters are deprecated.","line":99,"column":33,"nodeType":"VFilterSequenceExpression","messageId":"noDeprecatedFilter","endLine":99,"endColumn":62}],"errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"fbs-inventory-stock-detail\" v-loading=\"detailLoading\">\n    <h1>\n      <i class=\"el-icon-arrow-left go-back-icon\" @click=\"goBack\"></i>\n      {{$t('menuStockMovementDetail')}}</h1>\n    <section class=\"basic-information\">\n      <h2>{{$t('commonBasicInformation')}}</h2>\n      <ul>\n        <li v-for=\" item in basicInformation\" :key=\"item.label\">\n          <div class=\"text-align-right\">\n            <span>{{item.label}}:</span>\n          </div>\n          <div>{{item.fields.length === 1 ? detailData[item.fields[0]] : `${detailData[item.fields[0]]}/${detailData[item.fields[1]]}` }}</div>\n        </li>\n      </ul>\n    </section>\n    <section class=\"stock-change-information\">\n      <h2>{{$t('FBSInventoryStockChangeInformation')}}</h2>\n      <el-row :gutter=\"16\">\n        <el-col :span='10'>\n          <el-form>\n            <el-form-item :label=\"$t('commonTimePeriod')\" class=\"search-input-area\">\n              <el-date-picker\n              clearable\n              v-model=\"datePicker\"\n              type=\"daterange\"\n              range-separator=\" \"\n              @change=\"onDateChange\"\n              :picker-options=\"pickerOption\"\n              >\n              </el-date-picker>\n            </el-form-item>\n          </el-form>\n        </el-col>\n      </el-row>\n\n    </section>\n    <section class=\"detail-information\">\n      <el-button class=\"export-button\" @click=\"onExport\">{{$t('commonExport')}}</el-button>\n      <el-tabs v-model=\"activeName\" type=\"card\">\n        <el-tab-pane\n        v-for=\"item in detailData.stock_movement\"\n        :key=\"item.whs_id\"\n        :name=\"item.whs_id\"\n        :label=\"item.whs_id.toLowerCase() === 'all'? $t('FBSAllWarehouse') : item.whs_id\"\n        >\n        <section class=\"information-content\">\n          <el-row class=\"information-content-top\">\n            <el-col :span='12' class=\"information-content-top-left information-inner-content\">\n              <p class=\"date\">{{datePicker[0] | timeFormatter}}</p>\n              <ul>\n                <li>\n                  <h3>{{$t('FBSStartingTotal')}}\n                  </h3>\n                  <h3>{{item.start_total}}</h3>\n                </li>\n                <li>\n                  <h4>{{$t('FBSSellableQty')}}\n                      <el-tooltip placement=\"right\" effect=\"light\" popper-class=\"stock-movement-tips\">\n                        <div slot=\"content\">\n                          <ul>\n                            <li>{{$t('FBSSellableQtyTip')}}</li>\n                          </ul>\n                        </div>\n                        <svg-icon class=\"icon_question\" icon-class=\"question\" />\n                    </el-tooltip>\n                  </h4>\n                  <h4>{{item.starting_sellable}}</h4>\n                </li>\n                <li>\n                  <h4>{{$t('FBSReservedQty')}}\n                    <el-tooltip placement=\"right\" effect=\"light\" popper-class=\"stock-movement-tips\">\n                        <div slot=\"content\">\n                          <ul>\n                            <li>{{$t('FBSReservedQtyTip')}}</li>\n                          </ul>\n                        </div>\n                        <svg-icon class=\"icon_question\" icon-class=\"question\" />\n                    </el-tooltip>\n                  </h4>\n                  <h4>{{item.starting_reserved}}</h4>\n                </li>\n                <li>\n                  <h4>{{$t('FBSUnsellableQty')}}\n                    <el-tooltip placement=\"right\" effect=\"light\" popper-class=\"stock-movement-tips\">\n                        <div slot=\"content\">\n                          <ul>\n                            <li>{{$t('FBSUnsellableQtyTip')}}</li>\n                          </ul>\n                        </div>\n                        <svg-icon class=\"icon_question\" icon-class=\"question\" />\n                    </el-tooltip>\n                  </h4>\n                  <h4>{{item.starting_unsellable}}</h4>\n                </li>\n              </ul>\n            </el-col>\n            <el-col :span=\"12\" class=\"information-inner-content\">\n              <p class=\"date\">{{datePicker[1] | timeFormatter}}</p>\n              <ul>\n                <li>\n                  <h3>{{$t('FBSEndingTotal')}}</h3>\n                  <h3>{{item.end_total}}</h3>\n                </li>\n                <li>\n                  <h4>{{$t('FBSSellableQty')}}\n                    <el-tooltip placement=\"right\" effect=\"light\" popper-class=\"stock-movement-tips\">\n                        <div slot=\"content\">\n                          <ul>\n                            <li>{{$t('FBSSellableQtyTip')}}</li>\n                          </ul>\n                        </div>\n                        <svg-icon class=\"icon_question\" icon-class=\"question\" />\n                    </el-tooltip>\n                  </h4>\n                  <h4>{{item.end_sellable}}</h4>\n                </li>\n                <li>\n                  <h4>{{$t('FBSReservedQty')}}\n                    <el-tooltip placement=\"right\" effect=\"light\" popper-class=\"stock-movement-tips\">\n                        <div slot=\"content\">\n                          <ul>\n                            <li>{{$t('FBSReservedQtyTip')}}</li>\n                          </ul>\n                        </div>\n                        <svg-icon class=\"icon_question\" icon-class=\"question\" />\n                    </el-tooltip>\n                  </h4>\n                  <h4>{{item.end_reserved}}</h4>\n                </li>\n                <li>\n                  <h4>{{$t('FBSUnsellableQty')}}\n                    <el-tooltip placement=\"right\" effect=\"light\" popper-class=\"stock-movement-tips\">\n                        <div slot=\"content\">\n                          <ul>\n                            <li>{{$t('FBSUnsellableQtyTip')}}</li>\n                          </ul>\n                        </div>\n                        <svg-icon class=\"icon_question\" icon-class=\"question\" />\n                    </el-tooltip>\n                  </h4>\n                  <h4>{{item.end_unsellable}}</h4>\n                </li>\n              </ul>\n            </el-col>\n          </el-row>\n          <ul class=\"information-content-bottom\" :gutter=\"20\">\n            <li class=\"information-card-content\">\n              <div>\n                <h5>{{$t('FBSTotalInbound')}}</h5>\n                <h4 :class=\"setColor(item.inbound_total)\"> {{item.inbound_total> 0? '+' :''}}{{item.inbound_total}}</h4>\n              </div>\n              <ul>\n                <li>\n                  <p>{{$t('FBSMyInbound')}}\n                    <el-tooltip placement=\"right\" effect=\"light\" popper-class=\"stock-movement-tips\">\n                        <div slot=\"content\">\n                          <ul>\n                            <li>{{$t('FBSMyInboundTip')}}</li>\n                          </ul>\n                        </div>\n                        <svg-icon class=\"icon_question\" icon-class=\"question\" />\n                    </el-tooltip>\n                  </p>\n                  <p>{{item.inbound_seller}}</p>\n                </li>\n                <li>\n                  <p>{{$t('FBSReturnedfromBuyer')}}\n                    <el-tooltip placement=\"right\" effect=\"light\" popper-class=\"stock-movement-tips\">\n                        <div slot=\"content\">\n                          <ul>\n                            <li>{{$t('FBSReturnedfromBuyerTip')}}</li>\n                          </ul>\n                        </div>\n                        <svg-icon class=\"icon_question\" icon-class=\"question\" />\n                    </el-tooltip>\n                  </p>\n                  <p>{{item.inbound_buyer}}</p>\n                </li>\n              </ul>\n            </li>\n            <li class=\"information-card-content\">\n              <div>\n                <h5>{{$t('FBSTotalOutbound')}}</h5>\n                <h4 :class=\"setColor(item.outbound_total)\">{{item.outbound_total > 0 ? '+' : ''}}{{item.outbound_total}}</h4>\n              </div>\n              <ul>\n                <li>\n                  <p>{{$t('FBSSoldtoBuyers')}}\n                    <el-tooltip placement=\"right\" effect=\"light\" popper-class=\"stock-movement-tips\">\n                      <div slot=\"content\">\n                        <ul>\n                          <li>{{$t('FBSSoldtoBuyersTip')}}</li>\n                        </ul>\n                      </div>\n                      <svg-icon class=\"icon_question\" icon-class=\"question\" />\n                    </el-tooltip>\n                  </p>\n                  <p>{{item.outbound_buyer}}</p>\n                </li>\n                <li>\n                  <p>{{$t('FBSReturntoMe')}}\n                    <el-tooltip placement=\"right\" effect=\"light\" popper-class=\"stock-movement-tips\">\n                      <div slot=\"content\">\n                        <ul>\n                          <li>{{$t('FBSReturntoMeTip')}}</li>\n                        </ul>\n                      </div>\n                      <svg-icon class=\"icon_question\" icon-class=\"question\" />\n                    </el-tooltip>\n                  </p>\n                  <p>{{item.outbound_seller}}</p>\n                </li>\n                <li>\n                  <p>{{$t('FBSDisposed')}}\n                    <el-tooltip placement=\"right\" effect=\"light\" popper-class=\"stock-movement-tips\">\n                      <div slot=\"content\">\n                        <ul>\n                          <li>{{$t('FBSDisposedTip')}}</li>\n                        </ul>\n                      </div>\n                      <svg-icon class=\"icon_question\" icon-class=\"question\" />\n                    </el-tooltip>\n                  </p>\n                  <p>{{item.outbound_disposed}}</p>\n                </li>\n              </ul>\n            </li>\n            <li class=\"information-card-content\">\n              <div>\n                <h5>{{$t('FBSTotalAdjustment')}}</h5>\n                <h4 :class=\"setColor(item.adjustment_total)\">{{item.adjustment_total>0 ? '+' : ''}}{{item.adjustment_total}}</h4>\n              </div>\n              <ul>\n                <li>\n                  <p>{{$t('FBSLostAndFound')}}\n                    <el-tooltip placement=\"right\" effect=\"light\" popper-class=\"stock-movement-tips\">\n                      <div slot=\"content\">\n                        <ul>\n                          <li>{{$t('FBSLostAndFoundTip')}}</li>\n                        </ul>\n                      </div>\n                      <svg-icon class=\"icon_question\" icon-class=\"question\" />\n                    </el-tooltip>\n                  </p>\n                  <p>{{item.adjustment_lost}}</p>\n                </li>\n                <li>\n                  <p>{{$t('FBSTransferBetweenWarehouse')}}\n                    <el-tooltip placement=\"right\" effect=\"light\" popper-class=\"stock-movement-tips\">\n                      <div slot=\"content\">\n                        <ul>\n                          <li>{{$t('FBSTransferBetweenWarehouseTip')}}</li>\n                        </ul>\n                      </div>\n                      <svg-icon class=\"icon_question\" icon-class=\"question\" />\n                    </el-tooltip>\n                  </p>\n                  <p>{{item.adjustment_transfer}}</p>\n                </li>\n              </ul>\n            </li>\n          </ul>\n        </section>\n        </el-tab-pane>\n      </el-tabs>\n    </section>\n  </div>\n</template>\n<script>\nimport { getStockMovementDetail, ExportStockMovementDetail, getSyncTime } from '@/api/FBS/inventory';\nimport { downloadBlobFile } from '@/utils/downloadFile';\nconst TODAY = new Date().getDate();\nimport moment from 'moment';\n  export default {\n    data() {\n      return {\n        detailLoading: false,\n        id: '',\n        syncTime: '',\n        datePicker: [],\n        activeName: 'all',\n        lastGet: {},\n        detailData: {}\n      };\n    },\n    computed: {\n      basicInformation() {\n        return [\n          {\n            label: this.$t('commonShopIDOrName'),\n            fields: ['shop_id', 'shop_name']\n          },\n          {\n            label: this.$t('commonSkuIDOrName'),\n            fields: ['sku_id', 'sku_name']\n          },\n          {\n            label: this.$t('commonRegion'),\n            fields: ['region']\n          },\n          {\n            label: this.$t('commonCBOption'),\n            fields: ['cb_option']\n          }\n        ];\n      },\n      pickerOption() {\n        const _this = this;\n        return {\n          disabledDate(date) {\n            const syncTime = _this.syncTime || moment(new Date().setDate(TODAY - 1)).format('YYYY-MM-DD');\n            const flagDay = new Date(syncTime).setHours(0, 0, 0);\n            const oneYear = 365 * 24 * 60 * 60 * 1000;\n            const ninetyDays = 86400000 * 90; // 90天的毫秒数\n            const curSelectTime = new Date(_this.minDate).getTime();\n            const before = curSelectTime - ninetyDays; // 前90天毫秒数\n            const after = curSelectTime + ninetyDays; // 后90天毫秒数\n            if (+date > after || +date < before) {\n              return true;\n            } else if (+date <= flagDay - oneYear) {\n              return true;\n            } else if (date > flagDay) {\n              return true;\n            } else {\n              return false;\n            }\n          },\n          onPick({ maxDate, minDate }) {\n              if (!maxDate) {\n                  _this.minDate = minDate;\n              }\n          }\n        };\n      }\n    },\n    methods: {\n    goBack() {\n      this.$router.go(-1);\n    },\n    setColor(val) {\n      if (val > 0) {\n        return 'green';\n      } else if (val === 0) {\n        return '';\n      } else {\n        return 'red';\n      }\n    },\n    onExport() {\n      ExportStockMovementDetail(this.id, this.lastGet).then(res => {\n        if (res.type === 'application/json') {\n          // 下载失败的出现错误提示\n          const reader = new FileReader();\n          reader.onloadend = () => {\n            // const result = JSON.parse(reader.result);\n          };\n          reader.readAsText(res);\n        } else {\n          const fileName = `stock_movement_sku${moment().format('YYYYMMDDHHmmss')}.xlsx`;\n          downloadBlobFile(res, fileName);\n        }\n      }\n      ).catch(e => {\n        this.$message.error('Download Failed');\n      });\n    },\n    onDateChange(change) {\n      this.getDetailData();\n    },\n    getDetailData() {\n      const params = {};\n      if (this.datePicker && this.datePicker.length === 2) {\n        params.period_s = moment(this.datePicker[0]).format('YYYY-MM-DD 00:00:00');\n        params.period_e = moment(this.datePicker[1]).format('YYYY-MM-DD 00:00:00');\n      } else {\n        return this.$message.error('time period is required');\n      }\n      this.detailLoading = true;\n      getStockMovementDetail(this.id, params).then(res => {\n        if (res.retcode === 0) {\n          this.lastGet = params;\n          const data = res.data;\n          if (data.sync_fail) {\n          this.$message({\n          dangerouslyUseHTMLString: true,\n          message: `<p>The data is updated at ${data.end_time}</p>\n            <p>Try again later if you want to check the stock movement report with end time ${moment(this.datePicker[1]).format('YYYY-MM-DD')}.</p>`,\n          type: 'error'\n        });\n          }\n          data.cb_option = data.cb_option === 0 ? 'No' : 'Yes';\n          this.detailData = data;\n          this.activeName = data.stock_movement[0].whs_id || '';\n        }\n      }).finally(_ => {\n        this.detailLoading = false;\n      });\n    }\n    },\n    filters: {\n      timeFormatter(time) {\n        return moment(time).format('YYYY-MM-DD');\n      }\n    },\n    created() {\n      this.id = this.$route.params.id;\n      const periodS = new Date(this.$route.query.periodS);\n      const periodE = new Date(this.$route.query.periodE);\n      this.datePicker = [periodS, periodE];\n      this.getDetailData();\n      getSyncTime().then(res => {\n      if (res.retcode === 0) {\n        this.syncTime = res.data.latest_sync_time;\n      } else {\n        this.$message.error(res.message);\n      }\n    });\n    }\n  };\n</script>\n<style lang=\"scss\">\n.fbs-inventory-stock-detail{\n  .search-input-area.el-form-item--medium {\n      display: flex;\n      border:1px solid #E2E6EC;\n      overflow: hidden;\n      border-radius:4px;\n      margin-bottom: 16px;\n      & * {\n        height: 32px;\n        line-height: 32px;\n      }\n      .el-form-item__label{\n        color: #333333;\n        line-height: 32px;\n        text-align: center;\n        flex-grow: 0;\n        flex-shrink: 0;\n        padding: 0 8px;\n        background-color:#FAFBFD;\n        border-right:1px solid #E2E6EC;\n      }\n      .el-form-item__content{\n        flex-grow: 1;\n        flex-shrink: 1;\n        input::-webkit-outer-spin-button,input::-webkit-inner-spin-button {\n          -webkit-appearance: none;\n          }\n        input[type=\"number\"]{\n          -moz-appearance: textfield;\n          }\n        .el-input__icon.el-range__icon.el-icon-date {\n          position: absolute;\n          right: 5px;\n        }\n      }\n      .el-input--medium{\n        .el-input__inner{\n          border:none;\n        }\n      }\n      .range-input-item{\n        display: flex;\n        .el-input--medium{\n          flex-grow: 1;\n        }\n        &>span{\n          flex-grow: 0;\n          color:#ECF0F4;\n          border-left:1px solid #ECF0F4;\n          border-right:1px solid #ECF0F4;\n          padding:0 1px;\n        }\n      }\n      .el-input__inner {\n        border: none;\n        width: 100%;\n      }\n      .el-tag--info {\n        line-height: 28px;\n        height: 28px;\n        .el-tag__close.el-icon-close {\n          line-height: 14px;\n          height: 14px;\n          width: 14px;\n          margin-bottom: 3px;\n        }\n      }\n    }\n  .detail-information {\n    .el-tabs--card>.el-tabs__header .el-tabs__nav {\n      border: none;\n    }\n    .el-tabs--card>.el-tabs__header .el-tabs__item{\n      font-weight: 400;\n      border:1px solid #E4E7ED;\n      background-color:#F6F6F6;\n      margin-right:4px;\n      border-radius:4px 4px 0 0;\n    }\n    .el-tabs__header {\n      margin: 0;\n    }\n    .el-tabs--card>.el-tabs__header .el-tabs__item.is-active {\n      font-weight: 500;\n      border-bottom-color:#FFF;\n      background-color:#fff;\n      color:#3D6ED1;\n    }\n  }\n\n}\n</style>\n<style lang=\"scss\" scoped>\n.fbs-inventory-stock-detail{\n  padding: 20px;\n  h1{\n    font-size: 24px;\n    font-weight: 400;\n    color: #333333;\n    line-height: 36px;\n    border-bottom: 2px solid #EDEEF2;\n    padding-bottom: 14px;\n  }\n  h2 {\n    color: rgba(0,0,0,0.85);\n    font-size: 16px;\n    line-height: 30px;\n    font-weight: 700;\n    padding-bottom: 12px;\n  }\n  .basic-information {\n    padding-top: 24px;\n    ul{\n      margin-bottom: 40px;\n      li {\n        display: flex;\n        font-size: 14px;\n        color: rgba(0,0,0,0.85);\n        padding: 8px 0;\n\n      }\n    }\n    .text-align-right {\n      width: 110px;\n      text-align: right;\n      margin-right: 24px;\n    }\n  }\n  .stock-change-information {\n    h2 {\n      padding-bottom: 20px;\n    }\n  }\n  .detail-information {\n    position: relative;\n    svg {\n      color: #999999;\n    }\n    .export-button {\n      height: 32px;\n      position: absolute;\n      right: 0;\n      z-index: 10;\n      color: #3D6ED1;\n      line-height: 32px;\n      border: 1px solid #3D6ED1;\n      padding: 0 15px;\n    }\n    .information-content {\n      border: 1px solid #E8E8E8;\n      border-top: none;\n      padding: 24px 15px;\n      .information-content-top {\n        background: #FAFAFA;\n        border: 1px solid #E8E8E8;\n        border-radius: 4px;\n        padding: 14px 24px 14px 14px;\n        .date {\n          color: #666;\n          font-size: 12px;\n          margin-bottom:16px;\n        }\n        .information-inner-content {\n          padding-left: 24px;\n          h3 {\n            font-size: 18px;\n            font-weight: 500;\n            color: #333333;\n            line-height: 24px;\n            margin-bottom: 10px;\n            &:last-child {\n              font-size: 26px;\n              line-height: 30px;\n              margin-bottom: 0;\n            }\n          }\n          h4 {\n            font-size: 14px;\n            font-weight: 400;\n            color: #333333;\n            line-height: 24px;\n            margin-bottom: 10px;\n            &:last-child {\n              font-size: 14px;\n              line-height: 30px;\n              margin-bottom: 0;\n            }\n          }\n\n          ul {\n            display: flex;\n            justify-content: space-between;\n          }\n        }\n        .information-content-top-left {\n          border-right: 1px solid #E0E2E6;\n          padding-left: 10px;\n          padding-right: 24px;\n        }\n      }\n      .information-content-bottom {\n        display: flex;\n        margin-top: 20px;\n        .information-card-content {\n          flex-grow: 1;\n          border: 1px solid #E8E8E8;\n          border-radius: 4px;\n          border-radius: 4px;\n          &:nth-child(2) {\n            margin: 0 16px;\n          }\n          &>div:first-child {\n            height: 60px;\n            color: #333;\n            border-bottom: 1px solid #E8E8E8;\n            background: #fafafa ;\n            display: flex;\n            justify-content: space-between;\n            padding: 0 36px;\n            h5 {\n              line-height: 60px;\n              font-size: 14px;\n              font-weight: 700;\n            }\n            h4 {\n              line-height: 60px;\n              font-size: 20px;\n              font-weight: 700;\n              &.red {\n                color: rgb(221,88,59);\n              }\n              &.green {\n                color: #55CC77;\n              }\n            }\n          }\n          ul {\n            padding: 8px 36px;\n            li {\n              display: flex;\n              padding: 13px 0;\n              justify-content: space-between;\n              font-family: Roboto-Regular;\n              font-size: 14px;\n              color: #333333;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/inventory/stockMovement/index.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":10,"column":42,"nodeType":"VIdentifier","messageId":"deprecated","endLine":10,"endColumn":48}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"fbs-inventory-stock-movement\">\n    <section class=\"fbs-inventory-list-header\">\n      <div class=\"header-title\">\n        <span class=\"update-time\">\n          {{syncTime ? `${$t('fbsInventoryUpdateTime')} ${syncTime}` : ''}}\n        </span>\n      </div>\n    </section>\n    <el-form :model=\"searchForm\" @submit.native.prevent=\"onSearch\" >\n      <el-row :gutter=\"16\">\n        <el-col v-for='item in searchSchema' :key='item.field' :span='item.width || 6' :offset='item.offset'>\n          <el-form-item :class='item.class || \"\"' :label=\"item.label\" class=\"search-input-area\">\n            <pms-form-item @input=\"modifyForm\" :renderData=\"{ schema: item, form: searchForm}\"></pms-form-item>\n          </el-form-item>\n        </el-col>\n      </el-row>\n      <el-row>\n        <el-form-item class='pms-ui right-action-btn'>\n          <div class='list-btn clear-btn' @click=\"onReset\">{{$t('commonClear')}}</div>\n          <div class='list-btn' @click='onSearch'>{{$t('commonSearch')}}</div>\n        </el-form-item>\n      </el-row>\n    </el-form>\n    <stock-table\n    v-loading=\"tableLoading\"\n    :list=\"DataList\"\n    @export=\"exportList\"\n    @exportHistory=\"exportListHistory\"\n    @onDetail=\"goDetail\"\n    ></stock-table>\n    <section class='pms-ui pagination-center'>\n      <el-pagination background layout=\"sizes, prev, pager, next\" :current-page='pageInfo.page_no' :total.sync=\"total\" :page-sizes='[10, 20, 50, 100]' :page-size=\"pageInfo.page_size\" @size-change=\"handleSizeChange\" @current-change=\"handleChangePage\"></el-pagination>\n    </section>\n    <export-history-dialog :taskType=\"27\" :visible=\"showExportHistoryDialog\" @close=\"exportListHistory\"></export-history-dialog>\n  </div>\n</template>\n\n<script>\nimport stockTable from './stockTable';\nimport ExportHistoryDialog from '@/components/ApproveList/exportHistoryDialog';\nimport moment from 'moment';\nimport { asyncExportStockMovement, getStockMovementList, getSyncTime } from '@/api/FBS/inventory.js';\nimport { getShopListByIdOrName } from '@/api/shopConfig';\nimport { getSkuIDOrName } from '@/api/FBS/productNomination';\nimport pmsFormItem, { getSelectOptions } from '@/components/BaseItem/formItem';\nimport { newCBOptionListWithAll } from '@/utils/constant';\nconst TODAY = new Date().getDate();\nexport default {\n  data() {\n    return {\n      tableLoading: false,\n      showExportHistoryDialog: false,\n      syncTime: '',\n      shopIDSelectOptions: [],\n      DataList: [],\n      searchForm: {\n        datePicker: [],\n        region: '',\n        cb_option: null\n      },\n      pageInfo: {\n        page_size: 10,\n        page_no: 1\n      },\n      lastSearchForm: {},\n      total: 0,\n      minDate: ''\n    };\n  },\n  components: {\n    pmsFormItem,\n    stockTable,\n    ExportHistoryDialog\n  },\n  computed: {\n    pickerOption() {\n      const _this = this;\n      return {\n        disabledDate(date) {\n          const syncTime = _this.syncTime || moment(new Date().setDate(TODAY - 1)).format('YYYY-MM-DD');\n          const flagDay = new Date(syncTime).setHours(0, 0, 0);\n          const oneYear = 365 * 24 * 60 * 60 * 1000;\n          const ninetyDays = 86400000 * 90; // 90天的毫秒数\n          const curSelectTime = new Date(_this.minDate).getTime();\n          const before = curSelectTime - ninetyDays; // 前90天毫秒数\n          const after = curSelectTime + ninetyDays; // 后90天毫秒数\n          if (+date > after || +date < before) {\n            return true;\n          } else if (+date <= flagDay - oneYear) {\n            return true;\n          } else if (date > flagDay) {\n            return true;\n          } else {\n            return false;\n          }\n        },\n        onPick({ maxDate, minDate }) {\n            if (!maxDate) {\n                _this.minDate = minDate;\n            }\n        }\n      };\n    },\n    searchSchema() {\n      return [\n        { type: 'select', field: 'region', label: this.$t('commonRegion'),\n          getChildren: (h) => getSelectOptions(this.countrySelectList, h),\n          on: { change: this.regionChange }\n        },\n        { type: 'select', field: 'whs_id', label: this.$t('commonWarehouse'),\n          getChildren: (h) => getSelectOptions(this.warehouseSelectList, h),\n          on: { change: () => this.onSearch() },\n          props: { placeholder: 'Please select a region', clearable: true }\n        },\n        { field: 'datePicker', label: this.$t('commonTimePeriod'), width: 12,\n          render: (schema, row, h) => ['el-date-picker', {\n            props: {\n              clearable: true,\n              value: this.searchForm.datePicker,\n              type: 'daterange',\n              'picker-options': this.pickerOption,\n              'range-separator': ' '\n            },\n            on: {\n              input: (value) => { this.modifyForm(schema, value); }\n            }\n          }\n        ]},\n        { field: 'shop_id', type: 'select', label: this.$t('commonShopIDOrName'), width: 12,\n          render: (schema, row, h) => ['el-select', {\n            props: {\n              clearable: true, filterable: true, remote: true,\n              value: this.searchForm.shop_id, 'remote-method': this.getShopIdName\n            },\n            on: {\n              input: (value) => { this.modifyForm(schema, value); },\n              change: () => this.onSearch()\n            }\n          }, this.shopIDSelectOptions.map(item => {\n            return h('el-option', { props: { label: item.label, value: item.value }});\n          })]\n        },\n        { field: 'sku_id', type: 'select', label: this.$t('commonSkuIDOrName'), width: 12,\n          render: (schema, row, h) => (['el-autocomplete', {\n            props: {\n              'popper-class': 'pms-ele-ui supplierIDCompleteWrapperWidth',\n              value: this.searchForm[schema.field],\n              'fetch-suggestions': this.getSkuID,\n              clearable: true\n            },\n            on: {\n              input: (value) => { this.modifyForm(schema, value); },\n              select: (item) => { this.selectSku(item.skuID); this.onSearch(); }\n            }\n          }])\n        },\n        { type: 'select', field: 'cb_option', label: this.$t('commonCBOption'),\n          getChildren: (h) => getSelectOptions(newCBOptionListWithAll, h),\n          on: { change: this.onSearch}\n        }\n\n      ];\n    },\n    countryList() {\n      return [...new Set([...this.$store.getters.countryList.map(item => item.country)])];\n    },\n    countrySelectList() {\n      return [{ label: 'All', value: '' }, ...this.countryList.map(item => ({ label: item, value: item }))];\n    },\n    warehouseSelectList() {\n      if (!this.searchForm.region) return [];\n      const warehouseList = this.$store.getters.countryList.filter(item => item.country === this.searchForm.region).map(item => ({\n        label: item.warehouse, value: item.warehouse\n      }));\n      return [{label: 'All', value: ''}, ...warehouseList];\n    }\n  },\n  methods: {\n    modifyForm(schema, value) {\n      this.$set(this.searchForm, schema.field, value);\n    },\n    goDetail(row) {\n      this.$router.push(`/admin/fbs/inventory/list/stock/detail/${row.sku_id}?periodS=${this.lastSearchForm.period_s}&periodE=${this.lastSearchForm.period_e}`);\n    },\n    selectSku(sku_id) {\n      this.$set(this.searchForm, 'sku_id', sku_id);\n    },\n    getShopIdName(query) {\n      if (query !== '') {\n        const params = {\n          search_type: 0,\n          shop_id_or_name: query,\n          page_no: 1,\n          count: 20\n        };\n        getShopListByIdOrName(params).then(res => {\n          if (res && res.retcode === 0) {\n            this.shopIDSelectOptions = res.data.shop_list.filter(item => {\n              return !this.searchForm.region || (item.country === this.searchForm.region);\n            }).map(item => ({\n              value: item.shop_id,\n              label: `${item.shop_id}(${item.shop_name})`\n            }));\n          }\n        }).catch(e => { this.$message.error(e); });\n      }\n    },\n    async getSkuID(query = '', cb) {\n      if (`${query}`.trim() === '') return;\n      try {\n        const params = {\n          query: `${query}`.trim(),\n          country: this.searchForm.region || this.countryList.join('_')\n        };\n        const resp = await getSkuIDOrName(params);\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n          cb([]);\n        } else {\n          cb(resp.data.map(sku => {\n            return {\n              value: `${sku['sku_id']} / ${sku['sku_name']}`,\n              skuID: sku['sku_id']\n            };\n          })\n          );\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    exportList({type, rows}) {\n      let params = {};\n      if (type === 'all') {\n        params = this.lastSearchForm;\n        this.$delete(params, 'page_no');\n        this.$delete(params, 'page_size');\n        if (params.sku_id) {\n          params.sku_ids = [params.sku_id];\n          this.$delete(params, 'sku_id');\n        }\n      } else {\n        params = {\n          sku_ids: rows.map(row => row.sku_id),\n          period_e: this.lastSearchForm.period_e,\n          period_s: this.lastSearchForm.period_s\n        };\n      }\n      asyncExportStockMovement(params).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.message);\n        } else {\n          this.$message.success(this.$t('commonExportHistorySuccessTips'));\n        }\n      }).catch(() => {\n        this.$message.error(this.$t('commonExportHistoryErrorTips'));\n      });\n    },\n    exportListHistory() {\n      this.showExportHistoryDialog = !this.showExportHistoryDialog;\n    },\n    onSearch() {\n      this.pageInfo.page_no = 1;\n      this.getList();\n    },\n    getList() {\n      const params = { ...this.pageInfo, ...this.searchForm };\n      if (this.searchForm.datePicker && this.searchForm.datePicker.length === 2) {\n        params.period_s = moment(this.searchForm.datePicker[0]).format('YYYY-MM-DD 00:00:00');\n        params.period_e = moment(this.searchForm.datePicker[1]).format('YYYY-MM-DD 00:00:00');\n      } else {\n        return this.$message.error('time period is required');\n      }\n      this.$delete(params, 'datePicker');\n      for (const key in params) {\n        if (params[key] !== 0 && !params[key]) {\n          this.$delete(params, key);\n        }\n      }\n      this.tableLoading = true;\n      getStockMovementList(params).then(res => {\n        if (res.retcode === 0) {\n          const data = res.data;\n          this.lastSearchForm = {...params};\n          this.DataList = res.data.stock_movements;\n          if (data.sync_fail) {\n          this.$message({\n          dangerouslyUseHTMLString: true,\n          message: `<p>The data is updated at ${data.end_time}</p>\n            <p>Try again later if you want to check the stock movement report with end time ${moment(this.searchForm.datePicker[1]).format('YYYY-MM-DD')}.</p>`,\n          type: 'error'\n        });\n          }\n          this.total = res.data.total;\n        } else {\n          this.$message.error(res.message);\n        }\n      }).finally(_ => {\n        this.tableLoading = false;\n      });\n    },\n    onReset() {\n      this.searchForm = {\n        datePicker: [],\n        region: '',\n        cb_option: null\n      };\n      this.resetTimePeriod();\n    },\n    resetTimePeriod() {\n      const yesterday = new Date().setDate(TODAY - 1);\n      let end = new Date(this.syncTime).setHours(0, 0, 0) || new Date(yesterday).setHours(0, 0, 0);\n      let start = end;\n      end = new Date(end);\n      start = new Date(start).setDate(1);\n      this.searchForm.datePicker = [new Date(start), end];\n      return [new Date(start), end];\n    },\n    handleSizeChange(count) {\n      this.pageInfo.page_size = count;\n      this.getList();\n    },\n    handleChangePage(page_no) {\n      this.pageInfo.page_no = page_no;\n      this.getList();\n    },\n    regionChange(value) {\n      if (value) {\n        this.searchForm.whs_id = '';\n      } else {\n        this.$delete(this.searchForm, 'whs_id');\n      }\n      this.onSearch();\n    }\n  },\n  created() {\n    getSyncTime().then(res => {\n      if (res.retcode === 0) {\n        this.syncTime = res.data.latest_sync_time;\n        this.resetTimePeriod();\n        this.getList();\n      } else {\n        this.$message.error(res.message);\n      }\n    });\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.fbs-inventory-stock-movement {\n  .right-action-btn {\n  text-align: right;\n  border-bottom: 2px solid #ECF0F4;\n  padding-bottom: 16px;\n  }\n  .pagination-center {\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n  }\n  .header-title {\n    flex: 1;\n    font-size: 24px;\n    color: #333333;\n    text-align: left;\n    height: 36px;\n    line-height: 36px;\n    .update-time {\n      font-size: 14px;\n      color: rgba(51,51,51,0.60);\n      }\n    }\n  }\n\n</style>\n<style lang=\"scss\">\n.fbs-inventory-stock-movement{\n  .search-input-area.el-form-item--medium {\n      display: flex;\n      border:1px solid #E2E6EC;\n      overflow: hidden;\n      border-radius:4px;\n      margin-bottom: 16px;\n      & * {\n        height: 32px;\n        line-height: 32px;\n      }\n      .el-form-item__label{\n        color: #333333;\n        line-height: 32px;\n        text-align: center;\n        flex-grow: 0;\n        flex-shrink: 0;\n        padding: 0 8px;\n        background-color:#FAFBFD;\n        border-right:1px solid #E2E6EC;\n      }\n      .el-form-item__content{\n        flex-grow: 1;\n        flex-shrink: 1;\n        input::-webkit-outer-spin-button,input::-webkit-inner-spin-button {\n          -webkit-appearance: none;\n          }\n        input[type=\"number\"]{\n          -moz-appearance: textfield;\n          }\n        .el-input__icon.el-range__icon.el-icon-date {\n          position: absolute;\n          right: 5px;\n        }\n        .el-autocomplete {\n          width: 100%;\n        }\n      }\n      .el-input--medium{\n        .el-input__inner{\n          border:none;\n        }\n      }\n      .range-input-item{\n        display: flex;\n        .el-input--medium{\n          flex-grow: 1;\n        }\n        &>span{\n          flex-grow: 0;\n          color:#ECF0F4;\n          border-left:1px solid #ECF0F4;\n          border-right:1px solid #ECF0F4;\n          padding:0 1px;\n        }\n      }\n      .el-input__inner {\n        border: none;\n        width: 100%;\n      }\n      .el-tag--info {\n        line-height: 28px;\n        height: 28px;\n        .el-tag__close.el-icon-close {\n          line-height: 14px;\n          height: 14px;\n          width: 14px;\n          margin-bottom: 3px;\n        }\n      }\n    }\n}\n</style>\n\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/inventory/stockMovement/stockTable.vue","messages":[{"ruleId":"vue/no-template-shadow","severity":2,"message":"Variable 'scope' is already declared in the upper scope.","line":62,"column":37,"nodeType":"Identifier","endLine":62,"endColumn":42},{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":241,"column":18,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":241,"endColumn":19,"fix":{"range":[7791,7792],"text":""}}],"errorCount":2,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div class=\"pms-ui\">\n    <section class=\"stock-movement-export-area\">\n      <div class='stock-list-btn' @click=\"onExport\">{{$t('commonExport')}}</div>\n      <div class=\"stock-list-btn\" @click=\"onExportHistory\">{{$t('commonExportHistory')}}</div>\n    </section>\n    <el-checkbox-group v-model=\"checkedRows\" class=\"pms-ui\">\n      <el-table\n        :span-method=\"arraySpanMethod\"\n        :data=\"list\"\n        row-class-name=\"stock-movement-list-table\"\n      >\n        <el-table-column\n        column-key=\"action\"\n        width=\"65px\"\n        align=\"left\"\n        class-name=\"inventory-stock-movement-table-setting-column\">\n          <template #header>\n            <el-dropdown @click=\"resetCheckedType\" placement=\"bottom\" split-button trigger=\"click\" class=\"select-page-dropdown\" @command=\"changeSelectPageType\">\n              <span :class=\"`el-checkbox__input ${checkedStyle}`\">\n                <span :class=\"`el-checkbox__inner ${checkedStyle}`\"></span>\n              </span>\n              <el-dropdown-menu class=\"options-field-menu\" slot=\"dropdown\">\n                <el-dropdown-item command=\"current\">Current Page</el-dropdown-item>\n                <el-dropdown-item command=\"all\">All Pages</el-dropdown-item>\n              </el-dropdown-menu>\n            </el-dropdown>\n          </template>\n          <template slot-scope=\"scope\">\n            <el-checkbox :disabled=\"checkedType === 'all'\" :label=\"scope.row\">{{''}}</el-checkbox>\n          </template>\n        </el-table-column>\n        <el-table-column v-for=\"item in tableSchema\"\n        :prop=\"item.field\"\n        :key=\"item.field\"\n        :label=\"item.label\"\n        :width=\"item.width || null\">\n          <template slot-scope=\"scope\">\n            <pms-table-cell :renderData=\"getTableCellRender(item, scope.row, scope.$index)\"></pms-table-cell>\n          </template>\n        </el-table-column>\n        <el-table-column\n        :label=\"$t('commonWarehouse')\"\n        width=\"100\"\n        class-name=\"stock-movement-sub-list-table\"\n        >\n        <template slot-scope=\"scope\">\n          <el-table\n          :data=\"scope.row.stock_movement\"\n          :show-header=\"false\"\n          row-class-name=\"stock-movement-sub-table-row\"\n          >\n            <el-table-column\n            prop=\"whs_id\"\n            width=\"100\"\n            >\n            </el-table-column>\n            <el-table-column v-for=\"item in tableSubSchema\"\n            :key=\"item.field\"\n            :width=\"item.width\"\n            >\n              <template slot-scope=\"scope\">\n                <p :style=\"scope.row.whs_id.toLowerCase() === 'all' ? 'font-weight:600;' : ''\">\n                  <pms-table-cell :renderData=\"getTableCellRender(item, scope.row, scope.$index)\"></pms-table-cell>\n                </p>\n              </template>\n            </el-table-column>\n          </el-table>\n        </template>\n        </el-table-column>\n        <el-table-column v-for=\"item in tableSubSchema\"\n        :key=\"item.field\"\n        :width=\"item.width\">\n          <template #header>\n            <p>\n            {{item.label}}\n            <el-tooltip placement=\"right\" effect=\"light\" popper-class=\"stock-movement-tips\">\n                <div slot=\"content\">\n                  <ul>\n                    <li>{{$t(item.tip)}}</li>\n                  </ul>\n                </div>\n                <svg-icon class=\"icon_question\" icon-class=\"question\" />\n            </el-tooltip>\n            </p>\n          </template>\n        </el-table-column>\n        <el-table-column\n        :label=\"$t('commonAction')\" align=\"center\" width=\"100\">\n          <template slot-scope=\"scope\">\n            <button @click=\"goDetail(scope.row)\" class=\"text-button\">{{$t('commonDetail')}}</button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-checkbox-group>\n  </div>\n</template>\n<script>\nconst PMSTableCell = {\n  props: {\n    renderData: {\n      required: true\n    }\n  },\n  render(h) {\n    const { schema, row, index } = this.$props.renderData;\n    if (typeof schema.render === 'function') {\n      const data = schema.render(schema, row, index, h);\n      const renderElement = Array.isArray(data) ? data : ['span', data];\n      return h(...renderElement);\n    } else if (schema.type === 'enum') {\n      const options = schema.options || [];\n      const option =\n        options.find((item) => item.value === row[schema.field]) || {};\n      return h('span', option.label || '');\n    } else {\n      return h('span', row[schema.field]);\n    }\n  }\n};\nimport { formatValue } from '@/utils/formatParams';\nexport default {\n  data() {\n    return {\n      checkedType: '',\n      checkedRows: [],\n      dataList: []\n    };\n  },\n  props: {\n    list: {\n      type: Array\n    }\n  },\n  computed: {\n    tableSchema() {\n      return [\n        {\n        label: this.$t('commonShopIDOrName'),\n        field: 'shop_id',\n        render: (schema, row) => (`${row.shop_id}/ ${row.shop_name}`)\n      },\n      {\n        label: this.$t('commonSkuIDOrName'),\n        field: 'sku_name',\n        render: (schema, row) => (`${row.sku_id}/ ${row.sku_name}`)\n      },\n      {\n        label: this.$t('commonRegion'),\n        field: 'region',\n        width: '80'\n      },\n      {\n        label: this.$t('commonCBOption'),\n        field: 'cb_option',\n        width: '100',\n        render: (schema, row) => (row.cb_option === 0 ? 'No' : 'Yes')\n      }];\n    },\n    tableSubSchema() {\n      return [\n        {\n          label: this.$t('FBSInventoryStartingTotalOnHand'),\n          field: 'start_total',\n          width: 115,\n          tip: 'FBSInventoryStartingTotalOnHandTip',\n          render: (schema, row) => this.formatValue(row[schema.field] || 0)\n        },\n        {\n          label: this.$t('FBSTotalInbound'),\n          field: 'inbound_total',\n          width: 105,\n          tip: 'FBSTotalInboundTip',\n          render: (schema, row) => this.formatValue(row[schema.field] || 0)\n        },\n        {\n          label: this.$t('FBSTotalOutbound'),\n          field: 'outbound_total',\n          tip: 'FBSTotalOutboundTip',\n          width: 115,\n          render: (schema, row) => this.formatValue(row[schema.field] || 0)\n        },\n        {\n          label: this.$t('FBSTotalAdjustment'),\n          field: 'adjustment_total',\n          tip: 'FBSTotalAdjustmentTip',\n          width: 120,\n          render: (schema, row) => this.formatValue(row[schema.field] || 0)\n        },\n        {label: this.$t('FBSEndingTotalOnHand'),\n          field: 'end_total',\n          tip: 'FBSEndingTotalOnHandTip',\n          width: 115,\n          render: (schema, row) => this.formatValue(row[schema.field] || 0)\n        }\n      ];\n    },\n    checkedStyle() {\n      return this.checkedType ? 'is-checked' : '';\n    }\n  },\n  methods: {\n    formatValue(value) {\n      const plusSimple = value > 0 ? '+' : '';\n      return plusSimple + formatValue(value);\n    },\n    resetCheckedType() {\n      this.checkedType = '';\n      this.checkedRows = [];\n    },\n    getTableCellRender(schema, row, index) {\n      return { schema, row, index };\n    },\n    goDetail(row) {\n      this.$emit('onDetail', row);\n    },\n    changeSelectPageType(type) {\n      this.checkedType = type;\n      this.checkedRows = this.list;\n    },\n    arraySpanMethod({ row, column, rowIndex, columnIndex }) {\n      // const data = ['whs_id', 'starting_total']\n      // console.log(column.property === 'whs_id');\n      if (columnIndex === 5) {\n        return [1, 6];\n      } else if (columnIndex > 5 && columnIndex < 11) {\n        return [0, 0];\n      } else {\n        return [1, 1];\n      }\n    },\n    onExport() {\n    if (this.checkedRows.length === 0) {\n      return this.$message.error('Please select some lines first!');\n    }\n    this.$emit('export', {\n      type: this.checkedType,\n      rows: this.checkedRows\n    });\n  },\n  onExportHistory () {\n    this.$emit('exportHistory');\n  }\n  },\n  components: {\n    'pms-table-cell': PMSTableCell\n  },\n  created() {\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.pms-ui .el-table th.inventory-stock-movement-table-setting-column {\n  padding: 0;\n  .cell {\n    padding: 0;\n    text-align: center;\n  }\n  .select-page-dropdown {\n    padding: 0;\n    margin-left: -10px;\n    .el-button {\n      border: none;\n      background: unset;\n      padding: 0 0 0 10px;\n      &:nth-child(1) {\n        width: 20px;\n        padding-right: 16px;\n      }\n      &::before {\n        width: 0;\n      }\n    }\n  }\n  .inventory-list-config-setting-button {\n    padding:0;\n  }\n}\n.stock-movement-list-table {\n    &>td {\n      vertical-align: top;\n      padding: 0;\n      &>.cell {\n        padding: 10px;\n      }\n      &.stock-movement-sub-list-table {\n        border-left: 1px solid #EBEEF5;\n        border-right: 1px solid #EBEEF5;\n        &>.cell {\n          padding: 0;\n        }\n        .el-table--border::after, .el-table--group::after, .el-table::before {\n            background: none;\n        }\n        .el-table {\n          background: transparent;\n          .stock-movement-sub-table-row {\n            background: transparent;\n            &.el-table__row:hover>td{\n              background: #e4f6ff !important;\n            }\n            &:first-child {\n              td {\n                // font-weight: 600;\n              }\n            }\n          }\n          .stock-movement-sub-table-row:last-child {\n            td{\n              border-bottom: none;\n            }\n          }\n        }\n      }\n    }\n    .el-table__body-wrapper {\n      &::-webkit-scrollbar {\n        display: none;\n      }\n    }\n}\n</style>\n<style lang=\"scss\" scoped>\n.text-button {\n  color: #3d61d1;\n  font-size: 14px;\n  background: none;\n  border: none;\n  outline: none;\n  cursor: pointer;\n}\n.stock-movement-export-area {\n  margin-bottom: 16px;\n  display: flex;\n  .stock-list-btn {\n    font-size:14px;\n    color: #3d6ed1;\n    padding: 5px 10px;\n    margin-right:12px;\n    border: 1px solid #3d6ed1;\n    border-radius: 2px;\n    background: transparent;\n    cursor: pointer;\n  }\n}\n\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/productExit/constant.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/productExit/detail.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/productExit/list.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/productExit/massOperateDialog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/productNomination/MassOperateDialog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/productNomination/actionLog.vue","messages":[{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"request_id\" is not in camelCase.","line":84,"column":5,"nodeType":"Property","endLine":86,"endColumn":6}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-dialog\n    :visible.sync=\"dialogVisible\"\n    width=\"800px\"\n    lock-scroll\n    custom-class=\"pms-ele-ui pms-dialog\"\n    :title=\"$t('commonActionLog')\"\n    @close=\"onClose\"\n  >\n    <section v-loading=\"loading\" class=\"order-log\">\n      <el-row class=\"row-header\">\n        <el-col :span=\"1\">\n          <div class=\"empty-block\"></div>\n        </el-col>\n        <el-col :span=\"5\">{{$t('commonAction')}}</el-col>\n        <el-col :span=\"6\">{{$t('commonLogStatusAfterOperate')}}</el-col>\n        <el-col :span=\"6\">{{$t('commonLogOperatorOrOperationTime')}}</el-col>\n        <el-col :span=\"6\">{{$t('commonReason')}}</el-col>\n      </el-row>\n      <section class=\"row-body-wrapper\" v-if=\"Array.isArray(tableList) && tableList.length > 0\">\n        <el-row class=\"row-body\" :gutter=\"20\" v-for=\"(item, index) in tableList\" :key=\"index\">\n          <el-col :span=\"1\">\n            <i\n              class=\"el-icon-caret-bottom icon-caret\"\n              :class=\"{'show': item.isShowContent}\"\n              v-if=\"Array.isArray(item.content) && item.content.length\"\n              @click=\"toggleContent(item)\"\n            ></i>\n            <span class=\"empty-block\"></span>\n          </el-col>\n          <el-col :span=\"5\">{{item.action}}</el-col>\n          <el-col :span=\"6\">{{item.status_after_operate}}</el-col>\n          <el-col\n            :span=\"6\"\n          >{{`${item.operator}/${moment(item.operation_time * 1000).format('YYYY-MM-DD HH:mm')}`}}</el-col>\n\n          <el-col :span=\"6\">{{item.reason|| '/'}}</el-col>\n          <div class=\"pms-clearfix\"></div>\n          <transition name=\"fade\">\n            <div v-if=\"item.isShowContent\" class=\"row-expand\">\n              <el-col :span=\"23\" :offset=\"1\">\n                <el-table :data=\"item.content\" border class=\"pms-ele-ui small-table\">\n                  <el-table-column :label=\"$t('commonLogModifyField')\" prop=\"field\"></el-table-column>\n                  <el-table-column :label=\"$t('commonSkuID')\" prop=\"sku_id\">\n                    <template slot-scope=\"scope\">{{scope.row.sku_id || '/'}}</template>\n                  </el-table-column>\n                  <el-table-column :label=\"$t('commonBefore')\" prop=\"before\"></el-table-column>\n                  <el-table-column :label=\"$t('commonAfter')\" prop=\"after\"></el-table-column>\n                </el-table>\n              </el-col>\n            </div>\n          </transition>\n        </el-row>\n      </section>\n      <section v-else class=\"row-body-wrapper\">\n        <NoData/>\n      </section>\n    </section>\n    <section slot=\"footer\">\n      <el-pagination\n        small\n        layout=\"prev, pager, next\"\n        background\n        :total=\"total\"\n        :page-size=\"pager.count\"\n        @current-change=\"handleCurrentChange\"\n        class=\"pms-ele-ui pms-pagination pms-text-center\"\n      ></el-pagination>\n      <el-button class=\"list-btn\" @click=\"onClose\">{{$t('commonOK')}}</el-button>\n    </section>\n  </el-dialog>\n</template>\n\n<script>\nimport { getNominationActionLog } from '@/api/FBS/productNomination';\nimport NoData from '@/components/common/noData';\nimport moment from 'moment';\n\nexport default {\n  components: {\n    NoData\n  },\n  props: {\n    request_id: {\n      required: true\n    },\n    country: {\n      required: true\n    },\n    visible: {\n      type: Boolean,\n      required: true,\n      default: false\n    }\n  },\n  data() {\n    return {\n      pager: {\n        count: 10,\n        page_no: 1\n      },\n      total: 0,\n      dialogVisible: false,\n      tableList: [],\n      loading: false\n    };\n  },\n  watch: {\n    '$props.visible': {\n      handler(value) {\n        this.dialogVisible = value;\n        if (value) {\n          this.getActionLog();\n        }\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    moment,\n    toggleContent(item) {\n      item.isShowContent = !item.isShowContent;\n    },\n    handleCurrentChange(index) {\n      this.pager.page_no = index;\n      this.getActionLog();\n    },\n    async getActionLog() {\n      try {\n        this.loading = true;\n        const params = {\n          country: this.country,\n          request_id: this.request_id,\n          ...this.pager\n        };\n        // console.log('params--', params);\n        // const res = {\n        //   retcode: 0,\n        //   data: {\n        //     total: 2,\n        //     list: [\n        //       {\n        //         operation_time: 1590033110,\n        //         operator: \"operator\",\n        //         action: \"Approval\",\n        //         status_after_operate: \"Pending Approval\",\n        //         content: [\n        //           {\n        //             field: \"\",\n        //             sku_id: \"\",\n        //             before: \"\",\n        //             after: \"\"\n        //           }\n        //         ]\n        //       }\n        //     ]\n        //   }\n        // };\n        const res = await getNominationActionLog(params);\n        if (res && res.retcode === 0) {\n          this.tableList = (res.data.list || []).map(item => ({\n            ...item,\n            isShowContent: false\n          }));\n          this.total = res.data.total || 0;\n        } else {\n          this.$message({ type: 'error', message: res.message });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loading = false;\n      }\n    },\n    onClose() {\n      this.$emit('close');\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n@import \"~@/styles/variables.scss\";\n.order-log {\n  .row-header {\n    background: $grey_bg;\n    align-items: center;\n    font-size: 12px;\n    font-weight: bold;\n    line-height: 1.2em;\n    padding: 16px 0;\n  }\n  .row-body-wrapper {\n    max-height: 400px;\n    overflow-x: hidden;\n    overflow-y: auto;\n  }\n  .row-body {\n    padding: 16px 0;\n    line-height: 1.2em;\n    align-items: center;\n    border-bottom: 1px solid $grey_bg;\n    font-size: 14px;\n    .icon-caret {\n      color: $blue;\n      font-size: 16px;\n      cursor: pointer;\n      transition: all 0.3s ease-in;\n      &.show {\n        transform: rotate(180deg);\n      }\n    }\n  }\n  .row-expand {\n    margin-top: 16px;\n  }\n  .empty-block {\n    display: block;\n    width: 1px;\n    height: 1px;\n  }\n}\n</style>\n<style lang=\"scss\">\n@import \"~@/styles/common.scss\"; // ~@ = @ = 'src' webpack alias path\n.pms-dialog {\n  .el-dialog__body {\n    padding: 8px 24px 16px;\n  }\n}\n.pms-ele-ui {\n  &.small-table {\n    th {\n      background-color: #ebebeb;\n      color: $black_light_one;\n      font-size: 12px;\n      font-weight: blod;\n      padding: 4px 0;\n    }\n    td {\n      font-size: 12px;\n      padding: 4px 0;\n      color: $black;\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/productNomination/detail.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/productNomination/list.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":14,"column":44,"nodeType":"VIdentifier","messageId":"deprecated","endLine":14,"endColumn":50}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-container class=\"ownership-wrapper pms-ele-ui pms-ui\">\n    <section class=\"list-header-wrapper\">\n      <el-tabs class=\"pms-ele-ui\" tab-position=\"bottom\" v-model=\"activeTab\" @tab-click=\"onTabClick\">\n        <el-tab-pane\n          v-for=\"item in headerTabs\"\n          :key=\"item.value\"\n          :label=\"$t(item.label)\"\n          :name=\"item.value\"\n        ></el-tab-pane>\n      </el-tabs>\n    </section>\n    <section class=\"main-wrapper\">\n      <el-form :model=\"searchForm\" @submit.native.prevent=\"onResetPageNoSearch\">\n        <el-button v-show=\"false\" native-type=\"submit\"></el-button>\n        <el-row>\n          <el-col\n            v-for=\"item in searchSchema\"\n            :key=\"item.field\"\n            :span=\"item.width\"\n            :offset=\"item.offset || 0\"\n          >\n            <el-form-item\n              :label-width=\"item.labelWidth || '110px'\"\n              :class=\"item.class || ''\"\n              :label=\"item.label\"\n            >\n              <el-select\n                v-if=\"item.type === 'select'\"\n                :multiple=\"item.multiple\"\n                v-model=\"searchForm[item.field]\"\n                :disabled=\"item.disabled || false\"\n                :collapse-tags=\"true\"\n                @change=\"onResetPageNoSearch\"\n              >\n                <el-option\n                  v-for=\"option in item.options || []\"\n                  :key=\"option.value\"\n                  :label=\"item.field === 'country' ? option.label: $t(option.label)\"\n                  :value=\"option.value\"\n                ></el-option>\n              </el-select>\n              <el-select\n                v-if=\"item.type === 'shopIDName'\"\n                clearable\n                filterable\n                remote\n                :remote-method=\"getShopIdName\"\n                v-model=\"searchForm[item.field]\"\n                :disabled=\"item.disabled || false\"\n                @change=\"onResetPageNoSearch\"\n              >\n                <el-option\n                  v-for=\"option in shopIDSelectOptions\"\n                  :key=\"option.value\"\n                  :label=\"option.label\"\n                  :value=\"option.value\"\n                ></el-option>\n              </el-select>\n              <el-input v-if=\"item.type === 'input'\" v-model=\"searchForm[item.field]\"></el-input>\n              <el-autocomplete\n                v-else-if=\"item.type === 'SkuID'\"\n                class=\"width_100\"\n                popper-class=\"pms-ele-ui supplierIDCompleteWrapperWidth\"\n                v-model=\"searchForm[item.field]\"\n                :fetch-suggestions=\"getSkuID\"\n                :trigger-on-focus=\"false\"\n                clearable\n                @select=\"handleSkuIDSelect\"\n              ></el-autocomplete>\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row type=\"flex\" justify=\"space-between\" class=\"mb16\">\n          <el-col v-if=\"activeTab === 'all'\">\n            <el-upload\n              :disabled=\"!canMassUpload\"\n              :class=\"{'is-disabled': !canMassUpload}\"\n              class=\"list-btn white-blue\"\n              action=\"/api/fbs/approval/upload_nominations\"\n              :with-credentials=\"true\"\n              :limit=\"1\"\n              ref=\"massUpload\"\n              :show-file-list=\"false\"\n              :on-success=\"(...argu) => onUploadSuccess('upload', ...argu)\"\n              :on-error=\"(...argu) => onUploadError('upload', ...argu)\"\n              :data=\"getCsrfData()\"\n              :headers=\"getCsrfHeader()\"\n            >{{$t('commonMassUpload')}}</el-upload>\n            <el-button type=\"text\" class=\"pms-btn-ui link-btn\" @click=\"onDownloadTemplate\">\n              <i class=\"el-icon-download\"></i>\n              {{$t('commonTemplate')}}\n            </el-button>\n            <el-button\n              class=\"pms-ele-ui list-btn white-blue\"\n              @click=\"showExportHistory('product_upload_nomination')\"\n            >{{$t('commonUploadHistory')}}</el-button>\n          </el-col>\n          <el-col v-else>\n            <el-button\n              v-if=\"canApprove\"\n              class=\"list-btn white-green\"\n              @click=\"onMassApprove\"\n            >{{$t('commonMassApprove')}}</el-button>\n            <el-button  v-if=\"canApprove\" class=\"list-btn white-red\" @click=\"onMassReject\">{{$t('commonMassReject')}}</el-button>\n            <el-upload\n              :disabled=\"!canApprove\"\n              :class=\"{'is-disabled': !canApprove}\"\n              class=\"list-btn white-blue\"\n              action=\"/api/fbs/approval/upload_approval\"\n              :with-credentials=\"true\"\n              :limit=\"1\"\n              ref=\"massApprove\"\n              :show-file-list=\"false\"\n              :on-success=\"(...argu) => onUploadSuccess('approve', ...argu)\"\n              :on-error=\"(...argu) => onUploadError('approve', ...argu)\"\n              :data=\"getCsrfData()\"\n              :headers=\"getCsrfHeader()\"\n            >{{$t('FBSUploadApprovalResult')}}</el-upload>\n            <el-button\n              class=\"pms-ele-ui list-btn white-blue\"\n              @click=\"showExportHistory('product_upload_approval')\"\n            >{{$t('commonUploadHistory')}}</el-button>\n          </el-col>\n          <el-col class=\"pms-text-right\">\n            <el-button\n              class=\"list-btn\"\n              v-if=\"activeTab === 'myPA'\"\n              @click=\"onExport\"\n              :loading=\"loadingExport\"\n            >{{$t('commonExport')}}</el-button>\n            <el-button\n              v-if=\"activeTab === 'myPA'\"\n              class=\"list-btn white-blue\"\n              @click=\"showExportHistory('product_upload_approval_template')\"\n            >{{$t('commonExportHistory')}}</el-button>\n            <div class=\"list-btn\" @click=\"onResetPageNoSearch\">{{$t('commonSearch')}}</div>\n            <div class=\"list-btn white-blue\" @click=\"onReset\">{{$t('commonClear')}}</div>\n          </el-col>\n        </el-row>\n      </el-form>\n      <el-table\n        :data=\"tableList\"\n        border\n        v-loading=\"loading\"\n        @selection-change=\"changeSelections\"\n        v-if=\"activeTab === 'all'\"\n      >\n        <el-table-column prop=\"request_id\" :label=\"$t('commonRequestID')\" width=\"150px\"></el-table-column>\n\n        <el-table-column width=\"150px\" :label=\"$t('commonShopIDOrName')\">\n          <template slot-scope=\"scope\">{{scope.row.shop_id }} / {{ scope.row.shop_name}}</template>\n        </el-table-column>\n        <el-table-column :label=\"$t('commonRegion')\" prop=\"country\" width=\"80px\"></el-table-column>\n\n        <el-table-column :label=\"$t('commonCBOption')\" width=\"90px\">\n          <template slot-scope=\"scope\">{{formatCBOption(scope.row.cb_option)}}</template>\n        </el-table-column>\n\n        <el-table-column :label=\"$t('commonSkuIDOrName')\">\n          <template slot-scope=\"scope\">{{scope.row.sku_id }} / {{ scope.row.sku_name}}</template>\n        </el-table-column>\n\n        <el-table-column :label=\"$t('commonStatus')\" width=\"140px\">\n          <template slot-scope=\"scope\">\n            <span\n              class=\"pms-ele-ui status-span\"\n              :class=\"statusClass[scope.row.approve_status]\"\n            >{{formatStatus(scope.row)}}</span>\n          </template>\n        </el-table-column>\n        <el-table-column :label=\"$t('commonSource')\" width=\"120px\">\n          <template slot-scope=\"scope\">{{formatSource(scope.row.source)}}</template>\n        </el-table-column>\n\n        <el-table-column :label=\"$t('commonMtime')\" prop=\"mtime\" width=\"140px\">\n          <template\n            slot-scope=\"scope\"\n          >{{moment(scope.row.mtime * 1000).format('YYYY-MM-DD HH:mm')}}</template>\n        </el-table-column>\n        <el-table-column :label=\"$t('commonAction')\" width=\"100px\">\n          <template slot-scope=\"scope\">\n            <el-button\n              class=\"list-btn white-blue\"\n              @click=\"onRouteToDetail(scope.row)\"\n            >{{$t('commonDetail')}}</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <div v-else >\n        <el-table :data=\"tableList\" border v-loading=\"loading\" @selection-change=\"changeSelections\">\n            <el-table-column type=\"selection\" width=\"55\"></el-table-column>\n          <el-table-column prop=\"request_id\" :label=\"$t('commonRequestID')\"></el-table-column>\n          <el-table-column width=\"150px\" :label=\"$t('commonShopIDOrName')\">\n            <template slot-scope=\"scope\">{{scope.row.shop_id }} / {{ scope.row.shop_name}}</template>\n          </el-table-column>\n          <el-table-column :label=\"$t('commonRegion')\" prop=\"country\"></el-table-column>\n\n          <el-table-column :label=\"$t('commonCBOption')\">\n            <template slot-scope=\"scope\">{{formatCBOption(scope.row.cb_option)}}</template>\n          </el-table-column>\n\n          <el-table-column :label=\"$t('commonSkuIDOrName')\">\n            <template slot-scope=\"scope\">{{scope.row.sku_id }} / {{ scope.row.sku_name}}</template>\n          </el-table-column>\n\n          <el-table-column :label=\"$t('commonMtime')\" prop=\"mtime\" width=\"140px\">\n            <template\n              slot-scope=\"scope\"\n            >{{moment(scope.row.mtime * 1000).format('YYYY-MM-DD HH:mm')}}</template>\n          </el-table-column>\n          <el-table-column :label=\"$t('commonAction')\" width=\"100px\">\n            <template slot-scope=\"scope\">\n              <el-button\n                class=\"list-btn white-blue\"\n                @click=\"onRouteToDetail(scope.row)\"\n              >{{$t('commonDetail')}}</el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n      </div>\n      <section class=\"pagination-center\">\n        <el-pagination\n          background\n          layout=\"sizes, prev, pager, next\"\n          :current-page=\"pager.page_no\"\n          :page-sizes=\"[10, 20, 50, 100]\"\n          :total.sync=\"total\"\n          :page-size=\"pager.count\"\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleChangePage\"\n        ></el-pagination>\n      </section>\n    </section>\n    <MassOperateDialog\n      :visible=\"massDialog\"\n      @close=\"onCloseMassDialog\"\n      @refresh=\"onResetPageNoSearch\"\n      :mode=\"massMode\"\n      :selectedList=\"checkedRows\"\n    ></MassOperateDialog>\n    <export-history-dialog\n      :needErrorFile=\"true\"\n      source=\"FBS\"\n      :title=\"exportTitle\"\n      :interval=\"15000\"\n      :taskType=\"taskType\"\n      :visible=\"isShowExportHistory\"\n      @close=\"closeExportHistory\"\n    ></export-history-dialog>\n  </el-container>\n</template>\n\n<script>\nimport { formatParams } from '@/utils/formatParams';\nimport ExportHistoryDialog from '@/components/ApproveList/exportHistoryDialog';\nimport {\n  getPendingApprovalNominationList,\n  getNominationList,\n  exportNominationTemplate,\n  getSkuIDOrName\n} from '@/api/FBS/productNomination';\nimport {\n  FBSNominationStatus,\n  FBSNominationSource,\n  newCBOptionList,\n  Permission\n} from '@/utils/constant';\nimport { hasPermission } from '@/utils/permission';\nimport { getShopListByIdOrName } from '@/api/shopConfig';\nimport MassOperateDialog from './MassOperateDialog';\nimport moment from 'moment';\nimport { getCsrfHeader, getCsrfData } from '@/utils/cookie';\n\nconst moduleName = 'FBSProductNomination';\nexport default {\n  components: {\n    ExportHistoryDialog,\n    MassOperateDialog\n  },\n  data() {\n    const defaultCountry =\n      this.$store.getters.countrySelectList.length > 1\n        ? ''\n        : (this.$store.getters.countrySelectList[0] || { value: '' }).value;\n\n    return {\n      headerTabs: [\n        { value: 'all', label: 'commonAll' },\n        {\n          value: 'myPA',\n          label: 'commonMyPendingApprovals'\n        }\n      ],\n      statusClass: {\n        1: 'green',\n        2: 'orange',\n        3: 'red'\n      },\n      activeTab: 'all',\n      canMassUpload: false,\n      canApprove: false,\n      isShowExportHistory: false,\n      lastSearchForm: {},\n      checkedRows: [],\n      shopIDSelectOptions: [],\n      searchForm: {\n        shop_id: '',\n        request_id: '',\n        approve_status: '',\n        sku_id: '',\n        source: '',\n        country: defaultCountry\n      },\n      defaultCountry,\n      loading: false,\n      loadingExport: false,\n      massDialog: false,\n      massMode: 'approve',\n      pager: {\n        page_no: 1,\n        count: 10\n      },\n      total: 0,\n      taskType: '',\n      tableList: [],\n      exportTitle: ''\n    };\n  },\n  computed: {\n    searchSchema() {\n      return [\n        {\n          type: 'select',\n          width: 6,\n          label: this.$t('commonRegion'),\n          field: 'country',\n          options: [{ label: 'All', value: '' }].concat(this.countryList)\n        },\n        {\n          type: 'shopIDName',\n          width: 6,\n          label: this.$t('commonShopIDOrName'),\n          field: 'shop_id'\n        },\n        {\n          type: 'input',\n          width: 6,\n          label: this.$t('commonRequestID'),\n          field: 'request_id'\n        },\n        {\n          type: 'select',\n          width: 6,\n          label: this.$t('commonStatus'),\n          field: 'approve_status',\n          options: [{ label: 'All', value: '' }, ...FBSNominationStatus],\n          isHidden: this.activeTab === 'myPA'\n        },\n        {\n          type: 'SkuID',\n          width: 6,\n          label: this.$t('commonSkuIDOrName'),\n          field: 'sku_id'\n        },\n        {\n          type: 'select',\n          width: 6,\n          label: this.$t('commonSource'),\n          field: 'source',\n          options: [{ label: 'All', value: '' }, ...FBSNominationSource],\n          isHidden: this.activeTab === 'myPA'\n        },\n        {\n          type: 'select',\n          width: 6,\n          label: this.$t('commonCBOption'),\n          field: 'cb_option',\n          options: [{ label: 'All', value: '' }, ...newCBOptionList]\n        }\n      ].filter(item => !item.isHidden);\n    },\n    countryList() {\n      return this.$store.getters.countrySelectList;\n    }\n  },\n  methods: {\n    moment,\n    getCsrfData,\n    getCsrfHeader,\n    onDownloadTemplate() {\n      window.open('/admin/data/FBSNominationMassUploadTemplate.xlsx');\n    },\n    onExport() {\n      if (this.checkedRows.length < 1) {\n        return this.$message({\n          type: 'error',\n          message: this.$t('commonPleaseChooseAtLeastOneOption')\n        });\n      }\n      const params = {\n        request_id_list: this.checkedRows.map(item => item.request_id)\n      };\n      this.loadingExport = true;\n      exportNominationTemplate(params)\n        .then(res => {\n          if (res && res.retcode === 0) {\n            this.$message({ type: 'success', message: this.$t('commonExportHistorySuccessTips') });\n          } else {\n            this.$message({ type: 'error', message: res.info || res.message });\n          }\n        })\n        .catch(e => {\n          this.$message({ type: 'error', message: e });\n        })\n        .finally(() => {\n          this.loadingExport = false;\n        });\n    },\n    onMassApprove() {\n      if (this.checkedRows.length < 1) {\n        return this.$message({\n          type: 'error',\n          message: this.$t('commonPleaseChooseAtLeastOneOption')\n        });\n      }\n      this.onShowMassDialog('approve');\n    },\n    onShowMassDialog(mode) {\n      this.massMode = mode;\n      this.massDialog = true;\n    },\n    onCloseMassDialog() {\n      this.massDialog = false;\n    },\n    onMassReject() {\n      if (this.checkedRows.length < 1) {\n        return this.$message({\n          type: 'error',\n          message: this.$t('commonPleaseChooseAtLeastOneOption')\n        });\n      }\n      this.onShowMassDialog('reject');\n    },\n    changeSelections(value) {\n      this.checkedRows = value;\n    },\n    getShopIdName(query) {\n      if (query !== '') {\n        const params = {\n          search_type: 0,\n          shop_id_or_name: query,\n          page_no: 1,\n          count: 20\n        };\n        getShopListByIdOrName(params)\n          .then(res => {\n            if (res && res.retcode === 0) {\n              const shopListFilterCountry = this.searchForm.country\n                ? res.data.shop_list.filter(\n                  item => item.country === this.searchForm.country\n                )\n                : res.data.shop_list;\n              this.shopIDSelectOptions = shopListFilterCountry.map(item => ({\n                value: item.shop_id,\n                label: `${item.shop_id}(${item.shop_name})`\n              }));\n            }\n          })\n          .catch(e => {\n            this.$message.error(e);\n          });\n      }\n    },\n    onUploadSuccess(type, resp) {\n      if (type === 'upload') {\n        this.$refs.massUpload.clearFiles();\n      } else {\n        this.$refs.massApprove.clearFiles();\n      }\n      if (resp.retcode !== 0) {\n        this.$message.error(resp.info);\n      } else {\n        this.$message.success(this.$t('FBSUploadSuccessTip'));\n      }\n    },\n    onUploadError(type) {\n      if (type === 'upload') {\n        this.$refs.massUpload.clearFiles();\n      } else {\n        this.$refs.massApprove.clearFiles();\n      }\n      this.$message.error(this.$t('commonUploadFailed'));\n    },\n    onTabClick() {\n      this.onReset();\n      this.onResetPageNoSearch();\n    },\n    showExportHistory(taskType) {\n      this.taskType = taskType;\n      if (taskType === 'product_upload_approval_template') {\n        this.exportTitle = 'commonExportHistory';\n      } else {\n        this.exportTitle = 'commonUploadHistory';\n      }\n      this.isShowExportHistory = true;\n    },\n    closeExportHistory() {\n      this.isShowExportHistory = false;\n    },\n    formatCBOption(value) {\n      const statusText = (\n        newCBOptionList.find(item => item.value === value) || { label: '' }\n      ).label;\n      return statusText || '';\n    },\n    formatStatus(row) {\n      let statusText = (\n        FBSNominationStatus.find(item => item.value === row.approve_status) || { label: '' }\n      ).label;\n      if (row.approve_status === 2) {\n        statusText += `: ${row.pending_role}`;\n      }\n      return statusText;\n    },\n    formatSource(value) {\n      return (\n        FBSNominationSource.find(item => item.value === value) || { label: '' }\n      ).label;\n    },\n    async getSkuID(query = '', cb) {\n      if (`${query}`.trim() === '') return;\n      try {\n        const params = {\n          query: `${query}`.trim(),\n          country:\n            this.searchForm.country ||\n            this.countryList.map(item => item.value).join('_')\n        };\n        const resp = await getSkuIDOrName(params);\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n          cb([]);\n        } else {\n          cb(\n            resp.data.map(sku => {\n              return {\n                value: `${sku['sku_id']} ${sku['sku_name']}`,\n                skuID: sku['sku_id']\n              };\n            })\n          );\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    handleSkuIDSelect(item) {\n      this.searchForm.sku_id = item.skuID;\n    },\n    onReset() {\n      Object.keys(this.searchForm).forEach(key => {\n        if (key === 'country') {\n          this.searchForm[key] = this.defaultCountry;\n        } else {\n          this.searchForm[key] = '';\n        }\n      });\n    },\n    handleChangePage(page_no) {\n      this.pager.page_no = page_no;\n      this.onSearch();\n    },\n    handleSizeChange(count) {\n      this.pager.count = count;\n      this.pager.page_no = 1;\n      this.onSearch();\n    },\n    onResetPageNoSearch() {\n      this.handleChangePage(1);\n    },\n    async onSearch() {\n      try {\n        this.loading = true;\n        const params = formatParams({\n          ...this.pager,\n          ...this.searchForm\n        });\n        let func = () => {};\n        if (this.activeTab === 'myPA') {\n          func = getPendingApprovalNominationList;\n        } else {\n          func = getNominationList;\n        }\n        const res = await func(params);\n        if (res && res.retcode === 0) {\n          this.tableList = res.data.list || [];\n          this.total = res.data.total || 0;\n          this.lastSearchForm = params;\n        } else {\n          this.$message({ type: 'error', message: res.info });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loading = false;\n      }\n    },\n    cacheSearchCondition(form) {\n      this.$store.commit('setActiveTab', {\n        module: moduleName,\n        tab: this.activeTab\n      });\n      this.$store.commit('setSearchForm', {\n        module: moduleName,\n        form: form || null,\n        field: 'searchParams'\n      });\n    },\n    onRouteToDetail(row) {\n      this.cacheSearchCondition(this.lastSearchForm);\n      this.$router.push(\n        `/admin/fbs/product/nomination/detail/${row.request_id}`\n      );\n    }\n  },\n  created() {\n    this.canMassUpload = hasPermission(Permission.MASS_UPLOAD_PRODUCT_NOMINATION);\n    this.canApprove = hasPermission(Permission.APPROVE_PRODUCT_NOMINATION);\n    const cacheConditionObj = this.$store.getters.searchForm[moduleName];\n    if (\n      cacheConditionObj &&\n      cacheConditionObj.activeTab &&\n      cacheConditionObj.searchParams\n    ) {\n      this.activeTab = cacheConditionObj.activeTab;\n      const searchParams = cacheConditionObj.searchParams;\n      this.pager.count = searchParams.count;\n      this.pager.page_no = searchParams.page_no;\n      [\n        'shop_id',\n        'request_id',\n        'sku_id',\n        'country',\n        'approve_status',\n        'source'\n      ].forEach(key => {\n        if (searchParams[key]) {\n          this.searchForm[key] = searchParams[key];\n        }\n      });\n    }\n    if (this.$route.query.activeTab === 'myPA') {\n      this.activeTab = 'myPA';\n    }\n    this.onSearch();\n  }\n};\n</script>\n\n<style scoped lang=\"scss\">\n@import \"~@/styles/variables.scss\";\n.ownership-wrapper {\n  padding: 0 20px;\n  display: block;\n  .list-header-wrapper {\n    position: relative;\n    margin-bottom: 16px;\n    .list-create-btn {\n      position: absolute;\n      right: 0;\n      top: 0;\n      z-index: 1;\n    }\n  }\n  .main-wrapper {\n    width: 100%;\n    padding: 0;\n  }\n  .pagination-center {\n    display: flex;\n    justify-content: center;\n    margin-top: 20px;\n  }\n}\n</style>\n<style lang=\"scss\">\n@import \"~@/styles/common.scss\";\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/productNomination/rejectDialog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/rtsList/constant.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/rtsList/list/create/addSku.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":13,"column":24,"nodeType":"VIdentifier","messageId":"deprecated","endLine":13,"endColumn":30},{"ruleId":"vue/no-unused-components","severity":2,"message":"The \"ListMassUpload\" component has been registered but not used.","line":126,"column":5,"nodeType":"Property","endLine":126,"endColumn":19}],"errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-dialog\n    @close=\"$emit('close')\" :visible.sync=\"dialogVisible\" class=\"add-products pms-ui\" width=\"1080px\" :show-close=\"false\">\n    <header class=\"dialog-title\" slot=\"title\">\n      <h3 class=\"title\">Select SKU</h3>\n    </header>\n    <section class=\"search-view\">\n      <div class=\"search-row\">\n          <el-input\n          :placeholder=\"$t('promotionNominationAddSkuPlaceholder')\"\n          v-model=\"products\"\n          class=\"input-with-select\"\n          @keyup.enter.native=\"onSearch\"\n          style=\"width:100%\">\n            <el-select v-model=\"selectMode\" slot=\"prepend\" placeholder=\"请选择\" class=\"input-select\" :autosize=\"{ maxRows: 4 }\">\n              <el-option label=\"Product ID\" value=\"1\"></el-option>\n              <el-option label=\"SKU ID\" value=\"2\"></el-option>\n            </el-select>\n            <el-button slot=\"append\" :loading=\"searching\" icon=\"el-icon-search\" @click=\"onSearch\" class=\"list-btn\"></el-button>\n          </el-input>\n        </div>\n    </section>\n    <section class=\"table-view\">\n        <div class=\"left-table\">\n        <div class=\"table-connector\">\n          <div class=\"add-sku-show-available\"><el-checkbox v-model=\"only_available\" @change=\"onSearch\">{{$t('FbsRtsOnlyAvailableSku')}}</el-checkbox></div>\n          <button @click=\"selectProducts\">{{$t('commonAddSelected')}} >></button>\n        </div>\n        <el-table v-loading=\"searching\" @selection-change=\"changeProductsSelect\" :data=\"productList\" border height=\"450\">\n          <el-table-column type=\"selection\" :selectable=\"isSelectable\"></el-table-column>\n          <el-table-column\n          :label=\"schema.label\"\n          :prop=\"schema.field\"\n          v-for=\"schema in productTableSchema\"\n          :key=\"schema.label\"\n          :width=\"schema.width || ''\"\n          >\n            <template slot-scope=\"scope\">\n              <pms-table-cell :renderData=\"getTableCellRender(schema, scope.row, scope.$index)\"></pms-table-cell>\n            </template>\n          </el-table-column>\n          <el-table-column :label=\"$t('commonAction')\" align=\"center\" width=\"80\">\n            <template slot-scope=\"scope\">\n              <div class=\"added-btn\" v-if=\"skuMap[scope.row.sku_id]\">{{scope.row.fbs_status === 1 ? $t('commonAdded') : $t('commonDisable')}}</div>\n              <div class=\"add-btn\" @click=\"addSku(scope.row)\" v-else>{{$t('commonAdd')}}</div>\n            </template>\n          </el-table-column>\n        </el-table>\n        <el-pagination\n          :current-page=\"productPager.pageno\"\n          background\n          :page-sizes=\"[10,20,30]\"\n          layout=\"prev, pager, next\" :total.sync=\"total\"\n          @current-change=\"handleChangeProductPageIndex\"\n        ></el-pagination>\n      </div>\n\n      <div class=\"right-table\">\n        <div class=\"table-connector\">\n          <div>\n            <h4> {{$t('commonSkuAdded') + ' ('+ selectList.length +')'}} </h4>\n          </div>\n        </div>\n        <el-table :data=\"computedSelectList\" border height=\"450\">\n          <el-table-column\n          :label=\"schema.label\"\n          :prop=\"schema.field\"\n          v-for=\"schema in selectTableSchema\"\n          :key=\"schema.label\"\n          :width=\"schema.width\"\n          >\n            <template slot-scope=\"scope\">\n              <pms-table-cell :renderData=\"getTableCellRender(schema, scope.row, scope.$index)\"></pms-table-cell>\n            </template>\n          </el-table-column>\n          <el-table-column :label=\"$t('commonAction')\" align=\"center\" width=\"80\">\n            <template slot-scope=\"scope\">\n              <div class=\"remove-btn\" @click=\"removeSelect(scope.row)\">{{$t('purchaseRequest.remove')}}</div>\n            </template>\n          </el-table-column>\n        </el-table>\n        <el-pagination\n          :current-page=\"selectPager.pageIndex\" background layout=\"prev, pager, next\" :total.sync=\"selectPager.total\"\n          :page-size=\"10\" @current-change=\"handleChangeSelectPageIndex\"\n        ></el-pagination>\n      </div>\n    </section>\n    <div class=\"footer-row\" slot=\"footer\">\n      <div class=\"el-button\" @click=\"handleCancelDialogue\">{{$t('supplier.cancel')}}</div>\n      <div v-loading=\"loading\" @click=\"handleNext\" class=\"el-button\">{{$t('supplier.next')}}</div>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nimport ListMassUpload from '@/components/upload/blobResponseUpload';\nimport { searchSkuWithKey} from '@/api/FBS/rtsInterface';\nimport pmsTableCell from '@/components/BaseItem/tableItem';\n// import { getSkuList, validateSkuList, getProductSkuDetailList } from '@/api/nominate';\n// import { formatParams } from '@/utils/formatParams';\nexport default {\n  data() {\n    return {\n      checkedRows: [],\n      dialogVisible: false,\n      loading: false,\n      only_available: true,\n      selectMode: '1',\n      products: '',\n      productList: [],\n      skuMap: {},\n      productPager: {\n        count: 10,\n        pageno: 1\n      },\n      total: 0,\n      searching: false,\n      selectList: [],\n      selectPager: {\n        total: 0,\n        pageIndex: 1\n      }\n    };\n  },\n  components: {\n    ListMassUpload,\n    pmsTableCell\n  },\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    info: {\n      type: Object,\n      default: () => ({})\n    },\n    skus: {\n      type: Array,\n      default: () => []\n    }\n  },\n  computed: {\n    productTableSchema() {\n      return [\n        { label: this.$t('commonSkuIDOrName'), field: 'sku_id', render: (schema, row, h) => ['span', null, `${row.sku_id}/${row.sku_name}`]},\n        { label: this.$t('commonShopIDOrName'), field: 'shop_id', render: (schema, row, h) => ['span', null, `${row.shop_id}/${row.shop_name}`]},\n        { label: this.$t('FBSAvailableReturnStock'), field: 'available_stock' }\n      ];\n    },\n    selectTableSchema() {\n      return [\n        { label: this.$t('commonSkuIDOrName'), field: 'sku_id', render: (schema, row, h) => ['span', null, `${row.sku_id}/${row.sku_name}`]}\n      ];\n    },\n    computedProductList() {\n      const start = (this.productPager.pageIndex - 1) * 10;\n      return this.productList.slice(start, start + 10);\n    },\n    computedSelectList() {\n      const start = (this.selectPager.pageIndex - 1) * 10;\n      return this.selectList.slice(start, start + 10);\n    },\n    computedAdded() {\n      return true;\n    }\n  },\n  methods: {\n    isSelectable(row, index) {\n      return !this.skuMap[row.sku_id] || row.fbs_status !== 1; //  1 = normal\n    },\n    changeProductsSelect(rows) {\n      this.checkedRows = rows || [];\n    },\n    handleCancelDialogue() {\n      this.$emit('close');\n    },\n    handleChangeProductPageIndex(index) {\n      this.productPager.pageno = index;\n      this.getSku();\n    },\n    handleChangeSelectPageIndex(index) {\n      this.selectPager.pageIndex = index;\n    },\n    handleNext() {\n      if (this.selectList.length === 0) return this.$message.error('Please add some sku first!');\n      this.$emit('add', this.selectList);\n      this.$emit('close');\n    },\n    addSku(skuItem) {\n      if (!this.skuMap[skuItem.sku_id]) {\n        this.selectList.push(skuItem);\n        this.$set(this.skuMap, skuItem.sku_id, true);\n      }\n    },\n    onSearch() {\n      this.productPager.pageno = 1;\n      this.getSku();\n    },\n    getSku() {\n      const content = this.products.trim().replace(/(<\\w+?.*?>)|(<\\/\\w+?>)/g, '');\n      let list = [];\n      const reqObj = {\n        whs_id: this.info.whs_id,\n        shop_id: this.info.shop_id,\n        return_reason: this.info.return_reason,\n        only_available: this.only_available ? 1 : 0,\n        ...this.productPager,\n        count: 10\n        };\n      if (this.selectMode === '1') {\n        list = [...new Set(content.trim().split(/\\s*[，,]\\s*/).filter(item => item !== ''))].map(item => Number(item) || 0);\n        reqObj.product_ids = list.join(',');\n      } else if (this.selectMode === '2') {\n        list = [...new Set(content.trim().split(/\\s*[，,]\\s*/).filter(item => item !== ''))].map(item => item || '');\n        reqObj.sku_ids = list.join(',');\n      }\n      if (list.length > 100) {\n        return this.$message.error(`${this.selectMode === '1' ? 'Product' : 'SKU'} ID cann't be more than 100`);\n      }\n      this.searching = true;\n      searchSkuWithKey(reqObj).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.productList = resp.data ? resp.data.item_list : [];\n          this.total = resp.data ? resp.data.total : 0;\n        }\n        this.searching = false;\n      }).catch(() => { this.$message.error('Failed'); this.searching = false; });\n    },\n    onClear() {\n      this.products = '';\n    },\n    removeSelect(row) {\n      const index = this.selectList.findIndex(item => item.sku_id === row.sku_id);\n      if (index !== -1) {\n        this.$set(this.skuMap, row.sku_id, false);\n        this.skuMap[row.sku_id] = false;\n        this.selectList.splice(index, 1);\n        this.selectPager.total = this.selectList.length;\n        if ((this.selectPager.pageIndex - 1) * 10 + 1 > this.selectList.length) {\n          this.selectPager.pageIndex = 1;\n        }\n      }\n    },\n    selectProducts() {\n      this.checkedRows.forEach(item => {\n        if (!this.skuMap[item.sku_id]) {\n          this.selectList.push(item);\n          this.$set(this.skuMap, item.sku_id, true);\n        }\n      });\n      // [...this.selectList, ...this.checkedRows].forEach(item => {\n      //   if (!productIDMap[item.sku_id]) {\n      //     list.push(item);\n      //     productIDMap[item.sku_id] = true;\n      //   }\n      // });\n      this.selectPager = {\n        pageIndex: 1,\n        total: this.selectList.length\n      };\n    },\n    uploadSuccess(res) {\n      this.$emit('uploadSuccess', res);\n      this.$emit('close');\n    },\n    uploadError(res) {\n      this.$emit('uploadError', res);\n    },\n    getTableCellRender(schema, row, index) {\n      return { schema, row, index };\n    }\n  },\n  watch: {\n    '$props.visible': {\n      handler(curr) {\n        this.dialogVisible = curr;\n        this.selectList = [];\n        this.productList = [];\n        this.checkedRows = [];\n        this.only_available = true;\n        this.products = '';\n        this.productPager = { count: 10, pageno: 1 };\n        this.selectPager = { total: 0, pageIndex: 1 };\n        if (curr) {\n          this.onSearch();\n          this.skus.forEach(sku => {\n            this.$set(this.skuMap, sku.sku_id, true);\n          });\n        } else {\n          this.skuMap = {};\n        }\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  .add-products {\n    &/deep/.el-dialog {\n      margin-top: 10vh !important;\n    }\n    .dialog-title {\n      .title-remark {\n        margin-left: 10px;\n        color: #CCCCCC;\n        font-size: 14px;\n      }\n    }\n    &/deep/.el-dialog__body {\n      padding: 10px 20px 0;\n    }\n    .upload-row {\n      text-align: right;\n    }\n    .search-view {\n      display: flex;\n      align-items: center;\n      .search-row {\n        flex: 3;\n        display: flex;\n        align-items: center;\n        & /deep/ .el-input__inner {\n            border: none;\n        }\n        & /deep/ .el-input-group__prepend {\n          border: none;\n        }\n        .input-with-select {\n          border: 1px solid #E2E6EC;\n          border-radius: 4px;\n          overflow: hidden;\n          .input-select {\n            width: 110px;\n            border: none;\n            & /deep/ .el-input__inner {\n            border-right: 1px solid #E2E6EC;\n            &:focus {\n              outline: none;\n            }\n            }\n\n          }\n          & /deep/.el-input-group__append\n            {\n              padding: 0;\n              border: none;\n            }\n        }\n        .input-products {\n          margin-right: 10px;\n        }\n        .list-btn {\n          width: 10px;\n        }\n      }\n      .chosen-title {\n        flex: 2;\n        margin-left: 80px;\n      }\n    }\n    .table-view {\n      display: flex;\n      margin: 20px 0;\n      justify-content: center;\n      align-items: flex-start;\n      .left-table {\n        flex: 3.5;\n        text-align: center;\n        margin-right: 36px;\n      }\n      .right-table {\n        flex: 2;\n        text-align: center;\n      }\n      .el-table {\n        margin-bottom: 20px;\n        & /deep/ .remove-btn{\n          color:#3D6ED1;\n          cursor: pointer;\n        }\n        & /deep/ .add-btn{\n          cursor: pointer;\n          color: #3D6ED1;\n        }\n        & /deep/ .added-btn{\n          cursor: not-allowed;\n          color: #aaa;\n        }\n      }\n      .table-connector {\n        width: 100%;\n        height: 30px;\n        text-align: right;\n        display: flex;\n        justify-content: space-between;\n        &>button{\n          height: 20px;\n          background-color:#3D6ED1;\n          color: #fff;\n          font-size: 12px;\n          border: none;\n          border-radius:2px;\n          padding: 4px;\n          cursor: pointer;\n        }\n        &>div\n        {\n          text-align: left;\n          &>h4{\n            font-size: 14px;\n            line-height: 22px;\n            color: #000;\n          }\n        }\n      }\n    }\n    .footer-row {\n      text-align: right;\n      &>div {\n        width: 85px;\n      }\n      &>div:last-child {\n        background: #3D6ED1;\n        color:white;\n      }\n    }\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/rtsList/list/create/index.vue","messages":[{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":6,"column":62,"nodeType":"ThisExpression","endLine":6,"endColumn":66},{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":10,"column":34,"nodeType":"ThisExpression","endLine":10,"endColumn":38},{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":14,"column":18,"nodeType":"ThisExpression","endLine":14,"endColumn":22},{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":29,"column":18,"nodeType":"ThisExpression","endLine":29,"endColumn":22},{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":38,"column":15,"nodeType":"ThisExpression","endLine":38,"endColumn":19},{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":57,"column":14,"nodeType":"ThisExpression","endLine":57,"endColumn":18},{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":100,"column":7,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":100,"endColumn":8,"fix":{"range":[5541,5542],"text":""}},{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":307,"column":19,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":307,"endColumn":20,"fix":{"range":[14003,14004],"text":""}},{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":766,"column":10,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":766,"endColumn":11,"fix":{"range":[31672,31673],"text":""}}],"errorCount":9,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"<template>\n  <div class=\"fbs-rts-operation-page\">\n    <section class=\"opreation-title-area\">\n      <div>\n        <i class=\"back-icon el-icon-arrow-left\" @click=\"goBack\"></i>\n        <span class=\"title\" v-if=\"basic.mode !== 'detail'\">{{this.basic.mode === 'create' ? $t('FBSCreateReturnRequest') : $t('FBSEditReturnRequest')}}</span>\n        <span class=\"title\" v-else>{{basic.id}}\n          <span :style=\"status[0]\" class=\"rts-status-style\">{{status[1]}}{{pendingApproval.pending_role_name ? ': ' + pendingApproval.pending_role_name : ''}}</span></span>\n      </div>\n      <div class=\"buttons\" v-if=\"this.basic.mode === 'create'\">\n        <el-button @click=\"goBack\">{{$t('commonCancelRequest')}}</el-button>\n        <el-button type=\"primary\" @click=\"onSubmit(true)\">{{$t('commonSubmit')}}</el-button>\n      </div>\n      <div v-if=\"this.basic.mode === 'detail'\" class=\"buttons\">\n        <el-button v-if=\"canCancel\" @click=\"onCancel\">{{$t('commonCancelRequest')}}</el-button>\n        <el-button class=\"blue-border-button\" @click=\"switchActionLog(true)\">{{$t('commonActionLog')}}</el-button>\n        <el-dropdown split-button @command=\"onExportContract\" class=\"export-group\">\n        {{ $t('commonExport') }}\n          <el-dropdown-menu slot=\"dropdown\">\n            <el-dropdown-item command=\"excel\">{{ $t('commonExportExcel') }}</el-dropdown-item>\n            <el-dropdown-item command=\"pdf\">{{ $t('commonExportPDF') }}</el-dropdown-item>\n          </el-dropdown-menu>\n        </el-dropdown>\n        <el-button type=\"primary\" v-if=\"canModify\" @click=\"handleModify\">{{$t('commonModify')}}</el-button>\n        <el-button type=\"primary\" v-if=\"canRequest\" @click=\"onRequestAgain\">{{$t('commonRequestAgain')}}</el-button>\n        <el-button class=\"approve-btn\" v-if=\"canApprove\" @click=\"onApprove(1)\">{{$t('commonApproveNext')}}({{pendingApproval.total}})</el-button>\n        <el-button class=\"reject-btn\" v-if=\"canApprove\" @click=\"onReject(true)\">{{$t('commonRejectNext')}}({{pendingApproval.total}})</el-button>\n      </div>\n      <div v-if=\"this.basic.mode === 'modify'\" class=\"buttons\">\n        <el-button @click=\"cancelModify\">{{$t('commonCancelModify')}}</el-button>\n        <el-button type=\"primary\" @click=\"onSubmit(false)\" >{{$t('commonReSubmit')}}</el-button>\n      </div>\n    </section>\n    <section class=\"operation-content-area\" v-loading=\"loading\">\n      <el-alert\n        class=\"rts-reject-information\"\n        :title=\"detailInfo.reject_reason\"\n        v-if=\"this.basic.mode === 'detail' && detailInfo.status === 5 && detailInfo.reject_reason\"\n        type=\"error\"\n        show-icon>\n      </el-alert>\n      <h1>{{$t('commonBasicInfo')}}</h1>\n      <el-form :model=\"form\" :form=\"form\" ref=\"form\" label-width=\"170px\" :rules=\"rules\" :validate-on-rule-change=\"false\">\n        <el-form-item v-for=\"item in formSchema\" :key=\"item.field\" :label=\"$t(item.label)\" :prop=\"item.field\">\n          <span v-if=\"basic.mode === 'detail' && item.type === 'readonly'\" style=\"word-break: break-all\">{{(detailInfo[item.readField] || (detailInfo[item.field] +  `${item.secondField ? '/' + detailInfo[item.secondField] : ''}`)|| '-')}}</span>\n          <span v-else-if=\"item.type === 'readonly'\">{{form[item.readField] || form[item.field] || '-'}}</span>\n          <pms-form-item @input=\"modifyForm\" :renderData=\"{ schema: item, form: form}\" v-else></pms-form-item>\n          <p><span class=\"sku-info-tip-style\" v-if=\"item.field === 'approved_return_date' && (approveCapacity || approveCapacity === 0) \">{{$t('FBSRemainingRTSCapacity')}}: {{approveCapacity}}</span></p>\n        </el-form-item>\n        <el-form-item :label=\"$t('commonRemark')\" class=\"rts-text-max-width\">\n          <span v-if=\"basic.mode === 'detail'\">{{detailInfo.remark || '-'}}</span>\n          <el-input v-else type=\"textarea\" :show-word-limit=\"true\" :rows=\"3\" maxlength=\"500\" v-model=\"form.remark\" :disabled=\"!form.shop_id\"></el-input>\n        </el-form-item>\n      </el-form>\n      <sku-table\n      ref=\"skuTable\"\n      :mode=\"this.basic.mode\"\n      :info=\"tableInfo\">\n      </sku-table>\n      <submit-confirm\n        :visible=\"submitVisible\"\n        :params=\"currentSubmit\"\n        @close=\"closeSubmitDialog\"\n      />\n    </section>\n    <action-log\n      :visible=\"actionVisible\"\n      @close=\"switchActionLog(false)\"\n      type=\"action\"\n      :params=\"actionParams\"\n    />\n    <approve-ticket-dialog\n    :mode=\"2\"\n    @reject=\"onApprove(2, $event)\"\n    @close=\"onReject(false)\"\n    :visible=\"rejectVisible\"\n    />\n  </div>\n</template>\n<script>\nimport {FBSRtsStatus, FBSRTSReturnReason, FBSRtsDeliveryMethod, Permission} from '@/utils/constant';\nimport { downloadBlobFile } from '@/utils/downloadFile';\nimport pmsFormItem, { getSelectOptions } from '@/components/BaseItem/formItem';\nimport actionLog from '@/components/actionLogDialog/actionLog';\nimport { hasPermission } from '@/utils/permission';\nimport { getRTSDetail, getInfoWithShopId, getApprovalPermission, getWhsCapacity, getRTSList, exportExcel, exportPDF, approveTicket, cancelRTSTicket, getShopWithIdAndName } from '@/api/FBS/rtsInterface';\nimport skuTable from './skuTable';\nimport submitConfirm from './submitDialog';\nimport approveTicketDialog from '../dialog/massApprove.vue';\nconst formKey = ['shop_id', 'whs_id', 'warehouse_address', 'return_reason', 'requested_return_date', 'delivery_method', 'seller_contact', 'seller_phone', 'seller_address', 'remark', 'return_reason_str'];\n\nexport default {\n  components: {\n    pmsFormItem,\n    skuTable,\n    submitConfirm,\n    actionLog,\n    approveTicketDialog\n  },\n  data () {\n    return {\n      basic: {\n        region: '',\n        mode: 'create', // detail, modify 三个状态：新建、详情、修改、审批、\n        id: ''\n      },\n      loading: false,\n      permission: false,\n      detailInfo: {},\n      warehouseList: [],\n      deliveryMethods: [],\n      pendingApproval: {},\n      approveCapacity: null, // 显示在ApproveDate的capacity\n      form: {},\n      submitVisible: false,\n      actionVisible: false,\n      rejectVisible: false,\n      actionParams: {},\n      currentSubmit: {},\n      shopOptions: [],\n      currentShop: {},\n      availableDate: '',\n      tableInfo: {\n        sku_list: [],\n        capacity: null\n      },\n      currentWhs: {} // 当前选择的warahouse\n    };\n  },\n  computed: {\n    status() {\n      if (!this.detailInfo.status) { return []; }\n      const status = FBSRtsStatus.find(item => item.value === this.detailInfo.status) || {};\n      const style = `background: ${status.backColor || 'rgba(0,0,0,0)'}; color: ${status.color};`;\n      return [style, status.label];\n    },\n    pickerOption() {\n        return {\n          disabledDate(date) {\n            return +date < new Date().setHours(0, 0, 0, 0);\n          }\n        };\n      },\n    rules() {\n      const paramsRequired = (name) => ({\n        required: true,\n        message: this.$t('commonIsRequired', {target: this.$t(name)}),\n        trigger: 'blur'});\n      const phoneValidate = (rule, value, callback) => {\n        if (Number(value)) {\n          return callback();\n        } else {\n          return callback(new Error(this.$t('FBSRTSPhoneTip')));\n        }\n      };\n      const sellerInfo = {\n        seller_contact: [paramsRequired('FBSSellerContact')],\n        seller_phone: [paramsRequired('FBSSellerPhone'), {validator: phoneValidate, trigger: 'blur'}]\n      };\n      const dateValidate = (rule, value, callback) => {\n        if (value && +new Date(value) >= new Date().setHours(0, 0, 0, 0)) {\n          return callback();\n        } else {\n          return callback(new Error(this.$t('FBSApprovedRTSdateTip')));\n        }\n      };\n      if (this.basic.mode === 'detail') {\n        if (this.canApprove) {\n          let result = {approved_return_date: [paramsRequired('FBSApprovedRTSdate'), {validator: dateValidate, trigger: 'blur'}]};\n          if (!this.detailInfo.delivery_method) {\n            this.$set(result, 'delivery_method', [paramsRequired('rtsMgtDeliveryMethod')]);\n            if (this.form.delivery_method === 3) {\n              result = {\n                ...result,\n                ...sellerInfo,\n                seller_address: [paramsRequired('FBSSellerAddress')]};\n            } else {\n              result = {...result, ...sellerInfo};\n            }\n          }\n          return result;\n        } else {\n          return {};\n        }\n      }\n      let result = {\n        shop_id: [paramsRequired('commonShopIDOrName')],\n        whs_id: [paramsRequired('commonWarehouse')],\n        requested_return_date: [paramsRequired('FBSRequestedRTSdate'), {validator: dateValidate, trigger: 'blur'}],\n        return_reason: [paramsRequired('RTSReturnReason')],\n        delivery_method: [paramsRequired('rtsMgtDeliveryMethod')]\n      };\n      if (this.form.delivery_method === 3) {\n        result = {...result, ...sellerInfo, seller_address: [paramsRequired('FBSSellerAddress')]};\n      } else {\n        result = {...result, ...sellerInfo};\n      }\n      return result;\n    },\n    formSchema() {\n      const schema = [{\n        label: 'commonShopIDOrName', field: 'shop_id', type: `${this.basic.mode === 'create' ? 'select' : 'readonly'}`, secondField: 'shop_name',\n        props: {clearable: true, remote: true, filterable: true, 'remote-method': this.getShopIdName},\n        on: {change: this.onShopChange},\n        getChildren: (h) => getSelectOptions(this.shopOptions, h)\n      },\n      {\n        label: 'commonWarehouse', type: `${this.basic.mode === 'create' ? 'select' : 'readonly'}`, field: 'whs_id',\n        props: {clearable: true, disabled: !this.form.shop_id},\n        on: {change: this.onWhsChange},\n        getChildren: (h) => getSelectOptions(this.warehouseOptions, h)\n      },\n      {label: 'commonWarehouseAddress', type: 'readonly', field: 'warehouse_address'},\n      {\n        label: 'RTSReturnReason', type: `${this.basic.mode === 'create' ? 'select' : 'readonly'}`,\n        field: 'return_reason', props: {disabled: !this.form.shop_id}, readField: 'return_reason_str',\n        getChildren: (h) => getSelectOptions(FBSRTSReturnReason.map(item => ({label: this.$t(item.label), value: item.value})), h), on: {change: this.onReasonChange}\n      },\n      {\n        label: 'FBSRequestedRTSdate', type: 'datePicker', field: 'requested_return_date',\n        props: {clearable: true, disabled: !this.form.shop_id, 'picker-options': this.pickerOption, 'value-format': 'yyyy-MM-dd'},\n        on: {change: (value) => this.onDateChange(value)} // Requested\n      },\n      {\n        label: 'FBSApprovedRTSdate', type: 'datePicker', field: 'approved_return_date', isHidden: this.basic.mode !== 'detail',\n        props: {clearable: true, 'picker-options': this.pickerOption, 'value-format': 'yyyy-MM-dd'},\n        on: {change: (value) => this.getCapacity(this.detailInfo.whs_id, value)} // Approved\n      },\n      {\n        label: 'rtsMgtDeliveryMethod', type: 'select', field: 'delivery_method', readField: 'delivery_method_str',\n        props: {disabled: !this.form.shop_id && !this.canApprove}, getChildren: (h) => getSelectOptions(this.deliveryMethodsAfterTrans, h)\n      },\n      {label: 'FBSSellerContact', type: 'input', field: 'seller_contact', props: {disabled: !this.form.shop_id && !this.canApprove}},\n      {label: 'FBSSellerPhone', type: 'input', field: 'seller_phone', props: {type: 'number', disabled: !this.form.shop_id && !this.canApprove}},\n      {label: 'FBSSellerAddress', type: 'input', field: 'seller_address', class: 'rts-text-max-width', props: {type: 'textarea', disabled: !this.form.shop_id && !this.canApprove}}\n      ];\n      if (this.basic.mode === 'detail') {\n        schema.forEach((item, index) => {\n          if (!this.canApprove) {\n            schema[index].type = 'readonly';\n          } else {\n            const sellerInfo = ['seller_contact', 'seller_phone', 'seller_address'];\n            if (item.field !== 'delivery_method' && item.field !== 'approved_return_date') {\n              if (this.detailInfo.delivery_method > 0 || !sellerInfo.includes(item.field)) {\n                schema[index].type = 'readonly';\n              }\n            } else if (item.field === 'delivery_method' && this.detailInfo.delivery_method > 0) {\n              schema[index].type = 'readonly';\n            }\n          }\n        });\n      }\n      return schema.filter(item => !item.isHidden);\n    },\n    warehouseOptions() {\n      if (!this.form.shop_id) return [];\n      return this.warehouseList.map(item => ({\n        label: item.warehouse, value: item.warehouse\n      }));\n    },\n    deliveryMethodsAfterTrans() {\n      if (!Array.isArray(this.deliveryMethods) || this.deliveryMethods.length === 0) {\n        return [];\n      } else {\n        return this.deliveryMethods.map(item => ({label: this.$t(item.label), value: item.value}));\n      }\n    },\n    isRequester() {\n      return this.detailInfo.requester === this.$store.getters.email;\n    },\n    canRequest() {\n      return this.permission && this.detailInfo.status === 11 && this.isRequester && this.detailInfo.request_again === 0;\n    },\n    canModify() {\n       return this.permission && this.detailInfo.status === 5 && this.isRequester;\n    },\n    canApprove() {\n      if (this.permission && !this.isRequester) {\n        if (this.basic.mode === 'detail' && (this.detailInfo.status === 3 && this.pendingApproval.can_approve)) {\n          return true;\n        }\n      }\n      return false;\n    },\n    canCancel() {\n      return this.permission && this.basic.mode === 'detail' && this.detailInfo.status < 7 && this.isRequester && this.detailInfo.return_reason !== 3; // return_reason = 3 由系统创建\n    }\n  },\n  watch: {\n    '$route.params': { // 当url发生变化，重新拉取信息\n      handler(cur) {\n        if (cur) {\n          const modes = ['create', 'modify', 'detail'];\n          if (modes.includes(cur.mode)) {\n            this.basic.mode = cur.mode;\n            if (cur.id) {\n              this.basic.id = cur.id;\n              this.getbasicInfo();\n            }\n          } else {\n            return this.$router.replace('/admin/404');\n          }\n        }\n      }\n    }\n  },\n  beforeRouteLeave (to, from, next) { // 去的地方不是RTS则清除search form\n    const isBackToList = to.fullPath.includes('/fbs/fbsRts/list');\n    if (!isBackToList) {\n      this.$store.commit('setActiveTab', { module: 'FBSRTSLIST'});\n      this.$store.commit('setSearchForm', {\n        module: 'FBSRTSLIST',\n        value: null,\n        form: null,\n        field: 'fbsRts'\n      });\n    }\n    next();\n  },\n  methods: {\n    resetForm() {\n      this.availableDate = '';\n      this.currentSubmit = {};\n      this.actionParams = {};\n      this.approveCapacity = null;\n      this.form = {};\n      this.pendingApproval = {};\n      this.detailInfo = {};\n      this.tableInfo = {\n        sku_list: [],\n        capacity: null\n      };\n    },\n    goBack() {\n        this.$router.go(-1);\n    },\n    onRequestAgain() { // 当单据被cancel之后可以在原有单据的基础上新建单据\n      this.$router.push(`/admin/fbs/fbsRts/list/create/${this.basic.id}`);\n    },\n    handleModify() { // 当单据被reject后该单据可以被修改\n      this.$router.replace(`/admin/fbs/fbsRts/list/modify/${this.basic.id}`);\n    },\n    cancelModify() {\n      this.$router.replace(`/admin/fbs/fbsRts/list/detail/${this.basic.id}`);\n    },\n    switchActionLog(isShow) {\n      if (isShow) {\n        this.actionParams = {\n          log_type: 'fbs_rts_request',\n          biz_type: 'FBS_RTS',\n          show_type: 1,\n          object_id: this.basic.id\n        };\n      }\n      this.actionVisible = isShow;\n    },\n    getbasicInfo() { // 当url中有id时初始化就会调用这个\n      this.loading = true;\n      this.resetForm();\n      getRTSDetail({rts_id: this.basic.id}).then(res => {\n        if (res.retcode === 0) {\n          this.detailInfo = res.data;\n          const returnReason = [{ label: 'FBSRTSSKUExit', value: 3}].concat(FBSRTSReturnReason).find(item => item.value === res.data.return_reason) || {};\n          res.data.return_reason_str = returnReason.label ? this.$t(returnReason.label) : '-';\n          const delivery_method = FBSRtsDeliveryMethod.find(item => item.enLabel === res.data.delivery_method) || {};\n          res.data.delivery_method_str = delivery_method.label ? this.$t(delivery_method.label) : '-'; // 只做为显示的用途\n          res.data.delivery_method = delivery_method.value || 0; // 当编辑态实际的值\n          this.basic.region = res.data.region;\n          this.tableInfo = {...this.tableInfo, ...res.data};\n          this.approveCapacity = null;\n          if (this.basic.mode !== 'detail' && this.basic.id) { // 编辑态将值给到表单\n            formKey.forEach(item => {\n              this.$set(this.form, item, this.detailInfo[item]);\n              this.$set(this.tableInfo, item, this.detailInfo[item]);\n            });\n            this.tableInfo.sku_list.forEach((item, index) => {\n              this.$set(this.tableInfo.sku_list[index], 'available_stock', item.newest_available_stock);\n            });\n            this.getShopInfo({shop_id: this.form.shop_id, region: this.detailInfo.region});\n            this.onDateChange(this.form.requested_return_date);\n          }\n          if (this.detailInfo.status === 3) {\n            this.getApprovalPermission();\n          } else {\n            this.pendingApproval = {};\n          }\n        } else {\n          this.$message.error(res.info || res.message);\n        }\n      }).catch(e => {\n        this.$message.error(e.info || e.message);\n      }).finally(_ => {\n        this.loading = false;\n      });\n    },\n    async getShopInfo(params) {\n      try {\n        const {\n          retcode,\n          data,\n          info,\n          message\n        } = await getInfoWithShopId(params);\n        if (retcode === 0) {\n          this.availableDate = data.setting.available_date;\n          this.deliveryMethods = data.setting.delivery_method;\n          this.warehouseList = data.whs_list;\n          if (this.detailInfo.delivery_method === 3) {\n            const sellerInfo = { // 创建或修改单据，如果原delivery_method为3就默认值上次单据所填seller_info, 如果不是就系统自动带出\n              contact: this.detailInfo.seller_contact,\n              phone: this.detailInfo.seller_phone,\n              addr: this.detailInfo.seller_address\n            };\n            this.$set(this.basic, 'sellerInfo', sellerInfo);\n          } else {\n            this.$set(this.basic, 'sellerInfo', data.seller_info);\n          }\n        } else {\n          this.$message.error(info || message);\n          return false;\n        }\n      } catch (err) {\n        this.$message.error(err.info || err.message);\n        return false;\n      }\n    },\n    modifyForm(schema, value) {\n      this.$set(this.form, schema.field, value);\n    },\n    getCapacity(whs_id, date) {\n      if (!date || !whs_id) {\n        this.approveCapacity = null;\n        this.tableInfo.capacity = null;\n        return;\n      }\n      const params = {whs_id, date};\n      getWhsCapacity(params).then(res => {\n        if (res.retcode === 0) {\n          if (this.canApprove) {\n            this.approveCapacity = res.data.remain_capacity; // 取剩余capacity\n          } else {\n            this.tableInfo.capacity = res.data.remain_capacity;\n          }\n        } else {\n          this.$message.error(res.message || res.info);\n        }\n      }).catch(e => {\n        this.$message.error(e.messsage || e.info);\n      });\n    },\n    getShopIdName(query) {\n      if (query !== '') {\n        const params = {\n          shop_id_or_name: query\n        };\n        getShopWithIdAndName(params)\n          .then(res => {\n            if (res && res.retcode === 0) {\n              this.shopOptions = res.data.shops.map(item => {\n                let label = `${item.shop_id}/${item.shop_name}`;\n                if (item.fbs_status === 0) {\n                  label += `(${this.$t('commonInactive')})`;\n                }\n                return {\n                  value: item.shop_id,\n                  shop_type: item.shop_type,\n                  shop_name: item.shop_name,\n                  region: item.country,\n                  disabled: item.fbs_status === 0,\n                  label\n                };\n              });\n            } else {\n              this.$message({\n                type: 'error',\n                message: res.message || res.info\n              });\n            }\n          })\n          .catch(e => {\n            this.$message({ type: 'error', message: e });\n          });\n      }\n    },\n    onSubmit(isFirst) {\n      this.$refs['form'].validate((valid) => {\n          if (valid) {\n            if (this.$refs.skuTable.skuList.length < 1) {\n              return this.$message.error(this.$t('FBSRTSNoSkuTip'));\n            } else {\n              const isInvalid = this.$refs.skuTable.skuList.some(item => {\n                if (!item.requested_return_qty) {\n                  this.$message.error(item.sku_name + this.$t('commonIsRequired', {target: this.$t('FBSRTSRequestReturnQty')}));\n                  return true;\n                }\n                if (isNaN(parseInt(item.requested_return_qty))) {\n                  this.$message.error(item.sku_name + this.$t('commonInvalidTip', {name: this.$t('FBSRTSRequestReturnQty')}));\n                  return true;\n                }\n                if (item.requested_return_qty > item.available_stock) {\n                  this.$message.error(item.sku_name + this.$t('commonInvalidTip', {name: this.$t('FBSRTSRequestReturnQty')}));\n                  return true;\n                }\n              });\n              if (isInvalid) { return; }\n            }\n            let requestedTotal = 0;\n            const sku_list = this.$refs.skuTable.skuList.map(item => {\n              requestedTotal += item.requested_return_qty;\n              return {\n              sku_id: item.sku_id,\n              sku_name: item.sku_name,\n              barcode: item.barcode,\n              requested_return_qty: parseInt(item.requested_return_qty),\n              available_stock: parseInt(item.available_stock)};\n            });\n            if ((this.tableInfo.capacity || 0) < requestedTotal) {\n              return this.$message.error(this.$t('FBSRTSExceedingCapacityTip'));\n            }\n            if (isFirst) {\n              this.currentSubmit = {basic_info: this.form, sku_list};\n              if (this.basic.id) {\n                this.$set(this.currentSubmit.basic_info, 'rts_id', this.basic.id);\n              }\n            } else {\n              this.currentSubmit = {basic_info: {...this.form, resubmit: 1, rts_id: this.basic.id}, sku_list};\n            }\n            this.submitVisible = true;\n          } else {\n            this.$message.error(this.$t('FBSRTSBasicInfoCheckTip'));\n            return false;\n          }\n        });\n    },\n    onCancel() { // 取消该单据\n      cancelRTSTicket({rts_id: this.basic.id}).then(res => {\n        if (res.retcode === 0) {\n          this.$message.success(this.$t('commonCancelSuccessfully'));\n          this.getbasicInfo();\n        } else {\n          this.$message.error(res.info || res.message);\n        }\n      }).catch(e => {\n        this.$message.error(e.info || e.message);\n      });\n    },\n    closeSubmitDialog(param) {\n      this.submitVisible = false;\n      if (Array.isArray(param) && param.length > 0) {\n        this.$refs.skuTable.updateStock(param);\n      } else if (typeof param === 'string') {\n        this.tableInfo.capacity = null;\n       this.$router.replace(`/admin/fbs/fbsRts/list/detail/${param}`);\n      }\n    },\n    getApprovalPermission() {\n      if (this.detailInfo.status === 3) {\n        const approval_flow_process_id = this.detailInfo.approval_flow_process_id;\n        const params = { approval_flow_process_id};\n        getApprovalPermission(params).then(res => {\n          if (res.retcode === 0) {\n            this.pendingApproval = res.data;\n            if (res.data.can_approve) {\n              if (this.detailInfo.requested_return_date) {\n                this.getShopInfo({shop_id: this.detailInfo.shop_id, region: this.detailInfo.region});\n                const approvedDate = this.detailInfo.approved_return_date ? this.detailInfo.approved_return_date : this.detailInfo.requested_return_date;\n                const date = new Date(approvedDate).setHours(0, 0, 0, 0);\n                const today = new Date().setHours(0, 0, 0, 0);\n                if (date >= today) {\n                  this.$set(this.form, 'approved_return_date', approvedDate);\n                  this.getCapacity(this.detailInfo.whs_id, approvedDate);\n                }\n              }\n              if (!this.detailInfo.delivery_method) {\n                this.$set(this.form, 'seller_contact', this.detailInfo.seller_contact);\n                this.$set(this.form, 'seller_phone', this.detailInfo.seller_phone);\n                this.$set(this.form, 'seller_address', this.detailInfo.seller_address);\n              }\n              getRTSList({page_no: 1, count: 1, is_my_pending: 1}).then(res => { // 拿到还有多少条单据待审批\n                if (res.retcode === 0) {\n                  this.$set(this.pendingApproval, 'total', res.data.total);\n                }\n              });\n            }\n          }\n        });\n      };\n    },\n    onApprove(action, param) {\n      if (action === 1) {\n        this.$refs['form'].validate((valid) => {\n          if (valid) {\n            if ((this.approveCapacity || 0) < this.detailInfo.sku_overview.approved_return_qty) {\n              return this.$message.error(this.$t('FBSRTSExceedingCapacityTip'));\n            }\n            const params = {...this.form, rts_id: this.basic.id, action};\n            approveTicket(params).then(res => {\n              if (res.retcode === 0) {\n                this.$message.success(this.$t('commonApproveSuccessfully'));\n                if (res.data.next_request_id && res.data.next_request_id !== this.basic.id) {\n                  this.$router.push(`/admin/fbs/fbsRts/list/detail/${res.data.next_request_id}`);\n                  this.$set(this.basic, 'id', res.data.next_request_id);\n                } else {\n                  this.getbasicInfo();\n                }\n              } else {\n                this.$message.error(res.info || res.message);\n              }\n            }).catch(e => {\n              this.$message.error(e.info || e.message);\n            });\n          }\n        });\n      } else if (action === 2) {\n        const params = {action, ...param, rts_id: this.basic.id};\n        approveTicket(params).then(res => {\n          if (res.retcode === 0) {\n            this.$message.success(this.$t('commonRejectSuccessfully'));\n            this.onReject(false);\n            if (res.data.next_request_id && res.data.next_request_id !== this.basic.id) {\n              this.$router.push(`/admin/fbs/fbsRts/list/detail/${res.data.next_request_id}`);\n            } else {\n              this.getbasicInfo();\n            }\n          } else {\n                this.$message.error(res.info || res.message);\n              }\n            }).catch(e => {\n              this.$message.error(e.info || e.message);\n          });\n      }\n    },\n    onReject(isShow) {\n      this.rejectVisible = isShow;\n    },\n    onExportContract(type) {\n      const exportFunc = type === 'pdf' ? exportPDF : exportExcel;\n      const params = {rts_id: this.basic.id, lang_id: window.localStorage.getItem('pmsLanguage')};\n      exportFunc(params).then(resp => {\n        if (resp.type === 'application/json') {\n          // 下载失败的出现错误提示\n          const reader = new FileReader();\n          reader.onloadend = () => {\n            // const result = JSON.parse(reader.result);\n          };\n          reader.readAsText(resp);\n        } else {\n          const fileName = `FBSRTS${this.basic.id}.${type === 'pdf' ? 'pdf' : 'xlsx'}`;\n          downloadBlobFile(resp, fileName);\n        }\n      }\n      ).catch(e => {\n        this.$message.error('Download Failed');\n      });\n    },\n    setShop(id) {\n      this.currentShop = this.shopOptions.find(item => item.value === id) || {};\n      this.form = {shop_id: id};\n      this.tableInfo = {...this.form, sku_list: [], capacity: null};\n      this.basic.region = (this.currentShop && this.currentShop.region) || '';\n      if (id) {\n        getInfoWithShopId({shop_id: id, region: this.basic.region}).then(res => {\n          if (res.retcode === 0) {\n            if (res.data.setting) {\n              this.availableDate = res.data.setting.available_date;\n              this.deliveryMethods = res.data.setting.delivery_method;\n            }\n            if (res.data.seller_info) {\n              this.$set(this.form, 'seller_contact', res.data.seller_info.contact);\n              this.$set(this.form, 'seller_phone', res.data.seller_info.phone);\n              this.$set(this.form, 'seller_address', res.data.seller_info.addr);\n              this.$set(this.basic, 'sellerInfo', res.data.seller_info);\n            }\n            this.basic.setting = res.data.setting;\n            this.warehouseList = res.data.whs_list;\n          }\n        }).catch();\n      } else {\n        this.availableDate = '';\n        this.basic.setting = {};\n        this.basic.sellerInfo = {};\n        this.warehouseList = [];\n        this.shopOptions = [];\n        this.deliveryMethods = [];\n      }\n      this.currentWhs = {};\n      this.clearSkuTable();\n    },\n    onShopChange(value) {\n      if (this.tableInfo.shop_id) {\n        this.$confirm(this.$t('FBSRTSChangeBasicItemTip', {item: this.$t('commonShop')}), this.$t('commonTip'),\n        {\n          confirmButtonText: this.$t('commonConfirm'),\n          cancelButtonText: this.$t('commonCancel'),\n          type: 'warning'\n        }).then(_ => {\n          this.setShop(value);\n        }).catch(_ => {\n          this.form.shop_id = this.tableInfo.shop_id;\n        });\n        return;\n      } else {\n        this.setShop(value);\n      }\n    },\n    setWHS(value) {\n      this.currentWhs = this.warehouseList.find(item => item.warehouse === value) || {};\n      this.$set(this.form, 'warehouse_address', this.currentWhs.whs_address || '');\n      this.$set(this.tableInfo, 'whs_id', value);\n    },\n    onWhsChange(value) {\n      if (this.tableInfo.whs_id) {\n        this.$confirm(this.$t('FBSRTSChangeBasicItemTip', {item: this.$t('commonWarehouse')}), this.$t('commonTip'),\n        {\n          confirmButtonText: this.$t('commonConfirm'),\n          cancelButtonText: this.$t('commonCancel'),\n          type: 'warning'\n        }).then(_ => {\n          this.setWHS(value);\n          this.clearSkuTable();\n          if (this.form.requested_return_date) {\n            this.getCapacity(value, this.form.requested_return_date);\n          }\n        }).catch(_ => {\n          this.form.whs_id = this.tableInfo.whs_id;\n        });\n        return;\n      } else {\n        this.setWHS(value);\n        if (this.form.requested_return_date) {\n            this.getCapacity(value, this.form.requested_return_date);\n        }\n      }\n    },\n    onDateChange(value) {\n      if (+new Date(value) >= new Date().setHours(0, 0, 0, 0)) {\n        if (this.form.whs_id) {\n          this.getCapacity(this.form.whs_id, value);\n        }\n        if (this.basic.mode !== 'create' && this.detailInfo.whs_id) {\n          this.getCapacity(this.detailInfo.whs_id, value);\n        }\n      }\n    },\n    onReasonChange(value) {\n      if (this.tableInfo.return_reason) {\n        this.$confirm(this.$t('FBSRTSChangeBasicItemTip', {item: this.$t('RTSReturnReason')}), this.$t('commonTip'),\n        {\n          confirmButtonText: this.$t('commonConfirm'),\n          cancelButtonText: this.$t('commonCancel'),\n          type: 'warning'\n        }).then(_ => {\n          this.$set(this.tableInfo, 'return_reason', value);\n          this.clearSkuTable(); // 清除已经添加过的sku\n        }).catch(_ => {\n          this.form.return_reason = value;\n        });\n      } else {\n        this.$set(this.tableInfo, 'return_reason', value);\n      }\n    },\n    clearSkuTable() {\n      this.$refs.skuTable.clearSkuTable();\n    }\n  },\n  created () {\n    this.permission = hasPermission(Permission.FBS_RETURN_REQUEST_EDIT);\n    const modes = ['create', 'modify', 'detail'];\n    this.$set(this.basic, 'mode', this.$route.params.mode);\n    if (modes.includes(this.basic.mode)) {\n      if (this.$route.params.id) {\n        this.$set(this.basic, 'id', this.$route.params.id);\n        this.getbasicInfo();\n        if (this.basic.mode === 'create') {\n          formKey.forEach(item => {\n          this.$set(this.form, item, this.detailInfo[item]);\n          });\n        }\n      } else if (this.basic.mode === 'create' && !this.permission) {\n          return this.$router.replace('/admin/404');\n      }\n    } else {\n      return this.$router.replace('/admin/404');\n    }\n  }\n};\n</script>\n\n<style lang='scss' scoped>\n.fbs-rts-operation-page {\n  width: 100%;\n  box-sizing: border-box;\n  .blue-border-button{\n    color: #3D6ED1;\n    border: 1px solid #3D6ED1;\n  }\n  .export-group {\n    vertical-align: middle;\n    &/deep/.el-button-group>* {\n      height: 32px;\n      line-height: 32px;\n      padding: 0 10px;\n      color: #3D6ED1;\n      border: 1px solid #3D6ED1;\n      &:last-child {\n        padding: 0 3px;\n      }\n    }\n  }\n  .opreation-title-area {\n    width: inherit;\n    display: flex;\n    box-sizing: border-box;\n    justify-content: space-between;\n    color: #999;\n    line-height: 32px;\n    font-size: 18px;\n    border-bottom: 1px solid #E3E3E3;\n    padding: 0 16px 12px;\n    .title {\n      line-height: 20px;\n      color: #333;\n      font-weight: 500;\n    }\n    .rts-status-style {\n      padding: 2px 5px;\n      border-radius: 4px;\n      font-size: 12px;\n      line-height: 20px;\n    }\n    .buttons {\n      &>* {\n        height: 32px;\n        padding: 0 12px;\n      }\n      .approve-btn {\n        border: #1CC461 solid 1px;\n        color: #1CC461;\n      }\n      .reject-btn {\n        border: 1px solid #EF4A4A;\n        color: #EF4A4A;\n        margin-right: 10px;\n      }\n    }\n  }\n  .operation-content-area {\n    height: calc(100vh - 135px);\n    box-sizing: border-box;\n    overflow-y: scroll;\n    padding-top: 18px;\n    padding: 18px 16px 0;\n    h1 {\n      font-size: 16px;\n      color: #333;\n      font-weight: 900;\n      margin-bottom: 16px;\n    }\n    .rts-reject-information {\n      margin-bottom: 10px;\n    }\n\n    .sku-info-tip-style {\n      font-size: 12px;\n      color: #999;\n    }\n\n    &/deep/.el-form-item__label {\n      line-height: 32px;\n    }\n    &/deep/.el-form-item__content {\n      &/deep/input[type=number] {\n        -moz-appearance:textfield;\n      }\n      &/deep/input[type=number]::-webkit-inner-spin-button,\n      &/deep/input[type=number]::-webkit-outer-spin-button {\n        -webkit-appearance: none;\n        margin: 0;\n      }\n      .rts-text-max-width {\n        width: 800px;\n      }\n      .el-input, .el-select {\n        width: 240px;\n      }\n      .el-input__inner {\n        height: 32px;\n        line-height: 32px;\n      }\n      .el-date-editor.el-input {\n        width: 240px;\n      }\n      .el-textarea .el-input__count {\n        bottom: 5px;\n        line-height: 8px;\n      }\n    }\n    .rts-text-max-width {\n      &/deep/.el-form-item__content {\n        width: 800px;\n      }\n    }\n\n  }\n}\n</style>\n<style lang='scss'>\n.fbs-rts-operation-page {\n\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/rtsList/list/create/skuTable.vue","messages":[{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":25,"column":40,"nodeType":"ThisExpression","endLine":25,"endColumn":44},{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":89,"column":7,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":89,"endColumn":8,"fix":{"range":[3436,3437],"text":""}},{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":151,"column":10,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":151,"endColumn":11,"fix":{"range":[5955,5956],"text":""}},{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":154,"column":10,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":154,"endColumn":11,"fix":{"range":[5976,5977],"text":""}}],"errorCount":4,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"<template>\n  <div class='fbs-rts-sku-area'>\n    <div class=\"fbs-rts-sku-title\">\n      <h1>{{$t('menuSKUInfo')}} <span class=\"sku-info-tip-style\" v-if=\"info.capacity || info.capacity === 0\">{{$t('FBSRemainingRTSCapacity')}}: {{info.capacity}}</span></h1>\n      <el-dropdown split-button @command=\"getTemplate\" type=\"primary\" v-if=\"canAddSku\">\n        <el-upload\n          :show-file-list=\"false\"\n          class=\"upload-button\"\n          action=\"/api\"\n          :http-request=\"handleMassUploadRequest\"\n          accept=\".xls, .xlsx\"\n          ref='massUpload'\n          :headers=\"uploadHeader\"\n          :limit=\"1\"\n          :with-credentials=\"true\">\n          <span>{{ $t('commonMassUpload')}}</span>\n          </el-upload>\n        <el-dropdown-menu slot=\"dropdown\">\n          <el-dropdown-item command=\"template\">\n            <i class=\"el-icon-download\"></i>\n            {{$t('commonTemplate')}}</el-dropdown-item>\n        </el-dropdown-menu>\n      </el-dropdown>\n    </div>\n    <ul class=\"fbs-rts-overview\" v-if=\"this.mode === 'detail' && info.sku_overview\">\n      <li><h2>{{$t('commonOverview')}}</h2></li>\n      <li><p>{{$t('FBSRTSTotalVariations')}}</p>\n          <p>{{info.sku_overview.requested_return_num}}</p></li>\n      <li><p>{{$t('commonTotalQuantity')}} (pcs)</p><p>{{info.sku_overview.requested_return_qty}}</p></li>\n      <li><p>{{$t('FBSApprovedReturnQty')}} (pcs)</p><p>{{info.sku_overview.approved_return_qty}}</p></li>\n      <li><p>{{$t('FBSRTSTotalOutboundQty')}}</p><p>{{info.sku_overview.outbound_return_qty}}</p></li>\n    </ul>\n    <section class=\"fbs-rts-sku-table pms-ui\">\n      <el-table class=\"pms-ui\" :data=skuList>\n        <el-table-column label=\"No.\" type=\"index\"></el-table-column>\n        <el-table-column\n          v-for=\"schema in tableSchemas\"\n          :key=\"schema.field\"\n          :label=\"(schema.before || '') + $t(schema.label) + (schema.after || '')\"\n          :prop=\"schema.field\"\n          :fixed=\"schema.props && (schema.props.fixed || false)\"\n          :class-name=\"schema.props && (schema.props.class || '')\"\n          :align=\"schema.props && (schema.props.align || '')\"\n          :width=\"schema.width\"\n          >\n            <template slot-scope=\"scope\">\n              <pms-table-cell :renderData=\"getTableCellRender(schema, scope.row, scope.$index)\"></pms-table-cell>\n            </template>\n          </el-table-column>\n      </el-table>\n      <el-button\n          type=\"text\"\n          class=\"pms-btn-ui add-sku-btn\"\n          @click=\"switchSKuDialog(true)\"\n          :disabled=\"!canAddSku\"\n        >\n        <!-- :disabled=\"!formData.shop_id || !formData.warehouse\" -->\n          <i class=\"el-icon-circle-plus-outline add-sku-icon\"></i>\n          <span class=\"add-sku-text\">{{$t('FBSAddSku')}}</span>\n        </el-button>\n    </section>\n    <add-sku\n    :info=\"info\"\n    :skus=\"skuList\"\n    :visible=\"addDialogVisible\"\n    @close=\"switchSKuDialog(false)\"\n    @add=\"handleAddSku\"\n    />\n  </div>\n</template>\n\n<script>\nimport pmsTableCell from '@/components/BaseItem/tableItem';\nimport { getRTSTicketTemplate, massUploadSku } from '@/api/FBS/rtsInterface';\nimport { downloadBlobFile } from '@/utils/downloadFile';\nimport { downLoadFile } from '@/api/common';\nimport { getContentType } from '@/utils/constant';\nimport addSku from './addSku';\nimport moment from 'moment';\nexport default {\n  components: {\n    pmsTableCell,\n    addSku\n  },\n  props: {\n    info: {},\n    mode: {}\n  },\n  data () {\n    return {\n      addDialogVisible: false,\n      skuList: [],\n      capacity: null\n    };\n  },\n  computed: {\n    tableSchemas() {\n      const schema = [\n        {label: 'commonSkuID', field: 'sku_id'},\n        {label: 'commonSkuName', field: 'sku_name'},\n        {label: 'commonBarcode', field: 'barcode'},\n        {label: 'FBSRTSAvailableQty', field: 'available_stock', render: (schema, row, index, h) => {\n          return ['span', {class: `${row.old_available_stock ? 'rts-stock-tip-color' : ''}`}, row.available_stock];\n        }},\n        {label: 'FBSRTSRequestReturnQty', field: 'requested_return_qty', render: (schema, row, index, h) => {\n          return this.mode === 'detail' ? ['span', null, row.requested_return_qty] : ['el-input', {\n            props: {\n              type: 'number',\n              value: this.skuList[index][schema.field]\n            },\n            class: row.requested_return_qty !== null && (row.requested_return_qty <= 0 || row.requested_return_qty > row.available_stock) ? 'error-input' : '',\n            on: {input: (value) => this.modifyItem(value, index, schema, row),\n                change: (value) => this.onReturnQtyChange(value, index, schema, row)\n            }\n          }, ''];\n        }},\n        {label: 'allocatedQty', before: 'ISC ', field: 'isc_allocated_qty', isHidden: this.mode !== 'detail'},\n        {label: 'allocatedQty', before: 'WMS ', field: 'wms_allocated_qty', isHidden: this.mode !== 'detail'},\n        {label: 'FBSApprovedReturnQty', after: '(pcs)', field: 'approved_return_qty', isHidden: this.mode !== 'detail'},\n        {label: 'FBSRTSSkuOutboundQty', after: '(pcs)', field: 'actual_outbound_qty', isHidden: this.mode !== 'detail'},\n        {label: 'commonAction', width: 100, isHidden: this.mode === 'detail',\n        render: (schema, row, index, h) => {\n          return ['el-button', {\n            props: {type: 'text'},\n            on: {click: () => this.removeItem(index, row)}\n          }, 'remove'];\n        }}\n        ];\n      return schema.filter(item => !item.isHidden);\n    },\n    canAddSku() {\n      if (this.mode !== 'detail' && this.info.shop_id && this.info.whs_id && this.info.return_reason) {\n        return true;\n      }\n      return false;\n    },\n    uploadHeader() {\n      return this.$store.getters.uploadHeader;\n    }\n  },\n  watch: {\n    '$props.info': {\n      handler(cur) {\n        if (Array.isArray(cur.sku_list)) {\n          this.skuList = [...cur.sku_list];\n        }\n      },\n      immediate: true\n    }\n  },\n  created () {\n\n  },\n  mounted () {\n\n  },\n  methods: {\n    handleAddSku(list) {\n      const skuList = [];\n      list.forEach(item => {\n        skuList.push({...item, requested_return_qty: item.requested_return_qty ? item.requested_return_qty : null});\n        this.skuList.some((curSku, index) => {\n          if (curSku.sku_id === item.sku_id) {\n            this.skuList.splice(index, 1);\n          }\n        });\n      });\n      this.skuList = [...skuList, ...this.skuList]; // TODO 待guona确认\n    },\n    removeItem(index, row) {\n      this.skuList.splice(index, 1);\n    },\n    modifyItem(value, index, schema, row) {\n      this.$set(this.skuList[index], schema.field, value);\n    },\n    onReturnQtyChange(value, index, schema, row) {\n      if (value < 0) {\n        this.skuList[index].requested_return_qty = 0;\n      } else if (value > row.available_stock) {\n        this.skuList[index].requested_return_qty = row.available_stock;\n      } else {\n        this.skuList[index].requested_return_qty = Math.round(value);\n      }\n    },\n    getTemplate() {\n      const params = {shop_id: this.info.shop_id, return_reason: this.info.return_reason, whs_id: this.info.whs_id};\n      getRTSTicketTemplate(params).then(resp => {\n        if (resp.type === 'application/json') {\n          // 下载失败的出现错误提示\n          const reader = new FileReader();\n          reader.onloadend = () => {\n            // const result = JSON.parse(reader.result);\n          };\n          reader.readAsText(resp);\n        } else {\n          const fileName = `PMS_return_request_variation_selection_template.xlsx`;\n          downloadBlobFile(resp, fileName);\n        }\n      }\n      ).catch(e => {\n        this.$message.error('Download Failed');\n      });\n    },\n    handleMassUploadRequest({file}) {\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('lang_id', window.localStorage.getItem('pmsLanguage'));\n      formData.append('shop_id', this.info.shop_id);\n      formData.append('whs_id', this.info.whs_id);\n      formData.append('return_reason', this.info.return_reason);\n      massUploadSku(formData).then(res => {\n        if (res.retcode === 0) {\n          this.$message.success(this.$t('commonUploadSuccess'));\n          if (res.data.error_file_url) {\n            this.downloadErrorFile(res.data.error_file_url);\n          }\n          this.handleAddSku(res.data.sku_list);\n        } else {\n          this.$message.error(res.info || res.message);\n        }\n      }).catch(e => {\n        this.$message.error(e.info || e.message);\n      }).finally(_ => {\n        this.$refs.massUpload.clearFiles();\n      });\n    },\n    downloadErrorFile(result_link) {\n      downLoadFile({ result_link, task_id: '' })\n        .then(resp => {\n          if (resp.type === 'application/json') {\n            // 下载失败的出现错误提示\n            const reader = new FileReader();\n            reader.onloadend = () => {\n              const result = JSON.parse(reader.result);\n              if (result.retcode !== 0) {\n                this.$message.error(result.info);\n              }\n            };\n            reader.readAsText(resp);\n          } else {\n            const fileName = `error_report${moment().format('YYYYMMDDHHmmss')}.${getContentType(resp.type)}`;\n            downloadBlobFile(resp, fileName);\n          }\n        })\n        .catch(e => {\n          this.$message.error('Download Failed');\n        });\n    },\n    switchSKuDialog(isShow) {\n      this.addDialogVisible = isShow;\n    },\n    updateStock(skuList) {\n      skuList.forEach(sku => {\n        this.skuList.some((item, index) => {\n          if (item.sku_id === sku.sku_id) {\n            this.$set(this.skuList[index], 'old_available_stock', item.available_stock);\n            this.skuList[index].available_stock = sku.newest_available_stock;\n            return true;\n          } else { return false; }\n        });\n      });\n    },\n    resetData() {\n      this.skuList = this.info.sku_list;\n    },\n    clearSkuTable() {\n      this.skuList = [];\n    },\n    getTableCellRender(schema, row, index) {\n      return { schema, row, index };\n    }\n  }\n};\n</script>\n\n<style lang='scss' scoped>\n  .fbs-rts-sku-area {\n     padding-right: 12px;\n    .fbs-rts-sku-title {\n      display: flex;\n      justify-content: space-between;\n      h1 {\n        font-size: 16px;\n        color: #333;\n        line-height: 32px;\n        font-weight: 900;\n        margin-bottom: 16px;\n        .sku-info-tip-style {\n          margin-left: 16px;\n          font-weight: 400;\n          line-height: 32px;\n          font-size: 14px;\n        }\n      }\n      &/deep/ .el-dropdown {\n        .el-button {\n          height: 32px;\n          line-height: 32px;\n          padding: 0 12px;\n          &:last-child {\n            padding: 0 5px;\n          }\n        }\n      }\n    }\n    .fbs-rts-overview {\n      width: 100%;\n      background: #F7F7F7;\n      border: 1px solid #E3E3E3;\n      border-radius: 4px;\n      padding: 5px 10px;\n      margin-bottom: 16px;\n      &>li {\n        vertical-align: top;\n        display: inline-block;\n        color: #333;\n        line-height: 25px;\n        margin-right: 62px;\n        &:first-child {\n          margin-right: 15px\n        }\n        &:last-child {\n          margin-right:  0;\n        }\n        h2 {\n          font-size: 14px;\n          font-weight: 500;\n        }\n        p {\n          font-size: 14px;\n          font-weight: 400;\n        }\n      }\n    }\n    .fbs-rts-sku-table {\n      padding-bottom: 70px;\n      .add-sku-btn {\n        margin-top: 16px;\n        .add-sku-icon {\n          font-size: 18px;\n          vertical-align: middle;\n          font-weight: bold;\n        }\n        .add-sku-text {\n          font-size: 18px;\n          font-weight: bold;\n          vertical-align: middle;\n        }\n      }\n    }\n  }\n</style>\n<style lang='scss'>\n  .fbs-rts-sku-area {\n    .error-input {\n      border: 1px solid red;\n    }\n    .rts-stock-tip-color {\n      color: #EDA500;\n    }\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/rtsList/list/create/submitDialog.vue","messages":[{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":61,"column":7,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":61,"endColumn":8,"fix":{"range":[1970,1971],"text":""}},{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":98,"column":10,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":98,"endColumn":11,"fix":{"range":[2969,2970],"text":""}},{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":101,"column":10,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":101,"endColumn":11,"fix":{"range":[2990,2991],"text":""}}],"errorCount":3,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"<template>\n<div class=\"fbs-rts-submit-dialog\">\n  <el-dialog\n    :title=\"$t('commonSubmit')\"\n    :visible.sync=\"dialogVisible\"\n    width=\"623px\"\n    @close=\"$emit('close')\"\n    :show-close=\"true\">\n    <div v-loading=\"loading\">\n      <el-alert\n        v-if=\"changeList.length > 0\"\n        :title=\"$t('FBSRTSSubmitCheckTip' , {num: changeList.length})\"\n        type=\"warning\"\n        show-icon>\n      </el-alert>\n      <p class=\"fbs-rts-submit-tip\">{{changeList.length > 0 ? '' : $t('commonSubmitCheckTip')}} {{$t('FBSRTSSubmitTip')}}</p>\n      <section class=\"footer\">\n        <el-button type=\"text\" v-if=\"changeList.length > 0\" @click=\"showChangeDialog = true\">{{$t('FBSRTSSubmitStockChangeTip')}}</el-button>\n        <div class=\"buttons\">\n          <el-button @click=\"onCancel\">{{$t('commonNO')}}</el-button>\n          <el-button type=\"primary\" @click=\"onSubmit\">{{$t('commonYesSubmit')}}</el-button>\n        </div>\n      </section>\n    </div>\n  </el-dialog>\n  <el-dialog\n    v-if=\"changeList.length > 0\"\n    :title=\"$t('FBSRTSSubmitStockChangeTip')\"\n    :visible.sync=\"showChangeDialog\"\n    width=\"823px\"\n    @close=\"showChangeDialog = false\"\n    :show-close=\"true\"\n  >\n    <div class=\"pms-ui rts-stock-check\">\n      <el-table\n      :data=\"changeList\"\n      width=\"100%\"\n      >\n        <el-table-column type=\"index\" :label=\"$t('commonNo')\"></el-table-column>\n        <el-table-column\n        :label=\"schema.label\"\n        :prop=\"schema.field\"\n        v-for=\"schema in changeSchema\"\n        :key=\"schema.field\"></el-table-column>\n      </el-table>\n      <p>{{$t('commonTotalVariations')}}: <span class=\"rts-text-strong\">{{$t(changeList.length)}}</span></p>\n      <div class=\"buttons\">\n        <el-button @click=\"showChangeDialog = false\" type=\"primary\">{{$t('commonOK')}}</el-button>\n      </div>\n    </div>\n\n  </el-dialog>\n</div>\n\n</template>\n\n<script>\nimport { checkRTSTicket, submitRTSTicket } from '@/api/FBS/rtsInterface';\nexport default {\n  components: {},\n  data () {\n    return {\n      dialogVisible: false,\n      changeList: [],\n      showChangeDialog: false,\n      loading: false\n    };\n  },\n  computed: {\n    changeSchema() {\n      return [\n        {field: 'product_name', label: this.$t('commonProductName')},\n        {field: 'variation', label: this.$t('commonVariation')},\n        {field: 'fulfillment_sku_name', label: this.$t('FBSFulfillmentSkuName')},\n        {field: 'requested_return_qty', label: `${this.$t('FBSRequesteReturnQuantity')} (${this.$t('commonBefore')})`},\n        {field: 'newest_available_stock', label: `${this.$t('FBSRequesteReturnQuantity')} (${this.$t('commonNow')})`}\n      ];\n    }\n  },\n  props: {\n    visible: {},\n    params: {}\n  },\n  watch: {\n    '$props.visible': {\n      handler(cur) {\n        this.dialogVisible = cur;\n        if (cur) {\n          this.checkRTSTicket();\n        } else {\n          this.changeList = [];\n          this.showChangeDialog = false;\n        }\n      },\n      immediate: true\n    }\n  },\n  created () {\n\n  },\n  mounted () {\n\n  },\n  methods: {\n    checkRTSTicket() {\n      this.loading = true;\n      checkRTSTicket(this.params).then(res => {\n        if (res.retcode === 0) {\n          this.changeList = Array.isArray(res.data.sku_list) ? res.data.sku_list : [];\n        } else {\n          this.$message.error(res.message || res.info);\n        }\n      }).catch(e => {\n        this.$message.error(e.message || e.info);\n      }).finally(_ => {\n        this.loading = false;\n      });\n    },\n    onCancel() {\n      this.$emit('close', this.changeList);\n    },\n    onSubmit() {\n      submitRTSTicket(this.params).then(res => {\n        if (res.retcode === 0) {\n          this.$message.success(this.$t('commonSubmitSuccess'));\n          this.$emit('close', res.data.rts_id);\n        } else {\n          this.$message.error(res.message || res.info);\n        }\n      }).catch(e => {\n        this.$message.error(e.message || e.info);\n      });\n    }\n  }\n};\n</script>\n\n<style lang='scss' scoped>\n.fbs-rts-submit-dialog {\n  &/deep/ .el-dialog {\n    border-radius: 6px;\n  }\n  &/deep/ .el-dialog__header {\n    .el-dialog__title {\n      color: #333;\n      font-size: 24px;\n      font-weight: 500;\n    }\n  }\n  &/deep/ .el-dialog__body {\n    padding: 0 16px 24px;\n    .el-alert--warning {\n      margin-bottom: 16px;\n    }\n    .el-alert__title {\n      word-break: keep-all;\n    }\n  }\n  .fbs-rts-submit-tip {\n    color: #333;\n    font-size: 14px;\n    line-height: 20px;\n    word-break: keep-all;\n  }\n  .footer {\n    display: flex;\n    justify-content: space-between;\n    margin-top: 22px;\n    .buttons {\n      flex-grow: 1;\n    }\n  }\n  .buttons {\n    text-align: right;\n  }\n  .rts-stock-check {\n    margin-top: 16px;\n    p {\n      margin-top: 5px;\n      font-size: 12px;\n    }\n  }\n  .rts-text-strong {\n    color: #3D6ED1;\n    font-weight: 600;\n  }\n}\n</style>\n<style lang='scss'>\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/rtsList/list/dialog/massApprove.vue","messages":[{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":82,"column":7,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":82,"endColumn":8,"fix":{"range":[3234,3235],"text":""}},{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":146,"column":10,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":146,"endColumn":11,"fix":{"range":[4977,4978],"text":""}},{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":149,"column":10,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":149,"endColumn":11,"fix":{"range":[4998,4999],"text":""}}],"errorCount":3,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"<template>\n  <el-dialog\n  class=\"fbs-rts-mass-approve-dialog\"\n  :title=\"$t(modeInfo[mode].title)\"\n  :visible.sync=\"dialogVisible\"\n  width=\"623px\"\n  @close=\"$emit('close')\"\n  :show-close=\"true\">\n    <div class=\"fbs-rts-mass-approve-content\" v-if=\"dialogVisible\">\n      <p v-if=\"mode !== 2\">\n        <span>{{$t('commonYouHaveSelected')}}</span>\n        <el-popover trigger=\"hover\" placement=\"right-start\" popper-class=\"fbs-rts-mass-aprroved-selected-tip-style\">\n          <ul>\n            <li v-for=\"rtsItem in selected\" :key=\"rtsItem.rts_id\">\n              {{rtsItem.rts_id}}\n            </li>\n          </ul>\n          <el-button type=\"text\" slot=\"reference\">{{selected.length + ' '+ $t('FBSRTSRequests')}}</el-button>\n        </el-popover>\n        <span v-if=\"mode === 0\">({{$t('FBSRTSApproveTotalTip', {num: requestedQty})}})</span>\n        <span>,{{$t(mode === 0 ? 'commonWhichWillBeMassApproved' : 'FBSRTSRejectTip')}}.</span>\n        <span v-if=\"mode === 1\">{{$t('FBSRTSRejectReasonTip')}}</span>\n      </p>\n      <div>\n        <el-form :model=\"form\" ref=\"form\" :label-width=\"mode === 0 ? '160px' : '120px'\" :form=\"form\" class=\"mass-approve-form-style\" :rules=\"rules\">\n          <el-form-item :label=\"$t('FBSApprovedRTSdate')\" v-if=\"mode === 0\" prop=\"approved_return_date\">\n            <el-date-picker\n              value-format=\"yyyy-MM-dd\"\n              v-model=\"form.approved_return_date\"\n              :picker-options=\"ApprovalpickerOption\"\n              type=\"date\"\n              width=\"120px\"\n              :clearable=\"false\"\n              @change=\"onDateChange\"\n            ></el-date-picker>\n            <p :class=\"`capacity-tip ${requestedQty > capacity ? 'error-input' : ''}`\" v-if=\"capacity !== null\">{{$t('FBSRemainingRTSCapacity')}}: {{capacity}}</p>\n          </el-form-item >\n          <el-form-item :label=\"$t('rtsMgtDeliveryMethod')\" v-if=\"mode === 0 && isNeedMethod\" prop=\"delivery_method\">\n            <el-select v-model=\"form.delivery_method\" width=\"120px\">\n              <el-option\n              :label=\"$t(method.label)\"\n              :value=\"method.value\"\n              v-for=\"method in FBSRtsDeliveryMethod\"\n              :key=\"method.value\">\n              </el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item :label=\"$t('commonRejectReason')\" v-if=\"mode !== 0\" class=\"text-area\" :required=\"true\" prop=\"reject_reason\">\n            <el-input\n            type=\"textarea\"\n            width=\"100%\"\n            :rows=\"3\"\n            :maxlength=\"500\"\n            show-word-limit\n            v-model=\"form.reject_reason\" >\n            </el-input>\n          </el-form-item>\n        </el-form>\n      </div>\n      <div style=\"text-align: right;\" class=\"pms-ui\">\n        <el-button type=\"primary\" @click=\"onConfirm\">{{$t('commonConfirm')}}</el-button>\n      </div>\n    </div>\n  </el-dialog>\n</template>\n<script>\nimport {getWhsCapacity, confirmMassApproval, confirmMassReject} from '@/api/FBS/rtsInterface';\nimport {FBSRtsDeliveryMethod} from '@/utils/constant';\nexport default {\n  components: {},\n  props: {\n    mode: {\n      type: Number // 0: approve 1: Reject, 2: single Reject\n    },\n    visible: {\n      type: Boolean\n    },\n    selected: {\n      type: Array\n    }\n  },\n  data () {\n    return {\n      FBSRtsDeliveryMethod,\n      dialogVisible: false,\n      isNeedMethod: false,\n      capacity: null,\n      whs_id: '',\n      modeInfo: [\n        {title: 'commonMassApprove'},\n        {title: 'commonMassReject'},\n        {title: 'commonReject'}\n      ],\n      form: {},\n      requestedQty: 0 // 所选择单据的的totalRequestedQty之和\n    };\n  },\n  computed: {\n    rules() {\n      const paramsRequired = (name) => ({\n        required: true,\n        message: this.$t('commonIsRequired', {target: this.$t(name)}),\n        trigger: 'blur'});\n      if (this.mode === 0) {\n        const rule = {approved_return_date: [paramsRequired('FBSApprovedRTSdate')]};\n        if (this.isNeedMethod) {\n          this.$set(rule, 'delivery_method', paramsRequired('rtsMgtDeliveryMethod'));\n        }\n        return rule;\n      } else if (this.mode === 1 || this.mode === 2) {\n        return {\n          reject_reason: [paramsRequired('commonRejectReason')]\n        };\n      }\n      return {};\n    },\n    ApprovalpickerOption() {\n      return {\n        disabledDate(date) {\n          return +date < new Date().setHours(0, 0, 0, 0);\n        }\n      };\n    }\n  },\n  watch: {\n    '$props.visible': {\n      handler(cur) {\n        if (cur) {\n          if (this.mode === 0) {\n            this.whs_id = this.selected[0].whs_id;\n            this.selected.forEach((item) => {\n              this.requestedQty += item.requested_return_qty;\n            });\n            this.isNeedMethod = this.selected.some(item => item.delivery_method === 0);\n          }\n        } else {\n          this.form = {};\n          this.whs_id = '';\n          this.requestedQty = 0;\n          this.capacity = null;\n        }\n        this.dialogVisible = cur;\n      }\n    }\n  },\n  created () {\n\n  },\n  mounted () {\n\n  },\n  methods: {\n    onConfirm() {\n      this.$refs['form'].validate((valid) => {\n          if (valid) {\n            if (this.mode === 2) {\n              this.$emit('reject', this.form);\n              return;\n            }\n            if (this.requestedQty > this.capacity && this.mode === 0) {\n              return this.$message.error(this.$t('FBSRTSExceedingCapacityTip'));\n            } else {\n              const rts_ids = this.selected.map(item => item.rts_id);\n              const confirmFunc = this.mode === 0 ? confirmMassApproval : confirmMassReject;\n              const params = {rts_ids, ...this.form};\n              confirmFunc(params).then(res => {\n                if (res.retcode === 0) {\n                  this.$message.success(this.$t(`${this.mode === 0 ? 'commonApproveSuccessfully' : 'commonRejectSuccessfully'}`));\n                  this.$emit('close', 'confirm');\n                } else {\n                  this.$message.error(res.info || res.message);\n                }\n              }).catch(e => {\n                this.$message.error(e.info || e.message);\n              });\n            }\n          } else {\n            return false;\n          }\n      });\n    },\n    onDateChange(value) {\n      const params = {whs_id: this.whs_id, date: value};\n      getWhsCapacity(params).then(res => {\n        if (res.retcode === 0) {\n          this.capacity = res.data.remain_capacity || 0;\n          if (this.requestedQty > this.capacity) {\n            this.$message.error(this.$t('FBSRTSExceedingCapacityTip'));\n          }\n        } else {\n          this.$message.error(res.message || res.info);\n        }\n      }).catch(e => {\n        this.$message.error(e.message || e.info);\n      });\n    }\n  }\n};\n</script>\n\n<style lang='scss' scoped>\n.fbs-rts-mass-approve-dialog {\n  &/deep/ .el-dialog {\n    border-radius: 6px;\n    .el-dialog__body {\n      padding: 10px 20px 20px;\n    }\n  }\n  &/deep/ .el-dialog__header {\n    .el-dialog__title {\n      color: #333;\n      font-size: 24px;\n      font-weight: 500;\n    }\n  }\n  .fbs-rts-mass-approve-content {\n    .blue-color-text {\n      color: #3D6ED1;\n    }\n    .mass-approve-form-style {\n      margin-top: 20px;\n      &/deep/.el-form-item.el-form-item--medium {\n        line-height: 32px;\n        margin-bottom: 30px;\n        position: relative;\n        &/deep/.el-form-item__label {\n          line-height: 36px;\n        }\n        &/deep/ .el-form-item__content {\n          width: 240px;\n          line-height: 32px;\n          .el-input__inner {\n            height: 32px;\n            line-height: 32px;\n          }\n          .el-date-editor.el-input {\n            width: 240px;\n          }\n        }\n        &.text-area {\n          &/deep/.el-form-item__content {\n            width: calc(100% - 120px);\n          }\n        }\n      }\n      .capacity-tip {\n        position: absolute;\n        font-size: 12px;\n        color: #999;\n      }\n      .error-input {\n        color: red;\n      }\n    }\n    .pms-ui {\n      &> button {\n        height: 32px;\n        line-height: 32px;\n        padding: 0 10px;\n      }\n    }\n  }\n}\n</style>\n<style lang='scss'>\n.fbs-rts-mass-aprroved-selected-tip-style {\n  max-height: 200px;\n  overflow-y: scroll;\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/rtsList/list/index.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":21,"column":44,"nodeType":"VIdentifier","messageId":"deprecated","endLine":21,"endColumn":50},{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":84,"column":7,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":84,"endColumn":8,"fix":{"range":[3324,3325],"text":""}},{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":238,"column":19,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":238,"endColumn":20,"fix":{"range":[10219,10220],"text":""}},{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":401,"column":10,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":401,"endColumn":11,"fix":{"range":[15804,15805],"text":""}},{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":418,"column":10,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":418,"endColumn":11,"fix":{"range":[16453,16454],"text":""}}],"errorCount":5,"warningCount":0,"fixableErrorCount":4,"fixableWarningCount":0,"source":"<template>\n  <div class=\"fbs-rts-list-style\">\n    <section class=\"fbs-rts-tabs-area\">\n      <el-tabs class=\"fbs-rts-tabs\" v-model=\"activeTab\" @tab-click=\"handletabClick\">\n        <el-tab-pane\n          tab-position=\"bottom\"\n          v-for=\"item in tabList\"\n          :key=\"item.key\"\n          :label=\"$t(item.label)\"\n          :name=\"item.key\"\n          :value=\"item.key\"\n        >\n        </el-tab-pane>\n      </el-tabs>\n      <el-button class=\"fbs-rts-new-button\" @click=\"createRTSRequest\" v-if=\"canProcess\">\n        <i class=\"el-icon-plus\"></i>\n        <span>{{$t('commonCreateRequest')}}</span>\n      </el-button>\n    </section>\n    <section class=\"search-input-area\">\n      <el-form :model=\"searchForm\" @submit.native.prevent=\"onSearch\" >\n        <el-button v-show=\"false\" native-type=\"submit\"></el-button>\n        <el-row :gutter=\"16\">\n          <el-col v-for='item in searchSchema' :key='item.field' :span='item.width || 6' :offset='item.offset'>\n            <el-form-item :class='item.class || \"\"' :label=\"item.label\" class=\"search-input-area\">\n              <el-popover :disabled=\"!item.hasPopTip\" trigger=\"hover\" :content=\"item.tip\">\n                <pms-form-item @input=\"modifyForm\" :renderData=\"{ schema: item, form: searchForm}\" slot=\"reference\"></pms-form-item>\n              </el-popover>\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col>\n            <el-form-item class='pms-ui right-action-btn'>\n              <span v-if=\"!showAll\" class=\"more-btn\" @click=\"showAll = true\"\n              >{{ $t('commonMore') }}<i class=\"el-icon-arrow-down\"></i\n              ></span>\n              <span v-if=\"showAll\" class=\"more-btn\" @click=\"showAll = false\"\n              >{{ $t('commonLess') }}<i class=\"el-icon-arrow-up\"></i\n              ></span>\n              <div class='list-btn clear-btn' @click=\"onReset\">{{$t('commonClear')}}</div>\n              <div class='list-btn' @click='onSearch'>{{$t('commonSearch')}}</div>\n            </el-form-item>\n          </el-col>\n        </el-row>\n      </el-form>\n    </section>\n    <list\n    v-loading=\"tableLoading\"\n    :form=\"lastSearchForm\"\n    :dataList=\"listData\"\n    :schemas=\"tableSchama\"\n    :mode=\"activeTab\"\n    :permission=\"canProcess\"\n    :dataTotal=\"total\"\n    @updateData=\"onSearch\"\n    @record=\"recordSearchForm\"\n    @clear=\"clearSearchForm\"\n    ref=\"fbsRTSList\"\n    />\n    <section class=\"pagination\">\n      <el-pagination\n        :current-page=\"pageInfo.page_no\" background layout=\"sizes, prev, pager, next\" :total.sync=\"total\" :page-sizes=\"[10,20,50,100]\"\n        :page-size=\"pageInfo.count\" @current-change=\"handleChangePageIndex\" @size-change=\"handleSizeChange\"\n      ></el-pagination>\n    </section>\n  </div>\n</template>\n\n<script>\nimport moment from 'moment';\nimport pmsFormItem, { getSelectOptions } from '@/components/BaseItem/formItem';\nimport list from './rtsList';\nimport { getShopListByIdOrName, getWarehouseListByCountry } from '@/api/shopConfig';\nimport { getSkuIDOrName } from '@/api/FBS/productNomination';\nimport { FBSShopType, FbsRTSSource, FBSRtsStatus, TimeZoneByCountry, Permission } from '@/utils/constant';\nimport { getRTSList } from '@/api/FBS/rtsInterface.js';\nimport { hasPermission } from '@/utils/permission';\nexport default {\n  components: {\n    pmsFormItem,\n    list\n  },\n  data () {\n    return {\n      activeTab: 'all', // myRequest、pending\n      showAll: false,\n      tableLoading: false,\n      isShowExportHistory: false,\n      canProcess: false,\n      shopIDSelectOptions: [],\n      warehouseSelectList: [],\n      searchForm: {\n        region: this.$store.getters.country\n      },\n      lastSearchForm: {},\n      currentPageForm: {},\n      pageInfo: {\n        page_no: 1,\n        count: 10\n      },\n      listData: [],\n      total: 0\n    };\n  },\n  computed: {\n    tabList() {\n      return [\n        {key: 'all', label: 'commonAll'},\n        {key: 'pending', label: 'commonMyPendingApprovals'},\n        {key: 'myRequest', label: 'commonMyRequest'}\n      ];\n    },\n    searchSchema() {\n      const schema = [\n        { type: 'select', field: 'region', label: this.$t('commonRegion'),\n          getChildren: (h) => getSelectOptions(this.countrySelectList, h),\n          on: { change: this.regionChange }\n        },\n        {\n          type: 'select', field: 'whs_id', label: this.$t('commonWarehouse'), getChildren: (h) => getSelectOptions(this.warehouseSelectList, h),\n          props: {\n            clearable: true,\n            placeholder: this.$t('currentInventoryRegionTip')\n          },\n          on: {change: this.onSearch}\n        },\n        {\n          type: 'datePicker', field: 'requested_rts_datepicker', label: this.$t('FBSRequestedRTSdate'),\n          hasPopTip: !this.searchForm.region, tip: this.$t('currentInventoryRegionTip'), width: 12,\n          on: {change: this.onSearch},\n          props: {\n            disabled: this.searchForm.region === '',\n            type: 'daterange',\n            clearable: true\n          }\n        },\n        { field: 'shop_id', type: 'select', label: this.$t('commonShopIDOrName'),\n          render: (schema, row, h) => ['el-select', {\n            props: {\n              clearable: true, filterable: true, remote: true,\n              value: this.searchForm.shop_id, 'remote-method': this.getShopIdName\n            },\n            on: {\n              input: (value) => { this.modifyForm(schema, value); },\n              change: () => this.onSearch()\n            }\n          }, this.shopIDSelectOptions.map(item => {\n            return h('el-option', { props: { label: item.label, value: item.value }});\n          })]\n        },\n        {\n          type: 'select', field: 'status', label: this.$t('commonStatus'), isHidden: this.activeTab === 'pending',\n          props: {clearable: true}, getChildren: (h) => getSelectOptions(FBSRtsStatus, h), on: {change: this.onSearch}\n        },\n        {\n          type: 'datePicker', field: 'approved_rts_datepicker', label: this.$t('FBSApprovedRTSdate'), width: 12,\n          hasPopTip: !this.searchForm.region, tip: this.$t('currentInventoryRegionTip'), isHidden: this.activeTab === 'pending',\n          on: {change: this.onSearch},\n          props: {\n            disabled: this.searchForm.region === '',\n            type: 'daterange',\n            clearable: true\n          }\n        },\n        {\n          type: 'input', field: 'rts_id', label: this.$t('FBSRTSId')\n        },\n        {\n          type: 'select', field: 'shop_type', label: this.$t('commonCBOption'), on: {change: this.onSearch},\n          props: {clearable: true}, getChildren: (h) => getSelectOptions(FBSShopType, h)\n        },\n        {\n          type: 'select', field: 'source', label: this.$t('commonSource'), isHidden: this.activeTab === 'myRequest',\n          getChildren: (h) => getSelectOptions(FbsRTSSource, h), props: {clearable: true}, on: {change: this.onSearch}\n        },\n        {\n          type: 'input', field: 'requester', label: this.$t('commonRequester'),\n          isHidden: this.activeTab === 'myRequest'\n        }\n      ];\n      let result = schema.filter(item => !item.isHidden);\n      if (this.showAll) {\n        return result;\n      } else {\n        let count = 0;\n        result = result.filter(item => {\n          count += item.width || 6;\n          return count <= 48;\n        });\n        return result;\n      }\n    },\n    tableSchama() {\n      return [\n        {label: this.$t('FBSRTSId'), field: 'rts_id', props: {isHidden: false}},\n        {label: this.$t('commonWarehouse'), field: 'whs_id', width: 92},\n        {label: this.$t('commonShopIDOrName'), field: 'shop_id', render: (schema, row) => (row.shop_id + '/' + row.shop_name)},\n        {label: this.$t('commonCBOption'), field: 'shop_type', width: 90,\n          render: (schema, row, index, h) => ((FBSShopType.find(item => item.value === row.shop_type) || {}).label)},\n        {label: this.$t('FBSRequestedRTSdate'), field: 'requested_return_date', width: 120,\n        render: (scheam, row, index, h) => {\n          return ['div', null, [h('p', null, row.requested_return_date), h('p', null, TimeZoneByCountry[row.region] + '00')]];\n        }},\n        {label: this.$t('FBSApprovedRTSdate'), field: 'approved_return_date', props: {isHidden: true}, width: 120, render: (scheam, row, index, h) => {\n          return row.approved_return_date ? ['div', null, [h('p', null, row.approved_return_date), h('p', null, TimeZoneByCountry[row.region] + '00')]] : '-';\n        }},\n        {label: this.$t('commonStatus'), field: 'status', width: 185,\n          render: (schema, row, index, h) => {\n            const status = FBSRtsStatus.find(item => item.value === row.status) || {};\n            const role = row.status === 3 ? (': ' + row.pending_role) : '';\n            const style = `background: ${status.backColor || 'rgba(0,0,0,0)'}; color: ${status.color}`;\n            return ['span', {class: 'status-item', style}, status.label + role];\n          }\n        },\n        {label: '#SKU', field: 'requested_return_num', width: 65},\n        {label: `#SKU ${this.$t('commonApproved')}`, field: 'approved_return_num', width: 90},\n        {label: `#SKU ${this.$t('commonOutbound')}`, field: 'outbounded_return_num', width: 90},\n        {label: this.$t('FBSTotalRequestedQty'), field: 'requested_return_qty', props: {isHidden: true}},\n        {label: this.$t('FBSTotalApprovedQty'), field: 'approved_return_qty'},\n        {label: this.$t('FBSRTSTotalOutboundQty'), field: 'outbounded_return_qty', props: {isHidden: true}},\n        {label: this.$t('commonSource'), field: 'source', props: {isHidden: true},\n        render: (schema, row) => ((FbsRTSSource.find(item => item.value === row.source) || {}).label)},\n        {label: this.$t('commonRequester'), field: 'requester', props: {isHidden: true}}\n      ];\n    },\n    countryList() {\n      return [...new Set([...this.$store.getters.countryList.map(item => item.country)])];\n    },\n    countrySelectList() {\n      if (this.countryList.length === 1) {\n        return [...this.countryList.map(item => ({ label: item, value: item }))];\n      }\n      return [{ label: 'All', value: '' }, ...this.countryList.map(item => ({ label: item, value: item }))];\n    }\n  },\n  methods: {\n    handletabClick (e) {\n      if (this.$route.query.activeTab && this.$route.query.activeTab === e.name) {\n        return;\n      } else {\n      this.onReset();\n      this.onSearch();\n      this.$router.replace({ name: 'FbsRtsList', query: { activeTab: e.name }});\n      }\n    },\n    createRTSRequest() {\n      this.recordSearchForm();\n      this.$router.push(`/admin/fbs/fbsRts/list/create`);\n    },\n    modifyForm(schema, value) {\n      this.$set(this.searchForm, schema.field, value);\n      this.$emit('dataOnline', this.searchForm);\n    },\n    regionChange(region) {\n      this.$delete(this.searchForm, 'whs_id');\n      this.onSearch();\n      this.getWarehouseList(region);\n    },\n    onSearch() {\n      this.pageInfo.page_no = 1;\n      this.getList();\n      this.$refs.fbsRTSList.resetCheckedType();\n    },\n    getWarehouseList(country = '') {\n      if (country) {\n        getWarehouseListByCountry({country}).then(res => {\n          this.warehouseSelectList = (res.data.warehouses || []).map(item => ({\n              value: item.whs_id,\n              label: item.whs_id\n            }));\n        }).catch(e => {\n          this.$message.error(e.info || e.message);\n        });\n      } else {\n        this.warehouseSelectList = [];\n      }\n    },\n    getShopIdName(query) {\n      if (query !== '') {\n        const params = {\n          search_type: 0,\n          shop_id_or_name: query,\n          page_no: 1,\n          count: 20\n        };\n        getShopListByIdOrName(params).then(res => {\n          if (res && res.retcode === 0) {\n            this.shopIDSelectOptions = res.data.shop_list.filter(item => {\n              return !this.searchForm.region || (item.country === this.searchForm.region);\n            }).map(item => ({\n              value: item.shop_id,\n              label: `${item.shop_id}(${item.shop_name})`\n            }));\n          }\n        }).catch(e => { this.$message.error(e); });\n      }\n    },\n    async getSkuID(query = '', cb) {\n      if (`${query}`.trim() === '') return;\n      try {\n        const params = {\n          query: `${query}`.trim(),\n          country: this.searchForm.region || this.countryList.join('_')\n        };\n        const resp = await getSkuIDOrName(params);\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n          cb([]);\n        } else {\n          cb(resp.data.map(sku => {\n            return {\n              value: `${sku['sku_id']} / ${sku['sku_name']}`,\n              skuID: sku['sku_id']\n            };\n          })\n          );\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    onReset() {\n      if (this.$store.getters.isUniversalUser) {\n        this.searchForm = {region: ''};\n        this.getWarehouseList();\n      } else {\n        this.searchForm = {region: this.$store.getters.country};\n        this.getWarehouseList(this.searchForm.region);\n      }\n    },\n    getList() {\n      const params = {...this.pageInfo, ...this.searchForm};\n      for (const key in params) {\n        if (params[key] !== 0 && !params[key]) {\n          this.$delete(params, key);\n        }\n      }\n      if (Array.isArray(params.requested_rts_datepicker) && params.requested_rts_datepicker.length !== 0) {\n        params.requested_return_date_start = moment(params.requested_rts_datepicker[0]).format('YYYY-MM-DD');\n        params.requested_return_date_end = moment(params.requested_rts_datepicker[1]).format('YYYY-MM-DD');\n        this.$delete(params, 'requested_rts_datepicker');\n      }\n      if (Array.isArray(params.approved_rts_datepicker) && params.approved_rts_datepicker.length !== 0) {\n        params.approved_return_date_start = moment(params.approved_rts_datepicker[0]).format('YYYY-MM-DD');\n        params.approved_return_date_end = moment(params.approved_rts_datepicker[1]).format('YYYY-MM-DD');\n        this.$delete(params, 'approved_rts_datepicker');\n      }\n      if (this.activeTab === 'pending') {\n        params.is_my_pending = 1;\n      } else if (this.activeTab === 'myRequest') {\n        params.requester = this.$store.getters.email;\n      }\n      if (params.status === 0 || params.status) {\n        params.status = String(params.status);\n      }\n      this.tableLoading = true;\n      getRTSList(params).then(res => {\n        if (res.retcode === 0) {\n          this.listData = res.data.rts_list;\n          this.total = res.data.total;\n          this.lastSearchForm = params;\n          this.currentPageForm = {pageInfo: this.pageInfo, form: this.searchForm};\n        } else {\n          this.listData = [];\n          this.$message.error(res.message || res.info);\n        }\n      }).catch(e => {\n        this.$message.error(e.message || e.info);\n      }).finally(_ => {\n        this.tableLoading = false;\n      });\n    },\n    handleSizeChange(value) {\n      this.pageInfo.count = value;\n      this.pageInfo.page_no = Math.ceil(this.total / value) < this.pageInfo.page_no ? Math.ceil(this.total / value) : this.pageInfo.page_no;\n      this.getList();\n    },\n    handleChangePageIndex(value) {\n      this.pageInfo.page_no = value;\n      this.getList();\n    },\n    recordSearchForm() {\n      this.$store.commit('setActiveTab', { module: 'FBSRTSLIST'});\n      this.$store.commit('setSearchForm', {\n        module: 'FBSRTSLIST',\n        form: {...this.currentPageForm},\n        field: 'fbsRts'\n      });\n    },\n    clearSearchForm() {\n      this.$store.commit('setActiveTab', { module: 'FBSRTSLIST'});\n      this.$store.commit('setSearchForm', {\n        module: 'FBSRTSLIST',\n        value: null,\n        form: null,\n        field: 'fbsRts'\n      });\n    }\n  },\n  created () {\n    this.onReset();\n    this.canProcess = hasPermission(Permission.FBS_RETURN_REQUEST_EDIT);\n    if (this.$route.query.activeTab) {\n      this.activeTab = this.$route.query.activeTab;\n    } else {\n      this.$router.replace({ path: '/admin/fbs/fbsRts/list', query: { activeTab: 'all' }});\n    }\n    const lastSearchForm = {...this.$store.getters.searchForm['FBSRTSLIST']} || {};\n    if (lastSearchForm.fbsRts) {\n      this.$delete(lastSearchForm.fbsRts, 'csrf_token');\n      this.pageInfo = lastSearchForm.fbsRts.pageInfo;\n      this.searchForm = lastSearchForm.fbsRts.form;\n    }\n    this.getList();\n    this.clearSearchForm();\n  },\n  mounted () {\n  },\n  watch: {}\n};\n</script>\n\n<style lang='scss'>\n.fbs-rts-list-style {\n  .search-input-area {\n    border-bottom: 1px solid #E3E3E3;\n    margin-bottom: 24px;\n  }\n  .search-input-area.el-form-item--medium {\n    display: flex;\n    border:1px solid #E2E6EC;\n    overflow: hidden;\n    border-radius:4px;\n    margin-bottom: 16px;\n    & * {\n      height: 32px;\n      line-height: 32px;\n    }\n    .el-form-item__label{\n      color: #333333;\n      line-height: 32px;\n      text-align: center;\n      flex-grow: 0;\n      flex-shrink: 0;\n      padding: 0 8px;\n      background-color:#FAFBFD;\n      border-right:1px solid #E2E6EC;\n    }\n    .el-form-item__content{\n      flex-grow: 1;\n      flex-shrink: 1;\n      input::-webkit-outer-spin-button,input::-webkit-inner-spin-button {\n        -webkit-appearance: none;\n      }\n      input[type=\"number\"]{\n        -moz-appearance: textfield;\n      }\n      .el-date-editor--daterange.el-input__inner {\n        width: 100%;\n        border: none;\n      }\n    }\n    .el-input--medium{\n      .el-input__inner{\n        width: 100%;\n        border:none;\n      }\n    }\n    .range-input-item{\n      display: flex;\n      .el-input--medium{\n        flex-grow: 1;\n      }\n      &>span{\n        flex-grow: 0;\n        color:#ECF0F4;\n        border-left:1px solid #ECF0F4;\n        border-right:1px solid #ECF0F4;\n        padding:0 1px;\n      }\n    }\n  }\n  .fbs-rts-tabs {\n    .el-tabs__item {\n      display: inline-block;\n      height: 35px;\n      margin-bottom: 5px;\n      border-bottom: 2px solid transparent;\n      line-height: 35px;\n      font-size: 18px;\n      font-weight: 400;\n      color: #575757;\n      &.is-active {\n        color: #3d6ed1;\n      }\n      &.is-top:nth-child(2) {\n      padding-left: 20px;\n      }\n    }\n    .el-tabs__nav-prev {\n      left: 5px;\n      line-height: 40px;\n    }\n    .el-tabs__nav-next {\n      right: 5px;\n      line-height: 40px;\n    }\n  }\n}\n</style>\n<style lang='scss' scoped>\n.fbs-rts-list-style {\n  padding: 0 16px;\n  .fbs-rts-tabs-area {\n    position: relative;\n    .fbs-rts-new-button {\n      height: 32px;\n      line-height: 32px;\n      padding: 0 10px;\n      position: absolute;\n      top: 0;\n      right: 0;\n      color: white;\n      background-color: #3D6ED1;\n      border: none;\n    }\n  }\n  .right-action-btn {\n    text-align: right;\n    .more-btn {\n      cursor: pointer;\n      color: #3d6ed1;\n      margin-right: 12px;\n    }\n  }\n  .pagination {\n    margin-top: 26px;\n    text-align: center;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/rtsList/list/rtsList.vue","messages":[{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":122,"column":22,"nodeType":"ThisExpression","endLine":122,"endColumn":26},{"ruleId":"vue/require-valid-default-prop","severity":2,"message":"Type of the default value for 'schemas' prop must be a function.","line":189,"column":16,"nodeType":"ArrayExpression","endLine":189,"endColumn":18},{"ruleId":"vue/require-valid-default-prop","severity":2,"message":"Type of the default value for 'dataList' prop must be a function.","line":193,"column":16,"nodeType":"ArrayExpression","endLine":193,"endColumn":18}],"errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"fbs-rts-list-table-area\">\n    <section class=\"pms-ui mass-operation-area\">\n      <el-popover\n      v-if=\"mode === 'pending' && permission\"\n      trigger=\"hover\"\n      :disabled=\"checkedType !== 'all' && isSameWarehouse\"\n      :content=\"checkedRows.length < 1 ? $t('commonHasNotSelectTip') : (checkedType === 'all' ? $t('FBSRTSMassOpreationSelectedTip') : $t('FBSRTSMassApproveFilterTip'))\">\n        <span slot=\"reference\">\n          <el-button :disabled=\"checkedType === 'all' || !isSameWarehouse\"  class=\"mass-approve\" @click=\"switchMassApprove(true,0)\" >{{$t('commonMassApprove')}}</el-button>\n        </span>\n      </el-popover>\n      <el-popover\n      v-if=\"mode === 'pending' && permission\"\n      trigger=\"hover\"\n      :disabled=\"checkedType !== 'all' && checkedRows.length > 0\"\n      :content=\"checkedRows.length < 1 ? $t('commonHasNotSelectTip') : $t('FBSRTSMassOpreationSelectedTip')\">\n        <span slot=\"reference\"><el-button   class=\"mass-reject\" @click=\"switchMassApprove(true,1)\" :disabled=\"checkedType === 'all' || checkedRows.length < 1\">{{$t('commonMassReject')}}</el-button></span>\n      </el-popover>\n        <el-dropdown split-button @command=\"onExportContract\" class=\"export-group\">\n        {{ $t('commonExport') }}\n        <el-dropdown-menu slot=\"dropdown\">\n          <el-dropdown-item command=\"excel\">{{ $t('commonExportExcel') }}</el-dropdown-item>\n          <el-dropdown-item command=\"pdf\">{{ $t('commonExportPDF') }}</el-dropdown-item>\n        </el-dropdown-menu>\n      </el-dropdown>\n      <el-button @click=\"handleHistoryDialog(true, '501')\">{{ $t('commonExportHistory') }}</el-button>\n        <el-dropdown v-if=\"mode === 'myRequest' && permission\" split-button @command=\"getTemplate\" type=\"primary\" class=\"upload-group\" click=\"upl\">\n          <el-upload\n          :show-file-list=\"false\"\n          class=\"upload-button\"\n          action=\"/api\"\n          :http-request=\"handleMassUploadRequest\"\n          accept=\".xls, .xlsx\"\n          ref='massUpload'\n          :headers=\"uploadHeader\"\n          :limit=\"1\"\n          :with-credentials=\"true\">\n            <span>{{ $t('commonMassUpload') }}</span>\n          </el-upload>\n          <el-dropdown-menu slot=\"dropdown\">\n            <el-dropdown-item command=\"template\">{{ $t('commonTemplate') }}</el-dropdown-item>\n          </el-dropdown-menu>\n        </el-dropdown>\n      <el-button v-if=\"mode === 'myRequest' && permission\" @click=\"handleHistoryDialog(true, '502')\">{{ $t('commonUploadHistory') }}</el-button>\n    </section>\n    <el-checkbox-group v-model=\"checkedRows\" class=\"pms-ui\">\n      <el-table\n      :data=\"dataList\"\n      width=\"100%\"\n      @row-click=\"rowClick\"\n      >\n        <el-table-column column-key=\"action\" width=\"60px\" align=\"center\" fixed=\"left\">\n          <template #header>\n            <el-dropdown @click=\"resetCheckedType\" placement=\"bottom\" split-button trigger=\"click\" class=\"select-page-dropdown\" @command=\"changeSelectPageType\">\n              <span :class=\"`el-checkbox__input ${checkedStyle}`\">\n                <span :class=\"`el-checkbox__inner ${checkedStyle}`\"></span>\n              </span>\n              <el-dropdown-menu class=\"options-field-menu\" slot=\"dropdown\">\n                <el-dropdown-item command=\"current\">Current Page</el-dropdown-item>\n                <el-dropdown-item command=\"all\">All Pages</el-dropdown-item>\n              </el-dropdown-menu>\n            </el-dropdown>\n          </template>\n          <template slot-scope=\"scope\">\n            <el-checkbox :disabled=\"checkedType === 'all'\" @change=\"singleItemSelectChange(scope.row.rts_id, $event)\"\n            :label=\"scope.row.rts_id\" :key=\"scope.row.rts_id\"\n            >\n            {{''}}</el-checkbox>\n          </template>\n        </el-table-column>\n        <el-table-column\n        v-for=\"schema in tableSchemas\"\n        :key=\"schema.field\"\n        :label=\"schema.label\"\n        :prop=\"schema.field\"\n        :fixed=\"schema.props && (schema.props.fixed || false)\"\n        :class-name=\"schema.props && (schema.props.class || '')\"\n        :align=\"schema.props && (schema.props.align || '')\"\n        :width=\"schema.width\"\n        >\n          <template slot-scope=\"scope\">\n            <pms-table-cell :renderData=\"getTableCellRender(schema, scope.row, scope.$index)\"></pms-table-cell>\n          </template>\n        </el-table-column>\n        <el-table-column fixed=\"right\" width=\"60\" :label=\"$t('commonAction')\">\n          <template slot-scope=\"scope\">\n            <el-button type=\"text\" @click=\"goDetail(scope.row)\">{{$t('commonDetail')}}</el-button>\n          </template>\n        </el-table-column>\n        <el-table-column\n        width=\"30\"\n        fixed=\"right\"\n        class-name=\"fbs-table-setting-column\"\n        >\n          <template #header>\n            <el-popover\n            placement=\"bottom\"\n            width=\"200\"\n            trigger=\"hover\"\n            transition\n            popper-class=\"inventory-list-config-setting-area\"\n            :visible-arrow=\"false\"\n            >\n              <div class=\"pms-ui\" @mouseleave=\"onSaveConfigChange\">\n                <p>{{$t('commonMoreColumn') + '(' + schemas.length +')'}}</p>\n                <el-checkbox-group v-model=\"checkConfigList\" size=\"medium\" @change=\"onOptionConfigChange\">\n                  <el-checkbox :label=\"item.field\" v-for=\"item in tableConfigList\" :key=\"item.field\">\n                    {{item.label}}\n                  </el-checkbox>\n                </el-checkbox-group>\n              </div>\n              <div slot=\"reference\" class=\"inventory-list-config-setting-button\"><svg-icon icon-class=\"rule\" ></svg-icon></div>\n            </el-popover>\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-checkbox-group>\n    <export-history-dialog\n    :taskType=\"taskType\"\n    :needErrorFile=\"true\"\n    :isUplodHistory=\"this.taskType === '502'\"\n    :visible=\"isShowExportHistory\"\n    @close=\"handleHistoryDialog(false)\"></export-history-dialog>\n    <mass-approve\n    :visible=\"isApproveVisible\"\n    :mode=\"approveMode\"\n    :selected=\"checkedRowsObj\"\n    :total=\"total\"\n    @close=\"switchMassApprove(false, $event)\"\n    />\n  </div>\n</template>\n<script>\nconst ModuleKey = 'FBSRTSOPTIONS';\nimport {massExportExcel, massExportPDF, massCreateRTSTicket} from '@/api/FBS/rtsInterface';\nimport massApprove from './dialog/massApprove';\nimport ExportHistoryDialog from '@/components/ApproveList/exportHistoryDialog';\nconst PMSTableCell = {\n  props: {\n    renderData: {\n      required: true\n    }\n  },\n  render(h) {\n    const { schema, row, index } = this.$props.renderData;\n    if (typeof schema.render === 'function') {\n      const data = schema.render(schema, row, index, h);\n      const renderElement = Array.isArray(data) ? data : ['span', data];\n      return h(...renderElement);\n    } else if (schema.type === 'enum') {\n      const options = schema.options || [];\n      const option =\n        options.find((item) => item.value === row[schema.field]) || {};\n      return h('span', option.label || '');\n    } else {\n      return h('span', row[schema.field]);\n    }\n  }\n};\nexport default {\n  components: {\n    'pms-table-cell': PMSTableCell,\n    massApprove,\n    ExportHistoryDialog\n  },\n  data() {\n    return {\n      checkedType: '',\n      isConfigChange: false,\n      taskType: '501',\n      isShowExportHistory: false,\n      isApproveVisible: false,\n      approveMode: 0, // 0: approve 1: Reject\n      checkedRows: [], // 选中的row.rts_id\n      checkedRowsObj: [],\n      isUplodHistory: false,\n      loading: false,\n      alwaySchemas: [], // fixed 常驻属性，不可隐藏\n      checkConfigList: [], // 选中显示的属性\n      tableConfigList: [], // 除去常驻属性后的所有属性\n      total: 0\n    };\n  },\n  props: {\n    schemas: {\n      type: Array,\n      // required: true,\n      default: []\n    },\n    dataList: {\n      type: Array,\n      default: []\n    },\n    dataTotal: {},\n    form: {},\n    mode: {\n      type: String\n    },\n    permission: {\n      tyoe: Boolean\n    }\n  },\n  computed: {\n    tableSchemas() {\n      const res = this.schemas.filter(item => this.checkConfigList.includes(item.field));\n      return this.alwaySchemas.concat(res);\n    },\n    uploadHeader() {\n      return this.$store.getters.uploadHeader;\n    },\n    tableHiddenSchemas() {\n      return this.schemaCopy.filter(schema => (schema.props && schema.props.isHidden));\n    },\n    checkedStyle() {\n      if (this.checkedType === 'all') {\n        return 'is-checked';\n      } else if (Array.isArray(this.checkedRows) && this.checkedRows.length > 0) {\n        if (this.checkedRows.length === this.dataTotal) {\n          return 'is-checked';\n        }\n        return 'is-indeterminate';\n      } else {\n        return '';\n      }\n    },\n    isSameWarehouse() {\n      if (this.checkedRows.length > 0) {\n        return !this.checkedRowsObj.some(item => item.whs_id !== this.checkedRowsObj[0].whs_id);\n      }\n      return false;\n    }\n  },\n  methods: {\n    onSaveConfigChange() {\n      if (!this.isConfigChange) {\n        return;\n      } else {\n        // record list's field by user;\n        const userID = this.$store.getters.userID;\n        const params = {\n          business_key: `${ModuleKey}-${this.mode}-${userID}`,\n          business_value: JSON.stringify(this.checkConfigList)\n        };\n        this.$store.dispatch('setUserSetting', [params]).then(_ => {\n          this.isConfigChange = false;\n        }).catch(() => {\n          this.$message.error('Set user setting failed!');\n        });\n      }\n    },\n    onOptionConfigChange() {\n      this.isConfigChange = true;\n    },\n    getTableCellRender(schema, row, index) {\n      return { schema, row, index };\n    },\n    changeSelectPageType(type) {\n      if (this.dataList.length === 0) {\n        return this.$message.error(this.$t('commonCurrentPageNoDataTip'));\n      }\n      this.checkedType = type;\n      this.checkedRows = [];\n      this.checkedRowsObj = [];\n      this.dataList.forEach(item => {\n        this.checkedRowsObj.push(item);\n        this.checkedRows.push(item.rts_id);\n      });\n    },\n    singleItemSelectChange(value, status) {\n      if (!status) {\n        this.checkedRowsObj.some((item, index) => {\n          if (item.rts_id === value) {\n            this.checkedRowsObj.splice(index, 1);\n            return true;\n          }\n        });\n      } else {\n        const addItem = this.dataList.find(item => item.rts_id === value);\n        this.checkedRowsObj.push(addItem);\n      }\n    },\n    resetCheckedType() {\n      this.checkedType = '';\n      this.checkedRows = [];\n      this.checkedRowsObj = [];\n    },\n    switchMassApprove(isShow, mode) {\n      this.isApproveVisible = isShow;\n      if (this.checkedRows.length === 0) {\n        return this.$message.error(this.$t('commonHasNotSelectTip'));\n      }\n      if (isShow) {\n        const whs = this.checkedRows[0].whs_id;\n        if (this.checkedRows.some(item => item.whs_id !== whs)) {\n          return this.$message.error(this.$t('FBSRTSSelectedWHSErrorTip'));\n        }\n        this.approveMode = mode;\n      } else {\n        if (mode === 'confirm') {\n          this.$emit('updateData');\n        }\n      }\n    },\n    goDetail(row = {}) {\n      this.$emit('record');\n      this.$router.push(`/admin/fbs/fbsRts/list/detail/${row.rts_id}`);\n    },\n\n    rowClick(row, column, event) {\n      this.$emit('rowClick', {row, column});\n    },\n\n    async onExportContract(type) {\n      if (this.checkedRows.length === 0) {\n        return this.$message.error('Please select some lines first!');\n      }\n      let params = {};\n      if (this.checkedType === 'all') {\n        params = {...this.form};\n        this.$delete(params, 'count');\n        this.$delete(params, 'page_no');\n      } else {\n        params.rts_ids = this.checkedRows;\n      }\n      params.lang_id = localStorage.getItem('pmsLanguage');\n      const exportFunc = type === 'excel' ? massExportExcel : massExportPDF;\n      try {\n        const {\n          retcode,\n          info,\n          message\n        } = await exportFunc(params);\n        if (retcode === 0) {\n          this.$message.success(this.$t('commonAsyncExportSuccessTips'));\n        } else {\n          this.$message.error(info || message);\n        }\n      } catch (e) {\n        this.$message.error(e.info || e.message);\n      }\n    },\n\n    getTemplate(type) {\n      if (type === 'template') {\n        window.open(`/admin/data/FBSReturnRequestMassTemplate.xlsx`);\n      }\n    },\n\n    handleMassUploadRequest({file}) {\n      const formData = new FormData();\n      formData.append('file', file);\n      massCreateRTSTicket(formData).then(res => {\n        if (res.retcode === 0) {\n          this.$message.success(this.$t('commonAsyncUploadSuccessNewTips'));\n        } else {\n          this.$message.error(res.info || res.message);\n        }\n      }).catch(e => {\n        this.$message.error(e.info || e.message);\n      }).finally(_ => {\n        this.$refs.massUpload.clearFiles();\n      });\n    },\n    handleHistoryDialog(isShow, taskType) {\n      this.isShowExportHistory = isShow;\n      if (isShow) {\n        this.taskType = taskType;\n      }\n    },\n    initListOption() {\n      this.checkConfigList = [];\n      const res = this.tableConfigList.filter(schema => schema.props === undefined || schema.props.isHidden === undefined);\n      res.forEach(element => { return this.checkConfigList.push(element.field); });\n    },\n    getUserSetting() {\n      const userID = this.$store.getters.userID;\n      const key = `${ModuleKey}-${this.mode}-${userID}`;\n      this.$store.dispatch('getUserSetting', [key]).then(data => {\n        const settings = (data || {})[key];\n        if (settings && typeof settings === 'string') {\n           const list = JSON.parse(settings);\n           if (Array.isArray(list) && list.length) {\n              this.checkConfigList = list;\n           }\n          // 获取到的userSetting来配置table显示的列\n          // this.showTableSchemaList = (Array.isArray(this.userSetting) && this.userSetting.length) ? this.userSetting : DefaultDisplayList;\n        } else {\n          this.initListOption();\n        }\n        this.isConfigChange = false;\n      }).catch(() => {\n        this.$message.error('Get user setting failed!');\n        this.initListOption();\n      });\n    }\n  },\n  created() {\n    this.alwaySchemas = this.schemas.filter(item => (item.props && item.props.isHidden === false));\n    this.tableConfigList = this.schemas.filter(schema => !(schema.props && schema.props.isHidden === false));\n    this.initListOption();\n    this.getUserSetting();\n  },\n  watch: {\n    '$props.mode': {\n      handler(cur) {\n        this.getUserSetting();\n      }\n    },\n    '$props.dataList': {\n      handler(cur) {\n        if (this.checkedType === 'all') {\n          this.changeSelectPageType('all');\n        }\n      }\n    }\n\n  }\n};\n</script>\n<style lang=\"scss\">\n  .fbs-rts-list-table-area {\n    .status-item {\n      font-size: 12px;\n      padding: 4px 6px;\n      word-break: keep-all;\n      border-radius: 2px;\n    }\n    .el-button-group {\n      padding: 0;\n    }\n    .select-page-dropdown {\n      padding: 0;\n      margin-left: 0;\n      .el-button {\n        border: none;\n        background: unset;\n        display: inline-block;\n        padding: 10px 0 10px 3px;\n        &:nth-child(1) {\n          width: 20px;\n          padding: 0 10px 0 5px;\n        }\n        &::before {\n          width: 0;\n        }\n      }\n    }\n  }\n.pms-ui .el-table th.fbs-table-setting-column {\n  background-color: #E8E9EC;\n  padding: 0;\n  .cell {\n    padding: 0;\n    text-align: center;\n  }\n  .inventory-list-config-setting-button {\n    padding:0;\n  }\n}\n.inventory-list-config-setting-area {\n  p {\n    line-height: 32px;\n    padding-left: 12px;\n    background-color: #E8E9EC;\n    border-bottom: 1px solid #ccc;\n  }\n  .el-checkbox-group {\n    max-height: 240px;\n    overflow-y: scroll;\n    overflow-x: hidden ;\n    padding-left:12px;\n    .el-checkbox{\n      line-height: 30px;\n      display: block;\n    }\n  }\n  padding: 0px 4px 4px 4px;\n  background-color: #E8E9EC;\n}\n</style>\n<style lang=\"scss\" scoped>\n.mass-operation-area {\n  margin-bottom: 16px;\n  &>*, &/deep/.el-button-group>*, &>span>span>* {\n    &.el-button {\n      height: 32px;\n      line-height: 32px;\n      padding: 0 15px;\n      color: #3d6ed1;\n      border: 1px solid #3d6ed1;\n      &.el-dropdown__caret-button {\n        padding: 0 3px;\n      }\n      &.el-button--primary {\n        color: white;\n      }\n      &.mass-approve {\n        border: #1CC461 solid 1px;\n        color: #1CC461;\n      }\n      &.mass-reject {\n        border: 1px solid #EF4A4A;\n        color: #EF4A4A;\n        margin-right: 10px;\n      }\n      &.is-disabled {\n        opacity: 0.5;\n      }\n    }\n  }\n  .upload-group {\n    margin-left: 10px;\n  }\n  &>*.el-button {\n    &.is-disabled {\n      opacity: 0.5;\n    }\n    &:last-child {\n      margin-left: 10px;\n    }\n  }\n}\n\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/rtsList/settings/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/rules/approvalFlow/actionlog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/rules/approvalFlow/constant.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/rules/approvalFlow/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/rules/approvalFlow/whitelist.vue","messages":[{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"CBOption\" is not in camelCase.","line":52,"column":5,"nodeType":"Property","endLine":54,"endColumn":6}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-dialog\n    :visible.sync=\"dialogVisible\"\n    width=\"620px\"\n    lock-scroll\n    custom-class=\"pms-dialog\"\n    :title=\"type === 'shop' ? $t('FBSShopApprovalWhitelist') : $t('FBSCategoryApprovalWhitelist')\"\n    @close=\"onClose\"\n  >\n    <section v-loading=\"loading\" class=\"log-item-wrapper\">\n       <el-table class=\"pms-log-table log-table\" :data=\"tableList\">\n          <el-table-column :label=\"$t('commonNo')\">\n            <template slot-scope=\"scope\">\n              {{scope.$index + 1}}\n            </template>\n          </el-table-column>\n          <el-table-column :label=\"type === 'shop' ? $t('commonShopID') : $t('commonCategoryID')\" :prop=\"type === 'shop' ? 'shop_id' : 'category_id'\"></el-table-column>\n          <el-table-column :label=\"type === 'shop' ? $t('commonShopName'): $t('commonCategoryName')\" :prop=\"type === 'shop' ? 'shop_name': 'category_name'\"></el-table-column>\n        </el-table>\n        <p class=\"total-tip\">{{$t('FBSTotalWhiteList') + `: ${total}`}}</p>\n    </section>\n    <section slot=\"footer\">\n       <el-pagination\n        small\n        layout=\"slot, prev, next\"\n        background\n        :total=\"total\"\n        :page-size=\"pager.count\"\n        @current-change=\"handleCurrentChange\"\n        class=\"pms-ele-ui pms-pagination pms-float-left\"\n      >\n        <span class=\"pagination-info\">{{$t('commonPagination', { firstItem, lastItem, total})}}</span>\n      </el-pagination>\n      <el-button class=\"list-btn\" @click=\"onClose\">{{$t('commonClose')}}</el-button>\n    </section>\n  </el-dialog>\n</template>\n\n<script>\nimport { getApprovalFlowCategoryWhitelist, getApprovalFlowShopWhitelist } from '@/api/FBS/rules';\nimport moment from 'moment';\n\nexport default {\n  props: {\n    type: {\n      type: String,\n      default: 'shop'\n    },\n    country: {\n      required: true\n    },\n    CBOption: {\n      required: true\n    },\n    visible: {\n      type: Boolean,\n      required: true,\n      default: false\n    }\n  },\n  data() {\n    return {\n      total: 0,\n      pager: {\n        count: 10,\n        page_no: 1\n      },\n      dialogVisible: false,\n      tableList: [],\n      loading: false\n    };\n  },\n  watch: {\n    visible(value) {\n      this.dialogVisible = value;\n      if (value) {\n        this.getWhiteList();\n      } else {\n        this.pager = {\n          count: 10,\n          page_no: 1\n        };\n        this.total = 0;\n        this.tableList = [];\n      }\n    }\n  },\n  computed: {\n    firstItem() {\n      return this.pager.count * (this.pager.page_no - 1) + 1;\n    },\n    lastItem() {\n      return (\n        this.pager.count * (this.pager.page_no - 1) + this.tableList.length\n      );\n    }\n  },\n  methods: {\n    moment,\n    handleCurrentChange(index) {\n      this.pager.page_no = index;\n      this.getWhiteList();\n    },\n    async getWhiteList() {\n      try {\n        let func = () => Promise.resolve();\n        if (this.type === 'shop') {\n          func = getApprovalFlowShopWhitelist;\n        } else {\n          func = getApprovalFlowCategoryWhitelist;\n        }\n        this.loading = true;\n        const params = {\n          country: this.country,\n          cb_option: this.CBOption,\n          ...this.pager\n        };\n        const res = await func(params);\n        if (res && res.retcode === 0) {\n          this.tableList = res.data.list || [];\n          this.total = res.data.total || 0;\n        } else {\n          this.$message({ type: 'error', message: res.info || res.message });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loading = false;\n      }\n    },\n    onClose() {\n      this.$emit('close');\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n@import \"~@/styles/variables.scss\";\n.log-item-wrapper {\n  max-height: 500px;\n  overflow: auto;\n  .log-item {\n    font-size: 14px;\n    line-height: 1.2em;\n    padding: 12px 0px;\n    border-top: 1px solid $grey;\n    &:first-child {\n      margin-top: 0;\n      border-top: 0;\n    }\n    .icon-arrow {\n      font-size: 18px;\n      color: $blue;\n      transition: all 0.3s;\n      cursor: pointer;\n      &.is-expanded {\n        transform: rotate(180deg);\n      }\n    }\n  }\n  .log-item-time {\n    margin-left: 4px;\n  }\n  .log-table {\n    margin: 8px 0;\n  }\n  .shop-title {\n    font-size: 14px;\n    line-height: 1.2em;\n    margin-bottom: 8px;\n  }\n  .log-content-wrapper {\n    max-height: 400px;\n    overflow: auto;\n    border: 1px solid $grey;\n    border-left: 0;\n    border-right: 0;\n  }\n  .clearfix-block {\n    overflow: hidden;\n    width: 100%;\n  }\n}\n</style>\n<style lang=\"scss\">\n@import \"~@/styles/common.scss\"; // ~@ = @ = 'src' webpack alias path\n.pms-dialog {\n  .el-dialog__body {\n    padding: 8px 24px 16px;\n  }\n}\n.pms-log-table {\n  &.el-table {\n    .el-table__header-wrapper {\n      th {\n        background-color: #f5f5f5;\n        font-size: 12px;\n        line-height: 1.2em;\n        font-weight: normal;\n        padding: 4px 0;\n        .cell {\n          word-break: break-word;\n        }\n      }\n    }\n    .el-table__body {\n      td {\n        line-height: 1.2em;\n        padding: 4px 0;\n        .cell {\n          font-size: 14px;\n          word-break: break-word;\n        }\n      }\n    }\n  }\n  .no-data {\n    height: 50px;\n    line-height: 50px;\n    text-align: center;\n    color: #757575;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/rules/layout.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/sellerAndShop/components/sellerInfoBlock.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/sellerAndShop/constants.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/sellerAndShop/layout.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/sellerAndShop/sellerList/detail/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/sellerAndShop/sellerList/detail/versionDialog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/sellerAndShop/sellerList/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/sellerAndShop/sellerList/list/index.vue","messages":[{"ruleId":"vue/no-unused-components","severity":2,"message":"The \"ListView\" component has been registered but not used.","line":124,"column":28,"nodeType":"Property","endLine":124,"endColumn":36}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"pms-new-ui\">\n    <LayoutList\n      activeTab=\"ALL\"\n      :tabs=\"tabs\"\n      @search=\"onResetPageNoSearch\"\n    >\n      <el-button\n        v-if=\"canCreate\"\n        slot=\"tabs-button\"\n        icon=\"el-icon-plus\"\n        @click=\"handleCreateRequest\"\n      >\n        {{$t('FBSNewSellerRequest')}}\n      </el-button>\n      <section slot=\"content\">\n        <SearchForm\n          :searchForm=\"searchForm\"\n          @onSearch=\"onResetPageNoSearch\"\n        />\n        <div class=\"search-actions\">\n          <el-button class=\"white-blue\" @click=\"onResetSearchForm\">{{$t('commonClear')}}</el-button>\n          <el-button @click=\"onResetPageNoSearch\">{{$t('commonSearch')}}</el-button>\n        </div>\n        <div class=\"seller-table\">\n          <div v-if=\"true\" class=\"table-actions\">\n            <el-button class=\"white-blue\" @click=\"handleExport\">{{$t('commonExport')}}</el-button>\n          </div>\n          <el-table\n            :data=\"tableData\"\n            v-loading=\"loading\"\n          >\n            <CheckAllColumn\n              :config=\"{ fixed: 'left'}\"\n              :tableList=\"tableData\"\n              @setSelection=\"onSetSelection\"\n              @setType=\"onSetCheckType\"\n              @onResetCheckType=\"onResetCheckType\"\n            />\n            <el-table-column prop=\"seller_id\" :label=\"$t('commonSBSVendorID')\" />\n            <el-table-column prop=\"seller_name\" :label=\"$t('commonSellerName')\">\n              <template slot-scope=\"scope\">\n                <span>{{`${scope.row.country}_${scope.row.seller_name}`}}</span>\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"country\" :label=\"$t('commonRegion')\" />\n            <el-table-column :label=\"$t('commonShopID')\" width=\"300px\">\n              <template slot-scope=\"scope\">\n                <div v-if=\"!isEmpty(scope.row.shops)\" class=\"shop-id-container\">\n                  <div v-for=\"item in scope.row.shops\" :key=\"item.shop_id\" class=\"shop-item\">\n                    {{`${item.shop_id} (${getShopStatusText(item.status)})`}}\n                  </div>\n                </div>\n                <span v-else>{{'N/A'}}</span>\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"main_contact_email\" :label=\"$t('commonMainContactEmail')\" />\n            <el-table-column prop=\"main_contact_phone\" :label=\"$t('commonMainContactPhone')\" />\n            <el-table-column :label=\"$t('commonAction')\">\n              <template slot-scope=\"scope\">\n                <el-button type=\"text\" class=\"blue\" @click=\"onDetailClick(scope.row)\" :disabled=\"!canViewDetail\">\n                  {{$t('commonDetail')}}\n                </el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n          <el-pagination\n            class=\"pagination\"\n            layout=\"sizes, prev, pager, next\"\n            :current-page=\"pager.page_no\"\n            :page-sizes=\"[10, 20, 50, 100]\"\n            :total.sync=\"total\"\n            :page-size=\"pager.page_size\"\n            @size-change=\"handleSizeChange\"\n            @current-change=\"handleChangePage\"\n          />\n        </div>\n      </section>\n    </LayoutList>\n  </div>\n</template>\n\n<script>\nimport moment from 'moment';\nimport {get, isNil, pickBy, isEmpty} from 'lodash';\nimport {apiGetSellers, postExportSellers, postExportAllSellers} from '@/api/FBS/sellerAndShop';\nimport LayoutList from '@/components/layout/list';\nimport ListView from '@/components/ApproveList/list';\nimport CheckAllColumn from '@/components/common/checkAllColumn';\nimport {downloadBlobFile} from '@/utils/downloadFile';\nimport {hasPermission, hasOneOfPermissions} from '@/utils/permission';\nimport {Permission} from '@/utils/constant';\nimport {getSellerRequestPageUrl, getSellerPageUrl, getShopStatusText} from '@/views/FBS/sellerAndShop/utils';\nimport SearchForm from './searchForm';\n\nconst TABS = [{ label: 'commonSellerList', value: 'ALL' }];\n\nconst INITIAL_SEARCH_FORM = {\n  seller_id_or_name: '',\n  country: '',\n  shop_id: '',\n  main_contact_email: '',\n  main_contact_phone: '',\n  cb_option: ''\n};\n\nconst INITIAL_PAGER = {\n  page_no: 1,\n  page_size: 10\n};\n\nconst compactParams = params => {\n  let result = pickBy(params, value => (value !== '' && !isNil(value)));\n  if (result.shop_id) {\n    result = {...result, shop_id: String(result.shop_id)};\n  }\n  return result;\n};\n\nconst TIME_FORMAT = 'YYYY-MM-DD HH:mm:ss';\n\nexport default {\n  name: 'SellerList',\n  components: {LayoutList, ListView, CheckAllColumn, SearchForm},\n  data() {\n    const {countrySelectList} = this.$store.getters;\n    const defaultCountry = countrySelectList.length > 1 ? '' : get(countrySelectList, `[0].value`, '');\n    return {\n      loading: false,\n      tableData: [],\n      defaultCountry,\n      searchForm: {\n        ...INITIAL_SEARCH_FORM,\n        country: defaultCountry\n      },\n      pager: {...INITIAL_PAGER},\n      total: 0,\n      checkedRows: [], // 当页多选\n      checkedType: '' // 当页多选\n    };\n  },\n  methods: {\n    isEmpty,\n    getShopStatusText,\n    async handleExport() {\n      try {\n        if (isEmpty(this.checkedRows) || isEmpty(this.tableData)) {\n          this.$message({ type: 'warning', message: this.$t('commonPleaseChooseAtLeastOneOption') });\n          return;\n        }\n        let params = {};\n        let exportFunc = () => {};\n        if (this.checkedType === 'all') {\n          params = compactParams({...this.searchForm});\n          exportFunc = postExportAllSellers;\n        } else {\n          const ids = this.checkedRows.map(item => item.seller_id);\n          params = {seller_ids: ids};\n          exportFunc = postExportSellers;\n        }\n        const result = await exportFunc(params);\n        const date = moment().format(TIME_FORMAT);\n        const fileName = `SELLERS_${date}.xlsx`;\n        downloadBlobFile(result, fileName);\n      } catch (e) {\n        this.$message({ type: 'error', messaeg: e });\n      }\n    },\n    async onSearch() {\n      try {\n        this.loading = true;\n        const params = {\n          ...this.searchForm,\n          ...this.pager\n        };\n        const {retcode, data = {}, message} = await apiGetSellers(compactParams(params));\n        if (retcode === 0) {\n          this.tableData = data.sellers;\n          this.total = data.total || 0;\n        } else {\n          this.$message({type: 'error', message});\n        }\n      } catch (e) {\n        this.$message({type: 'error', message: e});\n      } finally {\n        this.loading = false;\n      }\n    },\n    onResetCheckType() {\n      this.checkedRows = [];\n      this.checkedType = '';\n    },\n    onResetSearchForm() {\n      this.searchForm = {\n        ...INITIAL_SEARCH_FORM,\n        country: this.defaultCountry\n      };\n      this.onResetPageNoSearch();\n    },\n    onResetPageNoSearch() {\n      this.handleChangePage(1);\n    },\n    handleCreateRequest() {\n      this.$router.push(getSellerRequestPageUrl('create'));\n    },\n    handleSizeChange(size) {\n      this.pager.page_size = size;\n      this.onResetPageNoSearch();\n    },\n    handleChangePage(page_no) {\n      this.pager.page_no = page_no;\n      this.onSearch();\n    },\n    onSetSelection(selection) {\n      this.checkedRows = selection;\n    },\n    onSetCheckType(type) {\n      this.checkedType = type;\n    },\n    onDetailClick(row) {\n      const {seller_id} = row;\n      const url = getSellerPageUrl('detail', {id: seller_id});\n      this.$router.push(url);\n    }\n  },\n  computed: {\n    tabs() {\n      return TABS;\n    },\n    canCreate() {\n      return hasPermission(Permission.SELLER_CREATE_REQUEST);\n    },\n    canViewDetail() {\n      return hasOneOfPermissions([\n        Permission.SELLER_VIEW_DETAIL_EXCEPT_BANK,\n        Permission.SELLER_VIEW_DETAIL_ALL\n      ]);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.search-actions {\n  display: flex;\n  justify-content: flex-end;\n  width: 100%;\n  margin-top: 10px;\n}\n\n.seller-table {\n  margin-top: 10px;\n  border-top: 1px solid #e3e3e3;\n  padding-top: 10px;\n}\n\n.table-actions {\n  margin-bottom: 10px;\n}\n\n.pagination {\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  margin-top: 10px;\n}\n\n.shop-id-container {\n  .shop-item {\n    & + .shop-item {\n      margin-top: 5px;\n    }\n  }\n}\n</style>\n\n<style lang=\"scss\">\n@import \"~@/styles/common.scss\";\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/sellerAndShop/sellerList/list/searchForm.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":2,"column":49,"nodeType":"VIdentifier","messageId":"deprecated","endLine":2,"endColumn":55}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-form inline class=\"pms-list-form\" @submit.native.prevent=\"emitSearch\">\n    <el-button v-show=\"false\" native-type=\"submit\" />\n    <el-form-item :label=\"$t('commonShopIDOrSellerName')\" class=\"long-col\">\n      <el-input clearable v-model=\"searchForm.seller_id_or_name\"  @clear=\"emitSearch\" />\n    </el-form-item>\n    <el-form-item :label=\"$t('commonRegion')\">\n      <el-select v-model=\"searchForm.country\" @change=\"emitSearch\">\n        <el-option v-for=\"item in regionOptions\" :key=\"item.label\" :value=\"item.value\" :label=\"item.label\" />\n      </el-select>\n    </el-form-item>\n    <el-form-item :label=\"$t('commonShopID')\">\n      <!-- <el-input clearable v-model=\"searchForm.shop_id\"  @clear=\"emitSearch\" /> -->\n      <el-select\n        clearable\n        filterable\n        remote\n        :remote-method=\"getShopIdName\"\n        v-model=\"searchForm.shop_id\"\n        @change=\"emitSearch\"\n      >\n        <el-option\n          v-for=\"option in shopIDSelectOptions\"\n          :key=\"option.value\"\n          :label=\"option.label\"\n          :value=\"option.value\"\n        />\n      </el-select>\n    </el-form-item>\n    <el-form-item :label=\"$t('commonCBOption')\">\n      <el-select v-model=\"searchForm.cb_option\" @change=\"emitSearch\">\n        <el-option v-for=\"item in cbOptions\" :key=\"item.label\" :value=\"item.value\" :label=\"$t(item.label)\" />\n      </el-select>\n    </el-form-item>\n    <el-form-item :label=\"$t('commonMainContactEmail')\">\n      <el-input clearable v-model=\"searchForm.main_contact_email\"  @clear=\"emitSearch\" />\n    </el-form-item>\n    <el-form-item :label=\"$t('commonMainContactPhone')\">\n      <el-input clearable v-model=\"searchForm.main_contact_phone\"  @clear=\"emitSearch\" />\n    </el-form-item>\n  </el-form>\n</template>\n\n<script>\nimport {concat} from 'lodash';\nimport {CB_OPTION_MAP} from '@/views/FBS/sellerAndShop/constants';\nimport {getShopListByIdOrName} from '@/api/shopConfig';\n\nconst CB_OPTIONS = [\n  { label: 'commonAll', value: '' },\n  ...Object.entries(CB_OPTION_MAP).map(([key, value]) => ({label: value, value: Number(key)}))\n];\n\nexport default {\n  name: 'SellerListSearchForm',\n  props: {\n    searchForm: Object\n  },\n  data() {\n    return {\n      shopIDSelectOptions: []\n    };\n  },\n  methods: {\n    emitSearch() {\n      this.$emit('onSearch');\n    },\n    async getShopIdName(query) {\n      if (query === '') {\n        return;\n      }\n      const params = {\n        search_type: 0,\n        shop_id_or_name: query,\n        page_no: 1,\n        count: 20\n      };\n      try {\n        const result = await getShopListByIdOrName(params);\n        if (result && result.retcode === 0) {\n          this.shopIDSelectOptions = (result.data.shop_list || []).map(item => ({\n            value: item.shop_id,\n            label: `${item.shop_id}(${item.shop_name})`\n          }));\n        }\n      } catch (e) {\n        this.$message({type: 'error', message: e});\n      }\n    }\n  },\n  computed: {\n    regionOptions() {\n      const countryList = this.$store.getters.countrySelectList;\n      return concat(\n        countryList.length > 1 ? [{ label: 'All', value: '' }] : [],\n        countryList\n      );\n    },\n    cbOptions() {\n      return CB_OPTIONS;\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.pms-list-form{\n  display: grid;\n  grid-auto-flow: row dense;\n  grid-gap: 16px 10px;\n  grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));\n\n  .long-col {\n    grid-column-start: span 2;\n  }\n\n  .requester-item {\n    display: inline-flex;\n\n    .by-myself-button {\n      margin-left: 5px;\n    }\n  }\n}\n</style>\n\n<style lang=\"scss\">\n.pms-list-form {\n  .el-form-item{\n    display: flex;\n    color: #333;\n    margin-bottom: 0;\n\n    .el-form-item__label {\n      background-color: #fafbfd;\n      white-space: nowrap;\n      text-overflow: ellipsis;\n      overflow: hidden;\n      padding: 0 8px;\n      border-radius: 4px 0 0 4px;\n      border: 1px solid #e2e6ec;\n      border-right: 0;\n      height: 32px;\n      line-height: 32px;\n      box-sizing: border-box;\n    }\n    .el-form-item__content{\n      flex: 1;\n      height: 32px;\n      line-height: 32px;\n      box-sizing: border-box;\n    }\n  }\n  .el-autocomplete {\n    width: 100%;\n  }\n  .el-input, .el-date-editor.el-input__inner{\n    width: 100%;\n  }\n  .el-input__inner{\n    border-top-left-radius: 0px;\n    border-bottom-left-radius: 0px;\n  }\n  .el-input.is-disabled .el-input__inner {\n    background-color: #fafbfd;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/sellerAndShop/sellerRequest/create/attachmentForm.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/sellerAndShop/sellerRequest/create/bankForm.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/sellerAndShop/sellerRequest/create/basicForm.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/sellerAndShop/sellerRequest/create/contactForm.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/sellerAndShop/sellerRequest/create/index.vue","messages":[{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":416,"column":14,"nodeType":"ArrowFunctionExpression","messageId":"unexpectedSpace","endLine":416,"endColumn":15,"fix":{"range":[14565,14566],"text":""}},{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":439,"column":14,"nodeType":"ArrowFunctionExpression","messageId":"unexpectedSpace","endLine":439,"endColumn":15,"fix":{"range":[15352,15353],"text":""}}],"errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"<template>\n  <div class='pms-ele-ui pms-ui create-seller-request'>\n    <Header\n      :createTitle=\"$t('FBSCreateSellerRequest')\"\n      :detailID=\"requestId\"\n      :statusText=\"$t(statusInfo.text)\"\n      :statusColor=\"statusInfo.color\"\n      :needDefaultBack=\"false\"\n      @goBack=\"handleGoBack\"\n    />\n    <div class=\"submit-btn-wrapper\">\n      <el-button class=\"list-btn white-blue\" v-if=\"canSaveAsDraft\" :loading=\"isSaving\" @click=\"handleSave\">\n        {{$t('commonSaveAsDraft')}}\n      </el-button>\n      <el-button v-if=\"currentStep === formSteps[formSteps.length - 1].key\" class=\"list-btn\" :loading=\"isSaving\" @click=\"handleSubmit\">\n        {{$t('commonSubmit')}}\n      </el-button>\n    </div>\n    <el-tabs\n      class=\"pms-ele-ui country-list\"\n      tab-position=\"top\"\n      v-model=\"currentStep\"\n      :before-leave=\"beforeLeave\"\n      :key=\"currentStep\"\n    >\n      <el-tab-pane\n        v-for=\"(item, index) in formSteps\"\n        :key=\"item.key\"\n        :name=\"String(item.value)\"\n      >\n        <div slot=\"label\" class=\"tab-label\">\n          <span>{{`${index + 1}. `}}</span>\n          <span>{{item.label}}</span>\n          <span v-if=\"index !== formSteps.length - 1\" class=\"split-arrow\">{{'>'}}</span>\n        </div>\n        <div>\n          <BasicForm\n            v-if=\"currentStep === 'basic'\"\n            ref=\"subForm\"\n            :isSCApproval=\"isSCApproval\"\n            :configurableRules=\"getFormRules('basic')\"\n            :configurableFeilds=\"getFormFields('basic')\"\n            :originData=\"originDatas.basic\"\n            :initialRegion=\"initialRegion\"\n            :shopeeEntities=\"shopeeEntities\"\n            @onFetchConfigs=\"fetchConfigs\"\n            @onResetForm=\"onResetForm\"\n          />\n          <ContactForm\n            v-else-if=\"currentStep === 'contact'\"\n            ref=\"subForm\"\n            :originData=\"originDatas.contact\"\n            :configurableRules=\"getFormRules('contact')\"\n            :configurableFeilds=\"getFormFields('contact')\"\n          />\n          <BankForm\n            v-else-if=\"currentStep === 'bank'\"\n            ref=\"subForm\"\n            :originData=\"originDatas.bank\"\n            :configurableRules=\"getFormRules('bank')\"\n            :configurableFeilds=\"getFormFields('bank')\"\n          />\n          <AttachmentForm\n            v-else-if=\"currentStep === 'attachment'\"\n            ref=\"subForm\"\n            :isSCApproval=\"isSCApproval\"\n            :originData=\"originDatas.attachment\"\n            :configurableRules=\"getFormRules('attachment')\"\n            :configurableFeilds=\"getFormFields('attachment')\"\n          />\n        </div>\n        <div class=\"actions\">\n          <el-button v-if=\"index !== 0\" class=\"list-btn white-blue\" @click=\"handlePrevious\">\n            {{$t('commonPrevious')}}\n          </el-button>\n          <el-button v-if=\"index !== formSteps.length - 1\" class=\"list-btn\" :loading=\"isSaving\" @click=\"handleNext\">\n            {{$t('commonNext')}}\n          </el-button>\n        </div>\n      </el-tab-pane>\n    </el-tabs>\n  </div>\n</template>\n\n<script>\nimport {get, isEmpty, uniq, pick, concat, without} from 'lodash';\nimport {\n  apiGetSellerRequestSetting, apiGetSellerRequestDetail, apiPostSellerRequestSave, apiPostSellerRequestSubmit,\n  apiGetSellerDetail, apiGetSellerNominationSetting\n} from '@/api/FBS/sellerAndShop';\nimport {getEbsCompanyCode} from '@/api/supplierRequest';\nimport Header from '@/components/layout/detail';\nimport {updateUrlQuery} from '@/utils/router';\nimport {hasPermission} from '@/utils/permission';\nimport {Permission} from '@/utils/constant';\nimport {getSellerRequestPageUrl} from '@/views/FBS/sellerAndShop/utils';\nimport {SELLER_REQUEST_STATUS_MAP} from '@/views/FBS/sellerAndShop/constants';\nimport {\n  getFormSettings, FORM_STEPS, formatFormFieldToData, compareFields, formatDataToFields, formatRequestData\n} from './utils';\nimport BasicForm from './basicForm';\nimport ContactForm from './contactForm';\nimport BankForm from './bankForm';\nimport AttachmentForm from './attachmentForm';\n\n// 过滤测试环境的脏数据\nconst filterData = list => {\n  const keys = uniq(list.map(item => item.company_code));\n  return keys.map(key => {\n    const item = list.find(current => current.company_code === key);\n    return item;\n  });\n};\n\nexport default {\n  name: 'CreateSellerRequest',\n  components: {Header, BasicForm, ContactForm, BankForm, AttachmentForm},\n  data() {\n    return {\n      isSaving: false,\n      currentStep: this.getCurrentStep(),\n      originData: {},\n      context: {\n        configs: {}\n      },\n      isSCApproval: false,\n      canSaveAsDraft: true,\n      shopeeEntities: []\n    };\n  },\n  provide() {\n    return {\n      context: this.context\n    };\n  },\n  mounted() {\n    if (this.requestId) {\n      this.fetchRequestDetail();\n    }\n    if (this.sellerIdOnUrl) {\n      this.fetchSellerDetail();\n    }\n    this.fetchShopeeEntities();\n  },\n  computed: {\n    statusInfo() {\n      const {status} = this.originData;\n      return SELLER_REQUEST_STATUS_MAP[status] || {};\n    },\n    formSteps() {\n      let validForms = Object.keys(this.formSettings);\n      if (!this.canEditBankInfos) {\n        validForms = without(validForms, 'bank');\n      }\n      const validFormSteps = FORM_STEPS.filter(item => item.key === 'basic' || validForms.includes(item.key));\n      return validFormSteps.map(item => ({...item, value: item.key}));\n    },\n    formSettings() {\n      return getFormSettings(this.context.configs);\n    },\n    requestId() {\n      return this.$route.query.requestId || '';\n    },\n    isModification() { // 是否正编辑已有seller\n      return this.sellerIdOnUrl || this.originData.action === 2;\n    },\n    sellerIdOnUrl() { // url上有sellerId时，表示从seller点击edit跳转过来，且未保存生成新的request单\n      return this.$route.query.sellerId || '';\n    },\n    originDatas() {\n      return {\n        basic: formatDataToFields('basic', this.originData),\n        contact: formatDataToFields('contact', this.originData),\n        bank: formatDataToFields('bank', this.originData),\n        attachment: formatDataToFields('attachment', this.originData)\n      };\n    },\n    initialRegion() {\n      return get(this.originData, 'basic.country', '');\n    },\n    canEditBankInfos() {\n      if (this.isModification) {\n        return hasPermission(Permission.SELLER_EDIT_ALL);\n      }\n      return true;\n    }\n  },\n  methods: {\n    async fetchSellerDetail() {\n      try {\n        const params = {seller_id: this.sellerIdOnUrl};\n        const {retcode, data = {}, message} = await apiGetSellerDetail(params);\n        if (retcode === 0) {\n          this.originData = formatRequestData(data || {});\n        } else {\n          this.$message({type: 'error', message});\n        }\n      } catch (e) {\n        this.$message({type: 'error', message: e});\n      }\n    },\n    async fetchRequestDetail() {\n      try {\n        const params = {request_id: this.requestId};\n        const {retcode, data = {}, message} = await apiGetSellerRequestDetail(params);\n        if (retcode === 0) {\n          this.originData = formatRequestData(data || {});\n          this.isSCApproval = data.source === 2 && data.status === 2 && data.can_approval;\n          if (this.isSCApproval) {\n            this.$nextTick(() => {\n              this.getNomiationConfig();\n            });\n          }\n          this.canSaveAsDraft = data.status === 1; // 1-Draft\n        } else {\n          this.$message({type: 'error', message});\n        }\n      } catch (e) {\n        this.$message({type: 'error', message: e});\n      }\n    },\n    // 获取seller Nomiation config信息\n    async getNomiationConfig() {\n      try {\n        const { country: region, cb_option: cb_type } = this.originData.basic || {};\n        const params = { region, cb_type };\n        const { retcode, message, data = {} } = await apiGetSellerNominationSetting(params);\n        if (retcode === 0) {\n          if (this.context.configs) {\n            const { payment_term: payment_term_required, tax_code: tax_code_required, shopee_bd_email: shopee_bd_email_required } = this.context.configs;\n            if (payment_term_required !== 1) {\n              this.originData.basic.payment_term = data.payment_term || '';\n            }\n            if (tax_code_required !== 1) {\n              this.originData.basic.tax_code = data.tax_code || '';\n              this.originData.basic.tax_rate = String(data.tax_rate) || '';\n            }\n            if (shopee_bd_email_required !== 1) {\n              this.originData.contact.shopee_bd_email = data.shopee_bd_email || '';\n            }\n          }\n        } else {\n          this.$message({ type: 'error', message });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', e });\n      }\n    },\n    // region或cbOption变化时重置表单\n    onResetForm() {\n      this.$refs.subForm.forEach((item, index) => {\n        if (index === 0) { // basic form\n          const {shopeeEntity, region, cbOption, sellerName, registrationSubject} = item.formData;\n          // 以下部分的字段不重置\n          const formCache = {shopeeEntity, region, cbOption, sellerName, registrationSubject};\n          item.$refs.form.resetFields();\n          item.formData = {...item.formData, ...formCache};\n        } else {\n          item.$refs.form.resetFields();\n        }\n      });\n    },\n    getFormFields(type) {\n      return get(this.formSettings, `${type}.fields`, []);\n    },\n    getFormRules(type) {\n      return get(this.formSettings, `${type}.rules`, {});\n    },\n    handleGoBack() {\n      const url = getSellerRequestPageUrl('list');\n      this.$router.push(url);\n    },\n    async fetchConfigs(params) {\n      try {\n        const {retcode, data = {}, message} = await apiGetSellerRequestSetting(params);\n        if (retcode === 0) {\n          this.context.configs = data;\n        } else {\n          this.$message({type: 'error', message});\n        }\n      } catch (e) {\n        this.$message({type: 'error', message: e});\n      }\n    },\n    getCurrentStep() {\n      const {step} = this.$route.query;\n      return step || 'basic';\n    },\n    getHasCurrentFormChanged() {\n      const currentForm = this.getCurrentForm();\n      const currentFields = formatFormFieldToData(this.currentStep, currentForm.model);\n      const originFields = this.originData[this.currentStep];\n      return !compareFields(currentFields, originFields);\n    },\n    getHasCriticalFieldsChange() { // 表单的关键字段是否修改，如shopee entity和cb option改了的话需要重新请求配置\n      if (this.currentStep !== 'basic' || !this.requestId) {\n        return false;\n      }\n      const form = this.getCurrentForm();\n      const {shopeeEntity, cbOption} = form.model;\n      const {basic} = this.originData;\n      return basic.shopee_entity !== shopeeEntity || basic.cb_option !== cbOption;\n    },\n    beforeLeave(value, isUpdateModel = false) {\n      return false;\n      // 去掉点击tab条状功能，原因是当前无法在submit的时候全表单做校验，后续更改全表单校验后可开放\n      // // 没有加载config 时不允许切换\n      // if (isEmpty(this.context.configs)) {\n      //   this.$message.warning(this.$t('forecastBeforeEditCoverageTips'));\n      //   return false;\n      // }\n      // if (value === this.currentStep) {\n      //   return false;\n      // }\n      // const checkPromise = this.checkCurrentForm()\n      // checkPromise.then(isPass => {\n      //   if (isPass) {\n      //     this.setOriginData();\n      //     if (isUpdateModel) {\n      //       this.currentStep = value;\n      //     }\n      //   }\n      // })\n      // return checkPromise\n    },\n    updateUrlQuery(key, value) {\n      const newUrl = updateUrlQuery(this.$route, {[key]: value});\n      this.$router.replace(newUrl);\n    },\n    async handlePrevious() {\n      const isPass = await this.checkCurrentForm();\n      if (isPass) {\n        this.setOriginData();\n        const currentIndex = this.formSteps.findIndex(item => item.key === this.currentStep);\n        const previousStepKey = this.formSteps[currentIndex - 1].key;\n        this.currentStep = previousStepKey;\n      }\n    },\n    setOriginData() {\n      const currentForm = this.getCurrentForm();\n      const currentFormData = formatFormFieldToData(this.currentStep, currentForm.model);\n      this.originData = {\n        ...this.originData,\n        [this.currentStep]: currentFormData\n      };\n    },\n    async handleNext() {\n      const isPass = await this.checkCurrentForm();\n      if (isPass) {\n        this.setOriginData();\n        const currentIndex = this.formSteps.findIndex(item => item.key === this.currentStep);\n        const nextStepKey = this.formSteps[currentIndex + 1].key;\n        this.currentStep = nextStepKey;\n      }\n    },\n    checkCurrentForm() {\n      return new Promise(resolve => {\n        const currentForm = this.getCurrentForm();\n        currentForm.validate(isPass => {\n          resolve(isPass);\n        });\n      });\n    },\n    getCurrentForm() {\n      const currentFormIndex = this.formSteps.findIndex(item => item.key === this.currentStep);\n      const currentForm = this.$refs.subForm[currentFormIndex].$refs.form;\n      return currentForm;\n    },\n    getParams() {\n      this.setOriginData();\n      let result = {\n        ...this.originData\n        // [this.currentStep]: currentFormData\n      };\n\n      const displayedForms = this.formSteps.map(item => item.value); // 当前展示的表单\n      const hasCriticalFieldsChange = this.getHasCriticalFieldsChange();\n      const formFields = hasCriticalFieldsChange // 若修改了关键信息则重置表单\n        ? ['basic']\n        : displayedForms;\n      const extraFields = ['request_id'];\n      const allFields = concat(extraFields, formFields);\n      result = pick(result, allFields);\n\n      if (this.sellerIdOnUrl) { // url上存在seller id，则认为是第一次根据已有seller生成edit request\n        result = {...result, seller_id: this.sellerIdOnUrl};\n      }\n      if (result.basic && Array.isArray(result.basic.trading_cert_docs) && result.basic.trading_cert_docs.length) {\n        if (!result.attachment) {\n          result.attachment = {};\n        }\n        result.attachment.trading_cert_docs = result.basic.trading_cert_docs;\n      }\n      return result;\n    },\n    async fetchShopeeEntities() {\n      try {\n        const {retcode, message, info, data} = await getEbsCompanyCode();\n        if (retcode === 0) {\n          const list = filterData(data.list).map(item => ({\n            label: item.company_code,\n            value: item.company_code,\n            country: item.country\n          }));\n          this.shopeeEntities = list;\n        } else {\n          this.$message({type: 'error', message: message || info});\n        }\n      } catch (e) {\n        this.$message({type: 'error', message: e});\n      }\n    },\n    async handleSave() {\n      const currentForm = this.getCurrentForm();\n      currentForm.validate(\n        async (pass) => {\n          if (!pass) {\n            return;\n          }\n          try {\n            const params = this.getParams();\n            const {retcode, data = {}, message} = await apiPostSellerRequestSave(params);\n            if (retcode === 0) {\n              this.$message({type: 'success', message: this.$t('commonSaveSuccess')});\n              const url = getSellerRequestPageUrl('detail', {requestId: data.request_id});\n              this.$router.push(url);\n            } else {\n              this.$message({type: 'error', message});\n            }\n          } catch (e) {\n            this.$message({type: 'error', message: e});\n          }\n        }\n      );\n    },\n    handleSubmit() {\n      const currentForm = this.getCurrentForm();\n      currentForm.validate(\n        async (pass) => {\n          if (!pass) {\n            return;\n          }\n          try {\n            const params = this.getParams();\n            if (this.isSCApproval) {\n              params.approve_save_draft = true; // source=sc status=PA,的单 submit要提交这个字段\n            }\n            const {retcode, data = {}, message, info} = await apiPostSellerRequestSubmit(params);\n            if (retcode === 0) {\n              this.$message({type: 'success', message: this.$t('commonSubmitSuccess')});\n              const url = getSellerRequestPageUrl('detail', {requestId: data.request_id});\n              this.$router.push(url);\n            } else {\n              this.$message({type: 'error', message: message || info});\n            }\n          } catch (e) {\n            this.$message({type: 'error', message: e});\n          }\n        }\n      );\n    }\n  },\n  watch: {\n    originData: {\n      handler(value, oldValue) {\n        const data = value.basic;\n        if (isEmpty(data)) {\n          return;\n        }\n        if (!oldValue || isEmpty(oldValue.basic)) {\n          this.fetchConfigs({country: data.country, cb_type: data.cb_option});\n        } else {\n           if (data.country !== oldValue.basic.country || data.cb_option !== oldValue.basic.cb_option) {\n            this.fetchConfigs({country: data.country, cb_type: data.cb_option});\n          }\n        }\n      },\n      immediate: true\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.create-seller-request {\n  padding: 0 20px;\n  position: relative;\n}\n\n.tab-label {\n  position: relative;\n  font-size: 18px;\n\n  .split-arrow {\n    position: absolute;\n    right: -22px;\n    color: #999 !important;\n  }\n}\n.submit-btn-wrapper{\n  position: absolute;\n  right: 20px;\n  z-index: 10;\n}\n.actions {\n  margin-top: 40px;\n}\n</style>\n\n<style lang=\"scss\">\n@import \"~@/styles/common.scss\";\n\n.create-seller-request {\n  .el-tabs__item {\n    margin-bottom: 10px;\n  }\n\n  .el-textarea .el-input__count {\n    position: absolute;\n    right: -60px;\n  }\n\n  .el-input__suffix .el-input__count-inner {\n    position: absolute;\n    right: -65px;\n  }\n\n  // 覆盖Header组件的样式\n  .detail-layout-wrapper {\n    padding: 0 !important;\n  }\n}\n\n.pms-ui .el-tabs__active-bar {\n  transition: none !important;\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/sellerAndShop/sellerRequest/create/utils.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/sellerAndShop/sellerRequest/detail/actionLog/fileListAttachment.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/sellerAndShop/sellerRequest/detail/actionLog/imagePreviewer.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/sellerAndShop/sellerRequest/detail/actionLog/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/sellerAndShop/sellerRequest/detail/complexRejectDialog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/sellerAndShop/sellerRequest/detail/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/sellerAndShop/sellerRequest/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/sellerAndShop/sellerRequest/list/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/sellerAndShop/sellerRequest/list/massOperationDialog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/sellerAndShop/sellerRequest/list/searchForm.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":2,"column":49,"nodeType":"VIdentifier","messageId":"deprecated","endLine":2,"endColumn":55}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-form inline class=\"pms-list-form\" @submit.native.prevent=\"emitSearch\">\n    <el-button v-show=\"false\" native-type=\"submit\" />\n    <el-form-item :label=\"$t('commonRegion')\">\n      <el-select v-model=\"searchForm.country\" @change=\"emitSearch\">\n        <el-option v-for=\"item in regionOptions\" :key=\"item.label\" :value=\"item.value\" :label=\"item.label\" />\n      </el-select>\n    </el-form-item>\n    <el-form-item :label=\"$t('commonRequestID')\">\n      <el-input clearable v-model=\"searchForm.request_id\"  @clear=\"emitSearch\" />\n    </el-form-item>\n    <el-form-item :label=\"$t('commonShopIDOrSellerName')\" class=\"long-col\">\n      <el-input clearable v-model=\"searchForm.seller_id\"  @clear=\"emitSearch\" />\n    </el-form-item>\n    <el-form-item :label=\"$t('commonCBOption')\">\n      <el-select v-model=\"searchForm.cb_option\" @change=\"emitSearch\">\n        <el-option v-for=\"item in cbOptions\" :key=\"item.label\" :value=\"item.value\" :label=\"$t(item.label)\" />\n      </el-select>\n    </el-form-item>\n    <el-form-item :label=\"$t('commonSource')\">\n      <el-select v-model=\"searchForm.source\" @change=\"emitSearch\">\n        <el-option v-for=\"item in sourceOptions\" :key=\"item.label\" :value=\"item.value\" :label=\"item.label\" />\n      </el-select>\n    </el-form-item>\n    <el-form-item v-if=\"activeTab === 'ALL'\" :label=\"$t('commonStatus')\">\n      <el-select v-model=\"searchForm.status\" @change=\"emitSearch\">\n        <el-option v-for=\"item in allStatusOptions\" :key=\"item.label\" :value=\"item.value\" :label=\"$t(item.label)\" />\n      </el-select>\n    </el-form-item>\n    <el-form-item :label=\"$t('commonRequester')\">\n      <div class=\"requester-item\">\n        <el-input clearable v-model=\"searchForm.requester\" @clear=\"emitSearch\" />\n        <el-button type=\"text\" class=\"by-myself-button\" @click=\"handleByMyselfClick\">\n          {{$t('commonByMyself')}}\n        </el-button>\n      </div>\n    </el-form-item>\n  </el-form>\n</template>\n\n<script>\nimport {concat} from 'lodash';\nimport {SELLER_REQUEST_STATUS_MAP, SELLER_REQUEST_SOURCE_MAP, CB_OPTION_MAP} from '@/views/FBS/sellerAndShop/constants';\n\nconst getStatusOptions = () => {\n  const options = Object.entries(SELLER_REQUEST_STATUS_MAP).map(item => {\n    const [key, info] = item;\n    return {label: info.text, value: Number(key)};\n  });\n\n  return concat(\n    { label: 'commonAll', value: '' },\n    options\n  );\n};\n\nconst SOURCE_OPTIONS = [\n  { label: 'All', value: '' },\n  ...Object.entries(SELLER_REQUEST_SOURCE_MAP).map(([key, value]) => ({label: value, value: Number(key)}))\n];\n\nconst CB_OPTIONS = [\n  { label: 'commonAll', value: '' },\n  ...Object.entries(CB_OPTION_MAP).map(([key, value]) => ({label: value, value: Number(key)}))\n];\n\nexport default {\n  name: 'SellerRequestListSearchForm',\n  props: {\n    searchForm: Object\n  },\n  methods: {\n    handleByMyselfClick() {\n      const email = this.$store.getters.email;\n      this.$emit('change', 'requester', email);\n    },\n    emitSearch() {\n      this.$emit('onSearch');\n    }\n  },\n  computed: {\n    regionOptions() {\n      const countryList = this.$store.getters.countrySelectList;\n      return concat(\n        countryList.length > 1 ? [{ label: 'All', value: '' }] : [],\n        countryList\n      );\n    },\n    allStatusOptions() {\n      return getStatusOptions();\n    },\n    sourceOptions() {\n      return SOURCE_OPTIONS;\n    },\n    cbOptions() {\n      return CB_OPTIONS;\n    },\n    activeTab() {\n      return this.$route.query.tab || 'ALL';\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.pms-list-form{\n  display: grid;\n  grid-auto-flow: row dense;\n  grid-gap: 16px 10px;\n  grid-template-columns: repeat(auto-fit, minmax(310px, 1fr));\n\n  .long-col {\n    grid-column-start: span 2;\n  }\n\n  .requester-item {\n    display: inline-flex;\n\n    .by-myself-button {\n      margin-left: 5px;\n    }\n  }\n}\n</style>\n\n<style lang=\"scss\">\n.pms-list-form {\n  .el-form-item{\n    display: flex;\n    color: #333;\n    margin-bottom: 0;\n\n    .el-form-item__label {\n      background-color: #fafbfd;\n      white-space: nowrap;\n      text-overflow: ellipsis;\n      overflow: hidden;\n      padding: 0 8px;\n      border-radius: 4px 0 0 4px;\n      border: 1px solid #e2e6ec;\n      border-right: 0;\n      height: 32px;\n      line-height: 32px;\n      box-sizing: border-box;\n    }\n    .el-form-item__content{\n      flex: 1;\n      height: 32px;\n      line-height: 32px;\n      box-sizing: border-box;\n    }\n  }\n  .el-autocomplete {\n    width: 100%;\n  }\n  .el-input, .el-date-editor.el-input__inner{\n    width: 100%;\n  }\n  .el-input__inner{\n    border-top-left-radius: 0px;\n    border-bottom-left-radius: 0px;\n  }\n  .el-input.is-disabled .el-input__inner {\n    background-color: #fafbfd;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/sellerAndShop/sellerSkuInfo/addSellerSkuDialog.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":19,"column":66,"nodeType":"VIdentifier","messageId":"deprecated","endLine":19,"endColumn":72},{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":26,"column":66,"nodeType":"VIdentifier","messageId":"deprecated","endLine":26,"endColumn":72}],"errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"sell-sku-add-container\">\n    <el-dialog :width=\"modeConfig.width\" :title=\"$t('addNewSKUSellerInfo')\" :visible.sync=\"addVisible\" @close=\"closeDialog\">\n      <header class=\"step-container\">\n        <div class=\"step-item\" :class=\"{ 'active': activeStep === step.value }\" v-for=\"(step, index) in steps\" :key=\"step.value\">\n          <span class=\"num\">{{step.value}}</span><span>{{$t(step.label)}}</span>\n          <span class=\"line\" v-if=\"index !== (steps.length - 1)\"></span>\n        </div>\n      </header>\n      <div v-if=\"activeStep === 1\" class=\"select-seller-sku-container\">\n        <div class=\"seller-sku-select\">\n          <el-button class=\"seller-btn\">{{$t('commonSeller')}}</el-button>\n          <el-select :remote-method=\"getSellers\" v-model=\"sellerSelect\" filterable :remote=\"true\"\n            @change=\"changeSeller\"\n            :placeholder=\"$t('commonPleaseInput')\" class=\"input-with-select\">\n            <el-option v-for=\"item in sellerIDSelectOptions\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"></el-option>\n          </el-select>\n        </div>\n        <el-form class=\"select-form\" label-width=\"120px\" @submit.native.prevent>\n          <div class=\"form-title\">{{$t('sellerSKUInfo')}}</div>\n          <el-form-item v-for=\"schema in sellerSchemaList\" :key=\"schema.field\" :label=\"schema.label\">\n            <pms-form-item @input=\"modifySellerForm\" :renderData=\"{ schema, form: sellerInfoForm }\"></pms-form-item>\n          </el-form-item>\n          <el-form-item :label=\"`${$t('commonSkuID')}:`\">\n            <el-input v-model=\"sellerInfoForm.sku_id\" :placeholder=\"$t('sellerSkuAddSkuInfoTips')\"\n              :disabled=\"!sellerInfoForm.seller_id\" @keyup.enter.native=\"onSearchSkuList\"></el-input>\n          </el-form-item>\n          <el-form-item>\n            <list-view :config=\"skuTableConfig\" :dataList=\"skuInfoList\" :tableSchema=\"skuTableSchema\"></list-view>\n          </el-form-item>\n        </el-form>\n      </div>\n      <div v-if=\"activeStep === 2\" class=\"edit-supplier-sku-info\">\n        <add-sku-info :form=\"sellerInfoForm\" :skuList=\"skuInfoList\" :country=\"sellerInfoForm.country\"></add-sku-info>\n      </div>\n      <div slot=\"footer\" class=\"dialog-footer\" v-loading=\"loading\">\n        <el-button v-if=\"activeStep > 1\" @click=\"goPreviousStep\">{{$t('commonPrevious')}}</el-button>\n        <el-button v-if=\"activeStep === steps.length\" type=\"primary\" @click=\"confirmAdd\">{{$t('commonConfirm')}}</el-button>\n        <el-button v-if=\"activeStep < steps.length\" type=\"primary\" :disabled=\"disabledNext\" @click=\"goNextStep\">{{$t('commonConfirmAndNext')}}</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport PMSFormItem from '@/components/BaseItem/formItem';\nimport ListView from '@/components/ApproveList/list';\nimport { apiLinkSellerAndSku, apiGetSellers, apiCheckSellerAndSku } from '@/api/FBS/sellerSku';\nimport { getSkuManagementList } from '@/api/skuMgt';\nimport AddSkuInfo from './addSkuInfo';\nimport { validateSkuList } from './validateSkuList';\nimport { formatParams } from '@/utils/formatParams';\n\nexport default {\n  data() {\n    return {\n      addVisible: false,\n      steps: [{\n        label: 'selectSellerSku',\n        value: 1\n      }, {\n        label: 'editSupplierSKUInfo',\n        value: 2\n      }],\n      activeStep: 1,\n      sellerSelect: '',\n      cacheSeller: '',\n      sellerInfoForm: { seller_id: '', seller_name: '', country: '', sku_id: '' },\n      skuInfoList: [],\n      sellerIDSelectOptions: [],\n      skuTableConfig: {\n        maxHeight: '300'\n      },\n      unitList: [],\n      loading: false\n    };\n  },\n  components: { 'pms-form-item': PMSFormItem, ListView, AddSkuInfo },\n  props: {\n    visible: {\n      required: true,\n      type: Boolean,\n      default: false\n    }\n  },\n  watch: {\n    visible: {\n      handler(val) {\n        this.addVisible = val;\n        this.resetDialog();\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    resetDialog() {\n      this.activeStep = 1;\n      this.sellerSelect = '';\n      this.cacheSeller = '';\n      this.sellerInfoForm = { seller_id: '', seller_name: '', country: '', sku_id: '' };\n      this.skuInfoList = [];\n      this.sellerIDSelectOptions = [];\n    },\n    changeSeller(value) {\n      if (this.cacheSeller && this.skuInfoList.length) {\n        this.$confirm(this.$t('sellerSkuHadSelected'), this.$t('commonTips'), {\n          confirmButtonText: this.$t('commonConfirm'),\n          cancelButtonText: this.$t('commonCancel'),\n          type: 'warning'\n        }).then(() => {\n          this.confirmChangeSeller(value);\n        }).catch(() => {\n          this.sellerSelect = this.cacheSeller;\n        });\n      } else {\n        this.confirmChangeSeller(value);\n      }\n    },\n    confirmChangeSeller(value) {\n      this.cacheSeller = value;\n      this.sellerInfoForm = this.sellerIDSelectOptions.find(item => item.value === value);\n      this.sellerIDSelectOptions = [];\n      this.skuInfoList = [];\n    },\n    formatSearchParams() {\n      return {\n        sku_ids: this.sellerInfoForm.sku_id,\n        country: this.sellerInfoForm.country\n      };\n    },\n    onSearchSkuList() {\n      getSkuManagementList(this.formatSearchParams()).then(res => {\n        if (res.retcode === 0) {\n          // 如果没有则加入，如果原本有的话，就不需要加入\n          const result = (res.data.skus || []).filter(item => this.skuInfoList.every(sku => sku.sku_id !== item.sku_id));\n          this.skuInfoList.unshift(...result.map(sku => {\n            return { sku_id: sku.sku_id, sku_name: sku.sku_name, country: sku.country, seller_id: this.sellerInfoForm.seller_id, seller_name: this.sellerInfoForm.seller_name,\n              barcode: '', unit_name: '', external_sku_id: '', unit_id: '', min_order_quantity: undefined, source_status: '',\n              brand_id: '', brand_name: '', available_date: '', replenishment_indicator: '', indicator_remark: '',\n              guide_price: undefined, competitor_price: undefined, competitor_link: '', sku_unit_list: [] };\n          }));\n        } else {\n          this.$message.error(res.message || res.info);\n        }\n      });\n    },\n    goPreviousStep() {\n      this.activeStep--;\n    },\n    goNextStep() {\n      const params = {\n        seller_id: this.sellerInfoForm.seller_id,\n        sku_list: this.skuInfoList.map(item => ({ sku_id: item.sku_id}))\n      };\n      this.loading = true;\n      apiCheckSellerAndSku(params).then(res => {\n        if (res.retcode === 0) {\n          this.activeStep++;\n        } else {\n          this.$message.error(res.message || res.info);\n        }\n      }).catch(e => {\n        this.$message.error(e.message);\n      }).finally(() => {\n        this.loading = false;\n      });\n    },\n    confirmAdd() {\n      let errorMessage = '';\n      const hasError = this.skuInfoList.some((row, index) => {\n        errorMessage = validateSkuList(row, index);\n        return errorMessage;\n      });\n      if (hasError) {\n        this.$message.error(errorMessage);\n        return;\n      }\n      const data = this.skuInfoList.map(item => {\n        const defaultUnit = item.sku_unit_list && item.sku_unit_list[0] || {};\n        return {\n          ...formatParams(Object.assign({}, item, {\n            guide_price: defaultUnit.guide_purchase_price,\n            unit_id: defaultUnit.unit_id,\n            unit_name: defaultUnit.unit_name,\n            sku_unit_list: item.sku_unit_list.map((el, index) => {\n              el.default_flag = index === 0 ? 1 : 0;\n              return formatParams(el, { guide_purchase_price: 'guide_price' });\n            })\n          })),\n          available_date: item.available_date || '',\n          replenishment_indicator: item.replenishment_indicator,\n          indicator_remark: item.indicator_remark\n        };\n      });\n      this.loading = true;\n      apiLinkSellerAndSku({\n        sku_list: data, seller_id: this.sellerInfoForm.seller_id\n      }).then(res => {\n        if (res.retcode === 0) {\n          this.$message.success(this.$t('commonSuccess'));\n          this.closeDialog();\n        } else {\n          this.$message.error(res.message || res.info);\n        }\n      }).catch(e => {\n        this.$message.error(e.message);\n      }).finally(() => {\n        this.loading = false;\n      });\n    },\n    closeDialog() {\n      this.$emit('close');\n    },\n    modifySellerForm(schema, value) {\n      this.$set(this.sellerInfoForm, schema.field, value);\n    },\n    getSellers(value) {\n      if (value !== '') {\n        const params = { pageno: 1, page_size: 20, seller_id_or_name: `${value}`.trim() };\n        apiGetSellers(params).then(resp => {\n          if (resp.retcode !== 0) {\n            this.$message.error(resp.info);\n          } else {\n            const { sellers = [] } = resp.data || {};\n            if (Array.isArray(sellers) && sellers.length) {\n              this.sellerIDSelectOptions = sellers.map(item => ({ ...item, value: `${item.seller_id}`, label: `${item.seller_id}/${item.seller_name}` }));\n            } else {\n              this.$message.error(this.$t('SBSVendorIDSellerIncorrectTips'));\n              this.sellerIDSelectOptions = [];\n            }\n          }\n        }).catch(() => {\n          this.$message.error(this.$t('SBSVendorIDSellerIncorrectTips'));\n        });\n      }\n    },\n    removeSku(index) {\n      this.skuInfoList.splice(index, 1);\n    }\n  },\n  computed: {\n    modeConfig() {\n      return {\n        width: this.activeStep === 1 ? '60%' : '1228px'\n      };\n    },\n    disabledNext() {\n      return !this.sellerInfoForm.seller_id || this.skuInfoList.length === 0;\n    },\n    sellerSchemaList() {\n      return [\n        { field: 'seller_id', type: 'text', label: `${this.$t('commonSBSVendorID')}:` },\n        { field: 'seller_name', type: 'text', label: `${this.$t('commonSellerName')}:` },\n        { field: 'country', type: 'text', label: `${this.$t('commonRegion')}:` }\n      ];\n    },\n    skuTableSchema() {\n      return [\n        { field: 'sku_id', label: this.$t('commonSkuID') },\n        { field: 'sku_name', label: this.$t('commonSkuName') },\n        { field: 'country', label: this.$t('commonRegion') },\n        { field: 'action', label: this.$t('commonAction'), render: (schema, row, index, h) => ['div',\n          { class: 'remove-btn', on: { click: () => this.removeSku(index) } }, this.$t('commonRemove')]\n        }\n      ];\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.sell-sku-add-container {\n  .step-container {\n    display: flex;\n    justify-content: center;\n    font-family: Helvetica;\n    color: #333333;\n    font-size: 14px;\n    margin-bottom: 20px;\n    .step-item {\n      display: flex;\n      align-items: center;\n      opacity:  0.5;\n    }\n    .step-item.active {\n      opacity: 1;\n      font-weight: bold;\n      .num {\n        border: 1px solid #3D6ED1;\n        background-color: #3D6ED1;\n        color: #ffffff;\n      }\n    }\n    .line {\n      display: inline-block;\n      width: 80px;\n      height: 1px;\n      background: #979797;\n      margin: 0 10px;\n    }\n    .num {\n      display: inline-block;\n      text-align: center;\n      width: 20px;\n      line-height: 18px;\n      height: 20px;\n      border: 1px solid #999999;\n      border-radius: 50%;\n      margin-right: 8px;\n    }\n  }\n  .seller-sku-select {\n    .el-select {\n      width: 80px;\n    }\n    .input-with-select {\n      width: 45%;\n    }\n  }\n  .select-form {\n    .form-title {\n      margin: 20px 0 15px;\n      font-weight: 500;\n      font-size: 14px;\n      color: #333333;\n    }\n  }\n}\n</style>\n\n<style lang=\"scss\">\n@import \"~@/styles/common.scss\";\n.sell-sku-add-container {\n  .el-dialog__body {\n    padding: 5px 20px;\n  }\n  .seller-sku-select {\n    display: flex;\n    .el-select {\n      width: 80px;\n    }\n    .el-input:not(.el-date-editor) .el-input__inner {\n      border-left: none;\n    }\n    .seller-btn.el-button--medium {\n      padding: 0px 20px;\n      border-radius: 0px;\n    }\n  }\n  .select-form {\n    .remove-btn {\n      color: #3D6ED1;\n      cursor: pointer;\n    }\n  }\n  .el-form-item {\n    margin-bottom: 10px;\n  }\n  .el-form-item__label {\n    color: #666666;\n  }\n  .unit-common {\n    display: none;\n  }\n  .error-unit {\n    .el-input:not(.el-date-editor) .el-input__inner {\n      border-color: red;\n    }\n    .unit-common {\n      display: inline-block;\n      color: red;\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/sellerAndShop/sellerSkuInfo/addSkuInfo.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/sellerAndShop/sellerSkuInfo/dataList.vue","messages":[{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"Pager\" is not in camelCase.","line":72,"column":5,"nodeType":"Property","endLine":72,"endColumn":18}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"seller-sku-table pms-ui\">\n    <list-view\n      :dataList=\"itemList\"\n      :config=\"tableConfig\"\n      :tableSchema=\"tableSchema\"\n      @selectionChange=\"selectionChange\">\n      <!-- <template slot=\"checkColumn\">\n        <el-table-column\n          key=\"select\"\n          fixed\n          column-key=\"action\"\n          width=\"85px\"\n          align=\"center\"\n          label-class-name=\"pms-ele-ui select-all-table-column\">\n          <template slot-scope=\"scope\" slot=\"header\">\n            <el-dropdown\n              @click=\"resetCheckedType\"\n              placement=\"bottom\"\n              split-button\n              trigger=\"click\"\n              class=\"select-page-dropdown\"\n              @command=\"changeSelectPageType\">\n              {{formatCheckedType}}\n              <el-dropdown-menu class=\"options-field-menu\" slot=\"dropdown\">\n                <el-dropdown-item command=\"current\">{{$t('commonCurrentPage')}}</el-dropdown-item>\n                <el-dropdown-item command=\"all\">{{$t('commonAllPage')}}</el-dropdown-item>\n              </el-dropdown-menu>\n            </el-dropdown>\n          </template>\n          <template slot-scope=\"scope\">\n            <el-checkbox-group v-model=\"checkedRows\" @change=\"changeCheck\">\n            <el-checkbox :disabled=\"checkedType === 'all'\" :label=\"scope.row\">{{''}}</el-checkbox>\n            </el-checkbox-group>\n          </template>\n        </el-table-column>\n      </template> -->\n    </list-view>\n    <!-- 分页 -->\n    <el-pagination\n      :current-page=\"Pager.pageIndex\" background layout=\"sizes, prev, pager, next\" :total.sync=\"Pager.total\"\n      :page-size=\"Pager.size\" :page-sizes=\"[10, 20, 50, 100]\"\n      @current-change=\"handleChangePageIndex\" @size-change=\"handleChangePageSize\"\n    ></el-pagination>\n  </div>\n</template>\n\n<script>\nimport ListView from '@/components/ApproveList/list';\nimport { formatSellingType } from '@/utils';\n\nexport default {\n  data() {\n    return {\n      tableConfig: {\n        showCheckBox: true,\n        align: 'left'\n      }\n      // ,\n      // checkedRows: [],\n      // checkedType: ''\n    };\n  },\n  components: {\n    ListView\n  },\n  props: {\n    itemList: {\n      type: Array,\n      default: () => []\n    },\n    Pager: Object,\n    canEdit: {\n      type: Boolean,\n      required: true,\n      default: false\n    }\n  },\n  methods: {\n    selectionChange(selection) {\n      this.$emit('checked', selection);\n    },\n    // changeCheck() {\n    //   this.$emit('checked', this.checkedRows, this.checkedType);\n    // },\n    // changeSelectPageType(type) {\n    //   this.checkedType = type;\n    //   this.checkedRows = this.itemList;\n    //   this.changeCheck();\n    // },\n    // resetCheckedType() {\n    //   this.checkedType = '';\n    //   this.checkedRows = [];\n    //   this.changeCheck();\n    // },\n\n    handleChangePageIndex(index) {\n      this.$emit('getItemList', index);\n    },\n    handleChangePageSize(size) {\n      this.$emit('getItemList', 1, size);\n    },\n    rowEdit(row) {\n      this.$emit('edit', row);\n    },\n    rowDelink(row) {\n      this.$emit('delink', row);\n    }\n  },\n  computed: {\n    // formatCheckedType() {\n    //   return this.checkedType === 'all'\n    //     ? this.$t('commonAllPage')\n    //     : this.$t('commonCurrentPage');\n    // },\n    tableSchema() {\n      return [\n        { field: 'country', label: this.$t('commonRegion') },\n        { field: 'sku_id', label: this.$t('commonSkuID') },\n        { field: 'sku_name', label: this.$t('commonSkuName'), width: 130 },\n        { field: 'sbs_vendor_id', label: this.$t('commonSBSVendorID') },\n        { field: 'seller_name', label: this.$t('commonSellerName') },\n        { field: 'external_sku_id', label: this.$t('sellerSkuExternalSkuID') },\n        { field: 'selling_type', label: this.$t('commonSellingType'),\n          renderHeader: (h, { column }) => {\n            return h('div', null, [\n              column.label,\n              h(\n                  'el-popover',\n                  {\n                    props: {\n                      placement: 'top',\n                      trigger: 'hover',\n                      'popper-class': 'break-word',\n                      width: '320px',\n                      content: this.$t('commonSellingTypeWithFBS')\n                    }\n                  },\n                  [\n                    h(\n                      'svg-icon',\n                      {\n                        class: 'question question-icon',\n                        props: { iconClass: 'question' },\n                        slot: 'reference'\n                      },\n                      null\n                    )\n                  ]\n                )\n            ]);\n          },\n          render: (schema, row, index, h) => {\n            return formatSellingType(row.selling_type);\n          }\n        },\n        { field: 'barcode', label: this.$t('UPCBarcode') },\n        { field: 'unit_name', label: this.$t('commonUnit') },\n        { field: 'action', label: this.$t('commonAction'), isHidden: !this.canEdit, width: '100px', render: (schema, row, index, h) => ['div',\n          { class: 'action-con' }, [\n              h('span', { class: 'action-edit', on: { click: () => { this.rowEdit(row); } } }, this.$t('commonEdit')),\n              h('span', { class: 'action-delink', on: { click: () => { this.rowDelink(row); } } }, this.$t('commonDelink'))\n            ]\n          ]\n        }\n      ].filter(item => !item.isHidden);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.el-pagination {\n  margin-top: 14px;\n  text-align: center;\n}\n</style>\n\n<style lang=\"scss\">\n.seller-sku-table {\n  .action-con {\n    display: flex;\n    justify-content: space-between;\n    font-size: 14px;\n    .action-edit {\n      color: #3D6ED1;\n      cursor: pointer;\n    }\n    .action-delink {\n      color: #EE4D2D;\n      cursor: pointer;\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/sellerAndShop/sellerSkuInfo/delinkFailedDialog.vue","messages":[{"ruleId":"vue/no-unused-components","severity":2,"message":"The \"ListView\" component has been registered but not used.","line":59,"column":17,"nodeType":"Property","endLine":59,"endColumn":25}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"delink-failed-container\">\n    <el-dialog :title=\"$t('delinkVerificationFailed')\" :visible.sync=\"editVisible\" @close=\"closeDialog\">\n      <div class=\"title\">{{$t('pendingRequest')}}</div>\n      <div class=\"tips-info\">{{$t('pendingRequestFailedTips', { len: requestList.length })}}</div>\n      <el-table :data=\"requestList || []\" border max-height=\"356\">\n        <el-table-column width=\"100px\" :label=\"$t('requestType')\">\n          <template slot-scope=\"scope\">{{orderTypeMap[scope.row.request_type] || ''}}</template>\n        </el-table-column>\n        <el-table-column :label=\"$t('commonRequestID')\">\n          <template slot-scope=\"scope\">\n            <div class=\"order-id\" @click=\"routerToOrder(scope.row)\">{{scope.row.request_id}}</div>\n          </template>\n        </el-table-column>\n        <el-table-column :label=\"$t('commonStatus')\" prop=\"status\">\n          <template slot-scope=\"scope\">{{getStatusText(scope.row)}}</template>\n        </el-table-column>\n        <el-table-column :label=\"$t('commonRequestor')\" prop=\"requester\"></el-table-column>\n        <el-table-column :label=\"$t('commonStatus')\" prop=\"status\">\n          <template slot-scope=\"scope\">\n            <div class=\"order-id\" @click=\"routerToOrder(scope.row)\">{{$t('sellerSkuViewDetail')}}</div>\n          </template>\n        </el-table-column>\n      </el-table>\n      <div class=\"title\">{{$t('pendingRequest')}}</div>\n      <div class=\"tips-info\" v-html=\"$t('stocksFailedTips', { num: stocks })\"></div>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"closeDialog\">{{$t('commonOK')}}</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport ListView from '@/components/ApproveList/list';\nimport { PurchaseRequestStatus, PurchaseOrderStatus, ASNStatusList, FBSInboundStatus } from '@/utils/constant';\nexport default {\n  data() {\n    return {\n      editVisible: false,\n      tableConfig: {\n        maxHeight: 356,\n        align: 'left'\n      },\n      orderTypeMap: {\n        1: 'PR',\n        2: 'PO',\n        3: 'ASN',\n        4: 'FBS_INBOUND'\n      },\n      statusListMap: {\n        1: PurchaseRequestStatus,\n        2: PurchaseOrderStatus,\n        3: ASNStatusList.map(item => ({ ...item, value: Number(item.value) })),\n        4: FBSInboundStatus\n      }\n    };\n  },\n  components: { ListView },\n  props: {\n    visible: {\n      required: true,\n      type: Boolean,\n      default: false\n    },\n    requestList: {\n      required: true,\n      type: Array,\n      default: () => []\n    },\n    stocks: {\n      required: true,\n      type: Number\n    }\n  },\n  watch: {\n    visible: {\n      handler(val) {\n        this.editVisible = val;\n      },\n      immediate: true\n    }\n  },\n  computed: {\n  },\n  methods: {\n    getStatusText(row) {\n      const statusList = this.statusListMap[row.request_type] || [];\n      return (statusList.find(item => item.value === row.status) || {}).label;\n    },\n    closeDialog() {\n      this.$emit('close');\n    },\n    routerToOrder(row) {\n      switch (row.request_type) {\n        case 1:\n          window.open(`/admin/purchase/request/detail/${row.request_id}`);\n          break;\n        case 2:\n          window.open(`/admin/purchase/order/podetail/${row.request_id}`);\n          break;\n        case 3:\n          window.open(`/admin/inbound/asn/detail/${row.request_id}`);\n          break;\n        case 4:\n          window.open(`/admin/fbs/inbound/detail/${row.request_id}`);\n          break;\n        default:\n          return;\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.delink-failed-container {\n  .title {\n    font-weight: 500;\n    font-size: 14px;\n    color: #333333;\n    padding: 15px 0;\n  }\n  .tips-info {\n    color: #333333;\n    font-size: 13px;\n    padding-bottom: 8px;\n  }\n}\n</style>\n\n<style lang=\"scss\">\n@import \"~@/styles/common.scss\";\n.delink-failed-container {\n  .el-dialog__body {\n    padding: 0px 20px 10px;\n  }\n  .num-stocks {\n    color: #4977d4;\n    font-weight: bold;\n  }\n  .order-id {\n    color: #3D6ED1;\n    cursor: pointer;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/sellerAndShop/sellerSkuInfo/editDialog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/sellerAndShop/sellerSkuInfo/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/sellerAndShop/sellerSkuInfo/searchForm.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":2,"column":51,"nodeType":"VIdentifier","messageId":"deprecated","endLine":2,"endColumn":57}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-form class=\"seller-sku-search-form\" @submit.native.prevent=\"onSearch\">\n    <div class=\"search-form-row\">\n      <el-form-item v-for=\"schema in schemaList\" :key=\"schema.field\"\n        :class=\"getColLongClass(schema.field)\" :label=\"schema.label\">\n        <pms-form-item @input=\"modifyForm\" :renderData=\"{ schema, form }\"></pms-form-item>\n      </el-form-item>\n    </div>\n    <el-row class=\"action-row\">\n      <el-form-item class=\"right-action-btn\">\n        <div class=\"list-btn clear-btn\" native-type=\"submit\" @click=\"onReset\">{{$t(\"purchaseRequest.clear\")}}</div>\n        <div class=\"list-btn search-btn\" @click=\"onSearch\">{{$t(\"rule.search\")}}</div>\n        <el-button native-type=\"submit\" class=\"hidden-btn\"></el-button>\n      </el-form-item>\n    </el-row>\n  </el-form>\n</template>\n\n<script>\nimport PMSFormItem, { getSelectOptions } from '@/components/BaseItem/formItem';\nimport { apiGetSellers } from '@/api/FBS/sellerSku';\nimport { formatParams } from '@/utils/formatParams';\n\nexport default {\n  data() {\n    return {\n      sellerIDSelectOptions: []\n    };\n  },\n  props: {\n    form: {\n      type: Object,\n      required: true\n    }\n  },\n  components: {\n    'pms-form-item': PMSFormItem\n  },\n  computed: {\n    isUniversalUser() {\n      return this.$store.getters.isUniversalUser;\n    },\n    regionList() {\n      return [{ label: 'All', value: '' }, ...this.$store.getters.countrySelectList || []];\n    },\n    countryList() {\n      return [...new Set([...this.$store.getters.countryList.map(item => item.country)])];\n    },\n    schemaList() {\n      return [\n        { field: 'country', type: 'select', label: this.$t('commonRegion'),\n          defaultValue: this.isUniversalUser ? '' : this.$store.getters.country,\n          on: {\n            change: (value) => {\n              this.onSearch();\n            }\n          },\n          props: { disabled: !this.isUniversalUser, clearable: true, placeholder: 'Please Select' },\n          getChildren: (h) => getSelectOptions(this.regionList, h)\n        },\n        { field: 'sku_id', type: 'input', label: `${this.$t('commonSkuID')}` },\n        { field: 'seller_id_name', type: 'select', label: `${this.$t('commonSBSVendorID')}/${this.$t('commonSellerName')}`,\n          render: (schema, row, h) => ['el-select', {\n            props: {\n              clearable: true, filterable: true, remote: true,\n              value: this.form.seller_id, 'remote-method': this.getSellers\n            },\n            on: {\n              input: (value) => { this.modifyForm(schema, value); },\n              change: () => {\n                this.sellerIDSelectOptions = []; // 选中的时候清空\n                this.onSearch();\n              }\n            }\n          }, this.sellerIDSelectOptions.map(item => {\n            return h('el-option', { props: { label: item.label, value: item.value }});\n          })]\n        }\n      ];\n    }\n  },\n  methods: {\n    getColLongClass(field) {\n      const longFieldArr = ['seller_id_name'];\n      return longFieldArr.includes(field) ? 'long-col' : '';\n    },\n    modifyForm(schema, value) {\n      this.$emit('modify', schema.field, value);\n    },\n    onSearch() {\n      this.$emit('search');\n    },\n    onReset() {\n      this.schemaList.forEach(schema => {\n        this.$emit('modify', schema.field, schema.defaultValue === null ? undefined : schema.defaultValue || '');\n      });\n      this.onSearch();\n    },\n    getSellers(value) {\n      if (value !== '') {\n        const params = { pageno: 1, count: 20, seller_id_or_name: `${value}`.trim(), country: this.form.country };\n        apiGetSellers(formatParams(params)).then(resp => {\n          if (resp.retcode !== 0) {\n            this.$message.error(resp.info);\n          } else {\n            const { sellers = [] } = resp.data || {};\n            if (Array.isArray(sellers) && sellers.length) {\n              this.sellerIDSelectOptions = sellers.map(item => ({ ...item, value: `${item.seller_id}/${item.seller_name}` }));\n            } else {\n              this.$message.error('This SBS Vendor ID is not exist');\n              this.sellerIDSelectOptions = [];\n            }\n          }\n        }).catch(() => {\n          this.$message.error('Get SBS Vendor ID Failed');\n        });\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.seller-sku-search-form {\n  // margin: 22px 18px 20px 19px;\n  padding: 22px 0 0;\n  .el-col {\n    height: 58px;\n    line-height: 58px;\n  }\n  .search-form-row {\n    display: grid;\n    grid-auto-flow: row dense;\n    grid-gap: 12px;\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n    margin-bottom: 20px;\n  }\n  .long-col {\n    grid-column-start: span 2;\n  }\n  .action-row {\n    margin: -16px -4px -18px 0;\n  }\n  .right-action-btn {\n    padding: 16px 0;\n    .search-btn {\n      background: #3D6ED1;\n      border-radius: 2px;\n      margin-right: 13px;\n    }\n    .clear-btn {\n      color: #000000;\n      border: 1px solid #E3E3E3;\n      background: #ffffff;\n      border-radius: 2px;\n    }\n    .hidden-btn {\n      margin-left: -10px;\n      padding: 0;\n      width: 0;\n      height: 0;\n      visibility: hidden;\n    }\n  }\n}\n</style>\n\n<style lang=\"scss\">\n.seller-sku-search-form {\n  .el-autocomplete {\n    width: 100%;\n  }\n  .el-form-item__label, .el-form-item__content {\n    display: inline-block;\n  }\n  .el-form-item__label {\n    background: #FAFBFD;\n    border-radius: 3px 0 0 3px;\n    font-size: 14px;\n    color: #222933;\n    padding: 0 8px;\n    border: 1px solid #E2E6EC;\n    height: 32px;\n    line-height: 32px;\n  }\n  .el-form-item__content {\n    line-height: 32px;\n    border-left: none;\n    flex: 1;\n  }\n  .search-form-row .el-input:not(.el-date-editor) .el-input__inner {\n    background: #FFFFFF;\n    border: 1px solid #E2E6EC;\n    border-radius: 0 4px 4px 0;\n    border-left: none;\n    padding-left: 8px;\n  }\n  input::placeholder {\n    font-family: Roboto-Regular;\n    font-size: 14px;\n    color: #B5BBC6;\n  }\n  .el-form-item {\n    display: flex;\n    margin-bottom: 0px;\n  }\n  .right-action-btn {\n    .el-form-item__content {\n      display: flex;\n      justify-content: flex-end;\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/sellerAndShop/sellerSkuInfo/validateSkuList.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/sellerAndShop/setting/attachmentVisionDialog.vue","messages":[{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"cb_option\" is not in camelCase.","line":53,"column":5,"nodeType":"Property","endLine":55,"endColumn":6}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-dialog\n    :visible.sync=\"dialogVisible\"\n    width=\"800px\"\n    lock-scroll\n    custom-class=\"pms-new-ui pms-dialog\"\n    :title=\"$t('commonPreviousVersion')\"\n    @close=\"onClose\"\n  >\n    <section v-loading=\"loading\">\n      <el-table :data=\"tableList\">\n        <el-table-column :label=\"$t('commonVersion')\" prop=\"version\"></el-table-column>\n        <el-table-column :label=\"$t('commonCtime')\" prop=\"ctime\"></el-table-column>\n        <el-table-column :label=\"$t('Attachment')\" prop=\"file_name\">\n          <template slot-scope=\"scope\">\n            <span>{{scope.row.file_name}}</span>\n            <span class=\"file-size\">{{formatFileSize(scope.row.file_size)}}</span>\n          </template>\n        </el-table-column>\n        <el-table-column :label=\"$t('commonAction')\">\n          <template slot-scope=\"scope\">\n            <el-button type=\"text\" @click=\"onView(scope.row)\">{{ $t('commonViewDetail') }}</el-button>\n            <el-button type=\"text\" @click=\"onDownload(scope.row)\">{{ $t('commonDownload') }}</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </section>\n    <section slot=\"footer\">\n      <el-pagination\n        small\n        layout=\"prev, pager, next\"\n        background\n        :total=\"total\"\n        :page-size=\"pager.count\"\n        @current-change=\"handleCurrentChange\"\n        class=\"pms-ele-ui pms-pagination pms-text-center\"\n      >\n      </el-pagination>\n    </section>\n  </el-dialog>\n</template>\n\n<script>\nimport { apiGetAttachmentHistory } from '@/api/FBS/sellerAndShop';\nimport axios from 'axios';\nimport { getCsrfHeader } from '@/utils/cookie';\n\nexport default {\n  props: {\n    region: {\n      required: true\n    },\n    cb_option: {\n      required: true\n    },\n    visible: {\n      type: Boolean,\n      required: true,\n      default: false\n    }\n  },\n  data() {\n    return {\n      pager: {\n        count: 10,\n        page_no: 1\n      },\n      total: 0,\n      dialogVisible: false,\n      tableList: [],\n      loading: false\n    };\n  },\n  watch: {\n    visible: {\n      handler(value) {\n        this.dialogVisible = value;\n        if (value) {\n          this.getData();\n        } else {\n          this.tableList = [];\n          this.pager.page_no = 1;\n          this.loading = false;\n        }\n      },\n      immediate: true\n    }\n  },\n  computed: {\n    uploadHeader() {\n      return Object.assign(getCsrfHeader(), this.$store.getters.uploadHeader);\n    }\n  },\n  methods: {\n    formatFileSize(size) {\n      if (!size) return '';\n      return Math.round(size * 100 / 1024) / 100 + `M`;\n    },\n    loadFileToBlob(url) {\n      return new Promise((resolve, reject) => {\n        let urlWithoutHost = url.match(/\\/pms_attachment_[a-z]*\\/\\w+/gi);\n        if (urlWithoutHost) {\n          urlWithoutHost = urlWithoutHost[0];\n        } else {\n          this.$message.error('invalid attachment url');\n          return;\n        }\n        axios\n          .get(urlWithoutHost, {\n            headers: this.uploadHeader,\n            responseType: 'blob',\n            baseURL: ''\n          })\n          .then(res => {\n            const blobData = res.data;\n            resolve(window.URL.createObjectURL(blobData));\n          })\n          .catch(e => {\n            reject(e);\n          });\n      });\n    },\n    onDownload(file) {\n      this.$message.info(this.$t('attachmentDownloading'));\n      this.loadFileToBlob(file.file_address).then(blobUrl => {\n        this._downLoadFileByADom(blobUrl, file.file_name);\n      });\n    },\n    _downLoadFileByADom(url, name) {\n      const aDom = document.createElement('a');\n      aDom.href = url;\n      aDom.download = name;\n      aDom.click();\n    },\n    onView(file) {\n      const fileAddress = file.file_address;\n      this.loadFileToBlob(fileAddress).then(blobUrl => {\n        window.open(`/admin/PDF?file=${blobUrl}`, '_blank');\n      });\n    },\n    handleCurrentChange(index) {\n      this.pager.page_no = index;\n      this.getData();\n    },\n    async getData() {\n      try {\n        this.loading = true;\n        const params = {\n          region: this.region,\n          cb_type: this.cb_option,\n          ...this.pager\n        };\n        const res = await apiGetAttachmentHistory(params);\n        if (res && res.retcode === 0) {\n          this.tableList = res.data.fbs_contract_list || [];\n          this.total = res.data.total || 0;\n        } else {\n          this.$message({ type: 'error', message: res.message });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loading = false;\n      }\n    },\n    onClose() {\n      this.$emit('close');\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.empty-block {\n    display: block;\n    width: 1px;\n    height: 1px;\n  }\n  .no-data {\n    height: 50px;\n    line-height: 50px;\n    text-align: center;\n    color: #757575;\n  }\n  .file-size{\n    background-color: #e3eaff;\n    padding: 4px;\n    vertical-align: middle;\n    border-radius: 4px;\n    font-size: 12px;\n  }\n</style>\n<style lang=\"scss\">\n.pms-dialog {\n  .el-dialog__body {\n    padding: 8px 24px 16px;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/sellerAndShop/setting/configItem.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/sellerAndShop/setting/constant.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/sellerAndShop/setting/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/sellerAndShop/setting/nomiationConfig.vue","messages":[{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":427,"column":31,"nodeType":"ArrowFunctionExpression","messageId":"unexpectedSpace","endLine":427,"endColumn":32,"fix":{"range":[14826,14827],"text":""}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div class=\"pms-new-ui\">\n    <section class=\"pms-clearfix\">\n      <listSearch :components=\"searchComponents\" class=\"list-search-wrapper\" :searchForm=\"searchForm\"></listSearch>\n      <div class=\"actions\">\n        <el-button v-if=\"!isEditing\" class=\"white-blue\" @click=\"handleActionLogClick\">\n          {{ $t('commonActionLog') }}\n        </el-button>\n        <el-button v-if=\"canEdit && !isEditing\" @click=\"onEdit\">\n          {{ $t('commonEdit') }}\n        </el-button>\n        <el-button class=\"white-grey\" v-if=\"isEditing\" @click=\"onCancel\">\n          {{ $t('commonCancel') }}\n        </el-button>\n        <el-button v-if=\"isEditing\" :disabled=\"!canSave\" :loading=\"isSaving\" @click=\"onSave\">\n          {{ $t('commonSave') }}\n        </el-button>\n      </div>\n    </section>\n    <section v-loading=\"loading\">\n      <el-form :model=\"formData\" ref=\"form\" label-width=\"200px\" class=\"form-wrapper\" :rules=\"rules\">\n        <div class=\"config-block\">\n          <div class=\"config-title\">\n            {{ $t('SellerDefaultInfo') }}\n            <el-popover placement=\"top\" width=\"320px\" popper-class=\"break-word\" :content=\"$t('SellerDefaultInfoTips')\">\n              <svg-icon iconClass=\"question\" slot=\"reference\" className=\"question-icon\"></svg-icon>\n            </el-popover>\n          </div>\n          <el-form-item v-for=\"item in defaultInfoSchemas\" :key=\"item.field\" :label=\"item.label\" :prop=\"item.field\">\n            <template slot=\"label\">\n              {{item.label}}\n              <el-popover placement=\"top\" width=\"320\" trigger=\"hover\" :content=\"$t(item.tip)\" v-if=\"item.hasTip\">\n                <svg-icon slot=\"reference\" iconClass=\"question\" className=\"question-icon\"></svg-icon>\n              </el-popover>\n            </template>\n            <template v-if=\"isEditing\">\n              <template v-if=\"item.type == 'email'\">\n                <div class=\"form-component-width email-form-wrapper\">\n                  <el-input v-model=\"formData[item.field]\" class=\"email-input-wrapper\"></el-input>\n                  <el-form-item :prop=\"item.appendField\" class=\"no-colon email-append-field\">\n                    <el-select v-model=\"formData[item.appendField]\" clearable class=\"email-select-wrapper\">\n                      <el-option\n                        v-for=\"option in item.appendFieldOptions\"\n                        :key=\"option.value\"\n                        :label=\"option.label\"\n                        :value=\"option.value\"\n                      ></el-option>\n                    </el-select>\n                  </el-form-item>\n                </div>\n              </template>\n              <template v-else-if=\"item.type === 'attachment'\">\n                <FileListAttachment\n                  class=\"attachment-width\"\n                  ref=\"attachment\"\n                  :limit=\"{ size: 20, count: 1 }\"\n                  accept=\".pdf\"\n                  :attachmentList=\"formData.fbs_contract\"\n                  :mode=\"'edit'\"\n                  width=\"100%\"\n                  @setAttachmentList=\"setAttachmentList\"\n                ></FileListAttachment>\n              </template>\n              <pms-form-item\n                v-else\n                class=\"form-component-width\"\n                @input=\"modifyForm\"\n                :renderData=\"{ schema: item, form: formData }\"\n              ></pms-form-item>\n            </template>\n            <template v-else>\n              <template v-if=\"item.type === 'attachment'\">\n                <FileListAttachment\n                  class=\"attachment-width\"\n                  ref=\"attachment\"\n                  :attachmentList=\"formData.fbs_contract\"\n                  :mode=\"'view'\"\n                  width=\"100%\"\n                ></FileListAttachment>\n                <div class=\"pervious-version-wrapper\" v-if=\"Array.isArray(formData.fbs_contract) && formData.fbs_contract.length\">\n                  <el-button type=\"text\" @click=\"showAttachmentHistory\">{{ $t('commonPreviousVersion') }}</el-button>\n                </div>\n              </template>\n              <span v-else>\n                {{ formatFormData(item.field) || '-' }}\n              </span>\n            </template>\n          </el-form-item>\n        </div>\n        <div class=\"config-block\">\n          <div class=\"config-title\">\n            {{ $t('sellerShopDefaultWarehouse') }}\n            <el-popover\n              placement=\"top\"\n              width=\"320px\"\n              popper-class=\"break-word\"\n              :content=\"$t('sellerShopDefaultWarehouseTips')\"\n            >\n              <svg-icon iconClass=\"question\" slot=\"reference\" className=\"question-icon\"></svg-icon>\n            </el-popover>\n          </div>\n          <el-form-item v-for=\"item in warehouseSchemas\" :key=\"item.field\" :label=\"item.label\" :prop=\"item.field\">\n            <span v-if=\"!isEditing\">{{ formatFormData(item.field) || '-' }}</span>\n            <pms-form-item\n              v-else\n              class=\"form-component-width\"\n              @input=\"modifyForm\"\n              :renderData=\"{ schema: item, form: formData }\"\n            ></pms-form-item>\n          </el-form-item>\n        </div>\n      </el-form>\n    </section>\n    <AttachmentVisionDialog\n      :visible=\"isShowVersionHistory\"\n      @close=\"isShowVersionHistory = false\"\n      :region=\"region\"\n      :cb_option=\"searchForm.cb_option\"\n    />\n    <ActionLog type=\"field\" :visible=\"isShowActionLog\" :params=\"actionLogParams\" @close=\"isShowActionLog = false\" />\n  </div>\n</template>\n\n<script>\nimport { apiGetSellerNominationSetting, apiPostSellerNominationSetting, apiGetPaymentTerm } from '@/api/FBS/sellerAndShop';\nimport ActionLog from '@/components/actionLogDialog/actionLog';\nimport { hasPermission } from '@/utils/permission';\nimport { Permission } from '@/utils/constant';\nimport listSearch from '@/components/common/listSearch';\nimport PMSFormItem from '@/components/BaseItem/formItem';\nimport { getCountryTaxList } from '@/api/purchaseRequest';\nimport FileListAttachment from '@/components/fileListAttachment';\nimport { getWarehouseListByCountry } from '@/api/shopConfig';\nimport AttachmentVisionDialog from './attachmentVisionDialog';\n// import { paymentTermListObj, defaultPaymentTermList } from './constant'; 改为由后端引用\n\nconst cbOptions = [\n  { value: 0, label: 'Local' },\n  { value: 1, label: 'CB' }\n];\nconst contractSigningFormList = [\n  { label: 'sellerContractSigningFormOptionOne', value: 1 },\n  { label: 'sellerContractSigningFormOptionTwo', value: 2 }\n];\nlet originConfigStr = '';\nconst shopeeEmailList = ['@sea.com', '@shopee.com', '@seagroup.com'];\nexport default {\n  name: 'SellerNomiationSetting',\n  components: {\n    'pms-form-item': PMSFormItem,\n    ActionLog,\n    listSearch,\n    FileListAttachment,\n    AttachmentVisionDialog\n  },\n  props: {\n    region: String,\n    editStatusParent: Boolean\n  },\n  data() {\n    return {\n      isEditing: false,\n      isSaving: false,\n      isShowActionLog: false,\n      isShowVersionHistory: false,\n      loading: false,\n      searchForm: {\n        cb_option: 0\n      },\n      formData: {\n        payment_term: '',\n        tax_code: '',\n        tax_rate: '',\n        email_prepend: '',\n        email_append: '',\n        contract_signing_form: 1,\n        fbs_contract: [],\n        default_warehouse: []\n      },\n      taxCodeList: [],\n      paymentTermOptions: [],\n      shopeeEmailList: shopeeEmailList.map(item => ({ label: item, value: item })),\n      isMultipleWhs: false,\n      warehouseList: []\n    };\n  },\n  computed: {\n    canSave() {\n      return originConfigStr !== JSON.stringify(this.formData);\n    },\n    rules() {\n      return {\n        payment_term: {\n          required: true,\n          trigger: 'change',\n          message: this.$t('commonIsRequired', { target: this.$t('paymentTerm') })\n        },\n        tax_code: {\n          required: true,\n          trigger: 'change',\n          message: this.$t('commonIsRequired', { target: this.$t('commonTaxCode') })\n        },\n        email_prepend: {\n          validator: (rules, value, cb) => {\n            if (value && value.indexOf('@') > 0) {\n              return cb(new Error('Shopee BD Email Should not contain the character \"@\"'));\n            }\n            if (this.formData.email_append && !value) {\n              return cb(new Error('Shopee BD Email should be filled in completely'));\n            }\n            return cb();\n          },\n          trigger: 'change'\n        },\n        email_append: {\n          required: !!(this.formData.email_prepend && this.formData.email_prepend.indexOf('@') <= 0),\n          trigger: 'change',\n          message: this.$t('commonIsRequired', { target: this.$t('commonShopeeBDEmail') })\n        },\n        fbs_contract: {\n          required: true,\n          validator: (rules, value, cb) => {\n            if (!Array.isArray(value)) {\n              return cb(new Error('FBS Contract must be array'));\n            }\n            if (value.length < 1) {\n              return cb(new Error('FBS Contract is required'));\n            }\n            return cb();\n          },\n          trigger: 'change'\n        },\n        default_warehouse: {\n          required: true,\n          trigger: 'change',\n          message: this.$t('commonIsRequired', { target: this.$t('sellerDefaultWarehouse') })\n        }\n      };\n    },\n    searchComponents() {\n      return [\n        {\n          name: 'listSelect',\n          isLongCol: true,\n          key: 'cb_option',\n          props: {\n            field: 'cb_option',\n            label: this.$t('commonCBOption'),\n            disabled: this.isEditing,\n            options: cbOptions\n          }\n        }\n      ];\n    },\n    canEdit() {\n      return hasPermission(Permission.SELLER_NOMINATE_SETTING_EDIT);\n    },\n    actionLogParams() {\n      return {\n        show_type: 2,\n        log_type: 'fbs_seller_nominate_config',\n        biz_type: 'FBS_SELLER',\n        object_id: `${this.region}_${this.searchForm.cb_option}`\n      };\n    },\n    defaultInfoSchemas() {\n      return [\n        {\n          type: 'select',\n          label: this.$t('paymentTerm'),\n          field: 'payment_term',\n          options: this.paymentTermOptions,\n          props: {\n            remote: true,\n            'remote-method': this.getPaymentTerm,\n            filterable: true\n          }\n        },\n        {\n          label: this.$t('commonTaxCode'),\n          field: 'tax_code',\n          type: 'select',\n          options: this.taxCodeList\n        },\n        {\n          label: this.$t('commonTaxRate'),\n          field: 'tax_rate',\n          render: (schema, form, h, index) => {\n            return (form.tax_rate * 100) + '%';\n          }\n        },\n        {\n          label: this.$t('commonShopeeBDEmail'),\n          field: 'email_prepend',\n          appendField: 'email_append',\n          appendFieldOptions: this.shopeeEmailList,\n          type: 'email'\n        },\n        {\n          label: this.$t('sellerContractSigningForm'),\n          field: 'contract_signing_form',\n          render: this.getRadioRender,\n          options: contractSigningFormList.map(item => ({ label: this.$t(item.label), value: item.value }))\n        },\n        {\n          label: this.$t('sellerFBSContract'),\n          field: 'fbs_contract',\n          type: 'attachment',\n          hasTip: true,\n          tip: 'sellerFBSContractAttachmentTip'\n        }\n      ];\n    },\n    warehouseSchemas() {\n      return [\n        {\n          label: this.$t('sellerDefaultWarehouse'),\n          field: 'default_warehouse',\n          render: (schema, form, h) => {\n            return [\n              'el-select',\n              {\n                props: {\n                  value: form[schema.field],\n                  multiple: this.isMultipleWhs\n                },\n                on: {\n                  input: value => {\n                    form[schema.field] = value;\n                  }\n                }\n              },\n              this.warehouseList.map(item => {\n                return h(\n                  'el-option',\n                  { props: { label: item.whs_id, value: item.whs_id, disabled: item.disabled } },\n                  null\n                );\n              })\n            ];\n          }\n        }\n      ];\n    }\n  },\n  methods: {\n    showAttachmentHistory() {\n      this.isShowVersionHistory = true;\n    },\n    formatFormData(field) {\n      if (field === 'payment_term') {\n        return this.formatFieldData(this.formData[field], this.paymentTermOptions);\n      }\n      if (field === 'contract_signing_form') {\n        return this.formatFieldData(\n          this.formData[field],\n          contractSigningFormList.map(item => ({ label: this.$t(item.label), value: item.value }))\n        );\n      }\n      if (field === 'default_warehouse') {\n        return Array.isArray(this.formData[field]) ? this.formData[field].join(', ') : this.formData[field];\n      }\n      if (field === 'tax_rate') {\n        return this.formData[field] * 100 + '%';\n      }\n      if (field === 'email_prepend') {\n        return `${this.formData.email_prepend}${this.formData.email_append}`;\n      }\n      return this.formData[field];\n    },\n    formatFieldData(value, list) {\n      return (list.find(item => item.value === value) || {}).label;\n    },\n    setAttachmentList(list) {\n      this.formData.fbs_contract = list;\n      this.$refs.form.clearValidate('fbs_contract');\n    },\n    getRadioRender(schema, form, h) {\n      return [\n        'div',\n        {},\n        (schema.options || []).map(option => {\n          return h(\n            'el-radio',\n            {\n              on: {\n                input: value => {\n                  this.modifyForm(schema, value);\n                }\n              },\n              props: { label: option.value, value: form[schema.field] }\n            },\n            option.label\n          );\n        })\n      ];\n    },\n    setWarehouseList(warehouseList = []) {\n      this.warehouseList = warehouseList\n        .map(item => {\n          const whs_disabled = item.use_sku_is_sn_mgt === 1 ? false : this.searchForm.cb_option !== item.cb_option;\n          const whs_item = {\n            whs_id: item.whs_id,\n            disabled: whs_disabled\n          };\n          return whs_item;\n        });\n      this.isMultipleWhs = warehouseList.some(item => item.multi_whs === 1);\n    },\n    async getPaymentTerm(query) {\n      try {\n        const params = {\n          region: this.region,\n          key: query\n        };\n        const res = await apiGetPaymentTerm(params);\n        if (res && res.retcode === 0) {\n          this.paymentTermOptions = res.data.payment_term_list.map(item => ({ label: item, value: item}));\n        } else {\n          this.$message({ type: 'error', message: res.message || res.info });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e});\n      }\n    },\n    getWarehouseListByCountry() {\n      return new Promise(async (resolve) => {\n        try {\n          const opt = {\n            country: this.region\n          };\n          const res = await getWarehouseListByCountry(opt);\n          if (res && res.retcode === 0) {\n            this.setWarehouseList(res.data.warehouses || []);\n            resolve();\n          }\n        } catch (e) {\n          this.$message({ type: 'error', message: e });\n        }\n      });\n    },\n    async getCountryTaxList() {\n      try {\n        const params = {\n          country: String(this.region).toUpperCase()\n        };\n        const res = await getCountryTaxList(params);\n        if (res && res.retcode === 0) {\n          this.taxCodeList = (res.data.tax_conf_list || []).map(item => ({\n            label: item.tax_code,\n            value: item.tax_code,\n            tax_rate: item.tax_rate\n          }));\n        } else {\n          this.$message({ type: 'error', message: res.info || res.message });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    modifyForm(schema, value) {\n      if (schema.field === 'tax_code') {\n        this.formData.tax_rate = this.findTaxRate(value);\n      }\n      this.formData[schema.field] = value;\n    },\n    handleActionLogClick() {\n      this.isShowActionLog = true;\n    },\n    findTaxRate(code) {\n      return (this.taxCodeList.find(item => item.value === code) || { tax_rate: '' }).tax_rate;\n    },\n    onEdit() {\n      this.isEditing = true;\n    },\n    onCancel() {\n      this.formData = JSON.parse(originConfigStr);\n      this.$nextTick(() => {\n        this.$refs['attachment'] && this.$refs['attachment'][0].initAttachmentList(this.formData.fbs_contract);\n      });\n      this.isEditing = false;\n      this.$nextTick(() => {\n        this.$refs.form.clearValidate();\n      });\n    },\n    onSave() {\n      this.$refs.form.validate(isPass => {\n        if (isPass) {\n          this._submitData();\n        } else {\n          this.$message({ type: 'error', message: 'something error in form' });\n        }\n      });\n    },\n    async _submitData() {\n      try {\n        this.isSaving = true;\n        const params = {\n          region: this.region,\n          cb_type: Number(this.searchForm.cb_option),\n          payment_term: this.formData.payment_term,\n          tax_code: this.formData.tax_code,\n          tax_rate: this.formData.tax_rate,\n          shopee_bd_email: this.formData.email_prepend !== '' ? `${this.formData.email_prepend}${this.formData.email_append}` : '',\n          contract_signing_form: Number(this.formData.contract_signing_form),\n          fbs_contract: this.formData.fbs_contract[0],\n          default_warehouse: Array.isArray(this.formData.default_warehouse) ? this.formData.default_warehouse : [this.formData.default_warehouse]\n        };\n        const { retcode, message } = await apiPostSellerNominationSetting(params);\n        if (retcode === 0) {\n          this.isEditing = false;\n          originConfigStr = JSON.stringify(this.formData);\n          this.$message({ type: 'success', message: this.$t('commonSubmitSuccess')});\n        } else {\n          this.$message({ type: 'error', message });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', e });\n      } finally {\n        this.isSaving = false;\n      }\n    },\n    handleConfigChange(key, value) {\n      this.formData[key] = value;\n    },\n    formatEmail(email) {\n      if (!email) {\n        return {\n          prepend: '',\n          append: ''\n        };\n      }\n      const emailMatch = email.split('@');\n      return {\n        prepend: emailMatch[0],\n        append: `@${emailMatch[1]}`\n      };\n    },\n    async fetchConfig() {\n      try {\n        this.loading = true;\n        const params = { region: this.region, cb_type: Number(this.searchForm.cb_option) };\n        const { retcode, message, data = {} } = await apiGetSellerNominationSetting(params);\n        if (retcode === 0) {\n          if (data.payment_term) {\n            this.formData.payment_term = data.payment_term;\n            this.formData.tax_code = data.tax_code;\n            this.formData.tax_rate = data.tax_rate;\n            this.formData.contract_signing_form = data.contract_signing_form || 1;\n            this.formData.fbs_contract = data.fbs_contract || [];\n            const emailObj = this.formatEmail(data.shopee_bd_email);\n            this.formData.email_prepend = emailObj.prepend;\n            this.formData.email_append = emailObj.append;\n            this.$nextTick(() => {\n              this.$refs.form.clearValidate();\n              this.$refs['attachment'] && this.$refs['attachment'][0].initAttachmentList(this.formData.fbs_contract);\n            });\n            this.getWarehouseListByCountry().then(() => {\n              this.formData.default_warehouse = this.isMultipleWhs ? (data.default_warehouse || '').split(', ') : data.default_warehouse;\n              originConfigStr = JSON.stringify(this.formData);\n            });\n          } else {\n            this.initData();\n            originConfigStr = JSON.stringify(this.formData);\n          }\n        } else {\n          this.$message({ type: 'error', message });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', e });\n      } finally {\n        this.loading = false;\n      }\n    },\n    initData() {\n      this.formData.payment_term = '';\n      this.formData.tax_code = '';\n      this.formData.tax_rate = '';\n      this.formData.fbs_contract = [];\n      this.formData.default_warehouse = [];\n      this.formData.contract_signing_form = 1;\n      this.formData.email_prepend = '';\n      this.formData.email_append = '';\n      this.$nextTick(() => {\n        this.$refs.form.clearValidate();\n        this.$refs['attachment'] && this.$refs['attachment'][0].initAttachmentList(this.formData.fbs_contract);\n      });\n    }\n  },\n  watch: {\n    editStatusParent(nv) {\n      this.isEditing = nv;\n    },\n    isEditing(nv) {\n      this.$emit('setEditStatus', nv);\n    },\n    activeTab(nv) {\n      this.fetchConfig();\n    },\n    'searchForm.cb_option'() {\n      this.fetchConfig();\n    },\n    region: {\n      handler() {\n        new Promise(res => {\n          this.initData();\n          this.getPaymentTerm();\n          this.getCountryTaxList();\n          this.getWarehouseListByCountry();\n          res();\n        }).then(() => {\n          this.fetchConfig();\n        });\n      },\n      immediate: true\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.form-component-width {\n  max-width: 350px;\n}\n.attachment-width {\n  max-width: 600px;\n}\n.form-wrapper {\n  /deep/ .el-form-item__label:not(.no-colon) {\n    &::after {\n      content: ': ';\n      display: inline-block;\n      width: 4px;\n    }\n  }\n}\n.pervious-version-wrapper {\n  padding: 0;\n  margin: 0;\n  line-height: 16px;\n  margin-left: 8px;\n}\n\n.actions {\n  display: flex;\n  justify-content: flex-end;\n}\n\n.config-block {\n  & + .config-block {\n    margin-top: 30px;\n  }\n}\n\n.config-title {\n  margin-bottom: 20px;\n  margin-left: 16px;\n  font-size: 14px;\n  font-weight: bold;\n  color: #333;\n  line-height: 1.5;\n}\n.list-search-wrapper {\n  width: 200px;\n  margin-bottom: 20px;\n  float: left;\n}\n.email-form-wrapper {\n  font-size: 0;\n  .email-input-wrapper {\n    width: 58%;\n    display: inline-block;\n    font-size: 14px;\n    /deep/ .el-input__inner {\n      border-right: 0;\n    }\n  }\n  .email-append-field {\n    width: 42%;\n    display: inline-block;\n    .email-select-wrapper {\n      font-size: 14px;\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/sellerAndShop/setting/requestConfig.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/sellerAndShop/utils.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/shopExit/constant.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/shopExit/detail.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/shopExit/list.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"fbsShopExitList\" is not PascalCase.","line":119,"column":9,"nodeType":"Literal","endLine":119,"endColumn":26,"fix":{"range":[4335,4350],"text":"FbsShopExitList"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div class=\"pms-new-ui\">\n    <LayoutList\n      :activeTab=\"activeTab\"\n      :tabs=\"tabs\"\n      ref=\"layoutList\"\n      moduleName=\"FBS_SHOP_EXIT\"\n      @tabClick=\"onTabClick\"\n      @search=\"onSearch\"\n      @setFilters=\"onSetFilters\"\n    >\n      <section slot=\"content\">\n        <!-- 搜索项 -->\n        <listSearch\n          :components=\"componentSchema\"\n          class=\"block-title\"\n          :searchForm=\"searchForm\"\n          @change=\"onChangeSearchForm\"\n        ></listSearch>\n\n        <div class=\"search-btn-wrapper pms-clearfix\">\n          <div class=\"operation-btn-wrapper\">\n            <el-button class=\"white-blue\" @click=\"onReset\">{{ $t('commonClear') }}</el-button>\n            <el-button @click=\"onResetPageNoSearch\">{{ $t('commonSearch') }}</el-button>\n          </div>\n          <div class=\"\">\n            <template v-if=\"activeTab === 'all' && canMassUpload\">\n              <template>\n                <el-upload\n                  action=\"/api/fbs/shop_exit/upload\"\n                  class=\"el-button white-blue\"\n                  :with-credentials=\"true\"\n                  :on-success=\"onMassUploadSuccess\"\n                  ref=\"massUpload\"\n                  :show-file-list=\"false\"\n                  :data=\"getCsrfData()\"\n                  :headers=\"getCsrfHeader()\"\n                >\n                  {{ $t('commonMassUpload') }}\n                </el-upload>\n                <el-button type=\"text\" @click=\"onDownloadTemplate\"\n                  ><i class=\"el-icon-download\"></i>{{ $t('commonTemplate') }}</el-button\n                >\n              </template>\n              <el-button class=\"white-blue\" @click=\"showExportHistory\">{{ $t('commonUploadHistory') }}</el-button>\n            </template>\n\n            <template v-if=\"activeTab === 'myPA' && canApprove\">\n              <el-button\n                class=\"white-blue\"\n                :loading=\"loadingApprove\"\n                @click=\"onMassOperate('approve')\"\n                >{{ $t('commonMassApprove') }}</el-button\n              >\n              <el-button\n                class=\"white-red\"\n                :loading=\"loadingApprove\"\n                @click=\"onMassOperate('reject')\"\n                >{{ $t('commonMassReject') }}</el-button\n              >\n            </template>\n          </div>\n        </div>\n        <!-- 表格 -->\n        <list-view\n          :dataList=\"tableData\"\n          :config=\"{ ...tableConfig, showCheckBox: activeTab === 'myPA' }\"\n          :tableSchema=\"tableSchema\"\n          @selectionChange=\"onSelectionChange\"\n          v-loading=\"loading\"\n        >\n        </list-view>\n        <section class=\"pms-text-center mt16\">\n          <el-pagination\n            layout=\"sizes, prev, pager, next\"\n            :current-page=\"pager.page_no\"\n            :page-sizes=\"[10, 20, 50, 100]\"\n            :total.sync=\"total\"\n            :page-size=\"pager.count\"\n            @size-change=\"handleSizeChange\"\n            @current-change=\"handleChangePage\"\n          ></el-pagination>\n        </section>\n      </section>\n    </LayoutList>\n    <MassOperateDialog\n      :visible=\"massDialog\"\n      @close=\"onCloseMassDialog\"\n      @refresh=\"onResetPageNoSearch\"\n      :mode=\"massMode\"\n      :selectedList=\"(checkedRows || []).map(item => item.request_id)\"\n    ></MassOperateDialog>\n    <!-- taskType todo -->\n    <ExportHistoryDialog\n      :interval=\"15000\"\n      :taskType=\"FBSShopExitUploadTaskType\"\n      :isUplodHistory=\"true\"\n      :visible=\"isShowExportHistory\"\n      @close=\"closeExportHistory\"\n    ></ExportHistoryDialog>\n  </div>\n</template>\n\n<script>\nimport LayoutList from '@/components/layout/list';\nimport listSearch from '@/components/common/listSearch';\nimport ListView from '@/components/ApproveList/list';\nimport MassOperateDialog from './massOperateDialog';\nimport ExportHistoryDialog from '@/components/ApproveList/exportHistoryDialog';\nimport { getShopListByIdOrName } from '@/api/shopConfig';\nimport { formatParams } from '@/utils/formatParams';\nimport { hasPermission } from '@/utils/permission';\nimport { newCBOptionList, FBSOfficialShopList, Permission } from '@/utils/constant';\nimport { getFBSShopExitList, getFBSShopExitMyPAList } from '@/api/FBS/shopWhiteList';\nimport uploadCsrfDataMixins from '@/mixins/uploadCsrfData';\nimport { statusClass, FBSShopExitStatusList } from './constant';\n\nexport default {\n  name: 'fbsShopExitList',\n  components: {\n    LayoutList,\n    listSearch,\n    ListView,\n    MassOperateDialog,\n    ExportHistoryDialog\n  },\n  mixins: [uploadCsrfDataMixins],\n  data() {\n    const defaultCountry =\n      this.$store.getters.isUniversalUser ? '' : this.$store.getters.country;\n    return {\n      FBSShopExitUploadTaskType: 720,\n      canApprove: false,\n      canMassUpload: false,\n      loading: false,\n      loadingApprove: false,\n      isShowExportHistory: false,\n      massDialog: false,\n      massMode: '',\n      activeTab: 'all',\n      tabs: [\n        { label: 'commonAll', value: 'all' },\n        { label: 'commonMyPendingApprovals', value: 'myPA' }\n      ],\n      tableConfig: {\n        align: 'center',\n        border: false\n      },\n      lastSearchForm: {},\n      pager: {\n        page_no: 1,\n        count: 10\n      },\n      total: 0,\n      searchForm: {\n        region: defaultCountry,\n        shop_id: '',\n        is_official_shop: '',\n        cb_option: '',\n        status: ''\n      },\n      checkedRows: [],\n      defaultCountry,\n      tableData: [],\n      shopIDNameList: [],\n      statusClass,\n      massOperateFunMap: {\n        reject: 'onMassReject',\n        approve: 'onMassApprove'\n      }\n    };\n  },\n  computed: {\n    isUniversalUser() {\n      return this.$store.getters.isUniversalUser;\n    },\n    countryList() {\n      return this.$store.getters.countrySelectList;\n    },\n    componentSchema() {\n      return [\n        {\n          name: 'listSelect',\n          isLongCol: false,\n          props: {\n            field: 'region',\n            label: this.$t('commonRegion'),\n            clearable: this.countryList.length > 1,\n            options:\n              this.countryList.length > 1 ? [{ label: 'All', value: '' }].concat(this.countryList) : this.countryList\n          }\n        },\n        {\n          name: 'listSelect',\n          isLongCol: true,\n          props: {\n            field: 'shop_id',\n            label: this.$t('commonShopIDOrName'),\n            placeholder: 'Please input',\n            options: this.shopIDNameList,\n            clearable: true,\n            filterable: true,\n            'filter-method': this.getShopIdOrName\n          }\n        },\n        {\n          name: 'listSelect',\n          isLongCol: false,\n          props: {\n            field: 'is_official_shop',\n            label: this.$t('FBSOfficialShop'),\n            clearable: true,\n            options: [{ label: 'All', value: '' }, ...FBSOfficialShopList]\n          }\n        },\n        {\n          name: 'listSelect',\n          isLongCol: false,\n          props: {\n            field: 'cb_option',\n            label: this.$t('commonCBOption'),\n            clearable: true,\n            options: [{ label: 'All', value: '' }, ...newCBOptionList]\n          }\n        },\n        {\n          name: 'listSelect',\n          isLongCol: false,\n          hidden: this.activeTab === 'myPA',\n          props: {\n            field: 'status',\n            label: this.$t('commonStatus'),\n            clearable: true,\n            options: [{ label: 'All', value: '' }, ...FBSShopExitStatusList]\n          }\n        }\n      ].filter(item => !item.hidden);\n    },\n    tableSchema() {\n      return [\n        {\n          field: 'region',\n          label: this.$t('commonRegion')\n        },\n        {\n          field: 'request_id',\n          minWidth: '180px',\n          label: this.$t('commonExitRequestID')\n        },\n        {\n          field: 'shop_id',\n          label: this.$t('commonShopID')\n        },\n        {\n          field: 'shop_name',\n          label: this.$t('commonShopName')\n        },\n        {\n          field: 'is_official_shop',\n          label: this.$t('FBSOfficialShop'),\n          render: (schema, row) => {\n            return this.formatOfficialShop(row.is_official_shop);\n          }\n        },\n        {\n          field: 'cb_option',\n          label: this.$t('commonCBOption'),\n          render: (schema, row, index, h) => {\n            return this.formatCBOption(row.cb_option);\n          }\n        },\n        {\n          columnKey: 'status',\n          field: 'status',\n          label: this.$t('commonStatus'),\n          width: '130px',\n          render: (schema, row) => {\n            return [\n              'span',\n              { class: `pms-status-sign pms-status-sign-${this.statusClass[row.status]}` },\n              this.formatStatus(row)\n            ];\n          }\n        },\n        {\n          columnKey: 'action',\n          field: 'action',\n          label: this.$t('commonAction'),\n          align: 'left',\n          width: '200px',\n          render: (schema, row, index, h) => {\n            return [\n              'el-button',\n              {\n                props: { type: 'text' },\n                on: { click: () => this.onDetail(row) }\n              },\n              this.$t('commonDetail')\n            ];\n          }\n        }\n      ];\n    }\n  },\n  created() {\n    this.canApprove = hasPermission(Permission.APPROVE_SHOP_EXIT_REQUEST);\n    this.canMassUpload = hasPermission(Permission.MASS_UPLOAD_SHOP_EXIT_REQUEST);\n  },\n  methods: {\n    // searchSchema methods\n    getShopIdOrName(value) {\n      if (value === '') return;\n      const params = {\n        search_type: 0,\n        shop_id_or_name: String(value),\n        page_no: 1,\n        count: 20\n      };\n      getShopListByIdOrName(params)\n        .then(resp => {\n          if (resp.retcode !== 0) {\n            this.$message.error(resp.info);\n            this.shopIDNameList = [];\n          } else {\n            const { shop_list } = resp.data || {};\n            if (Array.isArray(shop_list) && shop_list.length) {\n              const shopListFilterCountry = this.searchForm.region\n                ? shop_list.filter(\n                  item => item.country === this.searchForm.region\n                )\n                : shop_list;\n              this.shopIDNameList = shopListFilterCountry.map(item => ({\n                value: item.shop_id,\n                label: `${item.shop_id}(${item.shop_name})`\n              }));\n            } else {\n              this.shopIDNameList = [];\n              this.$message.error('This Shop ID/Name is not exist');\n            }\n          }\n        })\n        .catch(() => {\n          this.$message.error('Get Shop Failed');\n          this.shopIDNameList = [];\n        });\n    },\n\n    onMassUploadSuccess(res, file, fileList) {\n      if (res && res.retcode !== 0) {\n        this.$message.error(res.info || res.message);\n      } else {\n        this.$message.success(this.$t('commonAsyncUploadSuccessNewTips'));\n        this.onResetPageNoSearch();\n      }\n    },\n\n    // export methods\n    showExportHistory() {\n      this.isShowExportHistory = true;\n    },\n    closeExportHistory() {\n      this.isShowExportHistory = false;\n    },\n    onDownloadTemplate() {\n      window.open('/admin/data/massUploadShopExitTemplate.xlsx');\n    },\n\n    // mass operate methods\n    onShowMassDialog(mode) {\n      this.massMode = mode;\n      this.massDialog = true;\n    },\n    onCloseMassDialog() {\n      this.massDialog = false;\n      this.massMode = '';\n    },\n    onMassOperate(type) {\n      if (this.checkedRows.length < 1) {\n        return this.$message({\n          type: 'error',\n          message: this.$t('commonPleaseChooseAtLeastOneOption')\n        });\n      }\n      this[this.massOperateFunMap[type]] && this[this.massOperateFunMap[type]](type);\n    },\n    onMassApprove() {\n      this.onShowMassDialog('approve');\n    },\n    onMassReject() {\n      this.onShowMassDialog('reject');\n    },\n\n    // table methods\n    onSelectionChange(selections) {\n      this.checkedRows = selections;\n    },\n    onDetail(row) {\n      this.$router.push(`/admin/fbs/shopExit/detail/${row.request_id}`);\n      this.$refs.layoutList && this.$refs.layoutList.cacheSearchForm(this.lastSearchForm);\n    },\n\n    // format methods\n    formatStatus(row) {\n      let text = (FBSShopExitStatusList.find(item => item.value === row.status) || { label: '' }).label; ;\n      if (row.status === 1) { // 1 = pending approval\n        text = `${text}: ${row.pending_role_name}`;\n      }\n      return text;\n    },\n    formatCBOption(value) {\n      const statusText = (newCBOptionList.find(item => item.value === value) || { label: '' }).label;\n      return statusText || '';\n    },\n\n    formatOfficialShop(value) {\n      const statusText = (FBSOfficialShopList.find(item => item.value === value) || { label: '' }).label;\n      return statusText || '';\n    },\n    // layoutlist methods\n    onChangeSearchForm({ value, field }) {\n      this.onResetPageNoSearch();\n    },\n    onTabClick(activeTab) {\n      this.activeTab = activeTab;\n      this.onResetPageNoSearch();\n    },\n    onSetFilters(filters) {\n      this.activeTab = filters.activeTab;\n      Object.entries(filters.searchParams).map(([key, value]) => {\n        if (key === 'page_no' || key === 'count') {\n          this.pager[key] = value;\n        } else {\n          this.$set(this.searchForm, key, value);\n        }\n      });\n    },\n\n    // page methods\n    onReset() {\n      Object.keys(this.searchForm).forEach(key => {\n        if (key === 'region' && !this.isUniversalUser) {\n          this.searchForm[key] = this.defaultCountry;\n          return;\n        }\n        this.searchForm[key] = '';\n      });\n      this.onResetPageNoSearch();\n    },\n    handleChangePage(page_no) {\n      this.pager.page_no = page_no;\n      this.onSearch();\n    },\n    handleSizeChange(count) {\n      this.pager.count = count;\n      this.onResetPageNoSearch();\n    },\n    onResetPageNoSearch() {\n      this.handleChangePage(1);\n    },\n    // search methods\n    formatSearchParams() {\n      const params = formatParams({\n        shop_id: this.searchForm.shop_id ? Number(this.searchForm.shop_id) : '',\n        is_official_shop: this.searchForm.is_official_shop,\n        cb_option: this.searchForm.cb_option,\n        region: this.searchForm.region\n      });\n      if (this.activeTab === 'all' && this.searchForm.status) {\n        params.status = this.searchForm.status;\n      }\n      return params;\n    },\n    async onSearch() {\n      try {\n        this.loading = true;\n        const params = {\n          ...this.pager,\n          ...this.formatSearchParams()\n        };\n        let func = () => {};\n        if (this.activeTab === 'all') {\n          func = getFBSShopExitList;\n        }\n        if (this.activeTab === 'myPA') {\n          func = getFBSShopExitMyPAList;\n        }\n        const res = await func(params);\n        // setTimeout(() => {\n        // const res = {\n        //   retcode: 0,\n        //   message: 'commodo',\n        //   data: {\n        //     total: 10,\n        //     page_no: 1,\n        //     page_size: 10,\n        //     request_list: [\n        //       {\n        //         request_id: 'mollit adipisicing in laboris labore',\n        //         shop_id: 123,\n        //         shop_name: 'laboris aliqua laborum',\n        //         region: 'esse incidid',\n        //         cb_option: 1,\n        //         is_official_shop: 1,\n        //         status: 1\n        //       },\n        //       {\n        //         request_id: 'irure exercitation veniam',\n        //         shop_id: 111,\n        //         shop_name: 'quis reprehenderit',\n        //         region: 'Lorem in d',\n        //         cb_option: 0,\n        //         is_official_shop: 2,\n        //         status: 2\n        //       }\n        //     ]\n        //   }\n        // };\n        if (res && res.retcode === 0) {\n          this.tableData = res.data.request_list || [];\n          this.total = res.data.total || 0;\n          this.$refs.checkAllColumn && this.$refs.checkAllColumn.resetCheckedType();\n          this.lastSearchForm = params;\n        } else {\n          this.$message({ type: 'error', message: res.info || res.message });\n        }\n        // }, 1000);\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.operation-btn-wrapper {\n  float: right;\n  border-bottom: 1px solid #ededed;\n}\n.search-btn-wrapper {\n  margin: 16px 0;\n  border-bottom: 1px solid $border_color;\n  padding-bottom: 16px;\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/shopExit/massOperateDialog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/shopWhiteList/actionlog.vue","messages":[{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"shop_id\" is not in camelCase.","line":55,"column":5,"nodeType":"Property","endLine":57,"endColumn":6}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-dialog\n    :visible.sync=\"dialogVisible\"\n    width=\"620px\"\n    lock-scroll\n    custom-class=\"pms-dialog\"\n    :title=\"$t('FBSShopActionLog')\"\n    @close=\"onClose\"\n  >\n    <section v-loading=\"loading\" class=\"log-item-wrapper\">\n      <h3 class=\"shop-title\">{{$t('commonShopID')}} : {{shop_id}}</h3>\n      <div v-if=\"tableList.length\" class=\"log-content-wrapper\">\n        <el-row class=\"log-item\" v-for=\"(log, index) in tableList\" :key=\"index\">\n          <el-col :span=\"1\">\n            <i\n              class=\"icon-arrow el-icon-caret-bottom\"\n              :class=\"{'is-expanded': log.isExpand }\"\n              @click=\"onToggleExpand(log)\"\n            ></i>\n          </el-col>\n          <el-col\n            :span=\"11\"\n            class=\"log-item-operator\"\n          >{{$t('commonOperator')}}: {{log.operator || 'N/A'}}</el-col>\n          <el-col :span=\"11\" :offset=\"1\" class=\"log-item-time\">\n            {{$t('commonOperationTime')}}:\n            {{moment(log.operation_time * 1000).format('YYYY-MM-DD HH:mm')}}\n          </el-col>\n          <div class=\"clearfix-block\"></div>\n          <el-row v-if=\"log.isExpand\">\n            <el-col :offset=\"1\" :span=\"23\">\n              <el-table class=\"pms-log-table log-table\" :data=\"log.content\">\n                <el-table-column :label=\"$t('commonLogModifyField')\" prop=\"field\"></el-table-column>\n                <el-table-column :label=\"$t('commonLogBefore')\" prop=\"before\"></el-table-column>\n                <el-table-column :label=\"$t('commonLogAfter')\" prop=\"after\"></el-table-column>\n              </el-table>\n            </el-col>\n          </el-row>\n        </el-row>\n      </div>\n      <div v-else class=\"pms-ele-ui no-data\">{{$t('commonNoData')}}</div>\n    </section>\n    <section slot=\"footer\">\n      <el-button class=\"list-btn\" @click=\"onClose\">{{$t('commonClose')}}</el-button>\n    </section>\n  </el-dialog>\n</template>\n\n<script>\nimport { getShopWhiteActionLog } from '@/api/FBS/shopWhiteList';\nimport moment from 'moment';\n\nexport default {\n  props: {\n    shop_id: {\n      required: true\n    },\n    visible: {\n      type: Boolean,\n      required: true,\n      default: false\n    }\n  },\n  data() {\n    return {\n      dialogVisible: false,\n      tableList: [],\n      loading: false\n    };\n  },\n  watch: {\n    visible(value) {\n      this.dialogVisible = value;\n      if (value) {\n        this.getActionLog();\n      }\n    }\n  },\n  methods: {\n    moment,\n    onToggleExpand(item) {\n      item.isExpand = !item.isExpand;\n    },\n    async getActionLog() {\n      try {\n        this.loading = true;\n        const params = {\n          shop_id: this.shop_id\n        };\n        const res = await getShopWhiteActionLog(params);\n        if (res && res.retcode === 0) {\n          this.tableList = (res.data.list || []).map(item => ({\n            ...item,\n            isExpand: false\n          }));\n        } else {\n          this.$message({ type: 'error', message: res.info || res.message });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loading = false;\n      }\n    },\n    onClose() {\n      this.$emit('close');\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n@import \"~@/styles/variables.scss\";\n.log-item-wrapper {\n  max-height: 500px;\n  overflow: auto;\n  .log-item {\n    font-size: 14px;\n    line-height: 1.2em;\n    padding: 12px 0px;\n    border-top: 1px solid $grey;\n    &:first-child {\n      margin-top: 0;\n      border-top: 0;\n    }\n    .icon-arrow {\n      font-size: 18px;\n      color: $blue;\n      transition: all 0.3s;\n      cursor: pointer;\n      &.is-expanded {\n        transform: rotate(180deg);\n      }\n    }\n  }\n  .log-item-time {\n    margin-left: 4px;\n  }\n  .log-table {\n    margin: 8px 0;\n  }\n  .shop-title {\n    font-size: 14px;\n    line-height: 1.2em;\n    margin-bottom: 8px;\n  }\n  .log-content-wrapper {\n    max-height: 400px;\n    overflow: auto;\n    border: 1px solid $grey;\n    border-left: 0;\n    border-right: 0;\n  }\n  .clearfix-block {\n    overflow: hidden;\n    width: 100%;\n  }\n}\n</style>\n<style lang=\"scss\">\n@import \"~@/styles/common.scss\"; // ~@ = @ = 'src' webpack alias path\n.pms-dialog {\n  .el-dialog__body {\n    padding: 8px 24px 16px;\n  }\n}\n.pms-log-table {\n  &.el-table {\n    .el-table__header-wrapper {\n      th {\n        background-color: #f5f5f5;\n        font-size: 12px;\n        line-height: 1.2em;\n        font-weight: normal;\n        padding: 4px 0;\n        .cell {\n          word-break: break-word;\n        }\n      }\n    }\n    .el-table__body {\n      td {\n        line-height: 1.2em;\n        padding: 4px 0;\n        .cell {\n          font-size: 12px;\n          word-break: break-word;\n        }\n      }\n    }\n  }\n  .no-data {\n    height: 50px;\n    line-height: 50px;\n    text-align: center;\n    color: #757575;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/shopWhiteList/createShopWhiteDialog.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":30,"column":101,"nodeType":"VIdentifier","messageId":"deprecated","endLine":30,"endColumn":107}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-dialog\n    :visible.sync=\"dialogVisible\"\n    width=\"1200px\"\n    :close-on-click-modal=\"false\"\n    :close-on-press-escape=\"false\"\n    lock-scroll\n    custom-class=\"pms-dialog pms-ele-ui fbs-createShopWhiteList-dialog\"\n    :title=\"$t('FBSNewFBSShopWhiteList')\"\n    @close=\"onClose\"\n  >\n    <section class=\"step-wrapper\">\n      <ul class=\"step-ul pms-clearfix\">\n        <li\n          v-for=\"(item, index) in steps\"\n          :key=\"index\"\n          class=\"pms-float-left step-li\"\n          :class=\"{'is-active': index + 1 == currentStep }\"\n        >\n          <span class=\"step-number\">{{index + 1}}</span>\n          <span class=\"step-label\">{{$t(item)}}</span>\n          <span class=\"step-line\" v-if=\"index + 1 !== steps.length\"></span>\n        </li>\n      </ul>\n    </section>\n    <section v-if=\"currentStep === 1\">\n      <el-row :gutter=\"40\">\n        <el-col :span=\"13\" class=\"search-shop-block\">\n          <h5 class=\"shop-title\">{{$t('FBSSearchShop')}}</h5>\n          <el-input v-model=\"searchText\" :placeholder=\"$t('FBSSearchShopPlaceholder')\" @keyup.enter.native=\"onSearchShop\">\n            <i slot=\"suffix\" class=\"el-icon-search search-icon\" @click=\"onSearchShop\"></i>\n          </el-input>\n          <el-table\n            border\n            :data=\"searchShopList\"\n            class=\"search-shop-table\"\n            v-loading=\"loadingSearch\"\n          >\n            <el-table-column :label=\"$t('commonShopID')\" prop=\"shop_id\"></el-table-column>\n            <el-table-column :label=\"$t('commonShopName')\" prop=\"shop_name\"></el-table-column>\n            <el-table-column :label=\"$t('commonRegion')\" prop=\"region\" width=\"70px\"></el-table-column>\n            <el-table-column :label=\"$t('FBSOfficialShop')\" prop=\"official_shop\" width=\"100px\">\n              <template slot-scope=\"scope\">{{formatOfficialShop(scope.row.official_shop)}}</template>\n            </el-table-column>\n            <el-table-column :label=\"$t('commonShopStatus')\" prop=\"shop_status\" width=\"100px\">\n              <template slot-scope=\"scope\">{{formatShopStatus(scope.row.shop_status)}}</template>\n            </el-table-column>\n            <el-table-column :label=\"$t('commonAction')\" width=\"80px\">\n              <template slot-scope=\"scope\">\n                <el-button\n                  type=\"text\"\n                  class=\"link-btn\"\n                  :disabled=\"scope.row.disabled\"\n                  @click=\"onAddShop(scope.row)\"\n                >{{scope.row.disabled ? $t('FBSAdded'): $t('FBSAdd') + ' >'}}</el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n        </el-col>\n        <el-col :span=\"11\" class=\"search-shop-block\">\n          <h5 class=\"shop-title\">{{`${$t('FBSNewShopAdd')} (${addShopList.length})`}}</h5>\n          <el-table border :data=\"addShopList\">\n            <el-table-column :label=\"$t('commonShopID')\" prop=\"shop_id\"></el-table-column>\n            <el-table-column :label=\"$t('commonShopName')\" prop=\"shop_name\"></el-table-column>\n            <el-table-column :label=\"$t('commonAction')\" width=\"80px\">\n              <template slot-scope=\"scope\">\n                <el-button\n                  type=\"text\"\n                  class=\"link-btn\"\n                  @click=\"onRemoveShop(scope.row, scope.$index)\"\n                >{{$t('commonRemove')}}</el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n        </el-col>\n      </el-row>\n    </section>\n    <section v-else>\n      <div class=\"inbound-limit-tips\">\n        <div class=\"limit-icon\">\n          <svg-icon iconClass=\"srmTips\" className=\"limit-icon-svg\"></svg-icon>\n        </div>\n        <div class=\"limit-text\">\n          <h3 class=\"limit-title\">{{$t('FBSInboundLimitsRule')}}</h3>\n          <p class=\"limit-content\">1. {{$t('FBSInboundLimitRuleNonNegativeInteger')}}</p>\n          <p class=\"limit-content\">2. {{$t('FBSInboundLimitRuleMaxGreaterThanMin')}}</p>\n          <p class=\"limit-content\">3. {{$t('FBSInboundLimitRuleMaxQtyGreaterThanMinSku')}}</p>\n        </div>\n      </div>\n      <el-row class=\"mass-fill-wrapper\">\n        <el-col :span=\"5\" class=\"mass-fill-col\">\n          <span class=\"mass-fill-label\">{{$t('commonWarehouse')}}</span>\n          <el-select v-model=\"mass.whs_id_list\" multiple :multiple-limit=\"isMultipleWhs ? 0 : 1\">\n            <el-option\n              v-for=\"item in warehouseList\"\n              :key=\"item.whs_id\"\n              :label=\"item.whs_id\"\n              :value=\"item.whs_id\"\n            ></el-option>\n          </el-select>\n        </el-col>\n        <el-col :span=\"4\" class=\"mass-fill-col\">\n          <span class=\"mass-fill-label\">{{$t('FBSMinSKUPerInbound')}}</span>\n          <el-input v-model.number=\"mass.min_sku_per_inbound\"></el-input>\n        </el-col>\n        <el-col :span=\"4\" class=\"mass-fill-col\">\n          <span class=\"mass-fill-label\">{{$t('FBSMinQtyPerInbound')}}</span>\n          <el-input v-model.number=\"mass.min_qty_per_inbound\"></el-input>\n        </el-col>\n        <el-col :span=\"4\" class=\"mass-fill-col\">\n          <span class=\"mass-fill-label\">{{$t('FBSMaxSKUPerInbound')}}</span>\n          <el-input v-model.number=\"mass.max_sku_per_inbound\"></el-input>\n        </el-col>\n        <el-col :span=\"4\" class=\"mass-fill-col\">\n          <span class=\"mass-fill-label\">{{$t('FBSMaxQtyPerInbound')}}</span>\n          <el-input v-model.number=\"mass.max_qty_per_inbound\"></el-input>\n        </el-col>\n        <el-col :span=\"3\" class=\"mass-fill-col mass-fill-btn-col\">\n          <el-button\n            class=\"list-btn white-blue fill-btn\"\n            @click=\"onMassFill\"\n          >{{$t('FBSApplyToSelected')}}</el-button>\n        </el-col>\n      </el-row>\n      <el-table :data=\"shopConfigTable\" border @selection-change=\"onChangeSelection\">\n        <el-table-column type=\"selection\" width=\"35px\"></el-table-column>\n        <el-table-column :label=\"$t('commonShopID')\" prop=\"shop_id\" width=\"70px\"></el-table-column>\n        <el-table-column :label=\"$t('commonShopName')\" prop=\"shop_name\" width=\"100px\"></el-table-column>\n        <el-table-column :label=\"$t('commonRegion')\" prop=\"region\" width=\"70px\"></el-table-column>\n        <el-table-column :label=\"$t('FBSOfficialShop')\" prop=\"official_shop\" width=\"70px\">\n          <template slot-scope=\"scope\">{{formatOfficialShop(scope.row.official_shop)}}</template>\n        </el-table-column>\n        <el-table-column :label=\"$t('commonSeller')\" :width=\"140\">\n          <template slot-scope=\"scope\">\n            <el-autocomplete\n              :class=\"{'error-input': scope.row.isEmptySupplierId}\"\n              popper-class=\"pms-ele-ui supplierIDCompleteWrapperWidth\"\n              class=\"el-autocomplete_width_100\"\n              v-model=\"scope.row.sbs_vendor_id\"\n              :fetch-suggestions=\"getVendorSiteID\"\n              clearable\n              :placeholder=\"$t('commonVendorSiteIDPlaceholder')\"\n              @select=\"(...argu) => handleVendorSiteIDSelect(scope.row, ...argu)\"\n              @clear=\"(...argu) => handleVendorSiteIDClear(scope.row)\"\n            ></el-autocomplete>\n          </template>\n        </el-table-column>\n        <el-table-column :label=\"$t('commonSellerName')\" prop=\"supplier_name\"></el-table-column>\n        <el-table-column :label=\"$t('commonWarehouse')\" width=\"110px\">\n          <template slot-scope=\"scope\">\n            <el-select\n              multiple\n              :multiple-limit=\"isMultipleWhs ? 0 : 1\"\n              v-model=\"scope.row.whs_id_list\"\n              :class=\"{'error-input': scope.row.isEmptyWhs}\"\n              @remove-tag=\"(...argu) => onRemoveTag(scope.row, ...argu)\"\n            >\n              <el-option\n                v-for=\"item in warehouseList\"\n                :key=\"item.whs_id\"\n                :label=\"item.whs_id\"\n                :value=\"item.whs_id\"\n                :disabled=\"isInvalidWarehouse(scope.row,item)\"\n              ></el-option>\n            </el-select>\n          </template>\n        </el-table-column>\n        <el-table-column :label=\"$t('FBSMinSKUPerInbound')\">\n          <template slot-scope=\"scope\">\n            <el-input\n              v-model.number=\"scope.row.min_sku_per_inbound\"\n              :class=\"{'error-input': scope.row.isErrorInput}\"\n            ></el-input>\n          </template>\n        </el-table-column>\n        <el-table-column :label=\"$t('FBSMinQtyPerInbound')\">\n          <template slot-scope=\"scope\">\n            <el-input\n              v-model.number=\"scope.row.min_qty_per_inbound\"\n              :class=\"{'error-input': scope.row.isErrorInput}\"\n            ></el-input>\n          </template>\n        </el-table-column>\n        <el-table-column :label=\"$t('FBSMaxSKUPerInbound')\">\n          <template slot-scope=\"scope\">\n            <el-input\n              v-model.number=\"scope.row.max_sku_per_inbound\"\n              :class=\"{'error-input': scope.row.isEmptyInput || scope.row.isErrorInput}\"\n            ></el-input>\n          </template>\n        </el-table-column>\n        <el-table-column :label=\"$t('FBSMaxQtyPerInbound')\">\n          <template slot-scope=\"scope\">\n            <el-input\n              v-model.number=\"scope.row.max_qty_per_inbound\"\n              :class=\"{'error-input': scope.row.isEmptyInput || scope.row.isErrorInput }\"\n            ></el-input>\n          </template>\n        </el-table-column>\n        <el-table-column :label=\"$t('commonAction')\" width=\"75px\">\n          <template slot-scope=\"scope\">\n            <el-button\n              type=\"text\"\n              class=\"link-btn\"\n              @click=\"onRemoveConfigShop(scope.$index)\"\n            >{{$t('commonRemove')}}</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <div class=\"error-box\" v-if=\"hasEmptyInput\">\n        <p\n          class=\"error-tips\"\n          v-if=\"hasEmptyInput\"\n        >Vendor Site Id/Warehouse/Max #Sku Per Inbound/Min #Sku Per Inbound/ Max Qty Per Inbound/Min Qty Per Inbound is required</p>\n      </div>\n    </section>\n    <section slot=\"footer\">\n      <div v-if=\"currentStep < 2\">\n        <el-button class=\"list-btn white-grey\" @click=\"onClose\">{{$t('commonCancel')}}</el-button>\n        <el-button\n          class=\"list-btn\"\n          :disabled=\"!addShopList.length\"\n          @click=\"onNext\"\n        >{{$t('commonNext')}}</el-button>\n      </div>\n      <div v-else>\n        <el-button class=\"list-btn white-grey\" @click=\"onBack\">{{$t('commonBack')}}</el-button>\n        <el-button\n          class=\"list-btn\"\n          :loading=\"loadingConfirm\"\n          @click=\"onConfirm\"\n        >{{$t('commonConfirm')}}</el-button>\n      </div>\n    </section>\n  </el-dialog>\n</template>\n\n<script>\nimport moment from 'moment';\nimport {\n  searchShopInFBS,\n  getShopDefaultLimits,\n  addShopsToWhiteList\n} from '@/api/FBS/shopWhiteList';\nimport { FBSOfficialShopList, shopStatusList } from '@/utils/constant';\nimport { getWarehouseListByCountry } from '@/api/shopConfig';\nimport { getSupplierList } from '@/api/supplier';\n\nexport default {\n  props: {\n    country: {\n      type: String,\n      required: true\n    },\n    visible: {\n      type: Boolean,\n      required: true,\n      default: false\n    }\n  },\n  data() {\n    return {\n      searchText: '',\n      searchShopList: [],\n      mass: {\n        whs_id_list: [],\n        min_sku_per_inbound: '',\n        min_qty_per_inbound: '',\n        max_sku_per_inbound: '',\n        max_qty_per_inbound: ''\n      },\n      hasEmptyInput: false,\n      selection: [],\n      warehouseList: [],\n      shopConfigTable: [],\n      addShopList: [],\n      steps: ['FBSSearchShop', 'FBSSetShopConfigs'],\n      currentStep: 1,\n      formData: {},\n      dialogVisible: false,\n      loadingSearch: false,\n      loadingConfirm: false,\n      isMultipleWhs: false,\n      defaultLimit: {\n        minSku: '',\n        maxSku: '',\n        minQty: '',\n        maxQty: ''\n      }\n    };\n  },\n  watch: {\n    visible: {\n      handler(value) {\n        this.dialogVisible = value;\n        if (value) {\n          this.getWarehouseListByCountry();\n          this.getDefaultLimits();\n        } else {\n          this.initData();\n        }\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    moment,\n    initData() {\n      this.formData = {};\n      this.searchText = '';\n      this.searchShopList = [];\n      this.addShopList = [];\n      this.shopConfigTable = [];\n      this.hasEmptyInput = false;\n      this.selection = [];\n      this.currentStep = 1;\n      this.mass = {\n        whs_id_list: [],\n        min_sku_per_inbound: '',\n        min_qty_per_inbound: '',\n        max_sku_per_inbound: '',\n        max_qty_per_inbound: ''\n      };\n    },\n    checkData() {\n      let error = true;\n      error = this.shopConfigTable.some(item => {\n        if (item.sbs_vendor_id === '') {\n          item.isEmptySupplierId = true;\n        } else {\n          item.isEmptySupplierId = false;\n        }\n        if (!item.whs_id_list.length) {\n          item.isEmptyWhs = true;\n        } else {\n          item.isEmptyWhs = false;\n        }\n        if (\n          item.max_sku_per_inbound === '' ||\n          item.max_qty_per_inbound === ''\n        ) {\n          item.isEmptyInput = true;\n        } else {\n          item.isEmptyInput = false;\n        }\n        return item.isEmptySupplierId || item.isEmptyWhs || item.isEmptyInput;\n      });\n      if (error) {\n        this.hasEmptyInput = true;\n      } else {\n        this.hasEmptyInput = false;\n        error = this.shopConfigTable.some(item => {\n          if (\n            item.min_sku_per_inbound >= item.max_sku_per_inbound ||\n            item.min_qty_per_inbound >= item.max_qty_per_inbound ||\n            item.min_sku_per_inbound >= item.max_qty_per_inbound\n          ) {\n            item.isErrorInput = true;\n            return true;\n          } else {\n            item.isErrorInput = false;\n            return false;\n          }\n        });\n      }\n      return error;\n    },\n    async onConfirm() {\n      try {\n        if (this.checkData()) return;\n        this.loadingConfirm = true;\n        const params = {\n          country: this.country,\n          shops: this.shopConfigTable.map(item => {\n            return {\n              shop_id: item.shop_id,\n              whs_id_list: item.whs_id_list,\n              vendor_site_id: item.vendor_site_id,\n              min_sku_per_inbound: item.min_sku_per_inbound || 0,\n              max_sku_per_inbound: item.max_sku_per_inbound,\n              min_qty_per_inbound: item.min_qty_per_inbound || 0,\n              max_qty_per_inbound: item.max_qty_per_inbound,\n              sbs_vendor_id: item.sbs_vendor_id\n            };\n          })\n        };\n        const res = await addShopsToWhiteList(params);\n        if (res && res.retcode === 0) {\n          this.$message({ type: 'success', message: this.$t('commonSuccess') });\n          this.$emit('refresh');\n          this.onClose();\n        } else {\n          this.$message({ type: 'error', message: res.info || res.message });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loadingConfirm = false;\n      }\n    },\n    onChangeSelection(list) {\n      this.selection = list;\n    },\n    onRemoveTag(row, value) {\n      if (row.orginal_whs_id_list.includes(value)) {\n        row.whs_id_list.push(value);\n      }\n    },\n    async getVendorSiteID(query = '', cb) {\n      try {\n        const params = {\n          pageno: 1,\n          count: 20,\n          key: `${query}`.trim(),\n          approval_country: this.country,\n          merchant_type: 'SELLER' // 这里只能查询seller的数据\n        };\n        const resp = await getSupplierList(params);\n        if (resp.status !== 0) {\n          this.$message.error(resp.info);\n          cb([]);\n        } else {\n          cb(\n            resp.data.list.map(supplier => {\n              return {\n                value: `${supplier['sbs_vendor_id']} ${supplier['name']}`,\n                supplierID: supplier['supplier_id'],\n                supplierName: supplier['name'],\n                sbsVendorID: supplier['sbs_vendor_id']\n              };\n            })\n          );\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    handleVendorSiteIDSelect(row, selectedItem) {\n      row.vendor_site_id = selectedItem.supplierID;\n      row.supplier_name = selectedItem.supplierName;\n      row.sbs_vendor_id = selectedItem.sbsVendorID;\n    },\n    handleVendorSiteIDClear(row) {\n      row.vendor_site_id = '';\n      row.supplier_name = '';\n    },\n    onRemoveConfigShop(index) {\n      this.shopConfigTable.splice(index, 1);\n    },\n    isInvalidWarehouse(row, whsItem) {\n      return row.orginal_whs_id_list.includes(whsItem.whs_id) || // 新的shop如果有带仓库的话，带过来的仓库不可编辑\n        (whsItem.use_sku_is_sn_mgt === 1\n          ? false\n          : whsItem.cb_option !== row.cb_option); // 判断当前shop的仓库在是不是跟当前仓库在同一个地方（同在cb或同在local）\n    },\n    onMassFill() {\n      if (!this.selection.length) {\n        this.$message({\n          type: 'warning',\n          message: this.$t('pleaseChooseAtLeastOneShop')\n        });\n        return;\n      }\n      const inboundkeys = [\n        'min_sku_per_inbound',\n        'min_qty_per_inbound',\n        'max_sku_per_inbound',\n        'max_qty_per_inbound'\n      ];\n      this.selection.forEach(item => {\n        if (this.mass.whs_id_list.length) {\n          const allowAddWarehouseList = []; // 自定义每个shop允许添加（符合添加规则）的warehouse\n          this.mass.whs_id_list.map(whs_id_item => {\n            const whsItem = this.warehouseList.find(\n              whs => whs.whs_id === whs_id_item\n            );\n            if (!this.isInvalidWarehouse(item, whsItem)) {\n              // 不禁用\n              allowAddWarehouseList.push(whs_id_item);\n            }\n          });\n\n          item.whs_id_list = [\n            ...new Set([...item.whs_id_list, ...allowAddWarehouseList])\n          ];\n        }\n        inboundkeys.forEach(key => {\n          if (this.mass[key] || this.mass[key] === 0) {\n            item[key] = this.mass[key];\n          }\n        });\n      });\n    },\n    onNext() {\n      if (this.addShopList.length < 1) return;\n      this.shopConfigTable = this.addShopList.map(item => {\n        const obj = {};\n        obj.shop_id = item.shop_id;\n        obj.shop_name = item.shop_name;\n        obj.official_shop = item.official_shop;\n        obj.cb_option = item.cb_option;\n        obj.region = item.region;\n        obj.sbs_vendor_id = '';\n        obj.vendor_site_id = '';\n        obj.supplier_name = '';\n        obj.whs_id_list = item.whs_id_list;\n        obj.orginal_whs_id_list = item.whs_id_list;\n        obj.min_sku_per_inbound = this.defaultLimit.minSku;\n        obj.min_qty_per_inbound = this.defaultLimit.minQty;\n        obj.max_sku_per_inbound = this.defaultLimit.maxSku;\n        obj.max_qty_per_inbound = this.defaultLimit.maxQty;\n        obj.isErrorInput = false;\n        obj.isEmptyInput = false;\n        obj.isEmptySupplierId = false;\n        obj.isEmptyWhs = false;\n        return obj;\n      });\n      this.currentStep = 2;\n    },\n    onBack() {\n      this.currentStep = 1;\n    },\n    formatSearchParams() {\n      const temp = this.searchText.split(/[\\n\\s+,，；;]/g);\n      for (let i = 0; i < temp.length; i++) {\n        if (temp[i] === '') {\n          // 删除数组中空值\n          temp.splice(i, 1);\n          i--;\n        }\n      }\n      return temp;\n    },\n    async onSearchShop() {\n      try {\n        if (this.searchText.length < 1) {\n          return;\n        }\n        const formatSearchTextList = this.formatSearchParams() || [];\n        if (formatSearchTextList.length > 10) {\n          return this.$message({\n            type: 'error',\n            message: this.$t('FBSSearchShopLengthTips')\n          }); // 不能超过十个搜索，讨论添加\n        }\n        this.loadingSearch = true;\n        const params = {\n          country: this.country,\n          shop_id: formatSearchTextList.join(',')\n        };\n        const res = await searchShopInFBS(params);\n        if (res && res.retcode === 0) {\n          const responstList = res.data.list || [];\n          const addShopIDs = this.addShopList.map(item => item.shop_id);\n          this.searchShopList = responstList.map(item =>\n            Object.assign({}, item, {\n              disabled: !!addShopIDs.includes(item.shop_id)\n            })\n          );\n          this.isMultipleWhs = res.data.one_shop_with_multiple_whs; // 一店多仓\n          const b2cShopList = [];\n          responstList.reduce((arr, item) => {\n            if (item.is_b2c_shop) {\n              arr.push(item.shop_id);\n            }\n            return arr;\n          }, b2cShopList);\n          if (b2cShopList.length) {\n            this.$message({ type: 'warning', message: this.$t('FBSShopsIsInB2C') + `: ${b2cShopList.join(',')}` });\n          }\n        } else {\n          this.$message({ type: 'error', message: res.info || res.message });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loadingSearch = false;\n      }\n    },\n    onRemoveShop(row, index) {\n      this.addShopList.splice(index, 1);\n      const target = this.searchShopList.find(\n        item => item.shop_id === row.shop_id\n      );\n      if (target) {\n        target.disabled = false;\n      }\n    },\n    onAddShop(row) {\n      if (row.disabled) return;\n      this.addShopList.push(row);\n      row.disabled = true;\n    },\n    async getDefaultLimits() {\n      try {\n        const opt = {\n          country: this.country\n        };\n        getShopDefaultLimits(opt).then(res => {\n          if (res && res.retcode === 0) {\n            if (res.data.have_set) {\n              this.defaultLimit.minSku = res.data.min_sku_per_inbound;\n              this.defaultLimit.maxSku = res.data.max_sku_per_inbound;\n              this.defaultLimit.minQty = res.data.min_qty_per_inbound;\n              this.defaultLimit.maxQty = res.data.max_qty_per_inbound;\n            }\n          }\n        });\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    async getWarehouseListByCountry() {\n      try {\n        const opt = {\n          country: this.country\n        };\n        getWarehouseListByCountry(opt).then(res => {\n          if (res && res.retcode === 0) {\n            this.warehouseList = res.data.warehouses || [];\n          }\n        });\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    formatShopStatus(value) {\n      const statusText = (\n        shopStatusList.find(item => item.value === value) || { label: '' }\n      ).label;\n      return statusText || '';\n    },\n    formatOfficialShop(value) {\n      const statusText = (\n        FBSOfficialShopList.find(item => item.value === value) || { label: '' }\n      ).label;\n      return statusText ? this.$t(statusText) : '';\n    },\n    onClose() {\n      this.$emit('close');\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n@import \"~@/styles/variables.scss\";\n.step-wrapper {\n  text-align: center;\n  margin: 24px 0;\n  .step-ul {\n    margin: auto;\n    display: inline-block;\n    .step-li {\n      color: $grey;\n      vertical-align: middle;\n      font-weight: bold;\n      .step-number {\n        width: 22px;\n        height: 22px;\n        line-height: 20px;\n        font-size: 12px;\n        border-radius: 100%;\n        text-align: center;\n        display: inline-block;\n        border: 1px solid $grey;\n        color: inherit;\n        background-color: inherit;\n        margin-right: 8px;\n        border: 1px solid inherit;\n      }\n      .step-label {\n        color: $grey;\n      }\n      .step-line {\n        display: inline-block;\n        width: 110px;\n        height: 1px;\n        background-color: $grey;\n        margin: 0 16px;\n        vertical-align: middle;\n      }\n      &.is-active {\n        .step-number {\n          border-color: $blue;\n          color: #fff;\n          background-color: $blue;\n        }\n        .step-label {\n          color: $black;\n        }\n      }\n    }\n  }\n}\n.search-shop-block {\n  .shop-title {\n    font-size: 14px;\n    color: $black;\n    line-height: 22px;\n    margin-bottom: 16px;\n    font-weight: normal;\n  }\n  .search-shop-table {\n    margin-top: 16px;\n  }\n  .search-icon {\n    font-size: 16px;\n    position: relative;\n    top: 50%;\n    right: 4px;\n    transform: translateY(-50%);\n    cursor: pointer;\n  }\n}\n.mass-fill-wrapper {\n  padding: 8px 14px;\n  border: 1px solid lighten($color: $grey, $amount: 10);\n  background-color: rgba(241, 242, 245, 0.4);\n  margin-bottom: 12px;\n  .mass-fill-col {\n    display: flex;\n    align-items: center;\n    padding-right: 16px;\n    .mass-fill-label {\n      font-size: 12px;\n      width: 120px;\n      display: inline-block;\n      line-height: 1.2em;\n      word-break: break-word;\n    }\n    .fill-btn {\n      font-size: 12px;\n      white-space: pre-line;\n    }\n  }\n  .mass-fill-btn-col {\n    padding-right: 0;\n    padding-left: 10px;\n  }\n}\n.error-box {\n  margin-top: 8px;\n  .error-tips {\n    color: $red;\n    font-size: 12px;\n  }\n}\n.inbound-limit-tips{\n  background: #FFF6E1;\n  border-radius: 4px;\n  border-radius: 4px;\n  padding: 16px;\n  margin-bottom: 16px;;\n  display: flex;\n  .limit-icon {\n    width: 28px;\n   .limit-icon-svg{\n     width: 24px;\n     height: 24px;\n   }\n  }\n  .limit-text{\n    flex: 1;\n    padding-left:8px;\n    .limit-title{\n      color:$black;\n      font-size: 14px;\n      margin-bottom: 8px;\n    }\n    .limit-content{\n      text-align: left;\n      font-size: 14px;\n      font-weight: normal;\n      line-height: 1.5em;\n    }\n  }\n}\n</style>\n<style lang=\"scss\">\n@import \"~@/styles/common.scss\"; // ~@ = @ = 'src' webpack alias path\n.pms-dialog {\n  .el-dialog__body {\n    padding: 8px 24px 16px;\n  }\n}\n.fbs-createShopWhiteList-dialog {\n  .error-input{\n    .el-input__inner {\n      border-color: $red!important;\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/shopWhiteList/editShopWhiteDialog.vue","messages":[{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"shop_id\" is not in camelCase.","line":91,"column":5,"nodeType":"Property","endLine":93,"endColumn":6}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-dialog\n    :visible.sync=\"dialogVisible\"\n    width=\"540px\"\n    lock-scroll\n    custom-class=\"pms-dialog\"\n    :title=\"$t('FBSEditShopConfig')\"\n    :close-on-click-modal=\"false\"\n    :close-on-press-escape=\"false\"\n    @close=\"onClose\"\n  >\n    <section class=\"shop-white-edit-wrapper\" v-loading=\"loading\">\n      <el-form\n        :model=\"formData\"\n        :rules=\"rules\"\n        ref=\"formData\"\n        label-width=\"175px\"\n        label-position=\"left\"\n      >\n        <el-form-item :label=\"$t('FBSStatus') + ': '\">\n          <pms-switch\n            :isActive=\"formData.fbs_status === 1\"\n            :text=\"formData.fbs_status === 1 ? 'Active' : 'Inactive'\"\n            @toggle=\"toggleFBSStatus\"\n          ></pms-switch>\n        </el-form-item>\n        <el-form-item :label=\"$t('commonShopID') + ': '\">\n          <span>{{formData.shop_id}}</span>\n        </el-form-item>\n        <el-form-item :label=\"$t('commonShopName') + ': '\">\n          <span>{{formData.shop_name}}</span>\n        </el-form-item>\n        <el-form-item :label=\"$t('FBSOfficialShop') + ': '\">\n          <span>{{formatOfficialShop(formData.official_shop)}}</span>\n        </el-form-item>\n        <el-form-item :label=\"$t('commonSBSVendorIDOrName') + ': '\">\n          <span>{{`${formData.sbs_vendor_id}/${formData.supplier_name}`}}</span>\n        </el-form-item>\n        <el-form-item :label=\"$t('chargingReportDisplay') + ': '\">\n          <el-switch\n            v-model=\"formData.charging_report_display\">\n          </el-switch>\n        </el-form-item>\n        <el-form-item :label=\"$t('commonWarehouse') + ': '\" prop=\"warehouse_list\">\n          <el-checkbox-group v-model=\"formData.whs_id_list\">\n            <el-checkbox\n              :label=\"item.whs_id\"\n              v-for=\"item in warehouseList\"\n              :disabled=\"item.disabled || !isMultipleWhs\"\n              :key=\"item.whs_id\"\n            >{{item.whs_id}}</el-checkbox>\n          </el-checkbox-group>\n        </el-form-item>\n        <el-form-item\n          :label=\"$t(item.label) + ': '\"\n          v-for=\"item in inboundFormSchema\"\n          :key=\"item.field\"\n          :prop=\"item.field\"\n        >\n          <el-input v-model.number=\"formData[item.field]\" :placeholder=\"$t('commonInput')\"></el-input>\n        </el-form-item>\n      </el-form>\n    </section>\n    <section slot=\"footer\">\n      <el-button class=\"list-btn white-blue\" @click=\"onClose\">{{$t('commonCancel')}}</el-button>\n      <el-button\n        class=\"list-btn\"\n        :loading=\"loadingConfirm\"\n        @click=\"onConfirm\"\n      >{{$t('commonConfirm')}}</el-button>\n    </section>\n  </el-dialog>\n</template>\n\n<script>\nimport { FBSOfficialShopList } from '@/utils/constant';\nimport { getShopWhiteDetail, editShopWhite } from '@/api/FBS/shopWhiteList';\nimport { getWarehouseListByCountry } from '@/api/shopConfig';\nimport moment from 'moment';\nimport pmsSwitch from '@/components/Switch/index';\n\nexport default {\n  components: {\n    pmsSwitch\n  },\n  props: {\n    country: {\n      type: String,\n      required: true\n    },\n    shop_id: {\n      required: true\n    },\n    visible: {\n      type: Boolean,\n      required: true,\n      default: false\n    }\n  },\n  data() {\n    return {\n      isMultipleWhs: false,\n      formData: {\n        fbs_status: 0,\n        whs_id_list: [],\n        min_sku_per_inbound: '',\n        min_qty_per_inbound: '',\n        max_sku_per_inbound: '',\n        max_qty_per_inbound: '',\n        charging_report_display: false\n      },\n      warehouseList: [],\n      dialogVisible: false,\n      loading: false,\n      loadingConfirm: false,\n      inboundFormSchema: [\n        { label: 'FBSMinSKUPerInbound', field: 'min_sku_per_inbound' },\n        { label: 'FBSMinQtyPerInbound', field: 'min_qty_per_inbound' },\n        { label: 'FBSMaxSKUPerInbound', field: 'max_sku_per_inbound' },\n        { label: 'FBSMaxQtyPerInbound', field: 'max_qty_per_inbound' }\n      ]\n    };\n  },\n  watch: {\n    visible: {\n      handler(value) {\n        this.dialogVisible = value;\n        if (value) {\n          this.getEditInfo();\n        }\n      },\n      immediate: true\n    }\n  },\n  computed: {\n    rules() {\n      return {\n        max_sku_per_inbound: [\n          {\n            required: true,\n            message: 'Max #Sku Per Inbound is required',\n            trigger: ['blur', 'change']\n          },\n          {\n            validator: (rules, value, cb) => {\n              if (isNaN(Number(value))) {\n                // 非空\n                return cb(new Error('Max #Sku Per Inbound should be number'));\n              }\n              if (value < 1) {\n                return cb(\n                  new Error('Max #Sku Per Inbound should be greater than 1')\n                );\n              }\n              cb();\n            },\n            trigger: ['blur', 'change']\n          }\n        ],\n        max_qty_per_inbound: [\n          {\n            required: true,\n            message: 'Max Qty Per Inbound is required',\n            trigger: ['blur', 'change']\n          },\n          {\n            validator: (rules, value, cb) => {\n              if (isNaN(Number(value))) {\n                // 非空\n                return cb(new Error('Max Qty Per Inbound should be number'));\n              }\n              if (value < 1) {\n                return cb(\n                  new Error('Max Qty Per Inbound should be greater than 1')\n                );\n              }\n              cb();\n            },\n            trigger: ['blur', 'change']\n          }\n        ],\n        min_sku_per_inbound: [\n          {\n            validator: (rules, value, cb) => {\n              if (value) {\n                if (isNaN(Number(value)) || value < 0) {\n                  return cb(\n                    new Error(\n                      'Min #Sku Per Inbound should be zero or other positive number'\n                    )\n                  );\n                }\n                if (\n                  !isNaN(Number(value)) &&\n                  value >= this.formData.max_sku_per_inbound\n                ) {\n                  return cb(\n                    new Error(\n                      'Min #Sku Per Inbound should lower than max sku per inbound'\n                    )\n                  );\n                }\n                if (\n                  !isNaN(Number(value)) &&\n                  value >= this.formData.max_qty_per_inbound\n                ) {\n                  return cb(\n                    new Error(\n                      'Min #Sku Per Inbound should lower than Max Qty Per Inbound'\n                    )\n                  );\n                }\n                cb();\n              }\n              cb();\n            },\n            trigger: ['blur', 'change']\n          }\n        ],\n        min_qty_per_inbound: [\n          {\n            validator: (rules, value, cb) => {\n              if (value) {\n                if (isNaN(Number(value)) || value < 0) {\n                  return cb(\n                    new Error(\n                      'Min Qty Per Inbound should be zero or other positive number'\n                    )\n                  );\n                }\n                if (\n                  !isNaN(Number(value)) &&\n                  value >= this.formData.max_qty_per_inbound\n                ) {\n                  return cb(\n                    new Error(\n                      'Min Qty Per Inbound should lower than Max Qty Per Inbound'\n                    )\n                  );\n                }\n                cb();\n              }\n              cb();\n            },\n            trigger: ['blur', 'change']\n          }\n        ]\n      };\n    }\n  },\n  methods: {\n    moment,\n    formatOfficialShop(value) {\n      const statusText = (\n        FBSOfficialShopList.find(item => item.value === value) || { label: '' }\n      ).label;\n      return statusText ? this.$t(statusText) : '';\n    },\n    async getWarehouseListByCountry() {\n      try {\n        const opt = {\n          country: this.country\n        };\n        getWarehouseListByCountry(opt).then(res => {\n          if (res && res.retcode === 0) {\n            this.warehouseList = (res.data.warehouses || []).map(item => {\n              const whs_disabled =\n                item.use_sku_is_sn_mgt === 1\n                  ? false\n                  : this.formData.cb_option !== item.cb_option;\n              const whs_item = {\n                whs_id: item.whs_id,\n                disabled: whs_disabled\n              };\n\n              if (this.formData.whs_id_list.includes(item.whs_id)) {\n                whs_item.disabled = true;\n              }\n              return whs_item;\n            }).sort((a, b) => {\n              if (a.disabled && !b.disabled) {\n                return -1;\n              }\n              if (!a.disabled && b.disabled) {\n                return 1;\n              } else {\n                return 0;\n              }\n            });\n            this.isMultipleWhs = res.data.warehouses.some(\n              item => item.multi_whs === 1\n            );\n          }\n        });\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    async getEditInfo() {\n      try {\n        this.loading = true;\n        const params = {\n          country: this.country,\n          shop_id: this.shop_id\n        };\n        const res = await getShopWhiteDetail(params);\n        if (res && res.retcode === 0) {\n          this.formData = res.data;\n          this.formData.charging_report_display = res.data.charging_report_display ? Boolean(res.data.charging_report_display) : false;\n          this.getWarehouseListByCountry();\n        } else {\n          this.$message({ type: 'error', message: res.info });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loading = false;\n      }\n    },\n    toggleFBSStatus() {\n      this.formData.fbs_status = this.formData.fbs_status === 0 ? 1 : 0;\n    },\n    onConfirm() {\n      this.$refs.formData.validate(pass => {\n        if (pass) {\n          this._confirm();\n        }\n      });\n    },\n    async _confirm() {\n      try {\n        this.loadingConfirm = true;\n        const params = {\n          country: this.country,\n          shop_id: this.formData.shop_id,\n          fbs_status: this.formData.fbs_status,\n          whs_id_list: this.formData.whs_id_list,\n          min_sku_per_inbound: this.formData.min_sku_per_inbound || 0,\n          max_sku_per_inbound: this.formData.max_sku_per_inbound,\n          min_qty_per_inbound: this.formData.min_qty_per_inbound || 0,\n          max_qty_per_inbound: this.formData.max_qty_per_inbound,\n          charging_report_display: Number(this.formData.charging_report_display)\n        };\n        const res = await editShopWhite(params);\n        if (res && res.retcode === 0) {\n          this.$message({\n            type: 'success',\n            message: this.$t('commonConfirmSuccess')\n          });\n          this.$emit('refresh');\n          this.onClose();\n        } else {\n          this.$message({ type: 'error', message: res.info || res.message });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loadingConfirm = false;\n      }\n    },\n    onClose() {\n      this.$emit('close');\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n@import \"~@/styles/variables.scss\";\n.shop-white-edit-wrapper {\n  max-height: 450px;\n  overflow: auto;\n}\n</style>\n<style lang=\"scss\">\n@import \"~@/styles/common.scss\"; // ~@ = @ = 'src' webpack alias path\n.pms-dialog {\n  .el-dialog__body {\n    padding: 8px 24px 16px;\n  }\n  .shop-white-edit-wrapper {\n    .el-form-item {\n      margin-bottom: 18px;\n    }\n    .el-form-item__label,\n    .el-form-item__content {\n      line-height: 1.2em;\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/shopWhiteList/list.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":29,"column":44,"nodeType":"VIdentifier","messageId":"deprecated","endLine":29,"endColumn":50},{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"shopWhitelist\" is not PascalCase.","line":209,"column":9,"nodeType":"Literal","endLine":209,"endColumn":24,"fix":{"range":[9826,9839],"text":"ShopWhitelist"}}],"errorCount":2,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <el-container class=\"FBS-shopWhiteList-wrapper pms-ele-ui pms-ui\">\n    <section class=\"list-header-wrapper\">\n      <div class=\"list-create-btn\" v-if=\"canOperate\">\n        <span class=\"set-inbound-limits\" @click=\"onShowInboundLimitDialog\">\n          <i class=\"el-icon-setting set-inbound-icon\"></i>\n          <span class=\"set-inbound-text\">{{$t('FBSSetInboundLimits')}}</span>\n        </span>\n        <el-popover popper-class=\"break-word\" placement=\"top\" width=\"400\" trigger=\"hover\">\n          <div class=\"pms-text-left\">{{$t('FBSNewWhiteListShopTips')}}</div>\n          <svg-icon slot=\"reference\" iconClass=\"question-circle\" class=\"question-icon\"></svg-icon>\n        </el-popover>\n        <el-button class=\"list-btn\" @click=\"onCreateRequest\">\n          <i class=\"el-icon-plus\"></i>\n          <span>{{$t('FBSWhiteListShop')}}</span>\n        </el-button>\n      </div>\n\n      <el-tabs class=\"pms-ele-ui\" tab-position=\"bottom\" v-model=\"activeTab\" @tab-click=\"onTabClick\">\n        <el-tab-pane\n          v-for=\"item in countryList\"\n          :key=\"item.value\"\n          :label=\"item.label\"\n          :name=\"item.value\"\n        ></el-tab-pane>\n      </el-tabs>\n    </section>\n    <section class=\"main-wrapper\">\n      <el-form :model=\"searchForm\" @submit.native.prevent=\"onResetPageNoSearch\">\n        <el-button v-show=\"false\" native-type=\"submit\"></el-button>\n        <el-row>\n          <el-col\n            v-for=\"item in searchSchema\"\n            :key=\"item.field\"\n            :span=\"item.width\"\n            :offset=\"item.offset || 0\"\n          >\n            <el-form-item\n              :label-width=\"item.labelWidth || '130px'\"\n              :class=\"item.class || ''\"\n              :label=\"item.label\"\n            >\n              <el-select\n                v-if=\"item.type === 'select'\"\n                :multiple=\"item.multiple\"\n                v-model=\"searchForm[item.field]\"\n                :disabled=\"item.disabled || false\"\n                :collapse-tags=\"true\"\n                @change=\"onResetPageNoSearch\"\n              >\n                <el-option\n                  v-for=\"option in item.options || []\"\n                  :key=\"option.value\"\n                  :label=\"option.label\"\n                  :value=\"option.value\"\n                ></el-option>\n              </el-select>\n              <el-select\n                v-if=\"item.type === 'shopIDName'\"\n                clearable\n                filterable\n                remote\n                :remote-method=\"getShopIdName\"\n                v-model=\"searchForm[item.field]\"\n                :disabled=\"item.disabled || false\"\n                @change=\"onResetPageNoSearch\"\n              >\n                <el-option\n                  v-for=\"option in shopIDSelectOptions\"\n                  :key=\"option.value\"\n                  :label=\"option.label\"\n                  :value=\"option.value\"\n                ></el-option>\n              </el-select>\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row type=\"flex\" justify=\"space-between\" class=\"mb16\">\n          <el-col :span=\"20\">\n            <template v-if=\"canOperate\">\n              <el-upload\n                class=\"list-btn white-blue\"\n                :disabled=\"!tableList.length\"\n                :class=\"{'is-disabled': !tableList.length}\"\n                :action=\"`/api/fbs/shop/upload_edit?country=${activeTab}`\"\n                :with-credentials=\"true\"\n                :limit=\"1\"\n                ref=\"massUpload\"\n                :show-file-list=\"false\"\n                :on-success=\"onUploadSuccess\"\n                :on-error=\"onUploadError\"\n                :data=\"getCsrfData()\"\n                :headers=\"getCsrfHeader()\"\n              >{{$t('commonMassUpdate')}}</el-upload>\n              <el-button type=\"text\" class=\"pms-btn-ui link-btn\" :disabled=\"!tableList.length\" @click=\"onDownloadUpdateTemplate\">\n                <i class=\"el-icon-download\"></i>\n                {{$t('commonTemplate')}}\n              </el-button>\n              <el-button class=\"pms-ele-ui list-btn white-blue\" @click=\"showExportHistory(102)\">{{$t('FBSUploadHistory')}}</el-button>\n              <el-upload\n                class=\"list-btn white-blue\"\n                :action=\"`/api/fbs/shop/upload_add?country=${activeTab}`\"\n                :with-credentials=\"true\"\n                :limit=\"1\"\n                ref=\"whiteListMassUpload\"\n                :show-file-list=\"false\"\n                :on-success=\"onUploadWhiteListSuccess\"\n                :data=\"getCsrfData()\"\n                :headers=\"getCsrfHeader()\"\n              >{{$t('FBSMassWhiteList')}}</el-upload>\n              <el-button type=\"text\" class=\"pms-btn-ui link-btn\" @click=\"onDownloadWhiteListTemplate\">\n                <i class=\"el-icon-download\"></i>\n                {{$t('commonTemplate')}}\n              </el-button>\n              <el-button class=\"pms-ele-ui list-btn white-blue\" @click=\"showExportHistory(101)\">{{$t('FBSWhiteListHistory')}}</el-button>\n            </template>\n          </el-col>\n          <el-col class=\"pms-text-right\" :span=\"4\">\n            <el-button class=\"list-btn\" @click=\"onResetPageNoSearch\">{{$t('commonSearch')}}</el-button>\n            <el-button class=\"list-btn white-blue\" @click=\"onReset\">{{$t('commonClear')}}</el-button>\n          </el-col>\n        </el-row>\n      </el-form>\n      <el-table :data=\"tableList\" border v-loading=\"loading\">\n        <el-table-column prop=\"shop_id\" :label=\"$t('commonShopID')\" width=\"150px\"></el-table-column>\n        <el-table-column prop=\"shop_name\" :label=\"$t('commonShopName')\" width=\"150px\"></el-table-column>\n        <el-table-column prop=\"official_shop\" :label=\"$t('FBSOfficialShop')\">\n          <template slot-scope=\"scope\">{{formatOfficialShop(scope.row.official_shop)}}</template>\n        </el-table-column>\n        <el-table-column prop=\"cb_option\" :label=\"$t('commonCBOption')\">\n          <template slot-scope=\"scope\">{{formatCBOption(scope.row.cb_option)}}</template>\n        </el-table-column>\n        <el-table-column prop=\"fbs_status\" :label=\"$t('FBSStatus')\">\n          <template slot-scope=\"scope\">{{formatFBSStatus(scope.row.fbs_status)}}</template>\n        </el-table-column>\n        <el-table-column  :label=\"$t('commonWarehouse')\">\n          <template slot-scope=\"scope\">\n            {{scope.row.whs_id_list.join(\", \")}}\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"sbs_vendor_id\" :label=\"$t('commonSBSVendorID')\">\n          <template slot-scope=\"scope\">\n            <router-link :to=\" getSellerPageUrl('detail', { id: scope.row.sbs_vendor_id})\">{{scope.row.sbs_vendor_id}}</router-link>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"supplier_name\" :label=\"$t('commonSellerName')\"></el-table-column>\n\n        <el-table-column prop=\"ctime\" :label=\"$t('commonCtime')\">\n         <template slot-scope=\"scope\">{{moment(scope.row.ctime * 1000).format('YYYY-MM-DD HH:mm')}}</template>\n        </el-table-column>\n        <el-table-column prop=\"mtime\" :label=\"$t('commonMtime')\">\n          <template slot-scope=\"scope\">{{moment(scope.row.mtime * 1000).format('YYYY-MM-DD HH:mm')}}</template>\n        </el-table-column>\n       <el-table-column prop=\"shop_status\" :label=\"$t('commonShopStatus')\">\n          <template slot-scope=\"scope\">{{formatShopStatus(scope.row.shop_status)}}</template>\n        </el-table-column>\n        <el-table-column :label=\"$t('commonAction')\" width=\"180px\">\n          <template slot-scope=\"scope\">\n            <el-button class=\"list-btn\" v-if=\"canOperate\" @click=\"onEdit(scope.row)\">{{$t('commonEdit')}}</el-button>\n            <el-button class=\"list-btn white-blue\" @click=\"onLog(scope.row)\">{{$t('FBSLog')}}</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <section class=\"pagination-center\">\n        <el-pagination\n          background\n          layout=\"sizes, prev, pager, next\"\n          :current-page=\"pager.page_no\"\n          :page-sizes=\"[10, 20, 50, 100]\"\n          :total.sync=\"total\"\n          :page-size=\"pager.count\"\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleChangePage\"\n        ></el-pagination>\n      </section>\n    </section>\n    <SetInboundLimitDialog :country=\"activeTab\" :visible=\"isInboundLimitDialog\" @close=\"closeInboundLimitDialog\"></SetInboundLimitDialog>\n    <CreateShopWhiteDialog :country=\"activeTab\" :visible=\"isCreateDialog\" @close=\"closeCreateDialog\" @refresh=\"onResetPageNoSearch\"></CreateShopWhiteDialog>\n    <EditShopWhiteDialog :country=\"activeTab\" :shop_id=\"activeShopId\" :visible=\"isEditDialog\" @close=\"closeEditDialog\" @refresh=\"onResetPageNoSearch\"></EditShopWhiteDialog>\n    <ActionLog :visible=\"isActionLogDialog\" :shop_id=\"activeShopId\" @close=\"closeActionLogDialog\"></ActionLog>\n    <export-history-dialog :interval=\"15000\" :taskType=\"taskType\" :title=\"exportTitle\" :visible=\"isShowExportHistory\" :needErrorFile=\"true\" @close=\"closeExportHistory\"></export-history-dialog>\n  </el-container>\n</template>\n\n<script>\nimport { formatParams } from '@/utils/formatParams';\nimport EditShopWhiteDialog from './editShopWhiteDialog';\nimport CreateShopWhiteDialog from './createShopWhiteDialog';\nimport SetInboundLimitDialog from './setInboundLimitDialog';\nimport ExportHistoryDialog from '@/components/ApproveList/exportHistoryDialog';\nimport ActionLog from './actionlog';\nimport {\n  getShopWhiteList\n} from '@/api/FBS/shopWhiteList';\nimport {\n  FBSStatusList,\n  FBSOfficialShopList,\n  shopStatusList,\n  newCBOptionList,\n  Permission\n} from '@/utils/constant';\nimport moment from 'moment';\nimport { hasPermission } from '@/utils/permission';\nimport { getShopListByIdOrName } from '@/api/shopConfig';\nimport { getCsrfHeader, getCsrfData } from '@/utils/cookie';\nimport { getSellerPageUrl } from '@/views/FBS/sellerAndShop/utils';\n\nexport default {\n  name: 'shopWhitelist',\n  components: {\n    EditShopWhiteDialog,\n    CreateShopWhiteDialog,\n    SetInboundLimitDialog,\n    ActionLog,\n    ExportHistoryDialog\n  },\n  data() {\n    return {\n      activeShopId: '',\n      activeTab: this.$store.getters.country,\n      taskType: 0,\n      isShowExportHistory: false,\n      shopIDSelectOptions: [],\n      canOperate: false,\n      isInboundLimitDialog: false,\n      isEditDialog: false,\n      isCreateDialog: false,\n      isActionLogDialog: false,\n      lastSearchForm: {},\n      searchForm: {\n        shop_id: '',\n        official_shop: '',\n        fbs_status: ''\n      },\n      searchSchema: [\n        {\n          type: 'shopIDName',\n          width: 6,\n          label: this.$t('commonShopIDOrName'),\n          field: 'shop_id'\n        },\n        {\n          type: 'select',\n          width: 6,\n          label: this.$t('FBSOfficialShop'),\n          field: 'official_shop',\n          options: [{ label: 'All', value: '' }, ...FBSOfficialShopList]\n        },\n        {\n          type: 'select',\n          width: 6,\n          label: this.$t('FBSStatus'),\n          field: 'fbs_status',\n          options: [{ label: 'All', value: '' }, ...FBSStatusList]\n        }\n      ],\n      loading: false,\n      pager: {\n        page_no: 1,\n        count: 10\n      },\n      total: 0,\n      tableList: [],\n      exportTitle: ''\n    };\n  },\n  computed: {\n    formatCheckedType() {\n      return this.checkedType === 'all'\n        ? this.$t('commonAllPage')\n        : this.$t('commonCurrentPage');\n    },\n    countryList() {\n      return this.$store.getters.countrySelectList;\n    }\n  },\n  methods: {\n    moment,\n    getCsrfData,\n    getCsrfHeader,\n    getSellerPageUrl,\n    showExportHistory(type) {\n      this.taskType = type;\n      if (type === 102) {\n        this.exportTitle = 'FBSUploadHistory';\n      } else {\n        this.exportTitle = 'FBSWhiteListHistory';\n      }\n      this.isShowExportHistory = true;\n    },\n    closeExportHistory() {\n      this.isShowExportHistory = false;\n    },\n    onShowInboundLimitDialog() {\n      this.isInboundLimitDialog = true;\n    },\n    closeInboundLimitDialog() {\n      this.isInboundLimitDialog = false;\n    },\n    onUploadSuccess(resp) {\n      this.$refs.massUpload.clearFiles();\n      if (resp.retcode !== 0) {\n        this.$message.error(resp.info);\n      } else {\n        this.$message.success(this.$t('FBSUploadSuccessTip'));\n        this.onResetPageNoSearch();\n      }\n    },\n    onUploadError(resp) {\n      this.$refs.massUpload.clearFiles();\n      this.$message.error(this.$t('commonUploadFailed'));\n    },\n    onUploadWhiteListSuccess(resp) {\n      this.$refs.whiteListMassUpload.clearFiles();\n      if (resp.retcode !== 0) {\n        this.$message.error(resp.info);\n      } else {\n        this.$message.success(this.$t('FBSUploadSuccessTip'));\n        this.onResetPageNoSearch();\n      }\n    },\n    onUploadWhiteListError(resp) {\n      this.$refs.whiteListMassUpload.clearFiles();\n      this.$message.error(this.$t('commonUploadFailed'));\n    },\n    onDownloadUpdateTemplate() {\n      // edit\n      window.open('/admin/data/FBSMassEditFBSShop.xlsx');\n    },\n    onDownloadWhiteListTemplate() {\n      // add\n      window.open('/admin/data/FBSMassAddFBSShop.xlsx');\n    },\n    getShopIdName(query) {\n      if (query !== '') {\n        const params = {\n          search_type: 0,\n          shop_id_or_name: query,\n          page_no: 1,\n          count: 20\n        };\n        getShopListByIdOrName(params)\n          .then(res => {\n            if (res && res.retcode === 0) {\n              const shopListFilterCountry = res.data.shop_list.filter(\n                item => item.country === this.activeTab\n              );\n              this.shopIDSelectOptions = shopListFilterCountry.map(item => ({\n                value: item.shop_id,\n                label: `${item.shop_id}(${item.shop_name})`\n              }));\n            }\n          })\n          .catch(e => {\n            this.$message.error(e);\n          });\n      }\n    },\n    onTabClick() {\n      this.onReset();\n      this.onResetPageNoSearch();\n    },\n    onCreateRequest() {\n      this.isCreateDialog = true;\n    },\n    closeCreateDialog() {\n      this.isCreateDialog = false;\n    },\n    formatCBOption(value) {\n      const statusText = (\n        newCBOptionList.find(item => item.value === value) || { label: '' }\n      ).label;\n      return statusText || '';\n    },\n    formatShopStatus(value) {\n      const statusText = (\n        shopStatusList.find(item => item.value === value) || { label: '' }\n      ).label;\n      return statusText || '';\n    },\n    formatOfficialShop(value) {\n      const statusText = (\n        FBSOfficialShopList.find(item => item.value === value) || { label: '' }\n      ).label;\n      return statusText || '';\n    },\n    formatFBSStatus(value) {\n      const statusText = (\n        FBSStatusList.find(item => item.value === value) || {\n          label: ''\n        }\n      ).label;\n      return statusText || '';\n    },\n    onReset() {\n      Object.keys(this.searchForm).forEach(key => {\n        this.searchForm[key] = '';\n      });\n      this.shopIDSelectOptions = [];\n    },\n    handleChangePage(page_no) {\n      this.pager.page_no = page_no;\n      this.onSearch();\n    },\n    handleSizeChange(count) {\n      this.pager.count = count;\n      this.pager.page_no = 1;\n      this.onSearch();\n    },\n    onResetPageNoSearch() {\n      this.handleChangePage(1);\n    },\n    async onSearch() {\n      try {\n        const params = {\n          country: this.activeTab,\n          ...this.pager,\n          ...formatParams(this.searchForm)\n        };\n        this.loading = true;\n        const res = await getShopWhiteList(params);\n        if (res && res.retcode === 0) {\n          this.tableList = res.data.list || [];\n          this.total = res.data.total || 0;\n          this.lastSearchForm = params;\n        } else {\n          this.$message({ type: 'error', message: res.info });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loading = false;\n      }\n    },\n    onEdit(row) {\n      this.activeShopId = row.shop_id;\n      this.isEditDialog = true;\n    },\n    closeEditDialog() {\n      this.isEditDialog = false;\n    },\n    closeActionLogDialog() {\n      this.isActionLogDialog = false;\n    },\n    onLog(row) {\n      this.activeShopId = row.shop_id;\n      this.isActionLogDialog = true;\n    }\n  },\n  created() {\n    this.canOperate = hasPermission(Permission.EDIT_SHOP_WHITE_LIST);\n    this.onSearch();\n  }\n};\n</script>\n\n<style scoped lang=\"scss\">\n@import \"~@/styles/variables.scss\";\n.FBS-shopWhiteList-wrapper {\n  padding: 0 20px;\n  display: block;\n  .list-header-wrapper {\n    position: relative;\n    margin-bottom: 16px;\n    .set-inbound-limits {\n      color: $blue;\n      font-size: 14px;\n      margin-left: 8px;\n      cursor: pointer;\n      .set-inbound-icon {\n        font-size: 16px;\n      }\n      .set-inbound-text {\n        margin-left: 4px;\n      }\n    }\n    .list-create-btn {\n      position: absolute;\n      right: 0;\n      top: 5px;\n      z-index: 1;\n    }\n    .question-icon {\n      width: 14px;\n      height: 14px;\n      margin-right: 8px;\n      fill: $black_light_one;\n    }\n  }\n  .main-wrapper {\n    width: 100%;\n    padding: 0;\n  }\n  .pagination-center {\n    display: flex;\n    justify-content: center;\n    margin-top: 20px;\n  }\n}\n</style>\n<style lang=\"scss\">\n@import \"~@/styles/common.scss\";\n.pms-ele-ui.select-all-table-column {\n  div {\n    padding: 0;\n  }\n  .select-page-dropdown {\n    padding: 0;\n    margin-left: 0;\n    .el-button {\n      border: none;\n      background: unset;\n      padding: 0px;\n      &:nth-child(1) {\n        word-break: break-word;\n        white-space: normal;\n        width: 60px;\n        line-height: 16px;\n        padding-right: 0px;\n      }\n      &::before {\n        width: 0;\n      }\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/shopWhiteList/setInboundLimitDialog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/shopWhiteListV2/checkDialog.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"shopWhiteListCheckDialog\" is not PascalCase.","line":71,"column":9,"nodeType":"Literal","endLine":71,"endColumn":35,"fix":{"range":[2146,2170],"text":"ShopWhiteListCheckDialog"}},{"ruleId":"vue/require-prop-type-constructor","severity":2,"message":"The \"title\" property should be a constructor.","line":77,"column":12,"nodeType":"Literal","endLine":77,"endColumn":14},{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"shop_id\" is not in camelCase.","line":78,"column":5,"nodeType":"Property","endLine":78,"endColumn":16},{"ruleId":"vue/require-prop-type-constructor","severity":2,"message":"The \"shop_id\" property should be a constructor.","line":78,"column":14,"nodeType":"Literal","endLine":78,"endColumn":16},{"ruleId":"vue/require-prop-type-constructor","severity":2,"message":"The \"actionTips\" property should be a constructor.","line":79,"column":17,"nodeType":"Literal","endLine":79,"endColumn":19}],"errorCount":5,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <el-dialog class=\"pms-new-ui\" width=\"700px\" @close=\"$emit('close')\" :visible=\"true\">\n    <template slot=\"title\">\n      <span class=\"title\">{{ `${title} shop id: ${shop_id}` }}</span>\n    </template>\n    <p class=\"tips-box\">\n      <i class=\"el-icon-bell\"></i>\n      {{ actionTips }}\n    </p>\n    <el-table :data=\"getList(checkData.order)\">\n      <el-table-column v-for=\"item in orderSchema\" v-bind=\"item\" :key=\"item.field\" :prop=\"item.field\">\n        <template slot-scope=\"scope\">\n          <formItem :renderData=\"{ schema: item, form: scope.row }\"></formItem>\n        </template>\n      </el-table-column>\n    </el-table>\n    <section v-if=\"checkData.sku && checkData.sku.length\">\n      <p class=\"tips-box\">\n        <i class=\"el-icon-bell\"></i>\n        Please delink the following supplier-sku relation first.\n      </p>\n      <el-table :data=\"getList(checkData.sku)\">\n        <el-table-column v-for=\"item in skuSchema\" v-bind=\"item\" :key=\"item.field\" :prop=\"item.field\">\n        </el-table-column>\n      </el-table>\n    </section>\n    <p class=\"tips-box\">\n      {{\n        `If you click confirm, system will check orders again until it passes validation. Or you can cancel and close orders first, then come back and edit again.`\n      }}\n    </p>\n    <div class=\"button-box\">\n      <el-button class=\"white-grey\" @click=\"$emit('close')\">{{ $gt('Cancel') }}</el-button>\n      <el-button @click=\"$emit('submit', { shop_id })\">{{ $gt('Confirm') }}</el-button>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nimport formItem from '@/components/BaseItem/formItem';\nimport { getFieldConfig } from './config';\n\nconst hrefConfig = {\n  1: {\n    label: 'PR',\n    getHref(form) {\n      return `/admin/purchase/request/detail/${form.order_id}`;\n    }\n  },\n  2: {\n    label: 'PO',\n    getHref(form) {\n      return `/admin/purchase/order/podetail/${form.order_id}`;\n    }\n  },\n  3: {\n    label: 'ASN',\n    getHref(form) {\n      return `/admin/inbound/asn/detail/${form.asn_id}`;\n    }\n  },\n  4: {\n    label: 'FBS IR', // FBS ASN\n    getHref(form) {\n      return `/admin/fbs/inbound/detail/${form.order_id}`;\n    }\n  }\n};\n\nexport default {\n  name: 'shopWhiteListCheckDialog',\n  components: {\n    formItem\n  },\n  props: {\n    checkData: {},\n    title: '',\n    shop_id: '',\n    actionTips: ''\n  },\n  data() {\n    return {\n      skuSchema: ['sku_id', 'sku_name', 'sbs_vendor_id', 'seller_name', 'supplier_id', 'supplier_name'].map(field =>\n        getFieldConfig({ field })\n      ),\n      orderSchema: [\n        {\n          field: 'order_type',\n          label: this.$gt('Order Type'),\n          render(schema, form) {\n            const item = hrefConfig[form.order_type] || {};\n            return item.label || '/';\n          }\n        },\n        {\n          field: 'order_id',\n          label: this.$gt('Order ID'),\n          render(schema, form) {\n            const item = hrefConfig[form.order_type];\n            if (!item) return '/';\n            const href = item.getHref(form);\n            return [\n              'a',\n              {\n                class: 'href',\n                attrs: {\n                  target: '_blank',\n                  href\n                }\n              },\n              form.order_id\n            ];\n          }\n        },\n        {\n          field: 'order_status_text',\n          type: 'text',\n          label: this.$gt('Order Status')\n        },\n        {\n          field: 'requester',\n          type: 'text',\n          label: this.$gt('Requester')\n        }\n      ]\n    };\n  },\n  methods: {\n    getList(list) {\n      return (list || []).slice(0, 100); // 最多展示100条\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.button-box {\n  text-align: right;\n}\n.tips-box {\n  margin: 10px 0 20px;\n  word-break: break-word;\n}\n.href {\n  color: $blue;\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/shopWhiteListV2/config/api.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/shopWhiteListV2/config/baseField.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/shopWhiteListV2/config/formSchema.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/shopWhiteListV2/config/index.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/shopWhiteListV2/config/searchConfig.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/shopWhiteListV2/config/tableConfig.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/shopWhiteListV2/createShopDialogV2.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":9,"column":24,"nodeType":"VIdentifier","messageId":"deprecated","endLine":9,"endColumn":30},{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"createShopDialogV2\" is not PascalCase.","line":58,"column":9,"nodeType":"Literal","endLine":58,"endColumn":29,"fix":{"range":[2215,2233],"text":"CreateShopDialogV2"}},{"ruleId":"vue/require-prop-type-constructor","severity":2,"message":"The \"loading\" property should be a constructor.","line":63,"column":14,"nodeType":"Literal","endLine":63,"endColumn":19},{"ruleId":"vue/require-prop-type-constructor","severity":2,"message":"The \"isCreate\" property should be a constructor.","line":67,"column":15,"nodeType":"Literal","endLine":67,"endColumn":20},{"ruleId":"vue/require-prop-type-constructor","severity":2,"message":"The \"isMultipleWhs\" property should be a constructor.","line":68,"column":20,"nodeType":"Literal","endLine":68,"endColumn":24}],"errorCount":5,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <el-dialog class=\"add-shop-whitelist-dialog pms-new-ui\" width=\"700px\" @close=\"$emit('close')\" :visible=\"true\">\n    <template slot=\"title\">\n      <span class=\"title\">{{ title }}</span>\n    </template>\n    <!-- Shop SKU exceeds 100k. please use mass update to remove whs or change business mode. -->\n    <p class=\"tips\" v-if=\"isOverSku\">{{ $t('shop_edit_max_sku_tips') }}</p>\n    <div class=\"content\">\n      <el-form @submit.native.prevent=\"onSearch\">\n        <el-button v-show=\"false\" native-type=\"submit\"></el-button>\n        <div v-if=\"isCreate\" class=\"search-box\">\n          <div class=\"search-content\">\n            <formItem\n              :renderData=\"{\n                schema: shopIdNameSchema,\n                form: searchForm\n              }\"\n              @input=\"modifySearchForm\"\n            >\n            </formItem>\n          </div>\n          <div class=\"search-options\">\n            <el-button @click=\"onSearch()\">{{ $gt('Search from User') }}</el-button>\n            <el-button class=\"white-grey\" @click=\"clearShop()\">{{ $gt('Clear') }}</el-button>\n          </div>\n        </div>\n      </el-form>\n\n      <el-form ref=\"shopForm\" label-position=\"left\" :rules=\"formRule\" :model=\"form\" label-width=\"200px\">\n        <el-row v-for=\"item in formSchema\" :key=\"item.field\" :span=\"24\">\n          <el-form-item :prop=\"item.field\" :label=\"`${item.label} :`\">\n            <formItem @input=\"modifyForm\" :renderData=\"{ schema: item, form: form }\"></formItem>\n          </el-form-item>\n        </el-row>\n      </el-form>\n    </div>\n    <div class=\"bottom\">\n      <el-button :loading=\"loading\" class=\"white-grey\" @click=\"$emit('close')\">{{ $gt('Cancel') }}</el-button>\n      <el-button :loading=\"loading\" @click=\"onSubmit()\">{{ $gt('Confirm') }}</el-button>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nimport formItem from '@/components/BaseItem/formItem';\nimport { getWarehouseListByCountry, getShopConfig } from '@/api/shopConfig';\n\nimport { getFormSchema, getFormRule, shopWhitelistAPI } from './config';\nimport { ajax } from '@/utils/request';\n\nconst defaultShopData = {\n  business_mode: 1, // 默认B2C\n  fbs_status: 2, // 默认active\n  charging_report_display: 1 // 默认off\n};\n\nexport default {\n  name: 'createShopDialogV2',\n  components: {\n    formItem\n  },\n  props: {\n    loading: false,\n    title: String,\n    region: String,\n    data: {},\n    isCreate: false,\n    isMultipleWhs: true,\n    limitConfig: {}\n  },\n  data() {\n    return {\n      searchForm: {},\n      form: {},\n      isLoading: false,\n      countryWhsList: [],\n      // shop特殊信息\n      shopInfo: {\n        sku_count: 0\n      },\n      isEditFBSShop: false // fbs不能转b2c，且fbs不能修改seller\n    };\n  },\n  created() {\n    this.isEditFBSShop = this.data.business_mode === 2;\n    this.initData();\n  },\n  mounted() {\n    this.form = this.formatFormBE(this.data);\n  },\n  computed: {\n    isOverSku() {\n      // sku数量是否超出限制\n      return this.shopInfo && this.shopInfo.sku_count > 100000;\n    },\n    formRule() {\n      return getFormRule(this.formSchema, this.form);\n    },\n    whsOptions() {\n      const shop = this.form;\n      return (this.countryWhsList || []).map(whs => {\n        // use_sku_is_sn_mgt=1，表示local和CB已合仓，必然可选\n        // 否则，whs和shop的cb类型必须一致：\n        // shop.cb_option：0local、1cb\n        // 后台通过flag得到whs.cb_option：\n        // flag=奇数 => whs.cb_option=1 => cb\n        // flag=偶数 => whs.cb_option=0 => local\n        const whs_disabled = whs.use_sku_is_sn_mgt === 1 ? false : shop.cb_option !== whs.cb_option;\n\n        return {\n          value: whs.whs_id,\n          label: whs.whs_id,\n          disabled: whs_disabled\n        };\n      });\n    },\n    formSchema() {\n      const config = getFormSchema({\n        ...this.form,\n        whsOptions: this.whsOptions,\n        isMultipleWhs: !!this.isMultipleWhs,\n        isEditFBSShop: this.isEditFBSShop\n      });\n      config.find(item => {\n        if (item.field === 'sbs_vendor_id') {\n          item.on = {\n            ...item.on,\n            select: this.onSelectSeller\n          };\n          return true;\n        }\n        return false;\n      });\n      return config;\n    },\n    shopIdNameSchema() {\n      return {\n        field: 'shop_id',\n        class: 'shop-search-box',\n        type: 'input'\n      };\n    }\n  },\n  methods: {\n    ajax,\n    async onSubmit() {\n      if (this.isOverSku) {\n        return this.$message.error(this.$t('shop_edit_max_sku_tips'));\n      }\n      const check = await this.$refs.shopForm.validate();\n      if (!check) return;\n      this.$emit('submit', this.formatToBE(this.form));\n    },\n    formatFormBE(data) {\n      return {\n        ...data,\n        whs_id_list: this.isMultipleWhs ? data.whs_id_list : data.whs_id_list[0]\n      };\n    },\n    formatToBE(data) {\n      return {\n        ...data,\n        whs_id_list: Array.isArray(data.whs_id_list) ? data.whs_id_list : data.whs_id_list ? [data.whs_id_list] : []\n      };\n    },\n    initData() {\n      this.getWhsList();\n      this.getShopInfo();\n    },\n    async getShopInfo() {\n      if (!this.data.shop_id || this.isCreate) return;\n      const res = await getShopConfig({\n        shop_id: this.data.shop_id\n      });\n      this.shopInfo = res.data || {};\n    },\n    async getWhsList() {\n      if (!this.region) return;\n      const res = await getWarehouseListByCountry({\n        country: this.region\n      });\n      this.countryWhsList = res.data.warehouses;\n      this.isMultipleWhs = res.data.warehouses.some(item => item.multi_whs === 1);\n    },\n    onSearch() {\n      this.setShop(this.searchForm.shop_id);\n    },\n    clearShop() {\n      this.searchForm = {};\n      this.form = {};\n    },\n    async setShop(value) {\n      const data = await this.ajax(shopWhitelistAPI.queryShop, {\n        shop_id: value,\n        region: this.region\n      });\n      if (data === false) return;\n      this.form = this.formatDataToView(data);\n    },\n    formatDataToView(data) {\n      return {\n        ...defaultShopData,\n        whs_id_list: this.isMultipleWhs ? [] : '',\n        sku_per_inbound_min: this.limitConfig.min_sku_per_inbound,\n        sku_per_inbound_max: this.limitConfig.max_sku_per_inbound,\n        qty_per_inbound_min: this.limitConfig.min_qty_per_inbound,\n        qty_per_inbound_max: this.limitConfig.max_qty_per_inbound,\n        ...data\n      };\n    },\n    modifySearchForm(schema, value) {\n      this.$set(this.searchForm, schema.field, value + '');\n    },\n    onSelectSeller(item) {\n      this.modifyForm({ field: 'seller_name' }, item.name);\n    },\n    modifyForm(schema, value) {\n      if (schema.field === 'business_mode') {\n        // 由B2C转为FBS，1变2，使用配置的默认值\n        // 目前没有FBS转为B2C，暂时不考虑\n        if (this.form.business_mode === 1 && value === 2) {\n          this.form = {\n            ...this.form,\n            sku_per_inbound_min: this.limitConfig.min_sku_per_inbound,\n            sku_per_inbound_max: this.limitConfig.max_sku_per_inbound,\n            qty_per_inbound_min: this.limitConfig.min_qty_per_inbound,\n            qty_per_inbound_max: this.limitConfig.max_qty_per_inbound\n          };\n        }\n      }\n      this.$set(this.form, schema.field, value);\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.tips {\n  color: $orange;\n}\n.content {\n  max-height: 500px;\n  overflow-y: auto;\n  overflow-x: hidden;\n  padding: 10px 20px 20px 0;\n}\n\n.search-box {\n  margin: 0 0 20px;\n  display: flex;\n  .search-content {\n    width: 300px;\n    margin-right: 12px;\n  }\n  .search-options {\n    flex: 1;\n  }\n}\n/deep/ .shop-search-box {\n  width: 100%;\n}\n.bottom {\n  text-align: right;\n  margin: 20px 0;\n}\n/deep/ .short-input {\n  display: inline-block;\n  width: 100px;\n}\n/deep/ .el-form-item {\n  margin-bottom: 16px;\n}\n/deep/ .el-autocomplete {\n  width: 100%;\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/shopWhiteListV2/list.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"shopWhitelist2\" is not PascalCase.","line":188,"column":9,"nodeType":"Literal","endLine":188,"endColumn":25,"fix":{"range":[6996,7010],"text":"ShopWhitelist2"}},{"ruleId":"vue/no-unused-components","severity":2,"message":"The \"ExportHistoryDialog\" component has been registered but not used.","line":192,"column":5,"nodeType":"Property","endLine":192,"endColumn":24}],"errorCount":2,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <el-container class=\"FBS-shopWhiteList-wrapper pms-ele-ui pms-new-ui\">\n    <section class=\"list-header-wrapper\">\n      <div class=\"list-create-btn\" v-if=\"canOperate\">\n        <span class=\"set-inbound-limits\" @click=\"onShowInboundLimitDialog\">\n          <i class=\"el-icon-setting set-inbound-icon\"></i>\n          <span class=\"set-inbound-text\">{{ $t('FBSSetInboundLimits') }}</span>\n        </span>\n        <!-- <el-popover popper-class=\"break-word\" placement=\"top\" width=\"400\" trigger=\"hover\">\n          <div class=\"pms-text-left\">{{ $t('FBSNewWhiteListShopTips') }}</div>\n          <svg-icon slot=\"reference\" iconClass=\"question-circle\" class=\"question-icon\"></svg-icon>\n        </el-popover> -->\n        <el-button class=\"list-btn\" @click=\"onAdd\">\n          <i class=\"el-icon-plus\"></i>\n          <span>{{ $t('ShopWhitelist') }}</span>\n        </el-button>\n      </div>\n\n      <el-tabs class=\"pms-ele-ui\" tab-position=\"bottom\" v-model=\"activeTab\" @tab-click=\"onTabClick\">\n        <el-tab-pane v-for=\"item in countryList\" :key=\"item.value\" :label=\"item.label\" :name=\"item.value\"></el-tab-pane>\n      </el-tabs>\n    </section>\n    <section class=\"main-wrapper\">\n      <listSearch\n        :searchForm=\"{\n          region: activeTab,\n          ...searchForm\n        }\"\n        :components=\"searchSchema\"\n        @change=\"onChangeSearchForm\"\n      >\n      </listSearch>\n      <el-row>\n        <el-col class=\"pms-text-right mb16 mt16\">\n          <el-button class=\"list-btn white-blue\" @click=\"onReset\">{{ $t('commonClear') }}</el-button>\n          <el-button :loading=\"isLoading\" class=\"list-btn\" @click=\"onResetPageNoSearch\">{{\n            $t('commonSearch')\n          }}</el-button>\n        </el-col>\n      </el-row>\n      <el-row type=\"flex\" justify=\"space-between\" class=\"mb16\">\n        <el-col :span=\"20\">\n          <template v-if=\"canOperate\">\n            <uploadBtnGroup\n              key=\"upload\"\n              :uploadParams=\"uploadConfig.params\"\n              :taskType=\"uploadConfig.taskType\"\n              @downloadTemplate=\"uploadConfig.template\"\n            >\n            </uploadBtnGroup>\n            <uploadBtnGroup\n              key=\"update\"\n              :uploadParams=\"updateConfig.params\"\n              :taskType=\"updateConfig.taskType\"\n              @downloadTemplate=\"updateConfig.template\"\n              :btnText=\"$gt('Mass Update', 'common')\"\n              :historyBtnText=\"$gt('Update History', 'common')\"\n            >\n            </uploadBtnGroup>\n          </template>\n        </el-col>\n        <el-col class=\"pms-text-right\" :span=\"10\">\n          <exportBtnGroup\n            :api=\"exportConfig.api\"\n            :taskType=\"exportConfig.taskType\"\n            :params=\"exportConfig.params\"\n          ></exportBtnGroup>\n        </el-col>\n      </el-row>\n      <el-table :data=\"tableList\" border v-loading=\"isLoading\">\n        <el-table-column v-for=\"item in computedTableSchema\" v-bind=\"item\" :key=\"item.field\" :prop=\"item.field\">\n          <template slot-scope=\"scope\">\n            <formItem :renderData=\"{ schema: item, form: scope.row }\"></formItem>\n          </template>\n        </el-table-column>\n        <el-table-column width=\"150px\" fixed=\"right\" :label=\"$gt('Action')\">\n          <template slot-scope=\"scope\">\n            <div class=\"table-btn-box\">\n              <el-button\n                v-for=\"item in getActionSchema(scope.row)\"\n                :key=\"item.key\"\n                v-bind=\"item\"\n                @click=\"item.onClick(scope.row)\"\n              >\n                {{ item.label }}\n              </el-button>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column width=\"40px\" fixed=\"right\">\n          <template slot-scope=\"scope\" slot=\"header\">\n            <optionsField\n              btnType=\"icon\"\n              namespace=\"shopWhiteList\"\n              :fieldList=\"displayOptionSchema\"\n              :defaultList=\"defaultDisplayOptions\"\n              @fieldChange=\"list => (displayOptions = list)\"\n            ></optionsField>\n          </template>\n        </el-table-column>\n      </el-table>\n      <section class=\"pagination-center\">\n        <el-pagination\n          background\n          layout=\"sizes, prev, pager, next\"\n          :current-page=\"pager.pageno\"\n          :page-sizes=\"[10, 20, 50, 100]\"\n          :total.sync=\"total\"\n          :page-size=\"pager.count\"\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleChangePage\"\n        ></el-pagination>\n      </section>\n    </section>\n\n    <SetInboundLimitDialog\n      :country=\"activeTab\"\n      :visible=\"isInboundLimitDialog\"\n      :limitConfig=\"limitConfig\"\n      @close=\"closeInboundLimitDialog\"\n      @save=\"getShopDefaultLimits\"\n    ></SetInboundLimitDialog>\n\n    <actionLog\n      class=\"shop-action-log-box\"\n      ref=\"actionLogDialog\"\n      type=\"action\"\n      :visible=\"isActionLogDialog\"\n      @close=\"isActionLogDialog = false\"\n      :params=\"actionLogParams\"\n      :requestApi=\"shopWhitelistAPI.actionLog\"\n    >\n      <template v-slot:header>\n        <el-tabs class=\"shop-action-log-tabs\" v-model=\"actionLogParams.type\" type=\"card\" @tab-click=\"reflashActionLog\">\n          <el-tab-pane :label=\"$gt('Sync Log')\" name=\"1\"></el-tab-pane>\n          <el-tab-pane :label=\"$gt('Manual Log')\" name=\"2\"></el-tab-pane>\n        </el-tabs>\n      </template>\n    </actionLog>\n\n    <checkDialog\n      v-if=\"isShowCheckInfo\"\n      v-bind=\"checkInfo\"\n      @close=\"isShowCheckInfo = false\"\n      @submit=\"submitCheckInfo\"\n    ></checkDialog>\n\n    <createShopDialogV2\n      :loading=\"isLoadingFrom\"\n      v-if=\"isShowEditDialog\"\n      :region=\"activeTab\"\n      :limitConfig=\"limitConfig\"\n      v-bind=\"editDialog\"\n      @close=\"isShowEditDialog = false\"\n      @submit=\"submitShopForm\"\n    ></createShopDialogV2>\n  </el-container>\n</template>\n\n<script>\nimport listSearch from '@/components/common/listSearch';\nimport { changeToSearchForm, getSearchSchemaTemplate } from '@/components/BaseItem/schemaTemplate';\nimport formItem from '@/components/BaseItem/formItem';\n\nimport { ajax } from '@/utils/request';\nimport { formatParams } from '@/utils/formatParams';\nimport { Permission } from '@/utils/constant';\nimport { hasPermission } from '@/utils/permission';\n\nimport exportBtnGroup from '@/components/common/exportBtnGroup';\nimport uploadBtnGroup from '@/components/common/uploadBtnGroup';\nimport ExportHistoryDialog from '@/components/ApproveList/exportHistoryDialog';\nimport optionsField from '@/components/ApproveList/optionsField';\nimport actionLog from '@/components/actionLogDialog/actionLog';\n\nimport SetInboundLimitDialog from './setInboundLimitDialog';\nimport createShopDialogV2 from './createShopDialogV2';\nimport checkDialog from './checkDialog';\nimport { getSearchSchema, getTableSchema, shopWhitelistAPI } from './config';\nimport { getShopDefaultLimits, apiUpdateSkuChannel } from '@/api/FBS/shopWhiteList';\n/**\n * TODO:\n * add&edit：checkbox和radio\n * 校验弹窗sku字段优化：seller、supplier非必要不出现\n */\n\nexport default {\n  name: 'shopWhitelist2',\n  components: {\n    SetInboundLimitDialog,\n    actionLog,\n    ExportHistoryDialog,\n    exportBtnGroup,\n    uploadBtnGroup,\n    optionsField,\n    checkDialog,\n    formItem,\n    createShopDialogV2,\n    listSearch\n  },\n  data() {\n    return {\n      shopWhitelistAPI,\n      isLoading: false,\n      isLoadingFrom: false,\n      canOperate: false,\n      messageBox: null,\n      // search\n      searchForm: {},\n      activeTab: this.$store.getters.country,\n      isInboundLimitDialog: false,\n      // table\n      pager: {\n        pageno: 1,\n        count: 10\n      },\n      total: 0,\n      tableList: [],\n      tableSchema: getTableSchema(),\n      disabledSyncList: [],\n      defaultDisplayOptions: getTableSchema().map(({ field }) => field),\n      displayOptions: [],\n      // table options\n\n      // action log\n      isActionLogDialog: false,\n      actionLogParams: {\n        shop_id: '',\n        type: '1'\n      },\n\n      // history\n      taskType: 0,\n      isShowExportHistory: false,\n      exportTitle: '',\n      // check info\n      isShowCheckInfo: false,\n      checkInfo: {\n        checkData: {},\n        title: '',\n        actionTips: '',\n        shop_id: '',\n        goOn: null\n      },\n      // edit\n      isShowEditDialog: false,\n      editDialog: {\n        data: {},\n        title: '',\n        isCreate: false,\n        isMultipleWhs: false\n      },\n      // limit config\n      limitConfig: {}\n    };\n  },\n  computed: {\n    exportAndSearchParams() {\n      const params = { region: this.activeTab, ...formatParams(this.searchForm) };\n      const shop_id = +params.shop_id || null;\n      if (shop_id) {\n        params.shop_id_list = [shop_id];\n      }\n      delete params.shop_id;\n      return params;\n    },\n    uploadConfig() {\n      return {\n        taskType: 801,\n        params: {\n          action: shopWhitelistAPI.uploadShops + `?region=${this.activeTab}`\n        },\n        template: shopWhitelistAPI.uploadShopsTemplate\n      };\n    },\n    updateConfig() {\n      return {\n        taskType: 802,\n        params: {\n          action: shopWhitelistAPI.updateShops + `?region=${this.activeTab}`\n        },\n        template: shopWhitelistAPI.updateShopsTemplate\n      };\n    },\n    exportConfig() {\n      return {\n        taskType: 803,\n        api: shopWhitelistAPI.exportShops,\n        params: this.exportAndSearchParams\n      };\n    },\n    displayOptionSchema() {\n      return this.tableSchema.filter(item => !item.fixed && this.isShowItem(item));\n    },\n    computedTableSchema() {\n      const config = this.tableSchema.filter(item => this.isShowItem(item) && this.displayOptions.includes(item.field));\n      config.forEach(item => {\n        if (item.field === 'sbs_vendor_id') {\n          item.render = function(schema, form) {\n            const id = form.sbs_vendor_id;\n            if (!id) return '/';\n            const href = `/admin/fbs/sellerAndShop/seller/detail/${id}`;\n            return [\n              'a',\n              {\n                class: 'href',\n                attrs: {\n                  target: '_blank',\n                  href\n                }\n              },\n              id\n            ];\n          };\n        }\n      });\n      return config;\n    },\n    searchSchema() {\n      return [\n        getSearchSchemaTemplate('shop_id'),\n        ...getSearchSchema({ region: this.activeTab, ...this.searchForm }).map(item => changeToSearchForm(item))\n      ];\n    },\n    formatCheckedType() {\n      return this.checkedType === 'all' ? this.$t('commonAllPage') : this.$t('commonCurrentPage');\n    },\n    countryList() {\n      return this.$store.getters.countrySelectList;\n    },\n    actionSchema() {\n      return [\n        {\n          label: this.$gt('Edit'),\n          onClick: row => {\n            this.isShowEditDialog = true;\n            this.editDialog.data = row;\n            this.editDialog.title = this.$gt('Edit Shop');\n            this.editDialog.isCreate = false;\n          }\n        },\n        {\n          label: this.$gt('Sync'),\n          onClick: this.onSync,\n          disabled: row => {\n            return this.disabledSyncList.includes(row.shop_id);\n          }\n        },\n        {\n          label: this.$gt('Remove'),\n          onClick: this.onRemove,\n          isHidden(row) {\n            return row.business_mode !== 1; // 仅B2C可以操作\n          }\n        },\n        {\n          label: this.$gt('Inactive'),\n          onClick: this.changeActive,\n          isHidden(row) {\n            return row.business_mode !== 2 || row.fbs_status !== 2;\n          }\n        },\n        {\n          label: this.$gt('Active'),\n          onClick: this.changeActive,\n          isHidden(row) {\n            return row.business_mode !== 2 || row.fbs_status !== 1;\n          }\n        },\n        {\n          label: this.$gt('Action Log'),\n          onClick: this.onShowLog\n        },\n        {\n          label: this.$t('updateSkuChannel'),\n          onClick: this.onUpdateSkuChannel,\n          isHidden(row) {\n            return row.business_mode !== 2; // 对于 FBS shop\n          }\n        }\n      ].map((item, i) => {\n        item.type = 'text';\n        item.key = i;\n        return item;\n      });\n    }\n  },\n  watch: {\n    activeTab: {\n      immediate: true,\n      handler(val) {\n        this.getShopDefaultLimits(val);\n      }\n    }\n  },\n  methods: {\n    ajax,\n    async getShopDefaultLimits(val) {\n      const res = await getShopDefaultLimits({\n        country: val || this.activeTab\n      });\n      this.limitConfig = res.data || {};\n    },\n    submitCheckInfo() {\n      if (this.checkInfo.goOn) this.checkInfo.goOn();\n    },\n    async submitShopForm(form) {\n      // this.editDialog.isCreate 判断是create还是edit\n      if (this.editDialog.isCreate) {\n        const data = await this.ajax(shopWhitelistAPI.addShop, form);\n        if (data === false) return;\n      } else {\n        const check = await this.editShop(form);\n        if (check === false) return;\n      }\n      this.isShowEditDialog = false;\n      this.onSearch();\n    },\n    reflashActionLog() {\n      this.$refs['actionLogDialog'].handleCurrentChange(1);\n    },\n    onChangeSearchForm({ value, field }) {\n      this.$set(this.searchForm, field, value);\n      this.onResetPageNoSearch();\n    },\n    isShowItem(item) {\n      return !item.isHidden || !item.isHidden({ region: this.activeTab });\n    },\n    // 确认并弹出校验信息\n    checkAndShowOrder(res, config) {\n      if (res.retcode !== 0) {\n        if (res.retcode === 24001) {\n          this.isShowCheckInfo = true;\n          this.checkInfo = {\n            checkData: res.data,\n            actionTips: res.message,\n            ...config\n          };\n        } else {\n          this.$message.error(res.message);\n        }\n        return false;\n      }\n      this.isShowCheckInfo = false;\n      return true;\n    },\n    async onRemove({ shop_id }) {\n      // 先校验\n      this.isLoadingFrom = true;\n      this.showLoadingMsg();\n      const res = await shopWhitelistAPI.checkDeleteShop({\n        shop_id,\n        region: this.activeTab\n      });\n      this.isLoadingFrom = false;\n      this.closeLoadingMsg();\n\n      const checkOrder = this.checkAndShowOrder(res, {\n        title: this.$gt('Remove Shop'),\n        shop_id,\n        goOn: () => {\n          this.onRemove({ shop_id });\n        }\n      });\n      if (checkOrder === false) return;\n\n      // 二次确认\n      const check2 = await this.$confirm(\n        `Are you sure you want to remove shop: ${shop_id} from whitelist?`,\n        this.$gt('Remove Shop') + ':' + shop_id,\n        {\n          confirmButtonText: this.$gt('Confirm'),\n          cancelButtonText: this.$gt('Cancel')\n        }\n      );\n      if (!check2) return;\n\n      const data = await this.ajax(shopWhitelistAPI.deleteShop, {\n        shop_id,\n        region: this.activeTab\n      });\n      if (data) {\n        this.onSearch();\n      }\n    },\n    onAdd() {\n      this.isShowEditDialog = true;\n      this.editDialog.data = {};\n      this.editDialog.title = this.$gt('Add Shop');\n      this.editDialog.isCreate = true;\n    },\n    async onSync(row) {\n      const data = await this.ajax(\n        shopWhitelistAPI.syncShop,\n        { shop_id: row.shop_id },\n        { successTips: this.$gt('Success') }\n      );\n      if (data === false) return;\n      // 成功后按钮置灰10s\n      this.disabledSyncList.push(row.shop_id);\n      setTimeout(() => {\n        const i = this.disabledSyncList.indexOf(row.shop_id);\n        if (i >= 0) {\n          this.disabledSyncList.splice(i, 1);\n        }\n      }, 10000);\n    },\n    async changeActive(row) {\n      const updateStatus = row.fbs_status === 1 ? 2 : 1;\n      const check = await this.editShop({\n        shop_id: row.shop_id,\n        region: row.region,\n        fbs_status: updateStatus\n      });\n      if (check === false) return;\n      this.$set(row, 'fbs_status', updateStatus);\n    },\n    async editShop(data) {\n      this.isLoadingFrom = true;\n      this.showLoadingMsg();\n      let res = null;\n      try {\n        res = await shopWhitelistAPI.editShop(data);\n      } catch (e) {\n        this.$message.error(e.message);\n        return;\n      } finally {\n        this.isLoadingFrom = false;\n        this.closeLoadingMsg();\n      }\n      const checkOrder = this.checkAndShowOrder(res, {\n        title: this.$gt('Edit Shop'),\n        shop_id: data.shop_id,\n        goOn: () => this.editShop(data)\n      });\n\n      return checkOrder;\n    },\n    showLoadingMsg() {\n      this.messageBox = this.$message({\n        message: '<i class=\"el-icon-loading\"></i> Checking orders...Please don\\'t refresh or close this page',\n        dangerouslyUseHTMLString: 'true',\n        type: 'warning',\n        duration: 0\n      });\n    },\n    closeLoadingMsg() {\n      this.messageBox && this.messageBox.close && this.messageBox.close();\n    },\n    getActionSchema(row) {\n      return this.actionSchema\n        .filter(item => !item.isHidden || !item.isHidden(row))\n        .map(item => {\n          return {\n            ...item,\n            disabled: item.disabled && item.disabled(row)\n          };\n        });\n    },\n    onShowInboundLimitDialog() {\n      this.isInboundLimitDialog = true;\n    },\n    closeInboundLimitDialog() {\n      this.isInboundLimitDialog = false;\n    },\n    onTabClick() {\n      this.onReset();\n      this.onResetPageNoSearch();\n    },\n    onReset() {\n      this.searchForm = {};\n    },\n    handleChangePage(pageno) {\n      this.pager.pageno = pageno;\n      this.onSearch();\n    },\n    handleSizeChange(count) {\n      this.pager.count = count;\n      this.pager.pageno = 1;\n      this.onSearch();\n    },\n    onResetPageNoSearch() {\n      this.handleChangePage(1);\n    },\n    async onSearch() {\n      const params = {\n        ...this.pager,\n        ...this.exportAndSearchParams\n      };\n      const data = await this.ajax(shopWhitelistAPI.getShops, params);\n      if (!data) return;\n      this.tableList =\n        data.shop_info_list.map(item => {\n          return item;\n        }) || [];\n      this.total = data.total;\n      this.editDialog.isMultipleWhs = data.one_shop_with_multiple_whs;\n    },\n    onShowLog(row) {\n      this.actionLogParams = {\n        shop_id: row.shop_id,\n        type: '1'\n      };\n      this.isActionLogDialog = true;\n    },\n    onUpdateSkuChannel(row) {\n      apiUpdateSkuChannel({ shop_id: row.shop_id }).then(res => {\n        if (res.retcode === 0) {\n          this.$message.success(this.$t('commonSuccess'));\n        } else {\n          this.$message.error(res.info);\n        }\n      }).catch(err => {\n        this.$message.error(err.message);\n      });\n    }\n  },\n  created() {\n    this.canOperate = hasPermission(Permission.SHOP_LIST_EDIT);\n    this.onSearch();\n  }\n};\n</script>\n\n<style scoped lang=\"scss\">\n@import '~@/styles/variables.scss';\n.href {\n  color: $blue;\n}\n.FBS-shopWhiteList-wrapper {\n  .shop-action-log-tabs {\n    margin-bottom: 12px;\n  }\n  padding: 0 20px;\n  display: block;\n  .list-header-wrapper {\n    position: relative;\n    margin-bottom: 16px;\n    .set-inbound-limits {\n      color: $blue;\n      font-size: 14px;\n      margin-right: 8px;\n      cursor: pointer;\n      .set-inbound-icon {\n        font-size: 16px;\n      }\n      .set-inbound-text {\n        margin-left: 4px;\n      }\n    }\n    .list-create-btn {\n      position: absolute;\n      right: 0;\n      top: 5px;\n      z-index: 1;\n    }\n    .question-icon {\n      width: 14px;\n      height: 14px;\n      margin-right: 8px;\n      fill: $black_light_one;\n    }\n  }\n  .main-wrapper {\n    width: 100%;\n    padding: 0;\n  }\n  .pagination-center {\n    display: flex;\n    justify-content: center;\n    margin-top: 20px;\n  }\n}\n.mr-btn {\n  margin-right: 12px;\n}\n</style>\n<style lang=\"scss\">\n@import '~@/styles/common.scss';\n.pms-ele-ui.select-all-table-column {\n  div {\n    padding: 0;\n  }\n  .select-page-dropdown {\n    padding: 0;\n    margin-left: 0;\n    .el-button {\n      border: none;\n      background: unset;\n      padding: 0px;\n      &:nth-child(1) {\n        word-break: break-word;\n        white-space: normal;\n        width: 60px;\n        line-height: 16px;\n        padding-right: 0px;\n      }\n      &::before {\n        width: 0;\n      }\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/FBS/shopWhiteListV2/setInboundLimitDialog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/RTSManagement/addSku.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/RTSManagement/calendarList.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"rts-calendar-list\" is not PascalCase.","line":33,"column":9,"nodeType":"Literal","endLine":33,"endColumn":28,"fix":{"range":[957,974],"text":"RtsCalendarList"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div class=\"pms-ui rts-calendar-box\">\n    <div class=\"calendar-header\">\n      <p class=\"calendar-title\">{{$t('RTSCalendar')}}</p>\n    </div>\n    <searchForm\n      :searchSchema=\"searchSchema\"\n      :actionSchema=\"searchActionSchema\"\n      @search=\"onEmitSearch\"\n      @exportAction=\"onExport\"\n      ref=\"searchFormComp\"\n    ></searchForm>\n    <commonTable\n      :dataList=\"tableData\"\n      v-loading=\"loading\"\n      :config=\"{ align: 'center' }\"\n      :tableSchema=\"tableSchema\"\n    ></commonTable>\n  </div>\n</template>\n\n<script>\nimport searchForm from '@/components/ApproveList/search';\nimport commonTable from '@/components/ApproveList/list';\nimport { downloadBlobFile } from '@/utils/downloadFile';\nimport { getRTSCalendars, exportRTSCalendars } from '@/api/rtsCalendars';\n\nimport moment from 'moment';\n// import { formatParams } from '@/utils/formatParams';\n// import { hasPermission } from '@/utils/permission';\n\nexport default {\n  name: 'rts-calendar-list',\n  components: { commonTable, searchForm },\n  data() {\n    return {\n      tableData: [],\n      loading: false,\n      searchForm: {},\n      datePickerType: 'dateRange',\n      searchActionSchema: [\n        { type: 'search' },\n        { type: 'clear' },\n        { type: 'export' }\n      ],\n      pickStartDate: 0,\n      pickEndDate: 0,\n      today: Date.now(),\n      maxRange: 31 * 24 * 60 * 60 * 1000, // 最大范围31天\n      // disabledDateBase: targetDate => { // 需求变更，前端暂时不做限制，取决于wms是否有数据\n      //   const target = moment(targetDate);\n\n      //   // 禁止选择今天之后的日期\n      //   if (target.isAfter(this.today)) return true;\n\n      //   // 禁止选3个月前\n      //   if (target.isBefore(moment(this.today).subtract(3, 'M'))) {\n      //     return true;\n      //   }\n\n      //   return false;\n      // },\n      disabledDatePick: targetDate => {\n        const targetTime = targetDate.getTime();\n        if (this.pickStartDate && !this.pickEndDate) {\n          if (targetTime <= this.pickStartDate - this.maxRange) return true;\n          if (targetTime >= this.pickStartDate + this.maxRange) return true;\n        }\n\n        return false;\n      },\n      defaultPickerOptions: {\n        onPick: values => {\n          this.pickStartDate = values.minDate && values.minDate.getTime();\n          this.pickEndDate = values.maxDate && values.maxDate.getTime();\n        },\n        shortcuts: [\n          {\n            text: this.$t('commonByDate'),\n            onClick: picker => {\n              this.datePickerType = 'date';\n              this.onSearch();\n            }\n          },\n          {\n            text: this.$t('commonByRange'),\n            onClick: picker => {\n              this.datePickerType = 'dateRange';\n              this.onSearch();\n            }\n          }\n        ]\n      }\n    };\n  },\n  computed: {\n    pickerOptions() {\n      const options = Object.assign(\n        {\n          disabledDate: this.disabledDateBase\n        },\n        this.defaultPickerOptions\n      );\n      if (this.datePickerType === 'dateRange') {\n        options.disabledDate = this.disabledDatePick;\n      }\n      return options;\n    },\n    countryList() {\n      const noRepeatList = [\n        ...new Set([\n          ...this.$store.getters.countryList.map(item => item.country)\n        ])\n      ];\n      const formatList = noRepeatList.map(item => ({\n        label: item,\n        value: item\n      }));\n      return formatList;\n    },\n    warehouseList() {\n      const userWarehouseList = this.$store.getters.warehouseList\n        .filter(item => item.country === this.searchForm.region)\n        .map(item => ({ label: item.warehouse, value: item.warehouse }));\n      return userWarehouseList;\n    },\n    searchSchema() {\n      const list = [\n        {\n          type: 'select',\n          width: 5,\n          field: 'region',\n          label: this.$t('purchaseRequest.region'),\n          options: this.countryList,\n          placeholder: this.$t('Select'),\n          relationFields: [{ field: 'warehouse', onChange: () => '' }]\n        },\n        {\n          type: 'select',\n          width: 5,\n          field: 'warehouse',\n          label: this.$t('purchaseOrder.warehouse'),\n          options: this.warehouseList,\n          placeholder: this.$t('Select'),\n          disabled: this.searchForm.region === ''\n        },\n        {\n          type: 'date',\n          width: 30,\n          field: 'date',\n          label: this.$t('commonDate'),\n          valueFormat: 'yyyy-MM-dd',\n          pickerOptions: this.pickerOptions,\n          hidden: this.datePickerType !== 'date',\n          defaultValue: moment().format('YYYY-MM-DD')\n        },\n        {\n          type: 'dateRange',\n          width: 30,\n          field: 'dateRange',\n          label: this.$t('commonDate'),\n          valueFormat: 'yyyy-MM-dd HH:mm:ss',\n          pickerOptions: this.pickerOptions,\n          hidden: this.datePickerType !== 'dateRange',\n          defaultValue: [\n            `${moment().format('YYYY-MM-DD')} 00:00:00`,\n            `${moment().format('YYYY-MM-DD')} 23:59:59`\n          ]\n        }\n      ];\n\n      return list;\n    },\n    tableSchema() {\n      return [\n        {\n          label: this.$t('commonDate'),\n          field: 'date',\n          minWidth: 'auto'\n        },\n        {\n          label: this.$t('rtsTotalReturn'),\n          field: 'total_return',\n          minWidth: 'auto'\n        },\n        {\n          label: this.$t('rtsWarehousePeakCapacity\t'),\n          field: 'whs_peak_capacity',\n          minWidth: 'auto'\n        },\n        {\n          label: this.$t('rtsWarehouseCapacity\t'),\n          field: 'whs_capacity',\n          minWidth: 'auto'\n        }\n      ];\n    }\n  },\n  created() {\n    this.onSearch();\n  },\n  methods: {\n    moment,\n    onEmitSearch(form) {\n      const data = {\n        warehouse: form.warehouse,\n        region: form.region\n      };\n\n      if (this.datePickerType === 'date') {\n        data.date = `${form.date} 00:00:00`;\n      } else if (Array.isArray(form.dateRange)) {\n        data.date_range_start = form.dateRange[0];\n        data.date_range_end = form.dateRange[1];\n      }\n      this.searchForm = data;\n\n      this.onSearch();\n    },\n    async onSearch() {\n      try {\n        if (!this.searchForm.region || !this.searchForm.warehouse) return false;\n        const res = await getRTSCalendars(this.searchForm);\n        if (res.retcode === 0) {\n          this.tableData = res.data.calendar_list.map(item => {\n            item.date = moment(item.date, 'YYYY-MM-DD hh:mm:ss').format(\n              'YYYY-MM-DD'\n            );\n            return item;\n          });\n        } else {\n          this.$message.error(res.info);\n        }\n      } catch (e) {\n        this.$message.error(\n          'failed to connect network, pls try it again later'\n        );\n      }\n    },\n    onExport() {\n      let fileName = this.searchForm.warehouse;\n      if (this.datePickerType === 'dateRange') {\n        fileName += `${moment(\n          this.searchForm.date_range_start,\n          'YYYY-MM-DD HH:mm:ss'\n        ).format('YYYYMMDD')}-${moment(\n          this.searchForm.date_range_end,\n          'YYYY-MM-DD HH:mm:ss'\n        ).format('YYYYMMDD')}`;\n      } else {\n        fileName += moment(this.searchForm.date, 'YYYY-MM-DD HH:mm:ss').format(\n          'YYYYMMDD'\n        );\n      }\n      fileName += '.xls';\n      exportRTSCalendars(this.searchForm)\n        .then(resp => {\n          if (resp.type === 'application/json') {\n            const reader = new FileReader();\n            reader.onloadend = () => {\n              const result = JSON.parse(reader.result);\n              if (result.retcode !== 0) {\n                this.$message({ type: 'error', message: result.info });\n              }\n            };\n            reader.readAsText(resp);\n          } else {\n            downloadBlobFile(resp, fileName);\n          }\n        })\n        .catch(e => {\n          this.$message({ type: 'error', message: e });\n        });\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.rts-calendar-box {\n  padding: 0 10px;\n  .calendar-header {\n    border-bottom: 1px solid #edeef2;\n    margin-bottom: 24px;\n    padding-left: 20px;\n    // padding-top: 20px;\n    .calendar-title {\n      font-size: 24px;\n      color: rgba(0, 0, 0, 0.65);\n      line-height: 44px;\n    }\n  }\n}\n</style>\n<style lang=\"scss\">\n@import '~@/styles/common.scss';\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/RTSManagement/comment.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/RTSManagement/create.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/RTSManagement/detail.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/RTSManagement/list.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":20,"column":42,"nodeType":"VIdentifier","messageId":"deprecated","endLine":20,"endColumn":48},{"ruleId":"vue/no-unused-components","severity":2,"message":"The \"searchForm\" component has been registered but not used.","line":266,"column":27,"nodeType":"Property","endLine":266,"endColumn":37}],"errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"rtsMgt-list-wrapper pms-ele-ui pms-ui\">\n    <section class=\"list-header-wrapper\">\n      <div class=\"list-create-btn\" v-if=\"canCreate && activeTab === 'RTSList'\">\n        <el-button class=\"list-btn\" @click=\"onCreateRTS\">\n          <i class=\"el-icon-plus\"></i>\n          <span>{{$t('commonNewRequest')}}</span>\n        </el-button>\n      </div>\n\n      <el-tabs class=\"pms-ele-ui\" tab-position=\"bottom\" v-model=\"activeTab\" @tab-click=\"onTabClick\">\n        <el-tab-pane\n          v-for=\"item in headerTabs\"\n          :key=\"item.value\"\n          :label=\"$t(item.label)\"\n          :name=\"item.name\"\n        ></el-tab-pane>\n      </el-tabs>\n    </section>\n    <el-form :model=\"searchForm\" @submit.native.prevent=\"onResetPageNoSearch\">\n      <el-button v-show=\"false\" native-type=\"submit\"></el-button>\n      <el-row>\n        <el-col\n          v-for=\"item in searchSchema\"\n          :key=\"item.field\"\n          :span=\"item.width\"\n          :offset=\"item.offset || 0\"\n        >\n          <el-form-item\n            :label-width=\"item.labelWidth || '130px'\"\n            :class=\"item.class || ''\"\n            :label=\"item.label\"\n          >\n            <el-input\n              v-if=\"item.type === 'input'\"\n              v-model=\"searchForm[item.field]\"\n              @change=\"onResetPageNoSearch\"\n            ></el-input>\n            <el-select\n              v-if=\"item.type === 'select'\"\n              :multiple=\"item.multiple\"\n              v-model=\"searchForm[item.field]\"\n              :collapse-tags=\"true\"\n              :disabled=\"item.disabled || false\"\n              @change=\"(value) => onChangeSelect(value, item.field)\"\n            >\n              <el-option\n                v-for=\"option in item.options || []\"\n                :key=\"option.value\"\n                :label=\"option.label\"\n                :value=\"option.value\"\n              ></el-option>\n            </el-select>\n            <el-date-picker\n              v-if=\"item.type === 'date-picker'\"\n              v-model=\"searchForm[item.field]\"\n              type=\"daterange\"\n              value-format=\"yyyy-MM-dd HH:mm:ss\"\n              :default-time=\"['00:00:00', '23:59:59']\"\n              >\n            </el-date-picker>\n            <SBSVendorIdForm v-if=\"item.type === 'sbsVendorId'\" @getSBSVendorID=\"handleSBSVendorIDSelect\" merchantType=\"ALL\"></SBSVendorIdForm>\n          </el-form-item>\n        </el-col>\n      </el-row>\n      <el-row type=\"flex\" justify=\"space-between\" class=\"mb16\">\n        <el-col :span=\"20\">\n          <span v-show=\"activeTab === 'RTSList'\">\n            <el-upload\n              class=\"list-btn white-blue\"\n              ref=\"uploadMassSupplierSku\"\n              action=\"/api/rts/rts_request/upload/\"\n              :on-success=\"handleUploadSuccess\"\n              :on-error=\"handleUploadError\"\n              :headers=\"uploadHeader\"\n              :show-file-list=\"false\"\n              :data=\"getCsrfData()\"\n            >{{$t('commonMassUpload')}}</el-upload>\n            <el-button\n              type=\"text\"\n              class=\"pms-btn-ui link-btn\"\n              @click=\"getTemplate\"\n            >{{$t('commonTemplate')}}</el-button>\n          </span>\n          <span v-show=\"activeTab === 'myPendingApprovals'\">\n            <el-button\n              v-if=\"canApprove\"\n              :disabled=\"disabledApprove\"\n              class=\"list-btn white-green\"\n              @click=\"onMassApproveOrReject('approve')\"\n            >\n              <el-popover\n                v-if=\"disabledApprove\"\n                placement=\"top\"\n                trigger=\"hover\"\n                popper-class=\"break-word\">\n                <span v-if=\"checkedType === 'all'\">{{$t('commonMassApproveRejectIsAvailableonlyForCurrentPage')}}</span>\n                <span v-else>{{$t('rtsMgtPleaseFilterDeliveryMethodAndRTSTypeFirst')}}</span>\n                <span slot=\"reference\">{{$t('commonMassApprove')}}</span>\n              </el-popover>\n              <span v-else>{{$t('commonMassApprove')}}</span>\n            </el-button>\n            <el-button\n              v-if=\"canApprove\"\n              :disabled=\"disabledApprove\"\n              class=\"list-btn white-red\"\n              @click=\"onMassApproveOrReject('reject')\"\n            >\n              <el-popover\n                v-if=\"disabledApprove\"\n                placement=\"top\"\n                trigger=\"hover\"\n                popper-class=\"break-word\"\n              >\n                <span v-if=\"checkedType === 'all'\">{{$t('commonMassApproveRejectIsAvailableonlyForCurrentPage')}}</span>\n                <span v-else>{{$t('rtsMgtPleaseFilterDeliveryMethodAndRTSTypeFirst')}}</span>\n                <span slot=\"reference\">{{$t('commonMassReject')}}</span>\n              </el-popover>\n              <span v-else>{{$t('commonMassReject')}}</span>\n            </el-button>\n          </span>\n          <el-dropdown\n              :loading=\"loadingExport\"\n              class=\"exportGroup-btn white-blue mr8\"\n              split-button\n              type=\"primary\"\n              @command=\"onExportContentClick\"\n            >\n              <span>{{$t('commonExport')}}</span>\n              <el-dropdown-menu slot=\"dropdown\">\n                <el-dropdown-item :command=\"btn\" v-for=\"btn in exportBtns\" :key=\"btn.text\">\n                  <span>{{$t(btn.text)}}</span>\n                </el-dropdown-item>\n              </el-dropdown-menu>\n            </el-dropdown>\n            <el-button class=\"pms-ele-ui list-btn white-blue\" @click=\"showExportHistory\">{{$t('commonExportHistory')}}</el-button>\n        </el-col>\n        <el-col class=\"pms-text-right\" :span=\"4\">\n          <el-button class=\"list-btn\" @click=\"onResetPageNoSearch\">{{$t('commonSearch')}}</el-button>\n          <el-button class=\"list-btn white-blue\" @click=\"onReset\">{{$t('commonClear')}}</el-button>\n        </el-col>\n      </el-row>\n    </el-form>\n\n    <el-checkbox-group v-model=\"checkedRows\">\n      <list-view\n        :dataList=\"tableData\"\n        :config=\"{showCheckBox: false,\n            align: 'center'}\"\n        @selectionChange=\"selectionChange\"\n        :tableSchema=\"tableSchema\"\n        v-loading=\"loading\"\n      >\n        <template slot=\"checkColumn\">\n          <el-table-column\n            fixed\n            column-key=\"action\"\n            width=\"85px\"\n            align=\"center\"\n            label-class-name=\"pms-ele-ui select-all-table-column\"\n          >\n            <template slot-scope=\"scope\" slot=\"header\">\n              <el-dropdown\n                @click=\"resetCheckedType\"\n                placement=\"bottom\"\n                split-button\n                trigger=\"click\"\n                class=\"select-page-dropdown\"\n                @command=\"changeSelectPageType\"\n              >\n                {{formatCheckedType}}\n                <el-dropdown-menu class=\"options-field-menu\" slot=\"dropdown\">\n                  <el-dropdown-item command=\"current\">{{$t('commonCurrentPage')}}</el-dropdown-item>\n                  <el-dropdown-item command=\"all\">{{$t('commonAllPage')}}</el-dropdown-item>\n                </el-dropdown-menu>\n              </el-dropdown>\n            </template>\n            <template slot-scope=\"scope\">\n              <el-checkbox :disabled=\"checkedType === 'all'\" :label=\"scope.row\">{{''}}</el-checkbox>\n            </template>\n          </el-table-column>\n        </template>\n        <template slot=\"end\">\n          <el-table-column width=\"30px\" fixed=\"right\">\n            <template slot-scope=\"scope\" slot=\"header\">\n              <options-field\n                btnType=\"icon\"\n                class=\"option-field-wrapper\"\n                @fieldChange=\"displayOptionsChange\"\n                :dropdownText=\"$t('commonDisplayOptions')\"\n                :fieldList=\"fieldConfig.list || []\"\n                :defaultList=\"fieldConfig.default\"\n              ></options-field>\n            </template>\n            <template slot-scope=\"scope\"></template>\n          </el-table-column>\n        </template>\n      </list-view>\n    </el-checkbox-group>\n\n    <section class=\"content-center\">\n      <el-pagination\n        background\n        layout=\"sizes, prev, pager, next \"\n        :current-page=\"pager.page_no\"\n        :total=\"total\"\n        :page-sizes=\"[10, 20, 50, 100]\"\n        :page-size=\"pager.count\"\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n      ></el-pagination>\n    </section>\n\n    <MassOperateDialog\n      :visible=\"massDialog\"\n      @close=\"onCloseMassDialog\"\n      @refresh=\"onResetPageNoSearch\"\n      :mode=\"massMode\"\n      :errorList=\"massErrorList\"\n      :needDeliveryMethod=\"needDeliveryMethod\"\n      :selectedList=\"massSelectedList\"\n    ></MassOperateDialog>\n      <export-history-dialog :interval=\"15000\" :taskType=\"18\" :visible=\"isShowExportHistory\" @close=\"closeExportHistory\">\n      </export-history-dialog>\n  </div>\n</template>\n\n<script>\nimport searchForm from '@/components/ApproveList/search';\nimport ListView from '@/components/ApproveList/list';\nimport MassOperateDialog from './massOperateDialog';\nimport {\n  getPendingHistoryList,\n  getRTSList,\n  closePendingRTS,\n  CancelPending,\n  DeleteDraft,\n  massExportRTSPDF,\n  massExportRTSExcel\n} from '@/api/rtsMgt';\nimport { commonFetchAction } from '@/utils';\nimport {\n  RTSStatusList,\n  RTSTypeList,\n  orderSourceList,\n  AllRTSReasonList,\n  RTSTypeReasonMap,\n  Permission,\n  RTSDeliveryMethodList,\n  PurchaseTypeList,\n  RTSListDefaultDisplayList,\n  RTSListDisplayFieldList\n} from '@/utils/constant';\nimport moment from 'moment';\nimport { formatParams } from '@/utils/formatParams';\nimport { hasPermission } from '../../utils/permission';\nimport OptionsField from '@/components/ApproveList/optionsField';\nimport ExportHistoryDialog from '@/components/ApproveList/exportHistoryDialog';\n\nconst StorageKey = 'pmsRTSListDisplayFields';\nconst moduleName = 'RTSList';\nimport { getCsrfHeader, getCsrfData } from '@/utils/cookie';\nimport SBSVendorIdForm from '@/components/sbsVendorIdForm/index.vue';\n\nexport default {\n  components: { ListView, searchForm, OptionsField, MassOperateDialog, ExportHistoryDialog, SBSVendorIdForm },\n  data() {\n    const storageList = localStorage.getItem(StorageKey);\n    return {\n      activeTab: 'RTSList',\n      canApprove: true,\n\n      tableData: [],\n      canCreate: false,\n      loading: false,\n      loadingExport: false,\n      searchForm: {\n        region: '',\n        warehouse: '',\n        rts_id: '',\n        sbs_vendor_id: '',\n        rts_type: '',\n        delivery_method: '',\n        rts_status: '',\n        rts_source: '',\n        requester: '',\n        rts_reason: '',\n        purchase_type: ''\n      },\n      lastSearchForm: {},\n      statusClass: {\n        1: 'orange',\n        2: 'orange',\n        3: 'orange',\n        4: 'orange',\n        5: 'green',\n        6: 'red',\n        7: 'orange',\n        8: 'orange',\n        9: 'orange',\n        10: 'orange',\n        11: 'blue',\n        12: 'grey',\n        13: 'orange',\n        14: 'green',\n        15: 'green',\n        16: 'grey'\n      },\n      isShowExportHistory: false,\n      cancelLoading: false,\n      closeLoading: false,\n      deleteLoading: false,\n      checkedType: '',\n      checkedRows: [],\n      massMode: 'error',\n      needDeliveryMethod: false,\n      massDialog: false,\n      massSelectedList: [],\n      massErrorList: [],\n      pager: {\n        count: 10,\n        page_no: 1\n      },\n      total: 0,\n      exportBtns: [\n        { text: 'commonExportExcel', onClick: 'onExportExcel' },\n        { text: 'commonExportPDF', onClick: 'onExportPDF' }\n      ],\n      searchStatus: '',\n      showTableSchemaList: storageList\n        ? JSON.parse(storageList)\n        : RTSListDefaultDisplayList\n    };\n  },\n  computed: {\n    disabledApprove() {\n      return this.searchForm.rts_type === '' || this.searchForm.delivery_method === '' || this.checkedType === 'all';\n    },\n    fieldConfig() {\n      const storageList = localStorage.getItem(StorageKey);\n      return {\n        list: RTSListDisplayFieldList.map(item => ({\n          ...item,\n          label: this.$t(item.label)\n        })),\n        default: storageList\n          ? JSON.parse(storageList)\n          : RTSListDefaultDisplayList\n      };\n    },\n    formatCheckedType() {\n      return this.checkedType === 'all'\n        ? this.$t('commonAllPage')\n        : this.$t('commonCurrentPage');\n    },\n    headerTabs() {\n      return [\n        {\n          name: 'RTSList',\n          label: 'rtsMgt.RTSList',\n          permission: Permission.RTS_LIST\n        },\n        {\n          name: 'myPendingApprovals',\n          label: 'commonMyPendingApprovals',\n          permission: Permission.RTS_PENDING_APPROVAL_LIST_VIEW\n        },\n        {\n          name: 'myApprovalHistory',\n          label: 'stockAdjustment.myApprovalsHistory',\n          permission: Permission.RTS_APPROVAL_HISTORY_LIST_VIEW\n        }\n      ].filter(item => hasPermission(item.permission));\n    },\n    userEmail() {\n      return this.$store.getters.email;\n    },\n    uploadHeader() {\n      return Object.assign(this.getCsrfHeader(), this.$store.getters.uploadHeader);\n    },\n    countryList() {\n      const noRepeatList = [\n        ...new Set([\n          ...this.$store.getters.countryList.map(item => item.country)\n        ])\n      ];\n      const formatList = noRepeatList.map(item => ({\n        label: item,\n        value: item\n      }));\n      return [{ label: 'All', value: '' }].concat(formatList);\n    },\n    warehouseList() {\n      const userWarehouseList = this.$store.getters.warehouseList\n        .filter(item => item.country === this.searchForm.region)\n        .map(item => ({ label: item.warehouse, value: item.warehouse }));\n      return [{ label: 'All', value: '' }].concat(userWarehouseList);\n    },\n    searchSchema() {\n      const isRTSListTab = this.activeTab === 'RTSList';\n      const rtsType = this.searchForm.rts_type || '';\n      const reasonList = RTSTypeReasonMap[rtsType] || [];\n      return [\n        {\n          type: 'select',\n          width: 6,\n          field: 'region',\n          label: this.$t('commonRegion'),\n          options: this.countryList,\n          relationFields: [{ field: 'warehouse', onChange: () => '' }]\n        },\n        {\n          type: 'select',\n          width: 6,\n          field: 'warehouse',\n          label: this.$t('commonWarehouse'),\n          options: this.warehouseList,\n          disabled: this.searchForm.region === ''\n        },\n        {\n          type: 'input',\n          width: 6,\n          field: 'rts_id',\n          label: this.$t('rtsMgtRTSId')\n        },\n        {\n          type: 'input',\n          width: 6,\n          field: 'supplier_id',\n          label: this.$t('commonVendorSiteID')\n        },\n        {\n          type: 'select',\n          width: 6,\n          field: 'rts_type',\n          label: this.$t('rtsMgtRTSType'),\n          options: RTSTypeList\n        },\n        {\n          type: 'select',\n          width: 6,\n          field: 'delivery_method',\n          label: this.$t('rtsMgtDeliveryMethod'),\n          clearable: true,\n          options: [\n            { label: 'All', value: '' },\n            ...RTSDeliveryMethodList,\n            { label: 'N/A', value: -1 }\n          ]\n        },\n        {\n          type: 'select',\n          width: 6,\n          field: 'rts_status',\n          label: this.$t('commonStatus'),\n          options: RTSStatusList.filter(item => item.value !== 10), // 10-Picked\n          hidden: !isRTSListTab\n        },\n        {\n          type: 'select',\n          width: 6,\n          field: 'rts_source',\n          label: this.$t('rtsMgt.orderSource'),\n          options: orderSourceList\n        },\n        {\n          type: 'input',\n          width: 6,\n          field: 'requester',\n          label: this.$t('commonRequester')\n        },\n        {\n          type: 'select',\n          width: 6,\n          placeholder: this.searchForm.rts_type\n            ? 'Select'\n            : 'please select an RTS type first',\n          field: 'rts_reason',\n          label: this.$t('rtsMgtRTSReason'),\n          clearable: true,\n          options: reasonList,\n          disabled: !this.searchForm.rts_type,\n          hidden: !isRTSListTab\n        },\n        {\n          type: 'select',\n          width: 6,\n          field: 'purchase_type',\n          label: this.$t('commonPurchaseType'),\n          options: PurchaseTypeList\n        },\n        {\n          type: 'date-picker',\n          width: 12,\n          labelWidth: '180px',\n          field: 'returnDate',\n          label: this.$t('RTSExpectedReturnDate')\n        },\n        {\n          type: 'sbsVendorId',\n          width: 6,\n          field: 'sbs_vendor_id',\n          label: this.$t('commonSBSVendorID')\n        }\n      ].filter(item => !item.hidden);\n    },\n    tableSchema() {\n      return [\n        {\n          label: this.$t('rtsMgtRTSId'),\n          field: 'rts_id',\n          minwidth: '165px',\n          fixed: true\n        },\n        {\n          label: this.$t('rtsMgt.orderSource'),\n          field: 'rts_source',\n          minwidth: '86px'\n        },\n        {\n          label: this.$t('rtsMgtRTSType'),\n          field: 'rts_type',\n          minwidth: '120px',\n          render: (schema, row) => `${this.RTSTypeText(row[schema.field])}`\n        },\n        {\n          label: this.$t('rtsMgtRTSReason'),\n          field: 'rts_reason',\n          minwidth: '100px',\n          render: (schema, row) => `${this.RTSReasonText(row.rts_reason)}`\n        },\n        {\n          label: this.$t('rtsMgtDeliveryMethod'),\n          field: 'delivery_method',\n          render: (schema, row) => {\n            return (RTSDeliveryMethodList.concat([{ label: 'N/A', value: 0 }]).find(\n              item => item.value === row.delivery_method\n            ) || { label: '/' }\n            ).label;\n          }\n        },\n        {\n          label: this.$t('commonVendorName'),\n          field: 'supplier_name',\n          width: 'auto'\n        },\n        {\n          label: `${this.$t('commonSBSVendorID')}/${this.$t('commonVendorSiteID')}`,\n          field: 'sbs_vendor_id',\n          maxwidth: '120px',\n          render: (schema, row) => {\n            return `${row.sbs_vendor_id}/${row.supplier_id}`;\n          }\n        },\n        {\n          field: 'purchase_type',\n          label: this.$t('commonPurchaseType'),\n          width: '130px'\n        },\n        { label: this.$t('commonRegion'), field: 'region', width: '90px' },\n        {\n          label: this.$t('commonWarehouse'),\n          field: 'warehouse',\n          maxwidth: '90px'\n        },\n        {\n          label: this.$t('commonStatus'),\n          field: 'rts_status',\n          minwidth: '150px',\n          render: (schema, row, index, h) => {\n            return ['span', { 'class': `pms-ele-ui status-span ${this.statusClass[row.rts_status]}` }, this.RTSTypeStatus(row)];\n          }\n        },\n        {\n          label: this.$t('commonRequester'),\n          field: 'requester',\n          minwidth: '100px'\n        },\n        {\n          label: this.$t('commonCtime'),\n          field: 'ctime',\n          width: '130px',\n          render: (schema, row) =>\n            `${this.moment(row.ctime * 1000).format('YYYY-MM-DD HH:mm')}`\n        },\n        {\n          label: this.$t('commonShopID'),\n          field: 'shop_ids',\n          width: '130px',\n          render: (schema, row) =>\n            (row.shop_ids || []).join(',')\n        },\n        {\n          label: this.$t('RTSExpectedReturnDate'),\n          field: 'return_date_str',\n          width: '130px'\n        },\n        {\n          label: this.$t('rtsOutboundDate'),\n          field: 'outbound_date_str',\n          width: '130px',\n          render: (schema, row) => row[schema.field] ? moment(row[schema.field], 'YYYY-MM-DD HH:mm:ss').format('YYYY-MM-DD') : '/'\n        },\n        {\n          label: this.$t('rtsBoxQty'),\n          field: 'box_qty',\n          width: '130px',\n          render: (schema, row) => row[schema.field] || '/'\n        },\n        {\n          columnKey: 'action',\n          label: this.$t('commonAction'),\n          field: 'action',\n          width: '120px',\n          render: (schema, row, index, h) => {\n            return [\n              'div',\n              { class: 'user-category' },\n              [\n                {\n                  render: [\n                    'el-button',\n                    {\n                      class: 'list-btn white-blue',\n                      on: { click: () => this.routerToDetail(row) }\n                    },\n                    this.$t('commonDetail')\n                  ]\n                },\n                {\n                  hidden: !row.can_add,\n                  render: [\n                    'el-button',\n                    {\n                      class: 'list-btn',\n                      on: { click: () => this.routeToASNDialog(row) }\n                    },\n                    this.$t('purchaseOrder.createASN')\n                  ]\n                },\n                {\n                  hidden: !(\n                    [2, 3, 4, 5, 6, 7].includes(row.rts_status) &&\n                    row.requester === this.userEmail\n                  ),\n                  render: [\n                    'el-button',\n                    {\n                      props: { loading: this.cancelLoading },\n                      class: 'list-btn white-red',\n                      on: { click: () => this.onCancelRTS(row) }\n                    },\n                    this.$t('commonCancel')\n                  ]\n                },\n                {\n                  hidden: !(row.requester === this.userEmail && row.can_close),\n                  render: [\n                    'el-button',\n                    {\n                      props: { loading: this.closeLoading },\n                      class: 'list-btn white-red',\n                      on: { click: () => this.onCloseRTS(row) }\n                    },\n                    this.$t('commonClose')\n                  ]\n                },\n                {\n                  hidden: !(row.rts_status === 1),\n                  render: [\n                    'el-button',\n                    {\n                      props: { loading: this.deleteLoading },\n                      class: 'list-btn white-red',\n                      on: { click: () => this.onDeleteRTSDraft(row) }\n                    },\n                    this.$t('commonDelete')\n                  ]\n                }\n              ]\n                .filter(item => !item.hidden)\n                .map(item => h(...item.render))\n            ];\n          }\n        }\n      ].filter(item => this.showTableSchemaList.includes(item.field));\n    }\n  },\n  created() {\n    this.canCreate = hasPermission(Permission.CREATE_RTS);\n    const cacheConditionObj = this.$store.getters.searchForm[moduleName];\n    if (\n      cacheConditionObj &&\n      cacheConditionObj.activeTab &&\n      cacheConditionObj.searchParams\n    ) {\n      this.activeTab = cacheConditionObj.activeTab;\n      const searchParams = cacheConditionObj.searchParams;\n      this.pager.count = searchParams.count;\n      this.pager.page_no = searchParams.page_no;\n      ['warehouse', 'supplier_id', 'rts_id', 'region', 'requester', 'rts_status', 'rts_type', 'rts_source', 'delivery_method', 'rts_reason', 'purchase_type', 'sbs_vendor_id'].forEach(\n        key => {\n          if (searchParams[key]) {\n            this.searchForm[key] = searchParams[key];\n          }\n        }\n      );\n    }\n    this.onSearch();\n  },\n  methods: {\n    moment,\n    getCsrfData,\n    getCsrfHeader,\n    showExportHistory() {\n      this.isShowExportHistory = true;\n    },\n    closeExportHistory() {\n      this.isShowExportHistory = false;\n    },\n    onExportContentClick(command) {\n      if (this.checkedRows.length < 1) {\n        return this.$message({\n          type: 'error',\n          message: this.$t('commonPleaseChooseAtLeastOneOption')\n        });\n      }\n      if (this.checkedType === 'all' && this.total > 100) {\n        return this.$message.error(\n          this.$t('rtsExceedMaximumRTSNumber') + ': 100'\n        );\n      }\n      if (command.onClick && typeof this[command.onClick] === 'function') {\n        this[command.onClick]();\n      }\n    },\n    onExportPDF() {\n      let params = {};\n      if (this.checkedType === 'all') {\n        params = formatParams(this.formatSearchForm(this.searchForm));\n      } else {\n        params.rts_ids = this.checkedRows.map(item => item.rts_id);\n      }\n      massExportRTSPDF(params)\n        .then(res => {\n          if (res && res.retcode === 0) {\n            this.$message({\n              type: 'success',\n              message: this.$t('commonExportHistorySuccessTips')\n            });\n          } else {\n            this.$message({ type: 'error', message: res.info || res.message });\n          }\n        })\n        .catch(e => {\n          this.$message({ type: 'error', message: e });\n        })\n        .finally(() => {\n          this.loadingExport = false;\n        });\n    },\n    onExportExcel() {\n      let params = {};\n      if (this.checkedType === 'all') {\n        params = formatParams(this.formatSearchForm(this.searchForm));\n      } else {\n        params.rts_ids = this.checkedRows.map(item => item.rts_id);\n      }\n      massExportRTSExcel(params)\n        .then(res => {\n          if (res && res.retcode === 0) {\n            this.$message({\n              type: 'success',\n              message: this.$t('commonExportHistorySuccessTips')\n            });\n          } else {\n            this.$message({ type: 'error', message: res.info || res.message });\n          }\n        })\n        .catch(e => {\n          this.$message({ type: 'error', message: e });\n        })\n        .finally(() => {\n          this.loadingExport = false;\n        });\n    },\n\n    onReset() {\n      Object.keys(this.searchForm).forEach(key => {\n        this.searchForm[key] = '';\n      });\n    },\n    onChangeSelect(value, field) {\n      if (field === 'region') {\n        this.searchForm.warehouse = '';\n      }\n      if (field === 'rts_type') {\n        this.searchForm.rts_reason = '';\n      }\n      this.onResetPageNoSearch();\n    },\n    resetCheckedType() {\n      this.checkedType = '';\n      this.checkedRows = [];\n    },\n    selectionChange(selection) {\n      this.checkedRows = selection;\n    },\n    changeSelectPageType(type) {\n      this.checkedType = type;\n      this.checkedRows = this.tableData;\n    },\n    displayOptionsChange(list) {\n      this.showTableSchemaList = list;\n      localStorage.setItem(StorageKey, JSON.stringify(list));\n    },\n    onMassApproveOrReject(type) {\n      if (this.checkedRows.length < 1) {\n        return this.$message({\n          type: 'error',\n          message: this.$t('commonPleaseChooseAtLeastOneOption')\n        });\n      }\n      if (this.checkedRows.length > 100) {\n        return this.$message.error(\n          this.$t('rtsExceedMaximumRTSNumber') + ': 100'\n        );\n      }\n      this.massSelectedList = this.checkedRows.map(item => item.rts_id);\n      let massType = type;\n      if (massType === 'approve') {\n        if (this.searchForm.rts_type !== 30 && this.searchForm.delivery_method !== 3 && this.searchForm.delivery_method === -1) {\n          this.needDeliveryMethod = true;\n        } else {\n          this.needDeliveryMethod = false;\n        }\n        if (this.searchForm.rts_type !== 30 && this.searchForm.delivery_method === 3 && !this.checkedRows.every(item => item.supplier_contract_name && item.supplier_contract_phone && item.return_address)) {\n          massType = 'error';\n          this.massErrorList = this.checkedRows.filter(item => !item.supplier_contract_name || !item.supplier_contract_phone || !item.return_address).map(item => item.rts_id);\n        }\n      }\n      this.onShowMassDialog(massType);\n    },\n    onShowMassDialog(mode) {\n      this.massMode = mode;\n      this.massDialog = true;\n    },\n    onCloseMassDialog() {\n      this.massDialog = false;\n      this.massSelectedList = [];\n    },\n    onTabClick() {\n      this.onReset();\n      this.onResetPageNoSearch();\n    },\n    onResetPageNoSearch() {\n      this.handleCurrentChange(1);\n    },\n    async onDeleteRTSDraft(row) {\n      this.deleteLoading = true;\n      try {\n        const res = await DeleteDraft(row.rts_id);\n        commonFetchAction(res, data => {\n          this.$message({ type: 'success', message: 'Successful Delete' });\n          this.onSearch();\n        });\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n      this.deleteLoading = false;\n    },\n    async onCancelRTS(row) {\n      this.cancelLoading = true;\n      try {\n        const res = await CancelPending(row.rts_id);\n        commonFetchAction(res, data => {\n          this.$message({ type: 'success', message: res.info });\n          this.onSearch();\n        });\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n      this.cancelLoading = false;\n    },\n    routeToASNDialog(row) {\n      window.open(`/admin/inventory/rts/detail/${row.rts_id}?create=1`);\n    },\n    async onCloseRTS(row) {\n      this.closeLoading = true;\n      try {\n        const res = await closePendingRTS(row.rts_id);\n        commonFetchAction(res, () => {\n          this.$message({\n            type: 'success',\n            message: 'Close Successfully'\n          });\n          this.onSearch();\n        });\n      } catch (e) {\n        this.$message({\n          message: e,\n          type: 'error'\n        });\n      }\n      this.closeLoading = false;\n    },\n    handleUploadSuccess(res) {\n      if (res.retcode !== 0) {\n        this.$alert(res.info, '', {\n          type: 'error'\n        });\n        this.$refs.uploadMassSupplierSku.clearFiles();\n      } else {\n        this.$message.success('Upload Success!');\n        this.$refs.uploadMassSupplierSku.clearFiles();\n        this.onSearch();\n      }\n    },\n    handleUploadError() {\n      this.$message.error('Upload Failed!');\n      this.$refs.uploadMassSupplierSku.clearFiles();\n    },\n    getTemplate() {\n      window.open('/admin/static/massupload_RTS2.xlsx');\n    },\n    onCreateRTS() {\n      window.open('/admin/inventory/rts/create');\n    },\n    routerToDetail(row) {\n      this.cacheSearchCondition(this.lastSearchForm);\n      if (\n        row.rts_status === 1 ||\n        (row.rts_status === 6 && row.requester === this.$store.getters.email)\n      ) {\n        this.$router.push({ name: 'RTSEdit', params: { rts_id: row.rts_id }});\n      } else {\n        this.$router.push({\n          name: 'RTSDetail',\n          params: { rts_id: row.rts_id }\n        });\n      }\n    },\n    RTSTypeStatus({ rts_status, rts_status_text }) {\n      if (rts_status === 4) {\n        return rts_status_text || '';\n      }\n      return (\n        RTSStatusList.find(item => item.value === rts_status) || { label: '' }\n      ).label;\n    },\n    RTSTypeText(type) {\n      const RTSText = RTSTypeList.find(item => item.value === type);\n      return (RTSText && RTSText.label) || '';\n    },\n    RTSReasonText(reason) {\n      const RTSText = AllRTSReasonList.find(item => item.value === reason);\n      return (RTSText && RTSText.label) || '';\n    },\n    handleSizeChange(count) {\n      this.pager.count = count;\n      this.onSearch();\n    },\n    handleCurrentChange(page_no) {\n      this.pager.page_no = page_no;\n      this.onSearch();\n    },\n    cacheSearchCondition(form) {\n      this.$store.commit('setActiveTab', {\n        module: moduleName,\n        tab: this.activeTab\n      });\n      this.$store.commit('setSearchForm', {\n        module: moduleName,\n        form: form || null,\n        field: 'searchParams'\n      });\n    },\n    formatSearchForm(form) {\n      const params = {...form};\n      // format return date\n      if (params.returnDate) {\n        params.expected_return_date_left = params.returnDate[0];\n        params.expected_return_date_right = params.returnDate[1];\n        delete params.returnDate;\n      }\n      return params;\n    },\n    async onSearch() {\n      this.loading = true;\n      let func = getPendingHistoryList;\n      const params = {\n        ...this.pager,\n        ...this.formatSearchForm(this.searchForm)\n      };\n\n      if (this.activeTab === 'RTSList') {\n        func = getRTSList;\n      } else if (this.activeTab === 'myPendingApprovals') {\n        params.op = 1;\n      } else {\n        params.op = 2;\n      }\n      try {\n        const res = await func(formatParams(params));\n        commonFetchAction(res, data => {\n          this.tableData =\n            data.rts_list.filter(\n              item =>\n                !(item.rts_status === 1 && item.requester !== this.userEmail)\n            ) || [];\n          this.total = data.total || 0;\n          this.loading = false;\n          this.lastSearchForm = params;\n          this.resetCheckedType();\n        });\n      } catch (e) {\n        this.loading = false;\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    commonFetchAction(res, cb) {\n      if (res) {\n        if (res.retcode === 0) {\n          cb && cb(res.data);\n        } else {\n          this.$message.error(res.info);\n        }\n      } else {\n        this.$message.error(\n          'failed to connect network, pls try it again later'\n        );\n      }\n    },\n    handleSBSVendorIDSelect(value) {\n      this.searchForm.sbs_vendor_id = value;\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import \"~@/styles/common.scss\";\n.rtsMgt-list-wrapper {\n  .search-checkbox {\n    margin-left: 10px;\n    vertical-align: middle;\n    display: inline-block;\n    overflow: hidden;\n    height: 30px;\n    line-height: 30px;\n  }\n  .user-category {\n    .el-button {\n      margin-bottom: 10px;\n      margin-left: 0px;\n    }\n  }\n  &.pms-ui{\n     .el-date-editor--daterange {\n      background-color: #fff;\n      line-height: 32px;\n      height: 32px;\n      border: 1px solid #dcdfe6;\n      border-radius: 4px;\n    }\n    .el-range-input {\n      background-color: #fff;\n      line-height: 32px;\n      height: 32px;\n      border: 1px solid #dcdfe6;\n      width: 42%;\n    }\n  }\n  .el-autocomplete {\n    width: 100%;\n  }\n}\n</style>\n<style scoped lang=\"scss\">\n@import \"~@/styles/variables.scss\";\n.rtsMgt-list-wrapper {\n  padding: 0 20px;\n  display: block;\n  .list-header-wrapper {\n    position: relative;\n    margin-bottom: 16px;\n    .list-create-btn {\n      position: absolute;\n      right: 0;\n      top: 5px;\n      z-index: 1;\n    }\n  }\n  .main-wrapper {\n    width: 100%;\n    padding: 0;\n  }\n  .pagination-center {\n    display: flex;\n    justify-content: center;\n    margin-top: 20px;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/RTSManagement/massOperateDialog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/RTSManagement/skuTable.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/addedService/addedServiceConst.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/addedService/create/addSkuDialog.vue","messages":[{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"inbound_id\" is not in camelCase.","line":121,"column":5,"nodeType":"Property","endLine":123,"endColumn":6},{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"asn_source\" is not in camelCase.","line":124,"column":5,"nodeType":"Property","endLine":126,"endColumn":6}],"errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-dialog\n    :visible.sync=\"dialogVisible\"\n    width=\"1200px\"\n    :close-on-click-modal=\"false\"\n    :close-on-press-escape=\"false\"\n    lock-scroll\n    custom-class=\"pms-dialog pms-ele-ui pms-ui fbs-createShopWhiteList-dialog\"\n    :title=\"$t('FBSAddSku')\"\n    @close=\"onClose\"\n  >\n    <section>\n      <el-row :gutter=\"40\">\n        <el-col :span=\"13\" class=\"search-shop-block\">\n          <el-input v-model=\"searchText\" :placeholder=\"$t('FBSSearchSkuPlaceholder')\">\n            <i slot=\"suffix\" class=\"el-icon-search search-icon\" @click=\"onSearch\"></i>\n          </el-input>\n          <div class=\"pms-text-right mt24\">\n            <el-button\n              class=\"list-btn add-selected-btn\"\n              :disabled=\"!selection.length\"\n              @click=\"onAddAllSelected\"\n            >{{$t('FBSAddSelected')}} >></el-button>\n          </div>\n          <el-table\n            border\n            :data=\"searchSkuList\"\n            class=\"search-shop-table\"\n            v-loading=\"loadingSearch\"\n            height=\"450px\"\n            @selection-change=\"onChangeSelection\"\n          >\n            <el-table-column type=\"selection\" width=\"55px\" :selectable=\"handleSelectable\"></el-table-column>\n            <el-table-column :label=\"$t('commonSkuID')\" prop=\"sku_id\"></el-table-column>\n            <el-table-column :label=\"$t('commonSkuName')\" prop=\"sku_name\"></el-table-column>\n            <el-table-column :label=\"$t('commonShopID')\" prop=\"shop_id\"></el-table-column>\n            <el-table-column :label=\"$t('commonShopName')\" prop=\"shop_name\"></el-table-column>\n            <el-table-column :label=\"$t('commonStatus')\" prop=\"sku_status\" width=\"100px\">\n              <template slot-scope=\"scope\">{{formatSkuStatus(scope.row.sku_status)}}</template>\n            </el-table-column>\n            <el-table-column :label=\"$t('commonAction')\" width=\"80px\">\n              <template slot-scope=\"scope\">\n                <el-button\n                  type=\"text\"\n                  class=\"link-btn\"\n                  :disabled=\"scope.row.disabled\"\n                  @click=\"onAddSku(scope.row)\"\n                >{{scope.row.disabled ? $t('FBSAdded'): $t('FBSAdd') + ' >'}}</el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n          <section class=\"pms-text-center mt16\">\n            <el-pagination\n              small\n              layout=\"sizes, prev, pager, next\"\n              background\n              :total=\"total\"\n              :page-size=\"pager.count\"\n              @size-change=\"handleSizeChange\"\n              @current-change=\"handleCurrentChange\"\n              class=\"pms-ele-ui pms-pagination\"\n            >\n              <span\n                class=\"pagination-info\"\n              >{{$t('commonPagination', { firstItem: pager.count * (pager.page_no - 1) + 1, lastItem: pager.count * (pager.page_no - 1) + searchSkuList.length, total })}}</span>\n            </el-pagination>\n          </section>\n        </el-col>\n        <el-col :span=\"11\" class=\"search-shop-block\">\n          <h5 class=\"shop-title\">{{`${$t('FBSSkuAdded')} (${allAddSkuList.length})`}}</h5>\n          <el-table border :data=\"addSkuList\" height=\"500px\">\n            <el-table-column :label=\"$t('commonSkuID')\" prop=\"sku_id\"></el-table-column>\n            <el-table-column :label=\"$t('commonSkuName')\" prop=\"sku_name\"></el-table-column>\n            <el-table-column :label=\"$t('commonAction')\" width=\"80px\">\n              <template slot-scope=\"scope\">\n                <el-button\n                  type=\"text\"\n                  class=\"link-btn\"\n                  @click=\"onRemoveShop(scope.row, scope.$index)\"\n                >{{$t('commonRemove')}}</el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n          <section class=\"pms-text-center mt16\">\n            <el-pagination\n              small\n              layout=\"sizes, prev, pager, next\"\n              background\n              :total=\"allAddSkuList.length\"\n              :page-size=\"pagerAdd.count\"\n              @size-change=\"handleAddSizeChange\"\n              @current-change=\"handleAddCurrentChange\"\n              class=\"pms-ele-ui pms-pagination\"\n            >\n              <span\n                class=\"pagination-info\"\n              >{{$t('commonPagination', { firstItem: pagerAdd.count * (pagerAdd.page_no - 1) + 1, lastItem: pagerAdd.count * (pagerAdd.page_no - 1) + allAddSkuList.length, total: allAddSkuList.length})}}</span>\n            </el-pagination>\n          </section>\n        </el-col>\n      </el-row>\n    </section>\n    <section slot=\"footer\">\n      <el-button class=\"list-btn white-grey\" @click=\"onClose\">{{$t('commonCancel')}}</el-button>\n      <el-button\n        class=\"list-btn\"\n        :loading=\"loadingConfirm\"\n        @click=\"onConfirm\"\n      >{{$t('commonConfirm')}}</el-button>\n    </section>\n  </el-dialog>\n</template>\n\n<script>\nimport moment from 'moment';\nimport { apiGetSkuListByAsnId } from '@/api/addedService';\nimport { FESKUStatus } from '@/utils/constant';\n\nexport default {\n  props: {\n    inbound_id: {\n      required: true\n    },\n    asn_source: {\n      required: true\n    },\n    visible: {\n      type: Boolean,\n      required: true,\n      default: false\n    }\n  },\n  data() {\n    return {\n      searchText: '',\n      searchSkuList: [],\n      total: 0,\n      addSkuList: [],\n      selection: [],\n      pager: {\n        count: 10,\n        page_no: 1\n      },\n      allAddSkuList: [],\n      pagerAdd: {\n        count: 10,\n        page_no: 1\n      },\n      dialogVisible: false,\n      loadingSearch: false,\n      loadingConfirm: false\n    };\n  },\n  watch: {\n    visible: {\n      handler(value) {\n        this.dialogVisible = value;\n        if (value) {\n          this.onSearch();\n        } else {\n          this.clearData();\n        }\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    moment,\n    clearData() {\n      this.searchText = '';\n      this.searchSkuList = [];\n      this.addSkuList = [];\n      this.allAddSkuList = [];\n      this.selection = [];\n      this.total = 0;\n      this.pager = {\n        count: 10,\n        page_no: 1\n      };\n      this.pagerAdd = {\n        count: 10,\n        page_no: 1\n      };\n    },\n    onConfirm() {\n      this.$emit('addSku', this.allAddSkuList);\n      this.onClose();\n    },\n    handleSelectable(row) {\n      return !row.disabled;\n    },\n    onAddAllSelected() {\n      if (this.selection.length < 1) return;\n      this.selection.forEach(item => { item.disabled = true; });\n      const allSkuIds = this.allAddSkuList.map(item => item.sku_id);\n      const noRepeatSelection = this.selection.filter(item => !allSkuIds.includes(item.sku_id));\n      this.allAddSkuList = [...noRepeatSelection, ...this.allAddSkuList];\n      this.pagingSkuList();\n    },\n    onChangeSelection(list) {\n      this.selection = list;\n    },\n    formatSearchParams() {\n      const temp = this.searchText.split(/[\\n\\s+,，；;]/g);\n      for (let i = 0; i < temp.length; i++) {\n        if (temp[i] === '') {\n          // 删除数组中空值\n          temp.splice(i, 1);\n          i--;\n        }\n      }\n      return {\n        sku_ids: temp\n      };\n    },\n    async onSearch() {\n      try {\n        this.loadingSearch = true;\n        let params = {\n          inbound_id: this.inbound_id,\n          asn_source: this.asn_source,\n          ...this.pager\n        };\n        if (String(this.searchText).trim()) {\n          const extra = this.formatSearchParams(this.searchText);\n          params = { ...params, ...extra };\n        }\n        const res = await apiGetSkuListByAsnId(params);\n        if (res && res.retcode === 0) {\n          const addSkuIDList = this.allAddSkuList.map(item => item.sku_id);\n          this.searchSkuList = (res.data.sku_list || []).map(item => {\n            return Object.assign({}, item, {\n              disabled: addSkuIDList.includes(item.sku_id) || item.sku_status !== 1\n            });\n          });\n          this.total = res.data.total || 0;\n        } else {\n          this.$message({ type: 'error', message: res.info || res.message });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loadingSearch = false;\n      }\n    },\n    onRemoveShop(row, index) {\n      this.addSkuList.splice(index, 1);\n      // remove item in allAddSkuList\n      const allSkuIds = this.allAddSkuList.map(item => item.sku_id);\n      const number = allSkuIds.indexOf(row.sku_id);\n      this.allAddSkuList.splice(number, 1);\n\n      const target = this.searchSkuList.find(\n        item => item.sku_id === row.sku_id\n      );\n      if (target) {\n        target.disabled = false;\n      }\n    },\n    onAddSku(row) {\n      if (row.disabled) return;\n      this.allAddSkuList.splice(0, 0, row);\n      row.disabled = true;\n      this.pagingSkuList();\n    },\n\n    handleSizeChange(count) {\n      this.pager.count = count;\n      this.onSearch();\n    },\n    handleCurrentChange(page_no) {\n      this.pager.page_no = page_no;\n      this.onSearch();\n    },\n    handleAddSizeChange(count) {\n      this.pagerAdd.count = count;\n      this.pagingSkuList();\n    },\n    handleAddCurrentChange(page_no) {\n      this.pagerAdd.page_no = page_no;\n      this.pagingSkuList();\n    },\n    pagingSkuList() {\n      const start = (this.pagerAdd.page_no - 1) * this.pagerAdd.count;\n      const end = this.pagerAdd.page_no * this.pagerAdd.count;\n      this.addSkuList = this.allAddSkuList.slice(start, end);\n    },\n    formatSkuStatus(value) {\n      return (FESKUStatus.find(item => item.value === value) || { label: '' })\n        .label;\n    },\n    onClose() {\n      this.$emit('close');\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n@import \"~@/styles/variables.scss\";\n.step-wrapper {\n  text-align: center;\n  margin: 24px 0;\n  .step-ul {\n    margin: auto;\n    display: inline-block;\n    .step-li {\n      color: $grey;\n      vertical-align: middle;\n      font-weight: bold;\n      .step-number {\n        width: 20px;\n        height: 20px;\n        line-height: 18px;\n        font-size: 12px;\n        border-radius: 100%;\n        text-align: center;\n        display: inline-block;\n        border: 1px solid $grey;\n        color: inherit;\n        background-color: inherit;\n        margin-right: 8px;\n        border: 1px solid inherit;\n      }\n      .step-label {\n        color: $grey;\n      }\n      .step-line {\n        display: inline-block;\n        width: 110px;\n        height: 1px;\n        background-color: $grey;\n        margin: 0 16px;\n        vertical-align: middle;\n      }\n      &.is-active {\n        .step-number {\n          border-color: $blue;\n          color: #fff;\n          background-color: $blue;\n        }\n        .step-label {\n          color: $black;\n        }\n      }\n    }\n  }\n}\n.search-shop-block {\n  .shop-title {\n    font-size: 14px;\n    color: $black;\n    line-height: 22px;\n    margin-bottom: 16px;\n    font-weight: normal;\n  }\n  .search-shop-table {\n    margin-top: 16px;\n  }\n  .search-icon {\n    font-size: 16px;\n    position: relative;\n    top: 50%;\n    right: 4px;\n    transform: translateY(-50%);\n    cursor: pointer;\n  }\n  .add-selected-btn {\n    padding: 2px 4px;\n  }\n}\n.mass-fill-wrapper {\n  padding: 8px 14px;\n  border: 1px solid lighten($color: $grey, $amount: 10);\n  background-color: rgba(241, 242, 245, 0.4);\n  margin-bottom: 12px;\n  .mass-fill-col {\n    display: flex;\n    align-items: center;\n    padding-right: 16px;\n    .mass-fill-label {\n      font-size: 12px;\n      width: 120px;\n      display: inline-block;\n      line-height: 1.2em;\n      word-break: break-word;\n    }\n    .fill-btn {\n      font-size: 12px;\n      white-space: pre-line;\n    }\n  }\n  .mass-fill-btn-col {\n    padding-right: 0;\n    padding-left: 16px;\n  }\n}\n.error-box {\n  margin-top: 8px;\n  .error-tips {\n    color: $red;\n    font-size: 12px;\n  }\n}\n.inbound-limit-tips {\n  background: #fff6e1;\n  border-radius: 4px;\n  border-radius: 4px;\n  padding: 16px;\n  margin-bottom: 16px;\n  display: flex;\n  .limit-icon {\n    width: 28px;\n    .limit-icon-svg {\n      width: 24px;\n      height: 24px;\n    }\n  }\n  .limit-text {\n    flex: 1;\n    padding-left: 8px;\n    .limit-title {\n      color: $black;\n      font-size: 14px;\n      margin-bottom: 8px;\n    }\n    .limit-content {\n      text-align: left;\n      font-size: 14px;\n      font-weight: normal;\n      line-height: 1.5em;\n    }\n  }\n}\n</style>\n<style lang=\"scss\">\n@import \"~@/styles/common.scss\"; // ~@ = @ = 'src' webpack alias path\n.pms-dialog {\n  .el-dialog__body {\n    padding: 8px 24px 16px;\n  }\n}\n.fbs-createShopWhiteList-dialog {\n  .error-input {\n    .el-input__inner {\n      border-color: $red;\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/addedService/create/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/addedService/create/serviceList.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/addedService/detail/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/addedService/detail/skuList.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/addedService/list/addedServiceList.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/addedService/list/dataList.vue","messages":[{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"Pager\" is not in camelCase.","line":95,"column":5,"nodeType":"Property","endLine":95,"endColumn":18}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"added-service-table pms-ui\" v-loading=\"loading\">\n    <el-checkbox-group v-model=\"checkedRows\" @change=\"changeCheckedBox\">\n      <list-view\n        :dataList=\"itemList\"\n        :config=\"tableConfig\"\n        :tableSchema=\"tableSchema\"\n        @selectionChange=\"onSelectionChange\">\n        <template slot=\"checkColumn\">\n          <el-table-column\n            class=\"checked-select\"\n            column-key=\"action\"\n            width=\"80px\"\n            align=\"center\"\n            class-name=\"select-all-table-cell\">\n            <template slot-scope=\"scope\" slot=\"header\">\n              <el-dropdown\n                @click=\"resetCheckedType\"\n                placement=\"bottom\"\n                split-button\n                trigger=\"click\"\n                class=\"pms-ele-ui select-page-dropdown\"\n                @command=\"changeSelectPageType\">\n                <span :class=\"`el-checkbox__input ${checkedStyle}`\">\n                <span :class=\"`el-checkbox__inner ${checkedStyle}`\"></span>\n                </span>\n                  <el-dropdown-menu class=\"options-field-menu\" slot=\"dropdown\">\n                    <el-dropdown-item command=\"current\">Current Page</el-dropdown-item>\n                    <el-dropdown-item command=\"all\">All Pages</el-dropdown-item>\n                  </el-dropdown-menu>\n                </el-dropdown>\n              </template>\n              <template slot-scope=\"scope\">\n                <el-checkbox :disabled=\"checkedType === 'all'\" :label=\"scope.row\">{{ '' }}</el-checkbox>\n              </template>\n            </el-table-column>\n          </template>\n        <!-- 设置按钮 -->\n        <template slot=\"end\">\n          <el-table-column width=\"20\" fixed=\"right\" class-name=\"display-options\">\n            <template slot-scope=\"scope\" slot=\"header\">\n              <options-field\n                :btnType=\"'icon'\"\n                class=\"option-field-wrapper\"\n                @fieldChange=\"displayOptionsChange\"\n                :dropdownText=\"$t('commonDisplayOptions')\"\n                :fieldList=\"fieldConfig.list || []\"\n                :defaultList=\"fieldConfig.default\"\n              ></options-field>\n            </template>\n          </el-table-column>\n        </template>\n      </list-view>\n    </el-checkbox-group>\n    <!-- 分页 -->\n    <el-pagination\n      :current-page=\"Pager.pageIndex\" background layout=\"sizes, prev, pager, next\" :total.sync=\"Pager.total\"\n      :page-size=\"Pager.size\" :page-sizes=\"[10, 20, 50, 100]\"\n      @current-change=\"handleChangePageIndex\" @size-change=\"handleChangePageSize\"\n    ></el-pagination>\n  </div>\n</template>\n\n<script>\nimport ListView from '@/components/ApproveList/list';\nimport OptionsField from '@/components/ApproveList/optionsField';\nimport { AddedServiceStatus } from '@/utils/constant';\nimport { DefaultDisplayList, DisplayFieldList, AddedServiceSupplierType } from '../addedServiceConst';\nconst ModuleKey = 'pmsAddedServiceListFields';\nimport moment from 'moment';\n\nexport default {\n  data() {\n    return {\n      tableConfig: {\n        showCheckBox: false,\n        align: 'left'\n      },\n      showTableSchemaList: [],\n      checkedType: '',\n      checkedRows: [],\n      userSetting: {},\n      loading: false\n    };\n  },\n  components: {\n    ListView,\n    OptionsField\n  },\n  props: {\n    itemList: {\n      type: Array,\n      default: () => []\n    },\n    Pager: Object,\n    activeTab: {\n      type: String,\n      default: 'all'\n    }\n  },\n  watch: {\n    activeTab: {\n      handler(newVal, oldVal) {\n        this.getUserSetting();\n      },\n      immediate: true\n    }\n  },\n  computed: {\n    checkedStyle() {\n      return this.checkedType ? 'is-checked' : '';\n    },\n    fieldConfig() {\n      const storageList = this.userSetting[this.activeTab];\n      return {\n        list: DisplayFieldList[this.activeTab].map((item) => ({\n          ...item,\n          label: this.$t(item.label)\n        })),\n        default: (Array.isArray(storageList) && storageList.length) ? storageList : DefaultDisplayList[this.activeTab]\n      };\n    },\n    tableSchema() {\n      return [\n        { field: 'region', label: this.$t('commonRegion') },\n        { field: 'sr_id', label: this.$t('serviceRequestID\t'), minWidth: `90px` },\n        { field: 'seller_supplier_type', label: this.$t('sellerOrSupplier'), minWidth: `88px`, render: (schema, row) => {\n          return (AddedServiceSupplierType.find(item => item.value === row[schema.field]) || {}).label || '/';\n        }},\n        { field: 'seller_supplier_name', label: this.$t('sellerOrSupplierName'), minWidth: `90px` },\n        { field: 'sbs_vendor_id', label: this.$t('commonSBSVendorID'), minWidth: `120px` },\n        { field: 'shop_id', label: this.$t('commonShopID'), minWidth: `120px`, render: (schema, row) => {\n          return row[schema.field] ? row[schema.field] : '/';\n        }},\n        { field: 'vendor_site_id', label: this.$t('commonVendorSiteID'), minWidth: `120px` },\n        { field: 'inbound_id', label: this.$t('commonInboundID'), minWidth: `120px` },\n        { field: 'warehouse', label: this.$t('commonWarehouse'), minWidth: `120px` },\n        { field: 'related_order_id', label: this.$t('relatedOrderID'), minWidth: `120px` },\n        { field: 'service_sku_qty', label: this.$t('serviceSKUQty'), minWidth: `120px` },\n        { field: 'expected_service_date', label: this.$t('expectedServiceDate'), minWidth: `120px`, render: (schema, row) => {\n          return row[schema.field] ? moment(row[schema.field] * 1000).format('YYYY-MM-DD') : '/';\n        } },\n        { field: 'requester_email', label: this.$t('requesterEmail'), minWidth: `120px` },\n        { field: 'sr_status', label: this.$t('commonStatus'), minWidth: `108`, render: (schema, row) => {\n          return (AddedServiceStatus.find(item => item.value === row[schema.field]) || {}).label || '/';\n        }},\n        { field: 'last_modify_time', label: this.$t('lastModifyTime'), minWidth: `105px`, render: (schema, row) => {\n          return row[schema.field] ? moment(row[schema.field] * 1000).format('YYYY-MM-DD') : '/';\n        }},\n        { field: 'action', fixed: 'right', label: this.$t('commonAction'), width: '100px', render: (schema, row) => ['span',\n          { class: 'detail-btn', on: { click: () => { this.$emit('rowClick', row); } }}, this.$t('commonViewDetail')]\n        }\n      ].filter(item => this.showTableSchemaList.includes(item.field) || item.field === 'action');\n    }\n  },\n  methods: {\n    getUserSetting() {\n      const userID = this.$store.getters.userID;\n      const key = `${ModuleKey}-${userID}`;\n      this.loading = true;\n      this.$store.dispatch('getUserSetting', [key]).then(data => {\n        const settings = (data || {})[key];\n        if (settings && typeof settings === 'string') {\n          this.userSetting = JSON.parse(settings);\n          // 获取到的userSetting来配置table显示的列\n          this.showTableSchemaList = (Array.isArray(this.userSetting[this.activeTab]) && this.userSetting[this.activeTab].length) ? this.userSetting[this.activeTab] : DefaultDisplayList[this.activeTab];\n        } else {\n          this.showTableSchemaList = DefaultDisplayList[this.activeTab];\n        }\n      }).catch(() => {\n        this.$message.error('Get user setting failed!');\n      }).finally(() => {\n        this.loading = false;\n      });\n    },\n    resetCheckedType() {\n      this.checkedType = '';\n      this.checkedRows = [];\n      this.$emit('checked', '', []);\n    },\n    changeSelectPageType(type) {\n      this.checkedType = type;\n      this.checkedRows = this.itemList;\n      this.$emit('checked', type, this.checkedRows);\n    },\n    changeCheckedBox() {\n      this.$emit('checked', this.checkedType, this.checkedRows);\n    },\n    onSelectionChange(selection) {\n      this.checkedRows = selection;\n      this.$emit('checked', this.checkedType, this.checkedRows);\n    },\n    displayOptionsChange(list) {\n      this.showTableSchemaList = list;\n      this.userSetting[this.activeTab] = list;\n      const userID = this.$store.getters.userID;\n      const params = {\n        business_key: `${ModuleKey}-${userID}`,\n        business_value: JSON.stringify(this.userSetting)\n      };\n      this.$store.dispatch('setUserSetting', [params]).catch(() => {\n        this.$message.error('Set user setting failed!');\n      });\n    },\n    handleChangePageIndex(index) {\n      this.$emit('getItemList', index);\n    },\n    handleChangePageSize(size) {\n      this.$emit('getItemList', 1, size);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.added-service-table {\n  .el-pagination {\n    margin-top: 14px;\n    text-align: center;\n  }\n}\n</style>\n\n<style lang=\"scss\">\n.added-service-table {\n  .list-popover-more {\n    font-family: Roboto-Regular;\n    font-size: 14px;\n    color: #3D6ED1;\n    .more-text {\n      padding-right: 5px;\n    }\n  }\n  .el-table th > .cell {\n    text-overflow: clip;\n  }\n  .cell > .detail-btn {\n    cursor: pointer;\n    font-size: 14px;\n    color: #3D6ED1;\n  }\n  .option-field-wrapper {\n    float: none;\n  }\n  .display-options {\n    &.is-leaf {\n      background-color: rgba(0, 0, 0, 0.13);\n    }\n    .cell {\n      padding: 0;\n      text-align: center;\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/addedService/list/index.vue","messages":[{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":27,"column":20,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":27,"endColumn":21,"fix":{"range":[872,873],"text":""}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div class=\"pms-ui added-service-list\">\n    <section>\n      <el-tabs tab-position='bottom' v-model=\"activeTab\" @tab-click=\"handleTabChange\">\n        <el-tab-pane v-for='item in tabList' :key='item.name' :label=\"$t(item.label)\" :name='item.name'></el-tab-pane>\n      </el-tabs>\n      <div class=\"create-request-btn\">\n        <el-button size=\"mini\" type=\"primary\" icon=\"el-icon-plus\" @click=\"gotoCreate\">{{$t('CreateServiceRequest')}}</el-button></div>\n    </section>\n    <list v-if=\"canShowList\" :tab=\"activeTab\" @changeTab=\"handleTabChange\"></list>\n  </div>\n</template>\n\n<script>\nimport { hasPermission } from '@/utils/permission';\nimport {\n  Permission\n} from '@/utils/constant';\nimport List from './addedServiceList';\n\nexport default {\n  data() {\n    return {\n      activeTab: this.$route.query.activeTab || this.defaultTab()\n    };\n  },\n  beforeRouteUpdate (to, from, next) {\n    if (to.query && from.query && to.query.activeTab !== from.query.activeTab && !to.query.activeTab) {\n      this.activeTab = this.defaultTab();\n    }\n    next();\n  },\n  computed: {\n    tabList() {\n      return [\n        { name: 'all', label: 'commonAll', canShow: hasPermission(Permission.ADD_VALUE_SERVICE_LIST) },\n        { name: 'pending', label: 'commonMyPendingApprovals', canShow: hasPermission(Permission.MY_PENDING_SERVICE_APPROVAL) }\n      ].filter(item => item.canShow);\n    },\n    canShowList() {\n      return this.tabList.some(item => item.name === this.activeTab);\n    }\n  },\n  components: { List },\n  methods: {\n    defaultTab() {\n      return hasPermission(Permission.ADD_VALUE_SERVICE_LIST) ? 'all' : 'pending';\n    },\n    gotoCreate() {\n      this.$router.push(`/admin/inbound/addedService/create`);\n    },\n    handleTabChange(tab) {\n      this.activeTab = tab.name;\n      this.$router.push({ query: { activeTab: tab.name }});\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.added-service-list {\n  .el-tabs--bottom .el-tabs__item.is-bottom:nth-child(2) {\n    padding-left: 20px;\n  }\n  .el-tabs__item {\n    font-size: 18px;\n    color: #333333;\n  }\n}\n</style>\n\n<style lang=\"scss\" scoped>\n.added-service-list {\n  padding: 0 16px;\n  .create-request-btn {\n    position: relative;\n    float: right;\n    margin-top: -44px;\n    button {\n      font-size: 14px;\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/addedService/list/searchForm.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":2,"column":54,"nodeType":"VIdentifier","messageId":"deprecated","endLine":2,"endColumn":60}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-form class=\"added-service-list-search\" @submit.native.prevent>\n    <div class=\"search-form-row\">\n      <section v-for=\"schema in visibleSearchSchema\" :key=\"schema.field\" :class=\"getColLongClass(schema.field)\">\n        <el-form-item v-if=\"disabledFieldByRegion(schema)\" :label=\"schema.label\">\n          <el-popover popper-class=\"break-word pms-ele-ui fbs-inbound-request\" placement=\"top\" width=\"400\" trigger=\"hover\">\n            <div class=\"pms-text-left\">{{$t('FBSPleaseFilterRegionFirst')}}</div>\n            <el-select slot=\"reference\" :disabled=\"true\" value=\"\"></el-select>\n          </el-popover>\n        </el-form-item>\n        <el-form-item v-else-if=\"disabledFieldBySellerOrSupplier(schema)\" :label=\"schema.label\">\n          <el-popover popper-class=\"break-word pms-ele-ui fbs-inbound-request\" placement=\"top\" trigger=\"hover\">\n            <div class=\"pms-text-left\">{{$t('PleaseFilterSellerOrSupplierFirst')}}</div>\n            <el-input slot=\"reference\" :disabled=\"true\"></el-input>\n          </el-popover>\n        </el-form-item>\n        <el-form-item :label=\"schema.label\" v-else>\n          <pms-form-item @input=\"modifyForm\" :renderData=\"{ schema, form }\"></pms-form-item>\n        </el-form-item>\n      </section>\n    </div>\n    <el-row class=\"action-search action-row\">\n      <el-form-item class=\"right-action-btn\">\n        <span v-if=\"isShowMoreBtn && showMore === false\" class=\"more-btn\" @click=\"toggleShowMore(true)\"\n          >{{ $t('commonMore') }}<i class=\"el-icon-arrow-down\"></i\n        ></span>\n        <span v-if=\"isShowMoreBtn && showMore === true\" class=\"more-btn\" @click=\"toggleShowMore(false)\"\n          >{{ $t('commonLess') }}<i class=\"el-icon-arrow-up\"></i\n        ></span>\n        <div class=\"clear-btn list-btn light-btn\" @click=\"onReset\">{{$t(\"purchaseRequest.clear\")}}</div>\n        <el-button class=\"list-btn search-btn\" native-type=\"submit\" @click=\"onSearch\">{{$t(\"rule.search\")}}</el-button>\n      </el-form-item>\n    </el-row>\n  </el-form>\n</template>\n\n<script>\nimport PMSFormItem, { getSelectOptions } from '@/components/BaseItem/formItem';\nimport { AddedServiceStatus } from '@/utils/constant';\nimport { AddedServiceSupplierType } from '../addedServiceConst';\n\nexport default {\n  data() {\n    return {\n      showSearchFieldArr: [],\n      showMore: false\n    };\n  },\n  props: {\n    form: {\n      type: Object,\n      required: true\n    },\n    // 首次显示的筛选项数量\n    firstShowCount: {\n      type: Number,\n      default: 100\n    },\n    activeTab: {\n      type: String,\n      default: ''\n    }\n  },\n  components: {\n    'pms-form-item': PMSFormItem\n  },\n  watch: {\n    form: {\n      handler(newName, oldName) {\n        this.showSearchFieldArr = Object.keys(newName);\n      },\n      immediate: true,\n      deep: true\n    },\n    activeTab: {\n      handler() {\n        this.showMore = false;\n      },\n      immediate: true\n    }\n  },\n  computed: {\n    // more less 切换\n    isShowMoreBtn() {\n      return this.firstShowCount && this.firstShowCount < this.schemaList.length;\n    },\n    warehouseList() {\n      const region = this.form.region;\n      return this.$store.getters.warehouseList.filter(warehouse => {\n        return warehouse.country === region;\n      }).map(warehouse => ({ label: warehouse.warehouse, value: warehouse.warehouse }));\n    },\n    isUniversalUser() {\n      return this.$store.getters.isUniversalUser;\n    },\n    regionList() {\n      return [{ label: 'All', value: '' }, ...this.$store.getters.countrySelectList || []];\n    },\n    countryList() {\n      return [...new Set([...this.$store.getters.countryList.map(item => item.country)])];\n    },\n    visibleSearchSchema() {\n      const schema = this.schemaList || [];\n      return schema.filter((item, index) => (this.showMore || index < this.firstShowCount));\n    },\n    schemaList() {\n      return [\n        { field: 'region', type: 'select', label: this.$t('commonRegion'),\n          on: {\n            change: (value) => {\n              this.onSearch();\n            }\n          },\n          defaultValue: !this.isUniversalUser ? this.$store.getters.country : '',\n          props: { clearable: true, placeholder: 'Please Select' },\n          getChildren: (h) => getSelectOptions(this.regionList, h)\n        },\n        { field: 'sr_id', type: 'input', label: this.$t('serviceRequestID'), attrs: { placeholder: 'Please Input' } },\n        { field: 'seller_supplier_type', type: 'select', label: this.$t('sellerOrSupplier'),\n          props: { clearable: true, placeholder: 'Please Select' },\n          getChildren: (h) => getSelectOptions(AddedServiceSupplierType, h),\n          on: { change: () => this.onSearch(), clear: () => { this.form.seller_supplier_type = 0; } },\n          defaultValue: 0\n        },\n        { field: 'seller_supplier_name', type: 'input', label: this.$t('sellerOrSupplierName'), attrs: { placeholder: 'Please Input' } },\n        { field: 'sbs_vendor_id', type: 'input', label: this.$t('commonSBSVendorID'), attrs: { placeholder: 'Please Input' } },\n        { field: 'shop_id', type: 'input', label: this.$t('commonShopID'), attrs: { placeholder: 'Please Input' } },\n        { field: 'vendor_site_id', type: 'input', label: this.$t('commonVendorSiteID'), attrs: { placeholder: 'Please Input' } },\n        { field: 'inbound_id', type: 'input', label: this.$t('commonInboundID'), attrs: { placeholder: 'Please Input' } },\n        // warehouse\n        { field: 'warehouse', type: 'select', label: this.$t('commonWarehouse'),\n          props: { clearable: true, placeholder: 'Please Select' },\n          getChildren: (h) => getSelectOptions([{ label: 'All', value: '' }, ...this.warehouseList], h),\n          on: { change: () => this.onSearch() }\n        },\n        { field: 'related_order_id', type: 'input', label: this.$t('relatedOrderID'), attrs: { placeholder: 'Please Input' } },\n        { field: 'requester_email', type: 'input', label: this.$t('requesterEmail'), attrs: { placeholder: 'Please Input' } },\n        { field: 'sr_status', type: 'select', label: this.$t('commonStatus'), defaultValue: undefined,\n          getChildren: (h) => getSelectOptions([{ label: 'All', value: undefined }].concat(AddedServiceStatus), h),\n          props: { clearable: true, placeholder: 'Please Select' },\n          on: { change: () => this.onSearch() }\n        },\n        { field: 'expected_service_date', type: 'date-picker', label: this.$t('expectedServiceDate'),\n          props: { type: 'daterange', rangeSeparator: '-', startPlaceholder: 'Begin', endPlaceholder: 'End', placeholder: 'Please Select', format: 'yyyy-MM-dd', defaultTime: ['00:00:00', '23:59:59'] }\n        }\n      ].filter(item => this.showSearchFieldArr.includes(item.field));\n    }\n  },\n  methods: {\n    toggleShowMore(val) {\n      this.showMore = val;\n    },\n    disabledFieldBySellerOrSupplier(schema) {\n      return (['seller_supplier_name'].includes(schema.field)) && this.form.seller_supplier_type === 0;\n    },\n    disabledFieldByRegion(schema) {\n      return (['warehouse'].includes(schema.field)) && this.form.region === '';\n    },\n    getColLongClass(field) {\n      const longFieldArr = ['expected_service_date'];\n      return longFieldArr.includes(field) ? 'long-col' : '';\n    },\n    modifyForm(schema, value) {\n      this.$emit('modify', schema.field, value);\n    },\n    onSearch() {\n      this.$emit('search');\n    },\n    onReset() {\n      this.schemaList.forEach(schema => {\n        let defaultValue = '';\n        if (schema.hasOwnProperty('defaultValue')) {\n          defaultValue = schema.defaultValue;\n        }\n        this.$emit('modify', schema.field, defaultValue);\n      });\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.added-service-list-search {\n  margin: 22px 18px 20px 19px;\n  .el-col {\n    height: 58px;\n    line-height: 58px;\n  }\n  .search-form-row {\n    display: grid;\n    grid-auto-flow: row dense;\n    grid-gap: 12px;\n    grid-template-columns: repeat(4, minmax(240px, 1fr));\n    margin-bottom: 20px;\n  }\n  .long-col {\n    grid-column-start: span 2;\n  }\n  .action-row {\n    margin: -16px -4px -18px 0;\n  }\n  .action-search {\n    border-bottom: 1px solid #E3E3E3;\n    text-align: right;\n    .more-btn {\n      cursor: pointer;\n      color: #3d6ed1;\n      margin-right: 12px;\n      i {\n        margin-left: 5px;\n      }\n    }\n  }\n  .clear-btn {\n    color: #555555;\n    background-color: #fff;\n    border: 1px solid #e4e4e4;\n  }\n  .right-action-btn {\n    padding: 13px 0 16px;\n  }\n}\n</style>\n\n<style lang=\"scss\">\n.added-service-list-search.el-form {\n  .search-form-row {\n    .el-form-item__content .el-input__inner {\n      background: #FFFFFF;\n      border: 1px solid #E2E6EC;\n      border-radius: 0 4px 4px 0;\n      border-left: none;\n      padding-left: 8px;\n    }\n  }\n  .el-input__inner, .pms-ui .el-range-input {\n    height: 32px;\n    line-height: 32px;\n  }\n  input.el-range-input {\n    background: #ffffff;\n    border: none;\n  }\n  .el-date-editor--daterange {\n    vertical-align: 0px;\n  }\n  .el-input__inner:focus {\n    outline: none;\n  }\n  .el-form-item__label, .el-form-item__content {\n    display: inline-block;\n  }\n  .el-form-item__label {\n    background: #F6F6F6;\n    border-radius: 3px 0 0 3px;\n    font-size: 14px;\n    color: #333333;\n    padding: 0 8px;\n    border: 1px solid #E3E3E3;\n    height: 32px;\n    line-height: 32px;\n  }\n  .el-form-item__content {\n    line-height: 32px;\n    border-left: none;\n    flex: 1;\n  }\n  input::placeholder {\n    font-family: Roboto-Regular;\n    font-size: 14px;\n    color: #B5BBC6;\n  }\n  .el-form-item {\n    display: flex;\n    margin-bottom: 0px;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/asnTracking/asnConfirmDialog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/asnTracking/asnDetail.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/asnTracking/cancelDialog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/asnTracking/detailDialog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/asnTracking/list.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":10,"column":46,"nodeType":"VIdentifier","messageId":"deprecated","endLine":10,"endColumn":52}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div id=\"app-container\" class='inbound-planning-list asn-tracking rule-list pms-ui'>\n    <el-container>\n      <el-header>\n        <el-tabs tab-position='bottom' class='category-config-header' v-model=\"searchForm.region\" :before-leave=\"beforeTabClick\">\n          <el-tab-pane v-for='item in countryList' :key='item' :label=\"item\" :name=\"item\"></el-tab-pane>\n        </el-tabs>\n      </el-header>\n      <el-main>\n        <el-form :model=\"searchForm\" @submit.native.prevent='onSearch'>\n          <el-row>\n            <el-col v-for='item in searchSchema' :key='item.field' :span='item.width' :offset='item.offset || 0'>\n              <el-form-item v-if='item.type === \"daterange\"' label-width=\"160px\" :class='item.class || \"\"' :label=\"item.label\">\n                <el-date-picker value-format=\"yyyy-MM-dd HH:mm:ss\" @change='onSearch' popper-class='pms-new-ui' v-model=\"searchForm[item.field]\" type=\"daterange\" start-placeholder=\"Begin\" end-placeholder=\"End\" :default-time=\"['00:00:00', '23:59:59']\"></el-date-picker>\n              </el-form-item>\n              <el-form-item v-if='item.type === \"datetimerange\"' label-width=\"160px\" :class='item.class || \"\"' :label=\"item.label\">\n                <el-date-picker value-format=\"yyyy-MM-dd HH:mm:ss\" @change='onSearch' popper-class='pms-new-ui' v-model=\"searchForm[item.field]\" type=\"datetimerange\" start-placeholder=\"Begin\" end-placeholder=\"End\" :default-time=\"['00:00:00', '23:59:59']\"></el-date-picker>\n              </el-form-item>\n              <el-form-item v-if='item.type === \"select\"' label-width=\"120px\" :class='item.class || \"\"' :label=\"item.label\">\n                <el-select  @change='onSearch' v-model=\"searchForm[item.field]\" :disabled=\"item.disabled\">\n                  <el-option v-for='option in item.options || []' :key='option.value' :label='option.label' :value='option.value'></el-option>\n                </el-select>\n              </el-form-item>\n              <el-form-item v-if='item.type === \"input\"'  label-width=\"120px\" :class='item.class || \"\"' :label=\"item.label\">\n                <el-input v-model=\"searchForm[item.field]\" :disabled=\"item.disabled\"></el-input>\n              </el-form-item>\n              <el-form-item v-if='item.type === \"supplierID\"'  label-width=\"120px\" :class='item.class || \"\"' :label=\"item.label\">\n                <el-autocomplete\n                    class=\"list-search-input-width\"\n                    v-model=\"searchForm[item.field]\"\n                    :fetch-suggestions=\"onQuerySupplier\"\n                    placeholder=\"Please input Vendor Site ID/Name\"\n                    @select=\"onSelectSupplierID\">\n                  </el-autocomplete>\n              </el-form-item>\n              <el-form-item v-if=\"item.type === 'sbsVendorID'\" label-width=\"120px\" :class='item.class || \"\"' :label=\"item.label\">\n                <SBSVendorIdForm @getSBSVendorID=\"getSBSVendorID\" merchantType=\"ALL\" className='list-search-input-width'></SBSVendorIdForm>\n              </el-form-item>\n              <el-checkbox  v-else-if=\"item.type === 'checkbox'\" :class=\"item.class || ''\" @change='onSearch' v-model=\"searchForm[item.field]\" :disabled=\"item.disabled\">{{item.label}}</el-checkbox>\n            </el-col>\n          </el-row>\n          <el-row>\n            <div v-if=\"canCancel\" class='list-btn mass-btn' @click=\"onMassCancel\">{{$t('purchaseRequest.massCancel')}}</div>\n            <div class='list-btn white-bg-btn' @click=\"onExport\">{{$t('purchaseRequest.export')}}</div>\n            <div class='list-btn export-history-btn white-bg-btn' @click=\"showExportHistory\">{{$t('commonExportHistory')}}</div>\n            <el-form-item class='right-action-btn'>\n              <div class='list-btn white-text-btn' @click='onSearch'>{{$t('purchaseRequest.search')}}</div>\n              <div class='list-btn clear-btn white-bg-btn' @click=\"onReset\">{{$t('purchaseRequest.clear')}}</div>\n              <el-button native-type='submit' class='hidden-btn'></el-button>\n            </el-form-item>\n          </el-row>\n        </el-form>\n        <el-checkbox-group v-model=\"checkedRows\">\n          <el-table :data=\"asnTrackingList\" border size=\"mini\" v-loading=\"loading\" @row-click='rowClick'>\n            <el-table-column column-key=\"action\" width=\"60px\" align=\"center\" fixed>\n              <template slot-scope=\"scope\" slot=\"header\">\n                <el-dropdown @click=\"resetCheckedType\" placement=\"bottom\" split-button trigger=\"click\" class=\"select-page-dropdown\" @command=\"changeSelectPageType\">\n                  <span :class=\"`el-checkbox__input ${checkedType ? 'is-checked' : ''}`\">\n                    <span :class=\"`el-checkbox__inner ${checkedType ? 'is-checked' : ''}`\"></span>\n                  </span>\n                  <el-dropdown-menu class=\"options-field-menu\" slot=\"dropdown\">\n                    <el-dropdown-item command=\"current\">Current Page</el-dropdown-item>\n                    <el-dropdown-item command=\"all\">All Pages</el-dropdown-item>\n                  </el-dropdown-menu>\n                </el-dropdown>\n              </template>\n              <template slot-scope=\"scope\">\n                <el-checkbox :disabled=\"checkedType === 'all'\" :label=\"scope.row\">{{''}}</el-checkbox>\n              </template>\n            </el-table-column>\n            <el-table-column align='center' prop='order_id' :label='$t(\"purchaseOrder.orderID\")' min-width='auto' fixed></el-table-column>\n            <el-table-column align='center' prop='under_reservation' :label='$t(\"IBRUnderReservation\")' min-width=\"120px\">\n              <template slot-scope=\"scope\">\n                {{formatUnderReservation(scope.row.under_reservation)}}\n              </template>\n            </el-table-column>\n            <el-table-column align='center' prop=\"region\" :label=\"$t('purchaseRequest.region')\" width='auto'></el-table-column>\n            <el-table-column align='center' prop=\"warehouse\" :label=\"$t('purchaseOrder.warehouse')\" min-width='100px'></el-table-column>\n            <el-table-column align='center' prop=\"supplier_name\" :label=\"$t('commonVendorName')\" min-width='120px'></el-table-column>\n            <el-table-column column-key=\"supplierId\" align='center' prop=\"supplier_id\" :label=\"`${$t('commonSBSVendorID')}/ ${$t('commonVendorSiteID')}`\" min-width='130px'>\n              <template slot-scope=\"props\">\n                {{ `${props.row.sbs_vendor_id}/${props.row.supplier_id}` }}\n              </template>\n            </el-table-column>\n            <el-table-column align='center' prop=\"expected_delivery_date\" :label=\"$t('purchaseOrder.expectedDeliveryDate')\" min-width='120px'></el-table-column>\n            <el-table-column align='center' prop=\"actual_delivery_date\" :label=\"$t('purchaseOrder.actualDeliveryDate')\" min-width='120px'>\n              <template slot-scope=\"scope\">\n                {{ scope.row.actual_delivery_date || '/'}}\n              </template>\n            </el-table-column>\n            <el-table-column align='center' prop=\"actual_inbound_date\" :label=\"$t('purchaseOrder.actualReceivedTime')\" min-width='120px'>\n              <template slot-scope=\"scope\">\n                {{ scope.row.actual_inbound_date || '/'}}\n              </template>\n            </el-table-column>\n            <el-table-column align='center' prop=\"inbound_id\" :label=\"$t('purchaseOrder.inboundID')\" min-width='130px'></el-table-column>\n            <el-table-column align='center' :label=\"$t('purchaseRequest.status')\" min-width='auto'>\n              <template slot-scope='scope'>\n                <span :class='getStatusClass(scope.row.status)'>{{getStatusText(scope.row.status)}}</span>\n              </template>\n            </el-table-column>\n            <el-table-column align='center' :label=\"$t('purchaseRequest.action')\" width='120px' column-key=\"action\">\n              <template slot-scope='scope'>\n              <el-button v-if=\"canCancel && ([1, 6, 7, 8].includes(scope.row.status))\" type=\"danger\" :loading='loadingCancel' @click=\"handleASNCancel(scope.row)\">{{$t('purchaseOrder.cancel')}}</el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n        </el-checkbox-group>\n        <section class='pagination-center'>\n          <el-pagination background layout=\"sizes, prev, pager, next\" :current-page='pageIndex' :page-sizes='[10, 20, 50, 100]' :total.sync=\"total\" :page-size=\"pageSize\" @size-change='handleSizeChange' @current-change=\"handleChangePage\"></el-pagination>\n        </section>\n      </el-main>\n    </el-container>\n    <cancel-dialog\n      @refresh=\"onSearch\" :asnList=\"checkedRows\" :visible='cancelDialogShow' :searchParams=\"cancelSearchParams\"\n      :cancelType=\"checkedType === 'all' ? 2 : 1\" @close=\"onCancelMassCancel\"></cancel-dialog>\n    <export-history-dialog :interval=\"15000\" :taskType=\"28\" :visible=\"isShowExportHistory\" @close=\"closeExportHistory\"></export-history-dialog>\n  </div>\n</template>\n\n<script>\nimport { formatParams } from '@/utils/formatParams';\nimport { getASNList, exportASN, cancelASN } from '@/api/asn';\nimport { ASNStatusList, ASNArrivedList, inboundTypeList, IRUnderReservationList, Permission } from '@/utils/constant';\nimport CancelDialog from './cancelDialog';\nimport { hasPermission } from '@/utils/permission';\nimport ExportHistoryDialog from '@/components/ApproveList/exportHistoryDialog';\nimport { getSupplierList } from '@/api/supplier';\nimport SBSVendorIdForm from '@/components/sbsVendorIdForm/index.vue';\nimport { getSellerPageUrl } from '@/views/FBS/sellerAndShop/utils';\n\nexport default {\n  data() {\n    return {\n      searchForm: {\n        expected_delivery_date: '',\n        region: this.$route.query.country || this.$store.getters.country,\n        order_id: '',\n        asn_processor: '',\n        actual_delivery_date: '',\n        warehouse: '',\n        supplier_id: '',\n        order_processor: '',\n        status: '',\n        inbound_id: this.$route.query.inboundID || '',\n        inbound_type: '',\n        isMyself: false,\n        is_arrived: ''\n      },\n      asnTrackingList: [],\n      loading: false,\n      pageIndex: 1,\n      total: 0,\n      pageSize: 10,\n      checkedRows: [],\n      checkedType: '',\n      canCancel: false,\n      cancelDialogShow: false,\n      loadingCancel: false,\n      isShowExportHistory: false\n    };\n  },\n  components: {\n    CancelDialog, ExportHistoryDialog, SBSVendorIdForm\n  },\n  computed: {\n    cancelSearchParams() {\n      const params = {\n        ...formatParams(this.searchForm, {}, ['expected_delivery_date', 'actual_delivery_date'])\n      };\n      delete params.isMyself;\n      if (params.status !== undefined) {\n        params.status = Number(params.status) || 0;\n      }\n      if (this.searchForm.actual_delivery_date) {\n        params.actual_delivery_date_str_left = this.searchForm.actual_delivery_date[0];\n        params.actual_delivery_date_str_right = this.searchForm.actual_delivery_date[1];\n      }\n      if (this.searchForm.expected_delivery_date) {\n        params.expected_delivery_date_str_left = this.searchForm.expected_delivery_date[0];\n        params.expected_delivery_date_str_right = this.searchForm.expected_delivery_date[1];\n      }\n      return {\n        asn_tracking_params: params\n      };\n    },\n    userEmail() {\n      return this.$store.getters.email;\n    },\n    countryList() {\n      return [...new Set([...this.$store.getters.countryList.map(item => item.country)])];\n    },\n    warehouseList() {\n      return this.$store.getters.warehouseList.filter(item => item.country === this.searchForm.region).map(item => ({ label: item.warehouse, value: item.warehouse }));\n    },\n    searchSchema() {\n      return [\n        { type: 'datetimerange', width: 9, field: 'expected_delivery_date', label: this.$t('purchaseOrder.expectedDeliveryDate'), class: 'input-bg' },\n        { type: 'select', width: 5, field: 'warehouse', label: this.$t('purchaseOrder.warehouse'), options: this.warehouseList },\n        { type: 'input', width: 5, field: 'order_id', label: this.$t('purchaseOrder.orderID') },\n        { type: 'input', width: 4, field: 'asn_processor', label: this.$t('asnTracking.asnProcessor'), disabled: !!this.searchForm.isMyself },\n        { type: 'checkbox', width: 1, field: 'isMyself', label: this.$t('purchaseRequest.myself'), class: 'search-checkbox' },\n        { type: 'daterange', width: 9, field: 'actual_delivery_date', label: this.$t('purchaseOrder.actualDeliveryDate'), class: 'input-bg' },\n        { type: 'supplierID', width: 5, field: 'supplier_id', label: this.$t('commonVendorSiteIDOrName') },\n        { type: 'input', width: 5, field: 'order_processor', label: this.$t('purchaseOrder.poProcessor') },\n        { type: 'select', width: 5, field: 'status', label: this.$t('purchaseRequest.status'), options: ASNStatusList },\n        { type: 'input', offset: 9, width: 5, field: 'inbound_id', label: this.$t('purchaseOrder.inboundID') },\n        { type: 'select', width: 5, field: 'is_arrived', label: this.$t('asnTracking.arriveOrNot'), options: ASNArrivedList },\n        { type: 'select', width: 5, field: 'inbound_type', label: this.$t('purchaseOrder.inboundType'), options: [{ label: 'All', value: '' }, ...inboundTypeList] },\n        { type: 'select', width: 5, offset: 9, field: 'under_reservation', label: this.$t('IBRUnderReservation'), options: [{ label: 'All', value: '' }, ...IRUnderReservationList] },\n        { type: 'sbsVendorID', width: 5, field: 'sbs_vendor_id', label: this.$t('commonSBSVendorID') }\n      ];\n    }\n  },\n  methods: {\n    getSBSVendorID(value) {\n      this.searchForm.sbs_vendor_id = value;\n    },\n    showExportHistory() {\n      this.isShowExportHistory = true;\n    },\n    closeExportHistory() {\n      this.isShowExportHistory = false;\n    },\n    formatUnderReservation(value) {\n      return (IRUnderReservationList.find(item => item.value === value) || { label: '/'}).label;\n    },\n    onSelectSupplierID(item) {\n      this.searchForm.supplier_id = item.supplier_id;\n    },\n    onQuerySupplier(queryString = '', cb) {\n      const params = {\n        pageno: 1,\n        count: 20,\n        key: `${queryString}`.trim(),\n        approval_country: this.searchForm.region\n      };\n      getSupplierList(params).then(resp => {\n        if (resp.status !== 0) {\n          this.$message.error(resp.info);\n          cb([]);\n        } else {\n          if (Array.isArray(resp.data.list) && resp.data.list.length === 0) {\n            this.$message.error('this supplier ID is not exist.');\n            cb([]);\n            return;\n          }\n          cb(resp.data.list.map(supplier => Object.assign({}, supplier, { value: `${supplier.supplier_id}(${supplier.name})` })));\n        }\n      });\n    },\n    handleASNCancel(row) {\n      this.loadingCancel = true;\n      this.$prompt('Cancel Reason', `Confirm to Cancel this ASN ?`, {\n        confirmButtonText: 'Confirm',\n        cancelButtonText: 'Cancel',\n        inputValidator: value => value && value.replace(/(^\\s*)|(\\s*$)/g, '').length > 0 ? true : 'Reason Can Not Be Empty!'\n      }).then(({ value }) => {\n        return cancelASN({ cancel_type: 1, asn_id_list: [parseInt(row.asn_id)], cancel_reason_option: 0, cancel_reason: value }).then(resp => {\n          if (resp.retcode !== 0) {\n            this.$message.error(resp.info);\n          } else {\n            this.$message.success('Success');\n            this.onSearch();\n          }\n          this.loadingCancel = false;\n        });\n      }).catch(() => { this.loadingCancel = false; });\n    },\n    beforeTabClick(region) {\n      this.onReset();\n      this.onCancelMassCancel();\n      this.searchForm.region = region;\n      this.onSearch();\n      return true;\n    },\n    onReset() {\n      this.searchForm = { region: this.searchForm.region };\n      this.resetCheckedType();\n    },\n    changeSelectPageType(type) {\n      this.checkedType = type;\n      this.checkedRows = this.asnTrackingList;\n    },\n    resetCheckedType() {\n      this.checkedType = '';\n      this.checkedRows = [];\n    },\n    onMassCancel() {\n      if (this.checkedRows.length === 0) {\n        return this.$message.error('Please select some lines first!');\n      }\n      this.cancelDialogShow = true;\n    },\n    onCancelMassCancel() {\n      this.cancelDialogShow = false;\n    },\n    handleChangePage(pageIndex) {\n      this.pageIndex = pageIndex;\n      this.onSearch('', pageIndex);\n    },\n    handleSizeChange(size) {\n      this.pageSize = size;\n      this.onSearch();\n    },\n    onSearch(event, pageIndex) {\n      if (typeof pageIndex !== 'number') {\n        this.pageIndex = 1;\n      }\n      if (this.searchForm.isMyself) {\n        this.searchForm.asn_processor = this.userEmail;\n      }\n      const params = {\n        skip: (this.pageIndex - 1) * this.pageSize,\n        limit: this.pageSize,\n        ...formatParams(this.searchForm, {}, ['expected_delivery_date', 'actual_delivery_date'])\n      };\n      delete params.isMyself;\n      if (this.searchForm.actual_delivery_date) {\n        params.actual_delivery_date_str_left = this.searchForm.actual_delivery_date[0];\n        params.actual_delivery_date_str_right = this.searchForm.actual_delivery_date[1];\n      }\n      if (this.searchForm.expected_delivery_date) {\n        params.expected_delivery_date_str_left = this.searchForm.expected_delivery_date[0];\n        params.expected_delivery_date_str_right = this.searchForm.expected_delivery_date[1];\n      }\n      this.resetCheckedType();\n      this.loading = true;\n      getASNList(params).then(resp => {\n        if (resp.status !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.total = resp.data.total;\n          this.asnTrackingList = resp.data.asn_list;\n        }\n        this.loading = false;\n      }).catch(() => { this.loading = false; });\n    },\n    selectionChange(selection) {\n      this.checkedRows = selection;\n    },\n    getStatusClass(status) {\n      return ['', 'status-pending', 'status-scanning', 'status-cancelled', 'status-done', 'status-arrived', 'status-pending'][status] || '';\n    },\n    getStatusText(status) {\n      return (ASNStatusList.find(item => item.value === String(status)) || { label: '' }).label;\n    },\n    async onExport() {\n      try {\n        if (this.checkedRows.length === 0) {\n          this.$message({ type: 'error', message: 'Please select some lines first!' });\n          return;\n        }\n        const params = {};\n        if (this.checkedType === 'all') {\n          params.filter = formatParams({\n            region: this.searchForm.region,\n            order_id: this.searchForm.order_id,\n            asn_processor: this.searchForm.asn_processor,\n            actual_delivery_date_str_left: Array.isArray(this.searchForm.actual_delivery_date) ? this.searchForm.actual_delivery_date[0] : '',\n            actual_delivery_date_str_right: Array.isArray(this.searchForm.actual_delivery_date) && this.searchForm.actual_delivery_date.length > 1 ? this.searchForm.actual_delivery_date[1] : '',\n            warehouse: this.searchForm.warehouse,\n            supplier_name: this.searchForm.supplier_name,\n            order_processor: this.searchForm.order_processor,\n            status: this.searchForm.status,\n            inbound_id: this.searchForm.inbound_id,\n            inbound_type: this.searchForm.inbound_type,\n            is_arrived: this.searchForm.is_arrived,\n            expected_delivery_date_str_left: Array.isArray(this.searchForm.expected_delivery_date) ? this.searchForm.expected_delivery_date[0] : '',\n            expected_delivery_date_str_right: Array.isArray(this.searchForm.expected_delivery_date) && this.searchForm.expected_delivery_date.length > 1 ? this.searchForm.expected_delivery_date[1] : ''\n          });\n        } else {\n          params.asn_ids = this.checkedRows.map(item => item.asn_id);\n        }\n        const resp = await exportASN(params);\n        if (resp && resp.retcode === 0) {\n          this.$message({ type: 'success', message: this.$t('commonExportHistorySuccessTips') });\n        } else {\n          this.$message({ type: 'error', message: resp.info || resp.message });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', messaeg: e });\n      }\n    },\n    rowClick(row, column, event) {\n      if (column.columnKey === 'supplierId') {\n        if (row.merchant_type === 'SELLER') {\n          const path = getSellerPageUrl('detail', {id: row.sbs_vendor_id});\n          this.$router.push(path);\n        } else {\n          this.$router.push({ path: `/admin/supplier/list/detail/${row.supplier_id}` });\n        }\n      } else if (column.columnKey !== 'action' && column.columnKey !== 'selection') {\n        this.$router.push(`/admin/inbound/asn/detail/${row.asn_id}`);\n      }\n    }\n  },\n  created() {\n    this.canCancel = hasPermission(Permission.EDIT_ASN_LIST);\n    if (this.$store.getters.inboundInfo.region) {\n      const { inboundInfo } = this.$store.getters;\n      this.searchForm.region = inboundInfo.region;\n      this.searchForm.warehouse = inboundInfo.whsID;\n      this.searchForm.expected_delivery_date = inboundInfo.dateRange;\n      this.$store.commit('clearInboundCalendarData');\n    }\n    this.onSearch();\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  .list-search-input-width{\n    width:100%;\n  }\n  .mass-btn {\n    width: 120px;\n    color: #E02020;\n    border: 1px solid #E02020;\n    border-radius: 2px;\n    background-color: #fff;\n  }\n  .white-bg-btn {\n    width: 72px;\n    color: #3D6ED1;\n    border: 1px solid #3D6ED1;\n    border-radius: 2px;\n    background-color: #fff;\n  }\n  .white-text-btn {\n    width: 72px;\n    color: #fff;\n    background: #3D6ED1;\n    border-radius: 2px;\n  }\n  .pms-ui .input-bg {\n    height: 36px;\n    line-height: 36px;\n    background-color: #e5e5e5;\n    overflow: hidden;\n  }\n  .right-action-btn {\n    float: right;\n    width: 160px;\n    height: 32px;\n  }\n  .hidden-btn {\n    width: 0;\n    height: 0;\n    visibility: hidden;\n  }\n  .pagination-center {\n    display: flex;\n    justify-content: center;\n    margin-top: 20px;\n  }\n  .status-pending {\n    color: #989898;\n  }\n  .status-scanning {\n    color: #B34466;\n  }\n  .status-cancelled {\n    color: #A0A0A0;\n  }\n  .status-done {\n    color: #A3D1A2;\n  }\n  .status-arrived {\n    color: #A3D1A2;\n  }\n</style>\n\n<style lang=\"scss\">\n.asn-tracking{\n  .el-form {\n    .el-form-item__label{\n      margin-top: 8px;\n      line-height: 18px;\n    }\n  }\n  .search-checkbox{\n    margin-left: 10px;\n    vertical-align: middle;\n    display: inline-block;\n    overflow: hidden;\n    height: 30px;\n    line-height: 30px;\n  }\n  .log-btn{\n    font-size: 14px;\n    padding: 9px 13px;\n  }\n  .export-history-btn{\n    width: auto;\n    padding: 0 16px;\n  }\n  .select-page-dropdown {\n    margin-left: -20px;\n    .el-button {\n      border: none;\n      background: unset;\n      padding: 0 0 0 10px;\n      &:nth-child(1) {\n        width: 20px;\n        padding-right: 16px;\n      }\n      &::before {\n        width: 0;\n      }\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/backMargin/common/fieldConfig.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/backMargin/common/formatSearchForm.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/backMargin/common/newSkuTable.vue","messages":[{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"sku_type\" is not in camelCase.","line":88,"column":5,"nodeType":"Property","endLine":88,"endColumn":21}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <section class=\"bm-sku-table\">\n    <el-table\n      v-if=\"showTable\"\n      ref=\"skuTable\"\n      :data=\"computedSkuList\"\n      v-loading=\"isLoading\"\n      max-height=\"500px\"\n      row-key=\"index\"\n      default-expand-all\n      :lazy=\"!isDisableLazy\"\n      :load=\"onLoad\"\n      :row-class-name=\"tableRowClassName\"\n      @selection-change=\"handleSelectionChange\"\n    >\n      >\n      <el-table-column\n        v-if=\"isShowSelection\"\n        :fixed=\"true\"\n        type=\"selection\"\n        width=\"40\"\n        class-name=\"selection-cell\"\n        :selectable=\"selectable\"\n      >\n      </el-table-column>\n      <el-table-column :fixed=\"true\" width=\"80\" label=\"No.\" :prop=\"'index'\"> </el-table-column>\n      <el-table-column\n        v-for=\"raw in tableSchema\"\n        :key=\"raw.field\"\n        :fixed=\"raw.fixed\"\n        :prop=\"raw.field\"\n        :label=\"raw.label\"\n        :row-key=\"raw.field\"\n        :width=\"raw.width\"\n      >\n        <template slot-scope=\"scope\">\n          <pms-form-item\n            :renderData=\"{ schema: getSchema(raw, scope.row), form: scope.row, index: scope.$index }\"\n            @input=\"modifyForm\"\n          ></pms-form-item>\n          <el-popover\n            v-if=\"raw.field === 'ownership_status' && scope.row.ownership_status == 2\"\n            ref=\"popover1\"\n            placement=\"top\"\n            trigger=\"hover\"\n            popper-class=\"popper-class\"\n          >\n            <p>{{ $t('backMarginDelinkTime') }}</p>\n            <p>{{ formatTime(scope.row.delink_time) }}</p>\n            <svg-icon slot=\"reference\" class=\"warning-icon\" icon-class=\"warning-icon\" />\n          </el-popover>\n        </template>\n      </el-table-column>\n    </el-table>\n    <el-pagination\n      class=\"bm-sku-pagination\"\n      background\n      layout=\"sizes, prev, pager, next \"\n      :current-page=\"pager.page_no\"\n      :total=\"pager.total\"\n      :page-sizes=\"[10, 20, 50]\"\n      :page-size=\"pager.count\"\n      @size-change=\"handleSizeChange\"\n      @current-change=\"handleCurrentChange\"\n    ></el-pagination>\n  </section>\n</template>\n<script>\nimport moment from 'moment';\nimport PMSFormItem from '@/components/BaseItem/formItem';\nimport { getBackMarginSKUList, getBackMarginHistorySKUList } from '@/api/backMargin';\n\nimport { getCreateConfig } from './skuConfig';\nimport { formatSku } from './util';\n\nconst GET_DETAIL_SKU = {\n  backMarginDetail: getBackMarginSKUList,\n  backMarginCalculateHistory: getBackMarginHistorySKUList\n};\n\nexport default {\n  components: {\n    'pms-form-item': PMSFormItem\n  },\n  props: {\n    basicForm: Object, // bm表单数据\n    extendSchema: Array,\n    sku_type: String,\n    isShowSelection: Boolean,\n    formatData: Function,\n    selectable: {\n      type: Function,\n      default: () => true\n    },\n    // TODO: 显示CheckBox后禁止收起，后续去掉modification amount后，不需要选中physical，可以优化该逻辑\n    isDisableLazy: Boolean\n  },\n  data() {\n    return {\n      isLoading: false,\n      skuList: [],\n      allSkus: [],\n      pager: {\n        page_no: 1,\n        count: 10,\n        total: 0\n      },\n      showTable: true\n    };\n  },\n  computed: {\n    viewType() {\n      // 只有history特殊请求\n      return this.$route.name === 'backMarginCalculateHistory' ? 'backMarginCalculateHistory' : 'backMarginDetail';\n    },\n    computedSkuList() {\n      if (this.isDisableLazy) {\n        return this.allSkus;\n      }\n      return this.skuList;\n    },\n    tableSchema() {\n      return [...getCreateConfig(this.basicForm), ...this.extendSchema].map(item => {\n        item.type = item.type || 'text';\n        return item;\n      });\n    }\n  },\n  created() {\n    this.getList();\n  },\n  watch: {\n    isDisableLazy() {\n      this.showTable = false;\n      this.$nextTick(() => {\n        this.showTable = true;\n      });\n    },\n    'basicForm.bm_id'(val) {\n      this.getList();\n    },\n    sku_type() {\n      this.getList(true);\n    }\n  },\n  methods: {\n    getSchema(schema, row) {\n      const data = { ...schema };\n      // 需要结合当前行信息判断canEdit\n      if (typeof data.canEdit === 'function') {\n        data.type = data.canEdit(row) ? data.type : 'text';\n      }\n      return data;\n    },\n    modifyForm(schema, value, index) {\n      this.$emit('input', this.allSkus[index], schema, value);\n      // this.skuList[index][schema.field] = value;\n    },\n    handleSelectionChange(...p) {\n      this.$emit('selection-change', ...p);\n    },\n    tableRowClassName({ row, rowIndex }) {\n      if (row.sku_type === 3) {\n        return 'children-row';\n      }\n    },\n    onLoad(tree, treeNode, resolve) {\n      resolve(tree.children);\n    },\n    // 外部调用\n    async getList(isReset) {\n      if (!this.basicForm.bm_id) return;\n      this.isLoading = true;\n      if (isReset) {\n        this.pager = {\n          page_no: 1,\n          count: 10,\n          total: 0\n        };\n      }\n\n      const res = await GET_DETAIL_SKU[this.viewType]({\n        supplier_id: this.basicForm.supplier_id,\n        bm_id: this.basicForm.bm_id,\n        page_no: this.pager.page_no,\n        count: this.pager.count,\n        sku_type: this.sku_type\n      });\n\n      let skuList = formatSku(res.data.back_margin_request.sku_list || [], this.basicForm);\n      if (typeof this.formatData === 'function') skuList = this.formatData(skuList);\n      this.skuList = skuList;\n      const list = [];\n      skuList.forEach(sku => {\n        list.push(sku);\n        if (sku.children && sku.children.length) {\n          list.push(...sku.children);\n        }\n      });\n      this.allSkus = list;\n      this.pager.total = res.data.back_margin_request.total || 0;\n      // this.$emit('initTier', getTierInfo(this.skuList[0]));\n      this.isLoading = false;\n    },\n    getPrevIndex(index, skuType, list) {\n      let i = index - 1;\n      for (; i >= 0; i--) {\n        if (skuType === 3 && list[i].sku_type === 3) {\n          break;\n        } else if (skuType !== 3 && list[i].sku_type !== 3) {\n          break;\n        }\n      }\n      return i;\n    },\n    getNextIndex(index, skuType, list) {\n      const length = list.length;\n      let i = index + 1;\n      for (; i < length; i++) {\n        if (skuType === 3 && list[i].sku_type === 3) {\n          break;\n        } else if (skuType !== 3 && list[i].sku_type !== 3) {\n          break;\n        }\n      }\n      return i;\n    },\n    // 外部调用, index从1开始， next=-1获取前一个，next=1获取下一个\n    async getSku(index, next, skuType) {\n      if (next === -1) {\n        index = this.getPrevIndex(index - 1, skuType, this.allSkus);\n      } else if (next === 1) {\n        index = this.getNextIndex(index - 1, skuType, this.allSkus);\n      }\n\n      index += 1;\n      if (index < 1 && this.pager.page_no > 1) {\n        // 获取前一页\n        this.pager.page_no -= 1;\n        await this.getList();\n        const pIndex = this.getPrevIndex(this.allSkus.length, skuType, this.allSkus);\n        return {\n          index: pIndex + 1,\n          sku: this.allSkus[pIndex]\n        };\n      } else if (index > this.allSkus.length && this.pager.page_no * this.pager.count < this.pager.total) {\n        // 下一页\n        this.pager.page_no += 1;\n        await this.getList();\n        const nIndex = this.getNextIndex(-1, skuType, this.allSkus);\n        return {\n          index: nIndex + 1,\n          sku: this.allSkus[nIndex]\n        };\n      } else if (index > 0 && index <= this.allSkus.length) {\n        // 取index\n        return {\n          index,\n          sku: this.allSkus[index - 1]\n        };\n      }\n      this.$message.warning(index ? 'Is Last One Sku' : 'Is First One Sku');\n      return null;\n    },\n    handleSizeChange(count) {\n      this.pager.count = count;\n      this.pager.page_no = 1;\n      this.getList();\n    },\n    handleCurrentChange(page_no) {\n      this.pager.page_no = page_no;\n      this.getList();\n    },\n    formatTime(time) {\n      return moment(time * 1000).format('YYYY-MM-DD HH:mm:ss');\n    }\n  }\n};\n</script>\n<style lang=\"scss\">\n.bm-sku-table {\n  .action-col {\n    text-align: center;\n  }\n  .popper-class {\n    font-family: Roboto-Regular;\n    font-size: 12px;\n    color: #333333;\n    line-height: 18px;\n  }\n  .warning-icon {\n    fill: #ff9100;\n  }\n  .children-row {\n    background: #fafafa;\n  }\n}\n</style>\n<style lang=\"scss\" scoped>\n.bm-sku-table {\n  border: 1px solid #dcdfe6;\n  /deep/ .el-table__placeholder {\n    display: none;\n  }\n}\n.bm-sku-pagination {\n  text-align: center;\n  padding: 14px 0;\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/backMargin/common/parseBackMargin.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/backMargin/common/skuConfig.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/backMargin/common/util.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/backMargin/common/validate.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/backMargin/create/addSkuDialog.vue","messages":[{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"supplier_id\" is not in camelCase.","line":118,"column":5,"nodeType":"Property","endLine":120,"endColumn":6},{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"inventory_health_date\" is not in camelCase.","line":121,"column":5,"nodeType":"Property","endLine":121,"endColumn":34},{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"shop_id_list\" is not in camelCase.","line":122,"column":5,"nodeType":"Property","endLine":122,"endColumn":24}],"errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-dialog\n    class=\"pms-new-ui\"\n    width=\"950px\"\n    @close=\"onCloseChooseSKU\"\n    ref=\"sku_choose_dialog\"\n    :title=\"$t('purchaseRequest.chooseSKU')\"\n    :visible.sync=\"dialogVisible\"\n  >\n    <el-form class=\"add-sku-form\" :inline=\"true\" :model=\"searchForm\">\n      <el-form-item :label=\"$t('purchaseRequest.skuID')\">\n        <el-input v-model=\"searchForm.skuID\" size=\"mini\" clearable></el-input>\n      </el-form-item>\n      <el-form-item :label=\"$t('purchaseRequest.skuName')\">\n        <el-input v-model=\"searchForm.skuName\" size=\"mini\" clearable></el-input>\n      </el-form-item>\n      <el-form-item :label=\"$t('userRole.userList.categoryName')\">\n        <el-input v-model=\"searchForm.categoryName\" size=\"mini\" clearable></el-input>\n      </el-form-item>\n      <el-form-item class=\"float-right\">\n        <el-button class=\"white-grey\" @click=\"onResetSearchForm\" size=\"mini\">{{\n          $t('purchaseRequest.clear')\n        }}</el-button>\n        <el-button type=\"primary\" @click=\"onSearchSKU\" size=\"mini\">{{ $t('purchaseRequest.search') }}</el-button>\n      </el-form-item>\n    </el-form>\n    <el-tabs v-show=\"computedSkuTabs.length > 1\" v-model=\"skuTab\" class=\"add-sku-table-card\" type=\"card\">\n      <el-tab-pane v-for=\"tab in computedSkuTabs\" :label=\"tab.label\" :name=\"tab.name\" :key=\"tab.name\"></el-tab-pane>\n    </el-tabs>\n\n    <section class=\"table-body\" v-loading=\"loading\">\n      <el-table\n        v-if=\"!loading\"\n        height=\"340px\"\n        ref=\"addSkuTable\"\n        :data=\"skuList\"\n        border\n        size=\"mini\"\n        @select=\"onSelect\"\n        @select-all=\"onSelectAll\"\n        row-key=\"sku_id\"\n      >\n        <el-table-column type=\"selection\" :selectable=\"selectableFun\"></el-table-column>\n        <el-table-column prop=\"sku_id\" :label=\"$t('purchaseRequest.skuID')\"></el-table-column>\n        <el-table-column prop=\"sku_name\" :label=\"$t('purchaseRequest.skuName')\"></el-table-column>\n        <el-table-column prop=\"category_name\" :label=\"$t('userRole.userList.categoryName')\"></el-table-column>\n        <el-table-column\n          v-if=\"shop_id_list && shop_id_list.length\"\n          prop=\"shop_id\"\n          :label=\"$t('backMargin.ShopID')\"\n        ></el-table-column>\n        <el-table-column v-if=\"skuTab === 'normal'\" :label=\"$t('backMargin.linkStatus')\" width=\"90px\">\n          <template slot-scope=\"scope\">{{ ['Link', 'Delink'][scope.row.status] || '' }}</template>\n        </el-table-column>\n        <el-table-column prop=\"is_deprecated\" :label=\"$t('skuIsDeprecated')\" width=\"100px\">\n          <template slot-scope=\"scope\">{{ scope.row.is_deprecated ? 'True' : 'False' }}</template>\n        </el-table-column>\n      </el-table>\n    </section>\n    <div class=\"block-padding\"></div>\n    <div class=\"block-padding\"></div>\n    <div class=\"content-center padding-top-bottom\">\n      <template>\n        <el-pagination\n          background\n          layout=\"sizes, prev, pager, next\"\n          :total.sync=\"total\"\n          :current-page=\"page\"\n          :page-size=\"pageSize\"\n          @current-change=\"handleCurrentChange\"\n          @size-change=\"handleSizeChange\"\n          :page-sizes=\"[10, 20, 50]\"\n        ></el-pagination>\n      </template>\n    </div>\n    <div class=\"add-sku-bottom\">\n      <p class=\"tips\">\n        <span class=\"height-line\">{{ Object.keys(totalSelected).length }}</span> SKU(s) Selected\n      </p>\n      <el-button class=\"white-grey\" @click=\"onCloseChooseSKU\">{{ $t('commonCancel') }}</el-button>\n      <el-button type=\"primary\" @click=\"onConfirmChooseSKU\">{{ $t('purchaseRequest.confirm') }}</el-button>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nimport { formatParams } from '@/utils/formatParams';\nimport { SKU_TYPES } from '../common/util';\n\nexport default {\n  data() {\n    return {\n      dialogVisible: false,\n      searchForm: {\n        skuID: '',\n        skuName: '',\n        categoryName: ''\n      },\n      skuTab: 'normal',\n      skuList: [],\n      // skuListSelected: [],\n      page: 1,\n      total: 0,\n      pageSize: 10,\n      loading: false,\n      totalSelected: {} // 所有分页选中的sku\n    };\n  },\n  props: {\n    skuTabs: {\n      type: Array,\n      default: () => ['normal']\n    },\n    visible: {\n      type: Boolean,\n      required: true\n    },\n    supplier_id: {\n      required: true\n    },\n    inventory_health_date: String,\n    shop_id_list: Array\n  },\n  computed: {\n    computedSkuTabs() {\n      return this.skuTabs.map(name => ({\n        name,\n        label: SKU_TYPES[name].label\n      }));\n    }\n  },\n  methods: {\n    selectableFun(row) {\n      return !row.is_deprecated;\n    },\n    onResetSearchForm() {\n      this.searchForm.skuID = '';\n      this.searchForm.skuName = '';\n      this.searchForm.categoryName = '';\n    },\n    onCloseChooseSKU() {\n      this.$emit('close');\n    },\n    onConfirmChooseSKU() {\n      this.$emit('submitSKU', Object.values(this.totalSelected));\n    },\n    onSearchSKU() {\n      this.handleCurrentChange(1);\n    },\n    onSelect(list, row) {\n      // 判断是添加还是删除\n      const isAdd = list.find(item => item.sku_id === row.sku_id);\n      if (isAdd) {\n        this.$set(this.totalSelected, row.sku_id, row);\n      } else {\n        this.$delete(this.totalSelected, row.sku_id);\n      }\n    },\n    onSelectAll(list) {\n      if (list.length) {\n        // 添加全部\n        list.forEach(row => {\n          this.$set(this.totalSelected, row.sku_id, row);\n        });\n      } else {\n        // 删除全部\n        this.skuList.forEach(row => {\n          this.$delete(this.totalSelected, row.sku_id);\n        });\n      }\n    },\n    setCurrentChecked() {\n      this.skuList.forEach(row => {\n        if (this.totalSelected[row.sku_id]) {\n          this.$refs['addSkuTable'].toggleRowSelection(row, true);\n        }\n      });\n    },\n    handleCurrentChange(page) {\n      this.page = page;\n      const skuID = `${this.searchForm.skuID}`.trim();\n      const skuName = `${this.searchForm.skuName}`.trim();\n      const categoryName = `${this.searchForm.categoryName}`.trim();\n      this.fetchSupplierSkus(this.supplier_id, page, skuID, skuName, categoryName);\n    },\n    handleSizeChange(size) {\n      this.pageSize = size;\n      this.handleCurrentChange(1);\n    },\n    fetchSupplierSkus(supplier_id, page, skuID, skuName, categoryName) {\n      const params = formatParams({\n        supplier_id: supplier_id,\n        inventory_health_date: this.inventory_health_date,\n        category_name: categoryName,\n        sku_id: skuID,\n        sku_name: skuName\n      });\n      if (this.shop_id_list && this.shop_id_list.length) {\n        params.shop_id_list = this.shop_id_list.join(',');\n      }\n      this.loading = true;\n      const getFunnction = SKU_TYPES[this.skuTab].api;\n      if (this.skuTab === 'normal') {\n        params.skip = (page - 1) * this.pageSize;\n        params.limit = this.pageSize;\n      } else {\n        params.count = this.pageSize;\n        params.page_no = page;\n      }\n      const skuType = SKU_TYPES[this.skuTab].type;\n      getFunnction(params)\n        .then(resp => {\n          if (resp.status === 0 || resp.retcode === 0) {\n            this.skuList = resp.data.sku_list.map(item => {\n              item.sku_type = skuType;\n              return item;\n            });\n            this.total = resp.data.total;\n            this.$nextTick(this.setCurrentChecked);\n          } else {\n            this.skuList = [];\n            this.total = 0;\n            this.$message.error('Getting Supplier SKU List Failed');\n          }\n          this.loading = false;\n        })\n        .catch(() => {\n          this.skuList = [];\n          this.total = 0;\n          this.$message.error('Getting Supplier SKU List Failed');\n          this.loading = false;\n        });\n    }\n  },\n  watch: {\n    skuTabs: {\n      handler(val) {\n        if (Array.isArray(val) && val.length) {\n          this.skuTab = val[0];\n        }\n      },\n      immediate: true\n    },\n    skuTab() {\n      if (!this.visible) return false;\n      this.handleCurrentChange(1);\n    },\n    '$props.visible': function(now, prev) {\n      this.dialogVisible = now;\n      if (now) {\n        this.totalSelected = {};\n        this.onResetSearchForm();\n        this.page = 1;\n        this.fetchSupplierSkus(this.supplier_id, 1);\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.table-body {\n  height: 340px;\n}\n.float-right {\n  float: right;\n  margin-right: 0;\n}\n.add-sku-bottom {\n  text-align: right;\n  .tips {\n    line-height: 36px;\n    float: left;\n    .height-line {\n      color: #3d6ed1;\n    }\n  }\n}\n.add-sku-table-card {\n  margin-bottom: 16px;\n}\n.add-sku-form {\n  display: table;\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/backMargin/create/index.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"createBackMargin\" is not PascalCase.","line":144,"column":9,"nodeType":"Literal","endLine":144,"endColumn":27,"fix":{"range":[5753,5769],"text":"CreateBackMargin"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div class=\"back-margin-create pms-ui pms-new-ui\">\n    <el-container>\n      <el-header class=\"back-margin-header\">\n        <section class=\"left-info\">\n          <i class=\"back-icon sprite-btn-back\" @click=\"goBack\"></i>\n          <span class=\"back-margin-title\">{{ basicForm.bm_id || $t('backMargin.newBackMarginRequest') }}</span>\n          <i v-if=\"isMassSubmitFailed\" class=\"el-icon-warning mass-submit-fail\"></i>\n          <span v-if=\"isDraft\" class=\"back-margin-status\">{{ bmStatus }}</span>\n        </section>\n        <section class=\"right-info\">\n          <div v-if=\"isShowSaveAsDraftBtn\" class=\"submit-section\" @click=\"submitBM(1)\">\n            <span :class=\"`${actionLoading ? 'el-icon-loading' : 'sprite-btn-draft'} draft-icon`\"></span>\n            <div class=\"submit-btn\">{{ $t('purchaseRequest.save') }}</div>\n          </div>\n          <div class=\"submit-section\" @click=\"submitBM(2)\">\n            <span :class=\"`${actionLoading ? 'el-icon-loading' : 'sprite-btn-submit'} submit-icon`\"></span>\n            <div class=\"submit-btn\">{{ $t('purchaseOrder.submit') }}</div>\n          </div>\n        </section>\n      </el-header>\n      <el-main>\n        <el-row v-if=\"isMassSubmitFailed\" class=\"mass-submit-error-tips\">\n          <header class=\"error-header\"><i class=\"el-icon-message-solid\"></i>{{ $t('massSubmitFailed') }}</header>\n          <p class=\"error-msg\">{{ $t('errorMessage') }}:</p>\n          <p class=\"error-msg\" v-for=\"(item, index) in mass_submit_err_msg\" :key=\"index + item\">\n            {{ index + 1 }}. {{ item }}\n          </p>\n        </el-row>\n        <el-row v-if=\"basicForm.bm_status === 3\" class=\"comment-row\">\n          <comments :purchaseRequest=\"commentInfo\"></comments>\n        </el-row>\n        <el-form class=\"bm-basic-form\" ref=\"BMBasicForm\" :model=\"basicForm\" :rules=\"basicRules\" label-width=\"240px\">\n          <div class=\"group-title\">{{ $t('purchaseOrder.basicInformation') }}</div>\n          <el-row class=\"pms-ui basic-form\">\n            <el-col class=\"form-col\" v-for=\"item in basicInfoSchema\" :key=\"item.field\" :span=\"12\">\n              <el-form-item :required=\"item.required\" :prop=\"item.field\" :label=\"getLabel(item)\">\n                <span class=\"item-gap\">:</span>\n                <section class=\"item-info\">\n                  <pms-form-item\n                    @input=\"modifyBasicForm\"\n                    :renderData=\"{ schema: item, form: basicForm }\"\n                  ></pms-form-item>\n                </section>\n              </el-form-item>\n            </el-col>\n          </el-row>\n          <div class=\"group-title\">{{ $t('backmarginInformation') }}</div>\n          <el-row class=\"pms-ui basic-form\">\n            <el-col class=\"form-col\" v-for=\"item in backMarginSchema\" :key=\"item.field\" :span=\"12\">\n              <el-form-item :required=\"item.required\" :prop=\"item.field\" :label=\"getLabel(item)\">\n                <span class=\"item-gap\">:</span>\n                <section class=\"item-info\">\n                  <pms-form-item\n                    @input=\"modifyBasicForm\"\n                    :renderData=\"{ schema: item, form: basicForm }\"\n                  ></pms-form-item>\n                </section>\n              </el-form-item>\n            </el-col>\n          </el-row>\n        </el-form>\n\n        <request-detail\n          ref=\"requestDetail\"\n          :tier_info=\"tier_info\"\n          :basicForm=\"basicForm\"\n          :isCompletedRequired=\"isCompletedRequired\"\n        ></request-detail>\n\n        <p class=\"group-title\">{{ $t('Attachment') }}</p>\n        <file-list-attachment\n          ref=\"attachment\"\n          width=\"100%\"\n          :attachmentList=\"attachmentList\"\n          mode=\"edit\"\n          :limit=\"fileLimit\"\n          @setAttachmentList=\"setSupportingFiles('attachmentList', $event)\"\n        ></file-list-attachment>\n\n        <section v-if=\"bmConfig.cf_agreement_option !== 2\">\n          <p class=\"group-title\">{{ $t('CFAgreement') }}</p>\n          <file-list-attachment\n            ref=\"cf_attachment\"\n            width=\"100%\"\n            :limit=\"fileLimit\"\n            :attachmentList=\"cf_agreement_list\"\n            mode=\"edit\"\n            @setAttachmentList=\"setSupportingFiles('cf_agreement_list', $event)\"\n          ></file-list-attachment>\n        </section>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<script>\nimport moment from 'moment';\n\n// api\nimport { getSupplierList } from '@/api/supplier';\nimport { getSupplierConfig } from '@/api/supplierConfig';\nimport { saveBackMargin, submitBackMargin, getBackMarginDetail, getBackMarginConfig } from '@/api/backMargin';\nimport { getSupplierShop } from '@/api/createCRT';\n\nimport { BackMarginStatusList, BackMarginTypeList, BackMarginMethodList } from '@/utils/constant';\nimport PMSFormItem from '@/components/BaseItem/formItem';\nimport Comments from '@/components/Comments';\nimport FileListAttachment from '@/components/fileListAttachment';\n\n// bm\n// import { isValidBMSkuList } from '../common/validate';\nimport { formatBackMargin, parseBackMargin } from '../common/parseBackMargin';\nimport { getSchema, getRules } from '../common/fieldConfig';\nimport RequestDetail from './requestDetail';\nimport { isEmptyValue } from '../common/util';\n\n// bm后台规则配置对接【done】\n// 提交表单校验逻辑[done]\n// 提交表单二次是否重复[done]\n// 补充form几个字段逻辑【done】\n\n// sku2个前端计算逻辑【done】\n\n// 导入导出模板按类型选择[done]\n// UI调整\n// 国际化翻译\n// By Support Amount/Percentage默认值\n// sku tier校验逻辑\n\n// config联调【done】\n// suppliser wht字段联调[done]\n// type=6下，固定shop id范围[done]\n// - 变更shopid，需要清除原来的sku选择【done】\n// - 该类型下，弹窗新增shopid字段【done】\n// config，其中3种类型禁止修改Claim Calculation Control\n// stock on hand默认值【done】\n// - 变更start date需要清除已选的sku【done】\n// multi_tier前端逻辑梳理：后台去掉这个字段，前段根据tier_one_qty来判断[done]\n\n// 测试with_holding_tax[done] 2020/10/13\n\nexport default {\n  name: 'createBackMargin',\n  components: {\n    'pms-form-item': PMSFormItem,\n    RequestDetail,\n    Comments,\n    FileListAttachment\n  },\n  data() {\n    return {\n      actionLoading: false,\n      approvalList: [],\n      basicForm: {\n        // watch的值必须先声明，否则首次出现该字段时不会触发watch\n        bm_id: '',\n        end_date_str: '',\n        start_date_str: '',\n        bm_country: '',\n        bm_type: '',\n        shop_id_list: null\n      },\n      bmConfig: {},\n      tier_info: [],\n      isDraft: false, // 是否是草稿状态\n      shopList: [],\n      isGetShopLoading: false,\n      attachmentList: [],\n      cf_agreement_list: [],\n      fileLimit: {\n        size: 5,\n        count: 3\n      },\n      bmTypeWhiteList: [],\n      bankAccountList: [],\n      mass_submit_err_msg: []\n    };\n  },\n  created() {\n    this.isDraft = !!this.$route.params.id;\n    if (this.isDraft) {\n      this.actionLoading = true;\n      getBackMarginDetail({ bm_id: this.$route.params.id })\n        .then(resp => {\n          this.actionLoading = false;\n          if (resp.retcode !== 0) {\n            this.$message.error(resp.info);\n          } else {\n            const bm = parseBackMargin(resp.data.back_margin_request);\n            this.tier_info = bm.tier_info;\n            this.basicForm = bm.basicForm;\n            this.attachmentList = bm.attachmentList;\n            this.cf_agreement_list = bm.cf_agreement_list;\n            this.mass_submit_err_msg = bm.basicForm.mass_submit_err_msg || [];\n            this.$nextTick(() => {\n              this.$refs['attachment'].initAttachmentList();\n              this.$refs['cf_attachment'].initAttachmentList();\n            });\n            this.approvalList = resp.data.back_margin_request.approval_list || [];\n\n            if (this.isDraft) {\n              // 获取supplier Shop选项\n              this.getShopIds(bm.basicForm.supplier_id);\n              // 获取supplier bank account选项\n              this.getSuppliers(bm.basicForm.supplier_id, list => {\n                this.setBankAccountList(list[0]);\n                this.basicForm.bm_country = list[0] && list[0].approval_country;\n                this.getBackMarginConfig();\n              });\n            }\n          }\n        })\n        .catch(() => {\n          this.actionLoading = false;\n        });\n    }\n  },\n  computed: {\n    isShowSaveAsDraftBtn() {\n      return !this.basicForm.bm_status || this.basicForm.bm_status === 1 || this.basicForm.bm_status === 10;\n    },\n    isCompletedRequired() {\n      // 是否已完成必填信息填写\n      if (!this.basicForm || !this.basicRules) return false;\n      return !Object.keys(this.basicRules)\n        .filter(field => this.basicRules[field][0].required)\n        .some(field => isEmptyValue(this.basicForm[field]));\n    },\n    currency() {\n      return this.$store.getters.currencyMap[this.basicForm.bm_country] || '';\n    },\n    basicInfoSchema() {\n      const config = [\n        'bm_id',\n        'bm_name',\n        {\n          field: 'supplier_id',\n          on: {\n            input: value => {\n              // selected之前，不触发change事件\n              this.$set(this.basicForm, 'supplier_id', value);\n            },\n            select: this.onSupplierSelect\n          },\n          props: {\n            disabled: !!this.basicForm.bm_id,\n            'trigger-on-focus': false,\n            'value-key': 'supplier_id',\n            'fetch-suggestions': (value, callback) => this.getSuppliers(value, callback)\n          }\n        },\n        {\n          field: 'bm_type',\n          props: { disabled: !!this.basicForm.bm_id },\n          options: BackMarginTypeList.filter(item => this.bmTypeWhiteList.includes(item.value))\n        },\n        'bm_country',\n        'supplier_name',\n        'campaign_type',\n        {\n          field: 'with_holding_tax',\n          isHidden: !this.basicForm.with_holding_tax\n        }\n      ];\n\n      const list = getSchema(config, null, this.basicForm);\n      return list;\n    },\n    bmStatus() {\n      const option = BackMarginStatusList.find(item => item.value === this.basicForm.bm_status) || {};\n      return option.label;\n    },\n    isMassSubmitFailed() {\n      return this.basicForm.bm_status === 10;\n    },\n    countryList() {\n      return [...new Set(this.$store.getters.countryList.map(item => item.country))];\n    },\n    backMarginSchema() {\n      const config = [\n        'start_date_str',\n        {\n          field: 'end_date_str',\n          props: {\n            disabled: this.basicForm.bm_type === 5\n          }\n        },\n        {\n          field: 'fixed_support_amount', // 这里有sku的计算信息，改为后台计算\n          props: {\n            // disabled: !!this.amountTotal\n          }\n        },\n        {\n          field: 'billing_type',\n          props: {\n            disabled: !!this.basicForm.bm_id || [3, 5, 7, 4, 8, 10].includes(this.basicForm.bm_type)\n          },\n          options: this.basicForm.bm_type !== 2 ? BackMarginMethodList.filter(item => item.value < 3) : BackMarginMethodList\n        },\n        'is_shared_target',\n        'min_target_qty',\n        'remark',\n        'payment_method',\n        {\n          field: 'payment_bank_account_id',\n          options: this.bankAccountList\n        },\n        'contract_id',\n        'payment_time_str',\n        'calculated_sku_scope',\n        {\n          field: 'shop_id_list',\n          options: this.shopList,\n          props: {\n            filterable: true\n          }\n        },\n        'minimum_total_inbound_value',\n        'calculated_percentage',\n        'total_max_cap_value',\n        'minimum_spending',\n        'is_full_subsidy',\n        'shopee_cap',\n        'max_cap_for_brand_subsidy'\n      ];\n\n      const list = getSchema(config, this.bmConfig, this.basicForm);\n\n      return list;\n    },\n    basicRules() {\n      return getRules([...this.basicInfoSchema, ...this.backMarginSchema]);\n    },\n    commentInfo() {\n      return {\n        mtime: this.basicForm.ctime,\n        remark: '',\n        approvalList: (this.approvalList || []).map(item => ({ ...item, by: item.operator, date: item.ctime * 1000 })),\n        requester: this.basicForm.requester,\n        actionRemarkTitle: 'Request'\n      };\n    }\n  },\n  watch: {}, // 把watch全部去掉了，改成modifyBasicForm手动触发修改，避免watch失效，也去除区分init和modify变更逻辑\n  methods: {\n    getLabel(item) {\n      return item.label + (item.hasCurrency && this.currency ? `(${this.currency})` : '');\n    },\n    setSupportingFiles(type, data) {\n      this[type] = [...data];\n    },\n    async getShopIds(supplier_id) {\n      if (!supplier_id) return false;\n\n      const opt = {\n        vendor_site_id_list: [supplier_id]\n      };\n      this.isGetShopLoading = true;\n      try {\n        const res = await getSupplierShop(opt);\n        if (res.retcode === 0) {\n          this.shopList = res.data[supplier_id].map(id => ({\n            value: id,\n            label: id\n          }));\n        }\n      } catch (e) {\n        this.$message.error('Get Shops Failed');\n      } finally {\n        this.isGetShopLoading = false;\n      }\n    },\n    checkEndDate(rule, value, callback) {\n      if (this.basicForm.start_date_str) {\n        const endValue = moment(value, 'YYYY-MM-DD').valueOf();\n        const startValue = moment(this.basicForm.start_date_str, 'YYYY-MM-DD').valueOf();\n        if (endValue < startValue) {\n          callback(new Error('End Date must be later than Start Date'));\n        } else {\n          callback();\n        }\n      } else {\n        callback();\n      }\n    },\n    goBack() {\n      this.$router.replace(`/admin/finance/backMargin/list${this.isDraft ? '?useParams=1' : ''}`);\n    },\n    async submitBM(status, isAuto) {\n      // 1-draft, 2-submit\n      if (this.actionLoading) return;\n      try {\n        const valid = await this.$refs.BMBasicForm.validate();\n        if (!valid) return false;\n        if (this.bmConfig.cf_agreement_option === 1 && !this.cf_agreement_list.length) {\n          throw new Error('CF Agreement is required');\n        }\n\n        const params = formatBackMargin(\n          {\n            basicForm: this.basicForm,\n            attachmentList: this.attachmentList,\n            cf_agreement_list: this.cf_agreement_list\n          },\n          [...this.backMarginSchema, ...this.basicInfoSchema]\n        );\n        params.basic_info.bm_id = params.basic_info.bm_id || this.$route.params.id || '';\n        const request = status === 2 ? submitBackMargin : saveBackMargin;\n\n        this.actionLoading = true;\n        let resp = await request(params);\n        if (resp.retcode === -2000) {\n          // 有重复情况需要二次确认\n          const h = this.$createElement;\n          const checkRepear = await this.$confirm(\n            h(\n              'p',\n              {\n                class: 'back-margin-create-submit-tips'\n              },\n              [\n                h('p', null, resp.info),\n                resp.data && resp.data.sku_list && h('p', null, `SKU: ${resp.data.sku_list.join(',')}`),\n                resp.data && resp.data.bm_id_list && h('p', null, `BM ID: ${resp.data.bm_id_list.join(',')}`)\n              ]\n            ),\n            'Attention',\n            {\n              confirmButtonText: 'Yes',\n              cancelButtonText: 'No'\n            }\n          );\n          if (checkRepear) {\n            resp = await request(Object.assign({ ...params, skip_duplicated_check: true }));\n          }\n        }\n\n        if (resp.retcode === 0) {\n          if (!isAuto) {\n            this.$message.success(status === 1 ? 'Save Success' : 'Submit Success');\n            this.goBack();\n          } else {\n            // 自动保存可能存在隐患，刷新后url没有id导致重新创建，或保存草稿后部分字段不能编辑\n            this.basicForm.bm_id = resp.data.bm_id;\n            this.$route.params.id = resp.data.bm_id;\n          }\n        } else {\n          this.$message.error(resp.info);\n        }\n      } catch (e) {\n        this.$message.error(e.message);\n      } finally {\n        this.actionLoading = false;\n      }\n    },\n    // watch中不调用clearSku，防止重复触发或不触发\n    modifyBasicForm(schema, value, data) {\n      const field = schema.field;\n      const oldValue = this.basicForm[field];\n      // if (oldValue === value) return;\n      this.$set(this.basicForm, field, value);\n      if (field === 'supplier_id') {\n        this.$set(this.basicForm, 'supplier_name', data.name);\n        this.$set(this.basicForm, 'bm_country', data.approval_country);\n        this.$set(this.basicForm, 'bm_type', '');\n      } else if (field === 'start_date_str') {\n        if (this.basicForm.bm_type === 5) {\n          this.$set(this.basicForm, 'end_date_str', value);\n        }\n      } else if (field === 'bm_type') {\n        // billing_type固定值\n        this.$delete(this.basicForm, 'billing_type');\n        if ([3, 5, 7, 8].includes(value)) {\n          this.$set(this.basicForm, 'billing_type', 1); // by price\n        } else if ([4, 10].includes(value)) {\n          this.$set(this.basicForm, 'billing_type', 2); // by Percentage\n        }\n        // end_date_str固定逻辑\n        if (value === 5 && this.basicForm.start_date_str) {\n          this.$set(this.basicForm, 'end_date_str', this.basicForm.start_date_str);\n        }\n\n        // 获取shop选项\n        // this.$set(this.basicForm, 'shop_id_list', []);\n        // this.getShopIds(this.basicForm.supplier_id);\n      }\n\n      // 判断是否需要清除sku\n      if (this.isCompletedRequired) {\n        // 符合条件自动保存\n        this.submitBM(1, true);\n        if (JSON.stringify(value) !== JSON.stringify(oldValue)) {\n          // supplier_id也会重置，但是更换supplier必定会重置bm_type，不重复判断\n          if (\n            ['bm_type', 'shop_id_list'].includes(field) ||\n            (field === 'calculated_sku_scope' && value === 2) ||\n            (field === 'start_date_str' && this.basicForm.bm_type === 5)\n          ) {\n            this.$refs['requestDetail'].clearSku();\n          }\n        }\n      }\n    },\n    getSuppliers(value, callback) {\n      const params = { pageno: 1, count: 20, key: `${value}`.trim(), approval_country: this.countryList.join('_') };\n      getSupplierList(params)\n        .then(resp => {\n          if (resp.retcode !== 0) {\n            this.$message.error(resp.info);\n          } else {\n            const { list = [] } = resp.data || {};\n            if (Array.isArray(list) && list.length) {\n              return callback(list);\n            } else {\n              this.$message.error('This Supplier ID is not exist');\n            }\n          }\n          callback([]);\n        })\n        .catch(() => {\n          this.$message.error('Get Supplier Failed');\n          callback([]);\n        });\n    },\n    onSupplierSelect(item) {\n      this.modifyBasicForm({ field: 'supplier_id' }, item.supplier_id, item);\n\n      this.getShopIds(item.supplier_id);\n      this.getBackMarginConfig();\n      this.setBankAccountList(item);\n      this.getWithholdingTaxConfig(item);\n    },\n    setBankAccountList(item) {\n      this.bankAccountList = (item.bank_info_list || []).map(item => ({\n        label: item.bank_account_number_secret,\n        value: item.account_assignment_id\n      }));\n    },\n    getConfigType(supplier_type, purchase_type) {\n      if (purchase_type === 'Consignment' && supplier_type === 'CB') {\n        return 3; // CB-Consignment\n      } else if (purchase_type === 'Consignment' && supplier_type !== 'CB') {\n        return 2; // local-Consignment\n      } else if (purchase_type === 'Outright' && supplier_type !== 'CB') {\n        return 1; // local-Consignment\n      } else {\n        return '';\n      }\n    },\n    async getWithholdingTaxConfig(supplier) {\n      try {\n        const config_type = this.getConfigType(supplier.supplier_type, supplier.purchase_type);\n        const region = supplier.approval_country;\n        const res = await getSupplierConfig({ config_type, region });\n        const isShowWithholdingTax = [1, 2].includes(res.data.contract_info.with_holding_tax);\n        if (isShowWithholdingTax) this.$set(this.basicForm, 'with_holding_tax', supplier.with_holding_tax);\n      } catch (e) {\n        this.$message.error('Get Withholding Tax Config Failed');\n      }\n    },\n    getBackMarginConfig() {\n      const region = this.basicForm.bm_country;\n      if (!region) return;\n      getBackMarginConfig({ region })\n        .then(resp => {\n          if (resp.retcode !== 0) {\n            this.$message.error(resp.info);\n          } else {\n            this.bmConfig = resp.data.basic_info_config || {};\n            this.bmTypeWhiteList = resp.data.bm_type_config.filter(item => item.action).map(item => item.bm_type);\n            // if (!this.isDraft) {\n            //   this.$set(this.basicForm, 'bm_type', '');\n            // }\n          }\n        })\n        .catch(() => {\n          this.$message.error('Get Back Margin Config Failed!');\n        });\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.back-margin-create {\n  .back-margin-header {\n    position: relative;\n    margin-bottom: 30px;\n    .left-info {\n      position: absolute;\n      top: 0;\n      left: 20px;\n      min-width: 20%;\n      padding-left: 5px;\n      height: 60px;\n      line-height: 60px;\n      border-bottom: 2px solid #f0f2f5;\n    }\n    .right-info {\n      position: absolute;\n      top: 0;\n      right: 20px;\n      padding-left: 5px;\n      height: 60px;\n      line-height: 60px;\n    }\n    .back-icon {\n      display: inline-block;\n      margin-right: 10px;\n      transform: scale(1.2);\n    }\n    .back-margin-title {\n      color: rgb(215, 215, 215);\n      font-size: 26px;\n      margin-right: 20px;\n    }\n    .back-margin-status {\n      color: rgb(244, 171, 97);\n    }\n    .mass-submit-fail {\n      color: red;\n      border-radius: 50%;\n    }\n    .submit-section {\n      position: relative;\n      float: left;\n      width: 180px;\n      height: 50px;\n      margin: 15px 10px 0 0;\n      line-height: 50px;\n      font-size: 14px;\n      color: #86cd57;\n      cursor: pointer;\n      border: 1px solid #86cd57;\n      border-radius: 3px;\n      background-color: #fff;\n      transition: background 0.3s linear;\n    }\n    .submit-section:hover {\n      background-color: #86cd57;\n      color: #fff;\n      border-color: #fff;\n    }\n    .submit-section:hover .submit-icon {\n      background-position: 0 -1797px;\n    }\n    .submit-section:hover .draft-icon {\n      background-position: 0 -739px;\n    }\n    .submit-icon,\n    .draft-icon {\n      display: inline-block;\n      vertical-align: middle;\n      margin-left: 40px;\n    }\n    .submit-btn {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      padding-left: 42px;\n      box-sizing: border-box;\n      text-align: center;\n    }\n  }\n  .mass-submit-error-tips {\n    background: #fff3e0;\n    border-radius: 10px;\n    padding: 10px 20px;\n    font-size: 14px;\n    line-height: 20px;\n    font-family: Roboto-Regular;\n    color: #565258;\n    .error-header {\n      font-size: 20px;\n      font-weight: bold;\n    }\n    i {\n      color: #ffffff;\n      background: #ffc209;\n      border-radius: 50%;\n      padding: 3px;\n      margin-right: 5px;\n    }\n    .error-msg {\n      margin-left: 25px;\n    }\n  }\n  .item-gap {\n    display: inline-block;\n    margin-right: 8px;\n    vertical-align: top;\n  }\n  .item-info {\n    display: inline-block;\n    max-width: 300px;\n    // width: 200px;\n    // margin-left: 20px;\n    word-break: break-all;\n    vertical-align: middle;\n  }\n  .group-title {\n    margin: 40px 0 20px;\n    font-size: 18px;\n    // color: rgba(0, 0, 0, 0.6);\n    // font-weight: normal;\n  }\n  .bm-basic-form {\n    position: relative;\n  }\n  .basic-form {\n    .form-col {\n      min-height: 60px;\n      line-height: 60px;\n      overflow: hidden;\n      .el-form-item {\n        height: inherit;\n        line-height: inherit;\n      }\n    }\n    .el-select,\n    .el-input,\n    .el-autocomplete,\n    .el-input-number,\n    .el-textarea {\n      width: 200px;\n    }\n  }\n  .file-box {\n    width: 100%;\n  }\n}\n</style>\n\n<style lang=\"scss\">\n.back-margin-create-submit-tips {\n  word-break: break-all;\n}\n.back-margin-create {\n  .basic-form .el-form-item__error {\n    left: 16px;\n  }\n  .basic-form .el-input-number .el-input__inner {\n    padding: 1px 1px 1px 3px;\n    text-align: left;\n  }\n  &.pms-ui .el-input__inner,\n  &.pms-ui .el-range-input {\n    background-color: #fff;\n    border-radius: 4px;\n    height: 32px;\n    line-height: 32px;\n    &:focus {\n      outline-offset: 0;\n    }\n  }\n  .el-textarea__inner {\n    &:focus {\n      outline: -webkit-focus-ring-color auto 5px;\n    }\n    &:hover {\n      border-color: #3d61d1;\n    }\n  }\n  &.pms-ui .el-form-item__label {\n    text-overflow: ellipsis;\n    overflow: hidden;\n  }\n}\n\n.comment-row {\n  .comments {\n    max-width: initial;\n    padding: 16px;\n    border-radius: 4px;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/backMargin/create/requestDetail.vue","messages":[{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"tier_info\" is not in camelCase.","line":159,"column":5,"nodeType":"Property","endLine":159,"endColumn":21}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"add-request-detail\" v-loading=\"isLoading\">\n    <section class=\"request-title\">\n      <span class=\"add-title\">{{ $t('backMargin.addRequestDetail') }}</span>\n      <!-- <el-button\n        v-if=\"hasSku\"\n        class=\"list-btn request-btn\"\n        type=\"primary\"\n        @click=\"clearTier\"\n        :disabled=\"isLoading\"\n      >\n        {{ $t('backMargin.ResetTier') }}\n      </el-button> -->\n      <el-button\n        v-if=\"hasMultipleTier\"\n        class=\"list-btn request-btn\"\n        type=\"primary\"\n        @click=\"addRequestDetail\"\n        :disabled=\"isLoading || !isCompletedRequired\"\n      >\n        {{ $t('backMarginEditTier') }}\n      </el-button>\n    </section>\n\n    <el-tabs v-if=\"showTabs\" v-model=\"skuTab\" class=\"add-sku-table-card\" type=\"card\">\n      <el-tab-pane v-for=\"tab in skuTabs\" :key=\"tab.name\" :label=\"tab.label\" :name=\"tab.name\"></el-tab-pane>\n    </el-tabs>\n    <section :class=\"showTabs && 'create-sku-table'\">\n      <sku-table ref=\"skuTable\" :basicForm=\"basicForm\" :extendSchema=\"extendSchema\" :sku_type=\"skuType\"> </sku-table>\n      <el-button class=\"add-sku-btn\" @click=\"addNewSku\" :disabled=\"isDisableAddSKU\" type=\"text\">\n        <i class=\"el-icon-circle-plus-outline\"></i>\n        <span class=\"action-text\">Add SKU</span>\n      </el-button>\n      <el-button v-if=\"isShowAddAll\" class=\"add-sku-btn\" @click=\"addAllSku\" :disabled=\"isDisableAddSKU\" type=\"text\">\n        <i class=\"el-icon-circle-plus-outline\"></i>\n        <span class=\"action-text\">Add All Normal SKU</span>\n      </el-button>\n    </section>\n\n    <request-dialog\n      :visible=\"requestDialogShow\"\n      :tierArr=\"tierArr\"\n      @submit=\"setTier\"\n      @close=\"closeRequestDialog\"\n    ></request-dialog>\n\n    <add-sku-dialog\n      :visible=\"dialogVisible\"\n      :supplier_id=\"basicForm.supplier_id\"\n      :inventory_health_date=\"basicForm.inventory_health_date\"\n      :shop_id_list=\"basicForm.shop_id_list\"\n      :skuTabs=\"addSkuTabs\"\n      @submitSKU=\"addSkuList\"\n      @close=\"closeAddDialog\"\n    ></add-sku-dialog>\n\n    <!-- edit sku dialog -->\n    <discount\n      v-if=\"basicForm.bm_type === 9\"\n      :visible=\"showEditType === 9\"\n      :isEdit=\"true\"\n      :sku=\"currSku\"\n      @close=\"hiddenEdit\"\n      @prevOne=\"editNextSku(-1, $event)\"\n      @nextOne=\"editNextSku(1, $event)\"\n      @save=\"onSaveSku\"\n    ></discount>\n\n    <sellout\n      v-if=\"[1, 2, 7].includes(basicForm.bm_type)\"\n      :visible=\"[1, 2, 7].includes(showEditType)\"\n      :isEdit=\"true\"\n      :sku=\"currSku\"\n      :index=\"currSkuIndex\"\n      :with_holding_tax=\"basicForm.with_holding_tax || 0\"\n      :billing_type=\"basicForm.billing_type\"\n      :tierArr=\"tierArr\"\n      :bm_type=\"basicForm.bm_type\"\n      @close=\"hiddenEdit\"\n      @prevOne=\"editNextSku(-1, $event)\"\n      @nextOne=\"editNextSku(1, $event)\"\n      @save=\"onSaveSku\"\n    ></sellout>\n\n    <sellingPrice\n      v-if=\"basicForm.bm_type === 8\"\n      :visible=\"showEditType === 8\"\n      :isEdit=\"true\"\n      :sku=\"currSku\"\n      :with_holding_tax=\"basicForm.with_holding_tax || 0\"\n      @close=\"hiddenEdit\"\n      @prevOne=\"editNextSku(-1, $event)\"\n      @nextOne=\"editNextSku(1, $event)\"\n      @save=\"onSaveSku\"\n    ></sellingPrice>\n\n    <!-- stock on hand && other -->\n    <stockOnHand\n      v-if=\"[3, 5].includes(basicForm.bm_type)\"\n      :visible=\"[3, 5].includes(showEditType)\"\n      :bm_type=\"basicForm.bm_type\"\n      :isEdit=\"true\"\n      :sku=\"currSku\"\n      :with_holding_tax=\"basicForm.with_holding_tax || 0\"\n      :billing_type=\"basicForm.billing_type\"\n      @close=\"hiddenEdit\"\n      @prevOne=\"editNextSku(-1, $event)\"\n      @nextOne=\"editNextSku(1, $event)\"\n      @save=\"onSaveSku\"\n    ></stockOnHand>\n  </div>\n</template>\n\n<script>\nimport { addSku, removeSku, editSku, addAllSku } from '@/api/backMargin';\n\nimport RequestDialog from './requestDialog';\nimport SkuTable from '../common/newSkuTable';\nimport { isShowField } from '../common/fieldConfig';\nimport AddSkuDialog from './addSkuDialog';\nimport { SKU_TYPES, canEditSku } from '../common/util';\n\nimport sellingPrice from '../dialog/sellingPrice';\nimport stockOnHand from '../dialog/stockOnHand';\nimport sellout from '../dialog/sellout';\nimport discount from '../dialog/discount';\n\nconst getRepeatTips = (success, fail) => {\n  const repeatTips = 'A virtual SKU can only be added once in a BM request.';\n  if (!fail) return '';\n  if (!success) {\n    return 'SKU add failed. ' + repeatTips;\n  }\n  return `${success} SKU add successfully, ${fail} SKU add failed. ` + repeatTips;\n};\n\n// 1. 清空sku事件[done]\n// 2. get bm sku list接口联调[done]\n// 3. 处理form逻辑[done]\n// 7. add sku联调:get sku list以及add skus[done]\n// 5. remove联调[done]\n// 6. add all sku联调[done]\n// 自动保存form【done】\n\n// edit sku联调：组件对接、接口联调【done】\n// physical sku table内嵌【done】\n\nexport default {\n  components: {\n    RequestDialog,\n    SkuTable,\n    AddSkuDialog,\n    sellingPrice,\n    stockOnHand,\n    sellout,\n    discount\n  },\n  props: {\n    tier_info: Array,\n    basicForm: {\n      type: Object,\n      required: true,\n      default: () => ({})\n    },\n    isCompletedRequired: Boolean\n  },\n  data() {\n    return {\n      requestDialogShow: false,\n      isLoading: false,\n      tierArr: [],\n      dialogVisible: false,\n      skuTab: 'normal',\n      skuTabs: ['normal', 'virtual', 'physical'].map(name => ({ name, ...SKU_TYPES[name] })),\n      currSku: {},\n      currSkuIndex: 0,\n      showEditType: ''\n    };\n  },\n  computed: {\n    isShowAddAll() {\n      if (this.basicForm.bm_type === 2 && this.skuType !== '1') return false;\n      return true;\n    },\n    addSkuTabs() {\n      if (this.skuType === '1') {\n        return ['normal'];\n      } else if (this.skuType === '1,2') {\n        return ['normal', 'virtual'];\n      }\n      return ['virtual'];\n    },\n    skuType() {\n      if (this.showTabs) {\n        return SKU_TYPES[this.skuTab].type + '';\n      } else if ([8, 6, 9, 10].includes(this.basicForm.bm_type)) {\n        return '1,2';\n      }\n      return '1';\n    },\n    showTabs() {\n      return this.basicForm.bm_type === 2;\n    },\n    hasMultipleTier() {\n      return [1, 2, 7].includes(this.basicForm.bm_type);\n    },\n    isDisableAddSKU() {\n      if (!this.isCompletedRequired || !this.basicForm.bm_id) return true;\n      // 有scope必选选by sku\n      if (isShowField('calculated_sku_scope', this.basicForm.bm_type) && this.basicForm.calculated_sku_scope !== 1) {\n        return true;\n      }\n      // 有shop选项必须要先选shop\n      if (isShowField('shop_id_list', this.basicForm.bm_type) && !(this.basicForm.shop_id_list || []).length) {\n        return true;\n      }\n      // 有多级tier必须要先确认\n      // if (this.hasMultipleTier) return !this.hasTierInfo;\n      // 必须现有供应商\n      return !this.basicForm.supplier_id;\n    },\n    inventory_health_date() {\n      return this.basicForm.bm_type === 5 ? this.basicForm.start_date_str : undefined;\n    },\n    extendSchema() {\n      return [\n        {\n          field: 'action',\n          label: this.$t('commonAction'),\n          fixed: 'right',\n          render: (schema, row, h, index) => {\n            const btns = [];\n            if (canEditSku(row.sku_type, this.skuTab, this.basicForm.bm_type)) {\n              btns.push(\n                h(\n                  'el-button',\n                  {\n                    props: {\n                      type: 'text'\n                    },\n                    on: {\n                      click: this.showEditSku.bind(null, schema, row, index)\n                    }\n                  },\n                  this.$t('commonEdit')\n                )\n              );\n            }\n            if (row.sku_type !== 3) {\n              btns.push(\n                h(\n                  'el-button',\n                  {\n                    class: 'color-red',\n                    props: {\n                      type: 'text'\n                    },\n                    on: {\n                      click: this.removeSku.bind(null, row.sku_id)\n                    }\n                  },\n                  this.$t('commonRemove')\n                )\n              );\n            }\n            return ['span', null, btns];\n          }\n        }\n      ];\n    }\n  },\n  watch: {\n    tier_info(val) {\n      this.tierArr = val;\n    }\n  },\n  methods: {\n    // 外部调用\n    async clearSku() {\n      if (!this.basicForm.bm_id) return;\n      const res = await removeSku({\n        bm_id: this.basicForm.bm_id,\n        clear_all: true\n      });\n\n      if (res.retcode === 0) {\n        this.refreshSkuList(true);\n      } else {\n        this.$message.error('clear sku fail:' + res.message);\n      }\n    },\n    async refreshSkuList(isReset) {\n      this.isLoading = true;\n      await this.$refs['skuTable'].getList(isReset);\n      this.isLoading = false;\n    },\n    setTier(list) {\n      if (JSON.stringify(this.tierArr) === JSON.stringify(list)) return false;\n      this.tierArr = list;\n      this.clearSku();\n    },\n    showEditSku(schema, row, index) {\n      this.showEditType = this.basicForm.bm_type;\n      this.currSku = row;\n      this.currSkuIndex = index + 1;\n    },\n    hiddenEdit() {\n      this.showEditType = 0;\n      this.currSku = {};\n      this.currSkuIndex = 0;\n    },\n    async saveSku(sku) {\n      const res = await editSku({\n        bm_id: this.basicForm.bm_id,\n        sku_list: [sku]\n      });\n      if (res.retcode === 0) {\n        this.$message.success('save success');\n        await this.refreshSkuList();\n        return true;\n      }\n      this.$message.error('edit sku faild:' + res.message);\n      return false;\n    },\n    async onSaveSku(sku) {\n      const res = await this.saveSku(sku);\n      if (res) this.hiddenEdit();\n    },\n    async editNextSku(next, sku) {\n      const data = await this.$refs['skuTable'].getSku(this.currSkuIndex, next, sku.sku_type);\n      if (data) {\n        const res = await this.saveSku(sku);\n        if (res) {\n          this.currSkuIndex = data.index;\n          this.currSku = data.sku;\n        }\n      }\n    },\n    async removeSku(sku_id) {\n      const res = await removeSku({\n        bm_id: this.basicForm.bm_id,\n        sku_ids: [sku_id]\n      });\n      if (res.retcode === 0) {\n        this.refreshSkuList();\n      } else {\n        this.$message.error('remove sku fail:' + res.message);\n      }\n    },\n    async addSkuList(list = []) {\n      if (!list || !list.length) {\n        this.$message.error('No sku selected!');\n        return;\n      }\n      const skuType = parseInt(this.skuType);\n      // 将sku提交到后台，刷新sku table\n      const res = await addSku({\n        bm_id: this.basicForm.bm_id,\n        sku_list: list.map(item => ({\n          sku_id: item.sku_id,\n          sku_type: this.basicForm.bm_type === 2 ? skuType : item.sku_type // 只有sell out需要区分add类型\n        })),\n        tier_qty: this.tierArr\n      });\n\n      if (res.retcode === 0) {\n        const failCount =\n          this.skuTab === 'virtual'\n            ? res.data.physical_repeat_count\n            : this.skuTab === 'physical'\n            ? res.data.repeat_virtual_count\n            : 0;\n        const tips = getRepeatTips(res.data.success_count, failCount);\n\n        if (tips) {\n          this.$message.warning(tips);\n        }\n\n        this.refreshSkuList(true);\n        this.dialogVisible = false;\n      } else {\n        this.$message.error('Add sku fail:' + res.message);\n      }\n    },\n    closeAddDialog() {\n      this.dialogVisible = false;\n    },\n    addNewSku() {\n      this.dialogVisible = true;\n    },\n    async addAllSku() {\n      const res = await addAllSku({\n        bm_id: this.basicForm.bm_id,\n        tier_qty: this.tierArr\n      });\n\n      if (res.retcode === 0) {\n        this.$message.success('add sku success!');\n        this.refreshSkuList(true);\n        this.dialogVisible = false;\n      } else {\n        this.$message.error('add sku fail:' + res.message);\n      }\n    },\n    addRequestDetail() {\n      this.requestDialogShow = true;\n    },\n    closeRequestDialog() {\n      this.requestDialogShow = false;\n    }\n    // clearTier() {\n    //   this.tierInfo = {};\n    //   this.clearSku();\n    // }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.add-request-detail {\n  .request-title {\n    width: 100%;\n    height: 36px;\n    line-height: 36px;\n    margin: 40px 0 20px;\n    font-size: 18px;\n    overflow: hidden;\n    .add-title {\n      display: inline-block;\n      font-weight: normal;\n    }\n    .request-btn {\n      width: auto;\n      margin: 0;\n      padding: 0 10px;\n      float: right;\n      &.is-disabled {\n        opacity: 0.5;\n      }\n    }\n\n    .not-allowed {\n      cursor: not-allowed;\n    }\n  }\n  .create-sku-table {\n    border: 1px solid #e8e8e8;\n    border-top: 0;\n    padding: 15px;\n  }\n  .add-sku-btn {\n    font-size: 16px;\n    margin-top: 16px;\n    font-weight: 700;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/backMargin/create/requestDialog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/backMargin/create/skuTable.vue","messages":[{"ruleId":"vue/no-use-v-if-with-v-for","severity":2,"message":"This 'v-if' should be moved to the wrapper element.","line":18,"column":11,"nodeType":"VAttribute","endLine":18,"endColumn":33},{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"with_holding_tax\" is not in camelCase.","line":146,"column":5,"nodeType":"Property","endLine":146,"endColumn":29},{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"inventory_health_date\" is not in camelCase.","line":147,"column":5,"nodeType":"Property","endLine":147,"endColumn":34},{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"shop_id_list\" is not in camelCase.","line":148,"column":5,"nodeType":"Property","endLine":148,"endColumn":24}],"errorCount":4,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <section>\n    <el-table class=\"back-margin-sku-list\" border :data=\"showSkus\" ref=\"multipleTable\" v-loading=\"isLoading\">\n      <el-table-column type=\"selection\" width=\"28\"> </el-table-column>\n      <el-table-column :fixed=\"true\" type=\"index\" :index=\"getIndex\" width=\"50\"> </el-table-column>\n      <el-table-column\n        v-for=\"schema in tableSchema\"\n        :prop=\"schema.field\"\n        :label=\"schema.label\"\n        :key=\"schema.field\"\n        :sortable=\"schema.sortable || false\"\n        :width=\"schema.width || 'auto'\"\n        :column-key=\"schema.columnKey || ''\"\n        :align=\"schema.align || 'center'\"\n        :fixed=\"schema.fixed || false\"\n      >\n        <el-table-column\n          v-if=\"schema.children\"\n          v-for=\"childrenSchema in schema.children || []\"\n          :prop=\"childrenSchema.field\"\n          :label=\"childrenSchema.label\"\n          :key=\"childrenSchema.field\"\n          width=\"160\"\n        >\n          <template slot-scope=\"scope\">\n            <pms-table-cell\n              @update=\"closeUpdate\"\n              :forceUpdate=\"update\"\n              :renderData=\"getTableCellRender(childrenSchema, scope.row, scope.$index)\"\n            ></pms-table-cell>\n          </template>\n        </el-table-column>\n        <template v-if=\"!schema.children\" slot-scope=\"scope\">\n          <pms-table-cell\n            @update=\"closeUpdate\"\n            :forceUpdate=\"update\"\n            :renderData=\"getTableCellRender(schema, scope.row, scope.$index)\"\n          ></pms-table-cell>\n          <el-popover\n            v-if=\"schema.field === 'ownership_status' && scope.row.ownership_status == 2\"\n            ref=\"popover1\"\n            placement=\"top\"\n            trigger=\"hover\"\n            popper-class=\"popper-class\"\n          >\n            <p>{{ $t('backMarginDelinkTime') }}</p>\n            <p>{{ moment(scope.row.delink_time * 1000).format('YYYY-MM-DD HH:mm:ss') }}</p>\n            <svg-icon slot=\"reference\" class=\"warning-icon\" icon-class=\"warning-icon\" />\n          </el-popover>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <!-- // 这一期暂时不做分页，下期可能补上 -->\n    <el-pagination\n      class=\"bm-sku-pagination\"\n      v-if=\"pager.total > pager.size\"\n      background\n      layout=\"sizes, prev, pager, next \"\n      :current-page=\"pager.curr\"\n      :total=\"pager.total\"\n      :page-sizes=\"[10, 20, 50]\"\n      :page-size=\"pager.size\"\n      @size-change=\"handleSizeChange\"\n      @current-change=\"handleCurrentChange\"\n    ></el-pagination>\n\n    <el-button @click=\"addNewSku\" :disabled=\"isDisableAdd\" class=\"add-action\">\n      <i class=\"el-icon-circle-plus-outline\"></i>\n      <span class=\"action-text\">Add SKU</span>\n    </el-button>\n    <el-button @click=\"addAllSku\" :disabled=\"isDisableAdd\" class=\"add-action\">\n      <i class=\"el-icon-circle-plus-outline\"></i>\n      <span class=\"action-text\">Add All SKU</span>\n    </el-button>\n\n    <add-sku-dialog\n      :visible=\"dialogVisible\"\n      :supplierID=\"supplierID\"\n      :inventory_health_date=\"inventory_health_date\"\n      @submitSKU=\"submitSkuList\"\n      :shop_id_list=\"shop_id_list\"\n      @close=\"closeAddDialog\"\n    ></add-sku-dialog>\n  </section>\n</template>\n\n<script>\n// 已废弃\nimport PMSTableItem from '@/components/BaseItem/tableItem';\nimport AddSkuDialog from './addSkuDialog';\nimport moment from 'moment';\nimport { BackMarginOwnershipStatusList, WithHoldingTaxTypes } from '@/utils/constant';\nimport { getBackMarginSKU, getBackMarginSKUAll } from '@/api/backMargin';\nimport { getSomeItem } from '../common/util';\n\nfunction getWithHoldingTax(val) {\n  const label = (WithHoldingTaxTypes.find(item => item.value === val) || {}).label;\n  if (label) {\n    return label.replace('%', '') / 100;\n  }\n  return 0;\n}\n\nexport default {\n  data() {\n    return {\n      skuList: [],\n      skuID: '',\n      update: false,\n      dialogVisible: false,\n      moment,\n      pager: {\n        curr: 1,\n        size: 20,\n        total: 0\n      },\n      isLoading: false\n    };\n  },\n  props: {\n    skuForm: {\n      type: Object,\n      default: () => ({\n        tierInfo: null,\n        skuList: []\n      })\n    },\n    supplierID: {\n      type: String,\n      required: true,\n      default: () => ''\n    },\n    byType: {\n      type: Number,\n      required: true,\n      default: () => -1\n    },\n    backMarginType: {\n      type: Number,\n      required: true,\n      default: () => -1\n    },\n    country: String,\n    isDisableAdd: Boolean,\n    with_holding_tax: Number,\n    inventory_health_date: String, // 用于查询sku时额外的参数\n    shop_id_list: Array\n  },\n  components: {\n    'pms-table-cell': PMSTableItem,\n    AddSkuDialog\n  },\n  computed: {\n    showSkus() {\n      const star = this.pager.size * (this.pager.curr - 1);\n      return getSomeItem(this.skuList, star, star + this.pager.size);\n    },\n    currency() {\n      return this.$store.getters.currencyMap[this.country];\n    },\n    tierSchema() {\n      if (!(this.skuForm.tierInfo && this.skuForm.tierInfo.multi_tier === 2)) return [];\n\n      const list = [];\n      this.skuForm.tierInfo.tierList.forEach((tier, index) => {\n        list.push(\n          {\n            field: `tier_${index + 1}_price`,\n            width: '160px',\n            label: `${this.$t('backMargin.tier')} ${index + 1} ${this.$t('backMargin.price')} (${this.$t(\n              'backMargin.qty'\n            )}: ${this.getTierInterval(index)})`,\n            render: this.commonInputRender,\n            byType: 1\n          },\n          {\n            field: `tier_${index + 1}_percentage`,\n            width: '160px',\n            label: `${this.$t('backMargin.tier')} ${index + 1} ${this.$t('backMargin.percentage')} (${this.$t(\n              'backMargin.qty'\n            )}: ${this.getTierInterval(index)})`,\n            render: this.commonInputRender,\n            byType: 2\n          }\n        );\n      });\n\n      return list;\n    },\n    lastTierSchema() {\n      try {\n        if (![1, 2, 3, 5, 7, 8].includes(this.backMarginType)) return []; // 黑名单\n        const info = this.skuForm.tierInfo || {};\n        const max = info.tierList ? info.tierList.length : 0;\n        const lastTierStart = info[`tier${max}`] || 0;\n        const list = [\n          {\n            field: `tier_infinity_price`,\n            width: '160px',\n            label:\n              'Last Tier BM Support Amount' +\n              (this.backMarginType === 8 ? '' : `(${this.$t('backMargin.qty')}:${lastTierStart}-Infinity)`),\n            render: this.commonInputRender,\n            byType: 1\n          }\n        ];\n\n        if (this.backMarginType !== 8) {\n          list.push({\n            field: `tier_infinity_percentage`,\n            width: '160px',\n            label: `Last Tier BM Percentage(${this.$t('backMargin.qty')}:${lastTierStart}-Infinity)`,\n            render: this.commonInputRender,\n            byType: 2\n          });\n        }\n\n        if (this.with_holding_tax !== 0) {\n          list.push({\n            field: `tier_bm_after_wht`,\n            width: '160px',\n            label: `${max ? 'Tier 1' : 'Last Tier'} BM after WHT`,\n            byType: 0 // 系统计算\n          });\n        }\n\n        return list;\n      } catch (e) {\n        // console.error(e);\n        return [];\n      }\n    },\n    defaultTierSchema() {\n      if (this.backMarginType !== 8) return [];\n      return [1, 2, 3, 4].map(i => ({\n        label: `Tier ${i}`,\n        children: [\n          {\n            field: `default_tier_${i}`,\n            label: `Default Tier ${i} Amount`,\n            render: this.commonInputRender,\n            byType: 1,\n            disableChange: true\n          },\n          {\n            field: `tier_${i}_price`,\n            label: `Tier ${i} BM Support Amount`,\n            render: this.commonInputRender,\n            byType: 1,\n            disableChange: true\n          }\n        ]\n      }));\n    },\n    tableSchema() {\n      return [\n        { fixed: true, field: 'sku_id', label: this.$t('purchaseOrder.skuID') },\n        { fixed: true, field: 'sku_name', label: this.$t('purchaseRequest.skuName') },\n        { field: 'category_name', label: this.$t('backMargin.l1CategoryName') },\n        { field: 'purchase_price', label: this.$t('backMargin.purchasePrice') },\n        { field: 'selling_price', label: this.$t('backMargin.feSellingPrice') },\n        {\n          field: 'ownership_status',\n          label: this.$t('backMarginOwnershipStatus'),\n          type: 'enum',\n          options: BackMarginOwnershipStatusList,\n          width: '100px'\n        },\n        ...this.tierSchema,\n        ...this.defaultTierSchema,\n        ...this.lastTierSchema,\n        {\n          field: 'discount_min',\n          label: this.$t('backMargin.discount_min'),\n          width: '120px',\n          showTypes: [9],\n          render: this.inputNumberRender,\n          unit: '%'\n        },\n        {\n          field: 'discount_max',\n          label: this.$t('backMargin.discount_max'),\n          width: '120px',\n          showTypes: [9],\n          render: this.inputNumberRender,\n          unit: '%'\n        },\n        {\n          field: 'min_target_qty',\n          label: this.$t('backMargin.minSellQty'),\n          width: '120px',\n          showTypes: [1, 2, 7],\n          render: (schema, row, index, h) => [\n            'el-input-number',\n            {\n              class: 'qty-input-number',\n              props: { value: this.skuList[index][schema.field], min: 0, controls: false, precision: 0 },\n              on: { input: value => this.$set(this.skuList[index], schema.field, value) }\n            }\n          ]\n        },\n        {\n          field: 'max_target_qty',\n          label: this.$t('backMargin.maxBMQty'),\n          width: '120px',\n          showTypes: [1, 2, 7],\n          render: (schema, row, index, h) => [\n            'el-input-number',\n            {\n              class: 'qty-input-number',\n              props: { value: this.skuList[index][schema.field], min: 0, controls: false, precision: 0 },\n              on: { input: value => this.$set(this.skuList[index], schema.field, value) }\n            }\n          ]\n        },\n        {\n          field: 'default_active_qty',\n          label: this.$t('backMargin.DefaultActiveQty'),\n          width: '120px',\n          showTypes: [5, 7],\n          render: (schema, row, index, h) => [\n            'el-input-number',\n            {\n              class: 'qty-input-number',\n              props: { value: this.skuList[index][schema.field], min: 0, controls: false, precision: 0 },\n              on: { input: value => this.$set(this.skuList[index], schema.field, value) }\n            }\n          ]\n        },\n        {\n          field: 'original_invoice_number',\n          label: this.$t('backMargin.OriginalInvoiceNumber'),\n          width: '120px',\n          showTypes: [5],\n          render: (schema, row, index, h) => [\n            'el-input',\n            {\n              class: 'qty-input-number',\n              props: { value: this.skuList[index][schema.field], precision: 0 },\n              attrs: { maxlength: 32 },\n              on: { input: value => this.$set(this.skuList[index], schema.field, value) }\n            }\n          ]\n        },\n        { field: 'new_cost', label: this.$t('backMargin.NewCost'), showTypes: [5] },\n        { field: 'stock_on_hand', label: this.$t('backMargin.StockOnHand'), showTypes: [5] },\n        { field: 'shop_id', label: this.$t('backMargin.ShopID'), showTypes: [6] },\n        {\n          fixed: 'right',\n          field: 'action',\n          label: this.$t('purchaseRequest.action'),\n          width: '96px',\n          render: (schema, row, index) => {\n            return [\n              'el-button',\n              {\n                class: 'danger-list-btn list-btn',\n                props: { type: 'danger', size: 'mini' },\n                on: { click: () => this.removeSku(row, index) }\n              },\n              this.$t('purchaseOrder.remove')\n            ];\n          }\n        }\n      ].filter(item => {\n        if (item.showTypes) {\n          return item.showTypes.includes(this.backMarginType);\n        }\n        return true;\n      });\n    }\n  },\n  watch: {\n    '$props.skuForm.skuList': {\n      handler(curr) {\n        this.skuList = curr;\n        this.pager.total = curr ? curr.length : 0;\n      },\n      immediate: true\n    },\n    '$props.byType': {\n      handler(curr) {\n        if (curr === 1 || curr === 2) this.update = true;\n      },\n      immediate: true\n    },\n    isLoading(val) {\n      this.$emit('setLoading', val);\n    }\n  },\n  methods: {\n    getIndex(index) {\n      return (this.pager.curr - 1) * this.pager.size + index + 1;\n    },\n    handleSizeChange(size) {\n      this.pager.size = size;\n    },\n    handleCurrentChange(curr) {\n      this.pager.curr = curr;\n    },\n    async checkSKUTotal(params) {\n      params = { ...params, skip: 0, limit: 1 };\n      const resp = await getBackMarginSKU(params);\n      if (resp.data.total > 100) {\n        return false;\n      }\n      return true;\n    },\n    async addAllSku() {\n      const params = {\n        supplier_id: this.supplierID,\n        inventory_health_date: this.inventory_health_date,\n        skip: 0,\n        limit: 10000\n      };\n      if (this.shop_id_list && this.shop_id_list.length) {\n        params.shop_id_list = this.shop_id_list.join(',');\n      }\n      this.isLoading = true;\n      // const c = Date.now();\n      try {\n        // 检查是否超过100，本期不做限制\n        // const check = await this.checkSKUTotal(params);\n        // if (!check) {\n        //   throw new Error('Cannot add more than 100 SKUs');\n        // }\n\n        const resp = await getBackMarginSKUAll(params);\n\n        if (resp.status !== 0) {\n          this.$message.error('Getting Supplier SKU List Failed');\n        } else {\n          const list = resp.data['sku_list'] || [];\n          if (list.length === 0) {\n            this.$message.error('this supplier ID does not have skus.');\n            return;\n          }\n          if (this.backMarginType === 5) {\n            list.forEach(sku => {\n              // default_active_qty默认值和stock_on_hand一致\n              if (sku.stock_on_hand) sku.default_active_qty = sku.stock_on_hand;\n            });\n          }\n          // 去重\n          const keys = {};\n          const resList = [];\n          // console.log(list);\n          for (let i = 0; i < list.length; i++) {\n            if (!keys[list[i].sku_id]) {\n              keys[list[i].sku_id] = 1;\n              if (!list[i].is_deprecated) {\n                resList.push(list[i]);\n              }\n            } else {\n              // console.log(list[i].sku_id);\n            }\n          }\n\n          // this.skuList = list.filter(item => !item.is_deprecated);\n          this.$emit('modify', resList);\n          // const g = Date.now();\n          // setTimeout(() => {\n          //   const e = Date.now();\n          //   console.log(`${params.limit}条sku总耗时:`, e - c);\n          //   console.log(`后台下载耗时:`, g - c);\n          //   console.log(`前端解析耗时:`, e - g);\n          // }, 0);\n        }\n      } catch (e) {\n        this.$message.error(`Getting Supplier SKU List Failed: ${e.message}`);\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    closeUpdate() {\n      this.update = false;\n    },\n    getTableCellRender(schema, row, index) {\n      index = this.getIndex(index) - 1;\n      if (schema.field === 'ownership_status' && row.ownership_status === 2) {\n        return { schema, row, index, className: 'delink-color' };\n      }\n      return { schema, row, index };\n    },\n    setPriceOrPercentage(index, field = '') {\n      const value = this.skuList[index][field];\n      let price = 0; // 获取计算后的price\n      const buyingPrice = this.skuList[index].purchase_price;\n      if (this.byType === 1) {\n        // 1-by price\n        const key = field.replace(/price/g, 'percentage');\n        const calculation = buyingPrice ? ((value * 100) / buyingPrice).toFixed(2) : 0;\n        this.$set(this.skuList[index], key, Number(calculation));\n        price = value;\n      } else if (this.byType === 2) {\n        const key = field.replace(/percentage/g, 'price');\n        const calculation = buyingPrice ? ((value * buyingPrice) / 100).toFixed(2) : 0;\n        this.$set(this.skuList[index], key, Number(calculation));\n        price = calculation;\n      }\n\n      // 计算BM after WHT\n      if (this.with_holding_tax !== 0 && price) {\n        if (this.tierSchema.length) {\n          // 有tier1，则取tier1\n          if (field === 'tier_1_price' || field === 'tier_1_percentage') {\n            const calculation = price * (1 - getWithHoldingTax(this.with_holding_tax));\n            this.$set(this.skuList[index], 'tier_bm_after_wht', Number(calculation.toFixed(2)));\n          }\n        } else {\n          // 否则取last tier\n          if (field === 'tier_infinity_price' || field === 'tier_infinity_percentage') {\n            const calculation = price * (1 - getWithHoldingTax(this.with_holding_tax));\n            this.$set(this.skuList[index], 'tier_bm_after_wht', Number(calculation.toFixed(2)));\n          }\n        }\n      }\n\n      // 计算new cost值\n      if (this.backMarginType === 5) {\n        if (field === 'tier_infinity_price' || field === 'tier_infinity_percentage') {\n          const cal2 = buyingPrice - price;\n          this.$set(this.skuList[index], 'new_cost', cal2);\n        }\n      }\n    },\n    commonInputRender(schema, row, index, h) {\n      const inputElement =\n        this.byType === schema.byType\n          ? [\n              'el-input-number',\n              {\n                class: 'cell-value',\n                props: { value: this.skuList[index][schema.field], controls: false, precision: 2 },\n                on: {\n                  input: value => this.$set(this.skuList[index], schema.field, value),\n                  change: () => schema.disableChange || this.setPriceOrPercentage(index, schema.field)\n                }\n              }\n            ]\n          : ['span', { class: 'cell-value' }, this.skuList[index][schema.field]];\n      const unitMap = this.byType !== -1 ? ['', this.currency, '%'] : [];\n      const unitElement = ['span', { class: 'cell-unit' }, unitMap[schema.byType] || ''];\n      return ['div', { class: 'input-cell' }, [h(...inputElement), h(...unitElement)]];\n    },\n    inputNumberRender(schema, row, index, h) {\n      return [\n        'div',\n        {\n          class: 'input-cell'\n        },\n        [\n          h('el-input-number', {\n            class: 'cell-value',\n            props: { value: this.skuList[index][schema.field], min: 0, controls: false, precision: 2 },\n            on: { input: value => this.$set(this.skuList[index], schema.field, value) }\n          }),\n          schema.unit || ''\n        ]\n      ];\n    },\n    getTierInterval(index) {\n      return `${index === 0 ? 0 : this.skuForm.tierInfo[`tier${index}`]}-${this.skuForm.tierInfo[`tier${index + 1}`]}`;\n    },\n    addNewSku() {\n      // if (this.addDisabled) return;\n      this.dialogVisible = true;\n    },\n    submitSkuList(list = []) {\n      const skuList = this.skuList || [];\n      this.skuList.push(...list.filter(item => !skuList.find(sku => sku.sku_id === item.sku_id)));\n      this.$emit('modify', this.skuList);\n      this.dialogVisible = false;\n    },\n    closeAddDialog() {\n      this.dialogVisible = false;\n    },\n    removeSku(row, index) {\n      this.skuList.splice(index, 1);\n      this.$emit('modify', this.skuList);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.back-margin-sku-list {\n  .el-table__body-wrapper {\n    position: static;\n  }\n  .input-cell {\n    display: flex;\n    width: 100%;\n    align-items: center;\n    .cell-value {\n      flex: 1;\n      text-align: right;\n    }\n    .cell-unit {\n      width: 40px;\n      padding-left: 4px;\n      text-align: left;\n    }\n  }\n  .delink-color {\n    color: #ff9100;\n  }\n  .warning-icon {\n    fill: #ff9100;\n  }\n  .popper-class {\n    font-family: Roboto-Regular;\n    font-size: 12px;\n    color: #333333;\n    line-height: 18px;\n  }\n}\n</style>\n\n<style lang=\"scss\" scoped>\n.back-margin-sku-list {\n  margin-top: 20px;\n}\n.bm-sku-pagination {\n  padding-top: 10px;\n  text-align: center;\n}\n.danger-list-btn {\n  margin-left: 0px;\n  background-color: #f56c6c;\n}\n.action-row {\n  width: 100%;\n  height: 60px;\n  margin: 10px;\n}\n.add-action {\n  font-size: 18px;\n  font-weight: bold;\n  color: #3d6ed1;\n  border: 0;\n  margin-top: 20px;\n  padding: 0;\n  &:hover {\n    background-color: #fff;\n    color: #3d6ed1;\n  }\n  &.is-disabled {\n    opacity: 0.5;\n  }\n}\n\n.action-text {\n  margin-left: 0;\n  font-size: 18px;\n  font-weight: bold;\n  color: #3d6ed1;\n}\n.qty-input-number {\n  width: 100px;\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/backMargin/detail/ActionLog.vue","messages":[{"ruleId":"vue/no-template-shadow","severity":2,"message":"Variable 'index' is already declared in the upper scope.","line":33,"column":46,"nodeType":"Identifier","endLine":33,"endColumn":51},{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"actionLog\" is not PascalCase.","line":65,"column":9,"nodeType":"Literal","endLine":65,"endColumn":20,"fix":{"range":[2875,2884],"text":"ActionLog"}}],"errorCount":2,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <el-dialog\n    :visible.sync=\"dialogVisible\"\n    width=\"841px\"\n    lock-scroll\n    custom-class=\"pms-dialog pms-ele-ui\"\n    :title=\"$t('commonActionLog')\"\n    @close=\"onClose\"\n  >\n    <div v-loading=\"loading\">\n      <section class=\"table-header\">\n        <div v-for=\"(item, index) in headerList\" :key=\"item.label\" class=\"table-header-item\" :class=\"index ?'':'ml-34'\" :style=\"{ width: item.width || '200px'}\">{{item.label}}</div>\n      </section>\n      <div v-if=\"tableData.length\" class=\"table-wrapper\">\n        <section class=\"content-wrapper\">\n          <div v-for=\"(item,index) in tableData\" :key=\"item.change_id\" class=\"content-item\">\n            <section class=\"base-info\">\n              <div class=\"base-info-item expend-action-icon\" @click=\"expend(item, index)\">\n                <i v-if=\"item.content && item.content.length\"  :class=\"[item.expansion ? 'el-icon-caret-bottom' : 'el-icon-caret-top']\"></i>\n              </div>\n              <div class=\"base-info-item other-width\">{{item.action}}</div>\n              <div class=\"base-info-item\">{{status2Label(item.new_status)}}</div>\n              <div class=\"base-info-item other-width\">\n                <p>{{item.operator}}</p>\n                <p>{{moment(item.ctime * 1000 ).format('YYYY-MM-DD HH:mm:ss')}}</p>\n              </div>\n              <div class=\"base-info-item\">\n                {{item.remark || '/'}}\n              </div>\n            </section>\n            <section v-if=\"item.expansion\" class=\"expend-info\">\n              <el-table :data=\"item.content\" size=\"mini\" border>\n                <el-table-column v-for=\"(col,index) in tableColumns\" :key=\"col.prop\" :label=\"col.label\" :prop=\"col.prop\" align=\"left\"  :class-name=\"index ? '' : 'pl30'\">\n                  <template slot-scope=\"scope\">\n                    {{scope.row[col.prop] !== '' ? scope.row[col.prop] : '/'}}\n                  </template>\n                </el-table-column>\n              </el-table>\n            </section>\n          </div>\n        </section>\n        <section class='pagination-center'>\n          <el-pagination background layout=\"sizes, prev, pager, next\" :current-page='pager.page_no' :page-sizes='[10, 20, 50, 100]' :total.sync=\"total\" :page-size=\"pager.count\" @size-change='handleSizeChange' @current-change=\"handleChangePage\"></el-pagination>\n        </section>\n      </div>\n      <div v-else class=\"empty-wrapper\">\n        {{$t('commonNoData')}}\n      </div>\n      <div class=\"list-right-btns-wrapper user-footer-btn\">\n        <div class=\"btn\" @click=\"onClose\">\n          <span>{{$t('commonClose')}}</span>\n        </div>\n      </div>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\n// TODO 真实数据需要放开\nimport { commonFetchAction } from '@/utils';\nimport { getActionLog } from '@/api/backMargin';\nimport { BackMarginStatusList } from '@/utils/constant';\nimport moment from 'moment';\nexport default {\n  name: 'actionLog',\n  props: {\n    visible: {\n      type: Boolean,\n      default: false,\n      required: true\n    },\n    bmId: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      dialogVisible: false,\n      tableData: [],\n      headerList: [\n        {\n          label: this.$t('backMarginAction'),\n          width: '180px'\n        },\n        {\n          label: this.$t('backMarginStatusAfterOperate'),\n          width: ''\n        },\n        {\n          label: this.$t('backMarginOperator'),\n          width: '180px'\n        },\n        {\n          label: this.$t('backMarginReason'),\n          width: ''\n        }\n      ],\n      tableColumns: [\n        {\n          label: this.$t('backMarginModifyField'),\n          prop: 'field',\n          width: ''\n        },\n        {\n          label: this.$t('backMarginSkuID'),\n          prop: 'sku_id',\n          width: ''\n        },\n        {\n          label: this.$t('backMarginBefore'),\n          prop: 'before',\n          width: ''\n        },\n        {\n          label: this.$t('backMarginAfter'),\n          prop: 'after',\n          width: ''\n        }\n      ],\n      total: 0,\n      pager: {\n        count: 10,\n        page_no: 1\n      },\n      loading: false,\n      moment\n    };\n  },\n  watch: {\n    visible(nv) {\n      this.dialogVisible = nv;\n      if (nv) {\n        this.getActionLog();\n      }\n    }\n  },\n  mounted() {\n    this.dialogVisible = this.visible;\n    this.getActionLog();\n  },\n  methods: {\n    onClose() {\n      this.$emit('close');\n    },\n    expend(row, index) {\n      row.expansion = !row.expansion;\n      this.tableData.splice(index, 1, row);\n    },\n    handleChangePage(page_no) {\n      this.pager.page_no = page_no;\n      this.getActionLog();\n    },\n    handleSizeChange(count) {\n      this.pager.count = count;\n      this.pager.page_no = 1;\n      this.getActionLog();\n    },\n    // 查询数据\n    async getActionLog() {\n      try {\n        const params = {\n          ...this.pager,\n          bm_id: this.bmId\n        };\n        // TODO 查询成功处理\n        this.loading = true;\n        const res = await getActionLog(params);\n        commonFetchAction(res, (data) => {\n          this.tableData = data.change_list || [];\n          this.tableData.forEach(item => {\n            item.expansion = false;\n          });\n          this.total = data.total || 0;\n          this.loading = false;\n        });\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n        this.loading = false;\n      }\n    },\n\n    status2Label(value) {\n      return (BackMarginStatusList.find(item => item.value === value) || {}).label;\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import \"~@/styles/common.scss\"; // ~@ = @ = 'src' webpack alias path\n.pms-dialog {\n  padding-bottom: 36px;\n  .el-dialog__body {\n    padding: 14px 24px 16px;\n  }\n  .table-header{\n    width: 100%;\n    height: 54px;\n    background: #F5F5F5;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    &-item{\n      font-family: Helvetica-Bold;\n      font-size: 12px;\n      color: rgba(0,0,0,0.85);\n      line-height: 22px;\n      min-width: 49px;\n    }\n  }\n  .ml-34{\n    margin-left: 34px;\n  }\n  .content-wrapper{\n    padding-left: 16px;\n    .content-item{\n      border-bottom: 1px solid #E8E8E8;\n      .base-info{\n        display: flex;\n        align-items: center;\n        font-family: Helvetica;\n        font-size: 14px;\n        color: #333333;\n        text-align: left;\n        height: 68px;\n        line-height: 22px;\n        &-item{\n          width: 200px;\n          &:last-child{\n            margin-right: 0px;\n          }\n          &.other-width {\n            width: 180px;\n          }\n        }\n        .ml-30{\n          margin-left: 30px;\n        }\n      }\n      .expend-action-icon{\n        margin-right: 6px;\n        width: 14px;\n        i{\n          cursor: pointer;\n          font-size: 12px;\n          color: #3D6ED1;\n        }\n      }\n      .expend-info{\n        padding: 0px 24px 16px 30px;\n        .el-table th{\n          font-size: 12px;\n          font-family: Helvetica-Bold;\n          font-weight: 600;\n          background: #EBEBEB;\n          color: rgba(51,51,51,0.80);\n        }\n        .el-table {\n          .pl30{\n            padding-left: 30px;\n          }\n          td{\n            .cell{\n              font-size: 12px;\n              color: #333333;\n            }\n          }\n        }\n      }\n    }\n  }\n  .pagination-center{\n    display: flex;\n    justify-content: center;\n    margin-top: 20px;\n  }\n  .empty-wrapper{\n    height: 68px;\n    line-height: 68px;\n    text-align: center;\n    margin-bottom: 16px;\n    border-bottom: 1px solid #E8E8E8;\n  }\n  .user-footer-btn{\n    margin-top: 4px;\n  }\n\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/backMargin/detail/actionBtn.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/backMargin/detail/calculatedHistoryComp.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/backMargin/detail/index.vue","messages":[{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":77,"column":18,"nodeType":"ThisExpression","endLine":77,"endColumn":22},{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"backMarginView\" is not PascalCase.","line":189,"column":9,"nodeType":"Literal","endLine":189,"endColumn":25,"fix":{"range":[6296,6310],"text":"BackMarginView"}}],"errorCount":2,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div v-if=\"showView\" class=\"back-margin-create pms-new-ui\">\n    <el-container>\n      <el-header class=\"back-margin-header\">\n        <section class=\"left-info\">\n          <i class=\"back-icon sprite-btn-back\" @click=\"goBack\"></i>\n          <span class=\"back-margin-title\">{{ basicForm.bm_id || $route.params.id || '' }}</span>\n          <span v-if=\"isDetail\" class=\"back-margin-status\">{{ getFormatterInfo(basicForm, statusSchema) }}</span>\n        </section>\n        <action-btn\n          v-if=\"isDetail\"\n          :actionLoading=\"actionLoading\"\n          :editing=\"editing\"\n          :canApprove=\"canApprove\"\n          :canModify=\"canModify\"\n          :canConfirm=\"canConfirm\"\n          :canExport=\"canExport\"\n          @approve=\"approveBackMargin\"\n          @edit=\"editBackMargin\"\n          @cancel=\"cancelEditBackMargin\"\n          :isRejectTag=\"rejectList.length > 0\"\n          @submitReject=\"submitReject\"\n          @confirm=\"confirmBackMargin\"\n          @export=\"exportBackMargin\"\n          @confirmModify=\"confirmModifyBackMargin\"\n          :hasActionLog=\"hasActionLog\"\n          @viewActionLog=\"viewActionLog\"\n          :btnList=\"btnList\"\n        >\n        </action-btn>\n      </el-header>\n      <el-main>\n        <el-row v-if=\"isShowComment\" class=\"comment-row\">\n          <comments :purchaseRequest=\"commentInfo\"></comments>\n        </el-row>\n        <el-form class=\"bm-basic-form\" ref=\"BMBasicForm\" :model=\"basicForm\" label-width=\"240px\">\n          <div class=\"group-title group-title-top\">{{ $t('purchaseOrder.basicInformation') }}</div>\n          <el-row class=\"pms-ui basic-form\">\n            <el-col class=\"form-col\" v-for=\"item in basicInfoSchema\" :key=\"item.field\" :span=\"12\">\n              <el-form-item :required=\"item.required\" :prop=\"item.field\" :label=\"getLabel(item)\">\n                <span class=\"item-gap\">:</span>\n                <section class=\"item-info\">\n                  <pms-form-item @input=\"modifyForm\" :renderData=\"{ schema: item, form: basicForm }\"></pms-form-item>\n                </section>\n              </el-form-item>\n            </el-col>\n          </el-row>\n          <div class=\"group-title\">{{ $t('backmarginInformation') }}</div>\n          <el-row class=\"pms-ui basic-form\">\n            <el-col class=\"form-col\" v-for=\"item in backMarginSchema\" :key=\"item.field\" :span=\"12\">\n              <el-form-item :required=\"item.required\" :prop=\"item.field\" :label=\"getLabel(item)\">\n                <span class=\"item-gap\">:</span>\n                <section class=\"item-info\">\n                  <pms-form-item @input=\"modifyForm\" :renderData=\"{ schema: item, form: basicForm }\"></pms-form-item>\n                </section>\n              </el-form-item>\n            </el-col>\n          </el-row>\n        </el-form>\n\n        <p class=\"group-title\">{{ $t('backMargin.requestDetail') }}</p>\n        <request-detail\n          ref=\"skuDetail\"\n          :rejectList=\"rejectList\"\n          :canReject=\"canReject\"\n          :basicForm=\"basicForm\"\n          :editingType=\"editingType\"\n          :tierArr=\"tierArr\"\n          @rejectSku=\"rejectSku\"\n          @editAmountAll=\"editAmountAll\"\n        ></request-detail>\n\n        <p class=\"group-title\">{{ $t('Attachment') }}</p>\n        <file-list-attachment\n          ref=\"attachment\"\n          width=\"100%\"\n          :mode=\"this.editingType === 'amount' ? 'edit' : 'view'\"\n          :limit=\"fileLimit\"\n          @setAttachmentList=\"list => (attachmentList = list)\"\n        ></file-list-attachment>\n\n        <section v-if=\"bmConfig.basic_info_config.cf_agreement_option !== 2\">\n          <p class=\"group-title\">{{ $t('CFAgreement') }}</p>\n          <file-list-attachment ref=\"cf_attachment\" width=\"100%\" mode=\"view\"></file-list-attachment>\n        </section>\n\n        <calculated-history v-if=\"isDetail\" :currency=\"currency\" :tableData=\"calculatedHistorys\" />\n      </el-main>\n    </el-container>\n    <action-log\n      v-if=\"isDetail\"\n      :visible=\"actionLogVisible\"\n      :bm-id=\"$route.params.id\"\n      @close=\"() => (actionLogVisible = false)\"\n    ></action-log>\n    <overlapDialog\n      v-if=\"isShowOverlap\"\n      :bm_id=\"basicForm.bm_id\"\n      @close=\"isShowOverlap = false\"\n      @reflash=\"getBMDetail\"\n    ></overlapDialog>\n  </div>\n</template>\n\n<script>\nimport moment from 'moment';\nimport {\n  approveBackMargin,\n  getBackMarginDetail,\n  confirmBackMarginValue,\n  modifyBackMarginValue,\n  exportBackMargin,\n  exportBackMarginPDF,\n  getBackMarginConfig,\n  modifyEndDate,\n  modifyAmount,\n  modifyAmountAll,\n  getCalculateHistoryDetail\n} from '@/api/backMargin';\nimport { BackMarginStatusList } from '@/utils/constant';\nimport { formatValue, formatParams } from '@/utils/formatParams';\nimport { downloadBlobFile } from '@/utils/downloadFile';\nimport PMSFormItem from '@/components/BaseItem/formItem';\nimport FileListAttachment from '@/components/fileListAttachment';\n\nimport { parseBackMargin, formatFiles } from '../common/parseBackMargin';\nimport { getSchema } from '../common/fieldConfig';\nimport RequestDetail from './skuDetail';\nimport ActionBtn from './actionBtn';\nimport CalculatedHistory from './calculatedHistoryComp';\nimport ActionLog from './ActionLog';\nimport Comments from '@/components/Comments';\nimport overlapDialog from './overlapDialog';\n\n// edit 查看逻辑[done]\n// 后续流转状态中表单编辑【done】\n// - sku【done】\n// - 表单[done]\n// - 接口联调[done]\n// 没有计算为/，有计算为0[done]\n\n// sku add all[done]\n// sku 翻页[本期不做]\n// sku 快捷操作[done]\n\nconst schemaReadOnlyMap = {\n  select: 'enum',\n  input: 'text',\n  'input-number': 'text',\n  'date-picker': 'text',\n  autocomplete: 'text'\n};\n\nconst GET_DETAIL_API = {\n  backMarginDetail: getBackMarginDetail,\n  backMarginCalculateHistory: getCalculateHistoryDetail\n};\n\nconst initData = {\n  showView: true, // 用于刷新页面\n  // viewType: '',\n  actionLoading: false,\n  approvalList: [],\n  bmConfig: {\n    basic_info_config: {},\n    approval_rule_config: {}\n  },\n  calculatedHistorys: [],\n  // lastConfirmValue: 0,\n  editing: false,\n  editingType: '',\n  basicForm: {},\n  rejectList: [],\n  skuForm: {},\n  statusSchema: { field: 'bm_status', type: 'enum', options: BackMarginStatusList },\n  actionLogVisible: false,\n  delinked_sku_ids: [],\n  attachmentList: [],\n  cf_agreement_list: [],\n  fileLimit: {\n    size: 5,\n    count: 3\n  },\n  tierArr: [],\n  isShowOverlap: false\n};\n\nexport default {\n  name: 'backMarginView',\n  data() {\n    return { ...initData };\n  },\n  components: {\n    ActionBtn,\n    'pms-form-item': PMSFormItem,\n    RequestDetail,\n    CalculatedHistory,\n    ActionLog,\n    FileListAttachment,\n    Comments,\n    overlapDialog\n  },\n  watch: {\n    '$route.name'() {\n      this.showView = false;\n      this.$nextTick(() => {\n        this.init();\n      });\n    }\n  },\n  methods: {\n    onViewOverlap() {\n      this.isShowOverlap = true;\n    },\n    init() {\n      const data = { ...initData };\n      Object.keys(initData).forEach(key => {\n        this[key] = data[key];\n      });\n      this.getBMDetail();\n    },\n    // setSkus(list) {\n    //   this.$set(this.skuForm, 'skuList', list);\n    // },\n    renderArray(schema, form, h) {\n      return Array.isArray(form[schema.field]) ? form[schema.field].join(',') : '/';\n    },\n    getLabel(item) {\n      return item.label + (item.hasCurrency && this.currency ? `(${this.currency})` : '');\n    },\n    goBack() {\n      this.$router.go(-1);\n    },\n    getBackMarginConfig(region) {\n      if (region) {\n        getBackMarginConfig({ region })\n          .then(resp => {\n            if (resp.retcode !== 0) {\n              this.$message.error(resp.info);\n            } else {\n              this.bmConfig = resp.data || {};\n            }\n          })\n          .catch(() => {\n            this.$message.error('Get Back Margin Config Failed!');\n          });\n      }\n    },\n    rejectSku(list = []) {\n      list.forEach(item => {\n        if (!this.rejectList.find(sku => sku.sku_id === item.sku_id)) {\n          this.rejectList.push(item);\n        }\n      });\n    },\n    getBMDetail() {\n      const bmID = this.$route.params.id;\n      this.actionLoading = true;\n      GET_DETAIL_API[this.viewType]({ bm_id: bmID })\n        .then(resp => {\n          this.actionLoading = false;\n          if (resp.retcode !== 0) {\n            this.$message.error(resp.info);\n          } else {\n            const bm = parseBackMargin(resp.data.back_margin_request || resp.data.back_margin_request_history);\n\n            this.attachmentList = bm.attachmentList;\n            this.cf_agreement_list = bm.cf_agreement_list;\n            this.$nextTick(() => {\n              this.$refs['attachment'].initAttachmentList(this.attachmentList);\n              this.$refs['cf_attachment'].initAttachmentList(this.cf_agreement_list);\n            });\n\n            // this.skuForm = {\n            //   skuList: bm.skuList,\n            //   tierInfo: bm.tierInfo\n            // };\n            this.tierArr = bm.tier_info;\n            if (bm.basicForm.bm_status === 5 && bm.delinked_sku_ids && bm.delinked_sku_ids.length) {\n              const msg = this.$t('backMarginDelinkedMsg', {\n                delinkedSkuIds: bm.delinked_sku_ids.join(','),\n                supplierId: bm.basicForm.supplier_id\n              });\n              this.$alert(msg, 'Attention', {\n                confirmButtonText: 'OK'\n              });\n            }\n            this.calculatedHistorys = bm.calculated_history_list;\n            // this.lastConfirmValue = this.calculatedHistorys.length\n            //   ? this.calculatedHistorys[0].confirmed_total_value || 0\n            //   : 0;\n            this.basicForm = bm.basicForm;\n            this.basicForm.canApprove = bm.can_approve;\n            this.approvalList = bm.approval_list;\n            this.rejectList = [];\n            this.getBackMarginConfig(bm.basicForm.bm_country);\n          }\n        })\n        .catch(() => {\n          this.actionLoading = false;\n        });\n    },\n    exportPDF() {\n      this.exportBackMargin('pdf');\n    },\n    exportBackMargin(type = 'excel') {\n      const params = { type: 1, bm_ids: [this.$route.params.id] };\n      this.actionLoading = true;\n      (type === 'excel' ? exportBackMargin(params) : exportBackMarginPDF({ bm_id: this.$route.params.id }))\n        .then(resp => {\n          this.actionLoading = false;\n          if (resp.type === 'application/json') {\n            const reader = new FileReader();\n            reader.onloadend = () => {\n              const result = JSON.parse(reader.result);\n              if (result.retcode !== 0) {\n                this.$message.error(result.info);\n              }\n            };\n            reader.readAsText(resp);\n          } else {\n            downloadBlobFile(\n              resp,\n              `${moment().format('YYYYMMDDHHmmss')}_back_margin_file.${type === 'pdf' ? 'pdf' : 'xls'}`\n            );\n          }\n        })\n        .catch(() => {\n          this.$message.error('Failed');\n          this.actionLoading = false;\n        });\n    },\n    submitReject() {\n      this.approveBackMargin(\n        'approve',\n        this.rejectList.map(item => item.sku_id)\n      );\n    },\n    approveBackMargin(type, idList) {\n      const typeMap = { approve: 0, reject: 1 };\n      const action = typeMap[type];\n      const title = action === 1 ? this.$t('purchaseRequest.reason') : this.$t('purchaseRequest.comment');\n      this.$prompt('', title, {\n        confirmButtonText: this.$t('purchaseRequest.confirm'),\n        cancelButtonText: this.$t('purchaseRequest.close'),\n        inputValidator: value => {\n          if (action === 1 && (!value || value.length <= 0)) return `${title} is required`;\n          return !value || value.length <= 2048 ? true : `${title} cannot be longer than 2048 characters`;\n        }\n      })\n        .then(({ value }) => {\n          // bm_status: 2|6对应为pending status, approve_type对应为1|2\n          const params = formatParams({\n            bm_id: this.basicForm.bm_id,\n            action,\n            remark: value || '',\n            approve_type: Math.ceil(this.basicForm.bm_status / 3),\n            rejected_sku_id_list: idList\n          });\n          this.actionLoading = true;\n          approveBackMargin(params)\n            .then(resp => {\n              if (resp.retcode !== 0) {\n                this.$message.error(resp.info);\n              } else {\n                this.$message.success('Success');\n                this.getBMDetail();\n              }\n              this.actionLoading = false;\n              this.isShowOverlap = false;\n            })\n            .catch(() => {\n              this.$message.error('Failed');\n              this.actionLoading = false;\n            });\n        })\n        .catch(() => {});\n    },\n    editBackMargin() {\n      this.basicForm.confirmed_charge_value = this.basicForm.total_charge_value;\n      this.editing = true;\n    },\n    modifyForm(schema, value) {\n      this.$set(this.basicForm, schema.field, value);\n    },\n    cancelEditBackMargin() {\n      this.editing = false;\n      this.editingType = '';\n      this.getBMDetail();\n    },\n    confirmBackMargin() {\n      if (this.bmConfig.basic_info_config.payment_time_option === 1 && !this.basicForm.payment_time_str) {\n        return this.$message.error('Supplier Payment Time is required');\n      }\n      this.actionLoading = true;\n      const params = {\n        bm_id: this.$route.params.id,\n        supplier_payment_time: this.basicForm.payment_time_str || ''\n      };\n      confirmBackMarginValue(formatParams(params))\n        .then(resp => {\n          this.actionLoading = false;\n          if (resp.retcode !== 0) {\n            this.$message.error(resp.info);\n          } else {\n            this.$message.success('Success');\n            this.getBMDetail();\n          }\n        })\n        .catch(() => {\n          this.$message.error('Failed');\n          this.actionLoading = false;\n        });\n    },\n    changeEdit(type) {\n      this.editingType = type;\n    },\n    async editEndDate() {\n      const params = {\n        end_date_str: this.basicForm.end_date_str,\n        bm_id: this.basicForm.bm_id\n      };\n      try {\n        const resp = await modifyEndDate(params);\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.$message.success('Success');\n          this.cancelEditBackMargin();\n        }\n      } catch (e) {\n        this.$message.error(e.message);\n      }\n    },\n    validateAmount(list) {\n      let errTips = '';\n      list.some(item => {\n        // 如果start date为空，则不作任何校验\n        if (!item.modification_start_date_str) return false;\n\n        if (moment(item.modification_end_date_str).isBefore(item.modification_start_date_str)) {\n          errTips = 'Modification End Date not allowed earlier than Modification Start Date';\n          return true;\n        }\n\n        // 如果modification_start_date_str!=空，则均必填(允许0值)\n        return ['modification_end_date_str', 'modification_amount', 'modification_percentage'].some(key => {\n          if (!item[key] && item[key] !== 0) {\n            errTips =\n              'If Modification Start Date is non-empty, Modification End Date/Modification BM Amount/Modification BM Percentage are required';\n            return true;\n          }\n          return false;\n        });\n      });\n      if (errTips) {\n        throw new Error(errTips);\n      }\n    },\n    async editAmountAll(data) {\n      const amount_detail = {};\n      Object.keys(data).forEach(key => {\n        if (data[key]) amount_detail[key] = data[key];\n      });\n      const params = {\n        bm_id: this.basicForm.bm_id,\n        amount_detail: amount_detail,\n        remark: this.basicForm.remark,\n        attachment_list: formatFiles(this.attachmentList)\n      };\n\n      try {\n        const resp = await modifyAmountAll(params);\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.$message.success('Success');\n          this.cancelEditBackMargin();\n        }\n      } catch (e) {\n        this.$message.error(e.message);\n      }\n    },\n    async editAmount() {\n      const skuData = this.$refs['skuDetail'].cacheSkuList || {};\n      const sku_list = Object.keys(skuData).map(sku_id => {\n        const item = skuData[sku_id];\n        const data = {};\n        [\n          'sku_id',\n          'sku_type',\n          'virtual_sku_id',\n          'modification_start_date_str',\n          'modification_end_date_str',\n          'modification_amount',\n          'modification_percentage'\n        ].forEach(key => {\n          if (item[key] !== null && item[key] !== undefined) data[key] = item[key];\n        });\n        return data;\n      });\n\n      const params = {\n        bm_id: this.basicForm.bm_id,\n        sku_list,\n        remark: this.basicForm.remark,\n        attachment_list: formatFiles(this.attachmentList)\n      };\n      try {\n        await this.validateAmount(params.sku_list);\n        const resp = await modifyAmount(params);\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.$message.success('Success');\n          this.cancelEditBackMargin();\n        }\n      } catch (e) {\n        this.$message.error(e.message);\n      }\n    },\n    submit() {\n      if (this.actionLoading) return;\n      switch (this.editingType) {\n        case 'endDate':\n          this.editEndDate();\n          break;\n        case 'amount':\n          this.editAmount();\n          break;\n        default:\n          break;\n      }\n    },\n    confirmModifyBackMargin() {\n      const confirmedValue = this.basicForm.confirmed_charge_value;\n      const calculatedValue = this.basicForm.total_charge_value;\n      if (confirmedValue === calculatedValue) {\n        return this.$message.error('Confirmed Total Value should not be equal than Calculated Total Value');\n      }\n      if (!confirmedValue && confirmedValue !== 0) {\n        return this.$message.error('Confirmed Total Value is required');\n      }\n      if (this.bmConfig.basic_info_config.payment_time_option === 1 && !this.basicForm.payment_time_str) {\n        return this.$message.error('Supplier Payment Time is required');\n      }\n      this.actionLoading = true;\n      const params = {\n        attachment_list: formatFiles(this.attachmentList),\n        basic_info: {\n          bm_id: this.$route.params.id,\n          confirmed_charge_value: confirmedValue,\n          remark: this.basicForm.remark\n        }\n      };\n      if (this.basicForm.payment_time_str) {\n        params.basic_info.supplier_payment_time = this.basicForm.payment_time_str;\n      }\n      modifyBackMarginValue(params)\n        .then(resp => {\n          this.actionLoading = false;\n          if (resp.retcode !== 0) {\n            this.$message.error(resp.info);\n          } else {\n            this.$message.success('Success');\n            this.editing = false;\n            this.getBMDetail();\n          }\n        })\n        .catch(() => {\n          this.$message.error('Failed');\n          this.actionLoading = false;\n        });\n    },\n    getFormatterInfo(form, schema) {\n      const value = form[schema.field];\n      if (schema.type === 'string' || schema.type === 'date-picker') {\n        return value || '';\n      } else if (schema.type === 'enum') {\n        const option = (schema.options || []).find(option => option.value === value) || {};\n        return option.label || '';\n      } else if (schema.type === 'number') {\n        return `${formatValue(value || 0)} ${schema.unit ? this.currency : ''}`;\n      } else {\n        return '/';\n      }\n    },\n    // changeConfirmValue(value) {\n    //   this.basicForm.pending_claim_value = Number(value || 0) - Number(this.lastConfirmValue);\n    // },\n    viewActionLog() {\n      this.actionLogVisible = true;\n    }\n  },\n  computed: {\n    viewType() {\n      return this.$route.name;\n    },\n    isDetail() {\n      return this.viewType === 'backMarginDetail';\n    },\n    isShowComment() {\n      return this.viewType === 'backMarginCalculateHistory';\n    },\n    commentInfo() {\n      return {\n        mtime: this.basicForm.ctime,\n        remark: '',\n        approvalList: (this.approvalList || []).map(item => ({ ...item, by: item.operator, date: item.ctime * 1000 })),\n        requester: this.basicForm.requester,\n        actionRemarkTitle: 'Request'\n      };\n    },\n    btnList() {\n      let list = [];\n\n      if ([5, 8].includes(this.basicForm.bm_status)) {\n        // 导出PDF\n        list.push({\n          label: 'commonExportPDF',\n          onClick: this.exportPDF\n        });\n      }\n\n      if (this.basicForm.bm_status === 11) {\n        // 查看计算校验结果\n        list.push({\n          label: 'backMarginOverlapConfirmation',\n          onClick: this.onViewOverlap\n        });\n      }\n\n      if (this.basicForm.requester === this.$store.getters.email) {\n        // 只有发起者才允许编辑\n        if (!this.editingType) {\n          if (this.basicForm.bm_status === 4) {\n            list.push({\n              label: 'backMargin.ModificationEndDate',\n              onClick: this.changeEdit.bind(null, 'endDate')\n            });\n\n            // if ([1, 2].includes(this.basicForm.bm_type)) {\n            //   list.push({\n            //     label: 'backMargin.ModificationAmount',\n            //     onClick: this.changeEdit.bind(null, 'amount')\n            //   });\n            // }\n          }\n        } else {\n          // 编辑状态下，只显示candel和submit\n          list = [\n            {\n              label: 'commonSave',\n              onClick: this.submit\n            },\n            {\n              label: 'commonCancel',\n              onClick: this.cancelEditBackMargin\n            }\n          ];\n        }\n      }\n      return list;\n    },\n    basicInfoSchema() {\n      const config = [\n        'bm_id',\n        'bm_name',\n        'supplier_id',\n        'bm_type',\n        'bm_country',\n        'supplier_name',\n        'campaign_type',\n        {\n          field: 'with_holding_tax',\n          isHidden: basicForm => !basicForm.with_holding_tax\n        }\n      ];\n\n      const list = getSchema(config, null, this.basicForm);\n      return list.map(item => {\n        if (schemaReadOnlyMap[item.type]) item.type = schemaReadOnlyMap[item.type];\n        return item;\n      });\n    },\n    backMarginSchema() {\n      const config = [\n        'start_date_str',\n        {\n          field: 'end_date_str',\n          showEdit: () => {\n            return this.basicForm.bm_status === 4 && this.editingType === 'endDate';\n          }\n        },\n        'fixed_support_amount',\n        'billing_type',\n        'is_shared_target',\n        'min_target_qty',\n        {\n          field: 'remark',\n          showEdit: () => {\n            return this.editingType === 'amount' || ([5, 7].includes(this.basicForm.bm_status) && this.editing);\n          }\n        },\n        'payment_method',\n        'payment_bank_account',\n        'contract_id',\n        {\n          field: 'payment_time_str',\n          showEdit: () => {\n            return [5, 7].includes(this.basicForm.bm_status) && this.editing;\n          }\n        },\n        'shop_id_list',\n        'minimum_total_inbound_value',\n        'calculated_percentage',\n        'total_max_cap_value',\n        'minimum_spending',\n        'is_full_subsidy',\n        'shopee_cap',\n        'max_cap_for_brand_subsidy',\n        'request_tag',\n        'calculated_tag',\n        'calculated_time_str',\n        'total_charge_value',\n        'pending_claim_value',\n        {\n          field: 'confirmed_charge_value',\n          showEdit: () => {\n            return [5, 7].includes(this.basicForm.bm_status) && this.editing;\n          }\n        },\n        'total_value_after_wht',\n        'calculated_sku_scope'\n      ];\n\n      const list = getSchema(config, null, this.basicForm);\n\n      return list.map(item => {\n        if (item.showEdit && item.showEdit()) return item;\n        if (schemaReadOnlyMap[item.type]) item.type = schemaReadOnlyMap[item.type];\n        if (item.props && item.props.multiple) {\n          item.render = this.renderArray;\n        }\n        return item;\n      });\n    },\n    canApprove() {\n      // return true;\n      return this.basicForm.canApprove && [2, 6].includes(this.basicForm.bm_status); // 2,6代表待审批状态\n    },\n    canReject() {\n      // return true;\n      const canReject =\n        this.bmConfig.approval_rule_config.allowed_partially_approved && this.basicForm.is_shared_target === 1;\n      return this.canApprove && canReject;\n    },\n    canModify() {\n      return this.basicForm.requester === this.$store.getters.email && [5, 7].includes(this.basicForm.bm_status); // 5,7代表可修改\n    },\n    canConfirm() {\n      return this.canModify && this.basicForm.bm_status === 5; // 5代表可确认\n    },\n    canExport() {\n      return this.basicForm.bm_status === 8;\n    },\n    currency() {\n      return this.$store.getters.currencyMap[this.basicForm.bm_country];\n    },\n    hasActionLog() {\n      return this.basicForm.bm_status !== 1;\n    }\n  },\n  created() {\n    this.getBMDetail();\n  }\n};\n</script>\n<style lang=\"scss\">\n.back-margin-create {\n  .highLight-span {\n    background: #ffed10;\n    padding: 0 2px;\n    color: #79770d;\n    display: inline-block;\n    border-radius: 2px;\n    line-height: 25px;\n    .el-input__inner {\n      background-color: #ffed10;\n    }\n  }\n  &.pms-ui .el-col .el-form-item {\n    height: auto;\n  }\n  &.pms-ui .el-input__inner,\n  &.pms-ui .el-range-input {\n    background-color: #fff;\n    border-radius: 4px;\n  }\n  .el-date-editor.el-input,\n  .el-date-editor.el-input__inner {\n    width: 200px;\n  }\n}\n.comment-row {\n  .comments {\n    max-width: initial;\n    padding: 16px;\n    border-radius: 4px;\n  }\n}\n</style>\n<style lang=\"scss\" scoped>\n.back-margin-create {\n  .back-margin-header {\n    position: relative;\n    .left-info {\n      position: absolute;\n      top: 0;\n      left: 20px;\n      min-width: 20%;\n      padding-left: 5px;\n      height: 60px;\n      line-height: 60px;\n      border-bottom: 2px solid #f0f2f5;\n    }\n    .back-icon {\n      display: inline-block;\n      margin-right: 10px;\n      transform: scale(1.2);\n    }\n    .back-margin-title {\n      color: rgb(215, 215, 215);\n      font-size: 26px;\n      margin-right: 20px;\n    }\n    .back-margin-status {\n      color: rgb(244, 171, 97);\n    }\n  }\n  .item-gap {\n    display: inline-block;\n    margin-left: 8px;\n    vertical-align: top;\n  }\n  .item-info {\n    display: inline-block;\n    max-width: 300px;\n    margin-left: 20px;\n    word-break: break-all;\n    vertical-align: middle;\n  }\n  .group-title {\n    margin: 30px 0 20px;\n    font-size: 22px;\n    // color: rgba(0, 0, 0, 0.6);\n    font-weight: normal;\n  }\n  .basic-form {\n    .form-col {\n      min-height: 60px;\n      line-height: 60px;\n      overflow: hidden;\n    }\n  }\n  .info-view {\n    display: flex;\n    width: 100%;\n    .left-view {\n      flex: 3;\n    }\n    .right-view {\n      flex: 2;\n      .reviewer-item {\n        height: 36px;\n        line-height: 36px;\n        .el-form-item__label {\n          line-height: 36px;\n        }\n        .approve-viewer {\n          margin-left: 10px;\n        }\n      }\n      .total-form {\n        margin-top: 20px;\n        .el-input-number {\n          max-width: 160px;\n        }\n      }\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/backMargin/detail/overlapDialog.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"overlapDialog\" is not PascalCase.","line":79,"column":9,"nodeType":"Literal","endLine":79,"endColumn":24,"fix":{"range":[2693,2706],"text":"OverlapDialog"}},{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"bm_id\" is not in camelCase.","line":85,"column":5,"nodeType":"Property","endLine":85,"endColumn":18}],"errorCount":2,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <el-dialog\n    class=\"overlap-dialog pms-new-ui\"\n    :title=\"$t('backMarginOverlapPeriodSKUConfirmation')\"\n    :visible=\"true\"\n    width=\"840px\"\n    @close=\"emitEvent('close')\"\n  >\n    <section\n      class=\"overlap-content\"\n      v-loading=\"isLoading\"\n      element-loading-text=\"BM overlap checking,please wait a min.\"\n    >\n      <div v-if=\"isShowNoOverlap\" class=\"no-data-box\">\n        <i class=\"el-icon-circle-check\"></i>\n        <p>No overlap,please confirm your operation.</p>\n      </div>\n      <listSearch :components=\"searchSchema\" :searchForm=\"searchForm\" @search=\"onSearch\"></listSearch>\n\n      <section class=\"option-box\">\n        <el-button class=\"white-blue\" :loading=\"isLoading\" @click=\"onExport\">Export</el-button>\n        <el-button class=\"white-blue\" :loading=\"isLoading\" @click=\"onClear\">Clear</el-button>\n        <el-button :loading=\"isLoading\" @click=\"onSearch\">Search</el-button>\n      </section>\n\n      <section class=\"table-content\">\n        <el-table ref=\"addSkuTable\" class=\"br-sku-table\" :data=\"skuList\" height=\"300px\">\n          <el-table-column\n            v-for=\"item in tableSchema\"\n            :width=\"item.width\"\n            :key=\"item.field\"\n            :prop=\"item.field\"\n            :label=\"$t(item.label)\"\n          >\n            <template slot-scope=\"scope\">\n              <pms-form-item\n                :renderData=\"{\n                  schema: item,\n                  form: scope.row,\n                  index: scope.$index\n                }\"\n              ></pms-form-item>\n            </template>\n          </el-table-column>\n        </el-table>\n        <el-pagination\n          class=\"table-pagination\"\n          :current-page=\"pager.pageno\"\n          :page-sizes=\"[10, 20, 50, 100]\"\n          :page-size=\"pager.count\"\n          :total.sync=\"pager.total\"\n          background\n          layout=\"sizes, prev, pager, next\"\n          @current-change=\"handleCurrentChange\"\n          @size-change=\"handleSizeChange\"\n        ></el-pagination>\n      </section>\n    </section>\n    <section class=\"option-box\">\n      <el-button class=\"white-grey\" @click=\"emitEvent('close')\">Hold On</el-button>\n      <el-button class=\"white-grey\" @click=\"onReject()\" :loading=\"isLoading\">Reject</el-button>\n      <el-button @click=\"onConfirm()\" :loading=\"isLoading\">Confirm</el-button>\n    </section>\n  </el-dialog>\n</template>\n<script>\nimport listSearch from '@/components/common/listSearch';\nimport { getOverlapSku, exportOverlap, rejectOverlap, confirmOverlap } from '@/api/backMargin';\nimport PMSFormItem from '@/components/BaseItem/formItem';\nimport moment from 'moment';\n\nconst initPager = {\n  total: 0,\n  count: 10,\n  pageno: 1\n};\n\nexport default {\n  name: 'overlapDialog',\n  components: {\n    listSearch,\n    'pms-form-item': PMSFormItem\n  },\n  props: {\n    bm_id: String\n  },\n  data() {\n    return {\n      tableSchema: [\n        { field: 'sku_id', label: 'forecastSKUID' },\n        { field: 'overlap_bm_id', label: 'backMarginOverlapBMID' },\n        { field: 'overlap_period', label: 'backMarginOverlapPeriod' },\n        {\n          field: 'old_percentage',\n          label: 'backMarginOldPercentage',\n          width: '110px',\n          render: (schema, form) => {\n            return form[schema.field] + '%';\n          }\n        },\n        {\n          field: 'new_percentage',\n          label: 'backMarginNewPercentage',\n          width: '110px',\n          render: (schema, form, h, index) => {\n            return [\n              'span',\n              null,\n              [\n                form[schema.field] + '%',\n                form.new_percentage !== form.old_percentage &&\n                  h(\n                    'span',\n                    { class: form.new_percentage > form.old_percentage ? 'up-tips' : 'down-tips' },\n                    form.new_percentage > form.old_percentage ? '↑' : '↓'\n                  )\n              ]\n            ];\n          }\n        }\n      ].map(item => ({ type: 'text', ...item })),\n      pager: { ...initPager },\n      searchForm: {},\n      skuList: [],\n      isLoading: false,\n      isShowNoOverlap: false\n    };\n  },\n  created() {\n    this.getSkus();\n  },\n  computed: {\n    searchSchema() {\n      return [\n        {\n          name: 'listInput',\n          props: {\n            label: this.$t('forecastProductSKUID'),\n            field: 'sku_id'\n          }\n        },\n        {\n          name: 'listInput',\n          props: {\n            label: this.$t('backMarginBMID'),\n            field: 'overlap_bm_id'\n          }\n        },\n        {\n          name: 'listDatePicker',\n          isLongCol: true,\n          props: {\n            field: 'overlap_date',\n            label: this.$t('backMarginOverlapPeriod'),\n            dateType: 'daterange',\n            valueFormat: 'yyyy-MM-dd'\n          }\n        }\n      ];\n    }\n  },\n  methods: {\n    async onReject() {\n      const done = await this.ajax(rejectOverlap, { bm_id: this.bm_id });\n      if (done) {\n        this.$message.success('Success!');\n        this.$emit('reflash');\n        this.$emit('close');\n      }\n    },\n    async onConfirm() {\n      const done = await this.ajax(confirmOverlap, { bm_id: this.bm_id });\n      if (done) {\n        this.$message.success('Success!');\n        this.$emit('reflash');\n        this.$emit('close');\n      }\n    },\n    async ajax(api, data) {\n      this.isLoading = true;\n      try {\n        const resp = await api(data);\n        if (resp.retcode === 0) {\n          return resp.data;\n        }\n        throw new Error(resp.message);\n      } catch (e) {\n        this.$message.error(e.message || 'Interface Error');\n        return null;\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    emitEvent(name) {\n      this.$emit(name);\n    },\n    async onExport() {\n      await exportOverlap(\n        {\n          bm_id: this.bm_id\n        },\n        `bm_overlap_detail_${this.bm_id}_${moment().format('YYYYMMDD')}.xlsx`\n      );\n    },\n    onClear() {\n      this.searchForm = {};\n    },\n    onSearch() {\n      this.pager.pageno = 1;\n      this.getSkus();\n    },\n    async getSkus() {\n      const params = { ...this.searchForm, ...this.pager, bm_id: this.bm_id };\n      if (params.overlap_date && params.overlap_date.length === 2) {\n        params.overlap_start_date = params.overlap_date[0];\n        params.overlap_end_date = params.overlap_date[1];\n      }\n\n      try {\n        this.isLoading = true;\n        const res = await getOverlapSku(params);\n        if (res.retcode !== 0) {\n          throw new Error(res.message);\n        }\n        this.skuList = res.data.overlap_info_list || [];\n        this.pager.total = res.data.total;\n        // 没有重叠时出现提示\n        if (this.pager.pageno === 1 && this.isEmpty(this.searchForm)) {\n          this.isShowNoOverlap = !this.pager.total;\n        }\n      } catch (e) {\n        this.$message.error(e.message);\n      }\n\n      this.isLoading = false;\n    },\n    isEmpty(obj) {\n      return !Object.values(obj).some(value => value === false || !!value);\n    },\n    handleCurrentChange(value) {\n      this.pager.pageno = value;\n      this.getSkus();\n    },\n    handleSizeChange(value) {\n      this.pager.count = value;\n      this.pager.pageno = 1;\n      this.getSkus();\n    },\n    onChangeSearchForm() {\n      this.onSearch();\n    }\n  }\n};\n</script>\n<style lang=\"scss\">\n@import '~@/styles/variables.scss';\n\n.overlap-dialog {\n  .option-box {\n    padding: 14px 0;\n    text-align: right;\n  }\n  .tips-box {\n    margin-bottom: 8px;\n    display: flex;\n    .tips-left {\n      font-weight: bold;\n      flex: 1;\n    }\n  }\n  .table-pagination {\n    text-align: center;\n    padding-top: 20px;\n  }\n  .up-tips {\n    color: $green;\n  }\n  .down-tips {\n    color: $red;\n  }\n  .long-col {\n    .el-date-editor.el-input,\n    .el-date-editor.el-input__inner {\n      width: 100%;\n    }\n  }\n  .overlap-content {\n    position: relative;\n  }\n  .no-data-box {\n    background-color: #fff;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    z-index: 11;\n    text-align: center;\n    .el-icon-circle-check {\n      font-size: 100px;\n      color: $green;\n      margin: 150px 0 30px;\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/backMargin/detail/skuDetail.vue","messages":[{"ruleId":"vue/no-unused-components","severity":2,"message":"The \"pms-table-cell\" component has been registered but not used.","line":151,"column":5,"nodeType":"Property","endLine":151,"endColumn":35},{"ruleId":"vue/no-unused-components","severity":2,"message":"The \"pms-form-item\" component has been registered but not used.","line":152,"column":5,"nodeType":"Property","endLine":152,"endColumn":33}],"errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"bm-request-detail\">\n    <section v-if=\"canReject\" class=\"request-title\">\n      <div @click=\"massRejectSku\" class=\"list-btn mass-reject-btn\">\n        {{ $t('purchaseRequest.massReject') }}\n      </div>\n    </section>\n\n    <el-tabs v-if=\"showTabs\" v-model=\"skuTab\" class=\"add-sku-table-card\" type=\"card\">\n      <el-tab-pane v-for=\"tab in skuTabs\" :key=\"tab.name\" :label=\"tab.label\" :name=\"tab.name\"></el-tab-pane>\n    </el-tabs>\n    <section :class=\"showTabs && 'create-sku-table'\">\n      <sku-table\n        ref=\"skuTable\"\n        :basicForm=\"basicForm\"\n        :sku_type=\"skuType\"\n        :extendSchema=\"extendSchema\"\n        :isShowSelection=\"isShowSelection\"\n        :formatData=\"formatData\"\n        :selectable=\"selectable\"\n        :isDisableLazy=\"isDisableLazy\"\n        @selection-change=\"onSelecionChange\"\n        @input=\"onInputTable\"\n      >\n      </sku-table>\n    </section>\n\n    <!-- edit sku dialog -->\n    <discount\n      v-if=\"basicForm.bm_type === 9\"\n      :visible=\"showEditType === 9\"\n      :isEdit=\"false\"\n      :sku=\"currSku\"\n      :index=\"currSkuIndex\"\n      @close=\"hiddenEdit\"\n      @prevOne=\"editNextSku(-1, $event)\"\n      @nextOne=\"editNextSku(1, $event)\"\n    ></discount>\n\n    <sellout\n      v-if=\"[1, 2, 7].includes(basicForm.bm_type)\"\n      :visible=\"[1, 2, 7].includes(showEditType)\"\n      :isEdit=\"false\"\n      :sku=\"currSku\"\n      :index=\"currSkuIndex\"\n      :with_holding_tax=\"basicForm.with_holding_tax || 0\"\n      :billing_type=\"basicForm.billing_type\"\n      :tierArr=\"tierArr\"\n      :bm_type=\"basicForm.bm_type\"\n      @close=\"hiddenEdit\"\n      @prevOne=\"editNextSku(-1, $event)\"\n      @nextOne=\"editNextSku(1, $event)\"\n    ></sellout>\n\n    <sellingPrice\n      v-if=\"basicForm.bm_type === 8\"\n      :visible=\"showEditType === 8\"\n      :isEdit=\"false\"\n      :sku=\"currSku\"\n      :index=\"currSkuIndex\"\n      :with_holding_tax=\"basicForm.with_holding_tax || 0\"\n      @close=\"hiddenEdit\"\n      @prevOne=\"editNextSku(-1, $event)\"\n      @nextOne=\"editNextSku(1, $event)\"\n    ></sellingPrice>\n\n    <!-- stock on hand && other -->\n    <stockOnHand\n      v-if=\"[3, 5].includes(basicForm.bm_type)\"\n      :visible=\"[3, 5].includes(showEditType)\"\n      :bm_type=\"basicForm.bm_type\"\n      :isEdit=\"false\"\n      :sku=\"currSku\"\n      :index=\"currSkuIndex\"\n      :with_holding_tax=\"basicForm.with_holding_tax || 0\"\n      :billing_type=\"basicForm.billing_type\"\n      @close=\"hiddenEdit\"\n      @prevOne=\"editNextSku(-1, $event)\"\n      @nextOne=\"editNextSku(1, $event)\"\n    ></stockOnHand>\n  </div>\n</template>\n\n<script>\nimport PMSTableItem from '@/components/BaseItem/tableItem';\nimport PMSFormItem from '@/components/BaseItem/formItem';\nimport { BackMarginSkuTagList } from '@/utils/constant';\nimport moment from 'moment';\nimport { getSomeItem, SKU_TYPES, canEditSku } from '../common/util';\n\nimport SkuTable from '../common/newSkuTable';\n\nimport sellingPrice from '../dialog/sellingPrice';\nimport stockOnHand from '../dialog/stockOnHand';\nimport sellout from '../dialog/sellout';\nimport discount from '../dialog/discount';\n\nconst date_covered_statusMap = {\n  // 1: '/',\n  // 2: '',\n  3: 'Fully covered'\n};\n\nexport default {\n  data() {\n    return {\n      tierInfo: null,\n      skuList: [],\n      checkedRows: [],\n      moment,\n      pager: {\n        curr: 1,\n        size: 20,\n        total: 0\n      },\n      quickForm: {\n        modification_start_date_str: '',\n        modification_end_date_str: '',\n        modification_amount: '',\n        modification_percentage: ''\n      },\n      skuTabs: ['normal', 'virtual', 'physical'].map(name => ({ name, ...SKU_TYPES[name] })),\n      skuTab: 'normal',\n      currSku: {},\n      currSkuIndex: 0,\n      showEditType: '',\n      cacheSkuList: {}\n    };\n  },\n  props: {\n    basicForm: {\n      type: Object,\n      required: true,\n      default: () => ({})\n    },\n    editing: {\n      type: Boolean,\n      default: false\n    },\n    canReject: {\n      type: Boolean,\n      default: false\n    },\n    rejectList: {\n      type: Array\n    },\n    editingType: String,\n    tierArr: Array\n  },\n  components: {\n    'pms-table-cell': PMSTableItem,\n    'pms-form-item': PMSFormItem,\n    SkuTable,\n    sellingPrice,\n    stockOnHand,\n    sellout,\n    discount\n  },\n  computed: {\n    isDisableLazy() {\n      if (this.skuTab === 'physical' && this.isShowSelection) {\n        // 编辑physical时，禁止展开，避免element bug\n        return true;\n      }\n      return false;\n    },\n    isShowSelection() {\n      return this.canReject || this.editingType === 'amount';\n    },\n    extendSchema() {\n      return [\n        ...this.tableSchema,\n        {\n          field: 'action',\n          label: this.$t('commonAction'),\n          fixed: 'right',\n          render: (schema, row, h, index) => {\n            const btns = [];\n            if (canEditSku(row.sku_type, this.skuTab, this.basicForm.bm_type)) {\n              btns.push(\n                h(\n                  'el-button',\n                  {\n                    props: {\n                      type: 'text'\n                    },\n                    on: {\n                      click: this.showEditSku.bind(null, schema, row, index)\n                    }\n                  },\n                  this.$t('commonDetail')\n                )\n              );\n            }\n            // physical sku不能reject\n            if (this.canReject && row.sku_type !== 3) {\n              btns.push(\n                h(\n                  'el-button',\n                  {\n                    // 使用attrs设置class，el原生class会全部被覆盖\n                    class: 'color-red',\n                    props: {\n                      type: 'text',\n                      disabled: !this.getRowSelectable(row)\n                    },\n                    on: {\n                      click: this.rejectSku.bind(null, row)\n                    }\n                  },\n                  this.$t('purchaseRequest.reject')\n                )\n              );\n            }\n\n            return ['span', null, btns.length ? btns : '/'];\n          }\n        }\n      ];\n    },\n    skuType() {\n      if (this.showTabs) {\n        return SKU_TYPES[this.skuTab].type + '';\n      } else if ([8, 6, 9, 10].includes(this.basicForm.bm_type)) {\n        return '1,2';\n      }\n      return '1';\n    },\n    showTabs() {\n      return this.basicForm.bm_type === 2;\n    },\n    showSkus() {\n      const star = this.pager.size * (this.pager.curr - 1);\n      return getSomeItem(this.skuList, star, star + this.pager.size);\n    },\n    currency() {\n      return this.$store.getters.currencyMap[this.basicForm.bm_country];\n    },\n    tableSchema() {\n      return [\n        {\n          field: 'date_covered_status',\n          label: this.$t('backMarginBackMarginConfirmedModificationPeriod'),\n          width: '120px',\n          showTypes: [1, 2],\n          render(schema, row, h, index) {\n            if (row.date_covered_status && row.date_covered_status === 2) {\n              if (!row.effective_date || !row.effective_date.length) {\n                return '';\n              }\n              return [\n                'div',\n                null,\n                row.effective_date.map(item => {\n                  return h('p', null, item.start_date_str + ' - ' + item.end_date_str);\n                })\n              ];\n            }\n            return date_covered_statusMap[row.date_covered_status] || '/';\n          }\n        },\n        {\n          field: 'approval_tag',\n          label: this.$t('backMargin.approvedTag'),\n          width: '140px',\n          type: 'enum',\n          options: BackMarginSkuTagList\n        },\n        { field: 'inbound_qty', label: this.$t('backMargin.actualInboundQty'), width: '120px', showTypes: [4] },\n        { field: 'sold_qty', label: this.$t('backMargin.ActualSoldQty'), width: '120px', showTypes: [2] },\n        { field: 'claim_qty', label: this.$t('backMargin.bmClaimQty'), width: '120px' },\n        { field: 'claim_amount', label: this.$t('backMargin.totalBackMarginAmount'), width: '120px' },\n        { field: 'default_active_qty', label: this.$t('backMargin.DefaultActiveQty'), showTypes: [5, 7] },\n        { field: 'original_invoice_number', label: this.$t('backMargin.OriginalInvoiceNumber'), showTypes: [5] },\n        { field: 'new_cost', label: this.$t('backMargin.NewCost'), showTypes: [5] },\n        { field: 'logisticsCostPerSku', label: this.$t('backMargin.LogisticsCostPerSKU'), showTypes: [6] }\n      ].filter(item => {\n        if (item.showTypes) {\n          return item.showTypes.includes(this.basicForm.bm_type);\n        }\n        return true;\n      });\n    }\n  },\n  methods: {\n    selectable(row) {\n      if (this.canReject) {\n        return row.sku_type !== 3;\n      } else if (this.editingType === 'amount') {\n        return canEditSku(row.sku_type, this.skuTab);\n      }\n    },\n    formatData(list) {\n      return list.map(sku => {\n        return this.cacheSkuList[sku.sku_id] || sku;\n      });\n    },\n    hiddenEdit() {\n      this.showEditType = 0;\n      this.currSku = {};\n      this.currSkuIndex = 0;\n    },\n    showEditSku(schema, row, index) {\n      this.showEditType = this.basicForm.bm_type;\n      this.currSku = row;\n      this.currSkuIndex = index + 1;\n    },\n    async editNextSku(next, sku) {\n      const data = await this.$refs['skuTable'].getSku(this.currSkuIndex, next, sku.sku_type);\n      if (data) {\n        this.currSkuIndex = data.index;\n        this.currSku = data.sku;\n      }\n    },\n    handleSizeChange(size) {\n      this.pager.size = size;\n    },\n    handleCurrentChange(curr) {\n      this.pager.curr = curr;\n    },\n    cacheModifySku(skus) {\n      skus.forEach(sku => {\n        this.cacheSkuList[sku.sku_id] = sku;\n      });\n    },\n    onInputTable(row, schema, value) {\n      row[schema.field] = value;\n      this.cacheModifySku([row]);\n    },\n    // quickUpdateSelect() {\n    //   const list = this.checkedRows;\n    //   list.forEach(sku => {\n    //     this.amountSchema\n    //       .filter(item => item.showEdit)\n    //       .map(item => item.field)\n    //       .forEach(field => this.setSKUInfo(sku, field, this.quickForm[field]));\n    //   });\n    //   this.cacheModifySku(list);\n    // },\n    // async quickUpdateAll() {\n    //   const res = await this.$confirm(\n    //     'This operation will submit this modification. Do you want to continue?',\n    //     'waring',\n    //     {\n    //       confirmButtonText: 'confirm',\n    //       cancelButtonText: 'cancel',\n    //       type: 'warning'\n    //     }\n    //   );\n    //   if (res) {\n    //     this.$emit('editAmountAll', this.quickForm);\n    //   }\n    // },\n    // quickModifySKU(schema, value) {\n    //   this.quickForm[schema.field] = value;\n    // },\n    disabledDate(time) {\n      const startDate = new Date(this.basicForm.start_date_str + '  00:00:00');\n      const endDate = new Date(this.basicForm.end_date_str + '  23:59:59');\n      const t = time.getTime();\n      return t < startDate.getTime() || t > endDate.getTime();\n    },\n    setSKUInfo(sku, field, value) {\n      sku[field] = value;\n      if (field === 'modification_amount') {\n        sku['modification_percentage'] = sku.purchase_price\n          ? Number(((value * 100) / sku.purchase_price).toFixed(2))\n          : 0;\n      } else if (field === 'modification_percentage') {\n        sku['modification_amount'] = Number(((value * sku.purchase_price) / 100).toFixed(2));\n      }\n      return sku;\n    },\n    getRowSelectable(row) {\n      return row.approval_tag === 1 && !this.rejectList.find(sku => sku.sku_id === row.sku_id);\n    },\n    onSelecionChange(rows) {\n      this.checkedRows = rows;\n    },\n    massRejectSku() {\n      if (this.checkedRows.length <= 0) {\n        return this.$message.error('Please select some lines first!');\n      }\n      this.$emit('rejectSku', this.checkedRows);\n    },\n    rejectSku(row) {\n      this.$emit('rejectSku', [row]);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.bm-request-detail {\n  .modification-input-cell {\n    &.el-date-editor.el-input,\n    &.el-date-editor.el-input__inner,\n    &.el-input-number--medium {\n      width: 140px;\n    }\n  }\n}\n.bm-request-detail .back-margin-sku-list {\n  .el-table__body-wrapper {\n    position: static;\n  }\n  .input-cell {\n    display: flex;\n    width: 100%;\n    align-items: center;\n    .cell-value {\n      flex: 1;\n      text-align: right;\n    }\n    .cell-unit {\n      width: 80px;\n      padding-left: 4px;\n      text-align: left;\n    }\n  }\n  .delink-color {\n    color: #ff9100;\n  }\n  .popper-class {\n    font-family: Roboto-Regular;\n    font-size: 12px;\n    color: #333333;\n    line-height: 18px;\n  }\n  .el-input--medium .el-input__icon {\n    line-height: 28px;\n  }\n  .el-date-editor.el-input,\n  .el-date-editor.el-input__inner,\n  .el-input-number--medium {\n    width: 100%;\n  }\n  .el-input__inner,\n  .el-range-input {\n    width: 100%;\n    padding-right: 10px;\n    // width: calc(100% - 20px);\n  }\n  .el-input-number .el-input__inner {\n    text-align: left;\n  }\n}\n</style>\n\n<style lang=\"scss\" scoped>\n.create-sku-table {\n  border: 1px solid #e8e8e8;\n  border-top: 0;\n  padding: 15px;\n}\n.bm-sku-pagination {\n  padding-top: 10px;\n  text-align: center;\n}\n.quick-edit-amount {\n  padding: 10px 0;\n  border: 1px solid #e6e7ea;\n  .quick-label {\n    margin: 0 0 0 12px;\n    font-size: 12px;\n  }\n  .quick-input {\n    display: inline-block;\n    width: 140px;\n  }\n  .quick-btn {\n    padding: 8px 10px;\n    float: right;\n    margin: 0 10px 0 0;\n  }\n}\n.bm-request-detail {\n  margin-top: 20px;\n  .request-title {\n    flex-direction: row-reverse;\n    display: flex;\n    width: 100%;\n    height: 36px;\n    line-height: 36px;\n    font-weight: 700;\n    overflow: hidden;\n    .detail-title {\n      flex: 1;\n      display: inline-block;\n      font-size: 22px;\n      color: rgba(0, 0, 0, 0.6);\n      font-weight: normal;\n    }\n    .mass-reject-btn {\n      width: 120px;\n      margin: 0 0 0 20px;\n    }\n  }\n  .back-margin-sku-list {\n    margin: 20px 0;\n  }\n  .qty-input-number {\n    width: 100px;\n  }\n  .reject-btn {\n    border-color: #f56c6c;\n    background-color: #f56c6c;\n  }\n  .is-disabled {\n    background-color: #c0c4cc;\n    &:hover {\n      color: #fff;\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/backMargin/dialog/baseDialog.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"baseDialog\" is not PascalCase.","line":53,"column":9,"nodeType":"Literal","endLine":53,"endColumn":21,"fix":{"range":[2025,2035],"text":"BaseDialog"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <el-dialog class=\"pms-new-ui\" width=\"600px\" @close=\"onAction('close')\" :visible.sync=\"dialogVisible\">\n    <template slot=\"title\">\n      <span class=\"title\">{{ `${$t('backmarginSkuDetailSetting')}-${sku.index}` }}</span>\n      <span class=\"sub-tile\" v-if=\"sku.sku_type !== 1\">({{ formatSkuType(sku.sku_type) }})</span>\n    </template>\n    <section class=\"sku-info\">\n      <el-form class=\"sku-info-form\" label-position=\"left\">\n        <el-row>\n          <el-col :span=\"12\">\n            <el-form-item :label=\"$t('commonSkuID') + ': '\">{{ sku.sku_id || '/' }}</el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item :label=\"$t('commonSkuName') + ': '\">{{ sku.sku_name || '/' }}</el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :span=\"12\">\n            <el-form-item v-if=\"sku.sku_type === 3\" :label=\"$t('backmarginVirtualSkuID') + ': '\">{{\n              sku.virtual_sku_id || '/'\n            }}</el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item v-if=\"sku.sku_type === 3\" :label=\"$t('backmarginVirtualSkuName') + ': '\">{{\n              sku.virtual_sku_name || '/'\n            }}</el-form-item>\n          </el-col>\n        </el-row>\n      </el-form>\n    </section>\n    <section class=\"sku-info\">\n      <slot></slot>\n    </section>\n\n    <div slot=\"footer\" class=\"pms-clearfix pms-text-left\">\n      <el-button class=\"white-grey\" @click=\"onAction('prevOne')\">\n        <i class=\"el-icon-arrow-left pre-next-icon\"></i>\n        {{ $t('backmarginPreviousSku') }}\n      </el-button>\n      <el-button class=\"white-grey\" @click=\"onAction('nextOne')\">\n        {{ $t('backmarginNextSku') }}\n        <i class=\"el-icon-arrow-right pre-next-icon\"></i\n      ></el-button>\n      <el-button v-if=\"isEdit\" @click=\"onAction('save')\" class=\"pms-new-ui pms-float-right\">{{ $t('commonSave') }}</el-button>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nimport { getSkuLabel } from '../common/util';\n\nexport default {\n  name: 'baseDialog',\n  data() {\n    return {\n      dialogVisible: false\n    };\n  },\n  props: {\n    isEdit: {\n      // 是否编辑状态\n      type: Boolean,\n      default: false\n    },\n    sku: {\n      // sku信息\n      type: Object,\n      default: () => {},\n      required: true\n    },\n    index: {\n      // No.编号\n      // type: Number,\n      default: 0\n    },\n    visible: {\n      type: Boolean,\n      required: true\n    }\n  },\n  methods: {\n    onAction(type) {\n      this.$emit(type);\n    },\n    formatSkuType(value) {\n      return getSkuLabel(value);\n    }\n  },\n  watch: {\n    '$props.visible'(now, prev) {\n      this.dialogVisible = now;\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.title,\n.sub-tile {\n  font-size: 16px;\n  font-weight: bold;\n}\n.sub-tile {\n  color: #9b9b9b;\n}\n.sku-info {\n  border-bottom: 2px solid #e8e8e8;\n}\n.block-section {\n  .block-title {\n    font-size: 14px;\n    font-weight: bold;\n    margin: 8px 0 16px;\n  }\n}\n</style>\n<style lang=\"scss\">\n.sku-info {\n  margin-top: 16px;\n  .sku-info-form {\n    .el-form-item {\n      margin-bottom: 16px;\n      .el-form-item__label,\n      .el-form-item__content {\n        line-height: 16px;\n      }\n      .el-form-item__label {\n        color: $black_light_one;\n      }\n      .el-form-item__content {\n        color: $black;\n      }\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/backMargin/dialog/discount.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/backMargin/dialog/sellingPrice.vue","messages":[{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"with_holding_tax\" is not in camelCase.","line":165,"column":5,"nodeType":"Property","endLine":169,"endColumn":6}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-dialog class=\"pms-new-ui\" width=\"600px\" @close=\"onClose\" :visible.sync=\"dialogVisible\">\n    <template slot=\"title\">\n      <span class=\"title\">{{ `${$t('backmarginSkuDetailSetting')}-${sku.index}` }}</span>\n      <span class=\"sub-tile\" v-if=\"sku.sku_type !== 1\">({{ formatSkuSellingType(sku.sku_type) }})</span>\n    </template>\n    <section class=\"sku-info\">\n      <el-form class=\"sku-info-form\" label-position=\"left\">\n        <el-row>\n          <el-col :span=\"12\">\n            <el-form-item :label=\"$t('commonSkuID') + ': '\">{{ sku.sku_id || '/' }}</el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item :label=\"$t('commonSkuName') + ': '\">{{ sku.sku_name || '/' }}</el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :span=\"12\">\n            <el-form-item v-if=\"sku.sku_type === 3\" :label=\"$t('backmarginVirtualSkuID') + ': '\">{{\n              sku.virtual_sku_id || '/'\n            }}</el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item v-if=\"sku.sku_type === 3\" :label=\"$t('backmarginVirtualSkuName') + ': '\">{{\n              sku.virtual_sku_name || '/'\n            }}</el-form-item>\n          </el-col>\n        </el-row>\n      </el-form>\n    </section>\n    <section class=\"tier-setting block-section\">\n      <h3 class=\"block-title\">{{ $t('backmarginTierSetting') }}</h3>\n      <el-table :data=\"skuTableList || []\">\n        <el-table-column :label=\"$t('commonNo')\">\n          <template slot-scope=\"scope\">\n            <span v-if=\"scope.$index !== (skuTableList || []).length - 1\">{{ `Tier ${scope.$index + 1}` }}</span>\n            <span v-else>Other</span>\n          </template>\n        </el-table-column>\n        <el-table-column :label=\"$t('sellingPrice')\">\n          <template slot-scope=\"scope\">\n            <el-input\n              v-if=\"isEdit && scope.$index !== (skuTableList || []).length - 1\"\n              v-model=\"scope.row.default_tier\"\n              @change=\"value => formatDetaultAmount(scope.row, value)\"\n            ></el-input>\n            <span v-else>{{\n              scope.$index === (skuTableList || []).length - 1 ? 'Other Price' : scope.row.default_tier\n            }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column :label=\"$t('backmarginSupportAmount')\">\n          <template slot-scope=\"scope\">\n            <el-input\n              v-if=\"isEdit\"\n              v-model=\"scope.row.support_amount\"\n              @change=\"value => formatSupportAmount(scope.row, value)\"\n            ></el-input>\n            <span v-else>{{ scope.row.support_amount }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column v-if=\"with_holding_tax !== 0\" :label=\"$t('backmarginBMAfterWHT')\">\n          <template slot-scope=\"scope\">\n            <span>{{ scope.$index === 0 ? getBMWht(with_holding_tax, scope.row.support_amount) : '/' }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column :label=\"$t('commonAction')\" v-if=\"isEdit\">\n          <template slot-scope=\"scope\">\n            <el-button\n              v-if=\"scope.$index !== (skuTableList || []).length - 1\"\n              type=\"text\"\n              class=\"color-red\"\n              @click=\"onRemove(scope.$index)\"\n              >{{ $t('commonRemove') }}</el-button\n            >\n            <span v-else>-</span>\n          </template>\n        </el-table-column>\n      </el-table>\n      <addSomethingBtn\n        text=\"backmarginAddTier\"\n        v-if=\"isEdit && skuTableList.length < 5\"\n        @click=\"onAddTier\"\n      ></addSomethingBtn>\n    </section>\n\n    <div slot=\"footer\" class=\"pms-clearfix pms-text-left\">\n      <el-button class=\"white-grey\" @click=\"onAction('prevOne')\">\n        <i class=\"el-icon-arrow-left pre-next-icon\"></i>\n        {{ $t('backmarginPreviousSku') }}\n      </el-button>\n      <el-button class=\"white-grey\" @click=\"onAction('nextOne')\">\n        {{ $t('backmarginNextSku') }}\n        <i class=\"el-icon-arrow-right pre-next-icon\"></i\n      ></el-button>\n      <el-button v-if=\"isEdit\" @click=\"onAction('save')\" class=\"pms-new-ui pms-float-right\">{{ $t('commonSave') }}</el-button>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nimport { getBMWht, SKU_TIER_KEY_MAP, getSkuLabel, copySku, isEmptyValue } from '../common/util';\nimport addSomethingBtn from '@/components/common/addSomethingBtn';\n\nfunction formatSku(sku, isEdit) {\n  if (!sku.default_tier_amount) return sku;\n  sku.defaultTierAmountList = sku.default_tier_amount\n    .map((default_tier, index) => ({\n      default_tier: default_tier,\n      support_amount: sku[`tier_${SKU_TIER_KEY_MAP[index + 1]}_price`]\n    }))\n    .filter((item, index) => {\n      // 编辑时，默认显示tier1\n      // 因无法区分二次编辑前，用户是否remove掉tier1，编辑时始终会显示tier1\n      // if (isEdit && index === 0) {\n      //   return true;\n      // };\n      return item.default_tier && item.support_amount;\n    });\n\n  // 始终展示\n  sku.defaultTierAmountList.push({\n    default_tier: 0,\n    support_amount: sku.tier_infinity_price\n  });\n\n  return sku;\n}\n\nfunction parseSku(sku) {\n  const defaultTierAmountList = JSON.parse(JSON.stringify(sku.defaultTierAmountList));\n  const last = defaultTierAmountList.pop();\n  sku.default_tier_amount = defaultTierAmountList.map((item, index) => {\n    sku[`tier_${SKU_TIER_KEY_MAP[index + 1]}_price`] = item.support_amount || 0;\n    return item.default_tier || 0;\n  });\n\n  sku.tier_infinity_price = last.support_amount || 0;\n  return sku;\n}\n\nexport default {\n  components: {\n    addSomethingBtn\n  },\n  data() {\n    return {\n      dialogVisible: false,\n      skuTableList: [],\n      form: {}\n    };\n  },\n  props: {\n    isEdit: {\n      // 是否编辑状态\n      type: Boolean,\n      default: false\n    },\n    sku: {\n      // sku信息\n      type: Object,\n      default: () => {},\n      required: true\n    },\n    with_holding_tax: {\n      // 用于计算tier_bm_after_wht的税率 =0时不显示tier_bm_after_wht\n      type: Number,\n      default: 0\n    },\n    visible: {\n      type: Boolean,\n      required: true\n    }\n  },\n  methods: {\n    getBMWht,\n    onAddTier() {\n      this.skuTableList.splice(this.skuTableList.length - 2, 0, {\n        default_tier: undefined,\n        support_amount: undefined\n      });\n    },\n    onClose() {\n      this.$emit('close');\n    },\n    validateTier(list) {\n      return !list.some(item => {\n        return isEmptyValue(item.default_tier) || isEmptyValue(item.support_amount);\n      });\n    },\n    onAction(type) {\n      // 该类型的tier可以不填\n      // if (!this.validateTier(this.skuTableList)) {\n      //   this.$message.error('Amount must be greater than or equal to 0.');\n      //   return;\n      // }\n      // if (this.hasEmptyDataInSkuTableList()) return this.$message.error('Default Amount or Support Amount Cannot be empty.');\n      this.$emit(type, parseSku({ ...this.form, defaultTierAmountList: this.skuTableList }));\n    },\n    onRemove(index) {\n      this.skuTableList.splice(index, 1);\n    },\n    formatDetaultAmount(row) {\n      row.default_tier = Number(\n        String(row.default_tier)\n          .replace(/[^\\d.]/g, '')\n          .replace(/(\\.\\d{0,2}).*/g, '$1')\n          .replace(/^\\.(\\d+)/g, '0.$1')\n          .replace(/\\.$/g, '')\n          .replace(/^0{2,}\\./g, '0.')\n          .replace(/^0+([1-9]+)/g, '$1')\n      );\n    },\n    formatSupportAmount(row) {\n      row.support_amount = Number(\n        String(row.support_amount)\n          .replace(/[^\\d.]/g, '')\n          .replace(/(\\.\\d{0,2}).*/g, '$1')\n          .replace(/^\\.(\\d+)/g, '0.$1')\n          .replace(/\\.$/g, '')\n          .replace(/^0{2,}\\./g, '0.')\n          .replace(/^0+([1-9]+)/g, '$1')\n      );\n    },\n    formatSkuSellingType(value) {\n      return getSkuLabel(value);\n    }\n  },\n  watch: {\n    '$props.visible'(now, prev) {\n      this.dialogVisible = now;\n    },\n    sku(now, prev) {\n      const form = copySku(now);\n      this.form = formatSku(form, this.isEdit);\n      this.skuTableList = this.form.defaultTierAmountList || [];\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.title,\n.sub-tile {\n  font-size: 16px;\n  font-weight: bold;\n}\n.sub-tile {\n  color: #9b9b9b;\n}\n.sku-info {\n  border-bottom: 2px solid #e8e8e8;\n}\n.block-section {\n  .block-title {\n    font-size: 14px;\n    font-weight: bold;\n    margin: 8px 0 16px;\n  }\n}\n</style>\n<style lang=\"scss\">\n.sku-info {\n  margin-top: 16px;\n  .sku-info-form {\n    .el-form-item {\n      margin-bottom: 16px;\n      .el-form-item__label,\n      .el-form-item__content {\n        line-height: 16px;\n      }\n      .el-form-item__label {\n        color: $black_light_one;\n      }\n      .el-form-item__content {\n        color: $black;\n      }\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/backMargin/dialog/sellout.vue","messages":[{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"bm_type\" is not in camelCase.","line":52,"column":5,"nodeType":"Property","endLine":52,"endColumn":20},{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"billing_type\" is not in camelCase.","line":69,"column":5,"nodeType":"Property","endLine":69,"endColumn":25},{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"with_holding_tax\" is not in camelCase.","line":70,"column":5,"nodeType":"Property","endLine":70,"endColumn":29}],"errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <section class=\"sell-out-dialog\">\n    <baseDialog\n      :isEdit=\"isEdit\"\n      :sku=\"sku\"\n      :visible=\"visible\"\n      @close=\"onClose\"\n      @prevOne=\"transferEmit('prevOne')\"\n      @nextOne=\"transferEmit('nextOne')\"\n      @save=\"transferEmit('save')\"\n    >\n      <template>\n        <p class=\"edit-sku-title\">{{ $t('backMarginTierSetting') }}</p>\n        <el-table :data=\"tierData\">\n          <el-table-column type=\"index\" width=\"50\" label=\"No.\"> </el-table-column>\n          <el-table-column v-for=\"item in tableSchema\" :key=\"item.field\" :prop=\"item.field\" :label=\"item.label\">\n            <template slot-scope=\"scope\">\n              <pms-form-item\n                :renderData=\"{ schema: item, form: scope.row }\"\n                @input=\"(...p) => onTableInput(scope.$index, ...p)\"\n              ></pms-form-item>\n            </template>\n          </el-table-column>\n        </el-table>\n        <p class=\"edit-sku-title\">{{ $t('backMarginBMQtySetting') }}</p>\n        <base-form\n          ref=\"baseForm\"\n          type=\"simple\"\n          :form=\"form\"\n          :schema=\"formSchema\"\n          :isEdit=\"isEdit\"\n          @input=\"onInput\"\n        ></base-form>\n      </template>\n    </baseDialog>\n  </section>\n</template>\n\n<script>\nimport baseDialog from './baseDialog';\nimport baseForm from '@/components/BaseItem/baseForm';\nimport PMSFormItem from '@/components/BaseItem/formItem';\nimport { SKU_TIER_KEY_MAP, getBMWht, getAmount, getPercent, copySku, isEmptyValue } from '../common/util';\n\nexport default {\n  components: {\n    baseDialog,\n    baseForm,\n    'pms-form-item': PMSFormItem\n  },\n  props: {\n    bm_type: Number,\n    tierArr: Array, // 坎级信息\n    isEdit: {\n      // 是否编辑状态\n      type: Boolean,\n      default: false\n    },\n    sku: {\n      // sku信息\n      type: Object,\n      default: () => {},\n      required: true\n    },\n    visible: {\n      type: Boolean,\n      required: true\n    },\n    billing_type: Number, // 计费类型1=输入Amount，2=输入Percentage\n    with_holding_tax: Number\n  },\n  data() {\n    return {\n      form: {},\n      tierData: []\n    };\n  },\n  watch: {\n    sku(now) {\n      this.form = copySku(now); // 重新$set的过程\n      this.setTierData(this.form);\n    }\n  },\n  computed: {\n    tableSchema() {\n      const config = [\n        {\n          field: 'qty',\n          label: this.$t('backMarginQty'),\n          type: 'text'\n        },\n        {\n          field: 'price',\n          label: this.$t('backmarginBMSupportAmount'),\n          type: this.billing_type === 1 && this.isEdit ? 'input' : 'text'\n        },\n        {\n          field: 'percentage',\n          label: this.$t('backmarginBMPercentage'),\n          type: (this.billing_type === 2 || this.billing_type === 3) && this.isEdit ? 'input' : 'text'\n        }\n      ];\n      if (this.with_holding_tax) {\n        config.push({\n          field: 'tier_bm_after_wht',\n          label: this.$t('backmarginBMAfterWHT'),\n          type: 'text'\n        });\n      }\n      return config;\n    },\n    formSchema() {\n      return [\n        {\n          field: 'min_target_qty',\n          type: 'input-number',\n          label: 'backMargin.minSellQty',\n          props: {\n            controls: false\n          }\n        },\n        {\n          field: 'max_target_qty',\n          type: 'input-number',\n          label: 'backMargin.maxBMQty',\n          props: {\n            controls: false\n          }\n        },\n        {\n          field: 'default_active_qty',\n          type: 'input-number',\n          label: 'backMargin.DefaultActiveQty',\n          props: {\n            controls: false\n          },\n          isHidden: this.bm_type !== 7\n        }\n      ];\n    }\n  },\n  methods: {\n    setTierData(sku) {\n      const tierList = [0, ...this.tierArr];\n      this.tierData = tierList.map((key, index) => {\n        const last = index === this.tierArr.length ? 'infinity' : '';\n        return {\n          qty: `${tierList[index]} - ${tierList[index + 1] || 'infinity'}`,\n          price: sku[`tier_${last || SKU_TIER_KEY_MAP[index + 1]}_price`],\n          percentage: sku[`tier_${last || SKU_TIER_KEY_MAP[index + 1]}_percent`],\n          tier_bm_after_wht: index === 0 ? sku.tier_bm_after_wht : ''\n        };\n      });\n    },\n    validateTier(list) {\n      return !list.some(item => {\n        return isEmptyValue(item.price) || isEmptyValue(item.percentage);\n      });\n    },\n    onClose() {\n      this.$emit('close');\n    },\n    transferEmit(type) {\n      if (!this.validateTier(this.tierData)) {\n        this.$message.error('Amount or Percentage must be greater than or equal to 0.');\n        return;\n      }\n      this.tierData.forEach((item, index) => {\n        const last = index === this.tierData.length - 1 ? 'infinity' : '';\n        const price = `tier_${last || SKU_TIER_KEY_MAP[index + 1]}_price`;\n        const percentage = `tier_${last || SKU_TIER_KEY_MAP[index + 1]}_percent`;\n        this.form[price] = parseFloat(item.price);\n        this.form[percentage] = parseFloat(item.percentage);\n      });\n      this.$emit(type, this.form);\n    },\n    onInput(schema, value) {\n      // console.log('input', schema, value);\n      this.form[schema.field] = value;\n    },\n    onTableInput(index, schema, value) {\n      if (schema.field === 'price') {\n        this.tierData[index]['price'] = value;\n        this.tierData[index]['percentage'] = getPercent(this.form.purchase_price, value);\n      } else if (schema.field === 'percentage') {\n        this.tierData[index]['percentage'] = value;\n        this.tierData[index]['price'] = getAmount(this.form.purchase_price, value);\n      }\n      if (this.with_holding_tax && index === 0) {\n        const price = this.tierData[index]['price'];\n        this.tierData[index]['tier_bm_after_wht'] = getBMWht(this.with_holding_tax, price);\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.edit-sku-title {\n  font-size: 14px;\n  font-weight: bold;\n  margin: 16px 0;\n  color: #333;\n}\n.sell-out-dialog {\n  /deep/ .el-form-item {\n    margin-bottom: 8px;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/backMargin/dialog/stockOnHand.vue","messages":[{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"bm_type\" is not in camelCase.","line":100,"column":5,"nodeType":"Property","endLine":100,"endColumn":20},{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"with_holding_tax\" is not in camelCase.","line":125,"column":5,"nodeType":"Property","endLine":129,"endColumn":6},{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"billing_type\" is not in camelCase.","line":130,"column":5,"nodeType":"Property","endLine":134,"endColumn":6}],"errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-dialog class=\"pms-new-ui\" width=\"600px\" @close=\"onClose\" :visible.sync=\"dialogVisible\">\n    <template slot=\"title\">\n      <span class=\"title\">{{ `${$t('backmarginSkuDetailSetting')}-${sku.index}` }}</span>\n      <span class=\"sub-tile\" v-if=\"sku.sku_type !== 1\">({{ formatSkuSellingType(sku.sku_type) }})</span>\n    </template>\n    <section class=\"sku-info\">\n      <el-form class=\"sku-info-form\" label-position=\"left\">\n        <el-row>\n          <el-col :span=\"12\">\n            <el-form-item :label=\"$t('commonSkuID') + ': '\">{{ sku.sku_id || '/' }}</el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item :label=\"$t('commonSkuName') + ': '\">{{ sku.sku_name || '/' }}</el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :span=\"12\">\n            <el-form-item v-if=\"sku.sku_type === 3\" :label=\"$t('backmarginVirtualSkuID') + ': '\">{{\n              sku.virtual_sku_id || '/'\n            }}</el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item v-if=\"sku.sku_type === 3\" :label=\"$t('backmarginVirtualSkuName') + ': '\">{{\n              sku.virtual_sku_name || '/'\n            }}</el-form-item>\n          </el-col>\n        </el-row>\n      </el-form>\n    </section>\n    <section class=\"sku-info\">\n      <el-form class=\"sku-info-form\" label-width=\"170px\" label-position=\"left\">\n        <el-form-item :label=\"$t('backmarginBMSupportAmount') + ': '\">\n          <template v-if=\"isEdit\">\n            <el-input v-if=\"billing_type === 1\" v-model=\"form.tier_infinity_price\" @change=\"changeBMSupportAmount\"></el-input>\n            <span v-else>{{form.tier_infinity_price}}</span>\n          </template>\n          <span v-else>{{form.tier_infinity_price}}</span>\n        </el-form-item>\n        <el-form-item :label=\"$t('backmarginBMPercentage') + ': '\">\n          <template v-if=\"isEdit\">\n            <el-input v-if=\"billing_type === 2\" v-model=\"form.tier_infinity_percent\" @change=\"changeBMPercentage\">\n              <template slot=\"append\">%</template>\n            </el-input>\n            <span v-else>{{form.tier_infinity_percent || 0}}%</span>\n          </template>\n          <span v-else>{{form.tier_infinity_percent || 0}}%</span>\n        </el-form-item>\n        <el-form-item v-if=\"with_holding_tax\" :label=\"$t('backmarginBMAfterWHT') + ': '\">\n          <span>{{form.tier_bm_after_wht}}</span>\n        </el-form-item>\n        <el-form-item v-if=\"!isOther\" :label=\"$t('backmarginNewCost') + ': '\">\n           <span>{{form.new_cost}}</span>\n        </el-form-item>\n        <el-form-item v-if=\"!isOther\" :label=\"$t('backmarginDefaultActionQty') + ': '\">\n          <template v-if=\"isEdit\">\n            <el-input v-model.number=\"form.default_active_qty\" @change=\"changeDefaultActiveQty\"></el-input>\n          </template>\n           <span v-else>{{form.default_active_qty}}</span>\n        </el-form-item>\n        <el-form-item v-if=\"!isOther\" :label=\"$t('backmarginOriginalInvoiceNumber') + ': '\">\n          <template v-if=\"isEdit\">\n            <el-input v-model=\"form.original_invoice_number\" :maxlength=\"32\"></el-input>\n          </template>\n           <span v-else>{{form.original_invoice_number}}</span>\n        </el-form-item>\n        <el-form-item v-if=\"!isOther\" :label=\"$t('backmarginStockOnHand') + ': '\">\n           <span>{{form.stock_on_hand}}</span>\n        </el-form-item>\n      </el-form>\n    </section>\n\n    <div slot=\"footer\" class=\"pms-clearfix pms-text-left\">\n      <el-button class=\"white-grey\" @click=\"onAction('prevOne')\">\n        <i class=\"el-icon-arrow-left pre-next-icon\"></i>\n        {{ $t('backmarginPreviousSku') }}\n      </el-button>\n      <el-button class=\"white-grey\" @click=\"onAction('nextOne')\">\n        {{ $t('backmarginNextSku') }}\n        <i class=\"el-icon-arrow-right pre-next-icon\"></i\n      ></el-button>\n      <el-button v-if=\"isEdit\" @click=\"onAction('save')\" class=\"pms-new-ui pms-float-right\">{{ $t('commonSave') }}</el-button>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nimport { getBMWht, getNewCost, getPercent, getAmount, getSkuLabel, copySku, isEmptyValue } from '../common/util';\n\n// TODO: 待整合基于baseDialog\n\nexport default {\n  data() {\n    return {\n      dialogVisible: false,\n      form: {}\n    };\n  },\n  props: {\n    bm_type: Number,\n    isEdit: {\n      // 是否编辑状态\n      type: Boolean,\n      default: false\n    },\n    sku: {\n      // sku信息 p\n      type: Object,\n      default: () => {},\n      required: true\n    // sku_id: string,\n    // sku_name: string,\n    // virtual_sku_id: string, // 仅当type=physical时显示\n    // virtual_sku_name: string, // 仅当type=physical时显示\n    // type: number, // 1=normal 2=virtual 3=physical\n    // purchase_price: number, // sku总价，用于计算\n    // tier_infinity_price: number, // 当billing_type=1时输入，否则前端计算, getAmount\n    // tier_infinity_percent: number, // 百分比小数，当billing_type=2时输入，否则前端计算, getPercent\n    // tier_bm_after_wht: number,\n    // new_cost: number,\n    // default_active_qty: number,\n    // original_invoice_number: number,\n    // stock_on_hand: number\n    }, // sku信息\n    with_holding_tax: {\n      // 用于计算tier_bm_after_wht的税率 =0时不显示tier_bm_after_wht\n      type: Number,\n      default: 0\n    },\n    billing_type: {\n      // 计费类型1=输入Amount，2=输入Percentage\n      type: Number,\n      default: 0\n    },\n    visible: {\n      type: Boolean,\n      required: true\n    }\n  },\n  computed: {\n    isOther() {\n      return this.bm_type === 3;\n    }\n  },\n  methods: {\n    getBMWht,\n    changeDefaultActiveQty(value) {\n      this.form.default_active_qty = Number(value.replace(/[^\\d]/g, ''));\n    },\n    calcAmount() {\n      return getAmount(this.form.purchase_price, this.form.tier_infinity_percent);\n    },\n    calcPercentage() {\n      return getPercent(this.form.purchase_price, this.form.tier_infinity_price);\n    },\n    onClose() {\n      this.$emit('close');\n    },\n    validateTier(sku) {\n      return !isEmptyValue(sku.tier_infinity_percent) && !isEmptyValue(sku.tier_infinity_price);\n    },\n    onAction(type) {\n      if (!this.validateTier(this.form)) {\n        this.$message.error('Amount or Percentage must be greater than or equal to 0.');\n        return;\n      }\n      this.$emit(type, this.form);\n    },\n    onRemove(index) {\n      this.skuTableList.splice(index, 1);\n    },\n    changeBMPercentage() {\n      this.form.tier_infinity_percent = Number(\n        String(this.form.tier_infinity_percent)\n          .replace(/[^\\d.]/g, '')\n          .replace(/(\\.\\d{0,2}).*/g, '$1')\n          .replace(/^\\.(\\d+)/g, '0.$1')\n          .replace(/\\.$/g, '')\n          .replace(/^0{2,}\\./g, '0.')\n          .replace(/^0+([1-9]+)/g, '$1')\n      );\n      this.form.tier_infinity_price = this.calcAmount();\n      this.form.new_cost = getNewCost(this.form.purchase_price, this.form.tier_infinity_price);\n    },\n    changeBMSupportAmount() {\n      this.form.tier_infinity_price = Number(\n        String(this.form.tier_infinity_price)\n          .replace(/[^\\d.]/g, '')\n          .replace(/(\\.\\d{0,2}).*/g, '$1')\n          .replace(/^\\.(\\d+)/g, '0.$1')\n          .replace(/\\.$/g, '')\n          .replace(/^0{2,}\\./g, '0.')\n          .replace(/^0+([1-9]+)/g, '$1')\n      );\n      this.form.tier_infinity_percent = this.calcPercentage();\n      this.form.new_cost = getNewCost(this.form.purchase_price, this.form.tier_infinity_price);\n    },\n    formatSkuSellingType(value) {\n      return getSkuLabel(value);\n    }\n  },\n  watch: {\n    '$props.visible'(now, prev) {\n      this.dialogVisible = now;\n      if (now) {\n        this.form = copySku(this.sku);\n      }\n    },\n    '$props.sku'(now, prev) {\n      this.form = copySku(now);\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.title, .sub-tile {\n  font-size: 16px;\n  font-weight: bold;\n}\n.sub-tile{\n  color: #9b9b9b;\n}\n.sku-info{\n  border-bottom: 2px solid #e8e8e8;\n}\n.block-section {\n  .block-title {\n    font-size: 14px;\n    font-weight: bold;\n    margin: 8px 0 16px;\n  }\n}\n</style>\n<style lang=\"scss\">\n.sku-info {\n  margin-top: 16px;\n  .sku-info-form {\n    .el-form-item {\n      margin-bottom: 16px;\n      .el-form-item__label,\n      .el-form-item__content {\n        line-height: 16px;\n      }\n      .el-form-item__label {\n        color: $black_light_one;\n      }\n      .el-form-item__content {\n        color: $black;\n      }\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/backMargin/index.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"myApprove\" is not PascalCase.","line":36,"column":9,"nodeType":"Literal","endLine":36,"endColumn":20,"fix":{"range":[1788,1797],"text":"MyApprove"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <section class='pms-ui back-margin-list'>\n    <BackMarginList\n      :defaultSearchForm=\"defaultSearchForm\" @commitLastSearchForm=\"saveLastSearchForm\"\n      :actionSchema=\"searchActionSchema\" :tabParams=\"tabParams\"\n      :tableConfig=\"tableConfig\" :tableSchema='tableSchema' :searchSchema='searchSchema' :activeTab=\"activeTab\" @reset=\"handleReset\"\n      :canEditBM=\"canEditBM\"\n      ref=\"BackMarginList\"\n      >\n      <template slot=\"header\">\n        <el-header class='approve-header'>\n          <el-tabs tab-position='bottom' style='height:60px; max-width: 75%;' v-model=\"activeTab\" :before-leave=\"handleTabClick\">\n            <el-tab-pane v-if='showBMList' :label=\"$t('route.backMarginList')\" name=\"BMList\"></el-tab-pane>\n            <el-tab-pane v-if='showMyApproval' :label=\"$t('route.myPA')\" name=\"myApproval\"></el-tab-pane>\n            <el-tab-pane v-if='showMyHistory' :label=\"$t('route.approvalHistory')\" name=\"myHistory\"></el-tab-pane>\n          </el-tabs>\n          <div class='create-btn' v-if=\"canEditBM && activeTab === 'BMList'\" @click='createBackMargin'>\n            <span class='sprite-entry-add add-btn'></span>\n            {{$t('backMargin.newRequest')}}\n          </div>\n        </el-header>\n      </template>\n    </BackMarginList>\n  </section>\n</template>\n\n<script>\nimport BackMarginList from './list';\nimport { deleteBMItem, cancelBMItem } from '@/api/backMargin';\nimport { hasPermission } from '@/utils/permission';\nimport { Permission, BackMarginStatusList, BackMarginSearchStatusList, BackMarginApprovalStatusList, BackMarginCampaignTypeList, BackMarginTypeList, BackMarginCalculatedTagList, BackMarginRequestTagList } from '@/utils/constant';\nimport { formatValue } from '@/utils/formatParams';\nimport moment from 'moment';\n\nexport default {\n  name: 'myApprove',\n  data() {\n    return {\n      activeTab: '',\n      canEditBM: false,\n      showMyApproval: false,\n      showBMList: false,\n      showMyHistory: false,\n      lastSearchForm: {},\n      defaultSearchForm: {},\n      disabledRequester: false,\n      tabList: [\n        { field: 'showBMList', value: ['BMList'] },\n        { field: 'showMyApproval', value: ['myApproval'] },\n        { field: 'showMyHistory', value: ['myHistory'] }\n      ]\n    };\n  },\n  computed: {\n    currencyMap() {\n      return this.$store.getters.currencyMap;\n    },\n    countryList() {\n      return this.$store.getters.countrySelectList;\n    },\n    tableConfig() {\n      return {\n        showCheckBox: ['myApproval'].includes(this.activeTab),\n        align: 'center',\n        sortable: 'custom',\n        sortBy: ['total_charge_value', 'confirmed_charge_value', 'bm_status']\n      };\n    },\n    tabParams() {\n      const paramsMap = {\n        'BMList': {}, // todo tab 参数等待确定 requester: this.$store.getters.email\n        'myApproval': {},\n        'myHistory': {}\n        // 'BMList': { bm_status: 8 } // 8-done -- todo\n      };\n      return paramsMap[this.activeTab] || {};\n    },\n    searchActionSchema() {\n      return [\n        { type: 'search', hasPermission: true },\n        { type: 'clear', hasPermission: true },\n        { type: 'export', hasPermission: this.activeTab === 'BMList' || this.activeTab === 'myApproval' },\n        { type: 'mass-approve', hasPermission: this.activeTab === 'myApproval' },\n        { type: 'mass-reject', hasPermission: this.activeTab === 'myApproval' }\n      ].filter(item => item.hasPermission);\n    },\n    searchSchema() {\n      return [\n        { field: 'date', label: 'backMargin.calculateDate', type: 'dateRange', width: 9, labelWidth: '160px', class: 'input-bg' },\n        { field: 'bm_country', type: 'select', width: 5, label: 'purchaseRequest.region', options: () => [{ label: 'All', value: '' }, ...this.countryList] },\n        { field: 'supplier_id', type: 'input', width: 5, label: 'purchaseOrder.vendorSideID' },\n        { field: 'bm_id', type: 'input', label: 'backMargin.bmID', width: 5 },\n        { offset: 9, field: 'campaign_type', label: 'backMargin.campaignType', type: 'select', width: 5, options: () => BackMarginCampaignTypeList },\n        { field: 'supplier_name', type: 'input', width: 5, label: 'purchaseRequest.supplierName' },\n        { field: 'bm_status', type: this.activeTab === 'myApproval' ? 'select' : 'cascader', width: 5, label: 'purchaseRequest.status',\n          options: () => this.activeTab === 'myApproval' ? BackMarginApprovalStatusList : BackMarginSearchStatusList\n        },\n        { offset: 9, field: 'bm_type', type: 'select', label: 'backMargin.bmType', width: 5, options: () => BackMarginTypeList },\n        { field: 'request_tag', type: 'select', label: 'backMargin.RequestTag', width: 5, options: () => BackMarginRequestTagList },\n        { field: 'calculated_tag', type: 'select', label: 'backMargin.calculatedTag', width: 5, options: () => BackMarginCalculatedTagList, hidden: this.activeTab !== 'BMList' },\n        { type: 'input', width: 4, label: 'purchaseRequest.requester', field: 'requester', disabled: this.disabledRequester },\n        { type: 'myself', width: 1, field: 'isMyself', label: 'purchaseRequest.myself', class: 'search-checkbox', relationFields: [{ field: 'requester', onChange: this.changeMySelf }], hidden: this.activeTab !== 'BMList' }\n      ].filter(item => !item.hidden);\n    },\n    tableSchema() {\n      return [\n        { label: this.$t('backMargin.bmID'), field: 'bm_id', fixed: 'left' },\n        { label: this.$t('backMargin.bmName'), field: 'bm_name' },\n        { label: this.$t('backMargin.vendorSiteID'), field: 'supplier_id' },\n        { label: this.$t('purchaseRequest.supplierName'), field: 'supplier_name' },\n        { label: this.$t('backMargin.bmType'), field: 'bm_type', type: 'enum', options: BackMarginTypeList },\n        { label: this.$t('backMargin.RequestTag'), field: 'request_tag', type: 'enum', options: BackMarginRequestTagList },\n        { label: this.$t('backMargin.campaignType'), field: 'campaign_type', type: 'enum', options: BackMarginCampaignTypeList },\n        { label: this.$t('backMargin.calculatedTag'), field: 'calculated_tag',\n          render: (schema, row) => this.formatCalculatedTag(row.calculated_tag)\n        },\n        // { label: this.$t('backMargin.calculatedTotalValue'), field: 'total_charge_value', sortable: true,\n        //   render: (schema, row) => `${formatValue(row[schema.field] || 0)} ${this.currencyMap[row.bm_country]}`\n        // },\n        { label: this.$t('backMargin.confirmedTotalValue'), field: 'confirmed_charge_value', sortable: true,\n          render: (schema, row) => `${formatValue(row[schema.field] || 0)} ${this.currencyMap[row.bm_country]}`\n        },\n        { label: this.$t('backMargin.startDate'), field: 'start_date_str' },\n        { label: this.$t('backMargin.endDate'), field: 'end_date_str' },\n        { label: this.$t('userRole.userList.status'), field: 'bm_status',\n          render: (schema, row, index, h) => {\n            const result = BackMarginStatusList.find(item => item.value === row[schema.field]);\n            if (result.value !== 10) {\n              return result.label;\n            }\n            return ['div', { class: 'status-wrapper' }, [h('el-popover',\n                  { class: 'payment-request-list-wrapper',\n                    props: { placement: 'top', trigger: 'hover',\n                      popperClass: 'word-break', content: this.$t('massSubmitFailed')\n                    }\n                  },\n                  [h('i', { class: 'el-icon-warning-outline submit-draft-warning', slot: 'reference' })]\n                  // 如果是 10 的情况，Mass Submit Failed，还是展示文案 Draft\n                ), result.label]\n            ];\n          }\n        },\n        { label: this.$t('backMargin.modifyTime'), field: 'mtime',\n          render: (schema, row) => row[schema.field] ? moment(row[schema.field] * 1000).format('YYYY-MM-DD HH:mm:ss') : '/'\n        },\n        { label: this.$t('purchaseRequest.requester'), field: 'requester' },\n        {\n          label: this.$t('purchaseRequest.action'),\n          fixed: 'right',\n          render: (schema, row, index, h) => {\n            return [\n              'div',\n              { class: 'action-wrapper' },\n              [\n                h('el-button', { class: 'list-btn',\n                  on: {\n                    click: () => {\n                      this.$store.commit('setActiveTab', { module: 'backMargin', tab: this.activeTab });\n                      this.$store.commit('setSearchForm', {\n                        module: 'backMargin',\n                        form: this.lastSearchForm,\n                        field: this.activeTab\n                      });\n                      const canSubmit = row.requester === this.$store.getters.email && [1, 3, 10].includes(row.bm_status);\n                      this.$router.push({ path: `/admin/finance/backMargin/${canSubmit ? 'create' : 'detail'}/${row.bm_id}` });\n                    }\n                  }\n                },\n                this.$t('backMargin.details')),\n                (row.requester === this.$store.getters.email && row.bm_status === 1 && this.canEditBM)\n                  ? h('el-button', { class: 'list-btn cancel-btn', on: { click: () => this.handleClickDeleteItem(row) }}, this.$t('purchaseOrder.delete')) : '',\n                (row.requester === this.$store.getters.email && ![1, 9].includes(row.bm_status) && this.canEditBM)\n                  ? h('el-button', { class: 'list-btn cancel-btn', on: { click: () => this.handleClickCancelItem(row) }}, this.$t('purchaseOrder.cancel')) : '' // 1-Draft, 9-Cancel\n              ].filter(item => !item.hidden)\n            ];\n          }\n        }\n      ].filter(item => !item.hidden);\n    }\n  },\n  methods: {\n    changeMySelf(value) {\n      if (value) {\n        this.disabledRequester = true;\n        return this.$store.getters.email;\n      } else {\n        this.disabledRequester = false;\n        return '';\n      }\n    },\n    handleClickDeleteItem(row) {\n      this.$confirm('Are you sure you want to delete this BM?', 'Tips', {\n        confirmButtonText: 'Confirm',\n        cancelButtonText: 'Cancel'\n      }).then(() => {\n        this.deleteBMItem(row);\n      });\n    },\n    handleClickCancelItem(row) {\n      this.$prompt('Are you sure you want to cancel this BM?', 'Tips', {\n        confirmButtonText: 'Confirm',\n        cancelButtonText: 'Cancel',\n        inputPattern: /^[\\s\\S]*.*[^\\s][\\s\\S]*$/,\n        inputErrorMessage: 'Cancel Reason is required!'\n      }).then(({ value }) => {\n        this.cancelBMItem(row, value);\n      });\n    },\n    deleteBMItem(row) {\n      const params = {\n        bm_id: row.bm_id\n      };\n      deleteBMItem(params).then(res => {\n        if (res && res.retcode === 0) {\n          this.$message({\n            type: 'success',\n            message: 'Delete successfully!'\n          });\n          this.searchInChildComp();\n        } else {\n          this.$message({ type: 'error', message: res.info });\n        }\n      }).catch(e => { this.$message({ type: 'error', message: e }); });\n    },\n    searchInChildComp() {\n      this.$refs.BackMarginList && typeof this.$refs.BackMarginList.onAfterActionSearch === 'function' && this.$refs.BackMarginList.onAfterActionSearch();\n    },\n    cancelBMItem(row, reason) {\n      const params = {\n        bm_id: row.bm_id,\n        cancel_reason: reason\n      };\n      cancelBMItem(params).then(res => {\n        if (res && res.retcode === 0) {\n          this.$message({\n            type: 'success',\n            message: 'Cancel successfully!'\n          });\n          this.searchInChildComp();\n        } else {\n          this.$message({ type: 'error', message: res.info });\n        }\n      }).catch(e => { this.$message({ type: 'error', message: e }); });\n    },\n    formatCalculatedTag(tag_code) {\n      if (!tag_code) return '-';\n      return (BackMarginCalculatedTagList.find(item => item.value === tag_code) || { label: '-' }).label;\n    },\n    handleReset() {\n      this.disabledRequester = false;\n    },\n    createBackMargin() {\n      this.$router.push({ path: '/admin/finance/backMargin/create' });\n    },\n    handleTabClick() {\n      this.clearDefaultForm();\n      return true;\n    },\n    getCurrency(warehouse) {\n      return this.currencyMap[warehouse];\n    },\n    uploadSuccess() {\n      this.activeTab = '';\n      this.$nextTick(() => {\n        this.activeTab = 'BMList';\n      });\n    },\n    saveLastSearchForm(form) {\n      this.lastSearchForm = form;\n    },\n    clearDefaultForm() {\n      this.defaultSearchForm = {};\n      this.$store.commit('setActiveTab', { module: 'backMargin', activeTab: '' });\n      this.$store.commit('setSearchForm', {\n        module: 'backMargin',\n        value: null,\n        field: this.activeTab\n      });\n    }\n  },\n  created() {\n    this.canEditBM = hasPermission(Permission.BACK_MARGIN_EDIT);\n    this.showMyApproval = hasPermission(Permission.MY_APPROVALS_BACK_MARGIN);\n    this.showBMList = hasPermission(Permission.BACK_MARGIN_LIST);\n    this.showMyHistory = hasPermission(Permission.MY_APPROVALS_BACK_MARGIN_HISTORY);\n    let activeTab = `${this.$route.query.activeTab}`;\n    if (this.$route.query.useParams) {\n      const searchForm = this.$store.getters.searchForm.backMargin || {};\n      activeTab = searchForm.activeTab;\n      if (searchForm[activeTab]) {\n        this.defaultSearchForm = searchForm[activeTab];\n      }\n    } else {\n      this.clearDefaultForm();\n    }\n    this.tabList.some(item => {\n      if (this[item.field]) {\n        const tabOption = this.tabList.find(tab => tab.value.includes(activeTab));\n        if (tabOption && this[tabOption.field]) {\n          this.activeTab = tabOption.value[0];\n        } else if (tabOption) {\n          this.$message.error('You do not have permission to view this page, please contact the system administrator to add permissions');\n          this.$router.replace('/admin/dashboard');\n        } else {\n          this.activeTab = item.value[0];\n        }\n        return true;\n      }\n    });\n  },\n  components: {\n    BackMarginList\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  // .back-margin-list {\n  //   margin-top: 12px;\n  // }\n  .back-margin-list .el-tabs__item{\n    font-size: 21px;\n  }\n  .add-btn {\n    display: inline-block;\n    margin: 0 5px -10px -20px;\n  }\n\n</style>\n<style lang=\"scss\">\n.back-margin-list{\n  .search-checkbox{\n    margin-left: 10px;\n    vertical-align: middle;\n    display: inline-block;\n    overflow: hidden;\n    height: 30px;\n    line-height: 30px;\n  }\n  .action-wrapper {\n    .el-button{\n      margin: 6px 0;\n      display: block;\n    }\n    .cancel-btn {\n      width:auto;\n      min-width: 70px;\n      padding: 0 10px;\n      font-size: 14px;\n      background-color: #F56C6C\n    }\n  }\n  .submit-draft-warning {\n    color: #f9ab2a;\n    margin-right: 3px;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/backMargin/list/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/backMargin/list/massSubmitDialog.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"massSubmitDialog\" is not PascalCase.","line":24,"column":9,"nodeType":"Literal","endLine":24,"endColumn":27,"fix":{"range":[764,780],"text":"MassSubmitDialog"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div class=\"mass-submit-dialog\">\n    <el-dialog\n      :title=\"$t('massSubmitResult')\"\n      :visible.sync=\"dialogVisible\"\n      width=\"450px\"\n      @close=\"closeDialog\"\n      center>\n      <p class=\"tips-info\">{{$t('BMMassSubmitInfo')}}</p>\n      <p class=\"tips-info\" v-if=\"showLimitBmText\">{{$t('submitBmLimitNum', { num: limitBMNum })}}</p>\n      <p>{{$t('allMassSubmitNumText', { num: totalNum })}}</p>\n      <p>{{$t('successBMRequest', { num: successNum })}}</p>\n      <p>{{$t('failBMRequest', { num: failNum })}}</p>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"closeDialog\">{{$t('commonConfirm')}}</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'massSubmitDialog',\n  data() {\n    return {\n      dialogVisible: false\n    };\n  },\n  props: {\n    visible: {\n      required: true,\n      default: false\n    },\n    result: {\n      required: true,\n      default: () => ({})\n    }\n  },\n  watch: {\n    visible: {\n      handler(newVal) {\n        this.dialogVisible = newVal;\n      },\n      immediate: true\n    }\n  },\n  computed: {\n    totalNum() {\n      return this.successNum + this.failNum;\n    },\n    successNum() {\n      return (this.result.success_list && this.result.success_list.length) || 0;\n    },\n    failNum() {\n      return (this.result.fail_list && this.result.fail_list.length) || 0;\n    },\n    limitBMNum() {\n      return this.result.limit_num;\n    },\n    showLimitBmText() {\n      return this.result.exceed_limit;\n    }\n  },\n  methods: {\n    closeDialog() {\n      this.$emit('close');\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.mass-submit-dialog {\n  .el-dialog__header {\n    text-align: left;\n  }\n  .el-dialog--center .el-dialog__body {\n      padding: 15px 25px 15px;\n      line-height: 20px;\n      font-size: 14px;\n  }\n  .tips-info {\n    font-weight: bold;\n    padding: 0 0 10px;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/backMargin/list/uploadBtn.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"uploadBtn\" is not PascalCase.","line":58,"column":9,"nodeType":"Literal","endLine":58,"endColumn":20,"fix":{"range":[1930,1939],"text":"UploadBtn"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div class=\"mass-upload\">\n    <el-upload\n      class=\"upload-demo el-button--medium\"\n      action=\"/api/back_margin/back_margin_request/upload/\"\n      :with-credentials=\"true\"\n      :limit=\"1\"\n      ref=\"massUpload\"\n      :show-file-list=\"false\"\n      :on-error=\"onUploadError\"\n      :headers=\"uploadHeader\"\n      :http-request=\"blobReuqest\"\n    >\n      <div class=\"type-select\">\n        <pms-form-item @input=\"modifyForm\" :renderData=\"{ schema: bmTypeSchema, form }\"></pms-form-item>\n      </div>\n      <span class=\"download-wrap\">\n        <i class=\"el-icon-download\" @click.stop=\"onDownTmp\">{{ $t('purchaseRequest.template') }}</i>\n      </span>\n      <el-button>{{ $t('backMargin.massUpload') }}</el-button>\n    </el-upload>\n    <el-button @click=\"isShowUploadHistory = true\">{{ $t('commonUploadHistory') }}</el-button>\n    <el-button @click.stop=\"massSubmit\">{{ $t('commonMassSubmit') }}</el-button>\n\n    <export-history-dialog\n        :interval=\"10000\"\n        :taskType=\"201\"\n        :visible=\"isShowUploadHistory\"\n        :isUplodHistory=\"true\"\n        @close=\"isShowUploadHistory = false\"\n      ></export-history-dialog>\n  </div>\n</template>\n\n<script>\nimport { downloadBlobFile } from '@/utils/downloadFile';\nimport { uploadBackMargin } from '@/api/backMargin';\nimport moment from 'moment';\nimport PMSFormItem from '@/components/BaseItem/formItem';\nimport ExportHistoryDialog from '@/components/ApproveList/exportHistoryDialog';\n\nimport { getSchema } from '../common/fieldConfig';\n\nconst excelList = {\n  1: 'bm_template_sell_in_by_qty.xlsx',\n  2: 'bm_template_sell_out.xlsx',\n  3: 'bm_template_other.xlsx',\n  4: 'bm_template_sell_in_by_value.xlsx',\n  5: 'bm_template_stock_on_hand.xlsx',\n  6: 'bm_template_logistic_subsidy.xlsx',\n  7: 'bm_template_el_sellout.xlsx',\n  8: 'bm_template_selling_price.xlsx',\n  9: 'bm_template_discount.xlsx',\n  10: 'bm_template_seller_voucher.xlsx'\n};\n\nexport default {\n  name: 'uploadBtn',\n  data() {\n    return {\n      isShowUploadHistory: false,\n      bmTypeSchema: getSchema(['bm_type']).map(item => {\n        item.options = item.options.slice(1);\n        return item;\n      })[0],\n      form: {\n        bm_type: 1\n      }\n    };\n  },\n  components: {\n    'pms-form-item': PMSFormItem,\n    ExportHistoryDialog\n  },\n  computed: {\n    uploadHeader() {\n      return { ...this.$store.getters.uploadHeader };\n    }\n  },\n  methods: {\n    massSubmit() {\n      this.$emit('massSubmit');\n    },\n    modifyForm(schema, value) {\n      this.$set(this.form, schema.field, value);\n    },\n    onDownTmp() {\n      window.open(`/admin/data/${excelList[this.form.bm_type]}`);\n    },\n    onUploadError(resp) {\n      this.$refs.massUpload.clearFiles();\n      this.$message.error('Upload Failed');\n    },\n    blobReuqest(request) {\n      const formData = new FormData();\n      formData.append('file', request.file);\n      formData.append('bm_type', this.form.bm_type);\n      uploadBackMargin(formData)\n        .then(resp => {\n          if (resp.type === 'application/json') {\n            const reader = new FileReader();\n            reader.onloadend = () => {\n              const result = JSON.parse(reader.result);\n\n              if (result.retcode !== 0) {\n                this.$message.error(result.info);\n              } else {\n                this.$message.success('Template uploaded. Please click upload history to check the upload result.');\n                this.$emit('uploadSuccess');\n              }\n            };\n            reader.readAsText(resp);\n          } else {\n            this.$message.info('Processing is complete');\n            downloadBlobFile(resp, `backMrginUpload${moment().format('YYYYMMDDHHmmss')}.xls`);\n          }\n          this.$refs.massUpload.clearFiles();\n        })\n        .catch(error => {\n          this.onUploadError(error);\n        });\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.mass-upload {\n  .el-input__inner {\n    background-color: #fff;\n    border-radius: 4px;\n    line-height: 30px;\n    height: 36px;\n    padding-left: 10px;\n  }\n}\n</style>\n<style lang=\"scss\" scoped>\n.mass-upload {\n  // max-width: 50%;\n  // margin: 0 0 -52px -20px;\n  // transform: translateY(-64px);\n  .type-select {\n    width: 160px;\n    display: inline-block;\n  }\n}\n.upload-demo{\n  padding: 0;\n  display: inline-block;\n}\n.upload-btn {\n  position: relative;\n  width: 120px;\n  border: 1px solid #3d6ed1;\n  color: #3d6ed1;\n  background-color: #fff;\n}\n.download-wrap {\n  color: #3d6ed1;\n  vertical-align: middle;\n  font-size: 12px;\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/backlog/dashboardRow.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/backlog/inventoryHealth/dataList.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/backlog/inventoryHealth/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/backlog/inventoryHealth/searchForm.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/backlog/prDashboard.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/budget/addBrandDialog.vue","messages":[{"ruleId":"vue/v-on-style","severity":2,"message":"Expected '@' instead of 'v-on:'.","line":21,"column":38,"nodeType":"VAttribute","endLine":21,"endColumn":63,"fix":{"range":[1035,1040],"text":"@"}},{"ruleId":"vue/v-on-style","severity":2,"message":"Expected '@' instead of 'v-on:'.","line":25,"column":38,"nodeType":"VAttribute","endLine":25,"endColumn":65,"fix":{"range":[1230,1235],"text":"@"}},{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"addBrand\" is not PascalCase.","line":35,"column":9,"nodeType":"Literal","endLine":35,"endColumn":19,"fix":{"range":[1507,1515],"text":"AddBrand"}}],"errorCount":3,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"<template>\n  <el-dialog :title='dialogTitle' :visible.sync=\"dialogVisible\" @close='$emit(\"close\")'>\n    <el-container>\n      <el-main class='add-brand-form'>\n        <el-form v-if='mode !== 3' ref='brandOperation' :model='modifyForm' :rules='modifyRule' label-width='200px'>\n          <el-form-item prop='brand_name' :label='$t(\"budget.brandName\")'>\n            <el-input v-model='modifyForm.brand_name'></el-input>\n          </el-form-item>\n          <el-form-item prop='remark' :label='$t(\"purchaseRequest.remark\")'>\n            <el-input :disabled='mode !== 1' v-model='modifyForm.remark' type='textarea' rows='3'></el-input>\n          </el-form-item>\n        </el-form>\n        <ul v-else>\n          <li class='detail-row' v-for='item in detailSchema' :key='item.field'>\n            <label class='detail-label'>{{item.label}}</label>\n            <span class='detail-value'>{{brandInfo[item.field] || '\\\\'}}</span>\n          </li>\n        </ul>\n      </el-main>\n      <el-footer align='center'>\n        <div class='dialog-list-btn' v-on:click='submitModify'>\n          <span :class='actionLoading ? \"el-icon-loading\" : \"\"'></span>\n          {{$t('purchaseRequest.confirm')}}\n        </div>\n        <div class='dialog-list-btn' v-on:click='$emit(\"close\")'>{{$t('purchaseRequest.close')}}</div>\n      </el-footer>\n    </el-container>\n  </el-dialog>\n</template>\n\n<script>\nimport { createBrand, modifyBrand } from '@/api/brand';\nimport { formatParams } from '@/utils/formatParams';\nexport default {\n  name: 'addBrand',\n  data() {\n    return {\n      modifyForm: {\n        brand_name: '',\n        remark: ''\n      },\n      modifyRule: {\n        brand_name: { required: true, max: 20, type: 'string', message: 'Brand Name can not be empty or more than 20 characters！', trigger: 'blur' },\n        remark: { required: false, type: 'string', trigger: 'blur' }\n      },\n      dialogVisible: false,\n      actionLoading: false\n    };\n  },\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    mode: {\n      type: Number,\n      default: 3 // 1-create, 2-edit, 3-detail\n    },\n    brandInfo: {\n      type: Object,\n      required: true\n    }\n  },\n  computed: {\n    dialogTitle() {\n      return ['', this.$t('budget.addBrand'), this.$t('budget.editBrand'), this.$t('budget.brandDetail')][this.mode || 0] || '';\n    },\n    detailSchema() {\n      return [\n        { field: 'brand_id', label: this.$t('budget.brandID') },\n        { field: 'brand_name', label: this.$t('budget.brandName') },\n        { field: 'created_by', label: this.$t('approvalFlow.createdBy') },\n        { field: 'create_date', label: this.$t('opHistory.ctime') },\n        { field: 'remark', label: this.$t('purchaseRequest.remark') }\n      ];\n    }\n  },\n  methods: {\n    submitModify() {\n      if (this.mode !== 3) {\n        if (this.actionLoading) {\n          return;\n        }\n        this.$refs.brandOperation.validate(validate => {\n          if (validate) {\n            const params = formatParams({ ...this.modifyForm, brand_id: this.brandInfo.brand_id, country: this.brandInfo.region });\n            params.remark = (params.remark || '').trim();\n            const requestFun = this.mode === 1 ? createBrand : modifyBrand;\n            this.actionLoading = true;\n            requestFun(params).then(resp => {\n              if (resp.retcode !== 0) {\n                this.$message.error(resp.info);\n              } else {\n                this.$message.success('Success');\n                this.$emit('refresh');\n                this.$emit('close');\n              }\n              this.actionLoading = false;\n            }).catch(() => { this.actionLoading = false; });\n          }\n        });\n      } else {\n        this.$emit('close');\n      }\n    }\n  },\n  watch: {\n    '$props.visible': {\n      handler(now, prev) {\n        if (now) {\n          this.modifyForm.brand_name = this.brandInfo.brand_name || '';\n          this.modifyForm.remark = this.brandInfo.remark || '';\n        } else {\n          this.$refs.brandOperation && this.$refs.brandOperation.clearValidate();\n        }\n        this.actionLoading = false;\n        this.dialogVisible = now;\n      },\n      immediate: true\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  .add-brand-form .el-textarea__inner {\n    border-radius: 0;\n  }\n  .detail-row {\n    display: flex;\n    min-height: 32px;\n    line-height: 32px;\n    .detail-label {\n      width: 200px;\n      margin: 0 20px;\n      font-size: 14px;\n      text-align: right;\n    }\n    .detail-value {\n      flex: 1;\n      margin-left: 20px;\n      word-break: break-all;\n    }\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/budget/addBudgetDialog.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":13,"column":32,"nodeType":"VIdentifier","messageId":"deprecated","endLine":13,"endColumn":38},{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"addBudget\" is not PascalCase.","line":77,"column":9,"nodeType":"Literal","endLine":77,"endColumn":20,"fix":{"range":[4584,4593],"text":"AddBudget"}}],"errorCount":2,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <el-dialog :title=\"mode == 1? $t('budgetAddBudgetCOGS') : $t('budgetEditBudgetCOGS')\" width='730px' :visible.sync=\"dialogVisible\" @close='$emit(\"close\")' custom-class='pms-ui pms-ele-ui addBudgetDialog-wrapper'>\n    <el-container>\n      <el-main class=\"main-content\">\n        <el-form :model='budgetForm' :rules='rules' ref='monthlyBudgetForm' label-width='220px' label-position=\"left\">\n          <el-form-item v-for='item in createSchema' :prop='item.field' :key='item.field' :required='item.required' :class='item.class || \"\"' :label=\"item.label\">\n            <el-select v-if='item.type === \"select\"' v-model=\"budgetForm[item.field]\" :disabled='!!item.disabled'  @change='(...argu) => handleSelectFormChange(item.field, ...argu)'>\n              <el-option v-for='option in item.options || []' :key='option.value' :label='option.label' :value='option.value'></el-option>\n            </el-select>\n            <el-date-picker :picker-options=\"pickerOptions\" :disabled='!!item.disabled' class='budget-month' v-if='item.type === \"month\"' value-format='MM/yyyy' type='month' :editable=false format='MM/yyyy' v-model='budgetForm[item.field]'></el-date-picker>\n            <el-input type='textarea' rows='5' :disabled='!!item.disabled' v-if='item.type === \"input\"' v-model=\"budgetForm[item.field]\"></el-input>\n            <div v-if='item.type === \"amount\"'>\n              <el-input @keyup.native='fixedAmount' v-model='budgetForm[item.field]'>\n                <span slot=\"suffix\">{{basicInfo.currency || ''}}</span>\n              </el-input>\n              <br />\n              <el-input disabled :value='usdAmount'>\n                <span slot=\"suffix\">USD</span>\n              </el-input>\n            </div>\n            <div v-if='item.type === \"cogs\"'>\n              <el-input @change='(...argu) => formatToNumber(item.field, ...argu)' v-model='budgetForm[item.field]'>\n                <span slot=\"suffix\">{{basicInfo.currency || ''}}</span>\n              </el-input>\n              <br />\n              <el-input disabled :value='usdCOGS'>\n                <span slot=\"suffix\">USD</span>\n              </el-input>\n            </div>\n            <budget-attachment\n              :showDelBtn='true'\n              @deleteAttachment='deleteAttachment'\n              @uploadSuccess='uploadSuccess'\n              actionUrl='/api/attachment/upload/'\n              :showAddBtn='budgetForm.attachment_list.length < 5'\n              :list='budgetForm.attachment_list'\n              v-if='item.type === \"attachment\"'\n            >\n            </budget-attachment>\n            <span v-if=\"item.type === 'banned'\">{{budgetForm[item.field]}}</span>\n            <span v-if=\"item.type === 'amountBanned'\">{{budgetForm[item.field] + ` ${basicInfo.currency || ''}`}}</span>\n            <div v-if=\"item.type === 'amountInputBanned'\">\n              <p class=\"amount-input-banned-item\">\n                {{budgetForm[item.field]}}\n                <span class=\"suffix\">{{basicInfo.currency || ''}}</span>\n              </p>\n              <p class=\"amount-input-banned-item\">\n                {{formatAmountToUSD(item.field, budgetForm[item.field])}}\n                <span class=\"suffix\">USD</span>\n              </p>\n            </div>\n            <el-radio-group v-if=\"item.type === 'radio'\" :disabled='!!item.disabled' v-model=\"budgetForm[item.field]\">\n              <el-radio v-for=\"option in item.options\" :key=\"option.value\" :label=\"option.value\" >{{option.label}}</el-radio>\n            </el-radio-group>\n            <el-select v-if='item.type === \"remote_select\"' filterable remote :remote-method=\"item.handler\" v-model=\"budgetForm[item.field]\" :disabled='!!item.disabled'>\n              <el-option v-for='option in item.options || []' :key='option.value' :label='option.label' :value='option.value'></el-option>\n            </el-select>\n          </el-form-item>\n        </el-form>\n      </el-main>\n      <el-footer align='right' class=\"footer-wrapper\">\n        <el-button class='list-btn white' @click='confirmClose'>{{$t('commonCancel')}}</el-button>\n        <el-button :loading='loading' class='list-btn' @click='confirmSave'>{{$t('commonSubmit')}}</el-button>\n      </el-footer>\n    </el-container>\n  </el-dialog>\n</template>\n\n<script>\nimport moment from 'moment';\nimport { adjustMethodsList, budgetRequestTypeList } from '@/utils/constant';\nimport { formatParams, getSomeKeys, formatValue } from '@/utils/formatParams';\nimport BudgetAttachment from './budgetAttachment';\nimport { addMonthlyBudget, getCatClusterCode, searchCatCluster } from '@/api/budgetLine';\n\nexport default {\n  name: 'addBudget',\n  data() {\n    return {\n      budgetForm: {\n        budget_id: '',\n        monthly_item_type: '',\n        adjust_method: '',\n        category_cluster: '',\n        brand_id: '',\n        reallocate_budget_id: '',\n        reallocate_budget_amount: '',\n        reallocate_budget_cogs: '',\n        period: '',\n        amount: '',\n        attachment_list: [],\n        comment: '',\n        cogs: ''\n      },\n      dialogVisible: false,\n      loading: false,\n      pickerOptions: {\n        disabledDate(date) {\n          return +new Date(date) < (Date.now() - 86400000);\n        }\n      },\n      categoryClusterList: [],\n      brandNameList: [],\n      budgetInfoList: []\n    };\n  },\n  props: {\n    visible: {\n      required: true,\n      default: false\n    },\n    mode: {\n      default: 1 // 1-add New 2 edit\n    },\n    basicInfo: {\n      type: Object\n    }\n  },\n  components: {\n    BudgetAttachment\n  },\n  computed: {\n    rules() {\n      const defaultRules = {\n        monthly_item_type: { required: true, message: this.$t('commonIsRequired', { target: this.$t('budgetBudgetType') }) },\n        period: { required: true, message: this.$t('commonIsRequired', { target: this.$t('commonDate') }) },\n        amount: [\n          { required: true, message: this.$t('commonIsRequired', { target: this.$t('budgetBudgetAmount') }), trigger: 'blur' },\n          { validator: this.checkAmount, trigger: 'blur' }\n        ],\n        cogs: [\n          { required: true, message: this.$t('commonIsRequired', { target: this.$t('budgetAdjustCogs') }), trigger: 'blur' },\n          { validator: this.checkCogs, trigger: 'blur' }\n        ],\n        attachment_list: { required: false },\n        comment: { required: false }\n      };\n      const locationRules = {\n        category_cluster: { required: true, message: this.$t('commonIsRequired', { target: this.$t('budgetCategoryCluster') }) },\n        brand_id: { required: true, message: this.$t('commonIsRequired', { target: this.$t('budgetBrandName') }) },\n        ...defaultRules\n      };\n      return this.budgetForm.adjust_method === 2 ? locationRules : defaultRules;\n    },\n    isAddBudget() {\n      return this.budgetForm.monthly_item_type === 2;\n    },\n    createSchema() {\n      const addBudgetSchema = [\n        { type: 'banned', field: 'monthly_item_type_label', label: this.$t('budget.requestType') },\n        { type: 'month', required: true, field: 'period', label: this.$t('approvalFlow.date') },\n        { type: 'banned', field: 'adjust_method_label', label: this.$t('budget.adjustMethod') },\n        { type: 'amount', field: 'amount', label: this.$t('budgetBudget') },\n        { type: 'cogs', field: 'cogs', label: this.$t('budget.cogs') },\n        { type: 'attachment', field: 'attachment_list', required: false, label: this.$t('purchaseRequest.attachment') },\n        { type: 'input', field: 'comment', required: false, label: this.$t('purchaseRequest.comment') }\n      ];\n      let editBudgetSchema = [\n        { type: 'radio', field: 'monthly_item_type', label: this.$t('budget.requestType'), options: budgetRequestTypeList },\n        { type: 'month', disabled: true, required: true, field: 'period', label: this.$t('approvalFlow.date') },\n        { type: 'amountBanned', field: 'budget_remaining_value', label: `${this.$t('budget.remainingBudgetAmount')}` },\n        { type: 'radio', field: 'adjust_method', label: this.$t('budget.adjustMethod'), options: adjustMethodsList },\n        { type: 'amount', field: 'amount', label: this.$t('budgetAdjustBudget') },\n        { type: 'cogs', field: 'cogs', label: this.$t('budgetAdjustCogs') },\n        { type: 'attachment', field: 'attachment_list', required: false, label: this.$t('purchaseRequest.attachment') },\n        { type: 'input', field: 'comment', required: false, label: this.$t('purchaseRequest.comment') }\n      ];\n      if (this.budgetForm.adjust_method === 2) {\n        // adjust_method 1-value 2-value reallocation\n        const locationSchema = [\n          { type: 'select', field: 'category_cluster', options: this.categoryClusterList, label: (this.isAddBudget ? this.$t('budget.fromCategoryCluster') : this.$t('budget.toCategoryCluster')) },\n          { type: 'select', field: 'brand_id', options: this.brandNameList, label: (this.isAddBudget ? this.$t('budget.fromBrandName') : this.$t('budget.toBrandName')) },\n          { type: 'banned', field: 'reallocate_budget_id', label: (this.isAddBudget ? this.$t('budget.fromBudgetID') : this.$t('budget.toBudgetID')) },\n          { type: 'amountInputBanned', field: 'reallocate_budget_amount', label: (this.isAddBudget ? this.$t('budget.fromBudgetRemainingValue') : this.$t('budget.toBudgetRemainingValue')) },\n          { type: 'amountInputBanned', field: 'reallocate_budget_cogs', label: (this.isAddBudget ? this.$t('budgetFromBudgetRemainingCOGS') : this.$t('budgetToCOGSRemainingValue')) }\n        ];\n        editBudgetSchema = [...editBudgetSchema.slice(0, 4), ...locationSchema, ...editBudgetSchema.slice(4)];\n      }\n      return this.mode === 1 ? addBudgetSchema : editBudgetSchema;\n    },\n    usdAmount() {\n      const amountValue = (+this.budgetForm.amount || 0).toFixed(2);\n      const exchangeRate = this.basicInfo.exchange_rate_to_usd || '';\n      return exchangeRate ? formatValue(Number(amountValue * exchangeRate).toFixed(2)) : '';\n    },\n    usdCOGS() {\n      const amountValue = (+this.budgetForm.cogs || 0).toFixed(2);\n      const exchangeRate = this.basicInfo.exchange_rate_to_usd || '';\n      return exchangeRate ? formatValue(Number(amountValue * exchangeRate).toFixed(2)) : '';\n    }\n  },\n  watch: {\n    '$props.visible': {\n      handler(now) {\n        this.loading = false;\n        if (now) {\n          this.budgetForm = {\n            monthly_item_type: 1,\n            monthly_item_type_label: 'Original',\n            adjust_method: 1,\n            adjust_method_label: 'Value',\n            budget_id: this.basicInfo.budget_id,\n            period: '',\n            amount: '',\n            attachment_list: [],\n            category_cluster: '',\n            budget_remaining_value: '',\n            brand_id: '',\n            reallocate_budget_id: '',\n            reallocate_budget_amount: '',\n            reallocate_budget_cogs: '',\n            comment: ''\n          };\n          if (this.mode === 2) { // edit budget\n            this.budgetForm.monthly_item_type_label = '';\n            this.budgetForm.monthly_item_type = 2;\n            this.budgetForm.period = this.basicInfo.period || '';\n            this.budgetForm.budget_remaining_value = this.basicInfo.budget_remaining_value || '';\n            this.getCategoryClusterList();\n          }\n          this.$nextTick(() => {\n            this.$refs.monthlyBudgetForm && this.$refs.monthlyBudgetForm.clearValidate();\n          });\n        } else {\n          this.budgetForm.attachment_list.forEach(item => URL.revokeObjectURL(item.pdfUrl || item.dataUrl));\n        }\n        this.dialogVisible = now;\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    moment,\n    formatToNumber(field, value = '') {\n      if (value === '' || isNaN(Number(value)) || Number(value) < 0) {\n        this.budgetForm[field] = '';\n      } else {\n        this.budgetForm[field] = Math.floor(Number(value) * 100) / 100;\n      }\n    },\n    formatAmountToUSD(key, value) {\n      if (!key || !value) return '';\n      const amountValue = (+this.budgetForm[key] || 0).toFixed(2);\n      const exchangeRate = this.basicInfo.exchange_rate_to_usd || '';\n      return exchangeRate ? formatValue(Number(amountValue * exchangeRate).toFixed(2)) : '';\n    },\n    getCategoryClusterList() {\n      getCatClusterCode({ country: this.basicInfo.country || '' }).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.categoryClusterList = (resp.data.cat_cluster || []).map(item => ({ label: item.cluster_code, value: item.cluster_code }));\n        }\n      });\n    },\n    getBrandNameList() {\n      // 重新选择categeory cluster的时候，重置some key\n      this.budgetForm.brand_id = '';\n      this.budgetForm.reallocate_budget_id = '';\n      this.budgetForm.reallocate_budget_amount = '';\n      const params = {\n        cat_cluster_code: this.budgetForm.category_cluster,\n        period: this.basicInfo.period,\n        country: this.basicInfo.country,\n        exclude_budget_id: this.basicInfo.budget_id\n      };\n      searchCatCluster(params).then(res => {\n        if (res.retcode === 0) {\n          const brandList = res.data.budget_line ? res.data.budget_line.brand_list || [] : [];\n          this.brandNameList = brandList.map(item => ({\n            value: item.brand_id === '' ? '-(generic)' : item.brand_id,\n            label: item.brand_name\n          }));\n          this.budgetInfoList = brandList.map(item => ({\n            brand_id: item.brand_id === '' ? '-(generic)' : item.brand_id,\n            budget_id: item.budget_id,\n            budget_amount: item.remaining_amount,\n            budget_cogs: item.remaining_cogs\n          }));\n        } else {\n          this.$message.error(res.info);\n        }\n      }).catch(e => {\n        this.$message.error(e);\n      });\n    },\n    setBudgetId() {\n      const obj = this.budgetInfoList.find(item => item.brand_id === this.budgetForm.brand_id);\n      if (obj) {\n        this.budgetForm.reallocate_budget_id = obj.budget_id || '';\n        this.budgetForm.reallocate_budget_amount = obj.budget_amount || '';\n        // this.formatAmountToUSD('reallocate_budget_amount', this.budgetForm.reallocate_budget_amount);\n        this.budgetForm.reallocate_budget_cogs = obj.budget_cogs || '';\n        // this.formatAmountToUSD('reallocate_budget_cogs', this.budgetForm.reallocate_budget_cogs);\n      }\n    },\n    handleSelectFormChange(field, value) {\n      if (field === 'category_cluster') {\n        this.getBrandNameList();\n      }\n      if (field === 'brand_id') {\n        this.setBudgetId();\n      }\n    },\n    fixedAmount(e) {\n      const value = e.target.value || '';\n      if (this.budgetForm.monthly_item_type === 3 && parseFloat(value) > parseFloat(this.basicInfo.budget_remaining_value)) {\n        this.$message.info(\"Adjust amount can't exceed remaining budget value\");\n        this.budgetForm.amount = '';\n        return;\n      }\n      if (value.includes('.') && value.indexOf('.') !== 0) {\n        const arr = value.split('.');\n        this.budgetForm.amount = `${+arr[0]}.${arr[1].substr(0, 2).replace(/[^\\d]/g, '') || ''}`;\n      } else {\n        const intValue = parseInt(value);\n        this.budgetForm.amount = `${intValue === 0 ? 0 : intValue || ''}`;\n      }\n    },\n    checkAmount(rule, value, cb) {\n      if (parseInt(value) === 0 && parseInt(this.budgetForm.cogs) === 0) {\n        return cb(this.$t('budgetBudgetAmountCOGSLimit'));\n      }\n      cb();\n    },\n    checkCogs(rule, value, cb) {\n      if (this.mode === 1 && value <= 0) { // add\n        return cb(this.$t('budgetCogsMustbePositive'));\n      }\n      if (parseInt(value) === 0 && parseInt(this.budgetForm.amount) === 0) {\n        return cb(this.$t('budgetBudgetAmountCOGSLimit'));\n      }\n      cb();\n    },\n    confirmSave() {\n      if (this.loading) {\n        return;\n      }\n      this.$refs.monthlyBudgetForm.validate(validate => {\n        if (validate) {\n          this.loading = true;\n          const params = formatParams({\n            basic_info: {\n              budget_id: this.basicInfo.budget_id,\n              amount: Number(this.budgetForm.amount),\n              cogs: Number(this.budgetForm.cogs),\n              ...getSomeKeys(this.budgetForm, ['monthly_item_type', 'period', 'comment', 'adjust_method'])\n            },\n            attachment_list: this.budgetForm.attachment_list\n          });\n          if (this.budgetForm.adjust_method === 2) {\n            params.basic_info.reallocate_budget_id = this.budgetForm.reallocate_budget_id;\n          }\n          addMonthlyBudget(params).then(resp => {\n            if (resp.retcode !== 0) {\n              this.$message.error(resp.info);\n            } else {\n              this.$message.success('Success');\n              this.$emit('close');\n              this.$emit('refresh');\n            }\n            this.loading = false;\n          }).catch(() => { this.loading = false; });\n        }\n      });\n    },\n    confirmClose() {\n      this.$emit('close');\n    },\n    uploadSuccess(res) {\n      this.budgetForm.attachment_list.push({ ...res.data, status: 1 });\n    },\n    deleteAttachment(index) {\n      this.budgetForm.attachment_list.splice(index, 1);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  .el-input, .el-select, .el-textarea {\n    max-width: 200px;\n  }\n  .large-btn {\n    width: 120px;\n  }\n</style>\n<style lang=\"scss\">\n.addBudgetDialog-wrapper{\n  .el-dialog__header {\n    padding: 16px 24px;\n    box-shadow: 1px 1px 10px 1px #e8e8e8;\n  }\n  .el-dialog__body{\n    padding: 0px 32px;\n  }\n  .el-form-item__label{\n    word-break: break-word;\n  }\n  &.pms-ele-ui{\n    .list-btn {\n      width: auto;\n      height: auto;\n      padding: 8px 16px;\n      line-height: 16px;\n      font-size: 14px;\n      display: inline-block;\n      background-color: #3d6ed1;\n      color: #fff;\n      border-radius: 3px;\n      margin: 0px;\n      border: 1px solid transparent;\n      cursor: pointer;\n      & ~ .list-btn {\n        margin-left: 8px;\n      }\n      &.white {\n        background-color: #fff;\n        color: #333;\n        border: 1px solid #d9d9d9;\n      }\n    }\n  }\n  .el-textarea__inner {\n    padding: 1px 1px 1px 3px;\n    border-radius: 0;\n    background-color: #f0f3fa;\n  }\n}\n</style>\n<style lang=\"scss\" scoped>\n.addBudgetDialog-wrapper{\n  .main-content{\n    height: 400px;\n    overflow: auto;\n  }\n  .footer-wrapper{\n    padding:16px 0;\n  }\n}\n\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/budget/addBudgetLineDialog.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"addBudget\" is not PascalCase.","line":51,"column":9,"nodeType":"Literal","endLine":51,"endColumn":20,"fix":{"range":[1691,1700],"text":"AddBudget"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <el-dialog\n    :title=\"$t('budget.addBudgetLine')\"\n    width=\"800px\"\n    :visible.sync=\"dialogVisible\"\n    :before-close=\"confirmClose\"\n    :show-close=\"false\"\n    class=\"pms-ui\"\n  >\n    <el-container>\n      <el-form ref=\"budgetLineForm\" :model=\"budgetForm\" :rules=\"rules\" label-width=\"200px\">\n        <el-form-item\n          :prop=\"item.field\"\n          v-for=\"item in createSchema\"\n          :key=\"item.field\"\n          :required=\"item.required\"\n          :class=\"item.class || ''\"\n          :label=\"item.label\"\n        >\n          <el-select :disabled=\"!!item.disabled\" v-model=\"budgetForm[item.field]\">\n            <el-option\n              v-for=\"option in item.options || []\"\n              :key=\"option.value\"\n              :label=\"option.label\"\n              :value=\"option.value\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n      </el-form>\n      <el-footer align=\"center\">\n        <el-button :loading=\"loading\" class=\"dialog-list-btn\" @click=\"confirmSave\">{{\n          $t('approvalFlow.save')\n        }}</el-button>\n        <el-button :loading=\"loading\" class=\"dialog-list-btn large-btn\" @click=\"confirmSubmit\">{{\n          $t('purchaseRequest.submit')\n        }}</el-button>\n        <el-button class=\"dialog-list-btn\" @click=\"confirmClose\">{{ $t('purchaseRequest.close') }}</el-button>\n      </el-footer>\n    </el-container>\n  </el-dialog>\n</template>\n\n<script>\nimport moment from 'moment';\nimport { BudgetType } from '@/utils/constant';\nimport { getBrandList } from '@/api/brand';\nimport { saveBudgetLine, getCatClusterCode } from '@/api/budgetLine';\nimport { defaultEBSCompanyCodeForRegion } from './constant';\n\nexport default {\n  name: 'addBudget',\n  data() {\n    return {\n      budgetForm: {\n        budget_type: 2,\n        country: '',\n        brand_id: '',\n        effective_time: '',\n        cat_cluster_code: '',\n        company_code: ''\n      },\n      rules: {\n        budget_type: { required: true, message: 'Budget Type is required', trigger: 'blur' },\n        country: { required: true, type: 'string', trigger: 'blur' },\n        brand_id: { required: true, message: 'Brand is required', trigger: 'blur' },\n        cat_cluster_code: { required: true, type: 'string', message: 'Category Cluster is required', trigger: 'blur' },\n        company_code: { required: true, type: 'string', message: 'EBS Company Code is required', trigger: 'blur' }\n      },\n      dialogVisible: false,\n      loading: false,\n      catCluster: [],\n      brandList: []\n    };\n  },\n  props: {\n    visible: {\n      default: false\n    }\n  },\n  computed: {\n    countryList() {\n      return [...new Set([...this.$store.getters.countryList.map(item => item.country)])];\n    },\n    createSchema() {\n      return [\n        {\n          disabled: true,\n          field: 'budget_type',\n          required: true,\n          label: this.$t('budget.budgetType'),\n          options: BudgetType\n        },\n        {\n          field: 'country',\n          required: true,\n          label: this.$t('purchaseRequest.region'),\n          options: this.countryList.map(item => ({ label: item, value: item }))\n        },\n        {\n          field: 'company_code',\n          required: true,\n          label: this.$t('commonEBSCompanyCode'),\n          options: [\n            { label: 'STDVN', value: 'STDVN' },\n            { label: 'SRVN', value: 'SRVN' }\n          ],\n          hidden: String(this.budgetForm.country).toLowerCase() !== 'vn'\n        },\n        { field: 'brand_id', required: true, label: this.$t('budget.brand'), options: this.brandList },\n        {\n          field: 'cat_cluster_code',\n          required: true,\n          label: this.$t('budget.categoryCluster'),\n          options: this.catCluster\n        }\n      ].filter(item => !item.hidden);\n    }\n  },\n  watch: {\n    '$props.visible': {\n      handler(now) {\n        this.budgetForm = {\n          budget_type: 2,\n          country: '',\n          brand_id: '',\n          effective_time: '',\n          cat_cluster_code: '',\n          company_code: ''\n        };\n        this.loading = false;\n        this.$refs.budgetLineForm && this.$refs.budgetLineForm.clearValidate();\n        this.dialogVisible = now;\n      },\n      immediate: true\n    },\n    'budgetForm.country'(country) {\n      this.budgetForm.brand_id = '';\n      this.budgetForm.cat_cluster_code = '';\n      this.budgetForm.company_code = '';\n      this.brandList = [];\n      this.catCluster = [];\n      if (!this.visible || !country) return;\n      getBrandList({ pageno: 1, count: 200, status: 0, country }).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.brandList = (resp.data.brand_list || []).map(item => ({ label: item.brand_name, value: item.brand_id }));\n        }\n      });\n      getCatClusterCode({ country }).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.catCluster = (resp.data.cat_cluster || []).map(item => ({\n            label: item.cluster_code,\n            value: item.cluster_code\n          }));\n        }\n      });\n    }\n  },\n  methods: {\n    moment,\n    confirmSave() {\n      if (this.loading) {\n        return;\n      }\n      if (!this.budgetForm.country) {\n        return this.$message.error('country is required');\n      }\n      this.loading = true;\n      const params = { ...this.budgetForm, status: 1 };\n      if (String(params.country).toLowerCase() !== 'vn') {\n        params.company_code = defaultEBSCompanyCodeForRegion[`${this.budgetForm.country}`.toLowerCase()];\n      }\n      saveBudgetLine(params)\n        .then(resp => {\n          if (resp.retcode !== 0) {\n            this.$message.error(resp.info);\n          } else {\n            this.$message.success('Success');\n            this.$emit('close');\n            this.$emit('refresh');\n          }\n          this.loading = false;\n        })\n        .catch(() => {\n          this.loading = false;\n        });\n    },\n    confirmSubmit() {\n      if (this.loading) {\n        return;\n      }\n      this.$refs.budgetLineForm.validate(validate => {\n        if (validate) {\n          this.loading = true;\n          const params = { ...this.budgetForm, status: 2 };\n          if (String(params.country).toLowerCase() !== 'vn') {\n            params.company_code = defaultEBSCompanyCodeForRegion[`${this.budgetForm.country}`.toLowerCase()];\n          }\n          saveBudgetLine(params)\n            .then(resp => {\n              if (resp.retcode !== 0) {\n                this.$message.error(resp.info);\n              } else {\n                this.$confirm('Do you wanna add a new Monthly Budget now', 'Success', {\n                  confirmButtonText: 'Now',\n                  cancelButtonText: 'Not Now'\n                })\n                  .then(() => {\n                    this.$router.push(`/admin/budget/line/detail/${resp.data.budget_line.id}?activeTab=monthlyDetail`);\n                  })\n                  .catch(() => {\n                    this.$emit('close');\n                    this.$emit('refresh');\n                  });\n              }\n              this.loading = false;\n            })\n            .catch(() => {\n              this.loading = false;\n            });\n        }\n      });\n    },\n    confirmClose() {\n      const hasValue = this.createSchema\n        .filter(item => !item.disabled)\n        .some(item => {\n          const value = this.budgetForm[item.field];\n          return value !== '' && value !== null && value !== undefined;\n        });\n      if (hasValue) {\n        this.$confirm('', 'Confirm to Close?', {\n          confirmButtonText: 'Yes',\n          cancelButtonText: 'No'\n        })\n          .then(() => {\n            this.$emit('close');\n          })\n          .catch(() => {});\n      } else {\n        this.$emit('close');\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.el-input,\n.el-select {\n  max-width: 200px;\n}\n.large-btn {\n  width: 120px;\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/budget/brandList.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":14,"column":66,"nodeType":"VIdentifier","messageId":"deprecated","endLine":14,"endColumn":72}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div id=\"app-container\" class='inbound-planning-list rule-list pms-ui'>\n    <el-container>\n      <el-header>\n        <el-tabs tab-position='bottom' class='brand-header' v-model=\"searchForm.country\" :before-leave=\"beforeTabClick\">\n          <el-tab-pane v-for='item in countryList' :key='item' :label=\"item\" :name=\"item\"></el-tab-pane>\n        </el-tabs>\n        <div v-if=\"canEdit\" class='create-btn' @click='createBrand'>\n          <span class='sprite-entry-add add-btn'></span>\n          {{$t('budget.newBrand')}}\n        </div>\n      </el-header>\n      <el-main>\n        <el-form label-width=\"120px\" :model=\"searchForm\" @submit.native.prevent='onSearch'>\n          <el-row>\n            <el-col v-for='item in searchSchema' :key='item.field' :span='item.width' :offset='item.offset || 0'>\n              <el-form-item :class='item.class || \"\"' :label=\"item.label\">\n                <el-select v-if='item.type === \"select\"' @change='onSearch' v-model=\"searchForm[item.field]\">\n                  <el-option v-for='option in item.options || []' :key='option.value' :label='option.label' :value='option.value'></el-option>\n                </el-select>\n                <el-input v-if='item.type === \"input\"' v-model=\"searchForm[item.field]\"></el-input>\n              </el-form-item>\n            </el-col>\n          </el-row>\n          <el-row>\n            <el-form-item class='right-action-btn'>\n              <div class='list-btn' @click='onSearch'>{{$t('purchaseRequest.search')}}</div>\n              <div class='list-btn clear-btn' @click=\"onReset\">{{$t('purchaseRequest.clear')}}</div>\n              <el-button native-type='submit' class='hidden-btn'></el-button>\n            </el-form-item>\n          </el-row>\n        </el-form>\n        <el-table :data=\"brandList\" border size=\"mini\" v-loading=\"loading\" @row-click='rowClick'>\n          <el-table-column align='center' prop='brand_id' :label='$t(\"budget.brandID\")' min-width='auto'></el-table-column>\n          <el-table-column align='center' prop='brand_name' :label='$t(\"budget.brandName\")' min-width='auto'></el-table-column>\n          <el-table-column align='center' :label='$t(\"purchaseRequest.status\")' min-width='auto'>\n            <template slot-scope='scope'>\n              <div :class='scope.row.status === 0 ? \"status-active\" : \"status-disable\"'>{{scope.row.status === 0 ? 'Available' : 'Disable'}}</div>\n            </template>\n          </el-table-column>\n          <el-table-column column-key='action' align='center' :label='$t(\"purchaseRequest.action\")' min-width='auto'>\n            <template slot-scope='scope'>\n              <el-button class='list-btn' v-if=\"canEdit\" @click='editBrand(scope.row)'>{{$t('userRole.userList.edit')}}</el-button>\n              <el-button class='list-btn' @click='changeBrandStatus(scope.row, 1)' v-if='scope.row.status === 0 && canEdit'>{{$t('userRole.userList.disable')}}</el-button>\n              <el-button class='list-btn' @click='changeBrandStatus(scope.row, 0)' v-if='scope.row.status === 1 && canEdit'>{{$t('budget.available')}}</el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n        <section class='pagination-center'>\n          <el-pagination background layout=\"sizes, prev, pager, next\" :current-page='pageIndex' :page-sizes='[10, 20, 50, 100]' :total.sync=\"total\" :page-size=\"pageSize\" @size-change='handleSizeChange' @current-change=\"handleChangePage\"></el-pagination>\n        </section>\n      </el-main>\n    </el-container>\n    <add-brand-dialog :mode='dialogMode' :brandInfo='activeBrand' @refresh='onSearch' @close='closeDetailDialog' :visible='dialogShow'></add-brand-dialog>\n  </div>\n</template>\n\n<script>\nimport { getBrandList, changeBrandStatus } from '@/api/brand';\nimport { formatParams } from '@/utils/formatParams';\nimport { BrandStatusList, Permission } from '@/utils/constant';\nimport AddBrandDialog from './addBrandDialog';\nimport moment from 'moment';\nimport { hasPermission } from '../../utils/permission';\n\nexport default {\n  data() {\n    return {\n      canEdit: false,\n      searchForm: { country: this.$store.getters.country, status: '' },\n      brandList: [],\n      loading: false,\n      pageIndex: 1,\n      total: 0,\n      pageSize: 10,\n      dialogShow: false,\n      dialogMode: 1,\n      activeBrand: {}\n    };\n  },\n  components: {\n    AddBrandDialog\n  },\n  computed: {\n    countryList() {\n      return [...new Set([...this.$store.getters.countryList.map(item => item.country)])];\n    },\n    searchSchema() {\n      return [\n        { type: 'input', width: 6, field: 'brand_name', label: this.$t('budget.brandName') },\n        { type: 'input', width: 6, field: 'brand_id', label: this.$t('budget.brandID') },\n        { type: 'select', width: 6, field: 'status', label: this.$t('purchaseRequest.status'), options: BrandStatusList }\n      ];\n    }\n  },\n  methods: {\n    beforeTabClick(country) {\n      this.onReset();\n      this.closeDetailDialog();\n      this.searchForm.country = country;\n      this.onSearch();\n      return true;\n    },\n    onReset() {\n      this.searchForm = { country: this.searchForm.country, status: '' };\n    },\n    handleChangePage(pageIndex) {\n      this.pageIndex = pageIndex;\n      this.onSearch('', pageIndex);\n    },\n    changeBrandStatus(row, action) {\n      // 0-available, 1-disable\n      changeBrandStatus({ brand_id: row.brand_id, action }).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.$message.success('Success');\n          row.status = action;\n        }\n      });\n    },\n    handleSizeChange(size) {\n      this.pageSize = size;\n      this.onSearch();\n    },\n    onSearch(event, pageIndex) {\n      if (typeof pageIndex !== 'number') {\n        this.pageIndex = 1;\n      }\n      const params = {\n        pageno: this.pageIndex,\n        count: this.pageSize,\n        ...formatParams(this.searchForm, {})\n      };\n      this.loading = true;\n      getBrandList(params).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.total = resp.data.total;\n          this.brandList = resp.data.brand_list || [];\n        }\n        this.loading = false;\n      }).catch(() => { this.loading = false; });\n    },\n    createBrand() {\n      this.dialogMode = 1;\n      this.activeBrand = {\n        region: this.searchForm.country\n      };\n      this.dialogShow = true;\n    },\n    editBrand(row) {\n      this.dialogMode = 2;\n      this.activeBrand = row;\n      this.dialogShow = true;\n    },\n    closeDetailDialog() {\n      this.dialogShow = false;\n      this.activeBrand = {};\n    },\n    rowClick(row, column, event) {\n      if (column.columnKey !== 'action') {\n        this.dialogMode = 3;\n        this.activeBrand = {\n          ...row,\n          create_date: moment(row.ctime * 1000).format('HH:mm DD/MM/YYYY')\n        };\n        this.dialogShow = true;\n      }\n    }\n  },\n  created() {\n    this.canEdit = hasPermission(Permission.BRAND_LIST_EDIT);\n    this.onSearch();\n  }\n};\n</script>\n\n<style scoped>\n  .brand-header {\n    /* margin-top: 11px; */\n    height: 60px;\n    max-width: 75%;\n  }\n  .add-btn {\n    display: inline-block;\n    margin: 0 5px -10px -20px;\n  }\n  .right-action-btn {\n    float: right;\n  }\n  .hidden-btn {\n    width: 0;\n    height: 0;\n    visibility: hidden;\n  }\n  .pagination-center {\n    display: flex;\n    justify-content: center;\n    margin-top: 20px;\n  }\n  .status-disable {\n    color: #b9504f;\n  }\n  .status-active {\n    color: #7dba7a;\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/budget/budgetAttachment.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/budget/budgetSpend/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/budget/budgetSpend/list.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/budget/budgetTracking/budgetViewport.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/budget/budgetTracking/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/budget/categoryLineDetail.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/budget/categoryLineList.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/budget/constant.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/budget/lineBasicDetail.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/budget/lineDetail.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/budget/lineList.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":14,"column":65,"nodeType":"VIdentifier","messageId":"deprecated","endLine":14,"endColumn":71},{"ruleId":"vue/no-unused-components","severity":2,"message":"The \"CategoryViewport\" component has been registered but not used.","line":123,"column":5,"nodeType":"Property","endLine":123,"endColumn":21}],"errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class='budget-line pms-ui'>\n    <el-container>\n      <el-header>\n        <el-tabs class='budget-header' tab-position='bottom' v-model=\"activeTab\" :before-leave='countryChange'>\n          <el-tab-pane v-for='item in countryList' :key='item' :label='item' :name='item'></el-tab-pane>\n        </el-tabs>\n        <div v-if=\"canEdit\" class='create-btn' @click='onCreateBudget'>\n          <span class='sprite-entry-add add-btn'></span>\n          {{$t('budget.newBudget')}}\n        </div>\n      </el-header>\n      <el-main v-if='!categoryViewport'>\n        <el-form :model=\"searchForm\" label-width=\"90px\" @submit.native.prevent='onSearch'>\n          <el-row>\n            <el-col v-for='item in searchSchema' :key='item.field' :span='item.width' :offset='item.offset || 0'>\n              <el-form-item :label-width=\"`${item.type === 'daterange' ? 160 : 140}px`\" :class='item.class || \"\"' :label=\"item.label\">\n                <el-select v-if='item.type === \"select\"' @change='onSearch' v-model=\"searchForm[item.field]\" :disabled=\"!!item.disabled\">\n                  <el-option v-for='option in item.options || []' :key='option.value' :label='option.label' :value='option.value'></el-option>\n                </el-select>\n                <el-input v-if='item.type === \"input\"' v-model=\"searchForm[item.field]\"></el-input>\n              </el-form-item>\n            </el-col>\n          </el-row>\n          <el-row>\n            <el-col :span=\"18\">\n              <mass-upload v-if=\"canEdit\" :actionUrl='uploadPath' :config='uploadConfig'></mass-upload>\n              <mass-upload v-if=\"canEdit\" :actionUrl='monthlyUploadPath' :config='monthlyUploadConfig'></mass-upload>\n            </el-col>\n            <el-col :span=\"6\">\n              <el-form-item class='right-action-btn'>\n                <div class='list-btn' @click='onSearch'>{{$t('purchaseRequest.search')}}</div>\n                <div class='list-btn clear-btn' @click=\"() => onReset()\">{{$t('purchaseRequest.clear')}}</div>\n                <el-button native-type='submit' class='hidden-btn'></el-button>\n              </el-form-item>\n            </el-col>\n          </el-row>\n        </el-form>\n        <el-table @row-click='rowClick' :data='budgetList' border>\n          <el-table-column prop='budget_id' :label=\"$t('budget.budgetID')\"></el-table-column>\n          <el-table-column prop='brand_name' :label=\"$t('budget.brandName')\"></el-table-column>\n          <el-table-column prop='cat_cluster_code' :label=\"$t('budget.categoryCluster')\"></el-table-column>\n          <el-table-column prop='budget_type' :label=\"$t('budget.budgetType')\">\n            <template slot-scope=\"scope\">\n              {{(BudgetType.find(item => item.value === scope.row.budget_type) || {}).label || '\\\\'}}\n            </template>\n          </el-table-column>\n          <el-table-column prop='status' :label=\"$t('userRole.roleList.status')\">\n            <template slot-scope=\"scope\">\n              {{(BudgetStatus.find(item => item.value === scope.row.status) || {}).label || '\\\\'}}\n            </template>\n          </el-table-column>\n          <el-table-column :label=\"$t('budget.effectiveTime')\">\n            <template slot-scope=\"scope\">\n              {{moment(scope.row.effective_time * 1000).format('YYYY-MM-DD HH:mm:ss')}}\n            </template>\n          </el-table-column>\n          <el-table-column prop='created_by' :label=\"$t('approvalFlow.createdBy')\"></el-table-column>\n          <el-table-column :label=\"$t('opHistory.ctime')\">\n            <template slot-scope=\"scope\">\n              {{moment(scope.row.ctime * 1000).format('YYYY-MM-DD HH:mm:ss')}}\n            </template>\n          </el-table-column>\n          <el-table-column :label=\"$t('purchaseOrder.modifyTime')\">\n            <template slot-scope=\"scope\">\n              {{moment(scope.row.mtime * 1000).format('YYYY-MM-DD HH:mm:ss')}}\n            </template>\n          </el-table-column>\n        </el-table>\n        <section class='pagination-center'>\n          <el-pagination :page-sizes='[10, 20, 50, 100]' background layout=\"sizes, prev, pager, next\" :current-page='pageIndex' :total.sync=\"total\" :page-size=\"pageSize\" @current-change=\"handleChangePage\" @size-change='handleSizeChange'></el-pagination>\n        </section>\n      </el-main>\n      <add-budget-line-dialog :visible='budgetDialogShow' @close='closeBudgetDialog' @refresh='onSearch'></add-budget-line-dialog>\n    </el-container>\n  </div>\n</template>\n\n<script>\nimport { formatParams } from '@/utils/formatParams';\nimport { getBudgetLineList } from '@/api/budgetLine';\nimport { BudgetStatus, BudgetType, Permission } from '@/utils/constant';\nimport AddBudgetLineDialog from './addBudgetLineDialog';\nimport CategoryViewport from './categoryLineList';\nimport MassUpload from '@/components/upload/listMassUpload';\nimport moment from 'moment';\nimport { hasPermission } from '@/utils/permission';\nimport { defaultEBSCompanyCodeForRegion } from './constant';\n\nconst moduleName = 'BUDGET_LINE';\n\nexport default {\n  data() {\n    return {\n      activeTab: this.$store.getters.country,\n      searchForm: {\n        budget_id: '',\n        brand_name__icontains: '',\n        status: '',\n        created_by: '',\n        budget_type: '',\n        cat_cluster_code__icontains: '',\n        company_code: defaultEBSCompanyCodeForRegion[`${this.$store.getters.country}`.toLowerCase()]\n      },\n      lastSearchForm: {},\n      budgetList: [],\n      dialogMode: '',\n      budgetDialogShow: false,\n      activeUnit: {},\n      pageIndex: 1,\n      pageSize: 10,\n      total: 0,\n      BudgetStatus,\n      BudgetType,\n      categoryViewport: false,\n      canEdit: false,\n      uploadPath: '/api/budget_config/budget_line/mass_upload/',\n      monthlyUploadPath: '/api/budget_config/budget_line/monthly/item/mass_add/'\n    };\n  },\n  components: {\n    AddBudgetLineDialog,\n    CategoryViewport,\n    MassUpload\n  },\n  computed: {\n    defaultCompanyCode() {\n      return defaultEBSCompanyCodeForRegion[`${this.activeTab}`.toLowerCase()];\n    },\n    uploadConfig() {\n      return {\n        btnText: this.$t('budget.massUploadBudgetLine'),\n        templateLink: '/admin/data/budgetLineTemplate.xlsx'\n      };\n    },\n    monthlyUploadConfig() {\n      return {\n        btnText: this.$t('budget.massUploadMonthlyBudget'),\n        templateLink: '/admin/data/monthlyBudgetTemplate.xlsx'\n      };\n    },\n    countryList() {\n      return [...new Set([...this.$store.getters.countryList.map(item => item.country)])];\n    },\n    searchSchema() {\n      const defaultCompanyCodeList = [{ label: this.defaultCompanyCode, value: this.defaultCompanyCode }];\n      return [\n        { type: 'input', offset: 0, width: 7, field: 'budget_id', label: this.$t('budget.budgetID') },\n        { type: 'input', offset: 1, width: 7, field: 'brand_name__icontains', label: this.$t('budget.brandName') },\n        { type: 'select', offset: 1, width: 7, field: 'status', label: this.$t('purchaseRequest.status'), options: BudgetStatus },\n        { type: 'input', offset: 0, width: 7, field: 'created_by', label: this.$t('approvalFlow.createdBy') },\n        { type: 'select', offset: 1, width: 7, field: 'budget_type', label: this.$t('budget.budgetType'), options: BudgetType },\n        { type: 'input', offset: 1, width: 7, field: 'cat_cluster_code__icontains', label: this.$t('budget.categoryCluster') },\n        { type: 'select', offset: 1, width: 7, field: 'company_code', label: this.$t('commonEBSCompanyCode'), options: String(this.activeTab).toLowerCase() !== 'vn' ? defaultCompanyCodeList : defaultCompanyCodeList.concat([{ label: 'SRVN', value: 'SRVN' }]) }\n      ];\n    }\n  },\n  methods: {\n    moment,\n    onReset(country) {\n      this.searchForm.budget_type = '';\n      this.searchForm.status = '';\n      this.searchForm.company_code = defaultEBSCompanyCodeForRegion[`${country || this.activeTab}`.toLowerCase()]; ;\n    },\n    onCreateBudget() {\n      this.dialogMode = 'create';\n      this.budgetDialogShow = true;\n    },\n    cacheSearchCondition(form) {\n      this.$store.commit('setActiveTab', { module: moduleName, tab: this.activeTab });\n      this.$store.commit('setSearchForm', {\n        module: moduleName,\n        form: form || null,\n        field: this.activeTab\n      });\n    },\n    rowClick(row) {\n      this.cacheSearchCondition(this.lastSearchForm);\n      this.$router.push(`/admin/budget/line/detail/${row.id}`);\n      // const open = window.open();\n      // open.opener = null;\n      // open.location = `/admin/budget/line/detail/${row.id}`;\n    },\n    handleSizeChange(size) {\n      this.pageSize = size;\n      this.onSearch();\n    },\n    handleChangePage(pageIndex) {\n      this.pageIndex = pageIndex;\n      this.onSearch('', pageIndex);\n    },\n    onSearch(event, pageIndex, country) {\n      if (typeof pageIndex !== 'number') {\n        this.pageIndex = 1;\n      }\n      const params = {\n        skip: (this.pageIndex - 1) * this.pageSize,\n        limit: this.pageSize,\n        country: country || this.activeTab,\n        ...formatParams(this.searchForm)\n      };\n      getBudgetLineList(params).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.total = resp.data.total;\n          this.budgetList = resp.data.budget_line || [];\n          this.lastSearchForm = { ...params, pageIndex: this.pageIndex, pageSize: this.pageSize };\n        }\n      });\n    },\n    closeBudgetDialog() {\n      this.activeUnit = {};\n      this.budgetDialogShow = false;\n    },\n    countryChange(country) {\n      this.onReset(country);\n      if (!this.categoryViewport) {\n        this.onSearch('', '', country);\n      }\n      return true;\n    }\n  },\n  created() {\n    this.canEdit = hasPermission(Permission.EDIT_BUDGET);\n    const cacheConditionObj = this.$store.getters.searchForm[moduleName];\n    if (cacheConditionObj && cacheConditionObj.activeTab) {\n      const cacheCondition = cacheConditionObj[cacheConditionObj.activeTab];\n      this.pageIndex = cacheCondition.pageIndex;\n      this.pageSize = cacheCondition.pageSize;\n      this.activeTab = cacheConditionObj.activeTab;\n      ['budget_id', 'brand_name__icontains', 'status', 'created_by', 'budget_type', 'cat_cluster_code__icontains'].forEach(key => {\n        if (cacheCondition[key]) {\n          this.searchForm[key] = cacheCondition[key];\n        }\n      });\n    }\n    this.onSearch('', this.pageIndex);\n  }\n};\n</script>\n\n<style scoped>\n  .budget-header {\n    /* margin-top: 11px; */\n    height: 60px;\n    max-width: 75%;\n  }\n  .add-btn {\n    display: inline-block;\n    margin: 0 5px -10px -20px;\n  }\n  .disabled-btn {\n    background-color: #f56c6c;\n  }\n  .right-action-btn {\n    float: right;\n  }\n  .hidden-btn {\n    width: 0;\n    height: 0;\n    visibility: hidden;\n  }\n  .pagination-center {\n    display: flex;\n    justify-content: center;\n    margin-top: 20px;\n  }\n  .cell .list-btn + .list-btn {\n    margin-top: 10px;\n  }\n  .viewport-col {\n    height: 32px;\n    line-height: 32px;\n    text-align: left;\n    font-size: 24px;\n  }\n  .active-viewport {\n    color: #5c84d8;\n  }\n  .transform-viewport {\n    cursor: pointer;\n    color: #dadada;\n    transform: rotate(90deg);\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/budget/lineMonthlyDetail.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/budget/monthlyBudgetList.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/budget/requestDetail.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/budget/requestList.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/budget/requestListTap.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/budget/requestPendingApprovals.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/crReport/actionLog.vue","messages":[{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"cr_id\" is not in camelCase.","line":69,"column":5,"nodeType":"Property","endLine":71,"endColumn":6}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-dialog\n    :visible.sync=\"dialogVisible\"\n    width=\"800px\"\n    lock-scroll\n    custom-class=\"pms-dialog\"\n    :title=\"$t('commonActionLog')\"\n    @close=\"onClose\"\n  >\n    <section v-loading=\"loading\" class=\"log-item-wrapper pms-log-table\">\n      <div v-if=\"tableList.length\">\n        <div class=\"log-item\" v-for=\"(log, index) in tableList\" :key=\"index\">\n          <div v-if=\"log.type === 1\" class=\"log-item-creation\">\n            <span>{{$t('commonLogRequestCreation', { operator:log.operator || 'N/A', mtime: moment(log.modify_time * 1000).format('YYYY-MM-DD HH:mm') })}}</span>\n          </div>\n          <div v-else>\n            <span class=\"log-item-operator\">{{log.operator || 'N/A'}}</span>\n            <span class=\"log-item-time\">{{moment(log.modify_time * 1000).format('YYYY-MM-DD HH:mm')}}</span>\n            <el-table class=\"log-table\" :data=\"log.content\">\n              <el-table-column :label=\"$t('commonLogContent')\">\n                <template slot-scope=\"scope\">\n                  <span class=\"log-field\">{{scope.row.field}}</span>\n                  <span\n                    class=\"log-action\"\n                    :class=\"{'red': scope.row.action === 3}\"\n                  >{{formatAction(scope.row.action)}}</span>\n                </template>\n              </el-table-column>\n              <el-table-column :label=\"$t('commonLogBefore')\">\n                <template\n                  slot-scope=\"scope\"\n                >{{scope.row.before === -1 || scope.row.before === ''? 'N/A' : formatContent(scope.row.field, scope.row.before)}}</template>\n              </el-table-column>\n              <el-table-column :label=\"$t('commonLogAfter')\">\n                <template\n                  slot-scope=\"scope\"\n                >{{scope.row.after === -1 || scope.row.after === '' ? 'N/A' : formatContent(scope.row.field,scope.row.after)}}</template>\n              </el-table-column>\n            </el-table>\n          </div>\n        </div>\n      </div>\n      <div v-else class=\"no-data\">{{$t('commonNoData')}}</div>\n    </section>\n    <section slot=\"footer\">\n      <el-pagination\n        small\n        layout=\"slot, prev, next\"\n        background\n        :total=\"total\"\n        :page-size=\"pager.count\"\n        @current-change=\"handleCurrentChange\"\n        class=\"pms-ele-ui pms-pagination pms-float-left\"\n      >\n        <span class=\"pagination-info\">{{$t('commonPagination', { firstItem, lastItem, total})}}</span>\n      </el-pagination>\n      <el-button class=\"list-btn\" @click=\"onClose\">{{$t('commonOK')}}</el-button>\n    </section>\n  </el-dialog>\n</template>\n\n<script>\nimport { crReportActionLog } from '@/api/crReport';\nimport { crReportActions, CRLStatusList } from '@/utils/constant';\nimport moment from 'moment';\n\nexport default {\n  props: {\n    cr_id: {\n      required: true\n    },\n    visible: {\n      type: Boolean,\n      required: true,\n      default: false\n    }\n  },\n  data() {\n    return {\n      pager: {\n        count: 10,\n        page_no: 1\n      },\n      total: 0,\n      dialogVisible: false,\n      tableList: [],\n      loading: false\n    };\n  },\n  watch: {\n    visible(value) {\n      this.dialogVisible = value;\n      if (value) {\n        this.getActionLog();\n      }\n    }\n  },\n  computed: {\n    firstItem() {\n      return this.pager.count * (this.pager.page_no - 1) + 1;\n    },\n    lastItem() {\n      return (\n        this.pager.count * (this.pager.page_no - 1) + this.tableList.length\n      );\n    }\n  },\n  methods: {\n    moment,\n    formatAction(action) {\n      const output = (\n        crReportActions.find(item => item.value === action) || {\n          label: ''\n        }\n      ).label;\n      if (output) {\n        return this.$t(output);\n      } else {\n        return '';\n      }\n    },\n    formatStatusRoles(obj) {\n      const statusText = (\n        CRLStatusList.find(\n          item => item.value === obj.cr_status\n        ) || { label: '' }\n      ).label;\n      // role name 为空时不展示\n      const roleName = obj.role_name;\n      return statusText ? (roleName ? `${this.$t(statusText)}: ${roleName}` : this.$t(statusText)) : '';\n    },\n    formatStatus(value) {\n      const statusText = (\n        CRLStatusList.find(\n          item => item.value === value\n        ) || { label: '' }\n      ).label;\n      return statusText ? this.$t(statusText) : '';\n    },\n    formatContent(field, value) {\n      if (field === 'status and roles') {\n        return this.formatStatusRoles(value);\n      }\n      if (field === 'status') {\n        return this.formatStatus(value);\n      } else {\n        return value;\n      }\n    },\n    handleCurrentChange(index) {\n      this.pager.page_no = index;\n      this.getActionLog();\n    },\n    async getActionLog() {\n      try {\n        this.loading = true;\n        const params = {\n          cr_id: this.cr_id,\n          ...this.pager\n        };\n        const res = await crReportActionLog(params);\n        if (res && res.retcode === 0) {\n          this.tableList = res.data.change_list || [];\n          this.total = res.data.total;\n        } else {\n          this.$message({ type: 'error', message: res.info });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loading = false;\n      }\n    },\n    onClose() {\n      this.$emit('close');\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n@import \"~@/styles/variables.scss\";\n.log-item-wrapper {\n  max-height: 500px;\n  overflow: auto;\n  .log-item {\n    font-size: 14px;\n    margin-top: 24px;\n    &:first-child {\n      margin-top: 0;\n    }\n    .log-item-creation {\n      font-weight: bold;\n      color: $black;\n    }\n    .log-item-operator,\n    .log-item-time {\n      color: rgba(51, 51, 51, 0.65);\n    }\n    .log-item-time {\n      margin-left: 4px;\n    }\n    .log-table {\n      margin-top: 8px;\n    }\n    .log-action {\n      font-size: 12px;\n      color: #55cc77;\n      padding: 4px;\n      margin-left: 8px;\n      background: #ebf9ef;\n      border-radius: 2px;\n      border-radius: 2px;\n      &.red {\n        color: #ee4d2d;\n        background: #fff1f0;\n      }\n    }\n  }\n}\n</style>\n<style lang=\"scss\">\n@import \"~@/styles/common.scss\"; // ~@ = @ = 'src' webpack alias path\n.pms-dialog {\n  .el-dialog__body {\n    padding: 8px 24px 16px;\n  }\n}\n.pms-log-table {\n  .el-table {\n    .el-table__header-wrapper {\n      th {\n        height: 54px;\n        background-color: #f5f5f5;\n        font-size: 14px;\n        line-height: 1.5em;\n        font-weight: normal;\n        .cell {\n          word-break: break-word;\n        }\n      }\n    }\n    .el-table__body {\n      td {\n        height: 70px;\n        .cell {\n          word-break: break-word;\n        }\n      }\n    }\n  }\n  .no-data {\n    height: 50px;\n    line-height: 50px;\n    text-align: center;\n    color: #757575;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/crReport/detail.vue","messages":[{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":75,"column":40,"nodeType":"ThisExpression","endLine":75,"endColumn":44}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"pms-ele-ui cr-report-detail layout-padding\">\n    <section class=\"detail-header-wrapper\">\n      <div class=\"left-info\">\n        <i class=\"el-icon-arrow-left go-back-icon\" @click=\"goBack\"></i>\n        <span class=\"header-text\">{{ baseInfo.cr_id || ''}}</span>\n        <span class=\"header-status\" :class=\"statusClass[baseInfo.report_status]\">{{formatStatus}}</span>\n        <span class=\"header-status dispute-status\" v-if=\"isDispute\">{{$t('crDispute')}}</span>\n      </div>\n      <section class=\"right-top btn-wrapper\">\n        <el-button\n          class=\"list-btn white-blue\"\n          v-if=\"canOperate && baseInfo.report_status === 1 && !isEdit\"\n          :loading=\"loadingConfirm\"\n          @click=\"onConfirm\"\n        >{{$t('commonConfirm')}}</el-button>\n        <el-button\n          class=\"list-btn white-blue\"\n          v-if=\"!isEdit\"\n          @click=\"showActionDialog\"\n        >{{$t('commonActionLog')}}</el-button>\n        <el-button class=\"list-btn\" v-if=\"canSupplierDispute && !isEdit\" @click=\"onSupplierDispute\" :loading=\"disputeLoading\">{{$t('supplierDispute')}}</el-button>\n        <el-popover placement=\"top\" width=\"320px\" trigger=\"hover\" :content=\"$t('hasSendEmailTips')\" :disabled=\"!hasSendEmail\">\n          <span slot=\"reference\" v-if=\"canSendEmail && !isEdit\">\n          <el-button :loading=\"sendEmailLoading\" :disabled=\"hasSendEmail\" class=\"list-btn\" @click=\"onSendEmail\">{{$t('sendEmail')}}</el-button>\n          </span>\n        </el-popover>\n        <el-button class=\"list-btn\" v-if=\"canOperate && !isEdit\" @click=\"onEdit\">{{$t('commonEdit')}}</el-button>\n        <el-button class=\"list-btn white\" v-if=\"canOperate && isEdit\" @click=\"onCancel\">{{$t('commonCancel')}}</el-button>\n        <el-button class=\"list-btn\" v-if=\"canOperate && isEdit\" :loading=\"saveLoading\" @click=\"onSave(false)\">{{$t('commonSave')}}</el-button>\n        <el-button class=\"list-btn\" v-if=\"canOperate && isEdit\" :loading=\"saveLoading\" @click=\"onSave(true)\">{{$t('commonConfirmSave')}}</el-button>\n        <el-dropdown\n          v-if=\"!isEdit\"\n          class=\"exportGroup-btn\"\n          split-button\n          type=\"primary\"\n          @command=\"onExportContentClick\"\n        >\n          <span>{{$t('commonExport')}}</span>\n          <el-dropdown-menu slot=\"dropdown\">\n            <el-dropdown-item :command=\"btn\" v-for=\"btn in exportBtns\" :key=\"btn.text\">\n              <span>{{$t(btn.text)}}</span>\n            </el-dropdown-item>\n          </el-dropdown-menu>\n        </el-dropdown>\n      </section>\n    </section>\n\n    <div class=\"main-wrapper\">\n      <el-form\n        :model=\"baseInfo\"\n        :rules=\"rules\"\n        ref=\"detailForm\"\n        label-position=\"left\"\n        label-width=\"200px\"\n        class=\"view-mode-form\"\n      >\n        <section class=\"module-block\">\n          <h3 class=\"section-title\">{{$t('CRReportDetailBasicInfo')}}</h3>\n          <el-form-item :label=\"$t(item.label)\" v-for=\"item in basicInfoSchema\" :key=\"item.field\" :loading=\"viewHistoryLoading\">\n            <span v-if=\"item.field === 'statement_id' && baseInfo.statement_id\" class=\"view-statement\" @click=\"viewStatement(baseInfo.statement_id)\">{{baseInfo.statement_id || '/'}}</span>\n            <span v-else>{{formatBasicInfoValue(item.field)}}</span>\n            <span v-if=\"item.field === 'cr_version' && baseInfo.cr_version\" class=\"view-history\" @click=\"viewHistory\">{{$t('CRVersionHistory')}}</span>\n          </el-form-item>\n        </section>\n        <section class=\"module-block\">\n          <h3 class=\"section-title\">{{$t('CRReportDetailChargingFeeList')}}</h3>\n          <el-form-item :label=\"$t('CRReportSalesValue')\" prop=\"sale_value\">\n            <div v-if=\"baseInfo.sale_value_option === 3 && isEdit\">\n              <el-input-number :controls=\"false\" step-strictly\n                  :step=\"0.01\"  :min=\"0\" v-model=\"baseInfo.sale_value\"  class=\"inner_suffix fee-list-input\">\n                <template slot=\"append\">{{currency}}</template>\n              </el-input-number>\n            </div>\n            <span v-else>{{formatValue(this.baseInfo.sale_value) + ` ${currency}`}}</span>\n          </el-form-item>\n          <el-form-item :label=\"$t('CRReportTotalPayment')\">\n            {{formatTotalPayment}}\n          </el-form-item>\n          <el-form-item\n            :label=\"$t('CRReportDetailChargingDetail')\"\n            class=\"pms-ui chargingDetail-form-item\"\n          >\n            <div class=\"charing-detail-block\" v-for=\"key in Object.keys(subFeeListObj)\" :key=\"key\">\n              <p\n                class=\"total-value\"\n              >\n              {{formatSubFeeTotalFee(key)}}\n              </p>\n              <el-table :data=\"subFeeListObj[key] || []\" border class=\"border-table\">\n                <el-table-column :label=\"$t('subFeeName')\" prop=\"sub_fee_name\"></el-table-column>\n                <el-table-column :label=\"$t('subFeeSubFeeType')\">\n                  <template slot-scope=\"scope\">{{formatFeeType(scope.row.sub_fee_type)}}</template>\n                </el-table-column>\n                <el-table-column :label=\"$t('chargingValue')\" prop=\"confirm_value\">\n                  <template slot-scope=\"scope\">\n                    <div v-if=\"!isEdit\">\n                      <span v-if=\"scope.row.option !== 7 || scope.row.confirm_value !== ''\">{{formatValue(scope.row.confirm_value)}}</span>\n                      <span v-else>\n                        /\n                        <i class=\"el-icon-warning warning-icon\"></i>\n                        {{$t('CRReportDetailNeedManualInput')}}\n                      </span>\n                    </div>\n\n                    <div v-else>\n                      <div class=\"pms-flex\">\n                        <span class=\"icon-plus\">+</span>\n                        <el-input-number :controls=\"false\" step-strictly :step=\"0.01\" :min=\"0\"\n                          v-model=\"scope.row.confirm_value\" @change=\"(...argu) => { handleChangeConfirmValue(scope.row, ...argu)}\"></el-input-number>\n                      </div>\n                      <p v-if=\"scope.row.isError\" class=\"error-tips\">{{$t('commonFieldRequired')}}</p>\n                    </div>\n                  </template>\n                </el-table-column>\n                <el-table-column :label=\"$t('returnValue')\" prop=\"confirm_return_value\" key=\"confirm_return_value\">\n                  <template slot-scope=\"scope\">\n                    <div v-if=\"!showReturnValue(scope.row)\">/</div>\n                    <div v-else-if=\"!isEdit\">\n                      <span>{{formatValue(scope.row.confirm_return_value)}}</span>\n                    </div>\n                    <div v-else>\n                      <div class=\"pms-flex\">\n                        <el-input-number :controls=\"false\" step-strictly :step=\"0.01\" :min=\"0\"\n                          v-model=\"scope.row.confirm_return_value\" @change=\"(...argu) => { handleChangeConfirmReturnValue(scope.row, ...argu)}\"></el-input-number>\n                      </div>\n                      <p v-if=\"scope.row.isReturnError\" class=\"error-tips\">{{$t('commonFieldRequired')}}</p>\n                    </div>\n                  </template>\n                </el-table-column>\n                <el-table-column :label=\"$t('totalChargingValue')\" key=\"totalChargingValue\">\n                  <template slot-scope=\"scope\">{{getTotalChargingValue(scope.row)}}</template>\n                </el-table-column>\n              </el-table>\n            </div>\n          </el-form-item>\n        </section>\n        <section class=\"module-block pms-ui\">\n          <h3 class=\"section-title\">{{$t('commonSkuList')}}</h3>\n          <el-table :data=\"skuList\" border\n          show-summary :sum-text=\"$t('commonTotal')\">\n            <el-table-column :label=\"$t('commonSkuID')\" prop=\"sku_id\">\n              <template slot-scope=\"scope\">\n                <span\n                  :class=\"{'total-column': scope.row.sku_id === 'total'}\"\n                >{{scope.row.sku_id === 'total' ? $t('commonTotal') : scope.row.sku_id}}</span>\n              </template>\n            </el-table-column>\n            <el-table-column :label=\"$t('commonSkuName')\" prop=\"sku_name\">\n              <template slot-scope=\"scope\">\n                <span :class=\"{'total-column': scope.row.sku_id === 'total'}\">{{scope.row.sku_name}}</span>\n              </template>\n            </el-table-column>\n            <el-table-column :label=\"$t('CRReportDetailSoldQty')\" prop=\"sold_qty\">\n              <template slot-scope=\"scope\">\n                <span :class=\"{'total-column': scope.row.sku_id === 'total'}\">{{scope.row.sold_qty}}</span>\n              </template>\n            </el-table-column>\n            <el-table-column :label=\"$t('CRReportSalesValue')\" prop=\"sale_value\">\n              <template slot-scope=\"scope\">\n                <div v-if=\"baseInfo.sale_value_option === 3 && isEdit\">\n                  <el-input-number :controls=\"false\" :min=\"0\" :step=\"0.01\" v-model=\"scope.row.sale_value\"  class=\"inner_suffix sku-list-input\">\n                    <template slot=\"append\">{{currency}}</template>\n                  </el-input-number>\n                </div>\n                <span\n                  v-else\n                  :class=\"{'total-column': scope.row.sku_id === 'total'}\"\n                >{{formatValue(scope.row.sale_value)}}</span>\n              </template>\n            </el-table-column>\n            <el-table-column :label=\"$t('CRReportReturnQty')\" prop=\"return_qty\">\n              <template slot-scope=\"scope\">\n                <span :class=\"{'total-column': scope.row.sku_id === 'total'}\">{{scope.row.return_qty}}</span>\n              </template>\n            </el-table-column>\n            <el-table-column :label=\"$t('CRReportInboundQty')\" prop=\"inbound_qty\">\n               <template slot-scope=\"scope\">\n                <span :class=\"{'total-column': scope.row.sku_id === 'total'}\">{{scope.row.inbound_qty}}</span>\n              </template>\n            </el-table-column>\n          </el-table>\n        </section>\n         <section class=\"module-block pms-ui\">\n            <h3 class=\"section-title\">{{$t('CRReportRemark')}}</h3>\n            <span v-if=\"!isEdit\">{{baseInfo.remark || '-'}}</span>\n            <el-input v-if=\"canOperate && isEdit\" class=\"pms-ele-ui\" type=\"textarea\" v-model=\"baseInfo.remark\"></el-input>\n        </section>\n        <section class=\"module-block pms-ui\">\n          <h3 class=\"section-title\">{{$t('Attachment')}}</h3>\n          <file-list-attachment\n            ref=\"crAttachment\"\n            :attachmentList=\"attachmentList || []\"\n            :mode=\"isEdit ? 'edit' : 'view' \"\n            :limit=\"fileLimit\"\n            :accept=\"accept\"\n            @setAttachmentList=\"setSupportingFiles('attachmentList', $event)\"\n          ></file-list-attachment>\n        </section>\n      </el-form>\n    </div>\n    <ActionLog\n      :cr_id=\"$route.params.cr_id\"\n      :visible=\"actionDialogVisible\"\n      @close=\"closeActionDialog\"\n      ></ActionLog>\n      <view-history :visible=\"viewHistoryDialogVisible\" @close=\"closeViewHistoryDialog\" @confirm=\"confirmHistory\"\n      :list=\"crVersionList\" :canEdit=\"canEditViewHistory\"></view-history>\n  </div>\n</template>\n\n<script>\nimport {\n  getCRReportDetail,\n  crReportSyncExportExcel,\n  crReportSyncExportPDF,\n  confirmCRReport,\n  crReportSubmitDetail,\n  agingReportSyncExportExcel,\n  apiGetCrViewHistory, apiDisputeCr, apiSaveAndConfirm, apiSendEmail, apiUpdateHistory\n} from '@/api/crReport';\nimport { CRLStatusList, FeeTypeObj, Permission, getContentType } from '@/utils/constant';\nimport { hasPermission } from '@/utils/permission';\nimport { formatValue } from '@/utils/format';\nimport { downloadBlobFile } from '@/utils/downloadFile';\nimport ActionLog from './actionLog';\nimport ViewHistory from './viewHistory';\nimport moment from 'moment';\nimport FileListAttachment from '@/components/fileListAttachment';\nexport default {\n  components: { ActionLog, ViewHistory, FileListAttachment },\n  data() {\n    return {\n      canOperate: false,\n      isEdit: false,\n      saveLoading: false,\n      loadingConfirm: false,\n      sendEmailLoading: false,\n      disputeLoading: false,\n      viewHistoryLoading: false,\n      actionDialogVisible: false,\n      baseInfo: {\n        remark: ''\n      },\n      skuList: [],\n      cacheSubFeeList: [],\n      statusClass: ['', 'yellow', 'green'],\n      exportBtns: [\n        { text: 'commonExportPDF', onClick: 'onExportPDF' },\n        { text: 'commonExportExcel', onClick: 'onExportExcel' },\n        { text: 'exportAgingReport', onClick: 'onExportAgingExcel' }\n      ],\n      basicInfoSchema: [\n        {\n          label: 'commonVendorSiteID',\n          field: 'vendor_site_id'\n        },\n        {\n          label: 'commonSupplierName',\n          field: 'supplier_name'\n        },\n        {\n          label: 'CRReportReportPeriod',\n          field: 'checkout_period'\n        },\n        {\n          label: 'CRReportDetailGenerationPeriodTime',\n          field: 'report_generation_date'\n        },\n        {\n          label: 'CRReportCRTID',\n          field: 'crt_id'\n        },\n        {\n          label: 'CRReportVersionNo',\n          field: 'cr_version'\n        },\n        {\n          label: 'chargingRelatedSTID',\n          field: 'statement_id'\n        }\n      ],\n      subFeeListObj: {},\n      cacheData: {},\n      crVersionList: [],\n      viewHistoryDialogVisible: false,\n      fileLimit: {\n        size: 25,\n        count: 5\n      },\n      accept: '.png, .jpg, .jpeg, .pdf, .xls, .xlsx, .csv',\n      attachmentList: []\n    };\n  },\n  computed: {\n    isDispute() {\n      return this.baseInfo.dispute_status === 2;\n    },\n    hasSendEmail() {\n      return this.baseInfo.email_status === 3;\n    },\n    canSupplierDispute() {\n      // report_status 2 —— Confirm\n      return this.baseInfo.report_status === 2 && this.baseInfo.can_dispute && hasPermission(Permission.CHARGING_REPORT_EDIT_CR);\n    },\n    canEditViewHistory() {\n      return this.baseInfo.can_dispute;\n    },\n    canSendEmail() {\n      return this.baseInfo.email_status !== 1 && hasPermission(Permission.CHARGING_REPORT_EDIT_CR);\n    },\n    rules() {\n      return {\n        sale_value: [{\n          validator: (rules, value, cb) => {\n            if (!value && value !== 0) {\n              return cb(this.$t('commonIsRequired', { target: this.$t('CRReportSalesValue') }));\n            }\n            cb();\n          },\n          trigger: 'blur'\n        }]\n      };\n    },\n    currency() {\n      return this.$store.getters.currencyMap[this.baseInfo.region];\n    },\n    formatStatus() {\n      const statusText = (\n        CRLStatusList.find(\n          item => item.value === this.baseInfo.report_status\n        ) || { label: '' }\n      ).label;\n      const isConfirm = this.baseInfo.report_status === 1;\n      return statusText ? (isConfirm ? `${this.$t(statusText)}: ${this.baseInfo.pending_approval_role}` : this.$t(statusText)) : '';\n    },\n    formatTotalPayment() {\n      const totalValueList = Object.keys(this.subFeeListObj).map(key => {\n        let subFeeTotalValue = 0;\n        Array.isArray(this.subFeeListObj[key]) && this.subFeeListObj[key].forEach(item => {\n          subFeeTotalValue = (subFeeTotalValue * 100 + Number(this.getTotalChargingValue(item)) * 100) / 100;\n        });\n        return subFeeTotalValue;\n      });\n      return Number(totalValueList.reduce((coms, curr) => (coms * 100 + curr * 100) / 100, 0)).toFixed(2) + `  ${this.currency}`;\n    }\n  },\n  created() {\n    this.getDetail();\n  },\n  methods: {\n    formatValue,\n    moment,\n    setSupportingFiles(type, data) {\n      this[type] = [...data];\n    },\n    viewStatement(val) {\n      this.$router.push({ path: `/admin/finance/statement/edit/${val}` });\n    },\n    async viewHistory() {\n      try {\n        this.viewHistoryLoading = true;\n        const params = {\n          cr_id: this.$route.params.cr_id\n        };\n        const res = await apiGetCrViewHistory(params);\n        if (res && res.retcode === 0) {\n          this.crVersionList = res.data.version_list || [];\n          this.viewHistoryDialogVisible = true;\n        } else {\n          this.$message({ type: 'error', message: res.info });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.viewHistoryLoading = false;\n      }\n    },\n    confirmHistory() {\n      apiUpdateHistory({ cr_id: this.$route.params.cr_id, version_list: this.crVersionList })\n        .then(res => {\n          if (res && res.retcode === 0) {\n            this.$message.success(this.$t('commonSuccess'));\n            this.closeViewHistoryDialog();\n          } else {\n            this.$message.error(res.message);\n          }\n        }).catch(e => {\n          this.$message.error(e);\n        });\n    },\n    closeViewHistoryDialog() {\n      this.viewHistoryDialogVisible = false;\n    },\n    async onSendEmail() {\n      try {\n        this.sendEmailLoading = true;\n        const params = {\n          cr_id: this.$route.params.cr_id\n        };\n        // 第一次需要发送校验\n        const res = await apiSendEmail({ ...params, is_confirmed: false });\n        // Part of the email address is missing\n        if (res.retcode === -3001) {\n          const confirm = await this.$confirm(this.$t('missingEmailAddressTips', { missingList: res.data.lack_email_list.join('、') }), this.$t('CREmailSendConfirmationTitle'), {\n            confirmButtonText: this.$t('commonConfirm'),\n            cancelButtonText: this.$t('commonCancel')\n          });\n          if (confirm) {\n            this.sendEmailAfterValid(false);\n          }\n          return;\n        }\n        // The recipient have no email address\n        if (res.retcode === -3002) {\n          await this.$confirm(this.$t('noEmailAddressTips'), this.$t('CREmailSendConfirmationTitle'), {\n            cancelButtonText: this.$t('commonClose'),\n            showConfirmButton: false\n          });\n          return;\n        }\n        // 校验通过，需要二次确认\n        if (res.retcode === 0) {\n          this.sendEmailAfterValid(true);\n        } else {\n          this.$message.error(res.message);\n        }\n      } catch (e) {\n        this.$message.info(e);\n      } finally {\n        this.sendEmailLoading = false;\n      }\n    },\n    async sendEmailAfterValid(secondConfirm) {\n      try {\n        let confirm = false;\n        const params = {\n          cr_id: this.$route.params.cr_id\n        };\n        if (secondConfirm) {\n          confirm = await this.$confirm(this.baseInfo.region === 'TW' ? this.$t('twCrSendEmailTips', { id: this.baseInfo.statement_id }) : this.$t('crSendEmailTips', { id: this.baseInfo.vendor_site_id }),\n            this.$t('CREmailSendConfirmationTitle'), {\n            confirmButtonText: this.$t('commonConfirm'),\n            cancelButtonText: this.$t('commonCancel')\n          });\n        }\n        // 不需要二次确认，则直接请求。需要二次确认确认完请求\n        if (!secondConfirm || confirm) {\n          const res = await apiSendEmail({ ...params, is_confirmed: true });\n          if (res.retcode === 0) {\n            this.$message.success(this.$t('commonSuccess'));\n            this.getDetail();\n          } else {\n            this.$message.error(res.message);\n          }\n        }\n      } catch (e) {\n        this.$message.info(e);\n      } finally {\n        this.sendEmailLoading = false;\n      }\n    },\n    async onSupplierDispute() {\n      try {\n        this.disputeLoading = true;\n        const confirmResult = await this.$confirm(this.$t('supplierDisputeTips'), this.$t('supplierDisputeTitle'), {\n          confirmButtonText: this.$t('commonConfirm'),\n          cancelButtonText: this.$t('commonCancel')\n        });\n        if (confirmResult) {\n          const res = await apiDisputeCr({ cr_id: this.$route.params.cr_id });\n          if (res.retcode === 0) {\n            this.$message.success(this.$t('commonSuccess'));\n            this.getDetail();\n          } else {\n            this.$message.error(res.message);\n          }\n        }\n      } catch (e) {\n        this.$message.info(e);\n      } finally {\n        this.disputeLoading = false;\n      }\n    },\n    showReturnValue(row) {\n      return [8, 9, 15, 17].includes(row.option);\n    },\n    getTotalChargingValue(row) {\n      if (!this.showReturnValue(row)) { return row.confirm_value; }\n      const result = (row.confirm_value * 100 - row.confirm_return_value * 100) / 100;\n      if (Number.isNaN(result)) {\n        return '';\n      }\n      return result.toFixed(2);\n    },\n    handleChangeConfirmValue(row, value) {\n      row.isError = !value && value !== 0;\n    },\n    handleChangeConfirmReturnValue(row, value) {\n      row.isReturnError = !value && value !== 0;\n    },\n    formatSubFeeTotalFee(key) {\n      // eslint-disable-next-line\n      const totalFee = (this.subFeeListObj[key] || []).reduce((coms, curr) => {\n        return (coms * 100 + Number(this.getTotalChargingValue(curr) * 100)) / 100;\n      }, 0);\n      return this.$t('CRReportDetailTotalFee', { feeType: this.formatFeeType(key) }) + ' ' + formatValue(Number(totalFee).toFixed(2)) + ` ${this.currency}`;\n    },\n    formatFeeType(type) {\n      const typeText = FeeTypeObj[type];\n      return typeText ? this.$t(`subFeeType${typeText}`) : '';\n    },\n    onEdit() {\n      this.isEdit = true;\n    },\n    onCancel() {\n      this.baseInfo = this.cacheData.baseInfo || {};\n      this.skuList = this.cacheData.skuList || [];\n      this.subFeeListObj = this.cacheData.subFeeListObj || {};\n      this.attachmentList = this.cacheData.attachmentList || [];\n      this.$nextTick(() => {\n        this.$refs['crAttachment'].initAttachmentList();\n      });\n      this.isEdit = false;\n    },\n    hasNoFinishFile() {\n      let didNotFinish = false;\n      if (this.$refs['crAttachment']) {\n        const { isAllFinish } = this.$refs['crAttachment'].checkFileListStatus();\n        didNotFinish = isAllFinish !== undefined && !isAllFinish;\n      }\n      return didNotFinish;\n    },\n    onSave(isSaveAndConfirm = false) {\n      this.$confirm(\n        isSaveAndConfirm ? this.$t('crDetailSaveConfirmTips') : this.$t('crDetailSaveTips'),\n        this.$t('commonTips'),\n        {\n          confirmButtonText: this.$t('commonConfirm'),\n          cancelButtonText: this.$t('commonCancel'),\n          customClass: 'pms-ele-ui',\n          confirmButtonClass: 'list-btn',\n          cancelButtonClass: 'list-btn white'\n        }\n      ).then(() => {\n        if (this.hasNoFinishFile()) {\n          this.$message.error(this.$t('attachmentFileUploading'));\n          return;\n        }\n        this.$refs.detailForm.validate(flag => {\n          if (flag) {\n            if (this.checkTableData()) {\n              this.submitData(isSaveAndConfirm);\n            }\n          }\n        });\n      }).catch(() => {});\n    },\n    checkTableData() {\n      this.cacheSubFeeList.forEach(item => {\n        this.handleChangeConfirmValue(item, item.confirm_value);\n        this.handleChangeConfirmReturnValue(item, item.confirm_return_value);\n      });\n      return !this.cacheSubFeeList.find(item => item.isError || item.isReturnError);\n    },\n    getSaveParams() {\n      return {\n          cr_id: this.$route.params.cr_id,\n          sale_value: this.baseInfo.sale_value,\n          remark: this.baseInfo.remark,\n          sku_list: this.skuList.map(item => ({ sku_id: item.sku_id, sale_value: item.sale_value })),\n          sub_fee_confirm: this.cacheSubFeeList.map(item => ({\n            sub_fee_id: item.sub_fee_id, confirm_value: Number(item.confirm_value),\n            confirm_return_value: Number(item.confirm_return_value) })),\n          attachment_list: this.attachmentList.map(item => ({ attachment_name: item.file_name, attachment_type: item.file_type, attachment_url: item.file_address }))\n        };\n    },\n    async submitData(isSaveAndConfirm = false) {\n      try {\n        this.saveLoading = true;\n        const params = this.getSaveParams();\n        const func = isSaveAndConfirm ? apiSaveAndConfirm : crReportSubmitDetail;\n        const res = await func(params);\n        if (res && res.retcode === 0) {\n          this.$message({\n            type: 'success',\n            message: this.$t('commonSubmitSuccess')\n          });\n          this.isEdit = false;\n          const cacheData = {\n            baseInfo: this.baseInfo,\n            skuList: this.skuList,\n            subFeeListObj: this.subFeeListObj,\n            attachmentList: this.attachmentList\n          };\n          this.cacheData = JSON.parse(JSON.stringify(cacheData));\n          this.getDetail();\n        } else {\n          this.$message({ type: 'error', message: res.info });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.saveLoading = false;\n      }\n    },\n    onConfirm() {\n      this.$confirm(\n        this.$t('CRReportDetailConfirmTips'),\n        this.$t('commonTips'),\n        {\n          confirmButtonText: this.$t('commonConfirm'),\n          cancelButtonText: this.$t('commonCancel'),\n          customClass: 'pms-ele-ui',\n          confirmButtonClass: 'list-btn',\n          cancelButtonClass: 'list-btn white'\n        }\n      )\n        .then(() => {\n          this.confirmReport();\n        })\n        .catch(() => {});\n    },\n    async confirmReport() {\n      try {\n        this.loadingConfirm = true;\n        const params = {\n          cr_id: this.$route.params.cr_id\n        };\n        const res = await confirmCRReport(params);\n        if (res && res.retcode === 0) {\n          this.$message({\n            type: 'success',\n            message: this.$t('commonConfirmSuccess')\n          });\n          this.getDetail();\n        } else {\n          this.$message({ type: 'error', message: res.info });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loadingConfirm = false;\n      }\n    },\n    onExportContentClick(command) {\n      if (command.onClick && typeof this[command.onClick] === 'function') {\n        this[command.onClick]();\n      }\n    },\n    onExportPDF() {\n      if (!this.baseInfo.pdf_template_id) {\n        return this.$message.error(this.$t('CRReportCanotFindPDFTemplate'));\n      }\n      const params = {\n        cr_id: this.$route.params.cr_id\n      };\n      crReportSyncExportPDF(params)\n        .then(resp => {\n          if (resp.type === 'application/json') {\n            const reader = new FileReader();\n            reader.onloadend = () => {\n              const result = JSON.parse(reader.result);\n              if (result.retcode !== 0) {\n                this.$message({ type: 'error', message: result.info });\n              }\n            };\n            reader.readAsText(resp);\n          } else {\n            downloadBlobFile(\n              resp,\n              `CRReport_${moment().format('YYYYMMDDHHmmss')}.pdf`\n            );\n          }\n        })\n        .catch(() => {\n          this.$message.error('Failed');\n        });\n    },\n    onExportExcel() {\n      const params = {\n        cr_id: this.$route.params.cr_id\n      };\n      crReportSyncExportExcel(params)\n        .then(resp => {\n          if (resp.type === 'application/json') {\n            const reader = new FileReader();\n            reader.onloadend = () => {\n              const result = JSON.parse(reader.result);\n              if (result.retcode !== 0) {\n                this.$message({ type: 'error', message: result.info });\n              }\n            };\n            reader.readAsText(resp);\n          } else {\n            downloadBlobFile(\n              resp,\n              `CRReport_${moment().format('YYYYMMDDHHmmss')}.${getContentType(resp.type)}`\n            );\n          }\n        })\n        .catch(() => {\n          this.$message.error('Failed');\n        });\n    },\n    onExportAgingExcel() {\n      const params = {\n        cr_id: this.$route.params.cr_id\n      };\n      agingReportSyncExportExcel(params)\n        .then(resp => {\n          if (resp.type === 'application/json') {\n            const reader = new FileReader();\n            reader.onloadend = () => {\n              const result = JSON.parse(reader.result);\n              if (result.retcode !== 0) {\n                this.$message({ type: 'error', message: result.info });\n              }\n            };\n            reader.readAsText(resp);\n          } else {\n            const filename = `CRAgingReport_${moment().format('YYYYMMDDHHmmss')}.${getContentType(resp.type)}`;\n            downloadBlobFile(\n              resp,\n              filename\n            );\n          }\n        })\n        .catch(() => {\n          this.$message.error('Failed');\n        });\n    },\n    formatBasicInfoValue(field) {\n      if (field === 'checkout_period') {\n        return this.baseInfo.checkout_period_start + ' ~ ' + this.baseInfo.checkout_period_end;\n      }\n      if (field === 'crt_id') { return `${this.baseInfo[field]}(V.${this.baseInfo.crt_version})`; }\n      if (field === 'cr_version') {\n        return this.baseInfo[field] ? `V.${this.baseInfo[field]}` : '/';\n      }\n      return this.baseInfo[field] ? this.baseInfo[field] : '/';\n    },\n    goBack() {\n      this.$router.go(-1);\n    },\n    showActionDialog() {\n      this.actionDialogVisible = true;\n    },\n    closeActionDialog() {\n      this.actionDialogVisible = false;\n    },\n    async getDetail() {\n      try {\n        const params = {\n          cr_id: this.$route.params.cr_id\n        };\n        const res = await getCRReportDetail(params);\n        if (res && res.retcode === 0) {\n          this.baseInfo = res.data.basic_info;\n          this.canOperate = hasPermission(Permission.CHARGING_REPORT_EDIT_CR) && this.baseInfo.can_approve;\n          this.skuList = res.data.sku_list || [];\n          this.attachmentList = (res.data.attachment_list || []).map((item) => {\n            return {\n              file_name: item.attachment_name,\n              file_type: item.attachment_type,\n              file_address: item.attachment_url\n            };\n          });\n          const subFeeListObj = {};\n          this.$nextTick(() => {\n            this.$refs['crAttachment'].initAttachmentList();\n          });\n          this.cacheSubFeeList = (res.data.calc_fee || []).map(item => {\n            return Object.assign(item, {\n              // 7 并且是 -1 展示为空，否则就是 calc_value。need manual uploda && confirm_value 没有值， 显示感叹号，并且confirm_value 置空\n              confirm_value: item.option === 7 ? '' : item.calc_value,\n              // 只需要维护 return_value\n              confirm_return_value: item.return_value\n            });\n          });\n          this.cacheSubFeeList.map(item => {\n            if (!subFeeListObj[item.main_fee_type]) {\n              subFeeListObj[`${item.main_fee_type}`] = [];\n            }\n            subFeeListObj[`${item.main_fee_type}`].push(item);\n          });\n\n          this.subFeeListObj = subFeeListObj;\n          const cacheData = {\n            baseInfo: this.baseInfo,\n            skuList: this.skuList,\n            subFeeListObj: this.subFeeListObj,\n            attachmentList: this.attachmentList\n          };\n          this.cacheData = JSON.parse(JSON.stringify(cacheData));\n        } else {\n          this.$message({ type: 'error', message: res.info });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    }\n  }\n};\n</script>\n<style lang=\"scss\">\n@import \"~@/styles/common.scss\";\n.cr-report-detail {\n  .view-mode-form {\n    .el-form-item--medium {\n      .el-form-item__label,\n      .el-form-item__content {\n        line-height: 18px;\n      }\n    }\n  }\n}\n</style>\n<style lang=\"scss\" scoped>\n@import \"~@/styles/variables.scss\";\n.cr-report-detail {\n  &.layout-padding {\n    padding: 24px 32px;\n  }\n  .detail-header-wrapper {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border-bottom: 1px solid $border-color;\n    padding-bottom: 8px;\n    .left-info {\n      flex: 1;\n      font-size: 24px;\n      color: $black;\n      vertical-align: middle;\n      .go-back-icon {\n        color: #666666;\n        cursor: pointer;\n      }\n      .header-text {\n        margin-right: 8px;\n      }\n      .header-status {\n        font-size: 12px;\n        display: inline-block;\n        padding: 2px;\n        border-radius: 2px;\n        vertical-align: middle;\n        &.green {\n          color: #1baf9d;\n          background-color: rgba(27, 175, 157, 0.1);\n        }\n        &.yellow {\n          color: #f4ab61;\n          background-color: rgba(244, 171, 97, 0.1);\n        }\n      }\n      .dispute-status {\n        background: #f7ced3;\n        color: #9e6066;\n      }\n    }\n    .right-top {\n      flex: 2;\n      text-align: right;\n    }\n  }\n  .main-wrapper {\n    padding-top: 32px;\n  }\n  .module-block {\n    margin-bottom: 40px;\n    .section-title {\n      font-size: 18px;\n      font-weight: bold;\n      line-height: 18px;\n      margin-bottom: 16px;\n    }\n    .view-statement,\n    .view-history {\n      color: #3d6ed1;\n      cursor: pointer;\n    }\n    .fee-list-input {\n      width: 240px;\n    }\n    .chargingDetail-form-item {\n      width: 86%;\n      .charing-detail-block {\n        margin-top: 16px;\n        &:first-child {\n          margin-top: 0;\n        }\n        .warning-icon {\n          font-size: 12px;\n          color: $red;\n          vertical-align: middle;\n          margin: 0px 4px 1px;\n        }\n        .icon-plus{\n          margin: 4px 8px;\n        }\n        .error-tips {\n          margin-left: 26px;\n          font-size: 12px;\n          color: $red;\n        }\n      }\n      .border-table {\n        border-right-width: 1px;\n      }\n      .total-value {\n        height: 44px;\n        line-height: 44px;\n        padding: 0 24px;\n        width: 100%;\n        background-color: rgba(61, 110, 209, 0.05);\n        border: 1px solid #f1f2f5;\n        font-size: 14px;\n        color: $black;\n      }\n    }\n\n    .total-column{\n      font-weight: bolder;\n    }\n  }\n}\n.sku-list-input{\n  width:100%;\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/crReport/list.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":12,"column":44,"nodeType":"VIdentifier","messageId":"deprecated","endLine":12,"endColumn":50}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-container class=\"cr-report-wrapper pms-ele-ui pms-ui\">\n    <tabs-header\n      v-if=\"tabList.length\"\n      :createHidden=\"true\"\n      :tabStyle=\"tabStyle\"\n      :tabs=\"tabList\"\n      :defaultTab=\"activeTab\"\n      @tabChange=\"handleTabChange\"\n    ></tabs-header>\n    <section class=\"main-wrapper\">\n      <el-form :model=\"searchForm\" @submit.native.prevent=\"onResetPageNoSearch\">\n        <el-button v-show=\"false\" native-type=\"submit\"></el-button>\n        <el-row>\n          <el-col\n            v-for=\"item in searchSchema\"\n            :key=\"item.field\"\n            :span=\"item.width\"\n            :offset=\"item.offset || 0\"\n          >\n            <el-form-item\n              :label-width=\"item.labelWidth || '140px'\"\n              :class=\"item.class || ''\"\n              :label=\"item.label\"\n            >\n              <el-select\n                v-if=\"item.type === 'select'\"\n                :multiple=\"item.multiple\"\n                v-model=\"searchForm[item.field]\"\n                :disabled=\"item.disabled || false\"\n                :collapse-tags=\"true\"\n                @change=\"(...argu) => onChangeSelect(item.field, ...argu)\"\n              >\n                <el-option\n                  v-for=\"option in item.options || []\"\n                  :key=\"option.value\"\n                  :label=\"item.field === 'region' ? option.label: $t(option.label)\"\n                  :value=\"option.value\"\n                ></el-option>\n              </el-select>\n              <el-input v-if=\"item.type === 'input'\" v-model=\"searchForm[item.field]\"></el-input>\n              <el-autocomplete\n                v-else-if=\"item.type === 'supplierID'\"\n                class=\"el-autocomplete_width_100\"\n                popper-class=\"pms-ele-ui supplierIDCompleteWrapperWidth\"\n                v-model=\"searchForm[item.field]\"\n                :fetch-suggestions=\"getVendorSiteID\"\n                clearable\n                :placeholder=\"$t('commonVendorSiteIDPlaceholder')\"\n                @select=\"handleVendorSiteIDSelect\"\n              ></el-autocomplete>\n               <el-date-picker\n                 v-if=\"item.type === 'datePicker'\"\n                 :disabled=\"item.disabled || false\"\n                :picker-options=\"item.pickerOptions || {}\" @change='onSearch' popper-class='pms-ui'\n                :format=\"item.format || undefined\" :value-format=\"item.valueFormat || ''\" v-model=\"searchForm[item.field]\" :type=\"item.dateType || 'date'\">\n              </el-date-picker>\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row type=\"flex\" justify=\"space-between\" class=\"action-row\">\n          <el-col :span=\"18\">\n             <el-dropdown class='exportGroup-btn' split-button type=\"primary\" @command=\"onExportContentClick\">\n              <span>{{$t('CRReportMassExport')}}</span>\n              <el-dropdown-menu slot=\"dropdown\">\n                <el-dropdown-item :command=\"btn\" v-for=\"btn in exportBtns\" :key=\"btn.text\" >\n                  <span>{{$t(btn.text)}}</span>\n                </el-dropdown-item>\n              </el-dropdown-menu>\n            </el-dropdown>\n            <div class='export-history-btn list-btn white-blue' @click=\"showExportHistory\">\n              <i class=\"el-icon-upload\"></i>\n              <span>{{$t('commonExportHistory')}}</span>\n            </div>\n            <!-- <el-upload\n              v-if=\"canOperate\"\n              class=\"list-btn\"\n              action=\"/api/charging_report/mass_upload/\"\n              :with-credentials=\"true\"\n              :limit=\"1\"\n              ref=\"massUpload\"\n              :show-file-list=false\n              :on-success=\"onUploadSuccess\"\n              :on-error=\"onUploadError\"\n              :data=\"getCsrfData()\"\n              :headers=\"getCsrfHeader()\"\n            >\n\n            {{$t('commonMassUpload')}}\n            <el-popover\n                  popper-class=\"cr-popover-break-word\"\n                  placement=\"top\"\n                  width=\"400\"\n                  trigger=\"hover\"\n                >\n                <div class=\"icon-tips-wrapper\">\n                  {{$t('CRReportMassUploadTip')}}\n                </div>\n                <svg-icon slot=\"reference\" iconClass=\"question-circle\" class=\"question-icon\"></svg-icon>\n              </el-popover>\n            </el-upload> -->\n\n            <el-button class=\"list-btn\" :disabled=\"checkedType === 'all'\" v-if=\"canOperate && isPendingApproval\" @click=\"onMassConfirm\">{{$t('commonMassConfirm')}}</el-button>\n            <el-button class=\"list-btn\" :disabled=\"checkedType === 'all'\" v-if=\"canOperate && !isPendingApproval\" @click=\"onMassSendEmail\">{{$t('crMassSendEmail')}}</el-button>\n            <div v-if=\"!isPendingApproval\" class='export-history-btn list-btn white-blue' @click=\"showEmailHistory\">\n              <i class=\"el-icon-upload\"></i>\n              <span>{{$t('CREmailHistory')}}</span>\n            </div>\n          </el-col>\n          <el-col :span=\"6\" class=\"text-right\">\n\n            <div class=\"list-btn\" @click=\"onResetPageNoSearch\">{{$t('commonSearch')}}</div>\n            <div class=\"list-btn white-blue\" @click=\"onReset\">{{$t('commonClear')}}</div>\n          </el-col>\n        </el-row>\n      </el-form>\n      <el-checkbox-group v-model=\"checkedRows\">\n        <el-table :data=\"tableList\" border v-loading=\"loading\" @selection-change=\"changeSelections\" @row-click=\"rowClick\">\n          <el-table-column column-key=\"action\" width=\"100px\" align=\"center\" label-class-name=\"pms-ele-ui select-all-table-column\">\n            <template slot-scope=\"scope\" slot=\"header\">\n              <el-dropdown @click=\"resetCheckedType\" placement=\"bottom\" split-button trigger=\"click\" class=\"select-page-dropdown\" @command=\"changeSelectPageType\">\n                {{formatCheckedType}}\n                <el-dropdown-menu class=\"options-field-menu\" slot=\"dropdown\">\n                  <el-dropdown-item command=\"current\">{{$t('commonCurrentPage')}}</el-dropdown-item>\n                  <el-dropdown-item command=\"all\">{{$t('commonAllPage')}}</el-dropdown-item>\n                </el-dropdown-menu>\n              </el-dropdown>\n            </template>\n            <template slot-scope=\"scope\">\n              <el-checkbox :disabled=\"checkedType === 'all'\" :label=\"scope.row\">{{''}}</el-checkbox>\n            </template>\n          </el-table-column>\n          <el-table-column width=\"25px\">\n            <template slot-scope=\"scope\">\n              <i v-if=\"scope.row.has_empty_value === 1\" class=\"el-icon-warning warning-icon\"></i>\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"cr_id\" :label=\"$t('CRReportCRID')\">\n            <template slot-scope=\"scope\">\n              <span>{{scope.row.cr_id}}</span>\n            </template>\n          </el-table-column>\n\n          <el-table-column prop=\"vendor_site_id\" :label=\"$t('commonVendorSiteID')\"></el-table-column>\n\n          <el-table-column prop=\"shop_ids\" :label=\"$t('commonShopID')\"></el-table-column>\n\n          <el-table-column :label=\"$t('CRReportReportPeriod')\">\n            <template slot-scope=\"scope\">\n              <p>{{scope.row.checkout_period_start}}</p>\n              <p>{{scope.row.checkout_period_end}}</p>\n            </template>\n          </el-table-column>\n\n          <el-table-column :label=\"$t('CRReportGenerationPeriod')\">\n            <template\n              slot-scope=\"scope\"\n            >{{formatGenerationPeriod(scope.row.generation_period)}}</template>\n          </el-table-column>\n          <el-table-column :label=\"$t('commonClientType')\">\n          <template\n            slot-scope=\"scope\"\n          >{{formatSupplierType(scope.row.supplier_type, scope.row.purchase_type) || ''}}</template>\n        </el-table-column>\n\n          <el-table-column :label=\"$t('commonStatus')\" v-if=\"!isPendingApproval\">\n            <template slot-scope=\"scope\">\n              <span class=\"status-span\" :class=\"scope.row.report_status === 1 ? 'pending-confirm' : scope.row.report_status === 2 ? 'confirmed' : '' \">\n                {{`${formatStatus(scope.row.report_status, scope.row)}` || ''}}\n              </span>\n            </template>\n          </el-table-column>\n\n          <el-table-column :label=\"$t('crEmailStatus')\">\n            <template slot-scope=\"scope\">\n              <span class=\"status-span\">{{`${formatEmailStatus(scope.row.email_status)}` || '/'}}</span>\n            </template>\n          </el-table-column>\n\n          <el-table-column :label=\"$t('CRReportConfirmedBy')\" prop=\"confirmor\"></el-table-column>\n\n          <el-table-column :label=\"$t('commonCtime')\">\n            <template slot-scope=\"scope\">\n              <p>{{moment(scope.row.ctime * 1000).format('YYYY-MM-DD HH:mm') || ''}}</p>\n            </template>\n          </el-table-column>\n          <el-table-column :label=\"$t('commonMtime')\">\n            <template slot-scope=\"scope\">\n              <p>{{moment(scope.row.mtime * 1000).format('YYYY-MM-DD HH:mm') || ''}}</p>\n            </template>\n          </el-table-column>\n        </el-table>\n      </el-checkbox-group>\n      <section class=\"pagination-center\">\n        <el-pagination\n          background\n          layout=\"sizes, prev, pager, next\"\n          :current-page=\"pager.page_no\"\n          :page-sizes=\"[10, 20, 50, 100]\"\n          :total.sync=\"total\"\n          :page-size=\"pager.count\"\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleChangePage\"\n        ></el-pagination>\n      </section>\n    </section>\n    <export-history-dialog :needErrorFile=\"true\" :interval=\"15000\" :taskType=\"taskType\" :visible=\"isShowHistoryDialog\" @close=\"closeExportHistory\" :title=\"historyTitle\"></export-history-dialog><!---todo taskType-->\n  </el-container>\n</template>\n\n<script>\nimport { formatParams } from '@/utils/formatParams';\nimport {\n  getCRReportList,\n  massConfirmCRReport,\n  crReportExportPDF,\n  crReportExportExcel,\n  agingExportExcel,\n  massSendEmailCRReport\n} from '@/api/crReport';\nimport {\n  CRLGenerationPeriodList,\n  CRLStatusList,\n  CREmailStatus, CRDisputeOrNot,\n  Permission,\n  CRTempSupplierTypeList as CRTSupplierTypeList\n} from '@/utils/constant';\nimport tabsHeader from '@/components/tabsHeader';\nimport moment from 'moment';\nimport { hasPermission } from '@/utils/permission';\nimport { getSupplierList } from '@/api/supplier';\nimport ExportHistoryDialog from '@/components/ApproveList/exportHistoryDialog';\nimport { getCsrfHeader, getCsrfData } from '@/utils/cookie';\n\nconst moduleName = 'CRReportModule';\nexport default {\n  components: { tabsHeader, ExportHistoryDialog },\n  data() {\n    const defaultCountry = (this.$store.getters.countrySelectList[0] || { value: '' }).value;\n    return {\n      canOperate: false,\n      isShowHistoryDialog: false,\n      checkedType: '',\n      checkedRows: [],\n      lastSearchForm: {},\n      defaultCountry,\n      searchForm: {\n        cr_id: '',\n        crt_id: '',\n        vendor_site_id: '',\n        generation_period: [],\n        report_status: '',\n        checkout_month: '',\n        region: defaultCountry, // todo\n        email_status: 0,\n        dispute_status: '',\n        supplier_purchase_type: '' // 前端自定义\n      },\n      loading: false,\n      pager: {\n        page_no: 1,\n        count: 10\n      },\n      total: 0,\n      tableList: [],\n      exportBtns: [\n        { text: 'commonMassExportPDF', onClick: 'onExportPDF' },\n        { text: 'commonMassExportExcel', onClick: 'onExportExcel' },\n        { text: 'exportAgingReport', onClick: 'onExportAgingExcel' }\n      ],\n      activeTab: this.$route.query.activeTab || 'all',\n      tabList: [\n        { name: 'all', label: 'commonAll', width: 80 },\n        { name: 'pending', label: 'commonMyPendingApprovals', permission: Permission.CHARGING_REPORT_MY_PENDING_APPROVALS, width: 300 }\n      ],\n      tabStyle: { height: '60px' },\n      taskType: '',\n      historyTitle: ''\n    };\n  },\n  watch: {\n    activeTab() {\n      this.onReset();\n      this.onResetPageNoSearch();\n    }\n  },\n  computed: {\n    searchSchema() {\n      return [\n        {\n          type: 'select',\n          width: 6,\n          label: this.$t('commonRegion'),\n          field: 'region',\n          options: this.countryList\n        },\n        { type: 'input', width: 6, label: this.$t('CRReportCRID'), field: 'cr_id' },\n        { type: 'input', width: 6, label: this.$t('CRReportCRTID'), field: 'crt_id' },\n        {\n          type: 'supplierID',\n          width: 6,\n          label: this.$t('commonVendorSiteID'),\n          field: 'vendor_site_id'\n        },\n        {\n          type: 'select',\n          width: 6,\n          label: this.$t('commonStatus'),\n          field: 'report_status',\n          options: [{ label: 'commonAll', value: '' }, ...CRLStatusList],\n          isHidden: this.isPendingApproval\n        },\n        {\n          type: 'datePicker',\n          width: 6,\n          label: this.$t('CRReportReportPeriod'),\n          multiple: true,\n          field: 'checkout_month',\n          format: 'yyyy-MM',\n          dateType: 'month',\n          valueFormat: 'yyyy-MM',\n          disabled: !this.searchForm.region\n        },\n        {\n          type: 'select',\n          width: 6,\n          label: this.$t('CRReportGenerationPeriod'),\n          multiple: true,\n          field: 'generation_period',\n          options: CRLGenerationPeriodList\n        },\n        {\n          type: 'select',\n          width: 6,\n          label: this.$t('crEmailStatus'),\n          field: 'email_status',\n          options: CREmailStatus\n        },\n        {\n          type: 'select',\n          width: 6,\n          label: this.$t('crDisputeOrNot'),\n          field: 'dispute_status',\n          options: CRDisputeOrNot\n        },\n        {\n          type: 'select',\n          width: 5,\n          clearable: true,\n          label: this.$t('commonClientType'),\n          field: 'supplier_purchase_type',\n          options: CRTSupplierTypeList\n        }\n      ].filter(item => !item.isHidden);\n    },\n    isPendingApproval() {\n      return this.activeTab === 'pending';\n    },\n    formatCheckedType() {\n      return this.checkedType === 'all' ? this.$t('commonAllPage') : this.$t('commonCurrentPage');\n    },\n    countryList() {\n      return [\n        ...new Set([\n          ...this.$store.getters.countryList.map(item => item.country)\n        ])\n      ].map(item => ({ value: item, label: item }));\n    }\n  },\n  methods: {\n    moment,\n    getCsrfData,\n    getCsrfHeader,\n    handleTabChange(tab) {\n      this.activeTab = tab.name;\n      this.$router.push({ query: { activeTab: tab.name }});\n    },\n    formatSupplierType(supplierType, purchasType) {\n      if (supplierType === 1) {\n        // CB\n        return this.$t('CRTSupplierTypeCB');\n      } else {\n        return ['', this.$t('CRTSupplierTypeLocalOutright'), this.$t('CRTSupplierTypeLocalConsignment'), this.$t('CRTSupplierTypeLocalFBS')][purchasType];\n      }\n    },\n    onChangeSelect(field, value) {\n      if (field === 'region') {\n        this.searchForm.vendor_site_id = '';\n        this.searchForm.checkout_month = '';\n      }\n      this.onResetPageNoSearch();\n    },\n    changeSelections(value) {\n      this.checkedRows = value;\n    },\n    changeSelectPageType(type) {\n      this.checkedType = type;\n      this.checkedRows = this.tableList;\n    },\n    resetCheckedType() {\n      this.checkedType = '';\n      this.checkedRows = [];\n    },\n    onExportContentClick(command) {\n      if (command.onClick && typeof this[command.onClick] === 'function') {\n        this[command.onClick]();\n      }\n    },\n    formatGenerationPeriod(value) {\n      const text = (CRLGenerationPeriodList.find(item => item.value === value) || { label: '' }).label;\n      return text ? this.$t(text) : '';\n    },\n    formatStatus(value, row) {\n      const target = (CRLStatusList.find(item => item.value === value) || { label: '' });\n      if (target.value === 1) {\n        return `${this.$t(target.label)}:${row.pending_approval_role}`;\n      } else {\n        return this.$t(target.label);\n      }\n    },\n    formatEmailStatus(value) {\n      const target = (CREmailStatus.find(item => item.value === value) || { label: '' });\n      if (target.value !== 1) {\n        return this.$t(target.label);\n      } else {\n        return '';\n      }\n    },\n    onUploadSuccess(resp) {\n      this.$refs.massUpload.clearFiles();\n      if (resp.retcode !== 0) {\n        this.$message.error(resp.info);\n      } else {\n        this.$message.success(this.$t('commonUploadSuccess'));\n      }\n    },\n    onUploadError(resp) {\n      this.$refs.massUpload.clearFiles();\n      this.$message.error(this.$t('commonUploadFailed'));\n    },\n    showEmailHistory() {\n      this.taskType = 43;\n      this.historyTitle = 'CREmailHistory';\n      this.isShowHistoryDialog = true;\n    },\n    showExportHistory() {\n      this.taskType = 13;\n      this.historyTitle = 'purchaseRequest.exportHistory';\n      this.isShowHistoryDialog = true;\n    },\n    closeExportHistory() {\n      this.isShowHistoryDialog = false;\n    },\n    onMassSendEmail() {\n      if (this.checkedRows.length < 1) {\n        return this.$message({ type: 'error', message: this.$t('commonPleaseChooseAtLeastOneOption') });\n      }\n      if (this.checkedRows.find(item => item.email_status !== 2)) {\n        return this.$message({ type: 'error', message: this.$t('CRListEmailStatusMustBePending') });\n      }\n      this.$confirm(this.$t('CRReportMassSentEmailTips', { count: this.checkedRows.length }), this.$t('CREmailSendConfirmationTitle'), {\n        confirmButtonText: this.$t('commonConfirm'),\n        cancelButtonText: this.$t('commonCancel'),\n        customClass: 'pms-ele-ui',\n        confirmButtonClass: 'list-btn',\n        cancelButtonClass: 'list-btn white'\n      }).then(() => {\n        this.handleMassSendEmail();\n      }).catch(() => {});\n    },\n    async handleMassSendEmail() {\n      try {\n        const params = {\n          cr_ids: this.checkedRows.map(item => item.cr_id)\n        };\n        const res = await massSendEmailCRReport(params);\n        if (res && res.retcode === 0) {\n          this.$message({ type: 'success', message: this.$t('commonSuccess') });\n          this.onSearch();\n        } else {\n          this.$message({ type: 'error', message: res.info });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    onMassConfirm() {\n      if (this.checkedRows.length < 1) {\n        return this.$message({ type: 'error', message: this.$t('commonPleaseChooseAtLeastOneOption') });\n      }\n      if (this.checkedRows.find(item => item.report_status === 2)) {\n        return this.$message({ type: 'error', message: this.$t('CRReportListStatusMustBePendingConfirm') });\n      }\n      this.$confirm(this.$t('CRReportMassConfirmTips', { count: this.checkedRows.length }), this.$t('commonTips'), {\n        confirmButtonText: this.$t('commonConfirm'),\n        cancelButtonText: this.$t('commonCancel'),\n        customClass: 'pms-ele-ui',\n        confirmButtonClass: 'list-btn',\n        cancelButtonClass: 'list-btn white'\n      }).then(() => {\n        this.handleMassConfirm();\n      }).catch(() => {});\n    },\n    async handleMassConfirm() {\n      try {\n        const params = {\n          cr_ids: this.checkedRows.map(item => item.cr_id)\n        };\n        const res = await massConfirmCRReport(params);\n        if (res && res.retcode === 0) {\n          this.$message({ type: 'success', message: this.$t('commonSuccess') });\n          this.onSearch();\n        } else {\n          this.$message({ type: 'error', message: res.info });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    onExportPDF() {\n      if (this.checkedRows.length < 1) {\n        return this.$message({ type: 'error', message: this.$t('commonPleaseChooseAtLeastOneOption') });\n      }\n      const hasNoPDFIDList = this.checkedRows.filter(item => !item.pdf_template_id);\n      if (hasNoPDFIDList.length === this.checkedRows.length) {\n        return this.$message.error(this.$t('CRReportNoPDFTemplateTips'));\n      }\n      if (hasNoPDFIDList.length) {\n        this.$confirm(this.$t('CRReportMassExportPDFTips', { ids: hasNoPDFIDList.map(item => item.cr_id).join(',') }), this.$t('commonTips'), {\n          confirmButtonText: this.$t('commonConfirm'),\n          cancelButtonText: this.$t('commonCancel'),\n          customClass: 'pms-ele-ui',\n          confirmButtonClass: 'list-btn',\n          cancelButtonClass: 'list-btn white'\n        }).then(() => {\n          this._exportPDF();\n        }).catch(() => {});\n      } else {\n        this._exportPDF();\n      }\n    },\n    _exportPDF() {\n      let params = {\n        cr_ids: this.checkedRows.map(item => item.cr_id)\n      };\n      if (this.checkedType === 'all') {\n        params = formatParams({\n          ...this.searchForm\n        });\n        if (params.generation_period && params.generation_period.length < 1) {\n          delete params.generation_period;\n        }\n      }\n      crReportExportPDF(params).then(resp => {\n        if (resp && resp.retcode === 0) {\n          this.$message.success(this.$t('commonExportHistorySuccessTips'));\n        } else {\n          this.$message.error(resp.info);\n        }\n      }).catch(() => { this.$message.error('Failed'); });\n    },\n    onExportExcel() {\n      if (this.checkedRows.length < 1) {\n        return this.$message({ type: 'error', message: this.$t('commonPleaseChooseAtLeastOneOption') }); // todo\n      }\n      let params = {\n        cr_ids: this.checkedRows.map(item => item.cr_id)\n      };\n      if (this.checkedType === 'all') {\n        params = formatParams({\n          ...this.searchForm\n        });\n        if (params.generation_period && params.generation_period.length < 1) {\n          delete params.generation_period;\n        }\n      }\n      crReportExportExcel(params).then(resp => {\n        if (resp && resp.retcode === 0) {\n          this.$message.success(this.$t('commonExportHistorySuccessTips'));\n        } else {\n          this.$message.error(resp.info);\n        }\n      }).catch(() => { this.$message.error('Failed'); });\n    },\n    onExportAgingExcel() {\n      if (this.checkedRows.length < 1) {\n        return this.$message({ type: 'error', message: this.$t('commonPleaseChooseAtLeastOneOption') }); // todo\n      }\n      let params = {\n        cr_id_list: this.checkedRows.map(item => item.cr_id)\n      };\n      if (this.checkedType === 'all') {\n        params = formatParams({\n          ...this.searchForm\n        });\n        if (params.generation_period && params.generation_period.length < 1) {\n          delete params.generation_period;\n        }\n      }\n      agingExportExcel(params).then(resp => {\n        if (resp && resp.retcode === 0) {\n          this.$message.success(this.$t('commonExportHistorySuccessTips'));\n        } else {\n          this.$message.error(resp.info);\n        }\n      }).catch(() => {\n        this.$message.error('Failed');\n      });\n    },\n    async getVendorSiteID(query = '', cb) {\n      try {\n        const params = {\n          pageno: 1,\n          count: 20,\n          key: `${query}`.trim(),\n          approval_country: this.searchForm.region || this.countryList.map(item => item.value).join('_'),\n          merchant_type: 'ALL' // sbs vendor id新增字段， ALL, SUPPLIER,SELLER, 不传后台默认返回SUPPLIER数据\n        };\n        const resp = await getSupplierList(params);\n        if (resp.status !== 0) {\n          this.$message.error(resp.info);\n          cb([]);\n        } else {\n          cb(\n            resp.data.list.map(supplier => {\n              return {\n                value: `${supplier['supplier_id']} ${supplier['name']}`,\n                supplierID: supplier['supplier_id'],\n                supplierName: supplier['name']\n              };\n            })\n          );\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    handleVendorSiteIDSelect(item) {\n      this.searchForm.vendor_site_id = item.supplierID;\n    },\n    onReset() {\n      Object.keys(this.searchForm).forEach(key => {\n        if (key === 'region') {\n          this.searchForm[key] = this.defaultCountry;\n        } else {\n          this.searchForm[key] = '';\n        }\n      });\n    },\n    handleChangePage(page_no) {\n      this.pager.page_no = page_no;\n      this.onSearch();\n    },\n    handleSizeChange(count) {\n      this.pager.count = count;\n      this.pager.page_no = 1;\n      this.onSearch();\n    },\n    onResetPageNoSearch() {\n      this.handleChangePage(1);\n    },\n    async onSearch() {\n      const params = {\n        ...this.pager,\n        ...this.searchForm,\n        list_type: this.activeTab === 'all' ? 1 : 2\n      };\n      if (params.generation_period && !params.generation_period.length) {\n        delete params.generation_period;\n      }\n      if (params.supplier_purchase_type === 'CB') {\n        params.supplier_type = 1;\n        params.purchase_type = '';\n      }\n      if (params.supplier_purchase_type === 'LocalOutright') {\n        params.supplier_type = 2;\n        params.purchase_type = 1;\n      }\n      if (params.supplier_purchase_type === 'LocalConsignment') {\n        params.supplier_type = 2;\n        params.purchase_type = 2;\n      }\n      if (params.supplier_purchase_type === 'LocalFBS') {\n        params.supplier_type = 2;\n        params.purchase_type = 3;\n      }\n      delete params.supplier_purchase_type; // 删除后台不需要的参数 避免误导\n      this.loading = true;\n      try {\n        const res = await getCRReportList(formatParams(params));\n        if (res && res.retcode === 0) {\n          this.tableList = res.data.report_list || [];\n          this.total = res.data.total || 0;\n          this.lastSearchForm = params;\n          this.resetCheckedType();\n        } else {\n          this.$message({ type: 'error', message: res.info });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loading = false;\n      }\n    },\n    cacheSearchCondition(form) {\n      this.$store.commit('setActiveTab', { module: moduleName, tab: moduleName });\n      this.$store.commit('setSearchForm', {\n        module: moduleName,\n        form: form || null,\n        field: 'field'\n      });\n    },\n    rowClick(row, column, event) {\n      if (!['action'].includes(column.columnKey)) {\n        this.cacheSearchCondition(this.lastSearchForm);\n        this.$router.push(`/admin/finance/crreport/detail/${row.cr_id}`);\n      }\n    }\n  },\n  created() {\n    this.canOperate = hasPermission(Permission.CHARGING_REPORT_EDIT_CR);\n    // 没设置权限或者有权限才展示\n    this.tabList = this.tabList.filter(item => !item.permission || hasPermission(item.permission));\n    const tabStyle = {\n      width: 0,\n      height: '60px',\n      'max-width': '75%'\n    };\n    this.tabList.forEach(tab => {\n      tabStyle.width += tab.width;\n    });\n    tabStyle.width = `${tabStyle.width}px`;\n    this.tabStyle = tabStyle;\n    const cacheConditionObj = this.$store.getters.searchForm[moduleName];\n    if (cacheConditionObj && cacheConditionObj.field) {\n      const cacheCondition = cacheConditionObj.field;\n      this.pager.count = cacheCondition.count;\n      this.pager.page_no = cacheCondition.page_no;\n      ['cr_id', 'crt_id', 'vendor_site_id', 'generation_period', 'report_status', 'checkout_month', 'region'].forEach(key => {\n        if (cacheCondition[key]) {\n          this.searchForm[key] = cacheCondition[key];\n        }\n      });\n    }\n    this.onSearch();\n  }\n};\n</script>\n\n<style scoped lang=\"scss\">\n@import '~@/styles/variables.scss';\n.cr-report-wrapper {\n  padding: 0 20px;\n  display: block;\n  .list-header-wrapper{\n    margin: 16px 0px;\n    .list-header-title {\n      font-size: 24px;\n      font-weight: normal;\n      color:$black;\n    }\n  }\n  .main-wrapper {\n    width: 100%;\n    padding: 0;\n  }\n  .pagination-center {\n    display: flex;\n    justify-content: center;\n    margin-top: 20px;\n  }\n  .status-span{\n    font-size: 12px;\n    display: inline-block;\n    padding: 2px;\n    word-break: nowrap;\n    border-radius: 2px;\n    &.confirmed {\n      color: $green;\n      background-color: $green-bg;\n    }\n    &.pending-confirm {\n      color: $orange;\n      background-color: $orange-bg;\n    }\n  }\n  .action-row{\n    margin-bottom: 16px;\n  }\n  .text-right{\n    text-align: right;\n  }\n  .list-btn {\n    font-size: 14px;\n    width: auto;\n    min-width: 70px;\n    padding-left: 10px;\n    padding-right: 10px;\n  }\n  .warning-icon {\n    font-size: 12px;\n    color: $red;\n    vertical-align: middle;\n    margin: 0px 4px 1px 0;\n  }\n}\n</style>\n<style lang=\"scss\">\n@import '~@/styles/common.scss';\n.cr-popover-break-word {\n  word-break: break-word;\n  .icon-tips-wrapper{\n    text-align: left;\n    display: flex;\n  }\n}\n.cr-report-wrapper {\n  .el-date-editor.el-input, .el-date-editor.el-input__inner{\n    width: auto;\n  }\n  .question-icon{\n    fill: #fff;\n  }\n  .el-table {\n    .cell {\n      word-break: break-word;\n    }\n  }\n  .exportGroup-btn{\n    margin-right: 8px;\n    .el-autocomplete_width_100{\n      width: 100%;\n      .el-input--suffix{\n        .el-input__inner{\n          padding-right: 10px;\n        }\n      }\n    }\n    vertical-align: middle;\n    .el-button--primary{\n      background-color: #3D6ED1;\n      border-color: #3D6ED1;\n    }\n    .el-button--medium{\n      padding: 8px 12px;\n    }\n    .el-dropdown__caret-button{\n      padding: 8px 6px;\n    }\n  }\n  .el-autocomplete_width_100{\n    width: 100%;\n    .el-input--suffix{\n      .el-input__inner{\n        padding-right: 10px;\n      }\n    }\n  }\n}\n.pms-ele-ui {\n  .el-message-box__message{\n    word-break: break-word;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/crReport/viewHistory.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"view-history\" is not PascalCase.","line":40,"column":9,"nodeType":"Literal","endLine":40,"endColumn":23,"fix":{"range":[1633,1645],"text":"ViewHistory"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div class=\"view-history-container pms-ui\">\n    <el-dialog\n      :title=\"$t('CRVersionHistory')\"\n      :visible.sync=\"dialogVisible\"\n      @close=\"onClose\">\n      <el-table :data=\"list\" max-height=\"400\">\n        <el-table-column property=\"cr_version\" :label=\"$t('crReportVersion')\" ></el-table-column>\n        <el-table-column property=\"total_charge\" :label=\"$t('CRTotalCharge')\"></el-table-column>\n        <el-table-column property=\"confirmed_date\" :label=\"$t('CRConfirmedDate')\"></el-table-column>\n        <el-table-column v-if=\"canEdit\" property=\"remark\" :label=\"$t('commonRemark')\">\n          <template slot-scope=\"scope\">\n            <el-input type=\"textarea\" show-word-limit :maxlength=\"128\" :rows=\"3\" :placeholder=\"$t('commonPleaseInput')\"\n            v-model=\"scope.row.remark\">\n          </el-input>\n          </template>\n        </el-table-column>\n        <el-table-column v-else property=\"remark\" :label=\"$t('commonRemark')\">\n          <template slot-scope=\"scope\">\n            {{scope.row.remark || '/'}}\n          </template>\n        </el-table-column>\n      </el-table>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <div v-if=\"canEdit\">\n          <el-button @click=\"onClose\">{{$t('commonCancel')}}</el-button>\n          <el-button type=\"primary\" @click=\"onConfirm\">{{$t('commonConfirm')}}</el-button>\n        </div>\n        <div v-else>\n          <el-button type=\"primary\" @click=\"onClose\">{{$t('commonConfirm')}}</el-button>\n        </div>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n// 注意：这个组件在 statement 中有使用，src/views/statementManagement/detail.vue\nexport default {\n  name: 'view-history',\n  data() {\n    return {\n      dialogVisible: false\n    };\n  },\n  props: {\n    list: {\n      required: true,\n      type: Array,\n      default: () => ([])\n    },\n    visible: {\n      type: Boolean,\n      required: true,\n      default: false\n    },\n    canEdit: {\n      type: Boolean,\n      default: true\n    }\n  },\n  watch: {\n    visible: {\n      handler(value) {\n        this.dialogVisible = value;\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    onConfirm() {\n      this.$emit('confirm');\n    },\n    onClose() {\n      this.$emit('close');\n    }\n  },\n  computed: {\n  },\n  created() {\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n</style>\n\n<style lang=\"scss\">\n@import \"~@/styles/common.scss\";\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/crossDock/components/historyDialog.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"exportHistory\" is not PascalCase.","line":34,"column":9,"nodeType":"Literal","endLine":34,"endColumn":24,"fix":{"range":[828,841],"text":"ExportHistory"}},{"ruleId":"vue/require-valid-default-prop","severity":2,"message":"Type of the default value for 'dataList' prop must be a function.","line":53,"column":16,"nodeType":"ArrayExpression","endLine":53,"endColumn":18}],"errorCount":2,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <el-dialog\n    @close=\"closeDialog\"\n    :visible.sync=\"historyVisible\"\n    :title=\"title\"\n  >\n    <list-view :dataList=\"dataList\" v-loading=\"loading\" :config=\"tableConfig\" :tableSchema=\"tableSchema\">\n    </list-view>\n    <section v-if=\"historyVisible\" class=\"pagination-center\">\n      <el-pagination\n        background\n        layout=\"sizes, prev, pager, next\"\n        :current-page=\"pager.page_no\"\n        :total.sync=\"pager.total\"\n        :page-sizes=\"[10, 20, 50, 100]\"\n        :page-size=\"pager.count\"\n        @size-change=\"handlePageSizeChange\"\n        @current-change=\"handlePageNumChange\"\n      ></el-pagination>\n    </section>\n  </el-dialog>\n</template>\n\n<script>\nimport ListView from '@/components/ApproveList/list';\n\nconst initPager = {\n  total: 0,\n  count: 10,\n  page_no: 1\n};\n\nexport default {\n  name: 'exportHistory',\n  components: {\n    ListView\n  },\n  data() {\n    return {\n      historyVisible: false\n    };\n  },\n  props: {\n    visible: {\n      type: Boolean, // 是否可见\n      default: false\n    },\n    title: { // 如果有值，则优先取传入值\n      default: ''\n    },\n    dataList: {\n      type: Array,\n      default: [],\n      required: true\n    },\n    pager: {\n      default: initPager,\n      required: true\n    },\n    loading: {\n      default: false,\n      required: true\n    },\n    tableConfig: {\n      default() {\n        return { align: 'center', border: false };\n      },\n      required: false\n    },\n    tableSchema: {\n      type: Array,\n      required: true\n    }\n  },\n  methods: {\n    handlePageSizeChange(count) {\n      this.$emit('pageSizeChange', { count });\n    },\n    handlePageNumChange(page_no) {\n      this.$emit('pageNumChange', { page_no });\n    },\n    closeDialog() {\n      this.$emit('close');\n    }\n  },\n  watch: {\n    '$props.visible': {\n      handler(curr, prev) {\n        this.historyVisible = curr;\n      },\n      immediate: true\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.pagination-center {\n  margin-top: 20px;\n  display: flex;\n  justify-content: center;\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/crossDock/components/noPagerDialog.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"noPagerDialog\" is not PascalCase.","line":17,"column":9,"nodeType":"Literal","endLine":17,"endColumn":24,"fix":{"range":[368,381],"text":"NoPagerDialog"}},{"ruleId":"vue/require-valid-default-prop","severity":2,"message":"Type of the default value for 'dataList' prop must be a function.","line":36,"column":16,"nodeType":"ArrayExpression","endLine":36,"endColumn":18}],"errorCount":2,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <el-dialog\n    @close=\"closeDialog\"\n    :visible.sync=\"dialogVisible\"\n    :title=\"title\"\n    :center=\"center\"\n  >\n    <list-view :dataList=\"dataList\" v-loading=\"loading\" :config=\"tableConfig\" :tableSchema=\"tableSchema\">\n    </list-view>\n  </el-dialog>\n</template>\n\n<script>\nimport ListView from '@/components/ApproveList/list';\n\nexport default {\n  name: 'noPagerDialog',\n  components: {\n    ListView\n  },\n  data() {\n    return {\n      dialogVisible: false\n    };\n  },\n  props: {\n    visible: {\n      type: Boolean, // 是否可见\n      default: false\n    },\n    title: {\n      default: ''\n    },\n    dataList: {\n      type: Array,\n      default: [],\n      required: true\n    },\n    loading: {\n      default: false,\n      required: false\n    },\n    tableConfig: {\n      default() {\n        return { align: 'center', border: false };\n      },\n      required: false\n    },\n    tableSchema: {\n      type: Array,\n      required: true\n    },\n    center: {\n      type: Boolean,\n      default: false\n    }\n  },\n  methods: {\n    closeDialog() {\n      this.$emit('close');\n    }\n  },\n  watch: {\n    '$props.visible': {\n      handler(curr, prev) {\n        this.dialogVisible = curr;\n      },\n      immediate: true\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/crossDock/list.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/crtManagement/create/addSkuDialog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/crtManagement/create/addSubFeeDialog.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":4,"column":97,"nodeType":"VIdentifier","messageId":"deprecated","endLine":4,"endColumn":103}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-dialog class=\"pms-ui add-sub-fee-dialog\" @close='onCloseChooseSubFee'\n    width=\"720px\" :title=\"$t('CRTAddSubFee')\" :visible.sync=\"dialogVisible\">\n    <el-form class=\"add-sub-fee-search-form\" :label-width=\"`136px`\" :model=\"searchForm\" @submit.native.prevent=\"onSearchSubFee()\">\n      <el-row>\n        <el-col :span=\"12\">\n          <el-form-item :label-width=\"`112px`\" :label=\"$t('subFeeID')\">\n            <el-input v-model=\"searchForm.sub_fee_id\" clearable></el-input>\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"12\">\n          <el-form-item :label=\"$t('subFeeType')\">\n            <el-cascader :options=\"config.options || []\" v-model=\"searchForm.typeList\"\n              :show-all-levels=\"false\" :props=\"subFeeProps\" :collapse-tags=\"true\" @change=\"() => onSearchSubFee()\"\n              clearable></el-cascader>\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"12\">\n          <el-form-item :label-width=\"`112px`\" :label=\"$t('subFeeName')\">\n            <el-input v-model=\"searchForm.sub_fee_name\" clearable></el-input>\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"12\">\n          <el-form-item :label=\"$t('subFeePeriodType')\">\n            <el-select v-model=\"searchForm.period_type\" @change=\"() => onSearchSubFee()\" clearable>\n              <el-option v-for=\"option in SubFeePeriodTypeList\" :key=\"option.value\"\n                :label=\"option.label\" :value=\"option.value\"></el-option>\n            </el-select>\n          </el-form-item>\n        </el-col>\n      </el-row>\n      <el-form-item class=\"float-right\">\n        <el-button class='list-btn' @click=\"onSearchSubFee\" size=\"mini\">{{$t('purchaseRequest.search')}}</el-button>\n        <el-button class='list-btn' @click=\"onResetSearchForm\" size=\"mini\">{{$t('purchaseRequest.clear')}}</el-button>\n        <el-button native-type=\"submit\" class=\"hidden-btn\"></el-button>\n      </el-form-item>\n    </el-form>\n    <el-table v-loading=\"loading\" :data=\"dataList\" border size=\"mini\" @selection-change=\"onSelectRows\">\n      <el-table-column align=\"center\" type=\"selection\"></el-table-column>\n      <el-table-column align=\"center\" width=\"120px\" :label=\"$t('subFeeID')\">\n        <template slot-scope=\"scope\">\n          <a target=\"_blank\" :href=\"`/admin/finance/subFee/edit/${scope.row.sub_fee_id}`\" class=\"link-to-sub-fee-detail\">\n          {{scope.row.sub_fee_id}}</a>\n        </template>\n      </el-table-column>\n      <el-table-column align=\"center\" :label=\"$t('subFeeType')\">\n        <template slot-scope=\"scope\">{{getTypeLabel(scope.row)}}</template>\n      </el-table-column>\n      <el-table-column align=\"center\" prop=\"sub_fee_name\" :label=\"$t('subFeeName')\"></el-table-column>\n      <el-table-column align=\"center\" width=\"130px\" :label=\"$t('subFeePeriodType')\">\n        <template slot-scope=\"scope\">\n          <div v-if=\"scope.row.period_type === 2\" class=\"sub-fee-period-type-cell\">\n            <div class=\"short-term-title\">Short Term</div>\n            <div class=\"short-term-date\">{{`${moment(scope.row.period_start_str, 'YYYY-MM-DD HH:mm:ss').format('YYYY-MM-DD')}~`}}</div>\n            <div class=\"short-term-date\">{{`${moment(scope.row.period_end_str, 'YYYY-MM-DD HH:mm:ss').format('YYYY-MM-DD')}`}}</div>\n          </div>\n          <div v-else>{{(SubFeePeriodTypeList.find(item => { return item.value === scope.row.period_type; }) || {}).label || ''}}</div>\n        </template>\n      </el-table-column>\n    </el-table>\n    <div class=\"content-center padding-top-bottom\">\n      <template>\n        <el-pagination background layout=\"sizes, prev, pager, next\" :total.sync=\"total\" :current-page=\"page\" :page-sizes=\"[10, 20]\"\n          :page-size=\"pageSize\" @current-change=\"handleCurrentChange\" @size-change=\"handleChangePageSize\"></el-pagination>\n      </template>\n    </div>\n    <div class=\"dialog-footer\">\n      <div class=\"select-tips\">\n        <span class=\"value-number\">{{selectedList.length || 0}}</span>\n        <span>Sub Fee Selected</span>\n      </div>\n      <el-button class=\"confirm-btn dialog-list-btn\" @click=\"onConfirmChooseSubFee\">{{$t('commonConfirm')}}</el-button>\n      <el-button class=\"cancel-btn dialog-list-btn\" @click=\"onCloseChooseSubFee\">{{$t('commonCancel')}}</el-button>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nimport { formatParams } from '@/utils/formatParams';\nimport { getAllFeeTypeList, SubFeePeriodTypeList } from '@/utils/constant';\nimport { getSubFeeList } from '@/api/subFeeManagement';\nimport moment from 'moment';\nexport default {\n  data() {\n    return {\n      dialogVisible: false,\n      moment,\n      searchForm: {\n        sub_fee_id: '',\n        typeList: [],\n        sub_fee_name: '',\n        period_type: ''\n      },\n      subFeeProps: {\n        multiple: true,\n        expandTrigger: 'hover'\n      },\n      SubFeePeriodTypeList,\n      dataList: [],\n      selectedList: [],\n      page: 1,\n      total: 0,\n      pageSize: 10,\n      loading: false\n    };\n  },\n  props: {\n    visible: {\n      type: Boolean,\n      required: true\n    },\n    config: {\n      type: Object,\n      required: true,\n      default: () => ({})\n    }\n  },\n  methods: {\n    onResetSearchForm() {\n      this.searchForm.sub_fee_id = '';\n      this.searchForm.typeList = [];\n      this.searchForm.sub_fee_name = '';\n      this.searchForm.period_type = '';\n    },\n    onCloseChooseSubFee() {\n      this.$emit('close');\n    },\n    onConfirmChooseSubFee() {\n      if (this.selectedList.length < 1) {\n        return this.$message.error('Please select at lease one Sub Fee first');\n      }\n      this.$emit('confirm', this.selectedList.map(item => ({\n        ...item, sub_fee_display_name: item.default_display_name\n      })));\n    },\n    onSearchSubFee() {\n      this.selectedList = [];\n      this.handleCurrentChange(1);\n    },\n    getTypeLabel(row) {\n      const typeList = [row.main_fee_type, row.sub_fee_type];\n      const subTypeList = [];\n      getAllFeeTypeList().forEach(item => subTypeList.push(item, ...item.children || []));\n      return typeList.map(type => {\n        return (subTypeList.find(item => item.value === type) || {}).label || '';\n      }).join(' / ');\n    },\n    onSelectRows(list) {\n      this.selectedList = list;\n    },\n    handleChangePageSize(size) {\n      this.pageSize = size;\n      this.page = 1;\n      this.searchSubFee(1);\n    },\n    handleCurrentChange(page) {\n      this.page = page;\n      this.searchSubFee(page);\n    },\n    searchSubFee(page) {\n      const typeList = this.searchForm.typeList || [];\n      const params = formatParams({\n        supplier_purchase_type: this.config.supplier_type,\n        region: this.config.region,\n        page_no: typeof page === 'number' ? page : 1,\n        count: this.pageSize,\n        ...this.searchForm,\n        option_list: this.config.optionList || '',\n        status: 1, // 1-active\n        supplier_type: this.config.supplier_type === 1 ? 1 : 2,\n        sub_fee_type_list: typeList.length ? typeList.map(type => {\n          return type[type.length - 1];\n        }) : (this.config.options[0] || { children: [] }).children.map(item => item.value)\n      }, {}, ['typeList']);\n      this.loading = true;\n      getSubFeeList(params).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error('Getting Sub Fee List Failed');\n        } else {\n          this.dataList = resp.data.sub_fee_list;\n          this.total = resp.data.total;\n        }\n        this.loading = false;\n      }).catch(() => {\n        this.$message.error('Getting Sub Fee List Failed');\n        this.loading = false;\n      });\n    }\n  },\n  watch: {\n    '$props.visible': function(now, prev) {\n      this.dialogVisible = now;\n      if (now) {\n        this.selectedList = [];\n        this.onResetSearchForm();\n        this.page = 1;\n        this.searchSubFee(1);\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  .float-right {\n    float: right;\n    margin-top: -5px;\n    .list-btn {\n      width: 72px;\n      border: 1px solid #3D6ED1;\n      border-radius: 2px;\n      margin-right: 0;\n      background: #fff;\n      color: #3D6ED1;\n    }\n  }\n  .hidden-btn {\n    margin-left: -5px;\n    padding: 0;\n    visibility: hidden;\n  }\n  .link-to-sub-fee-detail {\n    font-size: 14px;\n    color: #3D6ED1;\n    cursor: pointer;\n  }\n  .sub-fee-period-type-cell {\n    .short-term-title {\n      padding-right: 2px;\n    }\n    .short-term-date {\n      display: inline-block;\n      width: 70px;\n      opacity: 0.35;\n      font-size: 12px;\n      color: #000000;\n      text-align: left;\n    }\n  }\n  .dialog-footer {\n    display: flex;\n    align-items: center;\n    .select-tips {\n      flex: 1;\n      .value-number {\n        font-weight: bold;\n      }\n    }\n    .dialog-list-btn {\n      width: 72px;\n      margin-right: 0px;\n      background: #3D6ED1;\n      color: #fff;\n      border-radius: 2px;\n      & + .dialog-list-btn {\n        margin-left: 16px;\n      }\n      &.cancel-btn {\n        border: 1px solid #3D6ED1;\n        background: #fff;\n        color: #3D6ED1;\n      }\n    }\n  }\n</style>\n\n<style lang=\"scss\">\n  .add-sub-fee-dialog {\n    .el-dialog__title {\n      font-size: 16px;\n      color: #333333;\n      font-weight: bold;\n    }\n    .el-dialog__body {\n      padding: 20px 24px 24px;\n    }\n    .add-sub-fee-search-form {\n      .el-form-item__label {\n        font-size: 14px;\n        color: #333333;\n      }\n      .el-select, .el-input, .el-input__inner {\n        width: 200px;\n        height: 32px;\n      }\n      .el-cascader {\n        width: 200px;\n      }\n      .el-cascader .el-input__inner {\n        height: 32px !important;\n      }\n      .el-cascader__tags {\n        .el-tag {\n          max-width: calc(100% - 60px);\n          overflow: hidden;\n          text-overflow: ellipsis;\n        }\n      }\n    }\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/crtManagement/create/addSupplierDialog.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":16,"column":105,"nodeType":"VIdentifier","messageId":"deprecated","endLine":16,"endColumn":111}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-dialog class=\"pms-ui add-supplier-shop-dialog\" @close='onCloseChooseSupplier'\n    width=\"674px\" :title=\"$t('CRTAddSupplierShop')\" :visible.sync=\"dialogVisible\">\n    <div class=\"add-step\">\n      <div :class=\"`step-select ${step === 1 ? 'active' : ''}`\">\n        <span class=\"step-no\">1</span>\n        <span> {{ isSeller ? 'Select seller' : 'Select Supplier' }} </span>\n      </div>\n      <div class=\"connect-line\"></div>\n      <div :class=\"`step-select ${step === 2 ? 'active' : ''}`\">\n        <span class=\"step-no\">2</span>\n        <span>Select shop</span>\n      </div>\n    </div>\n    <div v-if=\"step === 1\" class=\"step-supplier\">\n      <el-form class=\"add-supplier-shop-search-form\" :label-width=\"`136px`\" :model=\"searchForm\" @submit.native.prevent=\"onSearchSupplierList()\">\n        <el-row>\n          <el-col :span=\"12\">\n            <el-form-item :label-width=\"`200px`\" :label=\"isSeller ? $t('commonSBSVendorID') : `${$t('commonSBSVendorID')}/${$t('commonVendorSiteID')}`\">\n              <el-input v-model=\"searchForm.key\" clearable></el-input>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item class=\"float-right\">\n              <el-button :loading=\"loading\" class='list-btn' @click=\"onSearchSupplierList\" size=\"mini\">{{$t('purchaseRequest.search')}}</el-button>\n              <el-button :loading=\"loading\" class='list-btn' @click=\"onResetSearchForm\" size=\"mini\">{{$t('purchaseRequest.clear')}}</el-button>\n              <el-button native-type=\"submit\" class=\"hidden-btn\"></el-button>\n            </el-form-item>\n          </el-col>\n        </el-row>\n      </el-form>\n      <el-table v-loading=\"loading\" :data=\"dataList\" border size=\"mini\" @selection-change=\"onSelectRows\">\n        <el-table-column type=\"selection\"></el-table-column>\n        <el-table-column :label=\"supplierIDLabel\">\n          <template slot-scope=\"props\">\n            {{ isSeller ? props.row.supplier_id : `${props.row.sbs_vendor_id}/${props.row.supplier_id}`}}\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"name\" :label=\"supplierNameLabel\"></el-table-column>\n        <template v-if=\"!isSeller\">\n          <el-table-column prop=\"supplier_type\" :label=\"$t('commonSupplierType')\"></el-table-column>\n          <el-table-column prop=\"purchase_type\" :label=\"$t('commonPurchaseType')\"></el-table-column>\n        </template>\n      </el-table>\n      <div class=\"content-center padding-top-bottom\">\n        <template>\n          <el-pagination background layout=\"sizes, prev, pager, next\" :total.sync=\"total\" :current-page=\"page\" :page-sizes=\"[10, 20]\"\n            :page-size=\"pageSize\" @current-change=\"handleCurrentChange\" @size-change=\"handleChangePageSize\"></el-pagination>\n        </template>\n      </div>\n      <div class=\"dialog-footer\">\n        <div class=\"select-tips\">\n          <span class=\"value-number\">{{selectedList.length || 0}}</span>\n          <span>Suppliers Selected</span>\n        </div>\n        <el-button :loading=\"loading\" class=\"confirm-btn dialog-list-btn\" @click=\"onConfirmChooseSupplier\">{{$t('commonNext')}}</el-button>\n        <el-button :loading=\"loading\" class=\"cancel-btn dialog-list-btn\" @click=\"onCloseChooseSupplier\">{{$t('commonCancel')}}</el-button>\n      </div>\n    </div>\n    <div v-else-if=\"step === 2\">\n      <el-table class=\"add-shop-table\" v-loading=\"loading\" :data=\"selectedList\" border size=\"mini\">\n        <el-table-column :label=\"supplierIDLabel\">\n          <template slot-scope=\"props\">\n            {{ isSeller ? props.row.supplier_id : `${props.row.sbs_vendor_id}/${props.row.supplier_id}`}}\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"name\" :label=\"supplierNameLabel\"></el-table-column>\n        <el-table-column :label=\"$t('commonShopID')\">\n          <template slot-scope=\"scope\">\n            <el-select multiple v-model=\"scope.row.shop_id_list\" placeholder=\"All\">\n              <el-option v-for=\"item in supplierShopMap[scope.row.supplier_id] || []\"\n                :key=\"item\" :label=\"item\" :value=\"item\"></el-option>\n            </el-select>\n          </template>\n        </el-table-column>\n      </el-table>\n      <div class=\"dialog-footer\">\n        <div class=\"select-tips\"></div>\n        <el-button :loading=\"loading\" class=\"confirm-btn dialog-list-btn\" @click=\"onConfirmChooseShop\">{{$t('commonAdd')}}</el-button>\n        <el-button :loading=\"loading\" class=\"cancel-btn dialog-list-btn\" @click=\"onBackSelectSupplier\">{{$t('commonBack')}}</el-button>\n      </div>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nimport { formatParams } from '@/utils/formatParams';\nimport { getSupplierList } from '@/api/supplier';\nimport { getSupplierShop } from '@/api/createCRT';\n\nexport default {\n  data() {\n    return {\n      dialogVisible: false,\n      searchForm: {\n        key: ''\n      },\n      step: 1, // 1-add supplier, 2-add shop\n      dataList: [],\n      selectedList: [],\n      supplierShopMap: {},\n      page: 1,\n      total: 0,\n      pageSize: 10,\n      loading: false\n    };\n  },\n  props: {\n    visible: {\n      type: Boolean,\n      required: true\n    },\n    config: {\n      type: Object,\n      required: true,\n      default: () => ({})\n    }\n  },\n  computed: {\n    isSeller() {\n      return [1, 4].includes(this.config.supplier_type);\n    },\n    supplierIDLabel() {\n      return this.isSeller ? this.$t('commonSBSVendorID') : `${this.$t('commonSBSVendorID')} / ${this.$t('commonVendorSiteID')}`;\n    },\n    supplierNameLabel() {\n      return this.isSeller ? this.$t('commonSellerName') : this.$t('commonSupplierSellerName');\n    }\n  },\n  methods: {\n    onResetSearchForm() {\n      this.searchForm.key = '';\n    },\n    onCloseChooseSupplier() {\n      this.$emit('close');\n    },\n    onConfirmChooseSupplier() {\n      if (this.selectedList.length < 1) {\n        return this.$message.error('Please select at lease one Supplier first');\n      }\n      const typeLabel = this.config.supplier_type === 1 ? 'CB' : 'Local';\n      const purchaseType = ['', '', 'Outright', 'Consignment', 'Consignment'][this.config.supplier_type];\n      const hasError = this.selectedList.some(item => {\n        return (item.supplier_type === 'CB' && typeLabel !== 'CB') || (typeLabel !== 'CB' && item.purchase_type !== purchaseType) ||\n        (item.supplier_type !== 'CB' && typeLabel === 'CB');\n      });\n      if (hasError) {\n        return this.$message.error(`This Template only support ${this.config.region} and ${typeLabel}${purchaseType ? '-' : ''}${purchaseType} supplier !`);\n      }\n      this.loading = true;\n      getSupplierShop({vendor_site_id_list: this.selectedList.map(item => item.supplier_id)}).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.supplierShopMap = resp.data || {};\n          this.step = 2;\n        }\n        this.loading = false;\n      }).catch(() => {\n        this.$message.error('Get Supplier Shop List Failed!');\n        this.loading = false;\n      });\n    },\n    onConfirmChooseShop() {\n      this.$emit('confirm', this.selectedList);\n    },\n    onBackSelectSupplier() {\n      this.selectedList = [];\n      this.step = 1;\n    },\n    onSearchSupplierList() {\n      this.selectedList = [];\n      this.handleCurrentChange(1);\n    },\n    onSelectRows(list) {\n      this.selectedList = list.map(item => ({ ...item, shop_id_list: [] }));\n    },\n    handleChangePageSize(size) {\n      this.pageSize = size;\n      this.page = 1;\n      this.searchSupplierList(1);\n    },\n    handleCurrentChange(page) {\n      this.page = page;\n      this.searchSupplierList(page);\n    },\n    searchSupplierList(page) {\n      const params = formatParams({\n        approval_country: this.config.region,\n        pageno: typeof page === 'number' ? page : 1,\n        count: this.pageSize,\n        supplier_type: this.isSeller ? this.config.supplier_type === 1 ? 'CB' : 'B2C' : '', // 后台是公用接口 存储的是字符串\n        merchant_type: this.isSeller ? 'SELLER' : 'SUPPLIER', // sbs vendor id 新增seller数据，不传默认查询supplier\n        ...this.searchForm\n      });\n      this.loading = true;\n      getSupplierList(params).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error('Getting Supplier List Failed');\n        } else {\n          this.dataList = resp.data.list;\n          this.total = resp.data.total;\n        }\n        this.loading = false;\n      }).catch(() => {\n        this.$message.error('Getting Supplier List Failed');\n        this.loading = false;\n      });\n    }\n  },\n  watch: {\n    '$props.visible': function(now, prev) {\n      this.dialogVisible = now;\n      if (now) {\n        this.selectedList = [];\n        this.step = 1;\n        this.onResetSearchForm();\n        this.page = 1;\n        this.searchSupplierList(1);\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  .add-step {\n    display: flex;\n    height: 24px;\n    width: fit-content;\n    margin: 0 auto 23px;\n    align-items: center;\n    justify-content: center;\n    .step-select {\n      opacity: .5;\n      font-size: 14px;\n      height: 24px;\n      line-height: 24px;\n      color: #333333;\n      .step-no {\n        display: inline-block;\n        width: 20px;\n        height: 20px;\n        line-height: 18px;\n        border-radius: 50%;\n        border: 1px solid #999999;\n        box-sizing: border-box;\n        text-align: center;\n        font-size: 12px;\n        color: #999999;\n        background-color: #fff;\n      }\n      &.active {\n        opacity: 1;\n        .step-no {\n          border-color: #3D6ED1;\n          color: #fff;\n          background-color: #3D6ED1;\n        }\n      }\n    }\n    .connect-line {\n      width: 83px;\n      height: 1px;\n      margin: 0 10px 0 5px;\n      background: #979797;\n    }\n  }\n  .float-right {\n    float: right;\n    margin-top: -5px;\n    .list-btn {\n      width: 72px;\n      border: 1px solid #3D6ED1;\n      border-radius: 2px;\n      margin-right: 0;\n      background: #fff;\n      color: #3D6ED1;\n      & + .list-btn {\n        margin-left: 7px;\n      }\n    }\n  }\n  .hidden-btn {\n    margin-left: -5px;\n    padding: 0;\n    visibility: hidden;\n  }\n  .add-shop-table {\n    margin-bottom: 16px;\n  }\n  .dialog-footer {\n    display: flex;\n    align-items: center;\n    .select-tips {\n      flex: 1;\n      .value-number {\n        font-weight: bold;\n      }\n    }\n    .dialog-list-btn {\n      width: 72px;\n      margin-right: 0px;\n      background: #3D6ED1;\n      color: #fff;\n      border-radius: 2px;\n      & + .dialog-list-btn {\n        margin-left: 16px;\n      }\n      &.cancel-btn {\n        border: 1px solid #3D6ED1;\n        background: #fff;\n        color: #3D6ED1;\n      }\n    }\n  }\n</style>\n\n<style lang=\"scss\">\n  .add-supplier-shop-dialog {\n    .el-dialog__title {\n      font-size: 16px;\n      color: #333333;\n      font-weight: bold;\n    }\n    .el-dialog__body {\n      padding: 6px 24px 24px;\n    }\n    .el-input__inner:focus {\n      outline: none;\n    }\n    .add-supplier-shop-search-form {\n      .el-form-item__label {\n        font-size: 14px;\n        color: #333333;\n      }\n      .el-select, .el-input, .el-input__inner {\n        width: 200px;\n        height: 32px;\n      }\n    }\n    .add-shop-table {\n      .cell > .el-select .el-input__inner {\n        &::placeholder { /* Chrome, Firefox, Opera, Safari 10.1+ */\n          color: #606266;\n          opacity: 1; /* Firefox */\n        }\n      }\n    }\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/crtManagement/create/edit.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/crtManagement/create/index.vue","messages":[{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":633,"column":33,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":633,"endColumn":34,"fix":{"range":[26361,26362],"text":""}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div class=\"pms-ui add-crt\">\n    <section class=\"create-header\">\n      <i @click=\"goBack\" class=\"el-icon-arrow-left back-icon\"></i>\n      <span class=\"title\">\n        {{isDraft ? basicForm.crt_name : `New Charging Report Template`}}\n        <span v-if=\"isDraft\" class=\"pms-status-tag\">{{$t('CRTStatusDraft')}}</span>\n      </span>\n      <div v-if=\"canEdit\" class=\"right-action\">\n        <el-button v-if=\"!isDraft\" @click=\"goBack\" :loading=\"loading\" class=\"clear-btn cancel-btn list-btn\">{{$t('commonCancel')}}</el-button>\n        <el-button @click=\"saveDraft\" :loading=\"loading\" class=\"draft-btn list-btn\">{{$t('commonSaveAsDraft')}}</el-button>\n        <el-button @click=\"submitCRT\" :loading=\"loading\" class=\"submit-btn list-btn\">{{$t('commonSubmit')}}</el-button>\n      </div>\n    </section>\n    <section class=\"gap-line\"></section>\n    <section class=\"main\">\n      <div class=\"group-title\">{{$t('CRTDetailBasicSetting')}}</div>\n      <el-form label-position=\"left\" class=\"crt-form\" ref=\"CRTForm\" :model=\"basicForm\" :rules=\"basicRules\" label-width=\"150px\">\n        <el-row class=\"form-row\" v-for='item in basicSchema' :key='item.field' :span=\"item.width || 24\" :offset=\"item.offset || 0\">\n          <el-form-item :required=\"item.required\" :prop=\"item.field\" :label=\"`${item.label && (item.label + ' :')}`\">\n            <pms-form-item @input=\"modifyForm\" :renderData=\"{ schema: item, form: basicForm }\"></pms-form-item>\n          </el-form-item>\n        </el-row>\n        <el-row class=\"form-row hover-row\">\n          <div class=\"hover-label el-form-item__label\">\n            <span>{{$t('CRTPDFTemplateID')}}</span>\n            <el-popover placement=\"top\" trigger=\"hover\" popper-class=\"add-crt-pdf-tips-popover\" :content=\"$t('CRTPDFTemplateIDTip')\">\n              <svg-icon slot=\"reference\" icon-class=\"question\" class=\"el-icon-question right-tips\"></svg-icon>\n            </el-popover>\n          </div>\n          <el-input-number :max=\"999999999\" :precision=\"0\" :controls=\"false\" v-model=\"basicForm.pdf_template_id\"></el-input-number>\n        </el-row>\n        <div class=\"group-title\">{{$t('CRTChargingDetail')}}</div>\n        <template v-if='!isTWLocalConsignment'>\n          <el-row class=\"form-row\" v-for='item in saleSchema' :key='item.field' :span=\"item.width || 24\" :offset=\"item.offset || 0\">\n            <el-form-item :required=\"item.required\" :prop=\"item.field\" :label=\"`${item.label} :`\">\n              <pms-form-item @input=\"modifyForm\" :renderData=\"{ schema: item, form: basicForm }\"></pms-form-item>\n            </el-form-item>\n          </el-row>\n        </template>\n      </el-form>\n      <sub-fee-tab :basicForm=\"basicForm\" @modify=\"modifySubFeeMap\" :tabList=\"tabList\" :subFeeMap=\"subFeeMap\"\n        @delete=\"deleteSubFeeMap\" :isTWLocalConsignment=\"isTWLocalConsignment\"></sub-fee-tab>\n      <supplier-list :basicForm=\"basicForm\" @modify=\"modifySupplierList\" :supplierList=\"supplierList\"\n        :showSupplierShopDiscount=\"showSupplierShopDiscount\" :subFeeList=\"discountAllFeeList\"></supplier-list>\n      <sku-discount-list v-if=\"showSkuDiscountList\" :basicForm=\"basicForm\" @modify=\"modifySkuDiscountList\" :discountSkuList=\"discountSkuList\"\n        :subFeeList=\"discountAllFeeList\" :supplierList=\"supplierList\"></sku-discount-list>\n    </section>\n  </div>\n</template>\n\n<script>\nimport PMSFormItem, { getSelectOptions } from '@/components/BaseItem/formItem';\nimport SubFeeTab from './subFeeTab';\nimport SupplierList from './supplierList';\nimport SkuDiscountList from './skuDiscountList';\nimport { createCRT, getCRTDetail, updateCRT } from '@/api/createCRT';\nimport { getSubFeeTypeConfig } from '@/api/subFeeManagement';\nimport { getCrtConfig } from '@/api/feeTypeConfig';\nimport { CRTGenerationPeriodList, CRTSaleValueOptionList,\n  CRTSupplierTypeList, CRTSubSupplierTypeList, getAllFeeTypeList, Permission } from '@/utils/constant';\nimport { formatParams, getSomeKeys } from '@/utils/formatParams';\nimport { hasPermission } from '@/utils/permission';\n\nconst SupplierTypeList = [{},\n  { purchase_type: '', supplier_type: 1 },\n  { purchase_type: 1, supplier_type: 2 },\n  { purchase_type: 2, supplier_type: 2 },\n  { purchase_type: 3, supplier_type: 2 }\n];\nconst SubFeeFieldList = ['sub_fee_id', 'main_fee_type', 'sub_fee_type', 'sub_fee_display_name'];\nconst SupplierShopFieldList = ['vendor_site_id', 'name', 'shop_id_list', 'discount_fee_list', 'discount_enable'];\nconst SkuDiscountFieldList = ['vendor_site_id', 'shop_id', 'discount_fee_list', 'sku_id', 'supplier_id'];\nconst SubFeeDiscountFieldList = ['sub_fee_id', 'sub_fee_name', 'discount_start_date', 'discount_end_date', 'discount_rate'];\n// 后台读取开关配置返回三个字段，cb local_outright local_consignment loal_fbs\nconst SupplierTypeConfigMap = {\n  1: 'cb',\n  2: 'local_outright',\n  3: 'local_consignment',\n  4: 'local_fbs' // 新增local_fbs\n};\nconst validDiscountFeeReg = /^100(\\.0{1,2})?$|^\\d{1,2}(\\.\\d{1,2})?$/;\n\nexport default {\n  data() {\n    const isUniversalUser = this.$store.getters.isUniversalUser;\n    const region = this.$store.getters.country;\n    return {\n      basicForm: { region: isUniversalUser ? '' : region, crt_name: '', generate_period: '',\n        sale_value_option: '', supplier_type: isUniversalUser ? 1 : 2, purchase_type: '', pdf_template_id: undefined,\n        sub_supplier_type: 2\n      },\n      cacheForm: {\n        region: isUniversalUser ? '' : region,\n        supplier_type: isUniversalUser ? 1 : 2\n      },\n      canEdit: false,\n      isDraft: !!this.$route.params.id,\n      subFeeConfigList: [],\n      subFeeMap: {},\n      supplierList: [],\n      loading: false,\n      crtConfig: {}, // CRT 配置\n      deleteBindSupplierFeeList: [],\n      supplierTypeList: CRTSupplierTypeList.slice(1),\n      discountSkuList: []\n    };\n  },\n  components: {\n    'pms-form-item': PMSFormItem,\n    SubFeeTab,\n    SupplierList, SkuDiscountList\n  },\n  computed: {\n    // Generation Period 选项值\n    generationPeriod() {\n      return CRTGenerationPeriodList.slice(1).filter(item => {\n        return this.crtConfig.period_options ? this.crtConfig.period_options.includes(item.value) : false;\n      });\n    },\n    // 获取Charging Detail 中选择的 Fee\n    discountAllFeeList() {\n      let result = [];\n      Object.values(this.subFeeMap).forEach(itemFeeList => {\n        // 过滤掉 Option为Manual Upload的Fee\n        itemFeeList = itemFeeList.filter(fee => {\n          return fee.option !== 7;\n        });\n        itemFeeList = itemFeeList.map((fee) => {\n          return getSomeKeys(fee, SubFeeDiscountFieldList);\n        });\n        result = [...result, ...itemFeeList];\n      });\n      return result || [];\n    },\n    showSkuDiscountList() {\n      return this.crtConfig.sku_discount_enable;\n    },\n    showSupplierShopDiscount() {\n      return (this.crtConfig.supplier_shop_discount_enable &&\n      this.crtConfig.supplier_shop_discount_detail.normal_discount_enable) || false;\n    },\n    regionList() {\n      return this.$store.getters.countrySelectList || [];\n    },\n    isUniversalUser() {\n      return this.$store.getters.isUniversalUser || false;\n    },\n    currency() {\n      return this.$store.getters.currencyMap[this.basicForm.region] || '';\n    },\n    isTWLocalConsignment() {\n      return this.basicForm.region === 'TW' && this.basicForm.supplier_type === 3;\n    },\n    basicRules() {\n      return {\n        'crt_id': { required: false },\n        'region': { required: true, message: 'Region is required' },\n        'crt_name': [\n          { required: true, message: 'CRT Name is required' },\n          { max: 60, message: 'CRT Name cannot be longer than 60 characters' }\n        ],\n        'generate_period': { required: true, message: 'Generation Period is required' },\n        'supplier_type': { required: true, message: 'Client Type is required' },\n        'sub_supplier_type': { required: true, message: 'Sub Supplier Type is required' },\n        'sale_value_option': { required: true, message: 'Sale Value Option is required' }\n      };\n    },\n    basicSchema() {\n      return [\n        { field: 'crt_id', required: false, type: 'text', label: this.$t('CRReportCRTID'), hidden: !this.isDraft },\n        { field: 'region', required: false, type: 'text', label: this.$t('commonRegion'), hidden: !this.isDraft },\n        { field: 'region', required: true, type: 'select', label: this.$t('commonRegion'),\n          getChildren: (h) => getSelectOptions(this.regionList, h), hidden: this.isDraft,\n          on: { change: () => { this.onFieldchange(); } }\n        },\n        { field: 'crt_name', type: 'input', label: this.$t('CRReportCRTName'), required: true,\n          render: (schema, row, h) => {\n            return ['el-input', {\n              props: { value: row[schema.field] },\n              on: { input: (value) => { this.modifyForm(schema, value); } }\n            }, [\n              h('span', { slot: 'suffix' }, `${(row[schema.field] || '').length || 0} / 60`)\n            ]];\n          }\n        },\n        { field: 'generate_period', required: true, type: 'select', label: this.$t('CRReportGenerationPeriod'),\n          // 选项需要根据配置来\n          getChildren: (h) => getSelectOptions(this.generationPeriod, h)\n        },\n        { field: 'supplier_type', required: true, type: 'select', label: this.$t('commonClientType'),\n          getChildren: (h) => getSelectOptions(this.supplierTypeList, h),\n          on: { change: () => { this.onFieldchange(); } }\n        },\n        { field: 'sub_supplier_type', required: true, type: 'select', label: '', hidden: !this.isTWLocalConsignment,\n          getChildren: (h) => getSelectOptions(CRTSubSupplierTypeList, h),\n          on: { change: () => { this.onFieldchange(); } }\n        }\n      ].filter(item => !item.hidden);\n    },\n    saleSchema() {\n      return [\n        { field: 'sale_value_option', required: true, type: 'select', label: this.$t('CRTSaleValueOption'),\n          getChildren: (h) => getSelectOptions(CRTSaleValueOptionList.slice(1), h),\n          on: { change: () => { this.onSaleOptionChange(); } }\n        }\n      ];\n    },\n    // 读取打开开关的配置\n    tabList() {\n      const configList = this.subFeeConfigList || [];\n      const list = [];\n      getAllFeeTypeList().forEach(item => {\n        // main_fee_type 相同\n        const config = configList.find(config => config.main_fee_type === item.value) || {};\n        const typeList = config.sub_fee_type_list || [];\n        // sub_fee_type_list 中有选中的，注意这里的变成了 cb local_consignment 或者 local_outright 都返回\n        if (typeList && typeList.length && typeList.some(type => !!type[SupplierTypeConfigMap[this.basicForm.supplier_type]])) {\n          // 需要对 children 做一层过滤\n          list.push({ ...item, children: item.children.filter(child => {\n            const type = typeList.find(type => type.sub_fee_type === child.value) || {};\n            return !!type[SupplierTypeConfigMap[this.basicForm.supplier_type]];\n          }) });\n        }\n      });\n      return list;\n    }\n  },\n  methods: {\n    goBack() {\n      this.$router.back();\n    },\n    modifyForm(schema, value) {\n      this.$set(this.basicForm, schema.field, value);\n    },\n    onSaleOptionChange() {\n      this.subFeeMap = {};\n      this.supplierList = [];\n    },\n    onFieldchange() {\n      const { region = '', supplier_type = '' } = this.cacheForm;\n      const hasSupplier = this.supplierList.length > 0;\n      const hasSubFee = (Object.values(this.subFeeMap).length) && Object.values(this.subFeeMap).some(arr => arr.length > 0);\n      if (region && supplier_type && (hasSupplier || hasSubFee)) {\n        this.$confirm(this.$t('CRTFieldChangeTips'), '', {\n          showConfirmButton: true\n        }).then(() => {\n          this.getSubFeeConfig();\n          this.getChargingReportTemplateConfig();\n          this.subFeeMap = {};\n          this.supplierList = [];\n          this.cacheForm.region = this.basicForm.region;\n          this.cacheForm.supplier_type = this.basicForm.supplier_type;\n        }).catch(() => {\n          this.basicForm.region = region;\n          this.basicForm.supplier_type = supplier_type;\n        });\n      } else {\n        this.cacheForm.region = this.basicForm.region;\n        this.cacheForm.supplier_type = this.basicForm.supplier_type;\n        if (this.basicForm.region && this.basicForm.supplier_type) {\n          this.getSubFeeConfig();\n          this.getChargingReportTemplateConfig();\n        }\n      }\n    },\n    modifySubFeeMap(key, list) {\n      // this.subFeeMap[key] = list;\n      // 需要通过 this.$set,要不然 Vue 无法监听到 变化\n      this.$set(this.subFeeMap, key, list);\n    },\n    deleteSubFeeMap(list, index, mainFeeType) {\n      if (this.isInSupplierSelectedFee(list[index].sub_fee_id)) {\n        this.$confirm(this.$t('confirmDeleteSubFee'), 'Tips', {\n          confirmButtonText: 'Confirm',\n          cancelButtonText: 'Cancel',\n          type: 'warning'\n        }).then(() => {\n          // 如果有值，则需要删除 sub Fee 的，也需要删除在 Supplier List 中选择的\n          this.deleteSupplierFee(list[index].sub_fee_id);\n          list.splice(index, 1);\n          this.modifySubFeeMap(mainFeeType, list);\n        }).catch(() => {});\n      } else {\n        list.splice(index, 1);\n        this.modifySubFeeMap(mainFeeType, list);\n      }\n    },\n    // 判断现在所选的 Supplier 是否含有删除的 Fee\n    isInSupplierSelectedFee(sub_fee_id) {\n      return this.supplierList.some(supplier => {\n        return supplier.discount_fee_list && supplier.discount_fee_list.some((fee, index) => {\n          return sub_fee_id === fee.sub_fee_id;\n        });\n      });\n    },\n    // 删除 supplier List 中选中了的 sub Fee\n    deleteSupplierFee(sub_fee_id) {\n      this.deleteBindSupplierFeeList = [];\n      this.supplierList.forEach(supplier => {\n        let targetFeeIndex = -1;\n        supplier.discount_fee_list && supplier.discount_fee_list.find((fee, index) => {\n          if (sub_fee_id === fee.sub_fee_id) {\n            targetFeeIndex = index;\n            return true;\n          }\n        });\n        if (targetFeeIndex >= 0) {\n          supplier.discount_fee_list.splice(targetFeeIndex, 1);\n        }\n      });\n    },\n    modifySupplierList(list) {\n      this.supplierList = list;\n    },\n    modifySkuDiscountList(list) {\n      this.discountSkuList = list;\n    },\n    validateSupplierList(supplierListParams) {\n      let errorMsg = '';\n      supplierListParams.every(supplier => {\n        return supplier.discount_fee_list.every(fee => {\n          // 配置了 fee，但是没有 Discount Info\n          if (supplier.discount_enable && fee.discount_info_list.length === 0) {\n            errorMsg = 'InvalidDiscountPeriodMsg';\n            return false;\n          }\n          // 校验 discount_period 配置\n          if (supplier.discount_enable && fee.discount_info_list.some(item => {\n            return item.discount_period.length === 0;\n          })) {\n            errorMsg = 'InvalidDiscountPeriodRequiredMsg';\n            return false;\n          }\n          // 校验 discount rate\n          if (supplier.discount_enable && fee.discount_info_list.some(item => {\n            return item.discount_rate && !validDiscountFeeReg.test(item.discount_rate);\n          })) {\n            errorMsg = 'InvalidDiscountRateMsg';\n            return false;\n          }\n          return true;\n        });\n      });\n      if (errorMsg) {\n        this.$message.error(this.$t(errorMsg));\n        return false;\n      } else { return true; }\n    },\n    validateSkuList(skuList) {\n      let errorMsg = '';\n      skuList.every(sku => {\n        if (!sku.discount_fee_list.length) { errorMsg = 'inValidDiscountFee'; return false; }\n        return sku.discount_fee_list.every(fee => {\n          if (fee.discount_rate && !validDiscountFeeReg.test(fee.discount_rate)) {\n            errorMsg = 'InvalidDiscountRateMsg';\n            return false;\n          }\n          if (!fee.discount_rate) {\n            errorMsg = 'discountRateRequired';\n            return false;\n          }\n          return true;\n        });\n      });\n      return errorMsg;\n    },\n    dealSupplierListDiscountRate(list) {\n      list.map(item => {\n        item.discount_fee_list.map(fee => {\n          return fee.discount_info_list.map(discount => {\n            discount.discount_rate = discount.discount_rate === '' ? 0 : parseFloat(discount.discount_rate);\n            return discount;\n          });\n        });\n        return item;\n      });\n    },\n    dealSkuListDiscountRate(list) {\n      list.map(item => {\n        item.discount_fee_list.map(fee => {\n          fee.discount_rate = fee.discount_rate === '' ? 0 : parseFloat(fee.discount_rate);\n          return fee;\n        });\n        return item;\n      });\n    },\n    getSubmitParams(is_submit) {\n      const subFeeList = [];\n      Object.values(this.subFeeMap).forEach((list = []) => {\n        subFeeList.push(...list.map(item => getSomeKeys(item, SubFeeFieldList)));\n      });\n      const supplierListParams = this.handleSupplierList();\n      const discountSkuListParams = JSON.parse(JSON.stringify(this.discountSkuList));\n      // 处理discount Rate 类型\n      this.dealSupplierListDiscountRate(supplierListParams);\n      if (this.showSkuDiscountList) {\n        const skuErrorMsg = this.validateSkuList(discountSkuListParams);\n        if (skuErrorMsg) {\n          this.$message.error(this.$t(skuErrorMsg));\n          return;\n        } else {\n          // 处理discount Rate 类型\n          this.dealSkuListDiscountRate(discountSkuListParams);\n        }\n      }\n      const supplierTypeMap = SupplierTypeList[this.basicForm.supplier_type || 0] || {};\n      const skuList = discountSkuListParams.map(item => getSomeKeys(item, SkuDiscountFieldList, { supplier_id: 'vendor_site_id' }));\n      return formatParams({\n        crt_id: this.isDraft ? this.basicForm.crt_id : '',\n        basic_setting: formatParams({\n          ...this.basicForm,\n          ...supplierTypeMap,\n          sub_supplier_type: this.isTWLocalConsignment ? this.basicForm.sub_supplier_type : 0\n        }),\n        sub_fee_list: subFeeList,\n        supplier_list: supplierListParams.map(item => getSomeKeys(item, SupplierShopFieldList, { name: 'supplier_name' })),\n        discount_sku_list: skuList,\n        is_submit\n      });\n    },\n    handleSupplierList() {\n      let params = JSON.parse(JSON.stringify(this.supplierList));\n      params = params.map(item => {\n        if (!item.discount_enable) {\n          item.discount_fee_list = [];\n        }\n        item.discount_fee_list.forEach(fee => {\n          fee.discount_info_list.forEach(discount => {\n            [discount.discount_start_date, discount.discount_end_date] = discount.discount_period;\n          });\n        });\n        return item;\n      });\n      return params;\n    },\n    async saveDraft() {\n      this.loading = true;\n      try {\n        if (!this.basicForm.region) return this.$message.error('Region is required');\n        if (!this.basicForm.crt_name) return this.$message.error('CRT Name is required');\n        const confirmDraft = await this.$confirm('Confirm to Save As Draft ?');\n        if (confirmDraft) {\n          const requestFun = this.isDraft ? updateCRT : createCRT;\n          let resp = await requestFun(this.getSubmitParams(0));\n          if (resp.retcode === -4006) {\n            // 校验出在其他CRT中存在 Supplier，需要二次确认\n            const h = this.$createElement;\n            const checkRepeat = await this.$confirm('', 'Attention',\n              {\n                title: 'Attention',\n                message: h('p', { class: 'crt-msg-text' }, [\n                  this.$t('repeatSupplierTips', { supplierList: resp.data.duplicated_supplier_info})\n                ]),\n                confirmButtonText: this.$t('commonConfirm'),\n                cancelButtonText: this.$t('commonCancel'),\n                type: 'warning',\n                confirmButtonClass: 'crt-confirm-btn',\n                customClass: 'crt-confirm-text'\n              }\n            );\n            if (checkRepeat) {\n              resp = await requestFun(Object.assign({ ...this.getSubmitParams(0), skip_crt_supplier_duplicated_check: true }));\n            }\n          }\n          if (resp.retcode === 0) {\n            this.$message.success('success');\n            this.goBack();\n          } else {\n            this.$message.error(resp.message);\n          }\n        }\n      } catch (e) {\n        this.$message.error(e.message);\n      } finally {\n        this.loading = false;\n      }\n    },\n    // 校验除base form之外的\n    validateOther() {\n      const supplierListParams = this.handleSupplierList();\n      const discountSkuListParams = JSON.parse(JSON.stringify(this.discountSkuList));\n      // 校验supplier List\n      if (!this.validateSupplierList(supplierListParams)) {\n        return false;\n      }\n      if (this.showSkuDiscountList) {\n        const skuErrorMsg = this.validateSkuList(discountSkuListParams);\n        if (skuErrorMsg) {\n          this.$message.error(this.$t(skuErrorMsg));\n          return false;\n        }\n      }\n      return true;\n    },\n    async submitCRT() {\n      this.loading = true;\n      try {\n        const valid = this.$refs.CRTForm.validate() && this.validateOther();\n        if (valid) {\n          const params = this.getSubmitParams(1);\n          if (!params) return;\n          if (!params.sub_fee_list.length) return this.$message.error('Please add at lease one Sub Fee first');\n          if (!params.supplier_list.length) return this.$message.error('Please add at lease one Supplier first');\n          const requestFun = this.isDraft ? updateCRT : createCRT;\n          let resp = await requestFun(params);\n          if (resp.retcode === -4006) {\n            // 校验出在其他CRT中存在 Supplier，需要二次确认\n            const h = this.$createElement;\n            const checkRepeat = await this.$confirm('', 'Attention',\n              {\n                title: 'Attention',\n                message: h('p', { class: 'crt-msg-text' }, [\n                  this.$t('repeatSupplierTips', { supplierList: resp.data.duplicated_supplier_info})\n                ]),\n                confirmButtonText: this.$t('commonConfirm'),\n                cancelButtonText: this.$t('commonCancel'),\n                type: 'warning',\n                confirmButtonClass: 'crt-confirm-btn',\n                customClass: 'crt-confirm-text'\n              }\n            );\n            if (checkRepeat) {\n              resp = await requestFun(Object.assign({ ...params, skip_crt_supplier_duplicated_check: true }));\n            }\n          }\n          if (resp.retcode === 0) {\n            this.$message.success('success');\n            this.goBack();\n          } else {\n            this.$message.error(resp.message);\n          }\n        }\n      } catch (e) {\n        this.$message.error(e.message);\n      } finally {\n        this.loading = false;\n      }\n    },\n    // 获取 CRT 配置\n    getChargingReportTemplateConfig() {\n      this.loading = true;\n      const params = formatParams({\n        region: this.basicForm.region,\n        supplier_purchase_type: this.basicForm.supplier_type\n      });\n      getCrtConfig(params).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.message);\n        } else {\n          this.crtConfig = resp.data || {};\n        }\n        this.loading = false;\n      }).catch(() => { this.loading = false; });\n    },\n    getSubFeeConfig() {\n      this.loading = true;\n      const supplierTypeMap = SupplierTypeList[this.basicForm.supplier_type || 0] || {};\n      const params = formatParams({\n        region: this.basicForm.region,\n        ...supplierTypeMap\n      });\n      getSubFeeTypeConfig(params).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.message);\n        } else {\n          this.subFeeConfigList = resp.data.sub_fee_type_list || [];\n        }\n        this.loading = false;\n      }).catch(() => { this.loading = false; });\n    },\n    getCRTDarftDetail(id) {\n      this.loading = true;\n      getCRTDetail({ crt_id: id }).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.message);\n        } else {\n          const { basic_setting = {}, supplier_list = [], sub_fee_list = [], discount_sku_list = [] } = resp.data || {};\n          if (basic_setting.crt_status !== 1) {\n            this.$message.error('CRT status is not a draft');\n            this.$router.push(`/admin/finance/CRT/detail/${basic_setting.crt_id}`);\n          }\n          this.basicForm = {\n            ...this.basicForm,\n            ...basic_setting,\n            generate_period: basic_setting.generate_period || '',\n            sale_value_option: basic_setting.sale_value_option || '',\n            pdf_template_id: basic_setting.pdf_template_id || undefined,\n            supplier_type: basic_setting.supplier_type === 1 ? 1 : ['', 2, 3, 4][basic_setting.purchase_type],\n            sub_supplier_type: basic_setting.sub_supplier_type || 2 // 非(TW和consignment)时，sub_supplier_type=0\n          };\n          this.cacheForm = { region: this.basicForm.region, supplier_type: this.basicForm.supplier_type };\n          if (this.basicForm.region && this.basicForm.supplier_type) {\n            this.getSubFeeConfig();\n            this.getChargingReportTemplateConfig();\n          }\n          const subFeeMap = {};\n          sub_fee_list.forEach(fee => {\n            const key = fee.main_fee_type;\n            if (subFeeMap[key]) {\n              subFeeMap[key].push(fee);\n            } else {\n              subFeeMap[key] = [fee];\n            }\n          });\n          this.subFeeMap = subFeeMap;\n          this.supplierList = supplier_list.map(item => {\n            if (item.discount_fee_list.length) {\n              item.discount_fee_list.forEach(fee => {\n                fee.discount_info_list.forEach(discount => {\n                  discount.discount_period = [discount.discount_start_date, discount.discount_end_date];\n                });\n              });\n            }\n            return { ...item, supplier_id: item.vendor_site_id, name: item.supplier_name, isOpenDiscount: false };\n          });\n          this.discountSkuList = discount_sku_list.map(item => ({ ...item, supplier_id: item.vendor_site_id }));\n        }\n        this.loading = false;\n      }).catch(() => { this.loading = false; });\n    }\n  },\n  created() {\n    this.canEdit = hasPermission(Permission.EDIT_CHARGING_REPORT_TEMPLATE);\n    if (this.isDraft) {\n      this.getCRTDarftDetail(this.$route.params.id);\n    } else if (this.basicForm.region && this.basicForm.supplier_type) {\n      this.getSubFeeConfig();\n      this.getChargingReportTemplateConfig();\n    }\n  },\n  watch: {\n    'basicForm.region': function (newLastRegion) {\n      if (newLastRegion === 'TW') {\n        this.supplierTypeList = this.supplierTypeList.filter(item => item.value !== 2);\n        if (this.basicForm.supplier_type === 2) {\n          this.$set(this.basicForm, 'supplier_type', 1);\n        }\n      } else {\n        this.supplierTypeList = CRTSupplierTypeList.slice(1);\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  .add-crt {\n    margin: 22px 16px 0 19px;\n    .create-header {\n      display: flex;\n      align-items: center;\n      .back-icon {\n        color: #666666;\n        font-size: 18px;\n        cursor: pointer;\n      }\n      .title {\n        margin-left: 4px;\n        flex: 1;\n        display: flex;\n        align-items: center;\n        color: #333333;\n        font-size: 24px;\n        .pms-status-tag {\n          margin-left: 8px;\n          background: rgba(244,171,97,0.10);\n          border-radius: 2px;\n          font-size: 12px;\n          color: #F4AB61;\n        }\n      }\n      .right-action {\n        width: fit-content;\n        text-align: right;\n        .submit-btn {\n          margin-left: 5px;\n          background: #3D6ED1;\n          border: 1px solid #3D6ED1;\n        }\n        .list-btn {\n          border-radius: 2px;\n        }\n        .draft-btn {\n          width: 109px;\n          border: 1px solid #3D6ED1;\n          color: #3D6ED1;\n          background-color: #fff;\n        }\n      }\n    }\n    .gap-line {\n      margin-top: 9px;\n      height: 2px;\n      background-color: #EDEEF2;\n    }\n    .group-title {\n      margin: 28px 0 20px;\n      font-size: 18px;\n      font-weight: bold;\n      color: #333333;\n    }\n    .crt-form {\n      margin-top: 33px;\n      .form-row {\n        min-height: 56px;\n        line-height: 56px;\n        overflow: hidden;\n        .el-form-item {\n          height: inherit;\n          line-height: inherit;\n        }\n      }\n      .hover-row {\n        margin-top: -12px;\n        display: flex;\n        align-items: center;\n        .hover-label {\n          width: 150px;\n        }\n        .right-tips {\n          cursor: pointer;\n          font-size: 12px;\n          color: #A1A1A1;\n        }\n      }\n      .el-select, .el-input, .el-cascader, .el-input-number, .el-textarea {\n        width: 300px;\n        height: 32px !important;\n        line-height: 32px;\n      }\n    }\n  }\n</style>\n\n<style lang=\"scss\">\n  .add-crt .crt-form {\n    .el-input__inner {\n      height: 32px;\n    }\n    .el-input--suffix .el-input__inner {\n      padding-right: 48px;\n    }\n    .el-select .el-input--suffix .el-input__inner {\n      padding-right: 30px;\n    }\n    .el-cascader .el-input__inner {\n      height: 32px !important;\n    }\n    .el-input-number .el-input__inner {\n      padding-left: 3px;\n      text-align: left;\n    }\n    .el-cascader__tags {\n      .el-tag {\n        max-width: calc(100% - 60px);\n        overflow: hidden;\n        text-overflow: ellipsis;\n      }\n    }\n  }\n  .add-crt-pdf-tips-popover {\n    max-width: 322px;\n    padding: 16px;\n    transform: translateY(2px);\n    color: #333333;\n    font-size: 14px;\n    line-height: 18px;\n    word-break: break-word;\n  }\n  .crt-msg-text {\n    max-height: 500px;\n    overflow: auto;\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/crtManagement/create/skuDiscountList.vue","messages":[{"ruleId":"vue/no-unused-components","severity":2,"message":"The \"AddSupplierListDialog\" component has been registered but not used.","line":110,"column":5,"nodeType":"Property","endLine":110,"endColumn":26}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"crt-sku-list-tab\">\n    <header class=\"tab-header\">\n      <div class=\"group-title\">{{$t('discountSkuList')}}</div>\n      <section class=\"mass-action\">\n        <list-mass-upload v-if=\"!!basicForm.region\" :actionUrl=\"actionUrl\" :config=\"templateConfig\"\n          @uploadSuccess=\"uploadSuccess\" :uploadData=\"uploadData\" :noShowSuccessMsg=\"true\"></list-mass-upload>\n      </section>\n    </header>\n    <div class=\"tab-main\">\n      <section class=\"tab-list\" v-if=\"list.length\">\n        <div class=\"update-all-selected\">\n          <div class=\"mass-item\"><span class=\"label\">{{$t('discountStartDate')}}</span>\n          <el-date-picker v-model=\"massUpdateData.discount_start_date\" value-format=\"yyyy-MM-dd\" type=\"date\"></el-date-picker></div>\n          <div class=\"mass-item\"><span class=\"label\">{{$t('discountEndDate')}}</span>\n          <el-date-picker v-model=\"massUpdateData.discount_end_date\" value-format=\"yyyy-MM-dd\" type=\"date\"></el-date-picker></div>\n          <div class=\"mass-item\"><span class=\"label\">{{$t('discountRate')}}</span>\n          <el-input @change=\"changeDiscountFee(massUpdateData)\" class=\"sub-fee-discount-rate\" v-model=\"massUpdateData.discount_rate\"></el-input></div>\n          <el-button class=\"update-all-selected-btn\" @click=\"updateToSelectedOrAll(true)\">{{$t('commonUpdateAll')}}</el-button>\n          <el-button class=\"update-all-selected-btn\" :disabled=\"!canUpdateSelected\" @click=\"updateToSelectedOrAll(false)\">{{$t('commonUpdateSelect')}}</el-button>\n        </div>\n        <el-table class=\"sku-list-list\" :data=\"list\" border @selection-change=\"handleSelectionChange\">\n          <el-table-column type=\"selection\" width=\"55\"></el-table-column>\n          <el-table-column fixed align=\"center\" key=\"sku_id\" :label=\"$t('commonSkuID')\" prop=\"sku_id\"></el-table-column>\n          <el-table-column fixed align=\"center\" key=\"shop_id\" :label=\"$t('commonShopID')\" prop=\"shop_id\"></el-table-column>\n          <el-table-column align=\"center\" key=\"supplier_id\" prop=\"supplier_id\" :label=\"$t('commonVendorSiteID')\"></el-table-column>\n          <!-- 增加删除 Discount Fee -->\n          <el-table-column class=\"discount-item\" align=\"center\" key=\"discount-item\" :label=\"$t('discountFee')\" width=\"350px\">\n            <template slot-scope=\"scope\">\n              <el-popover placement=\"bottom\" width=\"350\" trigger=\"hover\" popper-class=\"sub-fee-popper\">\n                <div class=\"sub-fee-name\" v-for=\"(item) in subFeeList\" :key=\"item.sub_fee_id\"\n                  :class=\"{ selected: isSubFeeSelected(item, scope.row.discount_fee_list)}\"\n                  @click=\"triggerChooseSubFee(item, scope.row.discount_fee_list)\">\n                  <i v-if=\"isSubFeeSelected(item, scope.row.discount_fee_list)\" class=\"el-icon-check\"></i>\n                  {{item.sub_fee_name}}\n                </div>\n                <i slot=\"reference\" class=\"el-icon-circle-plus-outline add-fee-icon\"></i>\n              </el-popover>\n              <div class=\"sub-fee-display-name-con\" v-for=\"(fee, index) in scope.row.discount_fee_list\" :key=\"index\">\n                <span class=\"discount-fee-input\">{{fee.sub_fee_name}}</span>\n                <i @click=\"removeFee(scope.row.discount_fee_list, index)\" class=\"el-icon-remove-outline remove-fee-icon\"></i>\n              </div>\n            </template>\n          </el-table-column>\n          <!-- 日期：Discount Period -->\n          <el-table-column class=\"discount-item\" key=\"discountPeriod\" align=\"center\" :label=\"$t('discountPeriod')\" width=\"350px\">\n            <template slot-scope=\"scope\">\n              <div class=\"discount-date-con\" v-for=\"(fee, index) in scope.row.discount_fee_list\" :key=\"index\">\n                <el-date-picker v-model=\"fee.discount_start_date\" value-format=\"yyyy-MM-dd\" type=\"date\">\n                </el-date-picker> -\n                <el-date-picker v-model=\"fee.discount_end_date\" value-format=\"yyyy-MM-dd\" type=\"date\">\n                </el-date-picker>\n              </div>\n            </template>\n          </el-table-column>\n          <!-- Discount Rate -->\n          <el-table-column class=\"discount-item\" key=\"discountRate\" align=\"center\" :label=\"$t('discountRate')\" width=\"200px\">\n            <template slot-scope=\"scope\">\n              <div class=\"sub-fee-discount-rate-con\" v-for=\"(fee, index) in scope.row.discount_fee_list\" :key=\"index\">\n                <el-input @change=\"changeDiscountFee(fee)\" class=\"sub-fee-discount-rate\" v-model=\"fee.discount_rate\"></el-input>\n                <span>% off</span>\n              </div>\n            </template>\n          </el-table-column>\n          <el-table-column  width=\"120\" align=\"center\" :label=\"$t('commonAction')\">\n            <template slot-scope=\"scope\">\n              <el-button class=\"remove-btn\" @click=\"removeSupplierList(scope.$index)\">{{$t('commonRemove')}}</el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n        <div :class=\"[{ 'disabled': !canAddNewSku }, 'add-sku-list']\">\n          <i @click=\"addSkuList\" class=\"el-icon-circle-plus-outline add-icon\"></i>\n          <span @click=\"addSkuList\">{{$t('addNewSku')}}</span>\n        </div>\n      </section>\n      <section class=\"no-sku-list\" v-else>\n        <div class=\"no-sku-list-tips\">{{$t('CRTNoSkuTips')}}</div>\n        <div :class=\"[{ 'disabled': !canAddNewSku }, 'add-sku-list']\" @click=\"addSkuList\">\n          <i class=\"el-icon-circle-plus-outline add-icon\"></i>\n          {{$t('addNewSku')}}\n        </div>\n      </section>\n    </div>\n    <AddSkuDialog :visible=\"addDialogVisible\" @close=\"closeSkuListDialog\" :supplierList=\"supplierList\"\n      :isSeller=\"isSeller\" @addSku=\"confirmAddSkuList\"/>\n  </div>\n</template>\n\n<script>\nimport AddSupplierListDialog from './addSupplierDialog';\nimport ListMassUpload from '@/components/upload/listMassUpload';\nimport { formatParams } from '@/utils/formatParams';\nimport AddSkuDialog from './addSkuDialog';\n\nexport default {\n  data() {\n    return {\n      list: [],\n      actionUrl: '/api/charging_report/template/sku/upload/',\n      addDialogVisible: false,\n      skuListSelected: [],\n      massUpdateData: {\n        discount_start_date: '',\n        discount_end_date: '',\n        discount_rate: ''\n      }\n    };\n  },\n  components: {\n    AddSupplierListDialog,\n    ListMassUpload, AddSkuDialog\n  },\n  props: {\n    subFeeList: {\n      required: true,\n      default: () => []\n    },\n    discountSkuList: {\n      required: true,\n      default: () => []\n    },\n    basicForm: {\n      required: true,\n      default: () => ({})\n    },\n    supplierList: {\n      required: true,\n      default: () => []\n    }\n  },\n  watch: {\n    discountSkuList: {\n      handler(curr) {\n        this.list = curr || [];\n      },\n      immediate: true\n    }\n  },\n  computed: {\n    config() {\n      return {\n        ...this.basicForm\n      };\n    },\n    uploadData() {\n      return formatParams({\n        supplier_ids: (this.supplierIdsList || []).join(',')\n        // region: this.basicForm.region,\n        // supplier_type: this.basicForm.supplier_type === 1 ? 1 : 2,\n        // purchase_type: ['', '', 1, 2][this.basicForm.supplier_type],\n        // sub_supplier_type: ['', 1, 2][this.basicForm.sub_supplier_type]\n      });\n    },\n    templateConfig() {\n      return {\n        btnText: this.$t('commonMassUpload'),\n\n        templateLink: [2, 3].includes(this.config.crt_status) ? `/api/charging_report/template/sku/export/?crt_id=${this.config.crt_id}`\n          : '/admin/data/crtSkuMapping.xlsx'\n      };\n    },\n    subFeeIdList() {\n      return this.subFeeList.map(fee => fee.sub_fee_id);\n    },\n    supplierIdsList() {\n      return this.supplierList.map(item => item.supplier_id);\n    },\n    canUpdateSelected() {\n      return !!this.skuListSelected.length;\n    },\n    canAddNewSku() {\n      return this.supplierList.length !== 0;\n    },\n    isSeller() {\n      return [1, 4].includes(this.config.supplier_type);\n    }\n  },\n  methods: {\n    updateToSelectedOrAll(isAll) {\n      if (isAll) {\n        this.discountSkuList.map(item => {\n          item.discount_fee_list = item.discount_fee_list.map(fee => ({ ...fee, ...this.massUpdateData }));\n          return item;\n        });\n        return;\n      }\n      this.skuListSelected = this.skuListSelected.map(item => {\n        item.discount_fee_list = item.discount_fee_list.map(fee => ({ ...fee, ...this.massUpdateData }));\n        return item;\n      });\n    },\n    handleSelectionChange(val) {\n      this.skuListSelected = val;\n    },\n    // 0-100，最多保留2位小数\n    changeDiscountFee(fee) {\n      const validDiscountFeeReg = /^100(\\.0{1,2})?$|^\\d{1,2}(\\.\\d{1,2})?$/;\n      if (!validDiscountFeeReg.test(fee.discount_rate)) {\n        fee.discount_rate = '';\n      }\n    },\n    triggerChooseSubFee(item, discountFeeList) {\n      const hasInSelectedList = discountFeeList.some((fee, index) => {\n        if (fee.sub_fee_id === item.sub_fee_id) {\n          discountFeeList.splice(index, 1);\n          return true;\n        }\n      });\n      if (!hasInSelectedList) {\n        discountFeeList.push(JSON.parse(JSON.stringify(item)));\n      }\n    },\n    isSubFeeSelected(item, discountFeeList) {\n      return discountFeeList.some(fee => fee.sub_fee_id === item.sub_fee_id);\n    },\n    removeFee(list, index) {\n      list.splice(index, 1);\n    },\n    addSkuList() {\n      if (!this.canAddNewSku) { return; }\n      if (!this.basicForm.region) return this.$message.error('Please select region first');\n      this.addDialogVisible = true;\n    },\n    // 上传的 Sub Fee 要在上面已选择的 Sub Fee 中\n    getMassUploadFailList(selectedList) {\n      const result = [];\n      selectedList.forEach(sku => {\n        const isInSubFee = sku.discount_fee_list.every(fee => {\n          return this.subFeeIdList.includes(fee.sub_fee_id);\n        });\n        const isInSupplierList = this.supplierIdsList.includes(sku.supplier_id);\n        if (!isInSubFee || !isInSupplierList) {\n          result.push(sku.sku_id);\n        }\n      });\n      return result;\n    },\n    confirmAddSkuList(selectedList = [], type) {\n      const list = this.list || [];\n      const addItemList = [];\n      // 如果是 upload，需要全部成功\n      if (type === 'upload') {\n        const failList = this.getMassUploadFailList(selectedList);\n        if (failList.length) {\n          this.$message.error(this.$t('massUpLoadFailed', { failList: failList.join(',') }));\n          return;\n        }\n      }\n      selectedList.forEach(item => {\n        if (type !== 'upload') {\n          // 新增折扣信息\n          this.$set(item, 'discount_fee_list', []);\n        }\n        const findItem = list.find(skuItem => skuItem.sku_id === item.sku_id);\n        if (!findItem) {\n          addItemList.push(item);\n        } else {\n          // 批量上传类型，更新shop_id_list\n          // 批量上传类型，更新 discount_fee_list【直接覆盖】\n          if (type === 'upload') {\n            findItem.discount_fee_list = item.discount_fee_list;\n          }\n        }\n      });\n      this.list = [...list, ...addItemList];\n      this.closeSkuListDialog();\n      if (type === 'upload') {\n        this.$message.success('Upload Success!');\n      }\n      this.$emit('modify', this.list);\n    },\n    closeSkuListDialog() {\n      this.addDialogVisible = false;\n    },\n    confirmSupplierList() {\n      this.$emit('modify', this.list);\n    },\n    removeSupplierList(index) {\n      this.list.splice(index, 1);\n      this.$emit('modify', this.list);\n    },\n    uploadSuccess(res) {\n      const { discount_sku_list = [] } = res.data || {};\n      this.confirmAddSkuList(discount_sku_list.map(item => ({\n        ...item, supplier_id: item.vendor_site_id })), 'upload');\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"~@/styles/variables.scss\";\n  .sub-fee-popper .sub-fee-name {\n    padding: 8px 5px;\n    cursor: pointer;\n  }\n  .sub-fee-popper .sub-fee-name:hover {\n    background: #f5f7fa;\n  }\n  .sub-fee-popper .sub-fee-name.selected {\n    color: #3D62D1;\n  }\n  .crt-sku-list-tab {\n    margin-top: 0px;\n    .tab-header {\n      display: flex;\n      margin: 28px 0 20px;\n      font-size: 18px;\n      font-weight: bold;\n      color: #333333;\n      .group-title {\n        flex: 1;\n      }\n      .mass-action {\n        width: 400px;\n      }\n    }\n    .tab-main {\n      display: flex;\n      margin-right: 9px;\n      align-items: center;\n      justify-content: center;\n      min-height: 98px;\n      border: 1px solid #DCDFE6;\n      .tab-list {\n        width: 100%;\n        padding: 14px 10px;\n        .remove-btn {\n          border: 1px solid #3D6ED1;\n          border-radius: 2px;\n          background: #fff;\n          color: #3D6ED1;\n        }\n        .add-sku-list {\n          text-align: left;\n        }\n        .discount-fee-input {\n          display: inline-block;\n          width: 300px;\n        }\n        .remove-fee-icon {\n          color: $red;\n          cursor: pointer;\n        }\n        .discount-item {\n          margin-bottom: 50px;\n        }\n        .sub-fee-discount-rate-con, .discount-date-con, .sub-fee-display-name-con {\n          margin-top: 8px;\n        }\n        .sub-fee-discount-rate-con:last-child, .discount-date-con:last-child, .sub-fee-display-name-con:last-child {\n          margin-bottom: 50px;\n        }\n        .sub-fee-discount-rate {\n          width: 50px;\n        }\n        .discount-date-con {\n          display: flex;\n        }\n        .add-fee-icon {\n          position: absolute;\n          color: #3D6ED1;\n          bottom: 20px;\n          font-size: 20px;\n          cursor: pointer;\n        }\n      }\n      .no-sku-list {\n        &-tips {\n          width: 100%;\n          text-align: center;\n          font-size: 14px;\n          color: rgba(51,51,51,0.65);\n        }\n      }\n      .add-sku-list {\n        width: 100%;\n        text-align: center;\n        margin-top: 16px;\n        font-size: 18px;\n        color: #3D62D1;\n        font-weight: bold;\n        cursor: pointer;\n        .add-icon {\n          font-size: 18px;\n          color: #3D62D1;\n        }\n      }\n      .add-sku-list.disabled {\n        opacity: 0.5;\n        cursor: not-allowed;\n      }\n    }\n    .update-all-selected {\n      display: flex;\n      justify-content: space-between;\n      height: 50px;\n      background: #f0f2f5;\n      align-items: center;\n      border-radius: 5px;\n      margin-bottom: 5px;\n      padding: 0 10px;\n      .mass-item {\n        display: flex;\n        align-items: center;\n        span {\n          margin-right: 3px;\n        }\n      }\n    }\n    .update-all-selected-btn {\n      background: #3d61d1;\n      color: #fff;\n    }\n    .update-all-selected-btn.is-disabled {\n      opacity: 0.5;\n    }\n  }\n</style>\n\n<style lang=\"scss\">\n  .crt-sku-list-tab {\n    .mass-action {\n      text-align: right;\n      .mass-upload-btn {\n        width: 112px;\n        background: #3D6ED1;\n        border-radius: 2px;\n      }\n      .template-download-wrap {\n        .el-icon-download {\n          font-size: 12px;\n          color: #3D6ED1;\n        }\n      }\n    }\n    .cell > .el-select .el-input__inner {\n      &::placeholder { /* Chrome, Firefox, Opera, Safari 10.1+ */\n        color: #606266;\n        opacity: 1; /* Firefox */\n      }\n    }\n    // 重置common.css 中的 hover 态，因为添加 Fee 的时候要 hover\n    .sku-list-list .el-table__row:hover, .sku-list-lists .current-row:hover {\n      cursor: auto;\n    }\n    .el-date-editor.el-input, .el-date-editor.el-input__inner {\n      width: auto;\n      padding: 0 5px;\n    }\n    .discount-date-con .el-input__icon, .update-all-selected .el-input__icon {\n      margin-top: -4px;\n    }\n    .update-all-selected .el-date-editor--date {\n      width: 150px;\n    }\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/crtManagement/create/subFeeTab.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/crtManagement/create/supplierList.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/dashboard/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/dashboard/linkModule.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/dashboard/supplierPerformanceDashboard/config/fieldLabels.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/dashboard/supplierPerformanceDashboard/config/format.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/dashboard/supplierPerformanceDashboard/config/index.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/dashboard/supplierPerformanceDashboard/config/parse.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/dashboard/supplierPerformanceDashboard/config/searchConfig.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/dashboard/supplierPerformanceDashboard/config/tableConfig.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/dashboard/supplierPerformanceDashboard/config/utils.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/dashboard/supplierPerformanceDashboard/index.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"supplierDashboard\" is not PascalCase.","line":176,"column":9,"nodeType":"Literal","endLine":176,"endColumn":28,"fix":{"range":[6001,6018],"text":"SupplierDashboard"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div class=\"supplier-dashboard pms-new-ui\">\n    <div class=\"header-content\">\n      <el-tabs v-model=\"activeTab\">\n        <el-tab-pane v-for=\"tab in tabs\" :key=\"tab.name\" :label=\"tab.label\" :name=\"tab.name\"></el-tab-pane>\n      </el-tabs>\n      <div class=\"header-right\">\n        <el-button type=\"text\" :disabled=\"!canViewShopBlackList\" @click=\"goShopBlackList\">{{\n          gt('Shop Black List')\n        }}</el-button>\n      </div>\n    </div>\n\n    <div class=\"display-level\">\n      {{ gt('Display Level') }}:\n      <el-checkbox-group class=\"display-level-box\" v-model=\"levelList\" @change=\"getList\">\n        <el-checkbox v-for=\"item in levelConfig\" :key=\"item.field\" :label=\"item.field\">{{ item.label }}</el-checkbox>\n      </el-checkbox-group>\n    </div>\n\n    <div class=\"search-box\">\n      <div v-if=\"activeTab === 'replenishment'\" class=\"view-mode\">\n        <p class=\"view-mode-tab\">\n          <el-radio v-model=\"searchForm.view_mode\" :label=\"1\">{{ gt('Single View') }}</el-radio>\n          <el-date-picker\n            value-format=\"yyyy-MM-dd\"\n            :picker-options=\"viewModePickerOptions\"\n            :disabled=\"searchForm.view_mode !== 1\"\n            v-model=\"searchForm.view_mode_date\"\n            type=\"daterange\"\n            start-placeholder=\"Select Start Date\"\n            end-placeholder=\"Select End Date\"\n          >\n          </el-date-picker>\n        </p>\n        <p class=\"view-mode-tab\">\n          <el-radio v-model=\"searchForm.view_mode\" :label=\"2\">{{ gt('Comparison View') }}</el-radio>\n          <el-date-picker\n            :style=\"{ marginRight: '7px' }\"\n            value-format=\"yyyy-MM-dd\"\n            :picker-options=\"viewModePickerOptions\"\n            :disabled=\"searchForm.view_mode !== 2\"\n            placeholder=\"Select Date\"\n            v-model=\"searchForm.view_start_time\"\n            type=\"date\"\n          >\n          </el-date-picker>\n          <el-date-picker\n            value-format=\"yyyy-MM-dd\"\n            :picker-options=\"viewModePickerOptions\"\n            :disabled=\"searchForm.view_mode !== 2\"\n            placeholder=\"Select Date\"\n            v-model=\"searchForm.view_end_time\"\n            type=\"date\"\n          >\n          </el-date-picker>\n        </p>\n      </div>\n      <listSearch\n        v-show=\"isShowSearch\"\n        :components=\"searchSchema\"\n        :searchForm=\"searchForm\"\n        @change=\"onChangeSearchForm\"\n      ></listSearch>\n      <div class=\"search-options\">\n        <el-button type=\"text\" @click=\"isShowSearch = !isShowSearch\">\n          {{ gt('Collapse', 'common') }}\n          <i v-if=\"!isShowSearch\" class=\"el-icon-arrow-down\"></i>\n          <i v-if=\"isShowSearch\" class=\"el-icon-arrow-up\"></i>\n        </el-button>\n        <el-button class=\"white-grey\" @click=\"clearSearch\">{{ $t('commonClear') }}</el-button>\n        <el-button :loading=\"isLoading\" @click=\"onSearch\">{{ $t('commonSearch') }}</el-button>\n      </div>\n    </div>\n\n    <div class=\"table-options\">\n      <div class=\"options-left\">\n        <exportBtnGroup\n          :api=\"exportConfig.api\"\n          :taskType=\"exportConfig.taskType\"\n          :params=\"searchParams\"\n        ></exportBtnGroup>\n      </div>\n      <div class=\"options-right\">\n        <span class=\"replenishment-table-types\" v-if=\"activeTab === 'replenishment'\">\n          <label for=\"\">Data Source</label>:\n          <el-radio v-model=\"searchForm.sku_mode\" :label=\"1\">{{ gt('All SKU') }}</el-radio>\n          <el-radio v-model=\"searchForm.sku_mode\" :label=\"2\">{{ gt('Short Tail SKU') }}</el-radio>\n        </span>\n        <span class=\"options-tips\">Data updated at {{ tableUpdateDate }}</span>\n      </div>\n    </div>\n\n    <div class=\"table-content\">\n      <el-table :data=\"displayTableData\" v-loading=\"isLoading\">\n        <el-table-column\n          v-for=\"item in tableSchema\"\n          :key=\"item.field || item.key\"\n          :prop=\"item.field\"\n          :label=\"item.label\"\n          :width=\"item.width\"\n          :label-class-name=\"item.className\"\n        >\n          <el-table-column\n            v-for=\"child in item.children || []\"\n            :key=\"child.field || child.key\"\n            :prop=\"child.field\"\n            :label=\"child.label\"\n            :width=\"child.width\"\n            :label-class-name=\"child.className\"\n          >\n          </el-table-column>\n        </el-table-column>\n        <el-table-column width=\"40px\" fixed=\"right\">\n          <template slot-scope=\"scope\" slot=\"header\">\n            <optionsField\n              btnType=\"icon\"\n              class=\"option-field-wrapper\"\n              @fieldChange=\"displayOptionsChange\"\n              :fieldList=\"displayOptionsList\"\n              :defaultList=\"displayOptions\"\n            ></optionsField>\n          </template>\n        </el-table-column>\n      </el-table>\n      <pms-pagination :config=\"pageConfig\" @change=\"changeConfig\"></pms-pagination>\n    </div>\n  </div>\n</template>\n<script>\nimport { cloneDeep } from 'lodash';\nimport moment from 'moment';\n\nimport { hasPermission } from '@/utils/permission';\nimport { Permission } from '@/utils/constant';\nimport { gt } from '@/lang';\nimport pmsPagination, { getDefaultConfig } from '@/components/common/pmsPagination';\nimport listSearch from '@/components/common/listSearch';\nimport exportBtnGroup from '@/components/common/exportBtnGroup';\nimport { ajax } from '@/utils/request';\nimport optionsField from '@/components/ApproveList/optionsField';\nimport { getSearchSchemaTemplate } from '@/components/BaseItem/schemaTemplate';\n\nimport { setLocalStorage, getLocalStorage } from './config/utils';\n\nimport {\n  namespace,\n  getDisplayConfig,\n  getConfig,\n  getLevelValue,\n  // getTHStyle,\n  formatTableData,\n  getTableFieldFromLevel\n} from './config/index';\n\n/**\n\n// TODO:\n+ 列表查询对接【done】\n+ 切换tab清除状态【done】\n+ 补货表格特殊筛选！【done】\n+ 表格字段格式化展示【done】\n+ brand筛选【done】\n+ getShopId优化[done]\n+ shop 模块重新测试[done]\n+ 切换页面后，筛选字段不出现[done]\n+ 筛选区收起【done】\n+ 字段区域背景色【done】\n+ 多选搜索优化，粘贴【done】\n+ 国际化翻译【done】\n+ 合并表头：table value、table head、color、display options【done】\n\n */\n\nexport default {\n  name: 'supplierDashboard',\n  components: {\n    pmsPagination,\n    listSearch,\n    exportBtnGroup,\n    optionsField\n  },\n  data() {\n    const tabs = [\n      {\n        name: 'sellIn',\n        label: gt('Sell-in Performance', namespace),\n        permission: hasPermission(Permission.SUPPLIER_PERFORMANCE_SELL_IN_LIST)\n      },\n      {\n        name: 'delivery',\n        label: gt('Delivery Performance', namespace),\n        permission: hasPermission(Permission.SUPPLIER_PERFORMANCE_DELIVERY_LIST)\n      },\n      {\n        name: 'replenishment',\n        label: gt('Replenishment Performance', namespace),\n        permission: hasPermission(Permission.SUPPLIER_PERFORMANCE_REPLENISHMENT_LIST)\n      }\n    ].filter(item => item.permission);\n    const activeTab = tabs[0] ? tabs[0].name : '';\n    return {\n      isShowSearch: true,\n      isLoading: true,\n      activeTab,\n      tabs,\n      levelList: [],\n      searchForm: {\n        region: ''\n      },\n      tableUpdateDate: '-',\n      dataList: [],\n      pageConfig: getDefaultConfig(),\n      canViewShopBlackList: hasPermission(Permission.SHOP_BLACK_LIST_VIEW),\n      displayOptions: []\n    };\n  },\n  created() {\n    this.onChangeSearchForm({\n      field: 'region',\n      value: this.$store.getters.country\n    });\n    this.getList();\n    this.getDisplayValue(this.viewType);\n  },\n  watch: {\n    activeTab() {\n      this.clearSearch();\n    },\n    viewType(newVal) {\n      this.dataList = [];\n      this.onSearch();\n      this.getDisplayValue(newVal);\n    }\n  },\n  computed: {\n    tableSchema() {\n      return getTableFieldFromLevel(this.levelList).concat(\n        getConfig('tableSchema', {\n          activeTab: this.activeTab,\n          displayOptions: this.displayOptions,\n          searchForm: this.searchForm\n        })\n      );\n    },\n    displayTableData() {\n      return formatTableData(this.dataList, { activeTab: this.activeTab });\n    },\n    searchParams() {\n      const params = {\n        ...this.searchForm,\n        ...this.pageConfig,\n        display_levels: getLevelValue(this.levelList)\n      };\n\n      if (Array.isArray(params.shop_ids)) {\n        params.shop_ids = params.shop_ids.map(value => parseInt(value));\n      }\n\n      if (params.view_mode === 1 && Array.isArray(params.view_mode_date)) {\n        params.view_start_time = params.view_mode_date[0];\n        params.view_end_time = params.view_mode_date[1];\n      }\n\n      delete params.total;\n      return params;\n    },\n    viewModePickerOptions() {\n      return {\n        disabledDate(cur) {\n          return !moment(cur).isBetween(moment().subtract(79, 'day'), moment(), 'day', '[]');\n        }\n      };\n    },\n    viewType() {\n      return this.activeTab + this.searchForm.sku_mode || '';\n    },\n    // 字段列表\n    displayOptionsList() {\n      return getDisplayConfig(this.activeTab, this.searchForm.sku_mode);\n    },\n    levelConfig() {\n      return getConfig('levelConfig', { activeTab: this.activeTab });\n    },\n    searchSchema() {\n      const fields = getConfig('searchSchema', {\n        activeTab: this.activeTab,\n        searchForm: this.searchForm,\n        levelList: this.levelList,\n        levelConfig: this.levelConfig\n      });\n      const config = [...fields].map(field => {\n        const item = getSearchSchemaTemplate(field);\n        // 需要添加空选项的\n        if (['warehouse', 'category_cluster'].includes(field)) {\n          item.props.formatOptions = options => [\n            {\n              label: 'All',\n              value: undefined\n            },\n            ...options\n          ];\n        } else if (field === 'purchase_type') {\n          item.props.options = [\n            {\n              label: 'All',\n              value: undefined\n            },\n            ...item.props.options\n          ];\n        }\n\n        return item;\n      });\n      return config;\n    },\n    exportConfig() {\n      return getConfig('exportConfig', { activeTab: this.activeTab });\n    }\n  },\n  methods: {\n    getDisplayValue(viewType) {\n      this.displayOptions =\n        getLocalStorage(namespace + viewType) ||\n        getDisplayConfig(this.activeTab, this.searchForm.sku_mode).map(({ field }) => field);\n    },\n    clearSearch() {\n      let defaultSearch = {\n        ...this.searchSchema.reduce((res, item) => {\n          res[item.props.field] = cloneDeep(item.props.defaultValue);\n          return res;\n        }, {}),\n        region: this.searchForm.region\n      };\n      if (this.activeTab === 'replenishment') {\n        defaultSearch = {\n          ...defaultSearch,\n          view_mode: this.searchForm.view_mode || 1,\n          sku_mode: this.searchForm.sku_mode || 1,\n          view_mode_date: this.searchForm.view_mode_date || [\n            moment().format('YYYY-MM-DD'),\n            moment().format('YYYY-MM-DD')\n          ]\n        };\n      }\n      this.searchForm = defaultSearch;\n      this.levelList = [];\n    },\n    displayOptionsChange(list) {\n      this.displayOptions = list;\n      setLocalStorage(namespace + this.viewType, list);\n    },\n    gt(label, space) {\n      return gt(label, space || namespace);\n    },\n    ajax,\n    onSearch() {\n      this.pageConfig = getDefaultConfig();\n      this.getList();\n    },\n    getTableDate() {\n      const getDateFun = getConfig('getTableDate', { activeTab: this.activeTab });\n      getDateFun().then(data => {\n        if (data === false) return;\n        this.tableUpdateDate = moment.unix(data).format('YYYY-MM-DD HH:mm:ss');\n      });\n    },\n    async getList() {\n      const apiConfig = getConfig('getList', { activeTab: this.activeTab });\n      this.getTableDate();\n      const data = await this.ajax(apiConfig.api, this.searchParams);\n      if (data === false) return;\n      this.pageConfig.total = data.total;\n      this.dataList = data[apiConfig.dataKey];\n    },\n    onChangeSearchForm({ value, field }) {\n      this.$set(this.searchForm, field, value);\n    },\n    changeConfig(config) {\n      this.pageConfig = config;\n      this.getList();\n    },\n    goShopBlackList() {\n      this.$router.push({\n        name: 'supplierShopBlacklist'\n      });\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.supplier-dashboard {\n  padding: 0 20px;\n  .header-content {\n    position: relative;\n    line-height: 56px;\n  }\n  .header-right {\n    position: absolute;\n    z-index: 1;\n    right: 0;\n    top: 0;\n  }\n  .display-level {\n    margin: 20px 0;\n  }\n  .display-level-box {\n    display: inline-block;\n  }\n  .search-options {\n    text-align: right;\n    margin: 20px 0;\n  }\n\n  .replenishment-table-types {\n    text-align: right;\n  }\n  .table-options {\n    margin: 20px 0;\n    display: flex;\n    line-height: 32px;\n    .options-left {\n      flex: 1;\n    }\n    .options-tips {\n      margin-left: 20px;\n      text-align: right;\n      font-size: 14px;\n      color: #999999;\n    }\n  }\n  .view-mode {\n    margin-bottom: 16px;\n    .date-picker {\n      display: inline-block;\n    }\n    .view-mode-tab {\n      display: inline-block;\n      margin-top: 16px;\n      margin-right: 20px;\n    }\n  }\n\n  /deep/ .th-color-1 {\n    background-color: #fff5f0 !important;\n  }\n  /deep/ .th-color-2 {\n    background-color: #f0f7ff !important;\n  }\n  /deep/ .th-color-3 {\n    background-color: #ecfff1 !important;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/dashboard/supplierPerformanceDashboard/shopBlackList/list.vue","messages":[{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":48,"column":36,"nodeType":"ThisExpression","endLine":48,"endColumn":40},{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":48,"column":46,"nodeType":"ThisExpression","endLine":48,"endColumn":50},{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"shopBlackList\" is not PascalCase.","line":72,"column":9,"nodeType":"Literal","endLine":72,"endColumn":24,"fix":{"range":[2986,2999],"text":"ShopBlackList"}}],"errorCount":3,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div class=\"shop-black-list pms-new-ui\">\n    <listSearch :components=\"searchComponents\" :searchForm=\"searchForm\" @change=\"onChangeSearchForm\"></listSearch>\n    <div class=\"search-options\">\n      <el-button class=\"white-grey\" @click=\"searchForm = {}\">{{ $t('commonClear') }}</el-button>\n      <el-button @click=\"onSearch\">{{ $t('commonSearch') }}</el-button>\n    </div>\n    <div class=\"table-options\">\n      <div class=\"left-options\">\n        <exportBtnGroup\n          :api=\"shopBlackListAPI.exportShopBlackList\"\n          :taskType=\"602\"\n          :params=\"searchForm\"\n        ></exportBtnGroup>\n        <uploadBtnGroup\n          :disabled=\"!canEditShopBlackList\"\n          :uploadParams=\"uploadParams\"\n          :taskType=\"601\"\n          @downloadTemplate=\"shopBlackListAPI.getUploadShopBlackListTemplate\"\n        >\n        </uploadBtnGroup>\n      </div>\n      <div class=\"right-options\">\n        <el-button :disabled=\"!canEditShopBlackList\" @click=\"onShowAddShop\">+ {{ gt('New Shop', 'shop') }}</el-button>\n      </div>\n    </div>\n    <div class=\"table-content\">\n      <el-table :data=\"shopList\">\n        <el-table-column v-for=\"item in tableSchema\" :key=\"item.field\" :prop=\"item.field\" :label=\"item.label\">\n        </el-table-column>\n        <el-table-column key=\"action\" :label=\"$t('commonAction')\">\n          <template slot-scope=\"scope\">\n            <el-button :disabled=\"!canEditShopBlackList\" @click=\"removeShop(scope.row)\" type=\"text\">{{\n              $t('commonRemove')\n            }}</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <pms-pagination :config=\"pageConfig\" @change=\"changeConfig\"></pms-pagination>\n    </div>\n    <el-dialog :title=\"gt('New Shop', 'shop')\" :visible.sync=\"isShowAddShop\" width=\"440px\">\n      <base-form\n        ref=\"baseForm\"\n        type=\"simple\"\n        :form=\"addForm\"\n        :schema=\"formSchema\"\n        :isEdit=\"true\"\n        @input=\"(schema, value) => this.$set(this.addForm, schema.field, value)\"\n      ></base-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button class=\"white-grey\" @click=\"isShowAddShop = false\">{{ $t('commonCancel') }}</el-button>\n        <el-button @click=\"onAddShop\">{{ $t('commonConfirm') }}</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport listSearch from '@/components/common/listSearch';\nimport { getSearchSchemaTemplate, getSchemaTemplate } from '@/components/BaseItem/schemaTemplate';\nimport uploadBtnGroup from '@/components/common/uploadBtnGroup';\nimport exportBtnGroup from '@/components/common/exportBtnGroup';\nimport shopBlackListAPI from '@/api/config/shopBlackList';\nimport pmsPagination, { getDefaultConfig } from '@/components/common/pmsPagination';\nimport { ajax } from '@/utils/request';\nimport baseForm from '@/components/BaseItem/baseForm';\nimport { gt } from '@/lang';\nimport { hasPermission } from '@/utils/permission';\nimport { Permission } from '@/utils/constant';\n\nexport default {\n  name: 'shopBlackList',\n  components: {\n    listSearch,\n    uploadBtnGroup,\n    exportBtnGroup,\n    pmsPagination,\n    baseForm\n  },\n  data() {\n    return {\n      uploadParams: { action: shopBlackListAPI.uploadShopBlackList },\n      shopBlackListAPI,\n      searchForm: {\n        region: ''\n      },\n      shopList: [],\n      pageConfig: getDefaultConfig(),\n      isLoading: false,\n      isShowAddShop: false,\n      addForm: {},\n      canEditShopBlackList: hasPermission(Permission.SHOP_BLACK_LIST_EDIT)\n    };\n  },\n  created() {\n    if (!this.$store.getters.isUniversalUser) {\n      this.searchForm.region = this.$store.getters.country;\n    }\n    this.getList();\n  },\n  computed: {\n    formSchema() {\n      return [getSchemaTemplate('shop_id', this.searchForm)];\n    },\n    searchComponents() {\n      const regionSchema = getSearchSchemaTemplate('region');\n      if (regionSchema.props.options.length > 1) {\n        regionSchema.props.options = [{ label: 'All', value: '' }, ...regionSchema.props.options];\n      }\n      return [\n        regionSchema,\n        getSearchSchemaTemplate('shop_id'),\n        {\n          name: 'listFormItem',\n          isLongCol: false,\n          props: {\n            label: this.$t('commonCreator'),\n            field: 'creator',\n            type: 'input'\n          }\n        }\n      ];\n    },\n    tableSchema() {\n      return [\n        {\n          field: 'region',\n          label: 'Region'\n        },\n        {\n          field: 'shop_id',\n          label: 'Shop ID'\n        },\n        {\n          field: 'shop_name',\n          label: 'Shop Name'\n        },\n        {\n          field: 'creator',\n          label: 'Creator'\n        },\n        {\n          field: 'create_time',\n          label: 'Create Time'\n        }\n      ].map(item => ({ ...item, label: gt(item.label, 'common') }));\n    }\n  },\n  methods: {\n    ajax,\n    gt,\n    onShowAddShop() {\n      this.addForm = {};\n      this.isShowAddShop = true;\n    },\n    async onAddShop() {\n      const data = await this.ajax(shopBlackListAPI.addShopBlackList, {\n        shop_ids: [parseInt(this.addForm.shop_id)]\n      });\n      if (data === false) return;\n      this.$message.success('Submit successfully！');\n      this.isShowAddShop = false;\n      this.onSearch();\n    },\n    async removeShop(row) {\n      const check = await this.$confirm('Are you sure to remove shop id from black list？', 'Tips', {\n        confirmButtonText: this.$t('commonConfirm'),\n        cancelButtonText: this.$t('commonCancel')\n      });\n      if (!check) return;\n      const data = await this.ajax(shopBlackListAPI.removeShopBlackList, {\n        shop_ids: [row.shop_id]\n      });\n      if (data === false) return;\n\n      this.$message.success('Remove success!');\n      if (this.shopList.length === 1) {\n        this.pageConfig.pageno = Math.max(1, this.pageConfig.pageno - 1);\n      }\n      this.getList();\n    },\n    changeConfig(config) {\n      this.pageConfig = config;\n      this.getList();\n    },\n    onSearch() {\n      this.pageConfig = getDefaultConfig();\n      this.getList();\n    },\n    async getList() {\n      const data = await this.ajax(shopBlackListAPI.getShopBlackList, {\n        ...this.searchForm,\n        ...this.pageConfig,\n        total: undefined,\n        shop_id: this.searchForm.shop_id\n      });\n      if (data) {\n        this.shopList = data.shop_black_list || [];\n        this.pageConfig.total = data.total;\n      }\n    },\n    onChangeSearchForm({ value, field }) {\n      this.$set(this.searchForm, field, value);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.shop-black-list {\n  padding: 20px;\n}\n.search-options {\n  padding: 20px 0;\n  text-align: right;\n  border-bottom: 1px solid #ddd;\n}\n.table-options {\n  display: flex;\n  padding: 20px 0;\n  .left-options {\n    flex: 1;\n  }\n  .right-options {\n    text-align: right;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/forecast/ROP/configDialg.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/forecast/ROP/list.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/forecast/buyingRequest/detail/addSkuDialog.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"addSkuDialog\" is not PascalCase.","line":89,"column":9,"nodeType":"Literal","endLine":89,"endColumn":23,"fix":{"range":[2588,2600],"text":"AddSkuDialog"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <el-dialog class=\"br-add-sku-dialog\" :title=\"$t('commonAddSku')\" :visible=\"true\" width=\"840px\" @close=\"onClose\">\n    <listSearch :components=\"components\" :searchForm=\"searchForm\" @change=\"onChangeSearchForm\"></listSearch>\n    <section class=\"option-box\">\n      <el-button :loading=\"isLoading\" class=\"white-grey\" @click=\"onClearSearch\">Clear</el-button>\n      <el-button :loading=\"isLoading\" @click=\"onSearch\">Search</el-button>\n    </section>\n\n    <div class=\"tips-box\">\n      <div class=\"tips-left\">\n        <p>Selected SKU ({{ Object.keys(totalSelected).length }})</p>\n      </div>\n      <div class=\"tips-right\">\n        <DataUpdataTime type=\"BUYING_REQUEST\"></DataUpdataTime>\n      </div>\n    </div>\n\n    <section class=\"table-content\">\n      <el-table\n        ref=\"addSkuTable\"\n        class=\"br-sku-table\"\n        :data=\"skuList\"\n        v-loading=\"isLoading\"\n        height=\"300px\"\n        @select=\"onSelect\"\n        @select-all=\"onSelectAll\"\n      >\n        <el-table-column key=\"checkbox\" type=\"selection\"> </el-table-column>\n        <el-table-column v-for=\"item in tableSchema\" :key=\"item.field\" :prop=\"item.field\" :label=\"$t(item.label)\">\n          <template slot-scope=\"scope\">\n            <pms-form-item\n              :renderData=\"{\n                schema: item,\n                form: scope.row,\n                index: scope.$index\n              }\"\n            ></pms-form-item>\n          </template>\n        </el-table-column>\n      </el-table>\n      <el-pagination\n        class=\"table-pagination\"\n        :current-page=\"pager.pageno\"\n        :page-sizes=\"[10, 20, 50, 100]\"\n        :page-size=\"pager.count\"\n        :total.sync=\"pager.total\"\n        background\n        layout=\"sizes, prev, pager, next\"\n        @current-change=\"handleCurrentChange\"\n        @size-change=\"handleSizeChange\"\n      ></el-pagination>\n    </section>\n    <section class=\"option-box\">\n      <el-button class=\"white-grey\" @click=\"onClose\">Cancel</el-button>\n      <el-button @click=\"onSubmit\">Submit</el-button>\n    </section>\n  </el-dialog>\n</template>\n<script>\nimport listSearch from '@/components/common/listSearch';\nimport { getSupplierList } from '@/api/supplier';\nimport { getBRSkus } from '@/api/buyingRequest';\nimport PMSFormItem from '@/components/BaseItem/formItem';\n\nimport DataUpdataTime from '../../common/DataUpdataTime';\n\nconst ReplenishmentRequiredOptions = [\n  {\n    label: 'All',\n    value: ''\n  },\n  {\n    label: 'Yes',\n    value: 1\n  },\n  {\n    label: 'No',\n    value: 0\n  }\n];\n\nconst initPager = {\n  total: 0,\n  count: 10,\n  pageno: 1\n};\n\nexport default {\n  name: 'addSkuDialog',\n  components: {\n    listSearch,\n    DataUpdataTime,\n    'pms-form-item': PMSFormItem\n  },\n  props: {\n    region: String\n    // isShow: Boolean\n  },\n  data() {\n    return {\n      tableSchema: [\n        { field: 'sku_id', label: 'forecastSKUID' },\n        { field: 'sku_name', label: 'forecastSKUName' },\n        { field: 'supplier_id', label: 'forecastSupplierID' },\n        { field: 'supplier_name', label: 'forecastSupplierName' },\n        { field: 'whs_id', label: 'forecastWarehouse' },\n        {\n          field: 'reordered_w_1',\n          label: 'forecastReordered(W1)',\n          type: 'enum',\n          options: [\n            {\n              label: 'Yes',\n              value: true\n            },\n            {\n              label: 'No',\n              value: false\n            }\n          ]\n        },\n        {\n          field: 'replenishment_required',\n          label: 'forecastReplenishmentRequired',\n          type: 'enum',\n          options: [\n            {\n              label: 'Yes',\n              value: true\n            },\n            {\n              label: 'No',\n              value: false\n            }\n          ]\n        }\n      ].map(item => ({ type: 'text', ...item })),\n      pager: { ...initPager },\n      totalSelected: {},\n      searchForm: {},\n      skuList: [],\n      isLoading: false\n    };\n  },\n  created() {\n    this.getSkus();\n  },\n  // watch: {\n  //   isShow(val) {\n  //     if (val) {\n  //       this.pager = { ...initPager };\n  //       this.getSkus();\n  //     }\n  //   }\n  // },\n  computed: {\n    WHSOptions() {\n      let list = this.$store.getters.warehouseList;\n      if (!this.$store.getters.isUniversalUser) {\n        const myRegion = this.$store.getters.country;\n        list = this.$store.getters.warehouseList.filter(item => item.country === myRegion);\n      }\n      return list.map(item => ({\n        label: item.warehouse,\n        value: item.warehouse\n      }));\n    },\n    components() {\n      return [\n        {\n          name: 'listInput',\n          props: {\n            label: this.$t('forecastProductSKUID'),\n            field: 'sku_id'\n          }\n        },\n        {\n          name: 'listAutoComplete',\n          props: {\n            label: this.$t('forecastSupplierID'),\n            field: 'supplier_id',\n            fetchMethod: this.getSuppliers,\n            selectMethod: this.onSupplierSelect\n          }\n        },\n        {\n          name: 'listSelect',\n          props: {\n            label: this.$t('forecastWarehouse'),\n            field: 'whs_id',\n            options: this.WHSOptions\n          }\n        },\n        {\n          name: 'listSelect',\n          props: {\n            label: this.$t('forecastReplenishmentRequired'),\n            field: 'replenishment_required',\n            options: ReplenishmentRequiredOptions\n          }\n        }\n      ];\n    }\n  },\n  methods: {\n    // 缓存勾选\n    onSelect(list, row) {\n      // 判断是添加还是删除\n      const isAdd = list.find(item => item.id === row.id);\n      if (isAdd) {\n        this.$set(this.totalSelected, row.id, row);\n      } else {\n        this.$delete(this.totalSelected, row.id);\n      }\n    },\n    onSelectAll(list) {\n      if (list.length) {\n        // 添加全部\n        list.forEach(row => {\n          this.$set(this.totalSelected, row.id, row);\n        });\n      } else {\n        // 删除全部\n        this.skuList.forEach(row => {\n          this.$delete(this.totalSelected, row.id);\n        });\n      }\n    },\n    setCurrentChecked() {\n      this.skuList.forEach(row => {\n        if (this.totalSelected[row.id]) {\n          this.$refs['addSkuTable'].toggleRowSelection(row, true);\n        }\n      });\n    },\n    // end\n    onSubmit() {\n      this.$emit('submit', Object.values(this.totalSelected));\n    },\n    onClearSearch() {\n      this.searchForm = {};\n    },\n    onSearch() {\n      this.pager.pageno = 1;\n      this.getSkus();\n    },\n    async getSkus() {\n      const params = { ...this.searchForm, ...this.pager };\n      if (this.region) params.region = this.region;\n      try {\n        this.isLoading = true;\n        const res = await getBRSkus(params);\n        if (res.retcode !== 0) {\n          throw new Error(res.message);\n        }\n        this.skuList = res.data.sku_list || [];\n        this.pager.total = res.data.total;\n      } catch (e) {\n        this.$$message.error(e.message);\n      }\n\n      this.isLoading = false;\n      this.$nextTick(this.setCurrentChecked);\n    },\n    handleCurrentChange(value) {\n      this.pager.pageno = value;\n      this.getSkus();\n    },\n    handleSizeChange(value) {\n      this.pager.count = value;\n      this.pager.pageno = 1;\n      this.getSkus();\n    },\n    onClose() {\n      this.totalSelected = {};\n      this.$emit('close');\n    },\n    onChangeSearchForm() {\n      this.onSearch();\n    },\n    onSupplierSelect(item) {\n      this.searchForm.supplier_id = item.supplier_id;\n    },\n    getSuppliers(value, callback) {\n      // 验证this的问题，没问题\n      const params = { pageno: 1, count: 20, key: `${value || ''}`.trim(), approval_country: this.countryList };\n      getSupplierList(params)\n        .then(resp => {\n          if (resp.retcode !== 0) {\n            this.$message.error(resp.info);\n          } else {\n            const { list = [] } = resp.data || {};\n            if (Array.isArray(list) && list.length) {\n              return callback(list.map(item => Object.assign(item, { value: item.supplier_id })));\n            } else {\n              this.$message.error('This Supplier ID is not exist');\n            }\n          }\n          callback([]);\n        })\n        .catch(() => {\n          this.$message.error('Get Supplier Failed');\n          callback([]);\n        });\n    }\n  }\n};\n</script>\n<style lang=\"scss\">\n.br-add-sku-dialog {\n  .option-box {\n    padding: 14px 0;\n    text-align: right;\n  }\n  .tips-box {\n    margin-bottom: 8px;\n    display: flex;\n    .tips-left {\n      font-weight: bold;\n      flex: 1;\n    }\n  }\n  .table-pagination {\n    text-align: center;\n    padding-top: 20px;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/forecast/buyingRequest/detail/editSkuDialog.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"editSkuDialog\" is not PascalCase.","line":70,"column":9,"nodeType":"Literal","endLine":70,"endColumn":24,"fix":{"range":[2524,2537],"text":"EditSkuDialog"}},{"ruleId":"vue/no-unused-components","severity":2,"message":"The \"listSearch\" component has been registered but not used.","line":73,"column":5,"nodeType":"Property","endLine":73,"endColumn":15}],"errorCount":2,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <el-dialog\n    class=\"br-edit-sku-dialog\"\n    :title=\"$t('forecastDataValidation')\"\n    :visible=\"true\"\n    width=\"840px\"\n    @close=\"onClose\"\n  >\n    <div class=\"validate-tips\">\n      <p class=\"tips-title\">The following SKUs don’t pass system validation. Please note:</p>\n      <ol class=\"tips-ol\">\n        <li>\n          Supplier-SKU status shouldn’t be delinked. You need choose another supplier, or remove it from currernt BR,\n          update supplier-sku data and add it back again.\n        </li>\n        <li>Supplier-SKU sourcing status shouldn’t be “out of stock” or “discontinued”.</li>\n        <li>SKU tax shouldn’t be blank.</li>\n        <li>Proposed buying stock should be larger than MOQ.</li>\n      </ol>\n    </div>\n\n    <section class=\"table-content\">\n      <el-table class=\"br-sku-table\" :data=\"showSkus\" height=\"400px\">\n        <el-table-column v-for=\"item in tableSchema\" :key=\"item.field\" :prop=\"item.field\" :label=\"$t(item.label)\">\n          <template slot-scope=\"scope\">\n            <pms-form-item\n              :class=\"!scope.row[item.field] && 'err-input'\"\n              :renderData=\"{\n                schema: getSchema(item, scope.row),\n                form: scope.row,\n                index: getIndex(scope.$index)\n              }\"\n              @input=\"modifySKU\"\n            ></pms-form-item>\n          </template>\n        </el-table-column>\n        <el-table-column :label=\"$t('commonAction')\" key=\"removeSku\">\n          <template slot-scope=\"scope\">\n            <el-button type=\"text\" class=\"color-red\" @click=\"removeSku(scope.row, scope.$index)\">{{\n              $t('commonRemove')\n            }}</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <el-pagination\n        class=\"table-pagination\"\n        :current-page=\"pager.curr\"\n        :page-sizes=\"[10, 20, 50]\"\n        :page-size=\"pager.size\"\n        :total.sync=\"skuList.length\"\n        background\n        layout=\"sizes, prev, pager, next\"\n        @current-change=\"handleCurrentChange\"\n        @size-change=\"handleSizeChange\"\n      ></el-pagination>\n    </section>\n    <section class=\"option-box\">\n      <el-button class=\"white-grey\" @click=\"onClose\">Cancel</el-button>\n      <el-button @click=\"onSubmit\">Submit</el-button>\n    </section>\n  </el-dialog>\n</template>\n<script>\nimport listSearch from '@/components/common/listSearch';\nimport PMSFormItem from '@/components/BaseItem/formItem';\n\nimport { getSkuSchema, supplier_sku_status_options } from './skuConfig';\n\nexport default {\n  name: 'editSkuDialog',\n  components: {\n    'pms-form-item': PMSFormItem,\n    listSearch\n  },\n  props: {\n    skuList: Array,\n    type: String,\n    taxCodeOptions: Array\n  },\n  data() {\n    return {\n      pager: {\n        size: 10,\n        curr: 1\n      }\n    };\n  },\n  computed: {\n    showSkus() {\n      const start = (this.pager.curr - 1) * this.pager.size;\n      return this.skuList.slice(start, start + this.pager.size);\n    },\n    tableSchema() {\n      return getSkuSchema([\n        'sku_id',\n        'whs_id',\n        'sku_name',\n        'supplier_id',\n        {\n          field: 'supplier_sku_status',\n          label: 'forecastSupplierskustatus',\n          type: 'enum',\n          options: supplier_sku_status_options\n        },\n        'sourcing_status',\n        'min_order_quantity',\n        'proposed_buying_stock',\n        'tax_code',\n        'tax_rate'\n      ]).map(item => {\n        item.type = item.type || 'text';\n        if (item.field === 'tax_code') {\n          item.options = this.taxCodeOptions;\n        }\n        return item;\n      });\n    }\n  },\n  watch: {\n    'showSkus.length'(val) {\n      if (val === 0 && this.pager.curr !== 1) {\n        this.pager.curr -= 1;\n      }\n    }\n  },\n  methods: {\n    getSchema(schema, row) {\n      schema = { ...schema };\n      let canEdit = schema.canEdit;\n      if (typeof schema.canEdit === 'function') {\n        canEdit = schema.canEdit(row);\n      }\n      if (!canEdit) {\n        if (['enum', 'select'].includes(schema.type)) {\n          schema.type = 'enum';\n        } else {\n          schema.type = 'text';\n        }\n      }\n      return schema;\n    },\n    getIndex(index) {\n      return index + (this.pager.curr - 1) * this.pager.size;\n    },\n    handleCurrentChange(value) {\n      this.pager.curr = value;\n    },\n    handleSizeChange(value) {\n      this.pager.size = value;\n      this.pager.curr = 1;\n    },\n    removeSku(row, index) {\n      this.$emit('remove', row, index);\n    },\n    modifySKU(schema, value, index) {\n      const oldValue = this.skuList[index][schema.field];\n      let valueStr = value;\n      if (schema.field === 'tax_code') {\n        valueStr = value.tax_code;\n      } else if (schema.field === 'supplier_id') {\n        valueStr = value.supplier_id;\n      }\n\n      if (oldValue === valueStr || (!oldValue && !valueStr)) {\n        return;\n      }\n      if (schema.field === 'tax_code') {\n        this.skuList[index]['tax_code'] = value.tax_code;\n        this.skuList[index]['tax_rate'] = value.tax_rate;\n      } else if (schema.field === 'supplier_id') {\n        Object.keys(value).forEach(key => {\n          this.skuList[index][key] = value[key];\n        });\n      } else {\n        this.skuList[index][schema.field] = valueStr;\n      }\n      this.$set(this.skuList, index, this.skuList[index]);\n    },\n    onSubmit() {\n      this.$emit('submit', this.type, this.skuList);\n    },\n    onClose() {\n      this.$emit('close');\n    }\n  }\n};\n</script>\n<style lang=\"scss\">\n.br-edit-sku-dialog {\n  .table-pagination {\n    padding: 16px;\n    text-align: center;\n  }\n  .option-box {\n    padding-top: 20px;\n    text-align: right;\n  }\n  .validate-tips {\n    margin-bottom: 14px;\n    line-height: 1.4em;\n  }\n  .tips-title {\n    color: #333;\n  }\n  .tips-ol {\n    padding: 0 1em;\n  }\n  .err-input {\n    .el-input__inner {\n      border-color: #f56c6c !important;\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/forecast/buyingRequest/detail/index.vue","messages":[{"ruleId":"vue/no-unused-components","severity":2,"message":"The \"OptionsField\" component has been registered but not used.","line":258,"column":5,"nodeType":"Property","endLine":258,"endColumn":17}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"br-create pms-new-ui\" v-loading=\"isLoading\">\n    <LayoutDetail :detailID=\"title\" :statusText=\"statusText\" statusColor=\"orange\">\n      <template slot=\"header-right\">\n        <section class=\"header-btn\" v-for=\"btn in btnList\" :key=\"btn.key\">\n          <el-tooltip v-if=\"btn.tips\" effect=\"light\" :content=\"btn.tips\" placement=\"bottom-start\">\n            <el-button :loading=\"isLoading\" :class=\"btn.class\" @click=\"btn.onClick\">\n              {{ $t(btn.label) }}\n            </el-button>\n          </el-tooltip>\n          <el-button v-else :loading=\"isLoading\" :class=\"btn.class\" @click=\"btn.onClick\">\n            {{ $t(btn.label) }}\n          </el-button>\n        </section>\n      </template>\n    </LayoutDetail>\n\n    <div v-if=\"[8, 9, 7, 3].includes(form.request_status) && isEdit\" class=\"add-sku-box\">\n      <span class=\"sku-title\">Selected SKU ({{ pager.total }})</span>\n      <div class=\"right-box\">\n        <uploadBtnGroup\n          actionUrl=\"/api/replenishment/buying_request/mass_upload/add_sku\"\n          :showHistory=\"false\"\n          :uploadParams=\"uploadParams\"\n          @uploadSuccess=\"onUploadSuccess\"\n          @uploadFailed=\"onUploadError\"\n          @onBtnClick=\"onDownloadTemplate\"\n        >\n        </uploadBtnGroup>\n        <el-button class=\"white-blue\" @click=\"isShowAddSku = true\">+ Add SKU</el-button>\n      </div>\n    </div>\n\n    <!-- tab -->\n    <el-tabs v-if=\"![8, 9].includes(form.request_status)\" class=\"detail-tab\" v-model=\"activeTab\">\n      <el-tab-pane label=\"Overview\" name=\"overview\" :disabled=\"isEdit\">\n        <div v-if=\"!isEmptyTable('overview')\" class=\"o-tab-content\">\n          <div class=\"o-left-tab\">\n            <span class=\"o-tab-label\">Choose Display Level:</span>\n            <el-checkbox-group\n              class=\"o-checkbox\"\n              v-model=\"overviewSelects\"\n              :disabled=\"![6, 3, 7].includes(form.request_status)\"\n              @change=\"getDetail\"\n            >\n              <el-checkbox label=\"shop_id\">{{ $t('forecastShop') }}</el-checkbox>\n              <el-checkbox label=\"category_id\">{{ $t('forecastL1Category') }}</el-checkbox>\n              <el-checkbox label=\"brand_id\">{{ $t('forecastBrand') }}</el-checkbox>\n              <el-checkbox label=\"whs_id\">{{ $t('forecastWarehouse') }}</el-checkbox>\n            </el-checkbox-group>\n          </div>\n          <div class=\"o-right-tab\">\n            <span class=\"o-tab-label\">Currency:</span>\n            <el-radio-group v-model=\"overviewCurrency\" @change=\"getDetail\">\n              <el-radio label=\"usd\">USD</el-radio>\n              <el-radio label=\"local\">{{ localCurrency }}</el-radio>\n            </el-radio-group>\n          </div>\n        </div>\n      </el-tab-pane>\n      <el-tab-pane label=\"SKU Info\" name=\"sku\" :disabled=\"isEdit\">\n        <section v-if=\"!isEdit\">\n          <listSearch\n            :components=\"skuSelectSchema\"\n            :searchForm=\"skuSearchForm\"\n            @change=\"onChangeSkuSearchForm\"\n          ></listSearch>\n          <section class=\"sku-option-box\">\n            <el-button class=\"white-grey\" @click=\"skuSearchForm = {}\">Clear</el-button>\n            <el-button @click=\"onSkuSearch\">Search</el-button>\n          </section>\n        </section>\n      </el-tab-pane>\n    </el-tabs>\n\n    <section v-if=\"!isEmptyTable()\" class=\"table-content\">\n      <el-table class=\"br-sku-table\" :data=\"tableData\" v-loading=\"isLoading\">\n        <el-table-column\n          v-for=\"item in tableSchema\"\n          :key=\"item.field\"\n          :prop=\"item.field\"\n          :label=\"$t(item.label)\"\n          :width=\"isEdit && item.canEdit ? '200px' : ''\"\n          :fixed=\"item.fixed\"\n        >\n          <template slot-scope=\"scope\">\n            <section v-if=\"getIsEdit(item, scope.row)\">\n              <pms-form-item\n                :renderData=\"{\n                  schema: getSchemaItem(item),\n                  form: scope.row,\n                  index: scope.$index\n                }\"\n                @input=\"onInput\"\n              ></pms-form-item>\n            </section>\n            <section v-else>\n              <span :style=\"item.style && item.style(scope.row)\">{{ getValue(item, scope.row) }}</span>\n            </section>\n          </template>\n        </el-table-column>\n        <el-table-column :label=\"$t('commonAction')\" key=\"removeSku\" fixed=\"right\" v-if=\"activeTab === 'sku' && isEdit\">\n          <template slot-scope=\"scope\">\n            <el-button type=\"text\" class=\"color-red\" @click=\"removeSku(scope.row)\">{{ $t('commonRemove') }}</el-button>\n          </template>\n        </el-table-column>\n        <!-- 本期不需要字段配置 -->\n        <!-- <el-table-column key=\"options\" fixed=\"right\" className=\"display-options-col\" width=\"40px\" align=\"center\">\n          <template slot-scope=\"scope\" slot=\"header\">\n            <optionsField\n              btnType=\"icon\"\n              :fieldList=\"allFields\"\n              :defaultList=\"showFields\"\n              @fieldChange=\"displayOptionsChange\"\n              dropdownText=\"Display Options\"\n            >\n            </optionsField>\n          </template>\n        </el-table-column> -->\n      </el-table>\n      <el-pagination\n        v-if=\"activeTab === 'sku'\"\n        class=\"table-pagination\"\n        :current-page=\"pager.curr\"\n        :page-sizes=\"[10, 20, 50, 100]\"\n        :page-size=\"pager.size\"\n        :total.sync=\"pager.total\"\n        background\n        layout=\"sizes, prev, pager, next\"\n        @current-change=\"handleCurrentChange\"\n        @size-change=\"handleSizeChange\"\n      ></el-pagination>\n    </section>\n\n    <section v-if=\"isEmptyTable()\" class=\"empty-box\">\n      <section v-if=\"activeTab === 'sku'\">\n        <svg-icon :style=\"{ fontSize: '70px' }\" iconClass=\"empty-list\" class=\"empty-icon\"></svg-icon>\n        <p v-if=\"[8, 9].includes(form.request_status)\">\n          {{ $t('forecastPleaseaddatleastoneSKUtocreatethebuyingrequest') }}\n        </p>\n        <p v-else>{{ $t('commonNoData') }}</p>\n      </section>\n      <section v-if=\"activeTab === 'overview'\">\n        <svg-icon iconClass=\"empty-calculation\" class=\"empty-icon\"></svg-icon>\n        <p>{{ $t('The overview data is being calculated,please wait several minutes.') }}</p>\n        <p>{{ $t('This page will be auto refreshed when calculating finished.') }}</p>\n      </section>\n    </section>\n\n    <AddSkuDialog\n      v-if=\"isShowAddSku\"\n      :region=\"form.region\"\n      @close=\"isShowAddSku = false\"\n      @submit=\"addSkus\"\n    ></AddSkuDialog>\n    <EditSkuDialog\n      v-if=\"isShowEditSku\"\n      :skuList=\"editSkuList\"\n      :type=\"editSkuType\"\n      :taxCodeOptions=\"taxCodeOptions\"\n      @close=\"isShowEditSku = false\"\n      @submit=\"submitSku\"\n      @remove=\"removeEditSku\"\n    ></EditSkuDialog>\n    <ActionLog\n      type=\"action\"\n      :visible=\"isShowActionLog\"\n      @close=\"isShowActionLog = false\"\n      :params=\"actionLogParams\"\n    ></ActionLog>\n    <!-- <ExportHistoryDialog\n      :interval=\"10000\"\n      :taskType=\"407\"\n      :visible=\"isShowExportHistory\"\n      @close=\"isShowExportHistory = false\"\n    ></ExportHistoryDialog> -->\n  </div>\n</template>\n\n<script>\nimport LayoutDetail from '@/components/layout/detail';\nimport OptionsField from '@/components/ApproveList/optionsField';\nimport PMSFormItem from '@/components/BaseItem/formItem';\nimport uploadBtnGroup from '@/components/upload/uploadBtnGroup';\nimport listSearch from '@/components/common/listSearch';\nimport ActionLog from '@/components/actionLogDialog/actionLog';\n// import ExportHistoryDialog from '@/components/ApproveList/exportHistoryDialog';\nimport {\n  getBRSkuInfo,\n  getBRDetail,\n  getTaxList,\n  getBRConfig,\n  getOptionsForSkuInfo,\n  addBRSkus,\n  saveBRSkus,\n  saveOverviewRemark,\n  cancelBR,\n  withdrawBR,\n  exportBR,\n  approveBR,\n  removeBRSkus,\n  getBRSkusCalculation\n} from '@/api/buyingRequest';\nimport { safeGet, strip } from '@/utils';\nimport { downloadBlobFile } from '@/utils/downloadFile';\nimport moment from 'moment';\n\nimport { getSkuSchema } from './skuConfig';\nimport { getOverviewSchema } from './overviewConfig';\nimport { BuyingRequestStatusList } from '../../common/constant';\nimport { formatObject, formatValue } from '../../common/utils';\nimport EditSkuDialog from './editSkuDialog';\nimport AddSkuDialog from './addSkuDialog';\n\nconst DETAIL_SAVE_SKU_FIELDS = [\n  'sku_id',\n  'sku_name',\n  'supplier_id',\n  'proposed_buying_stock',\n  'competitor_price',\n  'competitor_link',\n  'tax_code',\n  'tax_rate',\n  'whs_id'\n];\n\nconst DETAIL_ADD_SKU_FIELDS = ['sku_id', 'supplier_id', 'whs_id'];\n\nconst DETAIL_SAVE_OVERVIEW_FIELDS = ['shop_id', 'supplier_id', 'whs_id', 'category_id', 'brand_id', 'remark'];\n\nconst btnConfig = {\n  8: ['save', 'submit'],\n  9: ['cancelBR', 'editSku', 'cancelEdit', 'save', 'submit'],\n  5: ['log'],\n  6: ['log', 'cancelBR', 'editSku', 'cancelEdit', 'submit', 'submitOverview'],\n  1: ['log', 'export', 'withdraw', 'reject', 'approve'],\n  2: ['log', 'export'],\n  3: ['log', 'export', 'cancelBR', 'editOverview', 'editSku', 'cancelEdit', 'submit'],\n  7: ['log', 'cancelBR', 'editOverview', 'editSku', 'cancelEdit', 'submit'],\n  4: ['log']\n};\n\nconst cancelTypes = {\n  cancel: {\n    tips: 'Are you sure to cancel this request? This action is not recoverable.',\n    api: cancelBR\n  },\n  withdraw: {\n    tips: 'Are you sure to withdraw this request?',\n    api: withdrawBR\n  }\n};\n\nexport default {\n  name: 'BRdetail',\n  components: {\n    LayoutDetail,\n    OptionsField,\n    AddSkuDialog,\n    'pms-form-item': PMSFormItem,\n    uploadBtnGroup,\n    EditSkuDialog,\n    listSearch,\n    ActionLog\n    // ExportHistoryDialog\n  },\n  data() {\n    return {\n      // br基础信息\n      title: '',\n      form: {\n        br_id: this.$route.params.id ? this.$route.params.id + '' : '',\n        request_status: 8, // 默认为pre-draft\n        pending_request_num: 0,\n        can_approve: false,\n        can_edit: false,\n        region: ''\n      },\n      brConfig: {},\n      overviewDatas: [],\n      taxCodeOptions: [],\n      skuList: [],\n      cacheSkuList: {},\n      pager: {\n        total: 0,\n        size: 10,\n        curr: 1\n      },\n      // 字段配置\n      // allFields: getSchema(),\n      // showFields: [],\n      // end\n      isLoading: false,\n      isEdit: false,\n      isShowActionLog: false,\n      // isShowExportHistory: false,\n      isShowAddSku: false,\n      // tab\n      activeTab: 'sku',\n      overviewSelects: [],\n      overviewCurrency: 'usd',\n      skuSearchForm: {},\n      skuSelectOptions: {},\n      // editsku\n      editSkuList: [],\n      editSkuType: '',\n      isShowEditSku: false\n      // end\n      // btnSchema:\n    };\n  },\n  computed: {\n    localCurrency() {\n      const countrys = this.$store.getters.countryList;\n      const country = countrys.find(item => item.country === this.form.region) || {};\n      return country.currency || 'Local Currency';\n    },\n    btnSchema() {\n      return {\n        cancelEdit: {\n          label: 'commonCancel',\n          class: 'white-blue',\n          onClick: () => {\n            this.isEdit = false;\n            this.cacheSkuList = {};\n            this.getSkus();\n          }\n        },\n        cancelBR: {\n          label: 'forecastCancelRequest',\n          class: 'white-red',\n          onClick: () => {\n            this.onCancelBR('cancel');\n          },\n          permission: () => {\n            // 本人允许修改\n            return this.form.can_edit;\n          }\n        },\n        withdraw: {\n          label: 'commonWithdraw',\n          class: 'white-red',\n          onClick: () => {\n            this.onCancelBR('withdraw');\n          },\n          permission: () => {\n            // 本人允许修改\n            return this.form.can_edit;\n          }\n        },\n        editOverview: {\n          label: 'commonEditOverview',\n          class: 'white-blue',\n          tips: 'After editting and submitting, BR will go to \"pending approval\" directly.',\n          onClick: () => {\n            this.activeTab = 'overview';\n            this.isEdit = true;\n          },\n          permission: () => {\n            return this.form.can_edit;\n          }\n        },\n        editSku: {\n          label: 'forecastEditSKU',\n          class: 'white-blue',\n          tips:\n            'After editting and submitting, system need re-calculate the value. Then you need set overview level and submit for approval.',\n          onClick: () => {\n            this.activeTab = 'sku';\n            this.isEdit = true;\n          },\n          permission: () => {\n            return this.form.can_edit;\n          }\n        },\n        // edit: {\n        //   label: 'commonEdit',\n        //   class: 'white-blue',\n        //   onClick: () => {\n        //     this.isEdit = true;\n        //   },\n        //   permission: () => {\n        //     if (this.form.request_status === 6 && this.activeTab === 'sku') {\n        //       return false;\n        //     }\n        //     return this.form.can_edit;\n        //   }\n        // },\n        save: {\n          label: 'forecastSaveasDraft',\n          class: 'white-blue',\n          onClick: () => {\n            this.onSubmit('save', this.activeTab);\n          }\n        },\n        submitOverview: {\n          label: 'Submit for approval',\n          onClick: () => {\n            this.onSubmit('submit', 'overview');\n          }\n        },\n        submit: {\n          label: this.activeTab === 'sku' ? 'forecastSubmitforcalculation' : 'Submit for approval',\n          onClick: () => {\n            this.onSubmit('submit', this.activeTab);\n          }\n        },\n        log: {\n          label: 'forecastActionLog',\n          class: 'white-blue',\n          onClick: () => {\n            this.isShowActionLog = true;\n          }\n        },\n        export: {\n          label: 'Export',\n          class: 'white-blue',\n          onClick: () => {\n            this.onExport();\n          }\n        },\n        // exportHistory: {\n        //   label: 'Export History',\n        //   class: 'white-blue',\n        //   onClick: () => {\n        //     this.isShowExportHistory = true;\n        //   }\n        // },\n        reject: {\n          label: `Reject&Next(${this.form.pending_request_num || 0})`,\n          class: 'white-red',\n          onClick: () => {\n            this.onReject();\n          },\n          permission: () => {\n            // 审批流配置\n            return this.form.can_approve;\n          }\n        },\n        approve: {\n          label: `Approve&Next(${this.form.pending_request_num || 0})`,\n          class: 'white-green',\n          onClick: () => {\n            this.onApprove();\n          },\n          permission: () => {\n            // 审批流配置\n            return this.form.can_approve;\n          }\n        }\n      };\n    },\n    uploadParams() {\n      return { uploadFailedEmit: true, uploadData: { br_id: this.form.br_id } };\n    },\n    actionLogParams() {\n      return {\n        show_type: 1,\n        object_id: this.form.br_id,\n        biz_type: 'REPLENISHMENT',\n        log_type: 'buying_request'\n      };\n    },\n    tableData() {\n      if (this.activeTab === 'overview') {\n        return this.overviewDatas;\n      }\n      return this.skuList;\n    },\n    skuSelectSchema() {\n      return [\n        {\n          name: 'listSelect',\n          props: {\n            label: this.$t('forecastSupplier'),\n            field: 'supplier_ids',\n            multiple: true,\n            options: this.skuSelectOptions.supplier_id_list,\n            'collapse-tags': true\n          }\n        },\n        {\n          name: 'listSelect',\n          props: {\n            label: this.$t('forecastShop'),\n            field: 'shop_ids',\n            multiple: true,\n            options: this.skuSelectOptions.shop_id,\n            'collapse-tags': true\n          }\n        },\n        {\n          name: 'listSelect',\n          props: {\n            label: this.$t('forecastCategroy'),\n            field: 'category_ids',\n            multiple: true,\n            options: this.skuSelectOptions.l1_category_id,\n            'collapse-tags': true\n          }\n        },\n        {\n          name: 'listSelect',\n          props: {\n            label: this.$t('forecastBrand'),\n            field: 'brand_ids',\n            multiple: true,\n            options: this.skuSelectOptions.brand,\n            'collapse-tags': true\n          }\n        },\n        {\n          name: 'listInput',\n          props: {\n            label: this.$t('forecastSKUID'),\n            field: 'sku_id'\n          }\n        },\n        {\n          name: 'listSelect',\n          props: {\n            label: this.$t('forecastWarehouse'),\n            field: 'whs_ids',\n            multiple: true,\n            options: this.skuSelectOptions.whs_id_list,\n            'collapse-tags': true\n          }\n        }\n      ];\n    },\n    statusText() {\n      const status = this.form.request_status;\n      if (status === 8) return '';\n      const findItem = BuyingRequestStatusList.find(item => item.value === status) || {};\n      let label = findItem.label;\n      if (status === 1) label += ' : ' + this.form.pending_role;\n      return label;\n    },\n    btnList() {\n      let whiteList = btnConfig[this.form.request_status] || [];\n      // 如果不是编辑状态，不显示\n      if (!this.isEdit) whiteList = whiteList.filter(key => !['cancelEdit', 'save', 'submit'].includes(key));\n\n      return whiteList\n        .map(key => ({ ...this.btnSchema[key], key }))\n        .filter(item => {\n          const key = item.key;\n          let isShow = true;\n          if (typeof item.permission === 'function') {\n            isShow = isShow && item.permission();\n          }\n\n          if (this.isEdit) {\n            isShow = isShow && ['cancelEdit', 'save', 'submit'].includes(key);\n          } else {\n            isShow = isShow && !['cancelEdit', 'save', 'submit'].includes(key);\n          }\n\n          return isShow;\n        });\n    },\n    tableSchema() {\n      if (this.activeTab === 'overview') {\n        return getOverviewSchema(null, { ...this.brConfig, overviewSelects: this.overviewSelects });\n      }\n      return getSkuSchema();\n    }\n  },\n  created() {\n    // let fieldsSet = (localStorage.getItem('br-create-sku-fields') || '').split(',');\n    // fieldsSet = fieldsSet.filter(item => !!item);\n    // if (!fieldsSet.length) fieldsSet = getDefaultFields();\n    // this.showFields = fieldsSet;\n\n    if (!this.form.br_id) {\n      this.isEdit = true;\n      this.title = 'Create Buying Request';\n      return;\n    }\n\n    this.initDetail();\n  },\n  async beforeRouteUpdate(to, from, next) {\n    await this.initDetail();\n    next();\n  },\n  methods: {\n    getIsEdit(schema, row) {\n      const isEdit = this.isEdit || (this.form.request_status === 6 && this.activeTab === 'overview');\n      return isEdit && (typeof schema.canEdit === 'function' ? schema.canEdit(row) : schema.canEdit);\n    },\n    getValue(schema, row) {\n      const value = schema.render ? schema.render(schema, row) : formatValue(row[schema.field]);\n      return value;\n    },\n    getSchemaItem(schema) {\n      // computed 中更新options无效\n      if (schema.field === 'tax_code') {\n        schema.options = this.taxCodeOptions;\n      }\n      return schema;\n    },\n    async removeEditSku(row, index) {\n      const done = await this.removeSku(row);\n      if (done) {\n        this.editSkuList.splice(index, 1);\n        if (!this.editSkuList.length) {\n          this.isShowEditSku = false;\n        }\n      }\n    },\n    async removeSku(row) {\n      const done = await this.ajax(removeBRSkus, {\n        br_id: this.form.br_id,\n        sku_list: [{ sku_id: row.sku_id, whs_id: row.whs_id }]\n      });\n\n      if (done) {\n        // 清除缓存\n        delete this.cacheSkuList[row.id];\n        // 删除当前页sku\n        const findIndex = this.skuList.findIndex(item => item.id === row.id);\n        if (findIndex >= 0) {\n          this.$delete(this.skuList, findIndex);\n          if (this.skuList.length === 0 && this.pager.curr !== 1) {\n            this.pager.curr -= 1;\n          }\n        }\n        // 刷新页面是为了分页数据和后台保持一致\n        this.getSkus();\n      }\n      return done;\n    },\n    isEmptyTable(type) {\n      // 传type则指定判断某个tab\n      type = type || this.activeTab;\n      if (this.pager.curr !== 1) return false;\n      if (type === 'sku' && !this.skuList.length) {\n        return true;\n      }\n      if (type === 'overview' && !this.overviewDatas.length) {\n        return true;\n      }\n      return false;\n    },\n    onSkuSearch() {\n      this.pager.curr = 1;\n      this.getSkus();\n    },\n    onChangeSkuSearchForm() {\n      this.getSkus();\n    },\n    // 上传\n    onUploadSuccess(res) {\n      this.form.br_id = res.data.br_id;\n      this.initDetail();\n\n      const h = this.$createElement;\n      const list = safeGet(res, 'data.err_list', []);\n      if (!list.length) {\n        this.$message.success('Upload success!');\n        return;\n      }\n      // 这里错误提示采用dialog，点击关闭\n      this.$msgbox({\n        title: 'Some sku upload fail!',\n        customClass: 'br-detail-err-box',\n        message: h('div', { class: 'br-detail-err-content' }, [list.map(tips => h('p', null, tips))])\n      });\n    },\n    onUploadError(res) {\n      this.$message.error('Upload fail:' + res.message);\n    },\n    onDownloadTemplate() {\n      window.open('/admin/data/br-detail-mass-upload-template.xlsx');\n    },\n    // end\n    // cancel/withdraw\n    async onCancelBR(type) {\n      const opt = cancelTypes[type];\n      if (!opt) return;\n      const check = await this.$confirm(opt.tips, 'Warning', {\n        confirmButtonText: this.$t('commonConfirm'),\n        cancelButtonText: this.$t('commonCancel'),\n        customClass: 'pms-ele-ui',\n        confirmButtonClass: 'list-btn',\n        cancelButtonClass: 'list-btn white'\n      });\n      if (!check) return;\n      const done = await this.ajax(opt.api, { br_id: this.form.br_id });\n      if (done) {\n        this.getDetail();\n      }\n    },\n    async onApprove() {\n      const data = await this.ajax(approveBR, {\n        br_id: this.form.br_id,\n        action: 1 // reject\n      });\n      if (data && data.next_br_id) {\n        this.nextBr(data.next_br_id);\n      }\n    },\n    nextBr(br_id) {\n      if (!br_id || this.form.br_id === br_id) {\n        // this.form.br_id = br_id;\n        this.initDetail();\n      } else {\n        this.form.br_id = br_id;\n        this.$router.push({ name: 'buyingRequestDetail', params: { id: br_id } });\n      }\n    },\n    async onReject() {\n      const res = await this.$prompt('Please enter the reason', 'Confirm', {\n        inputValidator: str => {\n          if (!str || str.length > 500) {\n            return 'Reason is required and less than 500 characters';\n          }\n          return true;\n        }\n      });\n      if (res.action === 'confirm') {\n        const data = await this.ajax(approveBR, {\n          br_id: this.form.br_id,\n          action: 2, // reject\n          reject_reason: res.value\n        });\n        // 成功后访问下一个\n        if (data && data.next_br_id) {\n          this.nextBr(data.next_br_id);\n        }\n      }\n    },\n    async onExport() {\n      try {\n        const res = await exportBR({\n          br_id: this.form.br_id,\n          currency: this.overviewCurrency,\n          display_level: this.overviewSelects.join(',')\n        });\n        downloadBlobFile(res, `${this.form.br_id}_${moment().format('YYYYMMDD')}.xlsx`);\n      } catch (e) {\n        // console.error(e);\n        this.$message.error(e.message);\n      }\n    },\n    async addSkus(list) {\n      // console.log(list);\n      const data = await this.ajax(addBRSkus, {\n        br_id: this.form.br_id,\n        sku_list: list.map(item => formatObject(item, DETAIL_ADD_SKU_FIELDS))\n      });\n\n      if (data) {\n        if (!this.form.br_id) {\n          // 首次添加时，刷新form\n          this.form.br_id = data.br_id;\n          this.initDetail();\n        } else {\n          this.getSkus();\n        }\n        this.isShowAddSku = false;\n      }\n    },\n    // type: submit/save\n    // tab: activeTab\n    async onSubmit(type, tab) {\n      if (tab === 'sku') {\n        const done = await this.submitSku(type, Object.values(this.cacheSkuList));\n        if (done && type === 'submit' && this.$route.name === 'buyingRequestCreate') {\n          // 提交后跳转到detail页面\n          this.$router.push({ name: 'buyingRequestDetail', params: { id: this.form.br_id } });\n        } else if (done && type === 'save' && this.form.request_status === 8) {\n          // pre-draft保存后未draft需要补充参数\n          this.$router.push({ name: 'buyingRequestCreate', params: { id: this.form.br_id } });\n        }\n      } else if (tab === 'overview') {\n        await this.submitOverview();\n      }\n    },\n    async submitSku(type, list) {\n      const data = await this.ajax(saveBRSkus, {\n        action: type === 'save' ? 1 : 2,\n        br_id: this.form.br_id,\n        sku_list: list.map(item => formatObject(item, DETAIL_SAVE_SKU_FIELDS))\n      });\n\n      const failList = data.fail_sku_list || [];\n\n      if (failList.length) {\n        // 部分成功\n        this.editSkuList = failList.map(this.formatOneSku);\n        this.editSkuType = type;\n        this.isShowEditSku = true;\n\n        // 将成功的部分清除前端缓存，并更新后台最新数据\n        const resList = {};\n        Object.keys(this.cacheSkuList).forEach(id => {\n          const sku_id = this.cacheSkuList[id].sku_id;\n          const whs_id = this.cacheSkuList[id].whs_id;\n          if (failList.findIndex(item => item.sku_id === sku_id && item.whs_id === whs_id) !== -1) {\n            // 如果失败了，则继续保留\n            resList[id] = this.cacheSkuList[id];\n          }\n        });\n\n        this.cacheSkuList = resList;\n        this.getSkus();\n\n        return false;\n      }\n\n      // 全部成功\n      if (data) {\n        this.isShowEditSku = false;\n        this.isEdit = false;\n        this.cacheSkuList = {};\n        this.initDetail();\n      }\n      return !!data;\n    },\n    async submitOverview() {\n      const data = await this.ajax(saveOverviewRemark, {\n        br_id: this.form.br_id,\n        remarks: this.overviewDatas.map(item => formatObject(item, DETAIL_SAVE_OVERVIEW_FIELDS))\n      });\n\n      if (data) {\n        this.isEdit = false;\n        this.initDetail();\n      }\n      return !!data;\n    },\n    async onInput(schema, value, index) {\n      if (this.activeTab === 'overview') {\n        this.modifyOverview(schema, value, index);\n      } else {\n        this.modifySKU(schema, value, index);\n      }\n    },\n    async modifyOverview(schema, value, index) {\n      // edit overview\n      if (this.activeTab === 'overview') {\n        this.overviewDatas[index][schema.field] = value;\n        return;\n      }\n    },\n    async modifySKU(schema, value, index) {\n      // edit sku\n      const oldValue = this.skuList[index][schema.field];\n      let valueStr = value;\n      if (schema.field === 'tax_code') {\n        valueStr = value.tax_code;\n      } else if (schema.field === 'supplier_id') {\n        valueStr = value.supplier_id;\n      }\n\n      if (oldValue === valueStr || (!oldValue && !valueStr)) {\n        return;\n      }\n      if (schema.field === 'tax_code') {\n        this.skuList[index]['tax_code'] = value.tax_code;\n        this.skuList[index]['tax_rate'] = value.tax_rate;\n      } else {\n        this.skuList[index][schema.field] = valueStr;\n      }\n      // 先保存，否则下面异步更新延迟可能导致数据不一致\n      this.$set(this.skuList, index, this.skuList[index]);\n      this.cacheSkuList[this.skuList[index].id] = this.skuList[index];\n\n      if (schema.needUpdate) {\n        // TODO: 为了避免覆盖，重复修改一个sku应该要取消未返回结果的请求，不过不影响提交结果，优先级低\n        try {\n          // 从后台更新计算值，不需要loading\n          const res = await getBRSkusCalculation({\n            br_id: this.form.br_id,\n            sku_list: [this.skuList[index]],\n            edit_field: schema.field\n          });\n          if (res.retcode === 0) {\n            if (!this.isEdit) return; // 这里异步请求返回时视图可能已经变化\n            const sku = res.data.sku_list[0];\n            this.$set(this.skuList, index, this.formatOneSku({ ...this.skuList[index], ...sku }));\n            this.cacheSkuList[this.skuList[index].id] = this.skuList[index];\n          } else {\n            throw new Error(res.message);\n          }\n        } catch (e) {\n          this.$message.error('Calculation sku faild:' + e.message);\n        }\n      }\n    },\n    async initDetail() {\n      this.getSkus();\n      await this.getDetail();\n      if (this.form.can_edit) {\n        this.getTaxOptions(this.form.region); // 编辑sku需要\n        this.getBRConfig(this.form.region); // 编辑overview需要\n      }\n      if (![8, 9].includes(this.form.request_status)) {\n        this.getSkuOpitons(this.form.br_id); // 查看sku需要\n      }\n    },\n    async getDetail() {\n      if (!this.form.br_id) return;\n\n      const data = await this.ajax(getBRDetail, {\n        br_id: this.form.br_id,\n        currency: this.overviewCurrency,\n        display_level: this.overviewSelects.join(',')\n      });\n\n      this.form = { ...this.form, ...data };\n      this.overviewDatas = data.overview.list;\n      this.overviewSelects = data.overview.group_cols;\n\n      if (this.form.request_status === 8) {\n        this.isEdit = true;\n        this.form.can_edit = true;\n        this.title = 'Create Buying Request';\n      } else {\n        this.title = this.form.br_id;\n      }\n\n      return this.form;\n    },\n    async getTaxOptions(country) {\n      if (this.taxCodeOptions && this.taxCodeOptions.length) {\n        return;\n      }\n      const data = await this.ajax(getTaxList, {\n        country\n      });\n      this.taxCodeOptions = data.tax_conf_list.map(item => ({\n        value: { tax_code: item.tax_code, tax_rate: strip(item.tax_rate * 100) + '' },\n        label: item.tax_code\n      }));\n    },\n    async getBRConfig(region) {\n      if (Object.keys(this.brConfig).length) {\n        return;\n      }\n      const data = await this.ajax(getBRConfig, {\n        region\n      });\n      this.brConfig = data || {};\n    },\n    async getSkuOpitons(br_id) {\n      if (Object.keys(this.skuSelectOptions).length) {\n        return;\n      }\n\n      const data = await this.ajax(getOptionsForSkuInfo, {\n        br_id\n      });\n      Object.keys(data || {}).forEach(key => {\n        data[key] = data[key].map(item => ({\n          label: item.name,\n          value: item.id\n        }));\n      });\n      this.skuSelectOptions = data || {};\n    },\n    async getSkus() {\n      if (!this.form.br_id) return;\n      const params = {\n        br_id: this.form.br_id,\n        pageno: this.pager.curr,\n        count: this.pager.size\n      };\n      // 处理筛选参数\n      Object.keys(this.skuSearchForm).forEach(key => {\n        if (Array.isArray(this.skuSearchForm[key]) && this.skuSearchForm[key].length) {\n          params[key] = this.skuSearchForm[key].join(',');\n        } else if (this.skuSearchForm[key]) {\n          params[key] = this.skuSearchForm[key];\n        }\n      });\n      const data = await this.ajax(getBRSkuInfo, params);\n      const sku_list = data.sku_list || [];\n\n      this.skuList = (sku_list || []).map(item => {\n        // 需要id，所以先要format\n        item = this.formatOneSku(item);\n        // 如果是前端编辑过的值，则取缓存中的值\n        if (this.cacheSkuList[item.id]) {\n          return this.cacheSkuList[item.id];\n        }\n        return item;\n      });\n      this.pager.total = data.total;\n    },\n    formatOneSku(item) {\n      item.id = item.sku_id + item.whs_id;\n      // 为空则可以编辑\n      if (item.canEditTax === undefined) {\n        item.canEditTax = item.tax_code === null;\n      }\n      if (item.competitor_price === null) item.competitor_price = undefined;\n      return item;\n    },\n    handleCurrentChange(value) {\n      this.pager.curr = value;\n      this.getSkus();\n    },\n    handleSizeChange(value) {\n      this.pager.size = value;\n      this.pager.curr = 1;\n      this.getSkus();\n    },\n    // displayOptionsChange(list) {\n    //   this.showFields = list;\n    //   localStorage.setItem('br-create-sku-fields', list.join(','));\n    // },\n    async ajax(api, data) {\n      this.isLoading = true;\n      try {\n        const resp = await api(data);\n        if (resp.retcode === 0) {\n          return resp.data;\n        }\n        throw new Error(resp.message);\n      } catch (e) {\n        this.$message.error(e.message || 'Interface Error');\n        return null;\n      } finally {\n        this.isLoading = false;\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.br-create {\n  .detail-layout-wrapper {\n    padding: 0 20px;\n    .header-wrapper {\n      padding-bottom: 16px;\n    }\n    .content-wrapper {\n      padding: 0;\n    }\n  }\n  .el-input-number--medium {\n    width: 100%;\n  }\n}\n\n.br-detail-err-box {\n  width: 640px;\n  .br-detail-err-content {\n    max-height: 300px;\n    overflow: auto;\n  }\n}\n</style>\n\n<style lang=\"scss\" scoped>\n.br-create {\n  // 头部\n  .sku-title {\n    font-weight: bold;\n    line-height: 32px;\n  }\n  .fix-dropdown {\n    vertical-align: middle;\n  }\n  .add-sku-box {\n    padding: 20px;\n    height: 32px;\n    box-sizing: content-box;\n    .right-box {\n      float: right;\n    }\n  }\n  .header-btn {\n    display: inline-block;\n    margin-left: 10px;\n  }\n  // 表格\n  .table-content {\n    margin: 0 20px;\n  }\n  .table-pagination {\n    padding: 16px;\n    text-align: center;\n  }\n  .empty-box {\n    color: #aaa;\n    text-align: center;\n    padding-top: 150px;\n    line-height: 20px;\n    .empty-icon {\n      font-size: 50px;\n      margin-bottom: 20px;\n    }\n  }\n}\n.detail-tab {\n  margin: 15px 20px;\n  font-size: 14px;\n  .o-tab-label {\n    margin-right: 5px;\n  }\n  .o-checkbox {\n    display: inline-block;\n  }\n  .o-tab-content {\n    display: flex;\n    .o-right-tab {\n      flex: 1;\n      text-align: right;\n    }\n  }\n  .sku-option-box {\n    margin-top: 15px;\n    text-align: right;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/forecast/buyingRequest/detail/overviewConfig.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/forecast/buyingRequest/detail/skuConfig.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/forecast/buyingRequest/list.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/forecast/buyingRequest/massOperationDialog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/forecast/buyingRequest/overviewSettingDialog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/forecast/common/DataUpdataTime.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/forecast/common/constant.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/forecast/common/utils.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/forecast/replenishmentTool/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/forecast/salesForecast/actionLog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/forecast/salesForecast/forecastColumn.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/forecast/salesForecast/index.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":18,"column":15,"nodeType":"VIdentifier","messageId":"deprecated","endLine":18,"endColumn":21},{"ruleId":"vue/no-unused-components","severity":2,"message":"The \"uploadBtnGroup\" component has been registered but not used.","line":135,"column":29,"nodeType":"Property","endLine":135,"endColumn":43}],"errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class='pms-ui'>\n    <tabsHeader\n      :createHidden=\"true\"\n      :tabs=\"countryList\"\n      :canTranslate=\"false\"\n      :defaultTab=\"searchForm.region\"\n      :stretch=\"false\"\n      @tabChange=\"handleTabChange\"\n      :tabStyle=\"tabStyle\"\n      :isTabsDisabled=\"getIsForecastEditing()\"\n    />\n    <el-form\n      :inline=\"true\"\n      :model=\"searchForm\"\n      class=\"sales-forecast-search-form\"\n      ref=\"searchFormRef\"\n      @submit.native.prevent=\"onSearch\"\n    >\n      <el-button v-show=\"false\" native-type=\"submit\" />\n      <el-row>\n        <el-col :span=\"6\">\n          <el-form-item :label=\"$t('purchaseOrder.warehouse')\">\n            <el-select\n              v-model=\"searchForm.warehouse\"\n              :placeholder=\"$t('Select')\"\n              :disabled=\"getIsForecastEditing()\"\n              @change=\"handleSearchFormChange\"\n            >\n              <el-option\n                v-for=\"item in warehouseList || []\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.value\"\n              />\n            </el-select>\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"7\">\n          <el-form-item :label=\"`${$t('productId')} / ${$t('commonSkuID')}`\">\n            <el-input\n              v-model.trim=\"searchForm.productOrSkuId\"\n              :placeholder=\"$t('sellerDiscountPleaseInput')\"\n              :disabled=\"getIsForecastEditing()\"\n            />\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"10\">\n          <el-form-item :label=\"$t('forecastSalesDate')\">\n            <el-date-picker\n              value-format=\"yyyy-MM-dd\"\n              popper-class=\"pms-ui\"\n              type=\"daterange\"\n              start-placeholder=\"Begin\"\n              end-placeholder=\"End\"\n              v-model=\"searchForm.salesDateRange\"\n              :disabled=\"getIsForecastEditing()\"\n              :clearable=\"false\"\n              :popperClass=\"'pms-date-picker'\"\n              :picker-options=\"pickerOptions\"\n              @change=\"handleSearchFormChange\"\n            />\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"6\">\n          <el-form-item :label=\"$t('approvalFlow.shopIDName')\">\n            <el-select\n              filterable\n              remote\n              clearable\n              v-model=\"searchForm.shopId\"\n              :disabled=\"getIsForecastEditing()\"\n              :placeholder=\"$t('sellerDiscountPleaseInput')\"\n              :remote-method=\"fetchShops\"\n              @change=\"handleSearchFormChange\"\n            >\n              <el-option\n                v-for=\"option in shopSelectOptions\"\n                :key=\"option.value\"\n                :label=\"option.label\"\n                :value=\"option.value\"\n              />\n            </el-select>\n          </el-form-item>\n        </el-col>\n      </el-row>\n      <el-row class=\"form-actions\">\n        <el-button class=\"list-btn light-btn clear-btn white\" @click=\"onReset\" :disabled=\"getIsForecastEditing()\">\n          {{ $t('purchaseRequest.clear') }}\n        </el-button>\n        <el-button class=\"list-btn search-btn\" @click=\"onSearch\" :disabled=\"getIsForecastEditing()\">\n          {{ $t('purchaseRequest.search') }}\n        </el-button>\n      </el-row>\n    </el-form>\n    <tableList\n      ref=\"tableList\"\n      :list=\"forecastList\"\n      :searchForm=\"searchForm\"\n      :total=\"forecastTotal\"\n      :pager=\"pager\"\n      :loading=\"isFetchingForecast\"\n      @onPagerChange=\"onPagerChange\"\n      @onFetchDetail=\"fetchForecastDetail\"\n      @onSave=\"onForecastListDetailSave\"\n    />\n  </div>\n</template>\n\n<script>\nimport tabsHeader from '@/components/tabsHeader';\nimport uploadBtnGroup from '@/components/upload/uploadBtnGroup';\nimport { getSalesForecastList, getSalesForecastDetail } from '@/api/salesForecast';\nimport { getShopListByIdOrName } from '@/api/shopConfig';\nimport { getDateOfToday, getRelativeDayByDate } from '@/utils/moment';\nimport { formatParams } from '@/utils/formatParams';\nimport { getFetchForecastListParams } from './utils';\nimport tableList from './list';\n\nconst getDefaultDateRange = () => {\n  const today = getDateOfToday();\n  const tomorrow = getRelativeDayByDate(today, 1);\n  return [tomorrow, getRelativeDayByDate(tomorrow, 6)];\n};\n\nconst initialSearchFormData = {\n  warehouse: 'ALL',\n  productOrSkuId: '',\n  salesDateRange: getDefaultDateRange(),\n  shopId: ''\n};\n\nexport default {\n  name: 'SalesForecastList',\n  components: { tabsHeader, uploadBtnGroup, tableList },\n  data() {\n    return {\n      searchForm: {\n        region: this.$store.getters.country,\n        ...initialSearchFormData\n      },\n      forecastList: [],\n      forecastTotal: 0,\n      isFetchingForecast: false,\n      shopSelectOptions: [],\n      pager: {\n        pageNo: 1,\n        pageSize: 10\n      }\n    };\n  },\n  mounted() {\n    this.fetchForecastList();\n  },\n  methods: {\n    async fetchForecastList(partialParams = {}) {\n      try {\n        this.isFetchingForecast = true;\n        const params = getFetchForecastListParams(this.searchForm, this.pager, partialParams);\n        const {retcode, data = {}, message} = await getSalesForecastList(formatParams(params));\n        if (retcode === 0) {\n          const {list = [], total = 0} = data;\n          this.forecastList = list;\n          this.forecastTotal = total;\n        } else {\n          this.$message({ type: 'error', message });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.isFetchingForecast = false;\n      }\n    },\n    async fetchForecastDetail(partialParams) {\n      try {\n        this.isFetchingForecast = true;\n        const params = {\n          id_list: this.forecastList.map(item => item.id).join(','),\n          ...partialParams\n        };\n        const {retcode, data = {}, message} = await getSalesForecastDetail(params);\n        if (retcode === 0) {\n          this.updateForecastListDetail(data.list);\n        } else {\n          this.$message({ type: 'error', message });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.isFetchingForecast = false;\n      }\n    },\n    updateForecastListDetail(data = []) {\n      data.forEach(item => {\n        const index = this.forecastList.findIndex(listItem => listItem.id === item.id);\n        if (index >= 0) {\n          const target = this.forecastList[index];\n          this.$set(this.forecastList, index, {\n            ...target,\n            forecast_list: (target.forecast_list || []).concat(item.forecast_list)\n          });\n        }\n      });\n    },\n    onForecastListDetailSave(data) {\n      const {id, forecast_list} = data;\n      const target = this.forecastList.find(item => item.id === id);\n      const editedDates = forecast_list.map(item => item.date);\n      const newList = target['forecast_list'].filter(item => !editedDates.includes(item.date)).concat(forecast_list);\n      target['forecast_list'] = newList;\n    },\n    onReset() {\n      this.shopSelectOptions = [];\n      this.searchForm = {...this.searchForm, ...initialSearchFormData};\n    },\n    onSearch(params = {}) {\n      this.fetchForecastList(params);\n      const date = this.searchForm.salesDateRange[0];\n      this.$refs.tableList.updateBeginDate(date);\n    },\n    onPagerChange(pager) {\n      this.pager = { ...this.pager, ...pager };\n      this.fetchForecastList();\n    },\n    handleTabChange(region) {\n      this.onReset();\n      this.searchForm.region = region.name;\n      this.onSearch();\n    },\n    handleSearchFormChange() {\n      this.pager.pageNo = 1;\n      this.onSearch();\n    },\n    async fetchShops(query) {\n      if (query === '') {\n        return;\n      }\n      try {\n        const params = {\n          search_type: 0,\n          shop_id_or_name: query,\n          page_no: 1,\n          count: 30\n        };\n        const {retcode, data} = await getShopListByIdOrName(params);\n        if (retcode === 0) {\n          const filteredCountry = data.shop_list.filter(item => item.country === this.searchForm.region);\n          this.shopSelectOptions = filteredCountry.map(item => ({\n            value: item.shop_id,\n            label: `${item.shop_id}(${item.shop_name})`\n          }));\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    getIsForecastEditing() {\n      return this.$refs.tableList ? this.$refs.tableList.getIsForecastEditing() : false;\n    }\n  },\n  computed: {\n    countryList() {\n      const {countryList} = this.$store.getters;\n      return [...new Set([...countryList.map(item => item.country)])].map(item => ({ name: item, label: item }));\n    },\n    tabStyle() {\n      return { height: '60px' };\n    },\n    warehouseList() {\n      const {warehouseList} = this.$store.getters;\n      const list = warehouseList\n        .filter(item => item.country === this.searchForm.region)\n        .map(item => ({ label: item.warehouse, value: item.warehouse }));\n\n      return [{ label: this.$t('commonAll'), value: 'ALL' }].concat(list);\n    },\n    pickerOptions() {\n      let theMinDate = '';\n      return {\n        disabledDate(time) {\n          const range = 86400000 * 119; // 最大跨度120天\n          const selectedTime = new Date(theMinDate).getTime();\n          const before = selectedTime - range;\n          const after = selectedTime + range;\n          return time.getTime() > after || time.getTime() < before;\n        },\n        onPick({maxDate, minDate}) {\n          if (!maxDate) {\n            theMinDate = minDate;\n          } else {\n            theMinDate = '';\n          }\n        }\n      };\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.sales-forecast-search-form {\n  margin: 0 20px;\n  padding: 10px 0 20px 0;\n  border-bottom: 2px solid #f1f1f1;\n}\n\n.form-actions {\n  display: flex;\n  justify-content: flex-end;\n\n  > * + * {\n    margin-left: 10px;\n  }\n}\n\n.pms-ui .list-btn {\n  margin-right: 12px;\n\n  width: auto;\n  padding: 0 20px;\n  white-space: nowrap;\n\n  &.light-btn {\n    border: 1px solid #3d6ed1;\n    color: #3d6ed1;\n    background-color: #fff;\n  }\n\n  &.clear-btn {\n    color: #555555;\n    background-color: #fff;\n    border: 1px solid #e4e4e4;\n  }\n\n  &:last-child {\n    margin: 0;\n  }\n\n  &:disabled {\n    color: #C0C4CC;\n    cursor: not-allowed;\n    background-image: none;\n    background-color: #FFFFFF;\n    border-color: #EBEEF5;\n  }\n}\n</style>\n<style lang=\"scss\">\n@import '~@/styles/common.scss';\n\n.sales-forecast-search-form {\n  .el-autocomplete {\n    width: 100%;\n  }\n\n  .el-col {\n    float: none;\n    display: inline-block;\n    vertical-align: middle;\n    padding: 0 12px 16px 0;\n\n    .el-form-item {\n      width: 100%;\n      display: flex;\n      border: 1px solid #e2e6ec;\n      border-radius: 4px;\n      box-sizing: content-box;\n      height: 30px;\n      line-height: 30px;\n      margin: 0px;\n    }\n  }\n\n  .el-form-item__label {\n    background-color: #fafbfd;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    padding: 0 8px;\n    border-radius: 4px 0 0 4px;\n    border-right: 1px solid #e2e6ec;\n  }\n\n  .el-form-item__content {\n    flex: 1;\n  }\n\n  .el-input__inner,\n  .el-range-input {\n    border: 0;\n    background-color: transparent;\n    height: auto;\n    padding: 0 0 0 8px;\n    vertical-align: initial;\n    text-align: left;\n    margin: 0;\n    line-height: 30px;\n\n    &:hover {\n      border: 0;\n      background-color: #faf1e0;\n    }\n  }\n\n  .el-form-item--medium .el-form-item__content,\n  .el-form-item--medium .el-form-item__label {\n    line-height: 30px;\n    color: #333;\n  }\n\n  .el-input.is-disabled .el-input__inner {\n    background-color: #fafbfd;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/forecast/salesForecast/list.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/forecast/salesForecast/utils.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/inboundMgt/inboundCalendar.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/inboundMgt/list.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/inboundReservation/create.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/inboundReservation/detail.vue","messages":[{"ruleId":"vue/no-spaces-around-equal-signs-in-attribute","severity":2,"message":"Unexpected spaces found around equal signs.","line":51,"column":40,"nodeType":"VDirectiveKey","endLine":51,"endColumn":42,"fix":{"range":[1948,1950],"text":"="}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"/**\n * @file Inbound Reservation Request 详情\n * @author Siqi Li\n */\n<template>\n  <div>\n    <layout-detail\n    >\n    <template slot=\"auto-title\">\n      <i class=\"el-icon-arrow-left go-back-icon\" @click=\"goBack\"></i>\n      <span class=\"detail-header-title\">{{ requestId }}</span>\n      <span :class=\"`pms-status-sign pms-status-sign-${statusInfo.color}`\">{{statusInfo.text}}</span>\n      <p v-if=\"isPendingApprove\" class=\"sub-title\">{{`${`${$t('IRRemainIBQuota')}: ${remainIBQty || '/'}`}`}}</p>\n    </template>\n      <div slot=\"header-right\" class=\"actions\">\n        <el-button\n          class=\"white-blue\"\n          @click=\"onExportClick\"\n          :loading=\"isExporting\"\n        >\n          {{$t('commonExport')}}\n        </el-button>\n        <el-button class=\"white-blue\" @click=\"onActionLogClick\">\n          {{$t('commonActionLog')}}\n        </el-button>\n        <el-button v-show=\"detail.can_modify\" class=\"white-blue\" @click=\"onModifyClick\">\n          {{$t('commonModify')}}\n        </el-button>\n        <el-button v-show=\"detail.can_cancel\" class=\"white-red\" @click=\"onCancelClick\">\n          {{$t('commonCancelRequest')}}\n        </el-button>\n        <el-button\n          v-show=\"detail.can_approve\"\n          class=\"white-green\"\n          @click=\"onApproveClick\"\n          :loading=\"isApproving\"\n        >\n          {{$t('commonApproveAndNext')}}({{detail.pending_num}})\n        </el-button>\n        <el-button v-show=\"detail.can_approve\" class=\"white-red\" @click=\"onRejectClick\">\n          {{$t('commonRejectAndNext')}}({{detail.pending_num}})\n        </el-button>\n        <el-button v-show=\"detail.can_create_pr\" class=\"white-blue\" @click=\"onCreatePrClick\">\n          {{$t('commonCreatePr')}}\n        </el-button>\n        <el-button v-show=\"detail.can_release\" class=\"white-blue\" @click=\"onReleaseClick\">\n          {{$t('commonRelease')}}\n        </el-button>\n      </div>\n      <div slot=\"content\">\n        <div v-for=\"item in items\" :key= \"item.label\" class=\"item\">\n          <div class=\"label\">{{item.label}} :</div>\n          <div>{{item.value}}</div>\n        </div>\n      </div>\n    </layout-detail>\n    <action-log\n        type=\"action\"\n        :visible=\"isShowActionLogs\"\n        @close=\"isShowActionLogs = false\"\n        :params=\"actionLogParams\"\n    ></action-log>\n  </div>\n</template>\n\n<script>\nimport moment from 'moment';\nimport LayoutDetail from '@/components/layout/detail';\nimport ActionLog from '@/components/actionLogDialog/actionLog';\nimport {\n  getInboundReservationDetail,\n  postExportInboundReservation,\n  postApproveInboundReservation,\n  postCancelInboundReservation,\n  postReleaseInboundReservation,\n  postCheckInboundReservationRequestCancel,\n  postCheckInboundReservationRequestRelease\n} from '@/api/inboundReservation';\nimport {downloadBlobFile} from '@/utils/downloadFile';\nimport checkIRRemainQty from '@/mixins/checkIRRemainQty';\nconst DATE_FORMAT = 'YYYYMMDD';\n\nconst STATUS_NUMBER_TO_DETAIL = {\n  1: {key: 'commonStatusPendingApproval', color: 'blue'},\n  2: {key: 'commonStatusApproved', color: 'green'},\n  3: {key: 'commonStatusRejected', color: 'red'},\n  4: {key: 'commonStatusCancelled', color: 'grey'},\n  5: {key: 'commonStatusReleased', color: 'grey'}\n};\n\nexport default {\n  mixins: [checkIRRemainQty],\n  components: {\n    'layout-detail': LayoutDetail,\n    'action-log': ActionLog\n  },\n  data() {\n    return {\n      detail: {},\n      isExporting: false,\n      isApproving: false,\n      isShowActionLogs: false\n    };\n  },\n  mounted() {\n    this.fetchDetail();\n  },\n  methods: {\n    goBack() {\n      this.$router.go(-1);\n    },\n    async fetchDetail() {\n      try {\n        const {data = {}, retcode, info} = await getInboundReservationDetail({request_id: this.requestId});\n        if (retcode === 0) {\n          this.detail = data;\n          this.getWmsRemainingIbQuota(this.detail.whs_id, this.detail.inbound_date_str, this.detail.vendor_site_id);\n        } else {\n          this.$message({ type: 'error', message: info });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    async onExportClick() {\n      try {\n        this.isExporting = true;\n        const result = await postExportInboundReservation({request_id: this.requestId});\n        const date = moment().format(DATE_FORMAT);\n        const fileName = `${this.requestId}${date}.xls`;\n        downloadBlobFile(result, fileName);\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.isExporting = false;\n      }\n    },\n    onModifyClick() {\n      this.$router.push(`/admin/inbound/IBR/create?modifyId=${this.requestId}`);\n    },\n    async onApproveClick() {\n      try {\n        this.isApproving = true;\n        const params = {\n          request_id: this.requestId,\n          action: 2,\n          remark: ''\n        };\n        const {retcode, info, data} = await postApproveInboundReservation(params);\n        if (retcode !== 0) {\n          this.$message.error(info);\n        } else {\n          if (data.next_request_id) {\n            this.$router.push(`/admin/inbound/IBR/detail/${data.next_request_id}`);\n          }\n          this.fetchDetail();\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.isApproving = false;\n      }\n    },\n    rejectReasonValidator(value) {\n      if (!value) {\n        return this.$t('commonIsRequired', {target: this.$t('commonRejectReason')});\n      }\n      if (value.length > 500) {\n        return this.$t('commonLimitChars', {num: 500});\n      }\n      return true;\n    },\n    onRejectClick() {\n      this.$prompt(this.$t('commonRejectReason'), this.$t('commonReject'), {\n        confirmButtonText: this.$t('commonConfirm'),\n        cancelButtonText: this.$t('commonCancel'),\n        inputValidator: this.rejectReasonValidator\n      }).then(({value}) => {\n        this.onRejectConfirm(value);\n      });\n    },\n    async onRejectConfirm(reason) {\n      try {\n        const params = {\n          request_id: this.requestId,\n          action: 3,\n          remark: reason || ''\n        };\n        const {retcode, info, data} = await postApproveInboundReservation(params);\n        if (retcode !== 0) {\n          this.$message.error(info);\n        } else {\n          if (data.next_request_id) {\n            this.$router.push(`/admin/inbound/IBR/detail/${data.next_request_id}`);\n          }\n          this.fetchDetail();\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    async onCancelClick() {\n      try {\n        const {data} = await postCheckInboundReservationRequestCancel({request_ids: [this.requestId]});\n        if (!data.is_ok) {\n          this.$message.error(data.err_msg);\n          return;\n        }\n        this.$confirm(\n          this.$t('IRAreSureToCancel'),\n          this.$t('commonCancel'),\n          {\n            confirmButtonText: this.$t('commonConfirm'),\n            cancelButtonText: this.$t('commonNotNow')\n          }\n        ).then(() => {\n          this.onCancelConfirm();\n        });\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    async onCancelConfirm() {\n      try {\n        const {retcode, info} = await postCancelInboundReservation({request_ids: [this.requestId]});\n        if (retcode !== 0) {\n          this.$message.error(info);\n        } else {\n          this.$message.success(this.$t('commonCancelSuccessfully'));\n        }\n        this.fetchDetail();\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    async onReleaseClick() {\n      try {\n        const {data} = await postCheckInboundReservationRequestRelease({request_ids: [this.requestId]});\n        if (!data.is_ok) {\n          this.$message.error(data.err_msg);\n          return;\n        }\n        this.$confirm(\n          this.$t('IRAreSureToRelease'),\n          this.$t('commonRelease'),\n          {\n            confirmButtonText: this.$t('commonConfirm'),\n            cancelButtonText: this.$t('commonNotNow')\n          }\n        ).then(() => {\n          this.onReleaseConfirm();\n        });\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    async onReleaseConfirm() {\n      try {\n        const {retcode, info} = await postReleaseInboundReservation({request_ids: [this.requestId]});\n        if (retcode !== 0) {\n          this.$message.error(info);\n        } else {\n          this.$message.success(this.$t('commonReleaseSuccessfully'));\n        }\n        this.fetchDetail();\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    onCreatePrClick() {\n      const {whs_id, sbs_vendor_id, inbound_date_str, vendor_site_id } = this.detail;\n      const data = {\n        ibr_id: this.requestId,\n        warehouse: whs_id,\n        sbs_vendor_id: sbs_vendor_id,\n        expected_inbound_date: inbound_date_str,\n        vendor_site_id\n      };\n      this.$store.commit('SET_IBR_CREATE_PR_DATA', data);\n      this.$router.push('/admin/purchase/request/create');\n    },\n    onActionLogClick() {\n      this.isShowActionLogs = true;\n    }\n  },\n  computed: {\n    requestId() {\n      return this.$route.params.id || '';\n    },\n    isPendingApprove() {\n      return this.detail.request_status === 1;\n    },\n    actionLogParams() {\n      return {\n        log_type: 'inbound_reservations_request',\n        biz_type: 'INBOUND',\n        object_id: this.requestId,\n        show_type: 1\n      };\n    },\n    items() {\n      const {detail} = this;\n      const {shop_ids = [], shop_names = []} = detail;\n      const shops = shop_ids.map((id, index) => `${id}/${shop_names[index]}`).join('、');\n      return [\n        {label: this.$t('commonWarehouseID'), value: detail['whs_id']},\n        {label: this.$t('commonInboundDate'), value: detail['inbound_date_str']},\n        {label: this.$t('supplierSBSVendorID'), value: detail['sbs_vendor_id']},\n        {label: this.$t('commonVendorSiteID'), value: detail['vendor_site_id']},\n        {label: this.$t('commonSupplierName'), value: detail['supplier_name']},\n        {label: this.$t('IRReservedQty'), value: detail['reserved_qty']},\n        {label: this.$t('IRPMORKAM'), value: detail['pm_kam_email']},\n        {label: this.$t('commonReason'), value: detail['reason']},\n        {label: this.$t('budgetCategoryCluster'), value: (detail['category_cluster'] || []).join('、')},\n        {label: this.$t('IBRExpectedNumberOfSkus'), value: detail['sku_amount']},\n        {label: this.$t('commonShopIDOrName'), value: shops},\n        {label: this.$t('commonComment'), value: detail['comment']},\n        {label: this.$t('IBRReservationUtilization'), value: detail['utilization'] }\n      ];\n    },\n    statusInfo() {\n      const status = STATUS_NUMBER_TO_DETAIL[this.detail.request_status] || {};\n      return {\n        color: status.color || 'blue',\n        text: status.key ? this.$t(status.key) : ''\n      };\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.item {\n  display: flex;\n  font-size: 14px;\n  color: #333;\n\n  & + .item {\n    margin-top: 20px;\n  }\n}\n\n.label {\n  flex-shrink: 0;\n  margin-right: 18px;\n  width: 200px;\n  text-align: right;\n}\n\n.actions {\n  margin-top: -5px;\n\n  > * {\n    margin-top: 5px;\n  }\n}\n.sub-title {\n  margin: 4px 0;\n  font-size: 14px;\n  color: #666;\n  margin-left:32px;\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/inboundReservation/list.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/inboundReservation/massOperateDialog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/inboundReservation/utils.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/inventoryDashboard/components/content.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":3,"column":42,"nodeType":"VIdentifier","messageId":"deprecated","endLine":3,"endColumn":48},{"ruleId":"vue/require-valid-default-prop","severity":2,"message":"Type of the default value for 'form' prop must be a function.","line":81,"column":18,"nodeType":"ObjectExpression","endLine":81,"endColumn":20},{"ruleId":"vue/no-unused-components","severity":2,"message":"The \"ExportHistoryDialog\" component has been registered but not used.","line":87,"column":5,"nodeType":"Property","endLine":87,"endColumn":24}],"errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"inventory-dashboard-current-content\">\n    <el-form :model=\"searchForm\" @submit.native.prevent=\"onSearch\" >\n      <el-button v-show=\"false\" native-type=\"submit\"></el-button>\n      <el-row :gutter=\"16\">\n        <el-col v-for='item in searchSchema' :key='item.field' :span='item.width || 6' :offset='item.offset'>\n          <el-form-item :class='item.class || \"\"' :label=\"item.label\" class=\"search-input-area\">\n            <pms-form-item @input=\"modifyForm\" :renderData=\"{ schema: item, form: searchForm}\"></pms-form-item>\n          </el-form-item>\n        </el-col>\n      </el-row>\n      <el-row>\n        <el-form-item class='pms-ui right-action-btn'>\n          <div class='list-btn clear-btn' @click=\"onReset\">{{$t('purchaseRequest.clear')}}</div>\n          <div class='list-btn' @click='onSearch'>{{$t('purchaseRequest.search')}}</div>\n        </el-form-item>\n      </el-row>\n    </el-form>\n    <section class=\"inventory-dashboard-table-list-area pms-ui\" v-loading=\"loading\">\n      <inventory-table\n      :schemas=\"tableSchema\"\n      class=\"pms-ui\"\n      :dataList=\"dataList\"\n      @rowClick=\"rowClick\"\n      @export=\"onExport\"\n      @exportHistory=\"onExportHistory\"\n      ref=\"inventoryTable\"\n      >\n      </inventory-table>\n    </section>\n    <section class='pms-ui pagination-center'>\n        <el-pagination background layout=\"sizes, prev, pager, next\" :current-page='page.page_no' :total.sync=\"page.total\" :page-sizes='[10, 20, 50, 100]' :page-size=\"page.count\" @size-change=\"handleSizeChange\" @current-change=\"handleChangePage\"></el-pagination>\n      </section>\n  </div>\n</template>\n<script>\nimport pmsFormItem from '@/components/BaseItem/formItem';\nimport inventoryTable from './inventoryTable';\nimport ExportHistoryDialog from '@/components/ApproveList/exportHistoryDialog';\n  export default {\n    data() {\n      return {\n        checkedRows: [],\n        searchForm: {},\n        initialSearchForm: {}\n      };\n    },\n    props: {\n      searchSchema: {\n        type: Array,\n        required: true,\n        default: () => {\n          return [];\n        }\n      },\n      tableSchema: {\n        type: Array,\n        required: true,\n        default: () => {\n          return [];\n        }\n      },\n      page: {\n        type: Object,\n        default: () => {\n          return {};\n        }\n      },\n      loading: {\n        type: Boolean,\n        default: false\n      },\n      dataList: {\n        type: Array,\n        default: () => {\n          return [];\n        }\n      },\n      form: {\n        type: Object,\n        default: {}\n      }\n    },\n  components: {\n    pmsFormItem,\n    inventoryTable,\n    ExportHistoryDialog\n  },\n  methods: {\n    handleSizeChange(count) {\n      this.$emit('pageSizeChange', count);\n    },\n    handleChangePage(page_no) {\n      this.$emit('pageChange', page_no);\n    },\n    onExport(params) {\n      this.$emit('export', params);\n    },\n    onExportHistory() {\n      const params = {};\n      this.$emit('exportHistory', params);\n    },\n    modifyForm(schema, value) {\n      this.$set(this.searchForm, schema.field, value);\n      this.$emit('dataOnline', this.searchForm);\n    },\n    rowClick(params) {\n      this.$emit('rowClick', params);\n    },\n    onReset() {\n      this.$refs.inventoryTable.resetCheckedType();\n      this.searchForm = {...this.initialsearchForm};\n    },\n    onSearch(page_no) {\n      const params = {};\n      this.$emit('dataOnline', this.searchForm);\n      this.$emit('search', params);\n    }\n  },\n  created() {\n    this.initialsearchForm = {...this.form};\n    this.searchForm = this.form; // searchForm初始化\n  },\n  watch: {\n    form: {\n      immediate: true,\n      handler(val) {\n        this.searchForm = val;\n      }\n    }\n  }\n  };\n</script>\n<style lang=\"scss\">\n  .inventory-dashboard-table-list-area {\n    .select-page-dropdown {\n      padding: 0;\n      margin-left: -10px;\n      .el-button {\n        border: none;\n        background: unset;\n        padding: 0 0 0 10px;\n        &:nth-child(1) {\n          width: 20px;\n          padding-right: 16px;\n        }\n        &::before {\n          width: 0;\n        }\n      }\n    }\n  }\n</style>\n<style lang=\"scss\" scoped>\n.right-action-btn {\n  float: right;\n}\n.inventory-dashboard-current-content {\n\n  .pagination-center {\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n}\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/inventoryDashboard/components/inventoryTable.vue","messages":[{"ruleId":"vue/require-valid-default-prop","severity":2,"message":"Type of the default value for 'schemas' prop must be a function.","line":113,"column":16,"nodeType":"ArrayExpression","endLine":113,"endColumn":18},{"ruleId":"vue/require-valid-default-prop","severity":2,"message":"Type of the default value for 'dataList' prop must be a function.","line":117,"column":16,"nodeType":"ArrayExpression","endLine":117,"endColumn":18},{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":156,"column":20,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":156,"endColumn":21,"fix":{"range":[5193,5194],"text":""}}],"errorCount":3,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div class=\"pms-ui\">\n    <section class=\"inventory-dashboard-export-area\">\n      <div class='inventory-list-btn' @click=\"onExport\">{{$t('purchaseRequest.export')}}</div>\n      <div class=\"inventory-list-btn\" @click=\"onExportHistory\">{{$t('purchaseRequest.exportHistory')}}</div>\n    </section>\n    <el-checkbox-group v-model=\"checkedRows\" class=\"pms-ui\">\n      <el-table\n      :data=\"dataList\"\n      width=\"100%\"\n      @row-click=\"rowClick\"\n      >\n\n        <el-table-column column-key=\"action\" width=\"60px\" align=\"center\" fixed=\"left\">\n          <template #header>\n            <el-dropdown @click=\"resetCheckedType\" placement=\"bottom\" split-button trigger=\"click\" class=\"select-page-dropdown\" @command=\"changeSelectPageType\">\n              <span :class=\"`el-checkbox__input ${checkedStyle}`\">\n                <span :class=\"`el-checkbox__inner ${checkedStyle}`\"></span>\n              </span>\n              <el-dropdown-menu class=\"options-field-menu\" slot=\"dropdown\">\n                <el-dropdown-item command=\"current\">Current Page</el-dropdown-item>\n                <el-dropdown-item command=\"all\">All Pages</el-dropdown-item>\n              </el-dropdown-menu>\n            </el-dropdown>\n          </template>\n          <template slot-scope=\"scope\">\n            <el-checkbox :disabled=\"checkedType === 'all'\" :label=\"scope.row\">{{''}}</el-checkbox>\n          </template>\n        </el-table-column>\n        <el-table-column\n        v-for=\"schema in tableSchemas\"\n        :key=\"schema.field\"\n        :label=\"schema.label\"\n        :prop=\"schema.field\"\n        :fixed=\"schema.props && (schema.props.fixed || false)\"\n        :class-name=\"schema.props && (schema.props.class || '')\"\n        :align=\"schema.props && (schema.props.align || '')\"\n        min-width=\"85\"\n        >\n          <template slot-scope=\"scope\">\n            <pms-table-cell :renderData=\"getTableCellRender(schema, scope.row, scope.$index)\"></pms-table-cell>\n          </template>\n        </el-table-column>\n        <el-table-column\n        width=\"30\"\n        fixed=\"right\"\n        class-name=\"inventory-sku-table-setting-column\"\n        >\n          <template #header>\n            <el-popover\n            placement=\"bottom\"\n            width=\"200\"\n            trigger=\"hover\"\n            transition\n            popper-class=\"inventory-list-config-setting-area\"\n            :visible-arrow=\"false\"\n            >\n              <div class=\"pms-ui\">\n                <p>{{$t('commonMoreColumn') + '(' + schemas.length +')'}}</p>\n                <el-checkbox-group v-model=\"checkConfigList\" size=\"medium\">\n                  <el-checkbox :label=\"item.label\" v-for=\"item in tableConfigList\" :key=\"item.field\"></el-checkbox>\n                </el-checkbox-group>\n              </div>\n              <div slot=\"reference\" class=\"inventory-list-config-setting-button\"><svg-icon icon-class=\"rule\" ></svg-icon></div>\n            </el-popover>\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-checkbox-group>\n  </div>\n</template>\n<script>\nconst PMSTableCell = {\n  props: {\n    renderData: {\n      required: true\n    }\n  },\n  render(h) {\n    const { schema, row, index } = this.$props.renderData;\n    if (typeof schema.render === 'function') {\n      const data = schema.render(schema, row, index, h);\n      const renderElement = Array.isArray(data) ? data : ['span', data];\n      return h(...renderElement);\n    } else if (schema.type === 'enum') {\n      const options = schema.options || [];\n      const option =\n        options.find((item) => item.value === row[schema.field]) || {};\n      return h('span', option.label || '');\n    } else {\n      return h('span', row[schema.field]);\n    }\n  }\n};\nexport default {\n  components: {\n    'pms-table-cell': PMSTableCell\n  },\n  data() {\n    return {\n      checkedType: '',\n      checkedRows: [], // 选中的row\n      loading: false,\n      alwaySchemas: [], // fixed 常驻属性，不可隐藏\n      checkConfigList: [], // 选中显示的属性\n      tableConfigList: [] // 除去常驻属性后的所有属性\n    };\n  },\n  props: {\n    schemas: {\n      type: Array,\n      // required: true,\n      default: []\n    },\n    dataList: {\n      type: Array,\n      default: []\n    }\n  },\n  computed: {\n    tableSchemas() {\n      const res = this.schemas.filter(item => this.checkConfigList.includes(item.label));\n      return this.alwaySchemas.concat(res);\n    },\n    tableHiddenSchemas() {\n      return this.schemaCopy.filter(schema => (schema.props && schema.props.isHidden));\n    },\n    checkedStyle() {\n      return this.checkedType ? 'is-checked' : '';\n    }\n  },\n  methods: {\n    getTableCellRender(schema, row, index) {\n      return { schema, row, index };\n    },\n    changeSelectPageType(type) {\n      this.checkedType = type;\n      this.checkedRows = this.dataList;\n    },\n    resetCheckedType() {\n      this.checkedType = '';\n      this.checkedRows = [];\n    },\n    rowClick(row, column, event) {\n      this.$emit('rowClick', {row, column});\n    },\n    onExport() {\n      if (this.checkedRows.length === 0) {\n        return this.$message.error('Please select some lines first!');\n      }\n      this.$emit('export', {\n        type: this.checkedType,\n        rows: this.checkedRows\n      });\n    },\n    onExportHistory () {\n      this.$emit('exportHistory');\n    }\n  },\n  created() {\n    this.alwaySchemas = this.schemas.filter(item => (item.props && item.props.isHidden === false));\n    this.tableConfigList = this.schemas.filter(schema => !(schema.props && schema.props.isHidden === false));\n    const res = this.tableConfigList.filter(schema => schema.props === undefined || schema.props.isHidden === undefined);\n    res.forEach(element => { return this.checkConfigList.push(element.label); });\n  }\n};\n</script>\n<style lang=\"scss\">\n.pms-ui .el-table th.inventory-sku-table-setting-column {\n  background-color: #E8E9EC;\n  padding: 0;\n  .cell {\n    padding: 0;\n    text-align: center;\n  }\n  .inventory-list-config-setting-button {\n    padding:0;\n  }\n}\n.inventory-list-config-setting-area {\n  p {\n    line-height: 32px;\n    padding-left: 12px;\n    background-color: #E8E9EC;\n    border-bottom: 1px solid #ccc;\n  }\n  .el-checkbox-group {\n    max-height: 240px;\n    overflow-y: scroll;\n    overflow-x: hidden ;\n    padding-left:12px;\n    .el-checkbox{\n      line-height: 30px;\n      display: block;\n    }\n  }\n  padding: 0px 4px 4px 4px;\n  background-color: #E8E9EC;\n}\n</style>\n<style lang=\"scss\" scoped>\n.pms-ui{\n  .inventory-dashboard-export-area {\n    border-top: 2px solid #ECF0F4;\n    padding-top:18px;\n    margin-bottom: 16px;\n    display: flex;\n    .inventory-list-btn {\n      font-size:14px;\n      color: #3d6ed1;\n      padding: 5px 10px;\n      margin-right:12px;\n      border: 1px solid #3d6ed1;\n      border-radius: 2px;\n      background: transparent;\n      cursor: pointer;\n    }\n  }\n}\n\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/inventoryDashboard/currentInventory/B2C.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/inventoryDashboard/currentInventory/FBS.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/inventoryDashboard/currentInventory/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/inventoryDashboard/expirationStorage/index.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":5,"column":44,"nodeType":"VIdentifier","messageId":"deprecated","endLine":5,"endColumn":50}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-container class=\"sku-inventory-info\">\n    <el-main>\n      <div v-if=\"calculationTime\" class=\"calc-time\">{{`The statistics are valid as of ${calculationTime}！`}}</div>\n      <el-form :model=\"searchForm\" @submit.native.prevent=\"onSearch\">\n        <el-button v-show=\"false\" native-type=\"submit\"></el-button>\n        <el-row :gutter=\"16\">\n          <el-col v-for='item in searchSchema' :key='item.field' :span='item.width || 6' :offset='item.offset'>\n            <el-form-item :class='item.class || \"\"' :label=\"item.label\" class=\"search-input-area\">\n              <pms-form-item @input=\"modifyForm\" :renderData=\"{ schema: item, form: searchForm}\"></pms-form-item>\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-form-item v-if=\"canCreateRTS\" class='pms-ui left-action-btn'>\n            <div class='list-btn' @click='onCreateRTS'>{{$t('rtsInitiateRTS')}}</div>\n          </el-form-item>\n          <el-form-item class='pms-ui right-action-btn'>\n            <div class='list-btn' @click='onSearch'>{{$t('purchaseRequest.search')}}</div>\n            <div class='list-btn clear-btn' @click=\"onReset\">{{$t('purchaseRequest.clear')}}</div>\n            <div v-if=\"canExportSku\" class='list-btn' @click=\"onExport\">{{$t('purchaseRequest.export')}}</div>\n            <div class=\"export-histroy-btn list-btn\" @click=\"onExportHistory\">\n              <i class=\"el-icon-upload\"></i>\n              <span>{{$t('purchaseRequest.exportHistory')}}</span>\n            </div>\n          </el-form-item>\n        </el-row>\n      </el-form>\n      <el-checkbox-group v-model=\"checkedRows\" class=\"pms-ui\">\n        <list-view\n          :dataList=\"tableList\"\n          v-loading=\"loading\"\n          :config=\"{ showCheckBox: false, align: 'center' }\"\n          :tableSchema=\"tableSchema\"\n        >\n          <template slot=\"checkColumn\">\n            <el-table-column column-key=\"action\" width=\"60px\" align=\"center\">\n              <template slot-scope=\"scope\" slot=\"header\">\n                <el-dropdown @click=\"resetCheckedType\" placement=\"bottom\" split-button trigger=\"click\" class=\"select-page-dropdown\" @command=\"changeSelectPageType\">\n                  <span :class=\"`el-checkbox__input ${checkedType ? 'is-checked' : ''}`\">\n                    <span :class=\"`el-checkbox__inner ${checkedType ? 'is-checked' : ''}`\"></span>\n                  </span>\n                  <el-dropdown-menu class=\"options-field-menu\" slot=\"dropdown\">\n                    <el-dropdown-item command=\"current\">Current Page</el-dropdown-item>\n                    <el-dropdown-item command=\"all\">All Pages</el-dropdown-item>\n                  </el-dropdown-menu>\n                </el-dropdown>\n              </template>\n              <template slot-scope=\"scope\">\n                <el-checkbox :disabled=\"checkedType === 'all'\" :label=\"scope.row\">{{''}}</el-checkbox>\n              </template>\n            </el-table-column>\n          </template>\n        </list-view>\n      </el-checkbox-group>\n      <section class='pms-ui pagination-center'>\n        <el-pagination background layout=\"sizes, prev, pager, next\" :current-page='searchForm.page_no' :total.sync=\"total\" :page-sizes='[10, 20, 50, 100]' :page-size=\"searchForm.count\" @size-change='handleSizeChange' @current-change=\"handleChangePage\"></el-pagination>\n      </section>\n    </el-main>\n    <export-history-dialog :interval=\"15000\" :taskType=\"11\" :visible=\"showExportHistoryDialog\" @close=\"closeExportHistory\"></export-history-dialog>\n  </el-container>\n</template>\n\n<script>\nimport { getUnhealthySkuList, exportUnhealthySku, asyncExportUnhealthySku, createUnhealthySkuRTS } from '@/api/inventoryHealth';\nimport { getSupplierList } from '@/api/supplier';\nimport ListView from '@/components/ApproveList/list';\nimport pmsFormItem, { getSelectOptions } from '@/components/BaseItem/formItem';\nimport ExportHistoryDialog from '@/components/ApproveList/exportHistoryDialog';\nimport { formatParams, formatValue, getSomeKeys } from '@/utils/formatParams';\nimport { downloadBlobFile } from '@/utils/downloadFile';\nimport { hasPermission } from '@/utils/permission';\nimport { Permission, PurchaseTypeList, SkuExpiringStatusList, SkuAgingTagList } from '@/utils/constant';\nimport moment from 'moment';\n\nexport default {\n  data() {\n    return {\n      loading: false,\n      searchForm: {\n        page_no: 1,\n        cacheSupplier: '',\n        count: 10,\n        region: '',\n        purchase_type: '',\n        expiring_status: '',\n        aging_tag: ''\n      },\n      lastSearchForm: {},\n      moment,\n      total: 0,\n      tableList: [],\n      checkedRows: [],\n      checkedType: '',\n      calculationTime: '',\n      canExportSku: false,\n      canCreateRTS: false,\n      showExportHistoryDialog: false\n    };\n  },\n  components: {\n    ExportHistoryDialog,\n    ListView,\n    pmsFormItem\n  },\n  computed: {\n    countryList() {\n      return [...new Set([...this.$store.getters.countryList.map(item => item.country)])];\n    },\n    countrySelectList() {\n      return [{ label: 'All', value: '' }, ...this.countryList.map(item => ({ label: item, value: item }))];\n    },\n    warehouseSelectList() {\n      if (!this.searchForm.region) return [];\n      return this.$store.getters.countryList.filter(item => item.country === this.searchForm.region).map(item => ({\n        label: item.warehouse, value: item.warehouse\n      }));\n    },\n    searchSchema() {\n      return [\n        { type: 'input', field: 'sku_id', label: this.$t('purchaseOrder.skuID') },\n        { type: 'input', field: 'shop_id', label: this.$t('approvalFlow.shopID'),\n          on: {\n            change: this.changeShopId\n          }\n         },\n        { type: 'select', field: 'region', label: this.$t('purchaseRequest.region'),\n          getChildren: (h) => getSelectOptions(this.countrySelectList, h),\n          on: { change: this.regionChange }\n        },\n        {\n          field: 'cacheSupplier', type: 'autocomplete', label: this.$t('backMargin.vendorSiteID'),\n          on: { select: this.onSupplierSelect, blur: this.onSupplierBlur },\n          props: {\n            'trigger-on-focus': false,\n            'value-key': 'supplier_id',\n            'fetch-suggestions': (value, callback) => this.getSuppliers(value, callback)\n          }\n        },\n        { type: 'select', field: 'purchase_type', label: this.$t('purchaseRequest.purchaseType'),\n          getChildren: (h) => getSelectOptions(PurchaseTypeList, h),\n          on: { change: () => this.onSearch() }\n        },\n        { type: 'select', field: 'whs_id', label: this.$t('purchaseOrder.warehouse'),\n          getChildren: (h) => getSelectOptions(this.warehouseSelectList, h),\n          on: { change: () => this.onSearch() },\n          props: { placeholder: 'Please select a region', clearable: true }\n        },\n        { type: 'select', field: 'expiring_status', label: this.$t('rtsExpiringStatus'),\n          getChildren: (h) => getSelectOptions(SkuExpiringStatusList, h),\n          on: { change: () => this.onSearch() }\n        },\n        { type: 'select', field: 'aging_tag', label: this.$t('rtsAgingTag'),\n          getChildren: (h) => getSelectOptions(SkuAgingTagList, h),\n          on: { change: () => this.onSearch() }\n        },\n        { label: this.$t('rtsDaysInterval'), field: 'days_interval_left', render: this.getIntervalRender,\n          width: 6, labelWidth: '160px', defaultValue: null, hidden: !this.searchForm.expiring_status },\n        { label: '-', field: 'days_interval_right', render: this.getIntervalRender, defaultValue: null,\n          width: 4, class: 'compared-date-picker', labelWidth: '32px', hidden: !this.searchForm.expiring_status }\n      ].filter(item => !item.hidden);\n    },\n    tableSchema() {\n      return [\n        {\n          field: 'sku_id', label: this.$t('purchaseOrder.skuID'), render: (schema, row) => {\n            return ['div', { class: 'link-info', on: { click: () => this.onRowClick(row) }}, row[schema.field]];\n          }\n        },\n        { field: 'sku_name', label: this.$t('purchaseRequest.skuName') },\n        { field: 'shop_id', label: this.$t('approvalFlow.shopID') },\n        { field: 'supplier_id', label: this.$t('backMargin.vendorSiteID') },\n        { field: 'whs_id', label: this.$t('purchaseOrder.warehouse'), align: 'center' },\n        { field: 'region', label: this.$t('purchaseRequest.region'), align: 'center' },\n        { field: 'purchase_type', label: this.$t('purchaseRequest.purchaseType'), align: 'center' },\n        { field: 'wms_count', label: this.$t('rtsWMSCount'), toFixed: true },\n        { field: 'inventory_value', label: this.$t('skuMgt.inventoryValue'), toFixed: true },\n        { field: 'days_to_expiry', label: this.$t('rtsDaysToExpiry'), toFixed: true },\n        { field: 'days_in_whs', label: this.$t('rtsDaysInWH'), toFixed: true },\n        { field: 'expiring_status', label: this.$t('rtsExpiringStatus'), type: 'enum', options: SkuExpiringStatusList },\n        { field: 'aging_tag', label: this.$t('rtsAgingTag'), type: 'enum', options: SkuAgingTagList },\n        { field: 'expiration_date', label: this.$t('rtsExpirationDateActual') },\n        { field: 'shelf_life', label: this.$t('rtsSkuShelfLife') },\n        { field: 'batch_no', label: this.$t('rtsBatchNo') }\n      ];\n    }\n  },\n  methods: {\n    changeShopId(value) {\n      if (value) {\n        if (isNaN(parseInt(value))) {\n          this.$message.error(this.$t('FBSMustBePositiveNumber', { target: this.$t('commonShopID')}));\n          this.searchForm.shop_id = '';\n        } else {\n          this.searchForm.shop_id = parseInt(value);\n        }\n      }\n    },\n    handleSizeChange(count) {\n      this.searchForm.count = count;\n      this.onSearch(1);\n    },\n    handleChangePage(page_no) {\n      this.onSearch(page_no);\n    },\n    getIntervalRender(schema, form, h) {\n      return ['el-input-number', {\n        class: schema.class || '',\n        on: { input: (value) => { this.modifyForm(schema, value); } },\n        props: {\n          value: form[schema.field],\n          min: 0,\n          precision: 0,\n          controls: false\n        }\n      }];\n    },\n    onExportHistory() {\n      this.showExportHistoryDialog = true;\n    },\n    onCreateRTS() {\n      if (this.checkedRows.length < 1) return this.$message.error('Please select some lines first!');\n      const supplierSet = new Set(this.checkedRows.map(row => row.supplier_id));\n      if (supplierSet.size !== 1) {\n        return this.$message.error(`Initiating failed！You can't initiate one RTS for different Vendor Site ID`);\n      }\n      const warehouseSet = new Set(this.checkedRows.map(row => row.whs_id));\n      if (warehouseSet.size !== 1) {\n        return this.$message.error(`Initiating failed！You can't initiate one RTS for different Warehouse`);\n      }\n      const statusSet = new Set(this.checkedRows.map(row => row.expiring_status));\n      if (statusSet.size !== 1) {\n        return this.$message.error(`Initiating failed！You can't initiate one RTS for different Expiring Status`);\n      }\n      const searchParams = formatParams({\n        ...getSomeKeys(this.searchForm, ['sku_id', 'shop_id', 'supplier_id', 'whs_id',\n          'region', 'purchase_type', 'expiring_status', 'aging_tag', 'days_interval_left', 'days_interval_right'])\n      });\n      createUnhealthySkuRTS(this.checkedType === 'all' ? searchParams : { ...searchParams, ids: this.checkedRows.map(row => row.id) }).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.$message.success('Success');\n          this.$store.commit('setRTSDetail', resp.data || {});\n          this.$router.push(`/admin/inventory/rts/create?useDetail=1`);\n        }\n      }).catch(() => {\n        this.$message.error(`Server error, please retry and report to dev if retry doesn't work.`);\n      });\n    },\n    closeExportHistory() {\n      this.showExportHistoryDialog = false;\n    },\n    regionChange() {\n      this.searchForm.whs_id = '';\n      this.onSearch();\n    },\n    resetCheckedType() {\n      this.checkedType = '';\n      this.checkedRows = [];\n    },\n    changeSelectPageType(type) {\n      this.checkedType = type;\n      this.checkedRows = this.tableList;\n    },\n    getSuppliers(value, callback) {\n      const params = { pageno: 1, count: 20, key: `${value}`.trim(), approval_country: this.countryList.join('_') };\n      getSupplierList(params).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          const { list = [] } = resp.data || {};\n          if (Array.isArray(list) && list.length) {\n            return callback(list);\n          } else {\n            this.$message.error(`Supplier doesn't exist or supplier id is wrong.`);\n          }\n        }\n        callback([]);\n      }).catch(() => {\n        this.$message.error(`Server error, please retry and report to dev if retry doesn't work.`);\n        callback([]);\n      });\n    },\n    onSupplierSelect(item) {\n      this.searchForm.cacheSupplier = item.supplier_id;\n      this.searchForm.supplier_id = item.supplier_id;\n      this.onSearch();\n    },\n    onSupplierBlur() {\n      if (this.searchForm.cacheSupplier !== this.searchForm.supplier_id) {\n        this.searchForm.cacheSupplier = '';\n        this.searchForm.supplier_id = '';\n      }\n    },\n    modifyForm(schema, value) {\n      this.$set(this.searchForm, schema.field, value);\n    },\n    onRowClick(row) {\n      this.$store.commit('setActiveTab', { module: 'inventoryDashboard', tab: 'expiration' });\n      this.$store.commit('setSearchForm', {\n        module: 'inventoryDashboard',\n        form: this.lastSearchForm,\n        field: 'expiration'\n      });\n      this.$router.push(`/admin/skuMgt/detail/${row.sku_id}?originPath=inventory`);\n    },\n    getEmptyValue(key, value) {\n      if (Array.isArray(value)) return [];\n      return '';\n    },\n    onReset() {\n      this.resetCheckedType();\n      this.searchForm.supplier_id = '';\n      this.searchSchema.forEach(schema => {\n        const key = schema.field;\n        this.$set(this.searchForm, key, schema.defaultValue || this.getEmptyValue(key, this.searchForm[key]));\n      });\n    },\n    onAsyncExport() {\n      asyncExportUnhealthySku(formatParams({\n        ...getSomeKeys(this.searchForm, ['sku_id', 'shop_id', 'supplier_id', 'whs_id',\n          'region', 'purchase_type', 'expiring_status', 'aging_tag', 'days_interval_left', 'days_interval_right'])\n      })).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.$message.success('Success, please find the result in “Export History”!');\n        }\n      }).catch(() => {\n        this.$message.error(`Server error, please retry and report to dev if retry doesn't work.`);\n      });\n    },\n    onExport() {\n      if (this.checkedRows.length < 1) return this.$message.error('Please select some lines first!');\n      if (this.checkedType === 'all') {\n        return this.onAsyncExport();\n      }\n      exportUnhealthySku({ ids: this.checkedRows.map(row => row.id) }).then(resp => {\n        if (resp.type === 'application/json') {\n          const reader = new FileReader();\n          reader.onloadend = () => {\n            const result = JSON.parse(reader.result);\n            if (result.retcode !== 0) {\n              this.$message.error(result.info);\n            }\n          };\n          reader.readAsText(resp);\n        } else {\n          downloadBlobFile(resp, `SKUInventory${moment().format('YYYYMMDDHHmmss')}.xls`);\n        }\n      }).catch(() => { this.$message.error('Failed'); });\n    },\n    formatValue(value) {\n      if (typeof value === 'string') {\n        return value || '-';\n      } else if (typeof value === 'number') {\n        return formatValue(value.toFixed(2));\n      } else {\n        return '/';\n      }\n    },\n    onSearch(page_no) {\n      if (typeof page_no === 'number') {\n        this.searchForm.page_no = page_no;\n      } else {\n        this.searchForm.page_no = 1;\n      }\n      const params = formatParams(this.searchForm);\n      delete params.cacheSupplier;\n      this.resetCheckedType();\n      this.loading = true;\n      getUnhealthySkuList(params).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.total = resp.data.total || 0;\n          this.calculationTime = resp.data.calculation_time || '';\n          this.tableList = (resp.data.unhealthy_sku_list || []).map(item => {\n            const rowData = item;\n            this.tableSchema.filter(schema => !!schema.toFixed).forEach(schema => {\n              rowData[schema.prop] = this.formatValue(item[schema.prop]);\n            });\n            return rowData;\n          });\n          this.lastSearchForm = this.searchForm;\n        }\n        this.loading = false;\n      }).catch(() => { this.loading = false; });\n    }\n  },\n  created() {\n    this.canExportSku = true;\n    this.canCreateRTS = hasPermission(Permission.EXPIRATION_INITIATE_RTS);\n  },\n  props: {\n    form: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  watch: {\n    '$props.form': {\n      handler(form) {\n        if (form.activeTab === 'expiration') {\n          this.searchForm = { ...this.searchForm, ...form };\n          this.$delete(this.searchForm, 'activeTab');\n        }\n        this.onSearch(this.searchForm.page_no || 1);\n      },\n      immediate: true\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.calc-time {\n  margin-bottom: 20px;\n  font-size: 14px;\n  color: #CCCCCC;\n}\n.left-action-btn {\n  float: left;\n  .list-btn {\n    width: 120px;\n    background-color: #008001;\n  }\n}\n.right-action-btn {\n  float: right;\n}\n.pagination-center {\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n}\n.select-page-dropdown {\n  padding: 0;\n  margin-left: -10px;\n}\n.el-date-editor, .el-input-number {\n  width: 100%;\n  text-align: left;\n}\n.compared-date-picker {\n  max-width: calc(166.67% - 160px + 21.33px); // basic span-6, compared span-4\n}\n.el-autocomplete {\n  width: 100%;\n}\n.export-histroy-btn {\n  width: 120px;\n}\n</style>\n\n<style lang=\"scss\">\n.sku-inventory-info {\n  .link-info {\n    text-decoration: underline;\n  }\n  .el-select__tags {\n    .el-tag {\n      max-width: calc(100% - 80px);\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n  }\n  .color-tag {\n    margin: 0 auto;\n    width: 30px;\n    height: 30px;\n    border: 1px solid #ddd;\n  }\n  &.select-health {\n    .el-select-dropdown__item {\n      margin: 10px 0;\n    }\n    .color-tag {\n      margin: 0;\n    }\n  }\n  .link-info {\n    text-decoration: underline;\n  }\n  .select-page-dropdown {\n    .el-button {\n      border: none;\n      background: unset;\n      padding: 0 0 0 10px;\n      &:nth-child(1) {\n        width: 20px;\n        padding-right: 16px;\n      }\n      &::before {\n        width: 0;\n      }\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/inventoryDashboard/index.vue","messages":[{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":51,"column":19,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":51,"endColumn":20,"fix":{"range":[1884,1885],"text":""}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div class=\"inventory-dashbord-container\">\n      <el-tabs class=\"inventory-dashboard-tabs\" v-model=\"activeTab\" @tab-click=\"handletabClick\">\n        <el-tab-pane\n          tab-position=\"bottom\"\n          v-for=\"item in tabList\"\n          :key=\"item.key\"\n          :label=\"$t(item.label)\"\n          :name=\"item.key\"\n          :value=\"item.key\"\n        >\n        </el-tab-pane>\n      </el-tabs>\n      <inventory-health :form=\"searchForm\" v-if=\"activeTab === 'health'\"></inventory-health>\n      <expiration-storage :form=\"searchForm\" v-if=\"activeTab === 'expiration'\"> </expiration-storage>\n      <current-inventory :form=\"searchForm\" v-if=\"activeTab === 'current'\"></current-inventory>\n      <promotion-reserved :form=\"searchForm\" v-if=\"activeTab === 'promotion'\"></promotion-reserved>\n  </div>\n</template>\n<script>\nimport inventoryHealth from './inventoryHealth';\nimport currentInventory from './currentInventory';\nimport expirationStorage from './expirationStorage';\nimport promotionReserved from './promotionReserved';\nimport { hasPermission } from '@/utils/permission';\nimport { Permission } from '@/utils/constant';\nconst moduleName = 'inventoryDashboard';\nexport default {\n  data() {\n    return {\n      activeTab: 'health',\n      searchForm: {},\n      form: {}\n    };\n  },\n  computed: {\n    tabList() {\n      const list = [];\n      if (hasPermission(Permission['INVENTORY_DASHBOARD_HEALTH'])) {\n        list.push({label: 'inventoryDashboardInventoryHealth', key: 'health'});\n      }\n      list.push({label: 'inventoryDashboardCurrentInventory', key: 'current'});\n      if (hasPermission(Permission['EXPIRATION_AND_STORAGE'])) {\n        list.push({label: 'inventoryDashboardExpirationStorage', key: 'expiration'});\n      }\n      list.push({label: 'inventoryDashboardPromotionReserved', key: 'promotion'});\n      return list;\n      }\n  },\n  methods: {\n    handletabClick (e) {\n      if (this.$route.query.activeTab && this.$route.query.activeTab === e.name) {\n        return;\n      } else {\n      this.$router.replace({ name: 'inventoryDashboard', query: { activeTab: e.name }});\n      this.clearSearchForm();\n      }\n    },\n    clearSearchForm() {\n      this.searchForm = {};\n      this.$store.commit('setActiveTab', { module: moduleName, activeTab: '' });\n      this.$store.commit('setSearchForm', {\n        module: moduleName,\n        value: null,\n        field: this.activeTab\n      });\n    }\n  },\n  components: {\n    inventoryHealth,\n    expirationStorage,\n    currentInventory,\n    promotionReserved\n  },\n  created() {\n    let activeTab = this.$route.query.activeTab;\n    if (activeTab) {\n      const isExist = this.tabList.some(item => item.key === activeTab);\n      activeTab = isExist ? activeTab : '';\n    }\n    if (this.$route.query.useParams) {\n      const searchForm = this.$store.getters.searchForm[moduleName] || {};\n      activeTab = searchForm.activeTab;\n      if (searchForm[activeTab]) {\n        this.searchForm = searchForm[activeTab];\n        this.searchForm.activeTab = activeTab;\n      }\n    } else {\n      this.clearSearchForm();\n    }\n    if (!activeTab) {\n      activeTab = this.tabList[0].key;\n      this.$router.replace(`/admin/inventory/inventoryDashboard?activeTab=${activeTab}`);\n    }\n    this.activeTab = activeTab;\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.inventory-dashboard-tabs {\n  padding: 16px 0 10px;\n}\n\n</style>\n<style lang=\"scss\">\n.inventory-dashbord-container {\n  padding-bottom: 20px;\n  .inventory-dashboard-tabs .el-tabs__item {\n    display: inline-block;\n    height: 35px;\n    margin-bottom: 5px;\n    border-bottom: 2px solid transparent;\n    line-height: 35px;\n    font-size: 18px;\n    font-weight: 400;\n    color: #575757;\n  }\n  .inventory-dashboard-tabs .el-tabs__item.is-active {\n    color: #3d6ed1;\n  }\n  .inventory-dashboard-tabs .el-tabs__item.is-top:nth-child(2) {\n      padding-left: 20px;\n  }\n  .inventory-dashboard-tabs .el-tabs__nav-prev {\n      left: 5px;\n      line-height: 40px;\n  }\n  .inventory-dashboard-tabs .el-tabs__nav-next {\n      right: 5px;\n      line-height: 40px;\n  }\n  .inventory-sku-text-underline {\n    text-decoration: underline;\n  }\n  .el-main {\n    padding: 0 16px;\n  }\n  .search-input-area.el-form-item--medium {\n      display: flex;\n      border:1px solid #E2E6EC;\n      overflow: hidden;\n      border-radius:4px;\n      margin-bottom: 16px;\n      & * {\n        height: 32px;\n        line-height: 32px;\n      }\n      .el-form-item__label{\n        color: #333333;\n        line-height: 32px;\n        text-align: center;\n        flex-grow: 0;\n        flex-shrink: 0;\n        padding: 0 8px;\n        background-color:#FAFBFD;\n        border-right:1px solid #E2E6EC;\n      }\n      .el-form-item__content{\n        flex-grow: 1;\n        flex-shrink: 1;\n        input::-webkit-outer-spin-button,input::-webkit-inner-spin-button {\n          -webkit-appearance: none;\n          }\n        input[type=\"number\"]{\n          -moz-appearance: textfield;\n          }\n      }\n      .el-input--medium{\n        .el-input__inner{\n          border:none;\n        }\n      }\n      .range-input-item{\n        display: flex;\n        .el-input--medium{\n          flex-grow: 1;\n        }\n        &>span{\n          flex-grow: 0;\n          color:#ECF0F4;\n          border-left:1px solid #ECF0F4;\n          border-right:1px solid #ECF0F4;\n          padding:0 1px;\n        }\n      }\n      .el-tag--info {\n        line-height: 28px;\n        height: 28px;\n        .el-tag__close.el-icon-close {\n          line-height: 14px;\n          height: 14px;\n          width: 14px;\n          margin-bottom: 3px;\n        }\n      }\n    }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/inventoryDashboard/inventoryHealth/components/historyDialog.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"exportHistory\" is not PascalCase.","line":35,"column":9,"nodeType":"Literal","endLine":35,"endColumn":24,"fix":{"range":[857,870],"text":"ExportHistory"}},{"ruleId":"vue/no-deprecated-props-default-this","severity":2,"message":"Props default value factory functions no longer have access to `this`.","line":78,"column":20,"nodeType":"ThisExpression","messageId":"deprecated","endLine":78,"endColumn":24},{"ruleId":"vue/no-deprecated-props-default-this","severity":2,"message":"Props default value factory functions no longer have access to `this`.","line":83,"column":20,"nodeType":"ThisExpression","messageId":"deprecated","endLine":83,"endColumn":24},{"ruleId":"vue/no-deprecated-props-default-this","severity":2,"message":"Props default value factory functions no longer have access to `this`.","line":87,"column":20,"nodeType":"ThisExpression","messageId":"deprecated","endLine":87,"endColumn":24},{"ruleId":"vue/no-deprecated-props-default-this","severity":2,"message":"Props default value factory functions no longer have access to `this`.","line":99,"column":20,"nodeType":"ThisExpression","messageId":"deprecated","endLine":99,"endColumn":24},{"ruleId":"vue/no-deprecated-props-default-this","severity":2,"message":"Props default value factory functions no longer have access to `this`.","line":113,"column":17,"nodeType":"ThisExpression","messageId":"deprecated","endLine":113,"endColumn":21}],"errorCount":6,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <el-dialog\n    @close=\"closeDialog\"\n    :visible.sync=\"historyVisible\"\n    :title=\"title\"\n  >\n    <list-view :dataList=\"dataList\" v-loading=\"loading\" :config=\"tableConfig\" :tableSchema=\"tableSchema\">\n    </list-view>\n    <section v-if=\"historyVisible\" class=\"pagination-center\">\n      <el-pagination\n        background\n        layout=\"sizes, prev, pager, next\"\n        :current-page=\"pager.page_no\"\n        :total.sync=\"pager.total\"\n        :page-sizes=\"[10, 20, 50, 100]\"\n        :page-size=\"pager.count\"\n        @size-change=\"handlePageSizeChange\"\n        @current-change=\"handlePageNumChange\"\n      ></el-pagination>\n    </section>\n  </el-dialog>\n</template>\n\n<script>\nimport moment from 'moment';\nimport ListView from '@/components/ApproveList/list';\n\nconst initPager = {\n  total: 0,\n  count: 10,\n  page_no: 1\n};\n\nexport default {\n  name: 'exportHistory',\n  components: {\n    ListView\n  },\n  data() {\n    return {\n      historyVisible: false,\n      pager: {...initPager},\n      loading: false,\n      dataList: []\n    };\n  },\n  props: {\n    visible: {\n      type: Boolean, // 是否可见\n      default: false\n    },\n    title: { // 如果有值，则优先取传入值\n      default: ''\n    },\n    fetchMethod: {\n      type: Function,\n      required: true\n    },\n    tableConfig: {\n      default() {\n        return { align: 'center', border: false };\n      },\n      required: false\n    },\n    taskType: {\n      type: Number,\n      required: true\n    },\n    currentRegion: {\n      type: String,\n      required: true\n    },\n    tableSchema: {\n      type: Array,\n      default() {\n        return [\n          {\n            label: this.$t('purchaseOrder.createTime'),\n            field: 'ctime',\n            render: (schema, row) => (row.ctime ? moment(row.ctime * 1000).format('YYYY-MM-DD HH:mm') : '/')\n          },\n          {\n            label: this.$t('userRole.userList.username'),\n            field: 'operator'\n          },\n          {\n            label: this.$t('userRole.userList.status'),\n            field: 'status',\n            type: 'enum',\n            options: [\n              { label: 'Waiting', value: 0 },\n              { label: 'Processing', value: 1 },\n              { label: 'Success', value: 2 },\n              { label: 'Fail', value: 3 }\n            ]\n          },\n          {\n            columnKey: 'action',\n            label: this.$t('purchaseRequest.action'),\n            width: '180px',\n            render: (schema, row) => {\n              const { result_link = '' } = row;\n              if (!result_link) {\n                return null;\n              }\n              return [\n                'el-button',\n                {\n                  class: 'action-btn',\n                  props: { type: 'default', size: 'mini' },\n                  on: { click: () => window.open(result_link) }\n                },\n                this.$t('purchaseRequest.download')\n              ];\n            }\n          }\n        ];\n      }\n    }\n  },\n  methods: {\n    handlePageSizeChange(count) {\n      this.pager.count = count;\n      this.fetchHistory({ count, page_no: this.pager.page_no, task_type: this.taskType });\n    },\n    handlePageNumChange(page_no) {\n      this.pager.page_no = page_no;\n      this.fetchHistory({ page_no, count: this.pager.count, task_type: this.taskType });\n    },\n    closeDialog() {\n      this.$emit('close');\n    },\n    async fetchHistory(params, headers = { 'X-Region': this.currentRegion }) {\n      try {\n        const { data: { task_history_list = [], total }, retcode, message } = await this.fetchMethod(params, headers);\n        this.dataList = task_history_list || [];\n        this.pager.total = total || 0;\n        if (retcode !== 0) {\n          this.$message.error(`Fetch History ${message}`);\n        }\n      } catch (e) {\n        this.dataList = [];\n        this.pager = {...initPager};\n        this.$message.error(`Fetch History ${e}`);\n      }\n    }\n  },\n  watch: {\n    '$props.visible': {\n      handler(currVisible, prevVisible) {\n        this.historyVisible = currVisible;\n        if (currVisible) {\n          const { count, page_no } = this.pager;\n          this.fetchHistory({ task_type: this.taskType, count, page_no });\n        } else {\n          this.pager = {...initPager};\n        }\n      },\n      immediate: true\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.pagination-center {\n  margin-top: 20px;\n  display: flex;\n  justify-content: center;\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/inventoryDashboard/inventoryHealth/constant.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/inventoryDashboard/inventoryHealth/detail.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":4,"column":44,"nodeType":"VIdentifier","messageId":"deprecated","endLine":4,"endColumn":50}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-container class=\"sku-inventory-health-container\">\n    <el-main>\n      <el-form :model=\"searchForm\" @submit.native.prevent=\"onSearch\" class=\"sku-inventory-health-form\">\n        <el-button v-show=\"false\" native-type=\"submit\"></el-button>\n        <el-row :gutter=\"16\">\n          <el-col v-for='item in searchSchema' :key='item.field' :span='item.width || 6' :offset='item.offset'>\n            <el-form-item :class='item.class || \"\"' :label=\"item.label\" class='search-input-area'>\n              <pms-form-item @input=\"modifyForm\" :renderData=\"{ schema: item, form: searchForm}\"></pms-form-item>\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col>\n          <el-form-item class='pms-ui right-action-btn'>\n            <div class='list-btn' @click='onSearch'>{{$t('purchaseRequest.search')}}</div>\n            <div class='list-btn clear-btn' @click=\"onReset\">{{$t('purchaseRequest.clear')}}</div>\n            <div v-if=\"canExportSku\" class='list-btn' @click=\"onExport\">{{$t('purchaseRequest.export')}}</div>\n            <div class=\"export-histroy-btn list-btn\" @click=\"onExportHistory\">\n              <i class=\"el-icon-upload\"></i>\n              <span>{{$t('purchaseRequest.exportHistory')}}</span>\n            </div>\n          </el-form-item>\n          </el-col>\n        </el-row>\n      </el-form>\n      <el-checkbox-group v-model=\"checkedRows\" class=\"pms-ui\">\n        <list-view\n          :dataList=\"tableList\"\n          v-loading=\"loading\"\n          :config=\"{ showCheckBox: false, align: 'center' }\"\n          :tableSchema=\"tableSchema\"\n        >\n          <template slot=\"checkColumn\">\n            <el-table-column column-key=\"action\" width=\"60px\" align=\"center\">\n              <template slot-scope=\"scope\" slot=\"header\">\n                <el-dropdown @click=\"resetCheckedType\" placement=\"bottom\" split-button trigger=\"click\" class=\"select-page-dropdown\" @command=\"changeSelectPageType\">\n                  <span :class=\"`el-checkbox__input ${checkedType ? 'is-checked' : ''}`\">\n                    <span :class=\"`el-checkbox__inner ${checkedType ? 'is-checked' : ''}`\"></span>\n                  </span>\n                  <el-dropdown-menu class=\"options-field-menu\" slot=\"dropdown\">\n                    <el-dropdown-item command=\"current\">Current Page</el-dropdown-item>\n                    <el-dropdown-item command=\"all\">All Pages</el-dropdown-item>\n                  </el-dropdown-menu>\n                </el-dropdown>\n              </template>\n              <template slot-scope=\"scope\">\n                <el-checkbox :disabled=\"checkedType === 'all'\" :label=\"scope.row\">{{''}}</el-checkbox>\n              </template>\n            </el-table-column>\n          </template>\n        </list-view>\n      </el-checkbox-group>\n      <section class=' pms-ui pagination-center'>\n        <el-pagination background layout=\"sizes, prev, pager, next\" :current-page='searchForm.page_no' :total.sync=\"total\" :page-sizes='[10, 20, 50, 100]' :page-size=\"searchForm.count\" @size-change='handleSizeChange' @current-change=\"handleChangePage\"></el-pagination>\n      </section>\n    </el-main>\n    <export-history-dialog :interval=\"15000\" :taskType=\"9\" :visible=\"showExportHistoryDialog\" @close=\"closeExportHistory\"\n      :isOutsideData=\"true\" :outsideData=\"historyList\" :outsideTotal=\"historyTotal\" @getHistoryData=\"fetchHistoryList\"\n      :outsideLoding=\"historyLoading\" :customDownloadAction=\"true\" @download=\"downloadExportHistory\"></export-history-dialog>\n  </el-container>\n</template>\n\n<script>\nimport { getSKUInventoryList, exportSkuInventory, exportAllPagesSkuInventory, getISCExportHistory } from '@/api/inventoryHealth';\nimport { getSupplierList } from '@/api/supplier';\nimport { getCategoryList } from '@/api/userRole';\nimport ListView from '@/components/ApproveList/list';\nimport PMSFormItem, { getSelectOptions } from '@/components/BaseItem/formItem';\nimport ExportHistoryDialog from '@/components/ApproveList/exportHistoryDialog';\nimport { formatParams, formatValue, getSomeKeys } from '@/utils/formatParams';\nimport { downloadBlobFile } from '@/utils/downloadFile';\nimport { healthLevelValueList } from '@/utils/constant';\nimport { getCatClusterCode } from '@/api/budgetLine';\nimport moment from 'moment';\nconst dimensionMap = {1: 'shop_id', 2: 'supplier_id', 3: 'whs_id', 4: 'category_ids'};\nconst PurchaseTypeList = [\n  { value: '', label: 'All' },\n  { value: 2, label: 'Consignment' },\n  { value: 1, label: 'Outright' }\n];\n\nexport default {\n  data() {\n    return {\n      loading: false,\n      searchForm: {\n        page_no: 1,\n        cacheSupplier: '',\n        count: 10,\n        country: 'ID',\n        date: moment().subtract(1, 'days').format('YYYY-MM-DD'),\n        category_ids: [],\n        health_tag: '',\n        whs_id: '',\n        category_id: '',\n        purchase_type: '',\n        category_cluster: []\n      },\n      lastSearchForm: {},\n      total: 0,\n      tableList: [],\n      checkedRows: [],\n      checkedType: '',\n      categoryList: [],\n      canExportSku: false,\n      showExportHistoryDialog: false,\n      historyList: [],\n      historyTotal: 0,\n      historyLoading: false,\n      categoryClusterList: []\n    };\n  },\n  components: {\n    ExportHistoryDialog,\n    ListView,\n    'pms-form-item': PMSFormItem\n  },\n  computed: {\n    countryList() {\n      return [...new Set([...this.$store.getters.countryList.map(item => item.country)])];\n    },\n    countrySelectList() {\n      return [...this.countryList.map(item => ({ label: item, value: item }))];\n    },\n    warehouseList() {\n      const list = this.$store.getters.warehouseList\n      .filter(item => item.country === this.searchForm.country || this.searchForm.country === '')\n        .map(item => ({ label: item.warehouse, value: item.warehouse }));\n      return [{ label: 'All', value: '' }, ...list];\n    },\n    searchSchema() {\n      return [\n        { type: 'input', field: 'sku_id', label: `${this.$t('purchaseRequest.skuID')}/${this.$t('skuMgt.itemId')}` },\n        { type: 'input', field: 'shop_id', label: this.$t('approvalFlow.shopID') },\n        { type: 'select', field: 'country', label: this.$t('purchaseRequest.region'),\n          getChildren: (h) => getSelectOptions(this.countrySelectList, h),\n          on: {\n            change: this.regionChange\n          }\n        },\n        {\n          field: 'cacheSupplier', type: 'autocomplete', label: this.$t('backMargin.vendorSiteID'),\n          on: { select: this.onSupplierSelect, blur: this.onSupplierBlur },\n          props: {\n            'trigger-on-focus': false,\n            'value-key': 'supplier_id',\n            'fetch-suggestions': (value, callback) => this.getSuppliers(value, callback)\n          }\n        },\n        {\n          field: 'date', type: 'date-picker', label: this.$t('approvalFlow.date'), on: { change: this.resetOnSearch },\n          props: {\n            editable: false, clearable: false, 'value-format': 'yyyy-MM-dd',\n            'picker-options': {\n              disabledDate: (time) => time > moment().subtract(1, 'days') || time < moment().subtract(94, 'days')\n            }\n          }\n        },\n        {\n          field: 'category_ids', label: this.$t('userRole.userList.categoryName'), type: 'select', on: { change: this.resetOnSearch },\n          getChildren: (h) => getSelectOptions(this.categoryList.map(item => ({ label: item.display_name, value: item.catid })), h),\n          props: { multiple: true, 'collapse-tags': true, placeholder: 'please select a region first' }\n        },\n        { type: 'select', labelWidth: '160px', field: 'health_tag', props: { 'popper-class': 'sku-inventory-info select-health' },\n          label: this.$t('approvalFlow.inventoryHealthTag'), on: { change: this.resetOnSearch },\n          getChildren: (h) => [...getSelectOptions([{ label: 'All', value: '' }], h), ...healthLevelValueList.map(item => {\n            return h('el-option', { props: { value: item.label, label: '' }}, [\n              h('div', { class: 'color-tag', style: { 'background-color': item.color }}, null)\n            ]);\n          })]\n        },\n        {\n          field: 'whs_id', type: 'select', label: this.$t('commonWhsID'),\n          getChildren: (h) => getSelectOptions(this.warehouseList, h),\n          on: { change: this.resetOnSearch }\n        },\n        { field: 'category_id', type: 'input', label: this.$t('commonCategoryID') },\n        {\n          field: 'category_cluster', label: this.$t('commonCategoryCluster'), type: 'select', on: { change: this.resetOnSearch },\n          getChildren: (h) => getSelectOptions(this.categoryClusterList, h),\n          props: { multiple: true, 'collapse-tags': true, placeholder: 'please select a region first' }\n        },\n        {\n          field: 'purchase_type', type: 'select', label: this.$t('commonPurchaseType'),\n          getChildren: (h) => getSelectOptions(PurchaseTypeList, h),\n          on: { change: this.resetOnSearch }\n        }\n      ];\n    },\n    tableSchema() {\n      return [\n        {\n          field: 'sku_id', label: this.$t('purchaseOrder.skuID'), width: 110, render: (schema, row) => {\n            return ['div', { class: 'link-info', on: { click: () => this.onRowClick(row) }}, row[schema.field]];\n          }\n        },\n        { field: 'sku_name', label: this.$t('purchaseRequest.skuName'), width: 150 },\n        { field: 'shop_id', label: this.$t('approvalFlow.shopID') },\n        { field: 'supplier_id', label: this.$t('backMargin.vendorSiteID') },\n        { field: 'whs_id', label: this.$t('skuMgt.whsID'), toFixed: true, align: 'center' },\n        { field: 'region', label: this.$t('purchaseRequest.region'), align: 'center' },\n        { field: 'available_inventory', label: this.$t('skuMgt.availableInventory'), toFixed: true },\n        { field: 'inventory_value', label: this.$t('skuMgt.inventoryValue'), toFixed: true },\n        { field: 'avg_daily_sold_qty', label: this.$t('averageDailySoldQty')},\n        { field: 'expected_sales_coverage', label: this.$t('skuMgt.expectedSalesCoverage'), toFixed: true },\n        { field: 'weight_avg_age', label: this.$t('skuMgt.weightedAverageSkuAge'), toFixed: true },\n        { field: 'simple_avg_age', label: this.$t('skuMgt.simpleAverageSkuAge'), toFixed: true },\n        { field: 'oldest_age', label: this.$t('skuMgt.oldestSkuAge'), toFixed: true },\n        { field: 'category_cluster', label: this.$t('commonCategoryCluster')},\n        { field: 'category_id', label: this.$t('commonCategoryID')},\n        { field: 'purchase_type', label: this.$t('commonPurchaseType')},\n        {\n          field: 'health_tag', label: this.$t('skuMgt.inventoryHealthTag'), render: (schema, row) => {\n            return ['div', { class: 'color-tag', style: { 'background-color': row.health_tag }}, ''];\n          }\n        }\n      ];\n    }\n  },\n  methods: {\n    handleSizeChange(count) {\n      this.searchForm.count = count;\n      this.onSearch(1);\n    },\n    handleChangePage(page_no) {\n      this.onSearch(page_no);\n    },\n    resetOnSearch() {\n      this.onSearch(1);\n    },\n    onExportHistory() {\n      this.showExportHistoryDialog = true;\n    },\n    closeExportHistory() {\n      this.showExportHistoryDialog = false;\n    },\n    async fetchHistoryList(params) {\n      try {\n        this.historyLoading = true;\n        const { data: { task_history_list = [], total = 0 }, header: { message = '', retcode = 0 }} = await getISCExportHistory({...params, task_type: 9}, { 'X-Region': this.searchForm.country });\n        if (retcode !== 0) {\n          this.$message.error(`Fetch History ${message}`);\n          this.historyList = [];\n          return;\n        }\n        this.historyList = task_history_list || [];\n        this.historyTotal = total;\n      } catch (error) {\n        this.historyList = [];\n        this.$message.error(`Fetch History ${error}`);\n      } finally {\n        this.historyLoading = false;\n      }\n    },\n    downloadExportHistory(row) {\n     if (row.result_link) {\n       window.open(row.result_link);\n     } else {\n        this.$message.error(`result link error`);\n     }\n    },\n    getCategoryClusterList() {\n      getCatClusterCode({ country: this.searchForm.country || '' }).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.categoryClusterList = (resp.data.cat_cluster || []).map(item => ({ label: item.cluster_code, value: item.cluster_code }));\n        }\n      });\n    },\n    regionChange(region) {\n      this.searchForm.category_ids = [];\n      this.searchForm.whs_id = '';\n      this.searchForm.category_cluster = [];\n      if (region) {\n        getCategoryList({ catids: 0, country: region, cs_status_list: 1 }).then(catResp => {\n          if (catResp.status !== 0) {\n            this.$message.error(catResp.info);\n          } else {\n            this.categoryList = catResp.data.cats || [];\n          }\n        });\n        this.getCategoryClusterList();\n      } else {\n        this.categoryList = [];\n      }\n      this.onSearch();\n    },\n    resetCheckedType() {\n      this.checkedType = '';\n      this.checkedRows = [];\n    },\n    changeSelectPageType(type) {\n      this.checkedType = type;\n      this.checkedRows = this.tableList;\n    },\n    getSuppliers(value, callback) {\n      const params = { pageno: 1, count: 20, key: `${value}`.trim(), approval_country: this.countryList.join('_') };\n      getSupplierList(params).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          const { list = [] } = resp.data || {};\n          if (Array.isArray(list) && list.length) {\n            return callback(list);\n          } else {\n            this.$message.error(`Supplier doesn't exist or supplier id is wrong.`);\n          }\n        }\n        callback([]);\n      }).catch(() => {\n        this.$message.error(`Server error, please retry and report to dev if retry doesn't work.`);\n        callback([]);\n      });\n    },\n    onSupplierSelect(item) {\n      this.searchForm.cacheSupplier = item.supplier_id;\n      this.searchForm.supplier_id = item.supplier_id;\n      this.onSearch();\n    },\n    onSupplierBlur() {\n      if (this.searchForm.cacheSupplier !== this.searchForm.supplier_id) {\n        this.searchForm.cacheSupplier = '';\n        this.searchForm.supplier_id = '';\n      }\n    },\n    modifyForm(schema, value) {\n      this.$set(this.searchForm, schema.field, value);\n    },\n    onRowClick(row) {\n      this.$store.commit('setActiveTab', { module: 'inventoryDashboard', tab: 'health' });\n      this.$store.commit('setSearchForm', {\n        module: 'inventoryDashboard',\n        form: {...this.lastSearchForm, activeViewport: 'detail'},\n        field: 'health'\n      });\n      this.$router.push(`/admin/skuMgt/detail/${row.sku_id}?originPath=inventory`);\n    },\n    getEmptyValue(key, value) {\n      if (Array.isArray(value)) return [];\n      if (key === 'date') return moment().subtract(1, 'days').format('YYYY-MM-DD');\n      return '';\n    },\n    onReset() {\n      this.resetCheckedType();\n      this.searchForm.supplier_id = '';\n      this.searchSchema.forEach(schema => {\n        const key = schema.field;\n        this.$set(this.searchForm, key, this.getEmptyValue(key, this.searchForm[key]));\n      });\n    },\n    onAsyncExport() {\n      const categoryID = this.searchForm.category_ids;\n      const categoryCluster = this.searchForm.category_cluster;\n      exportAllPagesSkuInventory(formatParams({\n        ...getSomeKeys(this.searchForm, ['sku_id', 'shop_id', 'supplier_id', 'date', 'country', 'category_id', 'whs_id', 'purchase_type']),\n        category_code: Array.isArray(categoryID) && categoryID.length ? categoryID.join(',') : '',\n        health_level: (healthLevelValueList.find(item => item.label === this.searchForm.health_tag) || {}).value,\n        category_cluster: Array.isArray(categoryCluster) && categoryCluster.length ? categoryCluster.join(',') : ''\n      }), { 'X-Region': this.searchForm.country, 'X-User': this.$store.getters.email}).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.message);\n        } else {\n          this.$message.success('Success, please find the result in “Export History”!');\n        }\n      }).catch(() => {\n        this.$message.error(`Server error, please retry and report to dev if retry doesn't work.`);\n      });\n    },\n    onExport() {\n      if (this.checkedRows.length < 1) return this.$message.error('Can not export sku with empty WhsID');\n      if (this.checkedType === 'all') {\n        return this.onAsyncExport();\n      }\n      exportSkuInventory({ sku_inventory_list: this.checkedRows }, { 'X-Region': this.searchForm.country }).then(resp => {\n        if (resp.type === 'application/json') {\n          const reader = new FileReader();\n          reader.onloadend = () => {\n            const result = JSON.parse(reader.result);\n            if (result.retcode !== 0) {\n              this.$message.error(result.message);\n            }\n          };\n          reader.readAsText(resp);\n        } else {\n          downloadBlobFile(resp, `SKUInventory${moment().format('YYYYMMDDHHmmss')}.xls`);\n        }\n      }).catch(() => { this.$message.error('Failed'); });\n    },\n    formatValue(value) {\n      if (typeof value === 'string') {\n        return value || '-';\n      } else if (typeof value === 'number') {\n        return formatValue(value.toFixed(2));\n      } else {\n        return '/';\n      }\n    },\n    onSearch(page_no) {\n      if (typeof page_no === 'number') {\n        this.searchForm.page_no = page_no;\n      } else {\n        this.searchForm.page_no = 1;\n      }\n      const params = formatParams(this.searchForm, {\n        category_ids: 'category_code'\n      });\n      if (this.searchForm.health_tag) {\n        params.health_level = (healthLevelValueList.find(item => {\n          return item.label === this.searchForm.health_tag;\n        }) || {}).value;\n      }\n      delete params.health_tag;\n      if (Array.isArray(params.category_code) && params.category_code.length) {\n        params.category_code = params.category_code.join(',');\n      } else {\n        delete params.category_code;\n      }\n      delete params.cacheSupplier;\n      if (params.category_cluster.length) {\n        params.category_cluster = params.category_cluster.join(',');\n      }\n      this.resetCheckedType();\n      this.loading = true;\n      getSKUInventoryList(params, { 'X-Region': this.searchForm.country }).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.message);\n        } else {\n          this.total = resp.data.total || 0;\n          this.tableList = (resp.data.sku_inventory_list || []).map(item => {\n            const rowData = item;\n            this.tableSchema.filter(schema => !!schema.toFixed).forEach(schema => {\n              rowData[schema.prop] = this.formatValue(item[schema.prop]);\n            });\n            return rowData;\n          });\n          this.lastSearchForm = this.searchForm;\n        }\n        this.loading = false;\n      }).catch(() => { this.loading = false; });\n    },\n    onSearchWithOverviewParams() {\n      const searchForm = this.$store.getters.searchForm['inventoryDashboard'] || {};\n      if ('inventoryHealth' in searchForm && searchForm['inventoryHealth'].oldActiveViewport === 'overview') {\n        const { dimension, search_key_list, region } = searchForm['inventoryHealth'] || {};\n        getCategoryList({ catids: 0, country: region, cs_status_list: 1 }).then(catResp => {\n          if (catResp.status !== 0) {\n            this.$message.error(catResp.info);\n          } else {\n            this.categoryList = catResp.data.cats || [];\n          }\n        });\n        this.searchForm = {...this.searchForm, country: region};\n        this.searchForm = {...this.searchForm, [dimensionMap[dimension]]: search_key_list };\n        dimension === 2 && (this.searchForm.cacheSupplier = search_key_list); // show vendorSiteID\n      }\n      this.onSearch(this.searchForm.page_no || 1);\n\n      this.$store.commit('setActiveTab', { module: 'inventoryDashboard', tab: 'current' });\n      this.$store.commit('setSearchForm', {\n        module: 'inventoryDashboard',\n        form: {...this.lastSearchForm, activeViewport: 'fbs'},\n        field: 'current'\n      });\n    }\n  },\n  created() {\n    this.canExportSku = true;\n    this.onSearchWithOverviewParams();\n    this.getCategoryClusterList();\n  },\n  props: {\n    form: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  watch: {\n    '$props.form': {\n      handler(form) {\n        if (form.activeTab === 'health') {\n          this.searchForm = { ...this.searchForm, ...form };\n        }\n        if (this.searchForm.country) {\n          getCategoryList({ catids: 0, country: this.searchForm.country }).then(catResp => {\n            if (catResp.status !== 0) {\n              this.$message.error(catResp.info);\n            } else {\n              this.categoryList = catResp.data.cats || [];\n            }\n          });\n        } else {\n          this.categoryList = [];\n        }\n        this.$delete(this.searchForm, 'activeViewport');\n        this.$delete(this.searchForm, 'activeTab');\n      },\n      immediate: true\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.sku-inventory-health-container {\n  .sku-inventory-health-form {\n    .right-action-btn {\n      text-align: right;\n    }\n  }\n}\n\n.pagination-center {\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n}\n.select-page-dropdown {\n  padding: 0;\n  margin-left: -10px;\n}\n.el-date-editor.el-input, .el-date-editor.el-input__inner {\n  width: 100%;\n}\n.el-autocomplete {\n  width: 100%;\n}\n.export-histroy-btn {\n  width: 120px;\n}\n</style>\n\n<style lang=\"scss\">\n.sku-inventory-health-container {\n  .el-select__tags {\n    .el-tag {\n      max-width: calc(100% - 80px);\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n  }\n  .color-tag {\n    margin: 0 auto;\n    width: 30px;\n    height: 30px;\n    border: 1px solid #ddd;\n  }\n  &.select-health {\n    .el-select-dropdown__item {\n      margin: 10px 0;\n    }\n    .color-tag {\n      margin: 0;\n    }\n  }\n  .link-info {\n    text-decoration: underline;\n  }\n  .select-page-dropdown {\n    .el-button {\n      border: none;\n      background: unset;\n      padding: 0 0 0 10px;\n      &:nth-child(1) {\n        width: 20px;\n        padding-right: 16px;\n      }\n      &::before {\n        width: 0;\n      }\n    }\n  }\n  .sku-inventory-health-form {\n      .el-form-item-medium-error{\n        border:1px solid red;\n        box-shadow: 0px 0px 1px red;\n      }\n\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/inventoryDashboard/inventoryHealth/healthDonut.vue","messages":[{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":176,"column":22,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":176,"endColumn":23,"fix":{"range":[5928,5929],"text":""}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div class=\"health-donut-wrapper\">\n    <div class=\"value-donut-wrapper\" ref=\"invValueDonut\"></div>\n    <div class=\"qty-donut-wrapper\" ref=\"invQtyDonut\"></div>\n  </div>\n</template>\n\n<script>\nimport { fetchDonutData, fetchHealthInfo } from '@/api/inventoryHealthOverview';\nimport { formatParams } from '@/utils/formatParams';\nimport { chartLoadingOpts } from './constant';\nimport { formatValue } from '@/utils/format';\n\nconst invTypeMap = { inv_value: 0, inv_qty: 1 };\n\nexport default {\n  data() {\n    return {\n      invValueTotal: '',\n      invValueData: [],\n      invValueDonut: null,\n      invValueUnit: '',\n      invQtyTotal: '',\n      invQtyData: [],\n      invQtyDonut: null,\n      invQtyUnit: '',\n      history_date: 0\n    };\n  },\n  props: {\n    searchForm: {\n      type: Object,\n      required: true\n    },\n    currentRegion: {\n      type: String,\n      required: true\n    }\n  },\n  methods: {\n    async fetchDonutData(params, headers = { 'X-Region': this.currentRegion }) {\n      const formatParams = {...params};\n      if (Object.prototype.toString.call(formatParams.search_key_list) === '[object Array]') {\n        formatParams.search_key_list = formatParams.search_key_list.join(',');\n      }\n      this.invValueDonut && this.invValueDonut.showLoading('default', chartLoadingOpts);\n      this.invQtyDonut && this.invQtyDonut.showLoading('default', chartLoadingOpts);\n      try {\n        const { data, message, retcode } = await fetchDonutData(formatParams, headers);\n        const { list = [] } = data || {};\n        if (retcode !== 0) {\n          this.$message.error(`Fetch Donut Data ${message}`);\n          return;\n        }\n        (list || []).forEach(item => {\n          const { inv_type, total, unit, parts = [] } = item;\n          const donutDataArr = [];\n          (parts || []).forEach(({ level, name, val: value }) => {\n            if (level !== 0) { // level != Unknown\n              if (level === -1) {\n                donutDataArr[5] = value ? { name, value, itemStyle: { borderColor: '#ddd' } } : { name, value, label: { show: false } };\n                return;\n              }\n              donutDataArr[level - 1] = { name, value, label: { show: !!value } }; // 隐藏0的数据项\n            }\n          });\n          if (inv_type === invTypeMap['inv_value']) {\n            this.invValueTotal = total;\n            this.invValueUnit = unit;\n            this.invValueData = donutDataArr;\n          } else if (inv_type === invTypeMap['inv_qty']) {\n            this.invQtyTotal = total;\n            this.invQtyUnit = unit;\n            this.invQtyData = donutDataArr;\n          }\n        });\n        this.invValueDonut.setOption(this.getDonutOptions({ data: this.invValueData, centerText: `${this.invValueUnit}\\n${formatValue(this.invValueTotal)}`, unit: this.invValueUnit }));\n        this.invQtyDonut.setOption(this.getDonutOptions({ data: this.invQtyData, centerText: `${formatValue(this.invQtyTotal)}\\n${this.invQtyUnit}`, unit: this.invQtyUnit }));\n      } catch (e) {\n        this.invValueTotal = '';\n        this.invValueUnit = '';\n        this.invValueData = [];\n        this.invQtyTotal = '';\n        this.invQtyUnit = '';\n        this.invQtyData = [];\n        this.invValueDonut.setOption(this.getDonutOptions({ data: this.invValueData, centerText: `${this.invValueUnit}\\n${formatValue(this.invValueTotal)}`, unit: this.invValueUnit }));\n        this.invQtyDonut.setOption(this.getDonutOptions({ data: this.invQtyData, centerText: `${formatValue(this.invQtyTotal)}\\n${this.invQtyUnit}`, unit: this.invQtyUnit }));\n        this.$message.error(`Fetch Donut Data ${e}`);\n      } finally {\n        this.invValueDonut && this.invValueDonut.hideLoading();\n        this.invQtyDonut && this.invQtyDonut.hideLoading();\n      }\n    },\n    async fetchHealthInfo(params, headers = { 'X-Region': this.currentRegion }) {\n      try {\n        const { data, retcode, message } = await fetchHealthInfo(params, headers);\n        const { hint, history_date } = data || {};\n        this.dateHint = hint || '';\n        this.history_date = history_date || 0;\n        if (retcode !== 0) {\n          this.history_date = 0;\n          this.$message.error(`Fetch Health Info Date ${message}`);\n        }\n      } catch (e) {\n        this.history_date = 0;\n        this.$message.error(`Fetch Health Info Date ${e}`);\n      }\n    },\n    getDonutOptions: ({ data = [], centerText = '', unit }) => ({\n      title: {\n        show: !(data || []).length,\n        textStyle: {\n          color: '#909399',\n          fontSize: 20,\n          fontWeight: 300\n        },\n        text: 'No Data',\n        left: 'center',\n        top: 'center'\n      },\n      tooltip: {\n        trigger: 'item',\n        formatter: ({ data: { name, value }, percent }) => `${name || ''}(${unit}) : ${formatValue(value || 0)} (${percent || 0}%)`\n      },\n      graphic: [{\n          type: 'text',\n          left: 'center',\n          top: '40%',\n          style: {\n            text: centerText,\n            textAlign: 'center',\n            width: 30,\n            height: 30,\n            fontSize: 18\n          }\n      }],\n      series: [\n        {\n          type: 'pie',\n          top: 20,\n          bottom: 60,\n          left: 0,\n          right: 0,\n          radius: ['70%', '90%'],\n          center: ['50%', '50%'],\n          data: data\n        }\n      ],\n      legend: {\n        show: true,\n        bottom: 0,\n        icon: 'circle',\n        selectedMode: false\n      },\n      color: [\n        '#1CC461',\n        '#E3E3E3',\n        '#FFB014',\n        '#EF4A4A',\n        '#333333',\n        '#ffffff'\n      ]\n    }),\n    resizeChart() {\n      this.invValueDonut && this.invValueDonut.resize();\n      this.invQtyDonut && this.invQtyDonut.resize();\n    },\n    bindEvents() {\n      window.addEventListener(\n        'resize',\n        this.debounce(this.resizeChart, 200, this)\n      );\n    },\n    debounce(fn, time, ctx) {\n      let timer;\n      return function (...params) {\n        if (timer) clearTimeout(timer);\n\n        timer = window.setTimeout(() => {\n          fn.apply(ctx, params);\n        }, time);\n      };\n    },\n    initCharts() {\n      this.$nextTick(() => {\n        this.invValueDonut = this.$echarts.init(this.$refs['invValueDonut']);\n        this.invValueDonut.setOption(this.getDonutOptions({ data: this.invValueData, centerText: `${this.invValueUnit}\\n${formatValue(this.invValueTotal)}` }));\n        this.invQtyDonut = this.$echarts.init(this.$refs['invQtyDonut']);\n        this.invQtyDonut.setOption(this.getDonutOptions({ data: this.invQtyData, centerText: `${formatValue(this.invQtyTotal)}\\n${this.invQtyUnit}` }));\n        this.bindEvents();\n        this.invValueDonut.showLoading('default', chartLoadingOpts);\n        this.invQtyDonut.showLoading('default', chartLoadingOpts);\n      });\n    }\n  },\n  watch: {\n    '$props.searchForm': {\n      async handler(searchForm) {\n        await this.fetchHealthInfo(); // NOTE:因 history_date 与 searchform 不能同步更新，所以此处请求最新的 history_date\n        this.fetchDonutData(formatParams({...searchForm, history_date: this.history_date}));\n      },\n      immediate: true,\n      deep: true\n    },\n    '$props.currentRegion': {\n      async handler(region, prevRegion) {\n        if (this.$props.searchForm.dimension === 4 || !!this.searchForm.search_key_list) { // 4:searchForm change|切换region会使search_key_list改变\n          return;\n        }\n        await this.fetchHealthInfo();\n        this.fetchDonutData(formatParams({...this.$props.searchForm, history_date: this.history_date}), { 'X-Region': region });\n      }\n    }\n  },\n  created() {\n    this.initCharts();\n  }\n};\n\n</script>\n<style lang=\"scss\" scoped>\n.health-donut-wrapper {\n  display: flex;\n  justify-content: space-around;\n  .value-donut-wrapper, .qty-donut-wrapper {\n    margin: 0 auto;\n    width: 50%;\n    height: 400px;\n  }\n  .value-donut-wrapper {\n    border-right: 1px solid #E3E3E3;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/inventoryDashboard/inventoryHealth/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/inventoryDashboard/inventoryHealth/overview.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/inventoryDashboard/inventoryHealth/redBlackTab.vue","messages":[{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":438,"column":22,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":438,"endColumn":23,"fix":{"range":[15319,15320],"text":""}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <section>\n    <el-tabs\n      type=\"card\"\n      class=\"inventory-health-tabs\"\n      v-model=\"activeTab\"\n      @tab-click=\"handleTabClick\"\n    >\n      <el-tab-pane\n        v-for=\"({ key, label }) in tabList\"\n        :key=\"key\"\n        :label=\"$t(label)\"\n        :name=\"key\"\n      ></el-tab-pane>\n    </el-tabs>\n    <div class=\"tab-body\">\n      <el-radio-group v-model=\"searchForm.sub_dimension\" @change=\"handleChangeSubDim\">\n        <el-radio :label=\"0\">{{$t('byWarehouse')}}</el-radio>\n        <el-radio :label=\"1\">{{$t('byCategory')}}</el-radio>\n      </el-radio-group>\n      <h4 class=\"sub-title\">{{$t(`${barTitle[searchForm.inv_type][searchForm.sub_dimension]}`)}}</h4>\n      <div class=\"bar-wrapper\" ref=\"barRef\"></div>\n      <h4 class=\"sub-title red-black-title\">\n        {{$t(`${lineTitle[searchForm.inv_type]}`)}}\n        <el-form class=\"pms-list-form\">\n          <el-form-item :label=\"searchForm.sub_dimension === 0 ? $t('commonWarehouse') : $t('commonCategory')\">\n            <el-select v-model=\"searchForm.sub_dimension_key\" @change=\"handleChangeSubDimKey\">\n              <el-option v-for=\"item in subDimensionOptions || []\" :key=\"item.value\" :value=\"item.value\" :label=\"item.label\"></el-option>\n            </el-select>\n          </el-form-item>\n        </el-form>\n      </h4>\n      <div class=\"line-wrapper\" ref=\"lineRef\"></div>\n    </div>\n  </section>\n</template>\n\n<script>\nimport moment from 'moment';\nimport { fetchBarData, fetchLineData, fetchHealthInfo } from '@/api/inventoryHealthOverview';\nimport { formatParams } from '@/utils/formatParams';\nimport { fetchISCOptions } from '@/api/iscCommon';\nimport { fetchCategoryInChargeList } from '@/api/common';\nimport { chartLoadingOpts } from './constant';\nimport { formatValue } from '@/utils/format';\n\nconst tabList = [{ key: '0', label: 'inventoryValue'}, {key: '1', label: 'inventoryQuantity'}];\nconst initChartData = { data: [], name: '' };\nconst initSelectOptions = [{ label: 'All', value: '' }];\nconst barTitle = {\n  0: { 0: 'redBlackInvValueByWarehouse', 1: 'redBlackInvValueByCategory'},\n  1: { 0: 'redBlackInvQtyByWarehouse', 1: 'redBlackInvQtyByCategory' }\n};\nconst lineTitle = {\n  0: 'blackRedInvValueLast30Days',\n  1: 'blackRedInvQtyLast30Days'\n};\n\nexport default {\n  data() {\n    return {\n      activeTab: '0',\n      tabList,\n      subDimensionOptions: [...initSelectOptions],\n      searchForm: {\n        ...this.form,\n        sub_dimension: 0,\n        sub_dimension_key: '',\n        inv_type: 0\n      },\n      barRef: null,\n      barData: {\n        redData: {...initChartData},\n        blackData: {...initChartData},\n        redPerData: [],\n        blackPerData: []\n      },\n      barXAxis: [],\n      barYAxisUnit: '',\n      barTitle,\n      lineRef: null,\n      lineXAxis: [],\n      lineTitle,\n      lineData: {\n        redData: {...initChartData},\n        redPerData: {...initChartData},\n        blackData: {...initChartData},\n        blackPerData: {...initChartData}\n      },\n      lineUnit: {\n        unit: '',\n        perUnit: '%'\n      },\n      history_date: 0\n    };\n  },\n  props: {\n    currentRegion: {\n      type: String,\n      required: true\n    },\n    form: {\n      type: Object,\n      required: true,\n      defult: {}\n    }\n  },\n  methods: {\n    handleTabClick(tab) {\n      const { name } = tab;\n      this.searchForm.inv_type = +name;\n      this.fetchBarData(formatParams(this.searchForm, {}, ['sub_dimension_key']));\n      this.fetchLineData(formatParams(this.searchForm));\n    },\n    async fetchBarData(params, headers = { 'X-Region': this.currentRegion }) {\n      const formatParams = {...params};\n      if (Object.prototype.toString.call(formatParams.search_key_list) === '[object Array]') {\n        formatParams.search_key_list = formatParams.search_key_list.join(',');\n      }\n      this.barRef && this.barRef.showLoading('default', chartLoadingOpts);\n      try {\n        const { data, retcode, message } = await fetchBarData(formatParams, headers);\n        const { x_axis_list = [], y_axis_list = {} } = data || {};\n        const { red_data, black_data, red_per_data, black_per_data, unit } = y_axis_list || {};\n        const { data: redPerData = [] } = red_per_data || {};\n        const { data: blackPerData = [] } = black_per_data || {};\n\n        this.barXAxis = x_axis_list || [];\n        this.barData.redData = red_data || {...initChartData};\n        this.barData.blackData = black_data || {...initChartData};\n        this.barData.redPerData = redPerData || [];\n        this.barData.blackPerData = blackPerData || [];\n        this.barYAxisUnit = unit || '';\n        this.barRef.setOption(this.getBarOptions({ barXAxis: x_axis_list, ...this.barData, yAxisUnit: this.barYAxisUnit, key: this.searchForm.sub_dimension }));\n        if (retcode !== 0) {\n          this.$message.error(`Fetch Bar Data ${message}`);\n        }\n      } catch (e) {\n        this.barXAxis = [];\n        this.barData.redData = {...initChartData};\n        this.barData.blackData = {...initChartData};\n        this.barYAxisUnit = '';\n        this.barRef.setOption(this.getBarOptions({ barXAxis: this.barXAxis, ...this.barData, key: this.searchForm.sub_dimension }));\n        this.$message.error(`Fetch Bar Data ${e}`);\n      } finally {\n        this.barRef && this.barRef.hideLoading();\n      }\n    },\n    async fetchHealthInfo(params, headers = { 'X-Region': this.currentRegion }) {\n      try {\n        const { data, retcode, message } = await fetchHealthInfo(params, headers);\n        const { hint, history_date } = data || {};\n        this.dateHint = hint || '';\n        this.history_date = history_date || 0;\n        if (retcode !== 0) {\n          this.history_date = 0;\n          this.$message.error(`Fetch Health Info Date ${message}`);\n        }\n      } catch (e) {\n        this.history_date = 0;\n        this.$message.error(`Fetch Health Info Date ${e}`);\n      }\n    },\n    async fetchLineData(params, headers = { 'X-Region': this.currentRegion }) {\n      const formatParams = {...params};\n      if (Object.prototype.toString.call(formatParams.search_key_list) === '[object Array]') {\n        formatParams.search_key_list = formatParams.search_key_list.join(',');\n      }\n      this.lineRef && this.lineRef.showLoading('default', chartLoadingOpts);\n      try {\n        const { data, retcode, message } = await fetchLineData(formatParams, headers);\n        const { x_axis_list = [], y_axis_list = [] } = data || {};\n        const { red_data, red_per_data, black_data, black_per_data, unit, per_unit } = y_axis_list || {};\n        this.lineXAxis = (x_axis_list || []).map(item => moment(item * 1000).format('MM/DD'));\n        this.lineData = {\n          redData: red_data || {...initChartData},\n          redPerData: red_per_data || {...initChartData},\n          blackData: black_data || {...initChartData},\n          blackPerData: black_per_data || {...initChartData}\n        };\n        this.lineUnit = { unit: unit || '', perUnit: per_unit || '' };\n        this.lineRef.setOption(this.getLineOptions({ lineXAxis: this.lineXAxis, ...this.lineData, ...this.lineUnit }));\n        if (retcode !== 0) {\n          this.$message.error(`Fetch Line Data ${message}`);\n        }\n      } catch (e) {\n        this.$message.error(`Fetch Line Data ${e}`);\n        this.lineXAxis = [];\n        this.lineData = {\n          redData: {...initChartData},\n          redPerData: {...initChartData},\n          blackData: {...initChartData},\n          blackPerData: {...initChartData}\n        };\n        this.lineUnit = { unit: '', perUnit: '' };\n        this.lineRef.setOption(this.getLineOptions({ lineXAxis: this.lineXAxis, ...this.lineData, ...this.lineUnit }));\n      } finally {\n        this.lineRef && this.lineRef.hideLoading();\n      }\n    },\n    async fetchWarehouseOptions(params, headers = { 'X-Region': this.currentRegion }) {\n      try {\n        const { data, message = '', retcode = 0 } = await fetchISCOptions(params, headers);\n        const { node_list = [] } = data || {};\n        let filtersOptions = [];\n        const { dimension, search_key_list } = this.searchForm;\n        if (dimension === 3 && search_key_list) { // 3:warehouse\n          filtersOptions = [...initSelectOptions, { value: search_key_list, label: search_key_list }];\n        } else {\n          filtersOptions = [...initSelectOptions, ...(node_list || []).map(whsId => ({value: whsId, label: whsId}))];\n        }\n        this.subDimensionOptions = filtersOptions;\n        if (retcode !== 0) {\n          this.$message.error(`Fetch Warehouse Options ${message}`);\n        }\n      } catch (error) {\n        this.subDimensionOptions = [...initSelectOptions];\n        this.$message.error(`Fetch Warehouse Options ${error}`);\n      }\n    },\n    async fetchCategoryInChargeList(queryString) {\n      try {\n        const params = {\n          pageno: 1,\n          count: 20,\n          key: `${queryString}`.trim(),\n          approval_country: this.currentRegion\n        };\n        const { data, status, info } = await fetchCategoryInChargeList(params);\n        const { list = [] } = data || {};\n        let filtersOptions = [];\n        const { dimension, search_key_list } = this.searchForm;\n        if (dimension === 4 && search_key_list.length) { // 4:category\n          filtersOptions = (list || []).filter(({ category_id }) => search_key_list.includes(category_id));\n          filtersOptions = [...initSelectOptions, ...filtersOptions.map(({ category_id, category_name }) => ({value: category_id, label: category_name}))];\n        } else {\n          filtersOptions = [...initSelectOptions, ...(list || []).map(({category_id, category_name}) => ({value: category_id, label: category_name}))];\n        }\n        this.subDimensionOptions = filtersOptions;\n        if (status !== 0) {\n          this.$message.error(`${info}`);\n        }\n      } catch (e) {\n        this.subDimensionOptions = [...initSelectOptions];\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    getBarOptions({ barXAxis, redData, blackData, yAxisUnit, key, redPerData, blackPerData }) {\n      return {\n        title: {\n          show: !(redData.data || []).length && !(blackData.data || []).length,\n          textStyle: {\n            color: '#909399',\n            fontSize: 20,\n            fontWeight: 300\n          },\n          text: 'No Data',\n          left: 'center',\n          top: 'center'\n        },\n        tooltip: {\n          trigger: 'item',\n          formatter: (params) => {\n            const { seriesName, name, data, componentIndex } = params || {};\n            return `${seriesName} <br />${name}: ${formatValue(data[componentIndex + 1])} (${data[componentIndex + 3]}%)`;\n          }\n        },\n        xAxis: {\n          type: 'category',\n          axisLabel: {\n            rotate: key === 1 ? 30 : 0, // category 倾斜\n            formatter: (value) => {\n              if (key === 0 && (value || '').length > 5) {\n                return `${value.substring(0, 4)}...`;\n              }\n              if (key === 1 && (value || '').length > 11) {\n                return `${value.substring(0, 10)}...`;\n              }\n              return value;\n            }\n          }\n        },\n        yAxis: {\n          type: 'value',\n          formatter: (val) => `${val}(${yAxisUnit})`\n        },\n        grid: {\n          top: 60,\n          bottom: 50,\n          left: 10,\n          right: 10,\n          containLabel: true\n        },\n        legend: {\n          show: true,\n          icon: 'circle',\n          bottom: 0\n        },\n        color: ['#EF4A4A', '#333333'],\n        dataset: [\n          {\n            dimensions: ['product', (redData || {}).name, (blackData || {}).name, 'redPerData', 'blackPerData'],\n            source: this.formatBarData(redData, blackData, barXAxis, redPerData, blackPerData)\n          },\n          {\n            transform: {\n              type: 'sort',\n              config: [\n                { dimension: (blackData || {}).name, order: 'desc' },\n                { dimension: (redData || {}).name, order: 'desc' }\n              ]\n            }\n          }\n        ],\n        series: [\n          { type: 'bar', datasetIndex: 1, name: (redData || {}).name },\n          { type: 'bar', datasetIndex: 1, name: (blackData || {}).name }\n        ]\n      };\n    },\n    getLineOptions({ lineXAxis, redData, redPerData, blackData, blackPerData, unit, perUnit }) {\n      return {\n        title: {\n          show: !(redData.data || []).length && !(blackData.data || []).length && !(redPerData.data || []).length && !(blackPerData.data || []).length,\n          textStyle: {\n            color: '#909399',\n            fontSize: 20,\n            fontWeight: 300\n          },\n          text: 'No Data',\n          left: 'center',\n          top: 'center'\n        },\n        xAxis: {\n          type: 'category',\n          data: lineXAxis\n        },\n        yAxis: [\n          {\n            type: 'value',\n            position: 'left',\n            name: `Value(${unit})`,\n            splitLine: { show: false }\n          },\n          {\n            type: 'value',\n            position: 'right',\n            name: `Value(${perUnit})`,\n            axisLabel: {\n              formatter: (val) => `${val}%`\n            },\n            splitLine: { show: false }\n          }\n        ],\n        grid: {\n          top: 60,\n          bottom: 50,\n          left: 20,\n          right: 25,\n          containLabel: true\n        },\n        legend: {\n          show: true,\n          bottom: 0\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross',\n            animation: false,\n            lineStyle: {\n              color: '#376df4',\n              width: 2,\n              opacity: 1\n            }\n          }\n        },\n        color: ['#EF4A4A', '#EF4A4A', '#333333', '#333333'],\n        series: [\n          {\n            type: 'line',\n            yAxisIndex: 0,\n            symbol: 'line',\n            ...redData\n          },\n          {\n            type: 'line',\n            yAxisIndex: 1,\n            lineStyle: {\n              type: 'dashed'\n            },\n            ...redPerData\n          },\n          {\n            type: 'line',\n            yAxisIndex: 0,\n            symbol: 'line',\n            ...blackData\n          },\n          {\n            type: 'line',\n            yAxisIndex: 1,\n            lineStyle: {\n              type: 'dashed'\n            },\n            ...blackPerData\n          }\n        ]\n      };\n    },\n    handleChangeSubDim() {\n      const { sub_dimension } = this.searchForm;\n      if (sub_dimension === 0) {\n        this.searchForm.sub_dimension_key = '';\n        this.fetchWarehouseOptions();\n      } else if (sub_dimension === 1) {\n        this.searchForm.sub_dimension_key = '';\n        this.fetchCategoryInChargeList('');\n      }\n      this.fetchBarData(formatParams(this.searchForm, {}, ['sub_dimension_key']));\n      this.fetchLineData(formatParams(this.searchForm));\n    },\n    handleChangeSubDimKey() {\n      this.fetchLineData(formatParams(this.searchForm));\n    },\n    resizeChart() {\n      this.barRef && this.barRef.resize();\n      this.lineRef && this.lineRef.resize();\n    },\n    bindEvents() {\n      window.addEventListener(\n        'resize',\n        this.debounce(this.resizeChart, 200, this)\n      );\n    },\n    debounce(fn, time, ctx) {\n      let timer;\n      return function (...params) {\n        if (timer) clearTimeout(timer);\n\n        timer = window.setTimeout(() => {\n          fn.apply(ctx, params);\n        }, time);\n      };\n    },\n    formatBarData(redData, blackData, barXAxis, redPerData, blackPerData) {\n      const res = (barXAxis || []).map((item, index) => (\n        [item, (redData || {}).data[index], (blackData || {}).data[index], (redPerData || [])[index], (blackPerData || [])[index]]\n      ));\n      return res;\n    },\n    initCharts() {\n      this.$nextTick(() => {\n        this.barRef = this.$echarts.init(this.$refs['barRef']);\n        this.lineRef = this.$echarts.init(this.$refs['lineRef']);\n        this.barRef.setOption(this.getBarOptions({ barXAxis: [], ...this.barData, yAxisUnit: this.barYAxisUnit, key: this.searchForm.sub_dimension }));\n        const { unit, perUnit } = this.lineUnit;\n        this.lineRef.setOption(this.getLineOptions({ lineXAxis: [], ...this.lineData, unit, perUnit }));\n        this.bindEvents();\n        this.barRef.showLoading('default', chartLoadingOpts);\n        this.lineRef.showLoading('default', chartLoadingOpts);\n      });\n    }\n  },\n  watch: {\n    '$props.form': {\n      async handler(currForm, prevForm) {\n        await this.fetchHealthInfo();\n        this.searchForm = {...this.searchForm, ...currForm, history_date: this.history_date};\n        this.fetchBarData(formatParams(this.searchForm, {}, ['sub_dimension_key']));\n        this.fetchLineData(formatParams(this.searchForm));\n        const { sub_dimension } = this.searchForm;\n        if (sub_dimension === 0) { // by warehouse\n          this.fetchWarehouseOptions();\n        } else if (sub_dimension === 1) {\n          this.fetchCategoryInChargeList('');\n        }\n      },\n      immediate: true,\n      deep: true\n    },\n    '$props.form.search_key_list': {\n      handler(currSearchKeys, prevSearchKeys) {\n        const { dimension, sub_dimension } = this.searchForm;\n        if (dimension === 4 && sub_dimension === 1 && prevSearchKeys !== undefined) { // 判断category是否有增加选项\n          this.fetchCategoryInChargeList('');\n          this.searchForm.sub_dimension_key = '';\n        } else if (dimension === 3 && sub_dimension === 0 && currSearchKeys !== prevSearchKeys) { // 处理与form.search_key_list的冲突选项\n          this.fetchWarehouseOptions();\n          this.searchForm.sub_dimension_key = '';\n        }\n      },\n      immediate: true\n    },\n    '$props.currentRegion': {\n      async handler(currRegion, prevRegion) {\n        const { sub_dimension } = this.searchForm;\n        if (sub_dimension === 0) { // by warehouse\n          this.fetchWarehouseOptions();\n        } else if (sub_dimension === 1) {\n          this.fetchCategoryInChargeList('');\n        }\n\n        if (this.$props.form.dimension === 4 || !!this.searchForm.search_key_list) { // 4: form change|切换region会使search_key_list改变\n          return;\n        }\n        await this.fetchHealthInfo();\n        this.fetchBarData(formatParams({...this.searchForm, history_date: this.history_date}, {}, ['sub_dimension_key']));\n        this.fetchLineData(formatParams({...this.searchForm, history_date: this.history_date}));\n      }\n    },\n    '$props.form.dimension': {\n      handler(currDimen, prevDimen) {\n        const { sub_dimension } = this.searchForm;\n        if (prevDimen === 3 && sub_dimension === 0) { // prev:warehouse、sub_dimen:warehouse\n          this.fetchWarehouseOptions();\n        } else if (prevDimen === 4 && sub_dimension === 1) { // prev:category、sub_dimen:category\n          this.fetchCategoryInChargeList('');\n        }\n        this.searchForm.sub_dimension_key = '';\n      }\n    }\n  },\n  created() {\n    this.initCharts();\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.inventory-health-tabs {\n  .el-tabs--border-card {\n    border-bottom: 0;\n    border-top-left-radius: 4px;\n    border-top-right-radius: 4px;\n  }\n  .el-tabs__nav {\n    display: flex;\n    .el-tabs__item {\n      height: 40px;\n      margin: 0;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n  }\n  .el-tabs__content {\n    padding: 0;\n  }\n}\n</style>\n\n<style lang=\"scss\" scoped>\n.tab-body {\n  height: 920px;\n  padding: 20px;\n  border: 1px solid #DCDFE6;\n  border-top: 0;\n  border-bottom-right-radius: 4px;\n  border-bottom-left-radius: 4px;\n  margin-bottom: 30px;\n  .el-radio-group {\n    display: flex;\n    justify-content: center;\n    margin: 10px 0;\n  }\n  .sub-title {\n    margin-top: 15px;\n  }\n  .red-black-title {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n  .bar-wrapper {\n    height: 350px;\n  }\n  .line-wrapper {\n    height: 380px;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/inventoryDashboard/promotionReserved/index.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":3,"column":59,"nodeType":"VIdentifier","messageId":"deprecated","endLine":3,"endColumn":65},{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"promotionReserved\" is not PascalCase.","line":49,"column":9,"nodeType":"Literal","endLine":49,"endColumn":28,"fix":{"range":[2341,2358],"text":"PromotionReserved"}}],"errorCount":2,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div class=\"promotion-reserved\">\n    <el-form :model=\"searchForm\" ref=\"searchForm\" @submit.native.prevent=\"onSearch\">\n      <el-button v-show=\"false\" native-type=\"submit\"></el-button>\n      <el-row :gutter=\"16\">\n        <el-col v-for='item in searchSchema' :key='item.field' :span='item.width || 6' :offset='item.offset'>\n          <el-form-item :class='item.class || \"\"' :label=\"item.label\" class=\"search-input-area\">\n            <pms-form-item @input=\"modifyForm\" :renderData=\"{ schema: item, form: searchForm}\"></pms-form-item>\n          </el-form-item>\n        </el-col>\n      </el-row>\n      <el-row>\n        <el-form-item class='pms-ui right-action-btn'>\n          <div class='list-btn clear-btn' @click=\"onReset\">{{$t('commonClear')}}</div>\n          <div class='list-btn' @click='onSearch'>{{$t('commonSearch')}}</div>\n        </el-form-item>\n      </el-row>\n    </el-form>\n     <section class=\"inventory-dashboard-table-list-area pms-ui\" v-loading=\"loading\">\n      <inventory-table\n        :schemas=\"tableSchema\"\n        class=\"pms-ui\"\n        :dataList=\"dataList\"\n        @export=\"onExport\"\n        @exportHistory=\"onExportHistory\"\n        ref=\"inventoryTable\"\n        @rowClick=\"rowClick\"\n      >\n      </inventory-table>\n    </section>\n    <section class='pms-ui pagination-center'>\n      <el-pagination background layout=\"sizes, prev, pager, next\" :current-page='pageInfo.page_no' :total.sync=\"pageInfo.total\" :page-sizes='[10, 20, 50, 100]'\n       :page-size=\"pageInfo.count\" @size-change=\"handleSizeChange\" @current-change=\"handleChangePage\"></el-pagination>\n    </section>\n    <export-history-dialog :task-type=\"303\" :visible=\"isShowExportHistory\" @close=\"closeExportHistory\"></export-history-dialog>\n  </div>\n</template>\n<script>\nimport PMSFormItem, { getSelectOptions } from '@/components/BaseItem/formItem';\nimport InventoryTable from '../components/inventoryTable';\nimport { PurchaseTypeList, CBOptionListWithAll } from '@/utils/constant';\nimport { getCategoryList } from '@/api/userRole';\nimport { getSupplierList } from '@/api/supplier';\nimport { getPromotionReservedList, asyncExportPromotionReserved} from '@/api/inventoryHealth';\nimport { formatParams, formatValue } from '@/utils/formatParams';\nimport ExportHistoryDialog from '@/components/ApproveList/exportHistoryDialog';\n\nexport default {\n  name: 'promotionReserved',\n  components: { 'pms-form-item': PMSFormItem, InventoryTable, ExportHistoryDialog },\n  props: {\n    form: {\n      type: Object,\n      default: () => {}\n    }\n  },\n  data() {\n    return {\n      searchForm: {\n        sku_id: '',\n        shop_id: '',\n        region: '',\n        cb_option: 2,\n        l1_category_ids: '',\n        vendor_site_id: '',\n        purchase_type: ''\n      },\n      dataList: [],\n      pageInfo: {\n        page_no: 1,\n        count: 10,\n        total: 0\n      },\n      loading: false,\n      export_type: 1,\n      export_ids: [],\n      categoryList: [],\n      isShowExportHistory: false\n    };\n  },\n  computed: {\n    searchSchema() {\n      return [\n        { type: 'input', field: 'sku_id', label: this.$t('commonSkuID') },\n        { type: 'input', field: 'shop_id', label: this.$t('commonShopID') },\n        {\n          type: 'select', field: 'region', label: this.$t('commonRegion'), getChildren: (h) => getSelectOptions(this.countrySelectList, h),\n          on: { change: this.regionChange }\n        },\n        {\n          type: 'select', field: 'cb_option', label: this.$t('commonCBOption'), getChildren: (h) => getSelectOptions(CBOptionListWithAll, h),\n          on: {change: this.onSearch}\n        },\n        {\n          type: 'select', field: 'l1_category_ids', label: this.$t('commonL1Category'), getChildren: (h) => getSelectOptions(this.categoryList, h),\n          on: { change: this.onSearch }, props: { multiple: true, placeholder: this.$t('currentInventoryRegionTip')}\n        },\n        {\n          field: 'vendor_site_id', type: 'autocomplete', label: this.$t('commonVendorSiteID'),\n          on: { select: this.onSearch},\n          props: {\n            'trigger-on-focus': false,\n            'value-key': 'supplier_id',\n            'fetch-suggestions': (value, callback) => this.getSuppliers(value, callback)\n          }\n        },\n        { type: 'select', field: 'purchase_type', label: this.$t('purchaseRequest.purchaseType'),\n          getChildren: (h) => getSelectOptions(PurchaseTypeList, h),\n          on: { change: this.onSearch }\n        }\n      ];\n    },\n    tableSchema() {\n      return [\n        { label: this.$t('commonSkuID'), field: 'sku_id', props: {fixed: 'left', isHidden: false, class: 'inventory-sku-text-underline'}},\n        { label: this.$t('commonSkuName'), field: 'sku_name', props: {fixed: 'left', isHidden: false}},\n        { label: this.$t('commonShopID'), field: 'shop_id', props: {isHidden: false}},\n        { label: this.$t('commonPurchaseType'), field: 'purchase_type', width: 120},\n        { label: this.$t('commonRegion'), field: 'region', props: {isHidden: true}},\n        { label: this.$t('InventorySellableStock'), field: 'sellable_stock', render: (schema, row) => formatValue(row[schema.field] || 0)},\n        { label: this.$t('inventoryFrontEndStock'), field: 'front_end_stock', render: (schema, row) => formatValue(row[schema.field] || 0)},\n        { label: this.$t('inventoryReservedStockInPromotion'), field: 'reserved_stock_promotion', render: (schema, row) => formatValue(row[schema.field] || 0)},\n        { label: this.$t('inventoryShopeeCreatedPromotion'), field: 'shopee_promotion', render: (schema, row) => formatValue(row[schema.field] || 0)},\n        { label: this.$t('inventorySellerCreatedPromotion'), field: 'seller_promotion', render: (schema, row) => formatValue(row[schema.field] || 0)},\n        { label: this.$t('inventoryCFS'), field: 'cfs', render: (schema, row) => formatValue(row[schema.field] || 0)},\n        { label: this.$t('inventoryVirtualSKUReserved'), field: 'virtual_sku_reserved', render: (schema, row) => formatValue(row[schema.field] || 0)},\n        { label: this.$t('inventoryShopFlashSale'), field: 'shop_flash_sale', render: (schema, row) => formatValue(row[schema.field] || 0)},\n        { label: this.$t('inventoryBrandSale'), field: 'brand_sale', render: (schema, row) => formatValue(row[schema.field] || 0)},\n        { label: this.$t('inventoryExclusivePrice'), field: 'exclusive_price', render: (schema, row) => formatValue(row[schema.field] || 0)}\n      ];\n    },\n    countryList() {\n      return [...new Set([...this.$store.getters.countryList.map(item => item.country)])];\n    },\n    countrySelectList() {\n      return [{ label: 'All', value: '' }, ...this.countryList.map(item => ({ label: item, value: item }))];\n    }\n  },\n  methods: {\n    modifyForm(schema, value) {\n      this.searchForm[schema.field] = value;\n    },\n    onSearch() {\n      this.pageInfo.page_no = 1;\n\n      this.getList();\n    },\n    getList() {\n      const params = {...this.searchForm, ...this.pageInfo};\n      if (params.shop_id) {\n        if (isNaN(parseInt(params.shop_id))) {\n          return this.$message({ type: 'error', message: 'Shop ID must be number' });\n        } else {\n          params.shop_id = parseInt(params.shop_id);\n        }\n      }\n      params.l1_category_ids = Array.isArray(params.l1_category_ids) ? params.l1_category_ids.join(',') : '';\n      this.loading = true;\n      getPromotionReservedList(formatParams(params)).then((resp) => {\n        if (resp.retcode === 0) {\n          this.dataList = resp.data.list;\n          this.pageInfo.total = resp.data.total;\n        } else {\n          this.$message.error(resp.message || resp.info);\n        }\n      }).finally(() => {\n        this.loading = false;\n      }).catch(err => {\n          this.$message.error(err.message || err.info);\n          this.dataList = [];\n        });\n    },\n    regionChange(region) {\n      if (region) {\n        getCategoryList({ catids: 0, country: region, cs_status_list: 1 }).then(catResp => {\n          if (catResp.status !== 0) {\n            this.$message.error(catResp.info);\n          } else {\n            this.categoryList = catResp.data.cats.map(cat => ({value: cat.catid, label: cat.name})) || [];\n          }\n        });\n        this.onSearch();\n      } else {\n        this.categoryList = [];\n      }\n    },\n    getSuppliers(value, callback) {\n      const params = { pageno: 1, count: 20, key: `${value}`.trim(), approval_country: this.countryList.join('_') };\n      getSupplierList(params).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          const { list = [] } = resp.data || {};\n          if (Array.isArray(list) && list.length) {\n            return callback(list);\n          } else {\n            this.$message.error(`Supplier doesn't exist or supplier id is wrong.`);\n          }\n        }\n        callback([]);\n      }).catch(() => {\n        this.$message.error(`Server error, please retry and report to dev if retry doesn't work.`);\n        callback([]);\n      });\n    },\n    onExport({type, rows}) {\n      this.export_type = type === 'all' ? 2 : 1;\n      const params = {\n        export_type: type === 'all' ? 2 : 1,\n        export_condition: formatParams(this.searchForm),\n        export_ids: type === 'all' ? null : rows.map(row => row.id)\n      };\n      if (params.export_condition.shop_id) {\n        if (isNaN(parseInt(params.export_condition.shop_id))) {\n          return this.$message({ type: 'error', message: 'Shop ID must be number' });\n        } else {\n          params.export_condition.shop_id = parseInt(params.export_condition.shop_id);\n        }\n      }\n      params.export_condition.l1_category_ids = params.export_condition.l1_category_ids.join(',');\n\n      asyncExportPromotionReserved(formatParams(params)).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.message);\n        } else {\n          this.$message.success(this.$t('commonExportHistorySuccessTips'));\n        }\n      }).catch(() => {\n        this.$message.error(this.$t('commonExportHistoryErrorTips'));\n      });\n    },\n    onExportHistory() {\n      this.showExportHistory();\n    },\n    onReset() {\n      this.searchForm = {\n        sku_id: '',\n        shop_id: '',\n        region: '',\n        cb_option: 2,\n        l1_category_ids: '',\n        vendor_site_id: '',\n        purchase_type: ''\n      };\n    },\n    handleSizeChange(value) {\n      this.pageInfo.count = value;\n      this.onSearch();\n    },\n    handleChangePage(value) {\n      this.pageInfo.page_no = value;\n      this.getList();\n    },\n    showExportHistory() {\n      this.isShowExportHistory = true;\n    },\n    closeExportHistory() {\n      this.isShowExportHistory = false;\n    },\n    rowClick({row, column}) {\n      if (column.property === 'sku_id') {\n          this.$store.commit('setActiveTab', { module: 'inventoryDashboard', tab: 'promotion' });\n          this.$store.commit('setSearchForm', {\n          module: 'inventoryDashboard',\n          form: {...this.searchForm, ...this.pageInfo, activeTab: 'promotion'},\n          field: 'promotion'\n        });\n        this.$router.push(`/admin/skuMgt/detail/${row.sku_id}?originPath=inventory`);\n      }\n    }\n  },\n  created() {\n    if (Object.keys(this.form).length) {\n      if (this.form.activeTab === 'promotion') {\n          this.searchForm = { ...this.searchForm, ...this.form };\n          this.$delete(this.searchForm, 'activeTab');\n        }\n        this.pageInfo.page_no = this.form.page_no || 1;\n        this.pageInfo.count = this.form.count;\n    }\n    this.getList();\n  }\n};\n</script>>\n<style lang=\"scss\">\n\n</style>\n<style lang=\"scss\" scoped>\n.promotion-reserved {\n  padding: 0 20px;\n  .right-action-btn{\n    text-align: end;\n  }\n  .pagination-center {\n    display: flex;\n    justify-content: center;\n    margin-top: 20px;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/layout/Layout.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"layout\" is not PascalCase.","line":14,"column":9,"nodeType":"Literal","endLine":14,"endColumn":17,"fix":{"range":[306,312],"text":"Layout"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div class=\"app-wrapper\">\n    <sidebar v-if=\"!isMobile\" class=\"sidebar-container-wrapper\"></sidebar>\n    <div class=\"main-container\">\n      <app-main></app-main>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { Sidebar, AppMain } from '@/views/layout/components';\n\nexport default {\n  name: 'layout',\n  components: {\n    Sidebar,\n    AppMain\n  },\n  computed: {\n    isMobile() {\n      return /(android|ios|phone|mobile)/i.test(navigator.userAgent);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  .app-wrapper {\n    display: flex;\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    overflow: hidden;\n    .main-container {\n      flex: 1;\n      transition: margin-left 0.28s;\n      overflow-x: hidden;\n      overflow-y: auto;\n    }\n    // 侧边栏\n    .sidebar-container-wrapper {\n      width: 248px;\n      height: 100%;\n    }\n  }\n\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/layout/components/AppMain.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/layout/components/Navbar.vue","messages":[{"ruleId":"vue/no-unused-components","severity":2,"message":"The \"Hamburger\" component has been registered but not used.","line":33,"column":5,"nodeType":"Property","endLine":33,"endColumn":14}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-menu class=\"navbar\" mode=\"horizontal\">\n    <breadcrumb class=\"breadcrumb-container\"></breadcrumb>\n    <div class=\"right-menu\">\n      <lang-select class=\"international right-menu-item\"></lang-select>\n      <el-dropdown class=\"avatar-container\" trigger=\"click\">\n        <div class=\"avatar-wrapper\">\n          <span class='user-name'>{{username}}</span>\n          <i class=\"el-icon-caret-bottom\"></i>\n        </div>\n        <el-dropdown-menu class=\"user-dropdown\" slot=\"dropdown\">\n          <router-link class=\"inlineBlock\" to=\"/admin\">\n            <el-dropdown-item>{{$t('navbarDashboard')}}</el-dropdown-item>\n          </router-link>\n          <el-dropdown-item divided>\n            <div @click=\"logout\">{{$t('navbarLogout')}}</div>\n          </el-dropdown-item>\n        </el-dropdown-menu>\n      </el-dropdown>\n    </div>\n  </el-menu>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\nimport Breadcrumb from '@/components/Breadcrumb';\nimport Hamburger from '@/components/Hamburger';\nimport LangSelect from '@/components/LangSelect';\n\nexport default {\n  components: {\n    Breadcrumb,\n    Hamburger,\n    LangSelect\n  },\n  computed: {\n    ...mapGetters([\n      'sidebar',\n      'avatar',\n      'username'\n    ])\n  },\n  methods: {\n    logout() {\n      this.$store.dispatch('LogOut').then(() => {\n        window.location.reload();\n      }).catch(() => {\n        this.$message.error('server error');\n        setTimeout(() => {\n          window.location.reload();\n        }, 1000);\n      });\n    }\n  }\n};\n</script>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\n.navbar {\n  &.el-menu {\n    height: 56px;\n    border-bottom: 2px solid #ebebeb;\n    background-color: #fff;\n    line-height: 56px;\n    border-radius: 0px !important;\n    .breadcrumb-container{\n      float: left;\n    }\n    .errLog-container {\n      display: inline-block;\n      vertical-align: top;\n    }\n    .right-menu {\n      float: right;\n      height: 100%;\n      &:focus{\n      outline: none;\n      }\n      .right-menu-item {\n        display: inline-block;\n        margin: 0 8px;\n      }\n      .screenfull {\n        height: 20px;\n      }\n      .international{\n        vertical-align: top;\n      }\n      .theme-switch {\n        vertical-align: 15px;\n      }\n      .avatar-container {\n        height: 50px;\n        margin-right: 30px;\n        .avatar-wrapper {\n          cursor: pointer;\n          // margin-top: 5px;\n          position: relative;\n          .user-name {\n            display: inline-block;\n            vertical-align: middle;\n            margin-top: -5px;\n          }\n          .el-icon-caret-bottom {\n            position: absolute;\n            right: -20px;\n            top: 25px;\n            font-size: 12px;\n          }\n        }\n      }\n    }\n  }\n}\n.breadcrumb {\n  height: 58px;\n  line-height: 58px;\n  border-bottom: 1px solid #ebebeb;\n  background-color: #fff;\n  padding: 0 15px;\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/layout/components/Sidebar/SidebarItem.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/layout/components/Sidebar/index.vue","messages":[{"ruleId":"vue/no-deprecated-destroyed-lifecycle","severity":2,"message":"The `beforeDestroy` lifecycle hook is deprecated. Use `beforeUnmount` instead.","line":58,"column":3,"nodeType":"Identifier","messageId":"deprecatedBeforeDestroy","endLine":58,"endColumn":16,"suggestions":[{"messageId":"insteadBeforeUnmount","fix":{"range":[2002,2015],"text":"beforeUnmount"},"desc":"Instead, change to `beforeUnmount`."}]}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"scroll-bar-wrapper\" :style=\"{ width: isCollapse ? '58px':'241px'}\">\n    <div class=\"logo-wrapper\" :style=\"{ width: isCollapse ? '57px':'240px'  }\">\n      <div class=\"shopee-logo\" :style=\"{ width: !isCollapse ?'122px' : '24px'}\"/>\n      <SearchInput :routes=\"permissionRouters\" class=\"search-wrapper\" v-if=\"!isCollapse\"></SearchInput>\n    </div>\n    <s-menu\n      :accordion=\"true\"\n      :no-indent=\"true\"\n      ref=\"smenu\"\n      class=\"menu-wrapper\"\n      :style=\"{ marginTop: isCollapse ? '60px':'100px'  }\"\n      :collapse=\"isCollapse\"\n      background-color=\"#FFF\"\n      text-color=\"#303844\"\n      sub-menu-border-color=\"#ECF0F4\"\n      active-cursor-color=\"#EE4D2D\"\n      sub-menu-text-color=\"#303844\"\n      active-text-color=\"#EE4D2D\"\n      active-sub-menu-color=\"#ffff\"\n      active-menu-item-color=\"#FFF5F0\"\n      hover-sub-menu-color=\"#F5F6F9\"\n      hover-menu-item-color=\"#F5F6F9\"\n      active-sub-menu-text-color=\"#303844\"\n      sub-menu-collapse-border-color=\"#ECF0F4\"\n      :default-active-name=\"defaultActiveName\"\n      :default-opened-names=\"defaultOpenedNames\"\n    >\n      <!-- #EE4D2D 橘色  #F5F6F9 浅灰色 #303844 黑色 #FFF 白色-->\n      <sidebar-item :routes=\"permissionRouters\" :isCollapse=\"isCollapse\"></sidebar-item>\n    </s-menu>\n    <div class=\"bottom-btn-wrapper\" :style=\"{ width: isCollapse ? '58px':'241px', 'text-align':  isCollapse ? 'center':'right' }\">\n      <svg-icon iconClass=\"collapse\" class=\"toggle-icon\" :class=\"{ 'rotate': isCollapse }\" @click=\"onToggleMenu\"></svg-icon>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\nimport SidebarItem from './SidebarItem';\nimport SearchInput from './searchInput';\nexport default {\n  components: { SidebarItem, SearchInput },\n  data() {\n    return {\n      isCollapse: false,\n      defaultActiveName: '',\n      defaultOpenedNames: []\n    };\n  },\n\n  computed: {\n    ...mapGetters(['permissionRouters', 'sidebar'])\n  },\n  boxWidth() {\n    return this.isCollapse ? '58px' : '248px';\n  },\n  beforeDestroy() {\n    window.removeEventListener('resize', this.handleResize);\n  },\n  watch: {\n    $route(to, from) {\n      this.setMenuOpenItemByRoute(to);\n    }\n  },\n  created() {\n    window.addEventListener('resize', this.handleResize);\n    this.setMenuOpenItemByRoute(this.$route);\n  },\n  methods: {\n    findActiveRouteMenuNames() {\n      const routeName = this.$route.name;\n      let result = {}; // 外部放一个变量用来存放结果\n      function calcArrFun(arr = []) {\n        if ((arr || []).find(item => item.name === routeName)) {\n          // 先假设找到结果\n          result = (arr || []).find(item => item.name === routeName);\n        } else {\n          // 找不到结果就for循环递归调用本身\n          for (let i = 0; i < arr.length; i++) {\n            calcArrFun(arr[i].children);\n          }\n        }\n      }\n      calcArrFun(this.permissionRouters);\n      if (result.meta && result.meta.parentName) {\n        return `${this.$route.matched.slice(0, this.$route.matched.length - 1).map(item => item.name).join(',')},${result.meta.parentName}`; // 详情页菜单自动定位到对应的列表页\n      } else {\n        return this.$route.matched.map(item => item.name).join(','); // 配置三级页面增加的\n      }\n    },\n    setMenuOpenItemByRoute(route) {\n      const matchedRouteNames = this.findActiveRouteMenuNames();\n      // const matchedRouteNames = (route.matched || []).map(item => item.name).join(',')\n      this.onOpenMenu(matchedRouteNames);\n    },\n    onToggleMenu() {\n      this.isCollapse = !this.isCollapse;\n    },\n    handleResize() {\n      this.$forceUpdate();\n    },\n    onOpenMenu(names) {\n      const namesList = names ? names.split(',') : [];\n      this.defaultActiveName = namesList[namesList.length - 1];\n      this.defaultOpenedNames = namesList;\n      if (this.$refs.smenu) {\n        this.$nextTick(() => {\n          this.$refs.smenu.updateOpenedSubmenus();\n          this.$refs.smenu.updateActiveName();\n        });\n        // 不想用nexttick的话就直接下面两个方法加上上面updateOpenedSubmenus，updateActiveName 四个方法连用\n        // this.$refs.smenu.onActiveNameChanged(namesList[namesList.length - 1])\n        // this.$refs.smenu.onOpenedNamesChanged(namesList)\n      }\n    }\n  }\n};\n</script>\n\n<style scoped lang=\"scss\">\n.scroll-bar-wrapper {\n  background-color: #fff;\n  transition: width 0.28s;\n  border-right: 1px solid#ECF0F4;\n  overflow-y: auto;\n  &::-webkit-scrollbar {\n    display: none; /* Chrome Safari */\n  }\n}\n.menu-wrapper{\n  margin-bottom: 42px;\n}\n.search-wrapper {\n  padding: 16px 12px 0;\n  background-color: #fff;\n}\n.logo-wrapper {\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 2;\n  width: 248px;\n  height: 56px;\n  padding: 16px 0;\n  text-align: center;\n  background-color: #fff;\n  z-index: 3;\n  .shopee-logo {\n    width: 122px;\n    height: 24px;\n    background: url('~@/assets/pms-logo.png');\n    background-size: cover;\n    margin: auto;\n  }\n}\n.bottom-btn-wrapper{\n  position: fixed;\n  left:0;\n  bottom:0;\n  padding: 9px 16px;\n  border-top: 1px solid#ECF0F4;\n  border-right: 1px solid#ECF0F4;\n  background-color: #fff;\n  z-index: 2;\n  text-align: right;\n  width: 248px;\n  .toggle-icon{\n    width: 14px;\n    height: 14px;\n    cursor: pointer;\n    fill: #303844;\n    vertical-align: middle;\n    transition:  all 0.3s;\n    &.rotate {\n       transform: rotate(180deg);\n    }\n  }\n\n}\n\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/layout/components/Sidebar/searchInput.vue","messages":[{"ruleId":"vue/no-parsing-error","severity":2,"message":"Parsing error: control-character-in-input-stream.","line":38,"column":20,"nodeType":"VElement"}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div @mouseleave=\"onMouseLeave\">\n    <s-input\n      v-model=\"searchText\"\n      class=\"search-input\"\n      ref=\"sInput\"\n      @focus=\"onFocusSearchBox\"\n      @input=\"onInputSearchBox\"\n    >\n      <template v-slot:prefix>\n        <svg-icon iconClass=\"search\" className=\"search-icon\"></svg-icon>\n      </template>\n    </s-input>\n    <ul class=\"search-tips-box\" v-if=\"isShowSearchTips\">\n      <li class=\"search-tips-item color-grey\" v-if=\"loading\">{{ $t('commonLoading') }}...</li>\n      <template v-else-if=\"searchList.length\">\n        <li class=\"search-tips-item\" v-for=\"item in searchList\" :key=\"item.path + item.name\" @click=\"onClickItem(item)\">\n          {{ generateTitle(item.title) }}\n        </li>\n      </template>\n      <template v-else-if=\"historyList.length && searchText.trim() === ''\">\n        <li class=\"search-tips-item flex-box\" v-for=\"item in historyList\" :key=\"item.path + item.name\" @click=\"onClickItem(item)\">\n          <svg-icon iconClass=\"timer\" class=\"history-icon\"></svg-icon>\n          {{ generateTitle(item.title) }}\n        </li>\n        <li class=\"clear-item\">\n          <span class=\"clear-btn\" @click=\"onClearHistory\">{{ $t('commonClear') }}</span>\n        </li>\n      </template>\n\n      <li v-else class=\"search-tips-item color-grey\">{{ $t('commonNoResult') }}</li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport { generateTitle } from '@/utils/i18n';\nconst ModuleKey = 'M\bENU_SEARCH_HISTORY';\nexport default {\n  props: {\n    routes: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      isShowSearchTips: false,\n      loading: false,\n      searchText: '',\n      searchList: [],\n      historyList: []\n    };\n  },\n  computed: {\n    tieldRoutes() {\n      // 平铺展开routes\n      const routes = JSON.parse(JSON.stringify(this.routes));\n      return this.tieldList(this.filterHiddenRoute(routes));\n    }\n  },\n  methods: {\n    onMouseLeave() {\n      this.setSearchTipsStatus(false);\n      this.$refs.sInput && this.$refs.sInput.blur();\n    },\n    tieldList(list) {\n      const result = [];\n      function formatList(arr) {\n        arr.forEach(item => {\n          if (Array.isArray(item)) {\n            formatList(item);\n          } else {\n            result.push(item);\n          }\n        });\n      }\n      formatList(list);\n      return result;\n    },\n    filterHiddenRoute(routes = [], parentPath = '', parentName = '') {\n      if (!Array.isArray(routes)) return [];\n      const list = routes.filter(item => !item.hidden);\n      return list.map(item => {\n        const path = parentPath ? `${parentPath}/${item.path}` : item.path;\n        const name = parentName ? `${parentName},${item.name}` : item.name;\n        if (Array.isArray(item.children) && item.children.length) {\n          return this.filterHiddenRoute(item.children, path, name);\n        } else {\n          return { path, name, title: (item.meta && item.meta.title) || '' };\n        }\n      });\n    },\n    onFocusSearchBox(event) {\n      this.setSearchTipsStatus(true);\n      if (this.searchText.trim() === '') {\n        this.getUserSearchHistory();\n      }\n    },\n    setSearchTipsStatus(flag) {\n      this.isShowSearchTips = flag;\n    },\n    generateTitle,\n    onInputSearchBox(value) {\n      if (value.trim() !== '') {\n        this.searchList = this.tieldRoutes\n          .filter(item => this.generateTitle(item.title).toLocaleLowerCase().includes(value.toLocaleLowerCase()))\n          .slice(0, 6);\n      } else {\n        this.searchList = [];\n      }\n    },\n    onClearHistory() {\n      this.historyList = [];\n      this.setUserSearchHistory([]);\n    },\n    updateHistory(target) {\n      if (this.historyList.find(item => item.path === target.path)) {\n        return;\n      }\n      this.historyList.splice(0, 0, target);\n      if (this.historyList.length > 6) {\n        this.historyList.pop();\n      }\n      this.setUserSearchHistory(this.historyList);\n    },\n    onClickItem(item) {\n      this.updateHistory(item);\n      if (this.$route.path === item.path) {\n        this.onMouseLeave();\n        return;\n      }\n      this.$router.push(item.path);\n      this.$emit('open', item.name);\n      this.setSearchTipsStatus(false);\n    },\n    getUserSearchHistory() {\n      this.loading = true;\n      const userID = this.$store.getters.userID;\n      const key = `${ModuleKey}-${userID}`;\n      this.$store\n        .dispatch('getUserSetting', [key])\n        .then(data => {\n          const settings = (data || {})[key];\n          if (settings && typeof settings === 'string') {\n            const userSetting = JSON.parse(settings);\n            if (Array.isArray(userSetting)) {\n              this.historyList = userSetting;\n            }\n          }\n        })\n        .catch(() => {\n          this.$message.error('Get user setting failed!');\n        })\n        .finally(() => {\n          this.loading = false;\n        });\n    },\n    setUserSearchHistory(list) {\n      this.loading = true;\n      const userID = this.$store.getters.userID;\n      const params = {\n        business_key: `${ModuleKey}-${userID}`,\n        business_value: JSON.stringify(list)\n      };\n      this.$store\n        .dispatch('setUserSetting', [params])\n        .catch(() => {\n          this.$message.error('Set user setting failed!');\n        })\n        .finally(() => {\n          this.loading = false;\n        });\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.search-input {\n  width: 100%;\n}\n.search-tips-box {\n  margin-top: 4px;\n  background: #ffffff;\n  box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.12);\n  border-radius: 2px;\n  color: #646b76;\n  line-height: 16px;\n  font-size: 14px;\n  text-align: left;\n  max-height: 300px;\n  overflow: auto;\n  z-index: 40;\n  .search-tips-item {\n    padding: 8px 12px;\n    line-height: inherit;\n    cursor: pointer;\n    &:hover {\n      background-color: #f5f6f9;\n    }\n    &.color-grey {\n      color: #B5BBC6;\n    }\n    .history-icon {\n      width: 14px;\n      height: 14px;\n      fill: #959BA4;\n      margin-right: 4px;\n      margin-top: 2px;\n    }\n  }\n  .clear-item {\n    padding: 8px 12px;\n    line-height: inherit;\n    text-align: right;\n    .clear-btn {\n      color: #3274F7;\n      cursor: pointer;\n    }\n  }\n  .flex-box{\n    display: flex;\n\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/layout/components/index.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/login/authredirect.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/login/index-srm.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":20,"column":64,"nodeType":"VIdentifier","messageId":"deprecated","endLine":20,"endColumn":70},{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":26,"column":98,"nodeType":"VIdentifier","messageId":"deprecated","endLine":26,"endColumn":104},{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":27,"column":95,"nodeType":"VIdentifier","messageId":"deprecated","endLine":27,"endColumn":101},{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"login\" is not PascalCase.","line":40,"column":9,"nodeType":"Literal","endLine":40,"endColumn":16,"fix":{"range":[1648,1653],"text":"Login"}}],"errorCount":4,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div class=\"login-container\">\n    <el-form class=\"login-form\" autoComplete=\"on\" :model=\"loginForm\" :rules=\"loginRules\" ref=\"loginForm\" label-position=\"left\">\n      <div class=\"title-container\">\n        <h3 class=\"title\">{{$t('login.title')}}</h3>\n        <lang-select class=\"set-language\"></lang-select>\n      </div>\n\n      <el-form-item prop=\"username\">\n        <span class=\"svg-container svg-container_login\">\n          <svg-icon icon-class=\"user\" />\n        </span>\n        <el-input name=\"username\" type=\"text\" v-model=\"loginForm.username\" autoComplete=\"on\" placeholder=\"username\" />\n      </el-form-item>\n\n      <el-form-item prop=\"password\">\n        <span class=\"svg-container\">\n          <svg-icon icon-class=\"password\"></svg-icon>\n        </span>\n        <el-input name=\"password\" :type=\"pwdType\" @keyup.enter.native=\"handleLogin\" v-model=\"loginForm.password\" autoComplete=\"on\" placeholder=\"password\"></el-input>\n        <span class=\"show-pwd\" @click=\"showPwd\">\n          <svg-icon icon-class=\"eye\" />\n        </span>\n      </el-form-item>\n\n      <el-button type=\"primary\" style=\"width:100%;margin-bottom:30px;\" :loading=\"loading\" @click.native.prevent=\"handleLogin\">{{$t('login.login')}}</el-button>\n      <el-button type=\"primary\" style=\"width:100%;margin-left:0px;\" :loading=\"loading\" @click.native.prevent=\"handleLoginWithGoogle\">{{$t('login.loginWithGoogle')}}</el-button>\n\n    </el-form>\n  </div>\n</template>\n\n<script>\nimport { validateUsername } from '@/utils/validate';\nimport LangSelect from '@/components/LangSelect';\nimport { getAuthUrl } from '@/api/login';\n\nexport default {\n  components: { LangSelect },\n  name: 'login',\n  data() {\n    return {\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      loginRules: {\n        username: [\n          { required: true, trigger: 'blur', validator: validateUsername },\n          { trigger: 'blur', min: 5, max: 64, message: 'Length should between 5 and 64' }\n        ],\n        password: [{ required: true, trigger: 'blur', min: 5, max: 32, message: 'Length should between 5 and 32' }]\n      },\n      loading: false,\n      pwdType: 'password'\n    };\n  },\n  methods: {\n    showPwd() {\n      if (this.pwdType === 'password') {\n        this.pwdType = '';\n      } else {\n        this.pwdType = 'password';\n      }\n    },\n    handleLogin() {\n      this.$refs.loginForm.validate(valid => {\n        if (valid) {\n          this.loading = true;\n          this.$store.dispatch('Login', this.loginForm).then(() => {\n            this.loading = false;\n            const originUrl = sessionStorage.getItem('originUrl');\n            if (originUrl) {\n              this.$router.push({ path: originUrl });\n              sessionStorage.clear('originUrl');\n            } else {\n              this.$router.push({ path: '/admin' });\n            }\n          }).catch(() => {\n            this.loading = false;\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    handleLoginWithGoogle() {\n      const redirectUrl = window.location.origin + '/authredirect';\n      getAuthUrl(redirectUrl).then(resp => {\n        if (resp.status !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          const authUrl = resp.data['auth_url'];\n          window.location.href = authUrl;\n        }\n      });\n    }\n  }\n};\n</script>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\">\n$bg:#2d3a4b;\n$light_gray:#eee;\n\n/* reset element-ui css */\n.login-container {\n  .el-input {\n    display: inline-block;\n    height: 47px;\n    width: 85%;\n    input {\n      background: transparent;\n      border: 0px;\n      -webkit-appearance: none;\n      border-radius: 0px;\n      padding: 12px 5px 12px 15px;\n      color: $light_gray;\n      height: 47px;\n      &:-webkit-autofill {\n        -webkit-box-shadow: 0 0 0px 1000px $bg inset !important;\n        -webkit-text-fill-color: #fff !important;\n      }\n    }\n  }\n  .el-form-item {\n    border: 1px solid rgba(255, 255, 255, 0.1);\n    background: rgba(0, 0, 0, 0.1);\n    border-radius: 5px;\n    color: #454545;\n  }\n}\n</style>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\n$bg:#2d3a4b;\n$dark_gray:#889aa4;\n$light_gray:#eee;\n\n.login-container {\n  position: fixed;\n  height: 100%;\n  width: 100%;\n  background-color: $bg;\n  .login-form {\n    position: absolute;\n    left: 0;\n    right: 0;\n    width: 520px;\n    padding: 35px 35px 15px 35px;\n    margin: 120px auto;\n  }\n  .tips {\n    font-size: 14px;\n    color: #fff;\n    margin-bottom: 10px;\n    span {\n      &:first-of-type {\n        margin-right: 16px;\n      }\n    }\n  }\n  .svg-container {\n    padding: 6px 5px 6px 15px;\n    color: $dark_gray;\n    vertical-align: middle;\n    width: 30px;\n    display: inline-block;\n    &_login {\n      font-size: 20px;\n    }\n  }\n  .title-container {\n    position: relative;\n    .title {\n      font-size: 26px;\n      font-weight: 400;\n      color: $light_gray;\n      margin: 0px auto 40px auto;\n      text-align: center;\n      font-weight: bold;\n    }\n    .set-language {\n      color: #fff;\n      position: absolute;\n      top: 5px;\n      right: 0px;\n    }\n  }\n  .show-pwd {\n    position: absolute;\n    right: 10px;\n    top: 7px;\n    font-size: 16px;\n    color: $dark_gray;\n    cursor: pointer;\n    user-select: none;\n  }\n  .thirdparty-button {\n    position: absolute;\n    right: 35px;\n    bottom: 28px;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/login/index.vue","messages":[{"ruleId":"vue/valid-template-root","severity":2,"message":"The template requires child element.","line":1,"column":1,"nodeType":"VElement","endLine":3,"endColumn":12}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n\n</template>\n\n<script>\nexport default {\n  created() {\n    window.location.href = '/login';\n  }\n};\n</script>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/marketingCenter/CFS.vue","messages":[{"ruleId":"vue/no-deprecated-filter","severity":2,"message":"Filters are deprecated.","line":14,"column":38,"nodeType":"VFilterSequenceExpression","messageId":"noDeprecatedFilter","endLine":14,"endColumn":68},{"ruleId":"vue/no-unused-components","severity":2,"message":"The \"tabsHeader\" component has been registered but not used.","line":68,"column":31,"nodeType":"Property","endLine":68,"endColumn":41},{"ruleId":"vue/no-unused-components","severity":2,"message":"The \"ListView\" component has been registered but not used.","line":68,"column":83,"nodeType":"Property","endLine":68,"endColumn":91}],"errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n    <el-container class='promotion-wrapper pms-ui'>\n      <page-header :createHidden=\"!canOperate\" :pageTitle=\"$t('menuCFS')\" :createBtnText=\"$t('newCampaign')\" @onCreate=\"onCreate\"></page-header>\n      <el-main class=\"main-wrapper\">\n        <search-form :moduleName=\"moduleName\" :form=\"searchForm\" :searchSchemaFields=\"searchSchemaFields\" @modify=\"modifyForm\" @search=\"onResetPageNoSearch\" :firstShowCount=\"7\"></search-form>\n        <div class=\"split-line\"></div>\n        <el-table :data='tableList' border v-loading=\"loading\" @row-click=\"rowClick\" ref=\"multipleTable\">\n          <el-table-column prop=\"region\" :label=\"$t('commonRegion')\" align=\"left\"></el-table-column>\n          <el-table-column prop=\"campaign_name\" :label=\"$t('commonCampaignName')\" align=\"left\"></el-table-column>\n          <el-table-column :label=\"$t('promotionCampaignTime')\" min-width=\"170px\" align=\"left\">\n            <template slot-scope=\"scope\">\n              <p class=\"table-time-style\">{{moment(scope.row.campaign_start_time_str).format('YYYY-MM-DD HH:mm') || ''}}</p>\n              <p class=\"table-time-style\">{{moment(scope.row.campaign_end_time_str).format('YYYY-MM-DD HH:mm') || ''}}</p>\n              <p class=\"time-zone\">{{scope.row.region | getTimeZone}}</p>\n            </template>\n          </el-table-column>\n          <el-table-column align=\"left\"  :label=\"$t('commonStatus')\" width=\"100px\">\n            <template slot-scope=\"scope\">\n              <p>{{getSattus(scope.row.campaign_status)}}</p>\n            </template>\n          </el-table-column>\n          <el-table-column :label=\"$t('commonLabelCreator')\" prop=\"creator\" align=\"left\" min-width=\"170\"></el-table-column>\n          <el-table-column :label=\"$t('userRole.userList.action')\" width=\"240px\" column-key=\"action\" align=\"left\">\n            <template slot-scope=\"scope\">\n              <el-button type=\"text\" class=\"text-blue-btn\" @click=\"showHistoryDialog(scope.row)\">{{$t('commonHistory')}}</el-button>\n              <el-button type=\"text\" class=\"cancel-btn\" v-if=\"canOperate && scope.row.can_cancel\" @click=\"cancelCampaign(scope.row)\">{{$t('commonCancel')}}</el-button>\n            </template>\n          </el-table-column>\n          <el-table-column :label=\"$t('marketingCenter.nominate')\" width=\"108px\" column-key=\"nomination\" v-if=\"canNomiation\" align=\"left\">\n            <template slot-scope=\"scope\">\n              <el-button class=\"list-btn success-btn\" v-if=\"canShowNomination(scope.row)\" @click=\"onNomination(scope.row.id)\">{{$t('marketingCenter.nominate')}}</el-button>\n            </template>\n          </el-table-column>\n          <el-table-column v-if=\"canViewNomiation\" column-key=\"viewNomination\" align=\"left\" width=\"160\">\n            <template slot-scope=\"scope\">\n              <el-button type=\"text\" class=\"list-btn text-blue-btn\" v-if=\"scope.row.has_nomination\" @click=\"onViewNomination(scope.row.id)\">{{$t('marketingCenter.viewNomination')}}</el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n        <section class='pagination-center'>\n          <el-pagination background layout=\"sizes, prev, pager, next\" :current-page='pager.page_no' :page-sizes='[10, 20, 50, 100]' :total.sync=\"total\" :page-size=\"pager.count\" @size-change='handleSizeChange' @current-change=\"handleChangePage\"></el-pagination>\n        </section>\n      </el-main>\n      <history-diaglog :visible=\"historyVisible\" :activeID=\"activeData.id || 0\" @close=\"closeHistoryDialog\" ></history-diaglog>\n      <create-dialog :create_mode=\"create_mode\" :modifyData=\"activeData\" @refresh=\"onResetPageNoSearch\" :visible=\"createVisible\" :canOperate=\"canOperate\"\n       :campaignType=\"CampaignType\" :region=\"searchForm.region\" @close=\"() => onSetCreateVisible(false)\" @modify=\"modifyDetail\"/>\n    </el-container>\n</template>\n\n<script>\nimport { formatParams } from '@/utils/formatParams';\nimport { commonFetchAction } from '@/utils';\nimport { Permission, ProductPromotionCampaignStatusList, TimeZoneByCountry } from '@/utils/constant';\nimport { getCampaignList, cancelCampaign } from '@/api/marketingCenter';\nimport createDialog from '@/components/marketingCenter/createDialog/promotion';\nimport historyDiaglog from '@/components/marketingCenter/historyDialog/promotion';\nimport tabsHeader from '@/components/tabsHeader';\nimport moment from 'moment';\nimport { hasPermission } from '@/utils/permission';\nimport PageHeader from '@/components/marketingCenter/pageHeader';\nimport SearchForm from '@/components/marketingCenter/searchForm/Index';\nimport ListView from '@/components/ApproveList/list';\n\nconst CampaignType = 2;\nconst moduleName = 'CFS';\n\nexport default {\n  components: { createDialog, tabsHeader, historyDiaglog, PageHeader, SearchForm, ListView },\n  data() {\n    return {\n      moduleName,\n      canOperate: false, // cancel modify create\n      canViewNomiation: false, // view /view nominate /export\n      canNomiation: false, // nominate / edit nominate\n      createVisible: false,\n      create_mode: 2, // 0-create, 1-modify, 2-view,\n      CampaignType,\n      searchForm: {\n        campaign_name: '',\n        campaign_start_time_str: '',\n        campaign_end_time_str: '',\n        region: this.$store.getters.country,\n        campaign_time: [],\n        campaign_status: ''\n      },\n      loading: false,\n      pager: {\n        page_no: 1,\n        count: 10\n      },\n      total: 0,\n      activeID: '',\n      tableList: [],\n      activeData: {},\n      historyVisible: false\n    };\n  },\n  filters: {\n    getTimeZone(region) {\n      return `${TimeZoneByCountry[region]}00`;\n    }\n  },\n  computed: {\n    countryList() {\n      return [...new Set([...this.$store.getters.countryList.map(item => item.country)])].map(item => ({ value: item, label: item }));\n    },\n    searchSchemaFields() {\n      return ['region', 'campaign_name', 'creator', 'campaign_status', 'campaign_time'];\n    },\n    tabStyle() {\n      return {\n        height: '60px'\n      };\n    }\n  },\n  methods: {\n    modifyForm(field, value) {\n      this.$set(this.searchForm, field, value);\n      if (['region', 'campaign_status', 'campaign_time'].includes(field)) {\n        this.onResetPageNoSearch();\n      }\n    },\n    moment,\n    getSattus(status) {\n      const label = (ProductPromotionCampaignStatusList.find(item => item.value === status) || {}).label;\n      return this.$t(label);\n    },\n    onCampaignTimeChange(value) {\n      this.searchForm.campaign_start_time_str = value ? value[0] : '';\n      this.searchForm.campaign_end_time_str = value ? value[1] : '';\n      this.onResetPageNoSearch();\n    },\n    canShowNomination(row) {\n      return row.can_nominate;\n    },\n    modifyDetail() {\n      this.create_mode = 1;\n    },\n    onViewNomination(id = 0) {\n      this.$store.commit('setSearchForm', {\n        module: moduleName,\n        form: { ...this.searchForm, ...this.pager },\n        field: 'searchParams'\n      });\n      this.$router.push(`/admin/marketingCenter/nominateProducts/detail/${id}`);\n    },\n    onNomination(id = 0) {\n      this.$store.commit('setSearchForm', {\n        module: moduleName,\n        form: { ...this.searchForm, ...this.pager },\n        field: 'searchParams'\n      });\n      this.$router.push(`/admin/marketingCenter/nominateProducts/create/${id}`);\n    },\n    showHistoryDialog(row) {\n      this.activeData = row;\n      this.historyVisible = true;\n    },\n    closeHistoryDialog() {\n      this.historyVisible = false;\n    },\n    cancelCampaign(row) {\n      this.$confirm(this.$t('cancelCampaignTip'), this.$t('commonTips'), {\n        confirmButtonText: this.$t('commonConfirm'),\n        cancelButtonText: this.$t('commonClose')\n      }).then(({ value }) => {\n        const params = {\n          id: row.id\n        };\n        cancelCampaign(params).then((res) => {\n          if (res && res.retcode === 0) {\n            this.$message({\n              type: 'success',\n              message: 'Cancel Sucessfully'\n            });\n            this.onSearch();\n          } else {\n            this.$message({\n              type: 'error',\n              message: res.info\n            });\n          }\n        }).catch(e => {\n          this.$message({\n            type: 'error',\n            message: e\n          });\n        });\n      }).catch(e => {});\n    },\n    onCreate() {\n      this.activeData = {};\n      this.create_mode = 0;\n      this.onSetCreateVisible(true);\n    },\n    onSetCreateVisible(flag) {\n      this.createVisible = flag;\n    },\n    onReset() {\n      this.searchForm.campaign_name = '';\n      this.searchForm.campaign_start_time_str = '';\n      this.searchForm.campaign_end_time_str = '';\n      this.searchForm.campaign_time = [];\n    },\n    handleChangePage(page_no) {\n      this.pager.page_no = page_no;\n      this.onSearch();\n    },\n    handleSizeChange(count) {\n      this.pager.count = count;\n      this.pager.page_no = 1;\n      this.onSearch();\n    },\n    onResetPageNoSearch() {\n      this.pager.page_no = 1;\n      this.onSearch();\n    },\n    async onSearch() {\n      const params = {\n        ...this.pager,\n        ...this.searchForm,\n        campaign_start_time_str: this.searchForm.campaign_time ? this.searchForm.campaign_time[0] : '',\n        campaign_end_time_str: this.searchForm.campaign_time ? this.searchForm.campaign_time[1] : '',\n        campaign_type: CampaignType\n      };\n      this.loading = true;\n      try {\n        const res = await getCampaignList(formatParams(params));\n        commonFetchAction(res, (data) => {\n          this.tableList = data.campaign_list || [];\n          this.total = data.total || 0;\n          this.loading = false;\n        });\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n        this.loading = false;\n      }\n    },\n    onView(row) {\n      this.activeData = row;\n      this.create_mode = 2;\n      this.createVisible = true;\n    },\n    rowClick(row, column, event) {\n      if (!['viewNomination', 'action', 'nomination'].includes(column.columnKey)) {\n        this.onView(row);\n      }\n    },\n    // 获取缓存的search\n    getCacheConditionObj() {\n      const cacheConditionObj = this.$store.getters.searchForm[moduleName];\n      if (\n        cacheConditionObj &&\n        cacheConditionObj.searchParams\n      ) {\n        const searchParams = cacheConditionObj.searchParams;\n        this.pager.count = searchParams.count;\n        this.pager.page_no = searchParams.page_no;\n        this.searchSchemaFields.forEach(key => {\n          if (searchParams[key]) {\n            this.searchForm[key] = searchParams[key];\n          }\n        });\n      }\n    }\n  },\n  created() {\n    this.canOperate = hasPermission(Permission.CFS_PROCESS);\n    this.canViewNomiation = hasPermission(Permission.CFS_VIEW);\n    this.canNomiation = hasPermission(Permission.CFS_NOMINATE);\n    this.getCacheConditionObj();\n    this.onSearch();\n  }\n\n};\n</script>\n\n<style scoped lang=\"scss\">\n  .promotion-wrapper{\n    display: block;\n    .main-wrapper{\n      width: 100%;\n      .split-line{\n        border-top: #f1f1f1 solid 2px;\n        padding: 16px 0;\n      }\n    }\n    .pagination-center {\n      display: flex;\n      justify-content: center;\n      margin-top: 20px;\n    }\n    .right-action-btn {\n      float: right;\n    }\n\n    .clear-btn{\n      color: #333333;\n      background: #FFFFFF;\n      border: 1px solid #D9D9D9;\n      border-radius: 2px;\n    }\n  }\n</style>\n<style lang=\"scss\">\n.promotion-wrapper{\n  .small-date-timer{\n    max-width: 175px;\n    width: calc(100% - 180px);\n    min-width: 105px;\n    .el-date-editor.el-input, .el-date-editor.el-input__inner{\n      width: 100%;\n    }\n  }\n  .table-time-style {\n    display: inline-block;\n  }\n  .time-zone{\n    font-family: Helvetica;\n    font-size: 12px;\n    line-height: 21px;\n    color: #999999;\n  }\n  .list-btn{\n    font-size: 14px;\n    width: auto;\n    min-width: 70px;\n    padding-left: 10px;\n    padding-right: 10px;\n  }\n  .success-btn{\n    color: #3D6ED1;\n    background-color:transparent;\n    border: 1px solid #3D6ED1;\n  }\n  .text-blue-btn{\n    background-color:transparent;\n    color: #3D6ED1;\n  }\n  .cancel-btn {\n    color: #F56C6C;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/marketingCenter/autoTaskReport/constant.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/marketingCenter/autoTaskReport/historyLogDialog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/marketingCenter/autoTaskReport/index.vue","messages":[{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":276,"column":23,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":276,"endColumn":24,"fix":{"range":[9261,9262],"text":""}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div class=\"pms-new-ui pms-ui auto-task-wrapper\">\n    <section class=\"auto-task-header\">\n      <div class=\"header-title\">{{$t('priceChangeAutoTaskReport')}}</div>\n    </section>\n    <section class=\"section-region\">\n      <list-search\n        :components=\"components.slice(0, 1)\"\n        class=\"block-region\"\n        :searchForm=\"searchForm\"\n        @change=\"onChangeSearchForm\"\n      ></list-search>\n    </section>\n    <h4 class=\"sub-header overview-header\">{{$t('priceChangeOverview')}}</h4>\n    <div class=\"overview-wrapper\">\n      <div class=\"overview-item\"><span class=\"overview-count\">{{total}}</span>{{$t('priceChangeTotal')}}</div>\n      <div class=\"overview-item\"><span class=\"overview-count\">{{failedCount}}</span>{{$t('priceChangeFailed')}}</div>\n      <div class=\"overview-item\"><span class=\"overview-count\">{{processingCount}}</span>{{$t('priceChangeInProgress')}}</div>\n      <div class=\"overview-item\"><span class=\"overview-count\">{{doneCount}}</span>{{$t('priceChangeDone')}}</div>\n    </div>\n    <h4 class=\"sub-header\">{{$t('priceChangeReportDetail')}}</h4>\n    <section class=\"section-block\">\n      <listSearch\n        class=\"block-item no-border-label\"\n        :components=\"components.slice(1)\"\n        :searchForm=\"searchForm\"\n        @change=\"onChangeSearchForm\"\n      ></listSearch>\n      <div>\n        <el-button class=\"list-btn light-btn clear-btn\" @click=\"handleClear\">{{$t('commonClear')}}</el-button>\n        <el-button @click=\"handleSearch\">{{$t('commonSearch')}}</el-button>\n      </div>\n    </section>\n    <section class=\"export-action\">\n      <el-button class=\"white-blue\" @click=\"handleMassReport\">{{$t('priceChangeMassDownloadReport')}}</el-button>\n      <el-button class=\"white-blue\" @click=\"showExportHistory\">{{$t('commonExportHistory')}}</el-button>\n    </section>\n    <list-view\n      :tableSchema=\"tableSchema\"\n      :dataList=\"dataList\"\n      :config=\"tableConfig\"\n      @selectionChange=\"selectionChange\"\n      @FilterChange=\"FilterChange\"\n      v-loading=\"loading\"\n    >\n    </list-view>\n    <div class=\"content-center padding-top-bottom\">\n      <el-pagination\n        :current-page=\"pageNo\"\n        :page-sizes=\"[10, 20, 50, 100]\"\n        background\n        layout=\"sizes, prev, pager, next\"\n        :total.sync=\"total\"\n        :page-size=\"pageSize\"\n        @current-change=\"handleCurrentPageChange\"\n        @size-change=\"handleSizeChange\"\n      ></el-pagination>\n    </div>\n    <export-history-dialog\n      :needErrorFile=\"true\"\n      :interval=\"15000\"\n      :taskType=\"31\"\n      :visible=\"isShowExportHistory\"\n      :getFileName=\"getFileName\"\n      @close=\"closeExportHistory\">\n    </export-history-dialog>\n    <history-log-dialog\n      :visible=\"historyLogVisible\"\n      :taskId=\"logTaskId\"\n      @close=\"historyLogVisible = false\"\n    ></history-log-dialog>\n  </div>\n</template>\n\n<script>\nimport ListSearch from '@/components/common/listSearch';\nimport ListView from '@/components/ApproveList/list';\nimport ExportHistoryDialog from '@/components/ApproveList/exportHistoryDialog';\nimport HistoryLogDialog from './historyLogDialog';\nimport { statusMap } from './constant';\nimport { fetchAutoTaskList, asyncExport, retryTask } from '@/api/autoTaskReport';\nimport { formatParams } from '@/utils/formatParams';\nimport { hasPermission } from '@/utils/permission';\nimport { Permission, getContentType } from '@/utils/constant';\n\nexport default {\n  props: {\n  },\n  data() {\n    return {\n      searchForm: {\n        region: '',\n        task_id: '',\n        subject_name: '',\n        status: undefined\n      },\n      canCheckReport: false,\n      canRerun: false,\n      task_code: 'BKPromo',\n      pageNo: 1,\n      pageSize: 10,\n      total: 0,\n      doneCount: 0,\n      processingCount: 0,\n      failedCount: 0,\n      loading: false,\n      historyLogVisible: false,\n      checkedRowKeys: [],\n      logTaskId: '',\n      isShowExportHistory: false,\n      dataList: [],\n      tableConfig: { showCheckBox: true, align: 'left', selectable: this.selectable },\n      components: [\n        {\n          name: 'listSelect',\n          isLongCol: false,\n          props: {\n            field: 'region',\n            label: this.$t('commonRegion'),\n            clearable: true,\n            options: [{ value: '', label: 'All' }, ...this.$store.getters.countrySelectList]\n          }\n        },\n        {\n          name: 'listInput',\n          isLongCol: false,\n          props: {\n            label: this.$t('priceChangeTaskId'),\n            field: 'task_id',\n            placeholder: this.$t('priceChangePleaseInput'),\n            clearable: true\n          }\n        },\n        {\n          name: 'listInput',\n          isLongCol: false,\n          props: {\n            label: this.$t('priceChangeTaskPromotionName'),\n            field: 'subject_name',\n            placeholder: this.$t('priceChangePleaseInput'),\n            clearable: true\n          }\n        }\n      ]\n    };\n  },\n  components: {\n    ListSearch,\n    ListView,\n    ExportHistoryDialog,\n    HistoryLogDialog\n  },\n  computed: {\n    tableSchema() {\n      return [\n        {\n          columnKey: 'region',\n          field: 'region',\n          label: this.$t('commonRegion'),\n          columnFixed: true,\n          width: '100px'\n        },\n        {\n          columnKey: 'task_id',\n          field: 'task_id',\n          label: this.$t('priceChangeTaskId')\n        },\n        {\n          columnKey: 'subject_name',\n          field: 'subject_name',\n          label: this.$t('priceChangeTaskPromotionName'),\n          render: (schema, row, index, h) => {\n            const { subject_name, subject_id } = row || {};\n            if (subject_id !== '0') {\n              return ['el-button', {\n                props: {\n                  type: 'text'\n                },\n                on: { click: () => { this.$router.push(`/admin/marketingCenter/promotion/black/stock/nominate/detail/${subject_id}`); }}\n              }, [subject_name]];\n            }\n          }\n        },\n        {\n          columnKey: 'current_procedure_name',\n          field: 'current_procedure_name',\n          label: this.$t('priceChangeCurrentProgress'),\n          render: (schema, row, index, h) => {\n            const { current_procedure_name = '', status = 0 } = row || {};\n            if (status === 5) {\n              return (['div', [\n                current_procedure_name,\n                h('div', { class: 'overtime-warning' }, [\n                  h('i', { class: 'el-icon-warning-outline' }, ['Overtime Warning'])\n                ])\n              ]]);\n            } else {\n              return current_procedure_name;\n            }\n          }\n        },\n        {\n          columnKey: 'status',\n          field: 'status',\n          label: this.$t('priceChangeTaskStatus'),\n          filters: this.getTaskStatusFilters(),\n          filterMultiple: false,\n          render: (schema, row, index, h) => {\n            const { status = 0, process_percentage = 0, fail_reason = '', deadline_time = '' } = row || {};\n            if (status === 1 || status === 5) {\n              return (['div', [\n                h('span', ['In Progress']),\n                h('el-progress', {\n                  props: {\n                    percentage: process_percentage\n                }})\n              ]]);\n            } else if (status === 3) {\n              return (['el-tag', { class: 'done-green-tag' }, ['Done']]);\n            } else if (status === 4) {\n              return (['el-popover', { props: {\n                width: 200,\n                placement: 'top',\n                trigger: 'hover'\n              }}, [\n                h('el-tag', { slot: 'reference', class: 'failed-red-tag' }, ['Failed']),\n                h('pre', { style: 'white-space: pre-wrap; word-break: break-all;' }, [`failed reason: ${fail_reason}.\\ncan rerun before ${deadline_time}`])\n              ]]);\n            }\n          }\n        },\n        {\n          columnKey: 'History',\n          field: 'History',\n          width: '130px',\n          label: this.$t('commonHistory'),\n          render: (schema, row) => {\n            return (['el-button', {\n              props: { type: 'text' },\n              on: { click: () => this.showHistoryLogVisible(row.task_id) }\n            }, ['Log']]);\n          }\n        },\n        {\n          columnKey: 'Action',\n          field: 'Action',\n          label: this.$t('commonAction'),\n          render: (schema, row, index, h) => {\n            const { status, can_retry, task_id } = row || {};\n            if (status === 3 && this.canCheckReport) {\n              return (['el-button', {\n                props: { type: 'text' },\n                on: { click: () => this.asyncExport({task_ids: [task_id]})}\n              }, ['Check Report']\n              ]);\n            } else if (status === 4 && can_retry && this.canRerun) {\n              return (['el-button', {\n                class: 'right-btn',\n                props: { type: 'text' },\n                on: { click: () => this.retryTask(task_id)}\n              }, ['Rerun']\n              ]);\n            }\n          }\n        }\n      ];\n    }\n  },\n  methods: {\n    showExportHistory() {\n      this.isShowExportHistory = true;\n    },\n    closeExportHistory() {\n      this.isShowExportHistory = false;\n    },\n    onChangeSearchForm ({ field, value }) {\n      if (field !== 'region') {\n        return;\n      }\n      this.searchForm[field] = value;\n      this.handleSearch();\n    },\n    async asyncExport(params) {\n      try {\n        const { status, info } = await asyncExport(params);\n        if (status !== 0) {\n          this.$message.error(info);\n          return;\n        }\n        this.$message.success(this.$t('exportTaskIsCreatedSuccessfully'));\n      } catch (error) {\n        this.$message.error(`Async Export Failed: ${error}`);\n      }\n    },\n    handleMassReport() {\n      if (!this.checkedRowKeys.length) {\n        this.$message.warning('Please select some lines first!');\n        return;\n      }\n      this.asyncExport({task_ids: this.checkedRowKeys});\n    },\n    selectionChange(selection) {\n      this.checkedRowKeys = (selection || []).map(({ task_id }) => task_id);\n    },\n    handleCurrentPageChange(page) {\n      if (typeof page === 'number') {\n        this.pageNo = page;\n      } else {\n        this.pageNo = 1;\n      }\n      const params = formatParams(this.searchForm);\n      this.fetchAutoTaskList({ ...params, task_code: this.task_code, count: this.pageSize, page_no: this.pageNo });\n    },\n    handleSizeChange(size) {\n      this.pageSize = size;\n      this.handleSearch();\n    },\n    showHistoryLogVisible(taskId) {\n      this.logTaskId = taskId;\n      this.historyLogVisible = true;\n    },\n    async fetchAutoTaskList(params) {\n      this.loading = true;\n      try {\n        const { status, info, data } = await fetchAutoTaskList(params);\n        if (status !== 0) {\n          this.$message.error(info);\n          this.total = 0;\n          this.dataList = [];\n          this.doneCount = 0;\n          this.processingCount = 0;\n          this.failedCount = 0;\n          return;\n        }\n        const { report_list, total, done_count, processing_count, failed_count } = data;\n        this.dataList = report_list;\n        this.total = total;\n        this.doneCount = done_count;\n        this.processingCount = processing_count;\n        this.failedCount = failed_count;\n      } catch (e) {\n        this.$message.error(`fetch Auto Task List Failed: ${e}`);\n      } finally {\n        this.loading = false;\n      }\n    },\n    handleSearch() {\n      this.pageNo = 1;\n      const params = formatParams(this.searchForm);\n      this.fetchAutoTaskList({ ...params, task_code: this.task_code, count: this.pageSize, page_no: this.pageNo });\n    },\n    handleClear() {\n      this.searchForm = {\n        region: '',\n        task_id: '',\n        subject_name: '',\n        status: undefined\n      };\n    },\n    getTaskStatusFilters() {\n      return Object.entries(statusMap || {}).map(item => {\n        const [value, text] = item;\n        return { value, text };\n      });\n    },\n    FilterChange(filters) {\n      const params = {};\n      Object.entries(filters).forEach(([key, value]) => {\n        const filterValue = value.length ? value[0] : undefined;\n        params[key] = filterValue;\n      });\n      this.searchForm = { ...this.searchForm, ...params };\n      this.handleSearch();\n    },\n    selectable(row, index) {\n      const { status } = row || {};\n      return status === 3;\n    },\n    async retryTask(task_id) {\n      try {\n        const { status, info } = await retryTask({task_id});\n        if (status !== 0) {\n          this.$message.error(info);\n          return;\n        }\n        this.$message.success(info);\n      } catch (error) {\n        this.$message.error(`Rerun Failed: ${error}`);\n      }\n    },\n    getFileName(row, respType) {\n      return `${row.file_name}.${getContentType(respType)}`;\n    }\n  },\n  created() {\n    this.canCheckReport = hasPermission(Permission.AUTO_TASK_REPORT_VIEW);\n    this.canRerun = hasPermission(Permission.AUTO_TASK_REPORT_PROCESS);\n    this.fetchAutoTaskList({ task_code: this.task_code, count: this.pageSize, page_no: this.pageNo });\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.no-border-label {\n  .pms-list-form {\n    .el-form-item{\n      .el-form-item__label {\n        background-color: unset;\n        border: 0;\n      }\n    }\n  }\n}\n\n.el-table__body-wrapper {\n  .overtime-warning {\n    font-size: 12px;\n    color: #EF4A4A;\n    .el-icon-warning-outline::before {\n      margin-right: 2px;\n    }\n  }\n  .right-btn {\n    margin-left: 100px;\n  }\n  .done-green-tag {\n    color: #1CC461;\n    background: #ECFFF1;\n    border: 0;\n    border-radius: 2px;\n  }\n  .failed-red-tag {\n    color: #EE4D2D;\n    background: #FFF5F0;\n    border: 0;\n    border-radius: 2px;\n  }\n}\n\n.el-table__header-wrapper {\n  .el-table__column-filter-trigger {\n    line-height: 1em;\n  }\n}\n\n</style>\n<style lang=\"scss\" scoped>\n.auto-task {\n  &-wrapper {\n    padding: 0 16px;\n    .sub-header {\n      font-size: 16px;\n      font-weight: 500;\n    }\n    .overview-header {\n      display: flex;\n      justify-content: flex-start;\n      align-items: center;\n      height: 48px;\n    }\n  }\n  &-header {\n    padding: 20px 24px 0 19px;\n    display: flex;\n    width: 100%;\n    height: 56px;\n    align-items: center;\n    box-sizing: border-box;\n    border-bottom: 2px solid #EDEEF2;\n    .header-title {\n      flex: 1;\n      font-size: 18px;\n      font-weight: 500;\n      color: #333333;\n      text-align: left;\n      height: 36px;\n      line-height: 36px;\n    }\n  }\n}\n.section-region {\n  padding: 24px 20px 24px 0;\n  border-bottom: 2px solid #EDEEF2;\n}\n.block-region {\n  width: 20%;\n}\n.overview-wrapper {\n  display: flex;\n  width: 100%;\n  height: 76px;\n  padding: 10px 0;\n  margin-bottom: 44px;\n  background: #F7F7F7;\n  border-radius: 4px;\n  .overview-item {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    flex: 1;\n    height: 100%;\n    font-size: 16px;\n    .overview-count {\n      font-size: 22px;\n      font-weight: 500;\n    }\n    &:nth-child(-n+3) {\n      border-right: 1px solid #D8D8D8;\n    }\n    &:nth-child(1) .overview-count {\n      color: #333333;\n    }\n    &:nth-child(2) .overview-count {\n      color: #EF4A4A;\n    }\n    &:nth-child(3) .overview-count {\n      color: #3274F7;\n    }\n    &:nth-child(4) .overview-count {\n      color: #1CC461;\n    }\n  }\n}\n.section-block {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 76px;\n  .block-item {\n    display: inline-block;\n    width: 620px;\n  }\n}\n.export-action {\n  float: right;\n  margin-bottom: 14px;\n}\n.pms-ui .list-btn {\n  margin-right: 12px;\n  width: auto;\n  padding: 0 20px;\n  white-space: nowrap;\n\n  &.light-btn {\n    border: 1px solid #3d6ed1;\n    color: #3d6ed1;\n    background-color: #fff;\n  }\n\n  &.clear-btn {\n    color: #555555;\n    background-color: #fff;\n    border: 1px solid #e4e4e4;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/marketingCenter/nominateProducts/addProductDialog.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":15,"column":24,"nodeType":"VIdentifier","messageId":"deprecated","endLine":15,"endColumn":30},{"ruleId":"vue/no-unused-components","severity":2,"message":"The \"ListMassUpload\" component has been registered but not used.","line":118,"column":5,"nodeType":"Property","endLine":118,"endColumn":19}],"errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-dialog\n    @close=\"$emit('close')\" :visible.sync=\"dialogVisible\" class=\"add-products pms-ui\" width=\"1080px\" :show-close=\"false\">\n    <header class=\"dialog-title\" slot=\"title\">\n      <h3 class=\"title\">Add SKU\n        <span class=\"title-remark\">{{$t(info.campaign_type === 3 ? 'sellerDiscountAddSkuTip' : 'priceChangeAddSkuTip')}}</span>\n      </h3>\n    </header>\n    <section class=\"search-view\">\n      <div class=\"search-row\">\n          <el-input\n          :placeholder=\"$t('promotionNominationAddSkuPlaceholder')\"\n          v-model=\"products\"\n          class=\"input-with-select\"\n          @keyup.enter.native=\"onSearch\"\n          style=\"width:100%\">\n            <el-select v-model=\"selectMode\" slot=\"prepend\" placeholder=\"请选择\" class=\"input-select\" :autosize=\"{ maxRows: 4 }\">\n              <el-option label=\"Product ID\" value=\"1\"></el-option>\n              <el-option label=\"SKU ID\" value=\"2\"></el-option>\n            </el-select>\n            <el-button slot=\"append\" :loading=\"searching\" icon=\"el-icon-search\" @click=\"onSearch\" class=\"list-btn\"></el-button>\n          </el-input>\n        </div>\n    </section>\n    <section class=\"table-view\">\n      <div class=\"left-table\">\n        <div class=\"table-connector\" @click=\"selectProducts\">\n          <button>{{$t('commonAddSelected')}} >></button>\n        </div>\n        <el-table v-loading=\"searching\" @selection-change=\"changeProductsSelect\" :data=\"computedProductList\" border height=\"450\">\n          <el-table-column type=\"selection\"></el-table-column>\n          <el-table-column\n          :label=\"schema.label\"\n          :prop=\"schema.field\"\n          v-for=\"schema in productTableSchema\"\n          :key=\"schema.label\"\n          :width=\"schema.width || ''\"\n          ></el-table-column>\n          <el-table-column :label=\"$t('commonAction')\" align=\"center\" width=\"80\">\n            <template slot-scope=\"scope\">\n              <!-- <div class=\"add-btn\" @click=\"addSku(scope.row)\">{{isSkuExist(true,scope.row.sku_id)| addModeFormat}}</div> -->\n              <div class=\"added-btn\" v-if=\"skuMap[scope.row.sku_id]\">{{$t('commonAdded')}}</div>\n              <div class=\"add-btn\" @click=\"addSku(scope.row)\" v-else>{{$t('commonAdd')}}</div>\n            </template>\n          </el-table-column>\n        </el-table>\n        <el-pagination\n          :current-page=\"productPager.pageIndex\"\n          background\n          :page-sizes=\"[10,20,30]\"\n          layout=\"prev, pager, next\" :total.sync=\"productPager.total\"\n          @current-change=\"handleChangeProductPageIndex\"\n        ></el-pagination>\n      </div>\n\n      <div class=\"right-table\">\n        <div class=\"table-connector\">\n          <div>\n            <h4> {{$t('commonSkuAdded') + ' ('+ selectList.length +')'}} </h4>\n          </div>\n        </div>\n        <el-table :data=\"computedSelectList\" border height=\"450\">\n          <el-table-column type=\"index\" width=\"45\" label=\"No.\"> </el-table-column>\n          <el-table-column\n          :label=\"schema.label\"\n          :prop=\"schema.field\"\n          v-for=\"schema in selectTableSchema\"\n          :key=\"schema.label\"\n          :width=\"schema.width\"\n          >\n          </el-table-column>\n          <el-table-column :label=\"$t('commonAction')\" align=\"center\" width=\"80\">\n            <template slot-scope=\"scope\">\n              <div class=\"remove-btn\" @click=\"removeSelect(scope.row)\">{{$t('purchaseRequest.remove')}}</div>\n            </template>\n          </el-table-column>\n        </el-table>\n        <el-pagination\n          :current-page=\"selectPager.pageIndex\" background layout=\"prev, pager, next\" :total.sync=\"selectPager.total\"\n          :page-size=\"10\" @current-change=\"handleChangeSelectPageIndex\"\n        ></el-pagination>\n      </div>\n    </section>\n    <div class=\"footer-row\" slot=\"footer\">\n      <div class=\"el-button\" @click=\"handleCancelDialogue\">{{$t('supplier.cancel')}}</div>\n      <div v-loading=\"loading\" @click=\"handleNext\" class=\"el-button\">{{$t('supplier.next')}}</div>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nimport ListMassUpload from '@/components/upload/blobResponseUpload';\nimport { getSkuList, validateSkuList, getProductSkuDetailList } from '@/api/nominate';\nimport { formatParams } from '@/utils/formatParams';\nexport default {\n  data() {\n    return {\n      checkedRows: [],\n      dialogVisible: false,\n      loading: false,\n      selectMode: '1',\n      products: '',\n      productList: [],\n      skuMap: {},\n      productPager: {\n        total: 0,\n        pageIndex: 1\n      },\n      searching: false,\n      selectList: [],\n      selectPager: {\n        total: 0,\n        pageIndex: 1\n      }\n    };\n  },\n  components: {\n    ListMassUpload\n  },\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    info: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  computed: {\n    actionUrl() {\n      return this.info.actionUrl || `/api/item_price_change/requests/nomination/${this.$route.params.id}/upload/`;\n    },\n    uploadConfig() {\n      return {\n        btnText: this.$t('purchaseRequest.upload'),\n        templateLink: '/admin/data/priceChangeTemplate.xlsx'\n      };\n    },\n    uploadData() {\n      return formatParams({\n        campaign_id: this.$route.params.id,\n        region: this.info.region\n      });\n    },\n    productTableSchema() {\n      return [\n        { label: this.$t('commonSkuID'), field: 'sku_id', width: 90 },\n        { label: this.$t('commonSkuName'), field: 'sku_name' },\n        { label: this.$t('commonSupplierID'), field: 'supplier_id', width: 90 },\n        { label: this.$t('commonPurchaseType'), field: 'purchase_type', width: 110 }\n      ];\n    },\n    selectTableSchema() {\n      return [\n        { label: this.$t('commonSkuID'), field: 'sku_id', width: 90},\n        { label: this.$t('commonSkuName'), field: 'sku_name' }\n      ];\n    },\n    computedProductList() {\n      const start = (this.productPager.pageIndex - 1) * 10;\n      return this.productList.slice(start, start + 10);\n    },\n    computedSelectList() {\n      const start = (this.selectPager.pageIndex - 1) * 10;\n      return this.selectList.slice(start, start + 10);\n    },\n    computedAdded() {\n      return true;\n    }\n  },\n  methods: {\n    changeProductsSelect(rows) {\n      this.checkedRows = rows || [];\n    },\n    handleCancelDialogue() {\n      this.$emit('close');\n    },\n    handleChangeProductPageIndex(index) {\n      this.productPager.pageIndex = index;\n    },\n    handleChangeSelectPageIndex(index) {\n      this.selectPager.pageIndex = index;\n    },\n    handleNext() {\n      if (this.selectList.length === 0) return this.$message.error('Please add some sku first!');\n      this.loading = true;\n      const itemList = this.selectList.map(item => item.sku_id);\n      validateSkuList(formatParams({\n        region: this.info.region,\n        change_type: this.info.campaign_type,\n        campaign_id: this.info.campaign_id === undefined ? Number(this.$route.params.id) : this.info.campaign_id,\n        sku_ids: itemList\n      })).then(resp => {\n        this.loading = false;\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          const campaignId = this.info.campaign_id ? this.info.campaign_id : this.$route.params.id === undefined ? 0 : Number(this.$route.params.id);\n          getProductSkuDetailList({ region: this.info.region, sku_ids: itemList, campaign_id: campaignId}).then(resp => {\n            if (resp.retcode !== 0) {\n              this.$message.error(resp.info);\n            } else {\n              this.$message.success('Success');\n              this.$emit('addProducts', resp.data.items.map(item => ({ ...item })));\n              this.$emit('close');\n            }\n          }).catch(() => {\n            this.$message.error('Failed');\n            this.loading = false;\n          });\n        }\n      }).catch(() => {\n        this.$message.error('Failed');\n        this.loading = false;\n      });\n    },\n    addSku(skuItem) {\n      if (!this.skuMap[skuItem.sku_id]) {\n        this.selectList.push(skuItem);\n        this.$set(this.skuMap, skuItem.sku_id, true);\n      }\n    },\n    onSearch() {\n      const content = this.products.trim().replace(/(<\\w+?.*?>)|(<\\/\\w+?>)/g, '');\n      let list = [];\n      const reqObj = { region: this.info.region };\n      if (this.selectMode === '1') {\n        list = [...new Set(content.trim().split(/\\s*[，,]\\s*/).filter(item => item !== ''))].map(item => Number(item) || 0);\n        reqObj.item_ids = list;\n      } else if (this.selectMode === '2') {\n        list = [...new Set(content.trim().split(/\\s*[，,]\\s*/).filter(item => item !== ''))].map(item => item || '');\n        reqObj.sku_ids = list;\n      }\n      if (list.length > 100) {\n        return this.$message.error(`${this.selectMode === '1' ? 'Product' : 'SKU'} ID cann't be more than 100`);\n      }\n      this.searching = true;\n      getSkuList(reqObj).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.productList = resp.data.items || [];\n          this.productPager = {\n            total: this.productList.length,\n            pageIndex: 1\n          };\n        }\n        this.searching = false;\n      }).catch(() => { this.$message.error('Failed'); this.searching = false; });\n    },\n    onClear() {\n      this.products = '';\n    },\n    removeSelect(row) {\n      const index = this.selectList.findIndex(item => item.sku_id === row.sku_id);\n      if (index !== -1) {\n        this.$set(this.skuMap, row.sku_id, false);\n        this.skuMap[row.sku_id] = false;\n        this.selectList.splice(index, 1);\n        this.selectPager.total = this.selectList.length;\n        if ((this.selectPager.pageIndex - 1) * 10 + 1 > this.selectList.length) {\n          this.selectPager.pageIndex = 1;\n        }\n      }\n    },\n    selectProducts() {\n      this.checkedRows.forEach(item => {\n        if (!this.skuMap[item.sku_id]) {\n          this.selectList.push(item);\n          this.$set(this.skuMap, item.sku_id, true);\n        }\n      });\n      // [...this.selectList, ...this.checkedRows].forEach(item => {\n      //   if (!productIDMap[item.sku_id]) {\n      //     list.push(item);\n      //     productIDMap[item.sku_id] = true;\n      //   }\n      // });\n      this.selectPager = {\n        pageIndex: 1,\n        total: this.selectList.length\n      };\n    },\n    uploadSuccess(res) {\n      this.$emit('uploadSuccess', res);\n      this.$emit('close');\n    },\n    uploadError(res) {\n      this.$emit('uploadError', res);\n    }\n  },\n  watch: {\n    '$props.visible': {\n      handler(curr) {\n        this.dialogVisible = curr;\n        this.skuMap = {};\n        this.selectList = [];\n        this.productList = [];\n        this.checkedRows = [];\n        this.products = '';\n        this.productPager = { total: 0, pageIndex: 1 };\n        this.selectPager = { total: 0, pageIndex: 1 };\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  .add-products {\n    &/deep/.el-dialog {\n      margin-top: 10vh !important;\n    }\n    .dialog-title {\n      .title-remark {\n        margin-left: 10px;\n        color: #CCCCCC;\n        font-size: 14px;\n      }\n    }\n    &/deep/.el-dialog__body {\n      padding: 10px 20px 0;\n    }\n    .upload-row {\n      text-align: right;\n    }\n    .search-view {\n      display: flex;\n      align-items: center;\n      .search-row {\n        flex: 3;\n        display: flex;\n        align-items: center;\n        & /deep/ .el-input__inner {\n            border: none;\n        }\n        & /deep/ .el-input-group__prepend {\n          border: none;\n        }\n        .input-with-select {\n          border: 1px solid #E2E6EC;\n          border-radius: 4px;\n          overflow: hidden;\n          .input-select {\n            width: 110px;\n            border: none;\n            & /deep/ .el-input__inner {\n            border-right: 1px solid #E2E6EC;\n            &:focus {\n              outline: none;\n            }\n            }\n\n          }\n          & /deep/.el-input-group__append\n            {\n              padding: 0;\n              border: none;\n            }\n        }\n        .input-products {\n          margin-right: 10px;\n        }\n        .list-btn {\n          width: 10px;\n        }\n      }\n      .chosen-title {\n        flex: 2;\n        margin-left: 80px;\n      }\n    }\n    .table-view {\n      display: flex;\n      margin: 20px 0;\n      justify-content: center;\n      align-items: flex-start;\n      .left-table {\n        flex: 3.5;\n        text-align: center;\n        margin-right: 36px;\n      }\n      .right-table {\n        flex: 2;\n        text-align: center;\n      }\n      .el-table {\n        margin-bottom: 20px;\n        & /deep/ .remove-btn{\n          color:#3D6ED1;\n        }\n        & /deep/ .add-btn{\n          color: #3D6ED1;\n        }\n        & /deep/ .added-btn{\n          color: #aaa;\n        }\n      }\n      .table-connector {\n        width: 100%;\n        height: 30px;\n        text-align: right;\n        &>button{\n          background-color:#3D6ED1;\n          color: #fff;\n          font-size: 12px;\n          border: none;\n          border-radius:2px;\n          padding: 4px;\n          cursor: pointer;\n        }\n        &>div\n        {\n          text-align: left;\n          &>h4{\n            font-size: 14px;\n            line-height: 22px;\n            color: #000;\n          }\n        }\n      }\n    }\n    .footer-row {\n      text-align: right;\n      &>div {\n        width: 85px;\n      }\n      &>div:last-child {\n        background: #3D6ED1;\n        color:white;\n      }\n    }\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/marketingCenter/nominateProducts/baseInfo.vue","messages":[{"ruleId":"vue/no-unused-components","severity":2,"message":"The \"Attachment\" component has been registered but not used.","line":25,"column":5,"nodeType":"Property","endLine":25,"endColumn":15}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-form class=\"markrting-base-info\" label-width=\"140px\">\n    <p class=\"section-title\">{{$t('sellerDiscountCampaignInformation')}}</p>\n    <el-row class=\"pms-ui base-form\">\n      <el-col class=\"form-col\" v-for='item in baseSchema' :key='item.field'>\n        <el-form-item :label=\"item.label\">\n          <span class=\"item-gap\">:</span>\n          <section class=\"item-info\">{{item.value}}</section>\n        </el-form-item>\n      </el-col>\n    </el-row>\n  </el-form>\n</template>\n\n<script>\nimport Attachment from '@/views/budget/budgetAttachment';\nimport { getFormatterInfo } from '@/utils/formatParams';\nimport { NominateCampaignTypeList } from '@/utils/constant';\nimport moment from 'moment';\nexport default {\n  data() {\n    return {};\n  },\n  components: {\n    Attachment\n  },\n  props: {\n    form: {\n      required: true,\n      type: Object\n    }\n  },\n  computed: {\n    baseSchema() {\n      const info = NominateCampaignTypeList.find(item => (item.value === this.form.campaign_type));\n      const schema = [\n        { label: this.$t('commonCampaignName'), value: this.form.campaign_name},\n        { label: this.$t('marketingCenter.campaignType'), value: (info && info.label) || '/'}];\n      if (info && info.subType) {\n        schema.push({label: this.$t('commonSubType'), value: (info && info.subType) || '/'});\n      }\n      schema.push({ label: this.$t('marketingCenter.campaignTime'),\n        value: `${this.form.campaign_start_time_str ? moment(this.form.campaign_start_time_str).format('YYYY-MM-DD HH:mm') : ''} - ${this.form.campaign_end_time_str ? moment(this.form.campaign_end_time_str).format('YYYY-MM-DD HH:mm') : ''}`});\n      return schema;\n    },\n    canEdit() {\n      return this.form.mode !== 'detail' && !this.$route.params.pid;\n    },\n    attachmentList() {\n      const list = this.form.mode === 'create' ? this.form.attachmentList.filter(item => item.status !== 0)\n        : this.form.attachmentList.filter(item => item.status !== 2);\n      return list;\n    }\n  },\n  methods: {\n    getFormatterInfo,\n    uploadSuccess(res) {\n      this.$emit('add', res);\n    },\n    deleteAttachment(index) {\n      this.$emit('delete', index);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  .markrting-base-info {\n    .section-title {\n      font-size: 18px;\n      color: #333333;\n      font-weight: 600;\n      margin-bottom: 24px;\n    }\n    .item-gap {\n      display: inline-block;\n      margin-left: -8px;\n      vertical-align: top;\n    }\n    .item-info {\n      display: inline-block;\n      margin-left: 20px;\n      word-break: break-all;\n      vertical-align: middle;\n      color: #333333;\n    }\n    .budget-attachment {\n      width: 100%;\n      margin: 0px 0 0 40px;\n    }\n    .attachment-limit {\n      margin-bottom: -40px;\n    }\n    .attachment-title {\n      margin-left: 40px;\n    }\n  }\n</style>\n<style lang=\"scss\">\n.markrting-base-info {\n  .el-form-item {\n    margin-bottom: 0;\n  }\n  .el-form-item__label{\n    color: #333333;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/marketingCenter/nominateProducts/index.vue","messages":[{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":28,"column":39,"nodeType":"ThisExpression","endLine":28,"endColumn":43},{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":87,"column":107,"nodeType":"ThisExpression","endLine":87,"endColumn":111},{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":87,"column":135,"nodeType":"ThisExpression","endLine":87,"endColumn":139},{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":88,"column":67,"nodeType":"ThisExpression","endLine":88,"endColumn":71},{"ruleId":"vue/no-unused-components","severity":2,"message":"The \"AddProductDialog\" component has been registered but not used.","line":202,"column":5,"nodeType":"Property","endLine":202,"endColumn":21}],"errorCount":5,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <section>\n    <div v-if=\"canView\" class=\"nominate-products pms-ui pms-ele-ui\">\n      <section class=\"header-view\">\n        <section class=\"title-view\">\n          <i class=\"back-icon el-icon-arrow-left\" @click=\"goBack\"></i>\n          <span class=\"nominate-title\">{{form.mode === 'create' ? 'Nominate Products' : 'View Nomination'}}</span>\n        </section>\n        <section v-if=\"canProcess\" class=\"action-view\">\n          <template v-if=\"form.mode !== 'detail'\">\n            <!-- CFS& Campaign Promotion：仅有Submit按钮. Seller Discount：仅有Submit & Sync to MKT按钮,功能同原来的Submit -->\n            <el-button class=\"list-btn white-grey\" @click=\"cancelEdit\">{{$t('commonCancelEdit')}}</el-button>\n            <el-popover\n              placement=\"top-start\"\n              width=\"200\"\n              trigger=\"hover\"\n              :disabled=\"!isNeedCheckPoint\"\n              :content=\"$t('checkCriteriaInfoTip')\">\n                <el-button\n                :class=\"isNeedCheckPoint ? 'list-btn disable-btn' : 'list-btn'\"\n                slot=\"reference\"\n                :loading=\"actionLoading\"\n                @click=\"submitNomination\">\n                  {{ isSellerDiscountCampaign ? $t('submitAndSyncToMKT') : $t('commonSubmit')}}\n                </el-button>\n            </el-popover>\n          </template>\n          <el-button v-if=\"canEdit && this.productsType === '1'\" class=\"list-btn\"  @click=\"editProducts\">{{$t('commonEdit')}}</el-button>\n        </section>\n      </section>\n      <base-info :form=\"form\" @add=\"uploadSuccess\" @delete=\"deleteAttachment\"></base-info>\n      <section>\n        <p class=\"section-title\">{{$t('sellerDiscountProductInformation')}}\n          <span class=\"product-chosen\">\n            (SKU Number: {{skuNum}})\n          </span>\n        </p>\n        <section class=\"search-row\">\n          <el-input placeholder=\"Please Input\" v-model=\"searchForm.value\" class=\"search-input-with-select\" @change=\"searchProducts(1)\">\n            <el-select v-model=\"searchForm.key\" slot=\"prepend\" placeholder=\"Please Input\" @change=\"searchProducts(1)\">\n              <el-option :label=\"$t('productId')\" value=\"item_id\"></el-option>\n              <el-option :label=\"$t('commonSkuID')\" value=\"sku_id\"></el-option>\n            </el-select>\n            <i slot=\"suffix\" class=\"el-input__icon el-icon-search\" @click=\"searchProducts(1)\"></i>\n          </el-input>\n        </section>\n        <el-tabs v-if=\"form.mode !== 'create'\" v-model=\"productsType\" type=\"card\" class=\"sku-type-tab\">\n          <el-tab-pane name=\"1\">\n            <span slot=\"label\"> {{ $t('nominatedSku', { num: tabSkuNum.nominated_products_total})}}</span>\n          </el-tab-pane>\n          <el-tab-pane name=\"2\">\n            <span slot=\"label\"> {{ $t('cancelledSku', { num: tabSkuNum.cancelled_products_total})}}</span>\n          </el-tab-pane>\n          <el-tab-pane name=\"3\">\n            <span slot=\"label\"> {{ $t('syncedToMKTSKU', { num: tabSkuNum.sync_to_mkt_products_total})}}</span>\n          </el-tab-pane>\n        </el-tabs>\n        <section :class=\"{'product-table-section': form.mode !== 'create'}\">\n          <section class=\"action-btn-row\">\n            <div class=\"action-btn-left\" >\n              <list-mass-upload @uploadError=\"uploadProductFailed\" @uploadSuccess=\"uploadProductSuccess\" class=\"upload-products\"\n                :actionUrl=\"actionUrl\" :config=\"uploadConfig\" :uploadData=\"{ campaign_id: $route.params.id }\">\n                <div slot=\"uploadSlot\">\n                  <el-button class=\"list-btn\" :disabled=\"!canProcess || form.mode !== 'create'\">{{$t('commonUpload')}}</el-button>\n                  <el-button type=\"text\" @click.stop :disabled=\"!canProcess || form.mode !== 'create'\">\n                    <a @click=\"downloadTemplate\">\n                      {{$t('commonTemplate')}}\n                    </a>\n                  </el-button>\n                </div>\n                </list-mass-upload>\n            </div>\n            <div class=\"action-btn-right\">\n              <el-button class=\"list-btn\" :disabled=\"!canCheckPoint\" :loading=\"checkLoading\" @click=\"onCheckPoint\">\n                {{$t('sellerDiscountCheckCriteria')}}\n              </el-button>\n              <el-button class=\"list-btn\" @click=\"showAddProductsDialog\" :disabled=\"!canProcess || form.mode !== 'create'\">{{$t('commonAddSku')}} </el-button>\n            </div>\n          </section>\n          <section  v-if=\"form.mode !== 'detail' && skuPager.total !== 0\" class=\"batch-fill-wrapper\">\n            <el-form :inline=\"true\">\n              <el-form-item>\n              <el-input :controls=\"false\" :placeholder=\"$t('appliedPromotionPrice', {currency: currency})\"  :disabled=\"!!fillForm.discount\" type=\"number\"\n              v-model=\"fillForm.apply_promotion_price\" class=\"apply-promotion-price\" @change=\"onPromotionPriceChange\"></el-input>\n            </el-form-item>\n            <el-form-item>\n              <el-input :controls=\"false\" class=\"discount\" :placeholder=\"`${$t('discountPlaceholder')} (${this.form.region === 'TW' ? this.$t('marketingCenter.discountUnit') : '%OFF'})`\" :min=\"0\" type=\"number\"\n              :max=\"form.region === 'TW' ?  9.9 : 99\" :precision=\"this.form.region === 'TW' ? 1 : 0\" @change=\"onDiscountChange\"\n              :disabled=\"!!fillForm.apply_promotion_price\" v-model=\"fillForm.discount\"></el-input>\n            </el-form-item>\n              <el-form-item>\n                <el-input-number :controls=\"false\" class=\"apply-contract-price\" :placeholder=\"$t('appliedContractPrice', {currency: currency})\"\n                v-model=\"fillForm.apply_contract_price\"></el-input-number>\n              </el-form-item>\n              <el-form-item>\n                <el-input class=\"remark\" :placeholder=\"$t('commonRemark')\"  v-model=\"fillForm.remark\"></el-input>\n              </el-form-item>\n              <el-button @click=\"fillSkuInfo\" class=\"list-btn apply-to-fill\" :disabled=\"form.mode === 'detail' || skuPager.total === 0\">{{$t('sellerDiscountApplyToAll')}}</el-button>\n            </el-form>\n          </section>\n          <product-table\n            :SkuPager=\"skuPager\" @getItemList=\"searchProducts\" @getFilterItemList=\"getFilterItemList\"  :region=\"form.region\" :campaignType=\"form.campaign_type\"\n            @selectRows=\"onSelectRows\" :mode=\"form.mode\" @removeSku=\"removeSku\" @modifySku=\"modifyItemSku\" :itemList=\"itemList\" :cacheSkuList=\"cacheSkuList\"\n            @nominationRefresh=\"nominationRefresh\" :productsType=\"productsType\">\n          </product-table>\n        </section>\n      </section>\n      <product-attachment :form=\"form\" @update=\"uploadSuccess\"></product-attachment>\n      <add-sku-dialog\n      width=\"1200px\"\n      :availableOnly=\"form.campaign_type === 3\"\n      @addProducts=\"addProducts\"\n      @getSku=\"getSkuList\"\n      @close=\"switchAddDialog(false)\"\n      :skuSchema=\"addSkuSchema\"\n      :selectedSchema=\"selectedSkuSchema\"\n      :loading=\"addSkuLoading\"\n      :info=\"form\"\n      :pageTotal=\"addSkuTotal\"\n      :visible=\"addProductsDialogVisible\"\n      :skuList=\"computedSkuList\"\n      :hasDefault=\"form.campaign_type === 3\"\n      popKey=\"commonSkuID\"\n      />\n    </div>\n  </section>\n\n</template>\n\n<script>\nimport ListMassUpload from '@/components/upload/blobResponseUpload';\nimport BaseInfo from './baseInfo';\nimport AddProductDialog from './addProductDialog';\nimport AddSkuDialog from '@/components/marketingCenter/addSkuDialog';\nimport ProductTable from './productTable';\nimport { getNominationDetail, getNominationSkuList, createNomination, updateNomination, nominationCheckPoint, getDuplicateSku, nominationRefresh, getSkuList, downloadNominationTemplate } from '@/api/nominate';\nimport { NominateStatusList, ReturnCodeMap, Permission, MKTCheckFailRetCodeMap, NominateCollectionPermissions, MarketViewCollectionPermissions, FESKUStatus, getContentType } from '@/utils/constant';\nimport { formatParams } from '@/utils/formatParams';\nimport { roundPriceByRegion } from '@/utils/format';\nimport { ValidateProduct } from '../validate';\nimport { hasPermission } from '@/utils/permission';\nimport moment from 'moment';\nimport { downloadBlobFile } from '@/utils/downloadFile';\nimport productAttachment from './productAttachment.vue';\nconst CheckPointKeys = ['gross_margin_check_point', 'limited_selling_quantities_check_point',\n'historically_low_selling_price_check_point', 'promotion_price_check_point', 'historically_low_selling_price'];\nconst SkuPageCount = 50;\nconst SignleProductLimit = 1000;\n\nexport default {\n  data() {\n    return {\n      canProcess: false,\n      canView: false,\n      form: {\n        mode: this.$route.params.mode || '',\n        attachmentList: []\n      },\n      // add SKU Dialog modules\n      addProductsDialogVisible: false,\n      addSkuTotal: 0,\n      addSkuList: [],\n      addSkuLoading: false,\n      //\n      actionLoading: false,\n      NominateStatusList,\n      searchForm: { request_status: '', item_id: this.$route.params.pid || '', sku_id: '', key: 'item_id', value: Number(this.$route.params.pid) || '' },\n      selectRows: [],\n      attachmentLength: 0,\n      skuPager: {\n        size: SkuPageCount,\n        pageIndex: 1,\n        total: 0\n      },\n      errorMessages: {},\n      errorType: {\n        failList: 'p',\n        noStepList: 'p',\n        approval: 'p' // 这个放在下面\n      },\n      fillForm: { apply_promotion_price: undefined, discount: undefined, apply_contract_price: undefined, remark: '' },\n      productList: [],\n      itemList: [],\n      modifyList: [],\n      cacheCheckPointLength: 0,\n      searchKey: 'item_id',\n      searchValue: '',\n      isModifyAttachment: false, // 是否修改了附件\n      checkLoading: false,\n      cacheSkuList: [],\n      productsType: '1',\n      cacheMode: '',\n      tabSkuNum: {\n        nominated_products_total: 0,\n        cancelled_products_total: 0,\n        sync_to_mkt_products_total: 0\n      },\n      approvalConfirm: false\n    };\n  },\n  components: {\n    AddProductDialog,\n    AddSkuDialog,\n    BaseInfo,\n    ListMassUpload,\n    ProductTable,\n    productAttachment\n  },\n  computed: {\n    addSkuSchema() {\n      return [\n        { label: 'commonSkuID', field: 'sku_id', width: 90 },\n        { label: 'commonSkuName', field: 'sku_name', width: 100 },\n        { label: 'commonSupplierID', field: 'supplier_id', width: 90 },\n        { label: 'commonShopIdName', width: 140, render: (schema, row) => (`${row.shop_id}/ ${row.shop_name}`)},\n        { label: 'commonPurchaseType', field: 'purchase_type', width: 110 },\n        { label: 'commonStatus', field: 'sku_status', width: 70, render: (schema, row) => {\n          return FESKUStatus.find(item => (item.value === row.sku_status)).label;\n        }}\n      ];\n    },\n    selectedSkuSchema() {\n      return [\n        { label: 'commonSkuID', field: 'sku_id', width: 90},\n        { label: 'commonSkuName', field: 'sku_name' }\n      ];\n    },\n    computedSkuList() {\n      return this.skuFilter(this.addSkuList);\n    },\n    currency() {\n      return this.$store.getters.currencyMap[this.form.region];\n    },\n    skuNum() {\n      if (this.form.mode === 'create') {\n        let total = 0;\n        this.productList.forEach((item, index) => {\n          total += item.sku_list.length;\n        });\n        return total;\n      } else {\n        return this.skuPager.total;\n      }\n    },\n    actionUrl() {\n      return `/api/item_price_change/requests/nomination/${this.$route.params.id}/upload/`;\n    },\n    uploadConfig() {\n      return {\n        btnText: this.$t('purchaseRequest.upload'),\n        templateText: this.$t('rule.template')\n      };\n    },\n    canEdit() {\n      const endInterval = moment() - moment(this.form.campaign_end_time_str || '', 'YYYY-MM-DD HH:mm:ss');\n      return this.form.mode === 'detail' && this.canProcess && endInterval < 0;\n    },\n    relationFillKeyMap() {\n      return {\n        apply_promotion_price: { key: 'discount', value: (row) => { // return discount\n          let discount = 0;\n          if (this.form.region === 'TW') {\n            discount = (parseInt(row.apply_promotion_price * 100 / row.original_price) / 10).toFixed(1);\n          } else {\n            discount = (100 - parseInt(row.apply_promotion_price * 100 / row.original_price));\n          }\n          return discount;\n        }},\n        discount: { key: 'apply_promotion_price', value: (row) => { // return promotion price\n          let promotionPrice = 0;\n          if (this.form.region === 'TW') {\n            promotionPrice = row.original_price * row.discount / 10;\n          } else {\n            promotionPrice = (100 - row.discount) / 100 * row.original_price;\n          }\n          return roundPriceByRegion(promotionPrice, this.form.region);\n        }}\n      };\n    },\n    filterList() {\n      if (this.form.mode === 'create') {\n        const filterList = [];\n        const {request_status = '', key, value } = this.searchForm;\n        const item_id = key === 'item_id' ? value : '';\n        const sku_id = key === 'sku_id' ? value : '';\n        const filterKey = this.getFilterKey();\n        const filterValue = this.searchForm[filterKey];\n        this.productList.forEach(product => {\n          if (`${product.item_id || ''}`.includes(item_id)) {\n            const filterSKUList = (product.sku_list || []).filter(sku => {\n              return (sku.sku_id || '').includes(sku_id) && (sku.request_status || '').includes(request_status) && (`${sku[filterKey]}` || '').includes(filterValue);\n            }).map(sku => ({ ...product, ...sku }));\n            if (filterSKUList.length) filterList.push(...filterSKUList);\n          }\n        });\n        return filterList;\n      } else {\n        return [];\n      }\n    },\n    canCheckPoint() {\n      return this.form.mode !== 'detail' && this.modifyList.length;\n    },\n    isNeedCheckPoint() {\n      if (this.modifyList.some(item => !item.is_check)) {\n        return true;\n      } else {\n        if (this.form.mode === 'create') {\n          return this.cacheCheckPointLength !== this.modifyList.length;\n        }\n        return false;\n      }\n    },\n    isSellerDiscountCampaign() {\n      return this.form.campaign_type === 3;\n    }\n  },\n  watch: {\n    productsType(nv, ov) {\n      if (ov === '1') {\n        this.cacheMode = this.form.mode;\n      }\n      if (nv === '1') {\n        this.form.mode = this.cacheMode || 'detail';\n      } else {\n        this.form.mode = 'detail';\n      }\n      this.searchProducts();\n    }\n  },\n  methods: {\n    downloadTemplate() {\n      downloadNominationTemplate({region: this.form.region}).then(resp => {\n        if (resp.type === 'application/json') {\n          const reader = new FileReader();\n          reader.onloadend = () => {\n            const result = JSON.parse(reader.result);\n            if (result.retcode !== 0) {\n              this.$message.error(result.info);\n            }\n          };\n          reader.readAsText(resp);\n        } else {\n          downloadBlobFile(resp, `${this.$t('marketingCenterPriceChangeTemplate')}.${getContentType(resp.type)}`);\n        }\n      }).catch(() => { this.$message.error('Download Failed'); });\n    },\n    getSkuList(data) {\n      this.addSkuLoading = true;\n      const params = {...data};\n      params.campaign_id = Number(this.$route.params.id);\n      getSkuList(params).then(res => {\n        if (res.retcode === 0) {\n          this.addSkuList = res.data.items;\n          this.addSkuTotal = res.data.total;\n        } else {\n          this.$message.error(res.info);\n        }\n      }).catch(e => {\n        this.$message.error(e.info);\n      }).finally(_ => {\n        this.addSkuLoading = false;\n      });\n    },\n    skuFilter(list) {\n      const type = this.form.campaign_type;\n      if (type === 3) { // Seller Discount\n        return list.map(item => {\n          const reason = [];\n          item.isAdded = item.is_nominated ? true : this.modifyList.some(sku => sku.sku_id === item.sku_id);\n          if (item.is_no_inbound_outright) {\n            reason.push(' No Inbound Info');\n          }\n          if (item.purchase_type === 'Unknown') {\n            reason.push('No linked supplier');\n          }\n          if (item.not_same_shop) {\n            reason.push('Mismatched Shop');\n          }\n          if (item.sku_status !== 1) {\n            reason.push('SKU Status');\n          }\n          if (item.is_deprecated) {\n            reason.push('Deprecated');\n          }\n          if (item.has_virtual) {\n            reason.push('Virtual Sku');\n          }\n          this.$set(item, 'reason', reason);\n          return item;\n        });\n      } else if (type === 1 || type === 2) { //  Campiagn & CFS\n        return list.map(item => {\n          const reason = [];\n          item.isAdded = item.is_nominated ? true : this.modifyList.some(sku => sku.sku_id === item.sku_id);\n          if (item.is_no_inbound_outright) {\n            reason.push(' No Inbound Info');\n          }\n          if (item.purchase_type === 'Unknown') {\n            reason.push('No linked supplier');\n          }\n          if (item.sku_status !== 1) {\n            reason.push('SKU Status');\n          }\n          if (item.is_deprecated) {\n            reason.push('Deprecated');\n          }\n          if (item.has_virtual) {\n            reason.push('Virtual Sku');\n          }\n          this.$set(item, 'reason', reason);\n          return item;\n        });\n      } else {\n        return list;\n      }\n    },\n    switchAddDialog(isOpen) {\n      this.addProductsDialogVisible = isOpen;\n      if (!isOpen) {\n        this.addSkuList = [];\n      }\n    },\n    onPromotionPriceChange(value) {\n      value = parseFloat(value);\n      if (value < 0) {\n        value = 0;\n      }\n      if (value) {\n        value = roundPriceByRegion(value, this.form.region);\n      }\n      this.fillForm.apply_promotion_price = value || undefined;\n    },\n    onDiscountChange(value) {\n      value = parseFloat(value);\n      if (value < 0) {\n        value = 0;\n      }\n      if (value) {\n        if (this.form.region === 'TW' && value > 9.9) {\n          value = 9.9;\n        } else if (this.form.region !== 'TW' && value > 99) {\n          value = 99;\n        }\n      }\n      this.fillForm.discount = value || undefined;\n    },\n    nominationRefresh({value, row, index}) {\n      const product = this.itemList.find(item => row.item_id === item.item_id) || {};\n      const productIndex = this.itemList.findIndex(item => row.item_id === item.item_id);\n      const refreshSkuList = (product.sku_list || []).map(sku => {\n        const modifySku = this.modifyList.find(modify => modify.sku_id === sku.sku_id);\n        return {...(modifySku || sku)};\n      });\n      const params = {\n        region: this.form.region,\n        campaign_id: Number(this.$route.params.id),\n        apply_item_list: this.getItemGroup(refreshSkuList, 'apply_item_sku_list')\n      };\n      // 获取最新的limited_selling_quantities\n      nominationRefresh(params).then(res => {\n        if (res.retcode === 0) {\n          const item = res.data.items && res.data.items.length && res.data.items[0];\n          refreshSkuList.forEach(sku => {\n            this.modifyItemSku(sku, 'limited_selling_quantities', item.limited_selling_quantities);\n          });\n          if (productIndex !== -1 && product) {\n            this.itemList.splice(productIndex, 1, product);\n          }\n        }\n      });\n    },\n    async onCheckPoint() {\n      this.cacheCheckPointLength = this.modifyList.length;\n      if (this.form.mode === 'edit' && !this.modifyList.length) {\n        return this.$message.error(this.$t('noChangeTip'));\n      }\n      const errorMessage = ValidateProduct(this.modifyList, this.form.region);\n      if (errorMessage) {\n        return this.$message.error(errorMessage);\n      }\n      const params = {\n        campaign_id: Number(this.$route.params.id),\n        sku_list: this.modifyList.filter(sku => !sku.is_cancel).map(item => {\n          return {\n            ...item,\n            apply_gross_margin: this.getGrossMargin(item)\n          };\n        })\n      };\n      this.checkLoading = true;\n      const res = await nominationCheckPoint(params);\n      this.checkLoading = false;\n\n      if (res.retcode === 0) {\n        let attachmentMessage = '';\n        const checkList = res.data.check_point_list;\n        const needAttachment = res.data.need_attachment;\n        this.errorMessages = {};\n        if (res.data.approve_role_name_list && res.data.approve_role_name_list.length > 0) {\n          this.errorMessages.approval = ['marketingCenter.priceChangeNeedApproveTips', { roles: (res.data.approve_role_name_list || []).join('、') }];\n          if (needAttachment && this.attachmentLength === 0) {\n            attachmentMessage = this.$t('marketingCenter.priceChangeNeedAttachmentTips', { roles: (res.data.approve_role_name_list || []).join('、')});\n          }\n        }\n        if (attachmentMessage) {\n          this.$message({\n            dangerouslyUseHTMLString: true,\n            message: `<p>${this.$t('checkCriteriaInfoSuccessTip')}</p><p>${attachmentMessage}</p>`,\n            type: 'warning'\n          });\n        } else {\n          this.$message.success(this.$t('checkCriteriaInfoSuccessTip'));\n        }\n        this.modifyList.forEach((sku, index) => {\n          const checkSku = checkList.find(item => item.sku_id === sku.sku_id);\n          if (checkSku) {\n            CheckPointKeys.forEach(key => {\n              // 修改modifyList中的值\n              this.modifyItemSku(sku, key, checkSku[key]);\n              // 修改modifyList中的值\n              sku[key] = checkSku[key];\n            });\n          }\n          this.modifyItemSku(sku, 'is_check', true);\n          sku['is_check'] = true;\n        });\n        const failList = checkList.filter(item => item.historically_low_selling_price_check_point === 2);\n        const noStepList = checkList.filter(item => item.historically_low_selling_price_check_point === 3);\n        if (failList.length) {\n          this.errorMessages.failList = ['checkCriteriaInfoFailTip', {list: failList.map(item => item.sku_id)}];\n        } else {\n          this.$delete(this.errorMessages, 'failList');\n        }\n        if (noStepList.length) {\n          this.errorMessages.noStepList = ['checkCriteriaInfoNoStepTip', {list: noStepList.map(item => item.sku_id)}];\n        } else {\n          this.$delete(this.errorMessages, 'noStepList');\n        }\n        if (this.form.mode === 'create') {\n          this.productList = this.getItemGroup(this.modifyList);\n        }\n        // check after data modify searchProducts();\n        this.searchProducts();\n      } else {\n        this.$message.error(res.info);\n      }\n    },\n    uploadSuccess(attachmentList) {\n      this.form.attachmentList = attachmentList.list;\n      this.attachmentLength = attachmentList.length;\n      if (!this.isModifyAttachment) this.isModifyAttachment = true;\n    },\n    deleteAttachment(index) {\n      if (this.form.mode === 'create') {\n        this.form.attachmentList.splice(index, 1);\n      } else {\n        this.form.attachmentList[index].status = 2;\n      }\n    },\n    submitNominationRequest(params = {}) {\n      const requestFun = this.form.mode === 'create' ? createNomination : updateNomination;\n      this.actionLoading = true;\n      return requestFun(params).then(resp => {\n        if (resp.retcode === ReturnCodeMap.PRICE_CHANGE_NEED_CONFIRM) {\n          const names = resp.data.campaign_name.reduce((ret, item) => {\n            return `${ret}(${item.join('、')})`;\n          }, '');\n          return this.$confirm(this.$t('priceChangeNeedConfirmTips', { skus: (resp.data.existed_confirmed_discount_item_ids || []).join('、'), names: names}), '', {\n            showConfirmButton: true\n          }).then(() => {\n            const confirmParams = { ...params, confirmed_discount_existed_confirm_submit: true };\n            this.submitNominationRequest(confirmParams);\n          }).catch(() => { this.actionLoading = false; });\n        }\n        if (resp.retcode === ReturnCodeMap.PRICE_CHANGE_MKT_CHECK_FAILED) {\n          const failInfo = resp.data.error_list.reduce((msg, error) => {\n            const currentErrorConfig = MKTCheckFailRetCodeMap.find(item => item.errorCode === error.error_code);\n            let params = {};\n            if (currentErrorConfig && currentErrorConfig.key) {\n              if (error.error_code === 1) {\n                params = {\n                  item_id: error.item_id,\n                  name: (error.overlap_info || []).reduce((name, item) => name ? `${name},${item.campaign_name}` : item.campaign_name, '')\n                };\n              } else {\n                currentErrorConfig.key.forEach(key => {\n                  params[key] = error[key];\n                });\n              }\n            }\n            return currentErrorConfig ? `${msg}<p>${this.$t(currentErrorConfig.transifyKey, params)}</p>` : `${msg}<p>${error.err_msg || this.$t('MKTErrorTip')}</p>`;\n          }, '');\n          this.actionLoading = false;\n          return this.$message({\n            type: 'error',\n            dangerouslyUseHTMLString: true,\n            message: failInfo\n          });\n        }\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.$message.success('Success');\n          const id = this.$route.params.id;\n          if (this.$route.params.mode !== 'detail') {\n            this.$router.replace(`/admin/marketingCenter/nominateProducts/detail/${id}`);\n          }\n          this.form.mode = 'detail';\n          this.modifyList = [];\n          this.getNominateDetail();\n        }\n        this.actionLoading = false;\n      }).catch(() => { this.$message.error('Failed'); this.actionLoading = false; });\n    },\n    getSubmitConfirmTip() {\n      const h = this.$createElement;\n      const cancelSkuList = this.modifyList.filter(sku => sku.is_cancel).map(sku => sku.sku_id);\n      const modifySkuList = this.modifyList.filter(sku => !sku.is_cancel).map(sku => sku.sku_id);\n      const messageArr = [h('span', null, this.$t('sellerDiscountSubmitTip'))];\n      if (this.form.mode === 'edit') {\n        if (modifySkuList.length) {\n          messageArr.push(\n            h('br'),\n            h('el-popover', { class: '', attrs: {trigger: 'hover', placement: 'top'}}, [\n                h('span', { class: 'popover-text-num', slot: 'reference' }, modifySkuList.length),\n                h('span', {style: 'width: 300px'}, modifySkuList.join(','))\n              ]\n            ),\n            h('span', {class: 'primary-text'}, '  of SKUs Modified'),);\n        }\n        if (cancelSkuList.length) {\n          messageArr.push(\n            h('br'),\n            h('el-popover', { class: '', attrs: {trigger: 'hover', placement: 'top'}}, [\n                h('span', { class: 'popover-text-num', slot: 'reference' }, cancelSkuList.length),\n                h('span', {style: 'width: 300px'}, cancelSkuList.join(','))\n              ]\n            ),\n            h('span', {class: 'primary-text'}, ' of SKUs Cancelled'),\n            h('br'),\n            h('span', {}, 'Any cancelled product cannot be enabled and needs to be re-nominated again.'));\n        }\n      }\n      if (Object.keys(this.errorMessages).length > 0) {\n        for (const error in this.errorType) {\n          if (this.errorMessages[error]) {\n            if (error === 'failList' || error === 'noStepList') {\n              messageArr.push(\n                h('br'),\n                h('el-popover', { class: '', attrs: {trigger: 'hover', placement: 'top'}}, [\n                    h('span', { class: 'popover-text-num', slot: 'reference' }, this.errorMessages[error][1].list.length),\n                    h('span', {style: 'width: 300px'}, this.errorMessages[error][1].list.join(','))\n                  ]\n                ),\n                h('span', {class: 'primary-text'}, ` ${this.$t(this.errorMessages[error][0])}`)\n              );\n            } else {\n              messageArr.push(\n                h(this.errorType[error], {}, this.$t(...this.errorMessages[error]))\n              );\n            }\n          }\n        }\n      }\n      return messageArr;\n    },\n    submitNomination() {\n      if (this.isNeedCheckPoint) return;\n      if (this.actionLoading) return;\n      if (this.form.mode === 'create' && !this.modifyList.length) {\n        return this.$message.error(this.$t('addOrModifySomeProductsTip'));\n      }\n      if (this.form.mode === 'edit' && !this.modifyList.length && !this.isModifyAttachment) {\n        return this.$message.error(this.$t('noChangeTip'));\n      }\n      if (this.filterList.length && this.modifyList.length < this.filterList.length) {\n        return this.$message.error(this.$t('noEmptySkuTip'));\n      }\n      const errorMessage = ValidateProduct(this.modifyList, this.form.region);\n      if (errorMessage) {\n        return this.$message.error(errorMessage);\n      }\n      const h = this.$createElement;\n      this.$msgbox({\n        title: this.$t('commonSubmit'),\n        message: h('div', null, this.getSubmitConfirmTip()),\n        showCancelButton: true,\n        customClass: 'price-change-nominate-diy-confirm'\n      }).then(() => {\n        const isCreate = this.form.mode === 'create';\n        const modifyList = this.modifyList.map(item => {\n          let discount = parseFloat((1 - (item.discount / 100)).toFixed(2));\n          if (this.form.region === 'TW') {\n            discount = parseFloat((item.discount / 10).toFixed(2));\n          }\n          return {\n            ...item,\n            discount,\n            apply_gross_margin: this.getGrossMargin(item) || item.apply_gross_margin,\n            apply_contract_price: item.apply_contract_price,\n            apply_promotion_price: item.apply_promotion_price,\n            remark: item.remark || ''\n          };\n        });\n        const params = formatParams({\n          region: this.form.region,\n          campaign_id: Number(this.$route.params.id),\n          attachment_list: this.form.attachmentList,\n          apply_item_list: isCreate ? this.getItemGroup(modifyList, 'apply_item_sku_list') : '',\n          update_requests: isCreate ? '' : modifyList,\n          approval_confirm_submit: false,\n          confirmed_discount_existed_confirm_submit: false\n        });\n        this.submitNominationRequest(params);\n      }).catch(() => {});\n    },\n    editProducts() {\n      this.form.mode = 'edit';\n    },\n    cancelEdit() {\n      if (this.form.mode === 'create') {\n        this.goBack();\n      } else if (this.form.mode === 'edit') {\n        this.modifyList = [];\n        this.searchProducts(this.skuPager.pageIndex);\n        this.form.mode = 'detail';\n      }\n    },\n    goBack() {\n      this.$router.go(-1);\n    },\n    modifyItemSku(row, field, value) {\n      const product = this.itemList.find(item => item.item_id === row.item_id) || {};\n      const sku = (product && product.sku_list || []).find(sku => sku.sku_id === row.sku_id && sku.request_status === row.request_status && sku.request_status !== 11);\n      if (!sku) return false;\n      if ((field === 'is_cancel' && value === false)) {\n        const index = this.modifyList.findIndex(item => item.item_id === sku.item_id && item.sku_id === sku.sku_id);\n        this.$set(sku, field, value);\n        if (index > -1) {\n          this.modifyList.splice(index, 1); // 删除undo的sku\n        }\n      } else if (sku[field] !== value || (field === 'is_cancel' && value === true)) {\n        const index = this.modifyList.findIndex(item => item.item_id === sku.item_id && item.sku_id === sku.sku_id);\n        if (index === -1 && this.modifyList.length >= SignleProductLimit) {\n          return this.$message.error(`Maximum number of single registrations is ${SignleProductLimit}`);\n        }\n        this.$set(sku, field, value);\n        // 其他修改 则需要重新check\n        // checkpoint key 则证明当前已经check  field === is_check时取value\n        sku.is_check = CheckPointKeys.includes(field) || (field === 'is_check' && value);\n        if (index === -1) {\n          this.modifyList.push(sku); // 新增sku\n        } else {\n          this.modifyList.splice(index, 1, sku); // 更新sku\n        }\n      }\n    },\n    removeSku(row) {\n      const {item_id, sku_id} = row;\n      const productIndex = this.productList.findIndex(item => item.item_id === item_id);\n      const product = this.productList.find(item => item.item_id === item_id);\n      const skuIndex = product ? product.sku_list.findIndex(item => item.sku_id === sku_id) : -1;\n      if (skuIndex !== -1 && productIndex !== -1) {\n        product.sku_list.splice(skuIndex, 1);\n        this.productList[productIndex] = product;\n        const skuList = [];\n        this.productList.forEach(item => skuList.push(...(item.sku_list || []).map(sku => {\n          // 替换已经修改过的数据\n          const modifySku = this.modifyList.find(modify => modify.item_id === item.item_id && modify.sku_id === sku.sku_id);\n          return { ...item, ...(modifySku || sku) };\n        })));\n        this.productList = this.productList.filter(product => !!product.sku_list && !!product.sku_list.length);\n        this.modifyList = skuList;\n        this.searchProducts(1);\n      }\n    },\n    showAddProductsDialog() {\n      this.addProductsDialogVisible = true;\n    },\n    closeAddProductsDialog() {\n      this.addProductsDialogVisible = false;\n    },\n    addProducts(items) {\n      // items中存在已添加过的product\n      const exsitedProductList = this.productList.filter(product => items.find(item => item.item_id === product.item_id));\n      if (exsitedProductList) {\n        exsitedProductList.forEach(product => {\n          const targetItem = items.find(item => item.item_id === product.item_id);\n          if (targetItem) {\n            // 在targetItem的sku_list中， 不在product的sku_list中\n            const skuOnlyforItem = targetItem.sku_list.filter(itemSku => !product.sku_list.find(sku => sku.sku_id === itemSku.sku_id));\n            // 共同拥有\n            const skuForBoth = targetItem.sku_list.filter(itemSku => product.sku_list.find(sku => sku.sku_id === itemSku.sku_id));\n            // 不在targetItem的sku_list中， 在 product的sku_list中\n            let skuOnlyForProduct = product.sku_list.filter(productSku => !targetItem.sku_list.find(sku => sku.sku_id === productSku.sku_id));\n            skuOnlyForProduct = skuOnlyForProduct.map(sku => {\n              // 替换已经修改过的数据\n              const modifySku = this.modifyList.find(modify => modify.item_id === product.item_id && modify.sku_id === sku.sku_id);\n              return modifySku || sku;\n            });\n            product.sku_list = [...skuOnlyforItem, ...skuForBoth, ...skuOnlyForProduct].map(sku => {\n              let discount;\n              let promotion_price;\n              if (sku.apply_promotion_price) {\n                  promotion_price = roundPriceByRegion(sku.apply_promotion_price, this.form.region);\n                if (this.form.region === 'TW') {\n                  discount = parseFloat((parseInt(promotion_price * 100 / sku.original_price) / 10).toFixed(1));\n                } else {\n                  discount = (100 - parseInt(promotion_price * 100 / sku.original_price));\n                }\n              }\n              return {\n                ...sku,\n                remark: sku.remark || '',\n                discount,\n                apply_promotion_price: promotion_price,\n                apply_contract_price: sku.apply_contract_price === undefined ? sku.contract_price : sku.apply_contract_price,\n                limited_selling_quantities: targetItem.limited_selling_quantities || 0\n              };\n            });\n          }\n        });\n      }\n      // 未添加过的product\n      const list = items.filter(item => !this.productList.find(product => product.item_id === item.item_id));\n      // 仅存在productList中的product 取modifyList中的数据\n      this.productList.forEach(product => {\n        if (items.find(item => item.item_id !== product.item_id)) { // items中不存在\n          product.sku_list = (product.sku_list || []).map(sku => {\n            const modifySku = this.modifyList.find(modify => modify.item_id === product.item_id && modify.sku_id === sku.sku_id);\n            return modifySku || sku;\n          });\n        }\n      });\n      this.productList = [...this.productList, ...list.map(item => ({\n        ...item,\n        sku_list: (item.sku_list || []).map(sku => {\n          let discount;\n          let promotion_price;\n          if (sku.apply_promotion_price) {\n              promotion_price = roundPriceByRegion(sku.apply_promotion_price, this.form.region);\n            if (this.form.region === 'TW') {\n              discount = parseFloat((parseInt(promotion_price * 100 / sku.original_price) / 10).toFixed(1));\n            } else {\n              discount = (100 - parseInt(promotion_price * 100 / sku.original_price));\n            }\n          }\n          return {\n            ...sku,\n            remark: sku.remark || '',\n            discount: discount,\n            apply_promotion_price: promotion_price,\n            apply_contract_price: sku.apply_contract_price === undefined ? sku.contract_price : sku.apply_contract_price,\n            limited_selling_quantities: item.limited_selling_quantities || 0\n          };\n        })\n      }))];\n      const skuList = [];\n      this.productList.forEach(item => skuList.push(...(item.sku_list || []).map((sku, index) => ({...item, ...sku, skuIndex: index}))));\n      if (skuList.length > SignleProductLimit) {\n        this.$message.error(`Maximum number of single registrations is ${SignleProductLimit}`);\n        const list = skuList.slice(0, SignleProductLimit);\n        this.productList = this.getItemGroup(list);\n        this.modifyList = list;\n      } else {\n        this.modifyList = skuList;\n      }\n      this.searchProducts(1);\n    },\n    uploadProductSuccess({ data }) {\n      if (data.type === 'application/json') {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n          const result = JSON.parse(reader.result);\n          if (result.retcode !== 0) {\n            this.$message.error(result.info);\n          } else {\n            this.$message.success('Upload Successfully!');\n            this.addProducts(result.data.apply_item_list || []);\n          }\n        };\n        reader.readAsText(data);\n      } else {\n        this.$message.error('Upload fail. Please check the error report.');\n        downloadBlobFile(data, `PriceChangeUploadFailed${moment().format('YYYYMMDDHHmmss')}.txt`);\n      }\n    },\n    uploadProductFailed(res) {\n      return;\n    },\n    getGrossMargin(row) {\n      if (!row.apply_contract_price || !row.apply_promotion_price) return 0;\n      return parseFloat(((row.apply_promotion_price - row.apply_contract_price) / row.apply_promotion_price).toFixed(3));\n    },\n    getItemGroup(list, listKey = 'sku_list') {\n      const groupMap = {};\n      list.forEach(item => {\n        if (groupMap[item.item_id]) {\n          groupMap[item.item_id].push({ ...item, apply_gross_margin: this.getGrossMargin(item) });\n        } else {\n          groupMap[item.item_id] = [{ ...item, apply_gross_margin: this.getGrossMargin(item) }];\n        }\n      });\n      const group = [];\n      Object.keys(groupMap).forEach(key => {\n        group.push({ ...groupMap[key][0], [listKey]: groupMap[key] });\n      });\n      return group;\n    },\n    onSelectRows(rows) {\n      this.selectRows = rows;\n    },\n    fillSkuInfo() {\n      // 1906917,1906914,1569948,1906923,1906946,1906943, 1906959\n      if (this.selectRows.length === 0) {\n        return this.$message.error('Please select some lines first!');\n      } else {\n        this.selectRows.forEach(row => {\n          if ((this.isSellerDiscountCampaign || !this.isSellerDiscountCampaign && row.request_status !== 3) &&\n          !row.is_cancel && row.request_status !== 11 && row.request_status !== 5) {\n            Object.entries(this.fillForm).forEach(([key, value]) => {\n              if (value === '' || value === undefined) return;\n              if (key === 'apply_contract_price' && row.purchase_type !== 'Consignment') return;\n              this.$set(row, key, value);\n              this.modifyItemSku(row, key, value);\n              if (this.relationFillKeyMap[key]) {\n                const option = this.relationFillKeyMap[key];\n                this.$set(row, option.key, option.value(row));\n                this.modifyItemSku(row, option.key, option.value(row));\n              }\n            });\n          }\n        });\n      }\n    },\n    getFilterItemList(filters) {\n      CheckPointKeys.forEach(key => {\n        this.$set(this.searchForm, key, filters[key]);\n      });\n      this.searchProducts(1);\n    },\n    searchProducts(pageIndex = 1) {\n      this.skuPager.pageIndex = pageIndex;\n      if (this.form.mode === 'create') {\n        const skuList = this.filterList.slice((pageIndex - 1) * SkuPageCount, pageIndex * SkuPageCount);\n        this.itemList = this.getItemGroup(skuList.map((sku, index) => {\n          const modifySku = this.modifyList.find(item => item.item_id === sku.item_id && item.sku_id === sku.sku_id);\n          return { ...(modifySku || sku), skuIndex: index};\n        }));\n        this.skuPager.total = this.filterList.length;\n        return;\n      }\n      this.searching = true;\n      const params = this.getSearchParams(this.skuPager.pageIndex);\n      getNominationSkuList(formatParams(params)).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.cacheSkuList = [];\n          // 缓存列表的初始值 undo需要还原成原始值\n          (resp.data.items || []).forEach(item => this.cacheSkuList.push(...(item.sku_list || []).map(sku => {\n            let discount = 0;\n            if (this.form.region === 'TW') {\n              discount = parseFloat((sku.discount * 10).toFixed(1));\n            } else {\n              discount = parseInt(((1 - sku.discount) * 100).toFixed(0));\n            }\n            return {...item, ...sku, discount};\n            })));\n          let list = [];\n          (resp.data.items || []).forEach(item => list.push(...(item.sku_list || []).map((sku, index) => {\n            // 替换已经修改过的数据\n            const modifySku = this.modifyList.find(modify => modify.item_id === item.item_id && modify.sku_id === sku.sku_id && modify.request_status === sku.request_status);\n            let discount = 0;\n            if (this.form.region === 'TW') {\n              discount = modifySku ? modifySku.discount : parseFloat((sku.discount * 10).toFixed(1));\n            } else {\n              discount = modifySku ? modifySku.discount : parseInt(((1 - sku.discount) * 100).toFixed(0));\n            }\n            return { ...item, ...(modifySku || sku), discount, skuIndex: index };\n          })));\n          // 对于已经修改或的数据 展示在第一页前面\n          if (this.form.mode === 'edit' && this.skuPager.pageIndex === 1) {\n            const filterKey = this.getFilterKey();\n            const filterValue = this.searchForm[filterKey];\n            // 从返回的数据 过滤出 符合filter条件的数据\n            list = list.filter(sku => sku[filterKey] === filterValue);\n            const skuList = list.map(item => `${item.item_id}_${item.sku_id}_${item.request_status}`); // 对于 cancelled的数据 request_status === 11 存在多条一样的数据 有效数据只有一条\n            // 从修改过的数据 中过滤出 符合filter条件的数据\n            const filterModifyList = this.modifyList.filter(modify => {\n              return filterKey && modify[filterKey] === this.searchForm[filterKey] && !skuList.includes(`${modify.item_id}_${modify.sku_id}_${modify.request_status}`);\n            });\n            list = filterModifyList.concat(list);\n          }\n          this.itemList = this.getItemGroup(list);\n          this.skuPager.total = resp.data.total;\n\n          const { nominated_products_total, cancelled_products_total, sync_to_mkt_products_total } = resp.data;\n          this.tabSkuNum = { nominated_products_total, cancelled_products_total, sync_to_mkt_products_total };\n        }\n      });\n    },\n    getSearchParams(pageIndex) {\n      const { key, value} = this.searchForm;\n      const item_id = key === 'item_id' ? value : '';\n      const sku_id = key === 'sku_id' ? value : '';\n      const filterKey = this.getFilterKey();\n      const filterValue = this.searchForm[filterKey];\n      const params = {\n        item_id, sku_id, page_no: pageIndex, count: SkuPageCount, campaign_id: this.$route.params.id, products_type: this.productsType\n      };\n      params[filterKey] = filterValue;\n      return params;\n    },\n    getFilterKey() {\n      let filterKey = '';\n      Object.entries(this.searchForm).forEach(([key, value]) => {\n      if (CheckPointKeys.includes(key) && value && !filterKey) {\n        filterKey = key;\n      }\n      });\n      return filterKey;\n    },\n    clearSearchForm() {\n      if (this.$route.params.pid) {\n        this.searchForm.sku_id = '';\n        this.searchForm.request_status = '';\n      } else {\n        Object.keys(this.searchForm).forEach(key => this.$set(this.searchForm, key, ''));\n      }\n    },\n    getNominateDetail() {\n      getNominationDetail({ campaign_id: this.$route.params.id }).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.canProcess = hasPermission(Permission[NominateCollectionPermissions[resp.data.campaign_type]]);\n          this.canView = hasPermission(Permission[MarketViewCollectionPermissions[resp.data.campaign_type]]);\n          if (!this.canView) {\n            return this.$router.push('/admin/404');\n          }\n          this.form = {\n            ...this.form,\n            ...resp.data || {},\n            attachmentList: ((resp.data || {}).attachment_list || []).map(attachment => ({ ...attachment, status: 0 }))\n          };\n          this.attachmentLength = this.form.attachmentList.length;\n          if (this.form.mode === 'detail') {\n            this.searchProducts();\n          }\n          // duplicate discount\n          if (this.form.mode === 'create' && this.$store.getters.sellerDiscountDuplicateId) {\n            // 获取duplicate 活动的 已报名的sku\n            this.getDuplicateSku(this.$store.getters.sellerDiscountDuplicateId);\n            this.$store.commit('setDuplicateId', '');\n          }\n        }\n      }).catch(() => {\n        this.$message.error('Failed');\n      });\n    },\n    // duplicate discount 获取活动sku\n    async getDuplicateSku(id) {\n      try {\n        const res = await getDuplicateSku({campaign_id: id});\n        if (res.retcode !== 0) {\n          this.$message({ type: 'error', message: res.info });\n        } else {\n          this.addProducts(res.data.items);\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    }\n  },\n  created() {\n    this.getNominateDetail();\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import '~@/styles/common.scss';\n  .nominate-products {\n    padding: 20px;\n    .header-view {\n      display: flex;\n      margin-bottom: 30px;\n      border-bottom: 2px solid #EDEEF2;\n      .title-view {\n        width: 400px;\n        max-width: 50%;\n        padding-left: 5px;\n        height: 60px;\n        line-height: 60px;\n      }\n      .back-icon {\n        display: inline-block;\n        margin-right: 10px;\n        transform: scale(1.2);\n        cursor: pointer;\n      }\n      .nominate-title {\n        font-size: 26px;\n        color: rgba(0, 0, 0, 0.7);\n        font-weight: 600;\n        margin-right: 20px;\n      }\n      .back-margin-status {\n        color: rgb(244, 171, 97);\n      }\n      .action-view {\n        flex: 1;\n        display: flex;\n        align-items: center;\n        justify-content: flex-end;\n        .submit-section {\n          position: relative;\n          margin-right: 10px;\n          width: 180px;\n          height: 50px;\n          line-height: 50px;\n          font-size: 14px;\n          color: #86cd57;\n          cursor: pointer;\n          border: 1px solid #86cd57;\n          border-radius: 3px;\n          background-color: #fff;\n          transition: background .3s linear;\n        }\n        .submit-section:hover {\n          background-color: #86cd57;\n          color: #fff;\n          border-color: #fff;\n        }\n        .el-icon-loading {\n          margin-left: 40px;\n        }\n        .btn-icon {\n          display: inline-block;\n          vertical-align: middle;\n          margin-left: 40px;\n          width: 22px;\n          height: 22px;\n          vertical-align: middle;\n        }\n        .submit-btn {\n          position: absolute;\n          top: 0;\n          left: 0;\n          width: 100%;\n          height: 100%;\n          padding-left: 20px;\n          box-sizing: border-box;\n          text-align: center;\n        }\n      }\n    }\n    .section-title{\n      font-size: 18px;\n      color: #333333;\n      font-weight: 600;\n      margin: 24px 0;\n    }\n    .list-btn {\n      margin-left: 8px;\n    }\n    .disable-btn {\n      opacity: .5;\n      cursor: not-allowed;\n    }\n    .product-chosen {\n      font-size: 14px;\n      font-weight: 400;\n      color: #666;\n    }\n    .search-row{\n      margin-bottom: 28px;\n      .el-icon-search{\n        cursor: pointer;\n      }\n    }\n    .action-row {\n      display: flex;\n      align-items: center;\n      overflow: hidden;\n      margin-bottom: -20px;\n      .search-products {\n        flex: 1;\n        margin-right: 100px;\n        .search-row, .fill-row {\n          width: 100%;\n          display: flex;\n          margin-right: 20px;\n          .el-form {\n            flex: 1;\n            display: flex;\n            .el-form-item {\n              margin-right: 10px;\n              height: 36px;\n              line-height: 36px;\n              .el-input-number {\n                width: 100%;\n                .el-input__inner {\n                  padding: 0;\n                  text-align: left;\n                }\n              }\n            }\n          }\n        }\n      }\n      .add-products {\n        padding-top: 36px;\n        width: 400px;\n        margin-bottom: 20px;\n        text-align: right;\n        .add-btn {\n          width: 120px;\n        }\n      }\n    }\n    .action-btn-row{\n      display: flex;\n      justify-content: space-between;\n    }\n    .batch-fill-wrapper{\n      padding: 6px 12px 6px 16px;\n      margin-top: 12px;\n      background: #F1F2F5;\n      border: 1px solid #E8E8E8;\n      .apply-promotion-price{\n        width: 206px;\n      }\n      .discount{\n        width: 70px;\n      }\n      .apply-contract-price{\n        width: 156px;\n      }\n      .remark{\n        width: 490px;\n      }\n      .apply-to-fill{\n        float: right;\n        margin-top: 2px;\n      }\n    }\n    .product-table-section {\n      padding: 16px 24px;\n      margin-bottom: 24px;\n      border-left: 1px solid #E4E7ED;\n      border-right: 1px solid #E4E7ED;\n      border-bottom: 1px solid #E4E7ED;\n    }\n  }\n</style>\n\n<style lang=\"scss\">\n.price-change-nominate-diy-confirm {\n  width: 550px;\n  line-height: 24px;\n}\n  .nominate-products {\n    .search-products {\n      .search-row, .fill-row {\n        .el-input-number {\n          width: 100%;\n          .el-input__inner {\n            padding: 1px 1px 1px 3px;\n            text-align: left;\n          }\n        }\n      }\n    }\n    .search-input-with-select{\n      width: 520px;\n      background: #FFFFFF;\n      border: 1px solid #E2E6EC;\n      border-radius: 4px;\n      .el-select .el-input {\n        width: 101px;\n        background: #FAFBFD;\n        border-radius: 3px 0 0 3px;\n        // border: 1px solid #dcdfe6;\n        .el-input__inner{\n          &:hover{\n            border: 1px solid #dcdfe6;\n          }\n          &:focus{\n            border-color: transparent;\n          }\n        }\n      }\n      .el-input-group__prepend {\n        background-color: #fff;\n      }\n      .el-input__inner{\n        background-color: #fff;\n        border: 1px solid #E2E6EC;\n        border-top-right-radius: 4px;\n        border-bottom-right-radius: 4px;\n      }\n      .el-input__icon{\n        line-height: 30px;\n      }\n    }\n    .batch-fill-wrapper{\n      .el-form-item{\n        margin-bottom: 0;\n        .el-input__inner{\n          height: 38px;\n        }\n      }\n    }\n    .sku-type-tab {\n      margin-top: 24px;\n      &.el-tabs--card {\n        .el-tabs__header {\n          margin: 0;\n          .el-tabs__nav {\n            border: none;\n          }\n        }\n        .el-tabs__header .el-tabs__item {\n          font-weight: 600;\n          font-size: 14px;\n          border:1px solid #E4E7ED;\n          background-color:#F6F6F6;\n          margin-right:4px;\n          border-radius:4px 4px 0 0;\n        }\n        .el-tabs__header .el-tabs__item.is-active {\n          font-weight: 600;\n          border-bottom-color:#FFF;\n          background-color:#fff;\n          color:#3D6ED1;\n        }\n        .el-tabs__nav-wrap{\n          margin-bottom: -6px;\n        }\n      }\n    }\n  }\n  .popover-text-num{\n    color: #3D6ED1;\n    font-weight: 600;\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/marketingCenter/nominateProducts/productAttachment.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"productAttachment\" is not PascalCase.","line":19,"column":9,"nodeType":"Literal","endLine":19,"endColumn":28,"fix":{"range":[482,499],"text":"ProductAttachment"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <section class=\"product-attachment\">\n    <h3 class=\"section-title\">{{$t('sellerDiscountProductAttachment')}}</h3>\n    <FileListAttachment\n      :limit=\"{size: 5,count: 10}\"\n      ref=\"attachment\"\n      :attachmentList=\"attachmentList\"\n      :mode=\"mode\"\n      width=\"100%\"\n      @setAttachmentList=\"setAttachmentList\"\n    ></FileListAttachment>\n  </section>\n</template>\n\n<script>\nimport FileListAttachment from '~c/fileListAttachment/index';\n\nexport default {\n  name: 'productAttachment',\n  components: {\n    FileListAttachment\n  },\n  props: {\n    form: {\n      required: true,\n      type: Object\n    }\n  },\n  data() {\n    return {\n      attachmentList: []\n    };\n  },\n  computed: {\n    canEdit() {\n      return this.form.mode !== 'detail';\n    },\n    mode() {\n      return this.canEdit ? 'edit' : 'view';\n    }\n  },\n  watch: {\n    'form.attachmentList': {\n      handler() {\n        this.getAttachmentList();\n        this.$nextTick(() => {\n          this.$refs.attachment.initAttachmentList();\n        });\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    getAttachmentList() {\n      // status 0 no change 1 add 2 remove\n      const list = this.form.mode === 'create' ? this.form.attachmentList.filter(item => item.status !== 0) : this.form.attachmentList.filter(item => item.status !== 2);\n      this.attachmentList = list.map(item => {\n        const {attachment_name, attachment_url, attachment_type, attachment_size} = item;\n        return {\n          ...item,\n          file_name: attachment_name,\n          file_address: attachment_url,\n          file_type: attachment_type,\n          file_size: attachment_size\n        };\n      });\n    },\n    setAttachmentList(attachmentList) {\n      const list = attachmentList.map(file => {\n        return {\n          ...file,\n          attachment_name: file.file_name,\n          status: 1,\n          attachment_url: file.file_address,\n          attachment_type: file.file_type,\n          attachment_size: file.file_size\n        };\n      });\n      if (this.form.mode === 'create') {\n        this.$emit('update', {list: [...list], length: list.length});\n      } else {\n        const removeList = [];\n        const oldFileList = [...this.form.attachmentList];\n        oldFileList.forEach((oldFile, index) => {\n          const findeIndex = list.findIndex(newfile => oldFile.attachment_name === newfile.attachment_name && oldFile.attachment_url === newfile.attachment_url);\n          if (findeIndex === -1) { // 删除的文件状态标记为2\n            oldFileList[index].status = 2;\n            removeList.push(oldFileList[index]);\n          }\n        });\n        this.$emit('update', {list: [...list, ...removeList], length: list.length});\n      }\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.product-attachment{\n  .section-title{\n    margin-bottom: 24px;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/marketingCenter/nominateProducts/productTable.vue","messages":[{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"SkuPager\" is not in camelCase.","line":55,"column":5,"nodeType":"Property","endLine":55,"endColumn":21}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <section class=\"product-item-list\">\n    <el-table @selection-change=\"onSelectRows\" :span-method=\"itemGroup\" class=\"product-sku-list\" border :data=\"skuList\" @filter-change=\"onFilterChange\" ref=\"table\">\n      <el-table-column column-key=\"selection\" type=\"selection\" :label-width=\"`40px`\"></el-table-column>\n      <el-table-column :prop=\"schema.field\" :sortable=\"schema.sortable || false\" :width=\"schema.width || 'auto'\" :min-width=\"schema.minWidth\"\n        :column-key=\"schema.columnKey || ''\" :align=\"schema.align || 'center'\" :label=\"schema.label\" :filters=\"schema.filters\" :filter-multiple=\"schema.filterMultiple\"\n        v-for=\"schema in tableSchema\" :key=\"schema.field\" :fixed=\"schema.fixed || false\">\n        <template slot-scope=\"scope\">\n          <pms-table-cell @update=\"closeUpdate\" :forceUpdate=\"update\" :renderData=\"getTableCellRender(schema, scope.row, scope.$index)\"></pms-table-cell>\n        </template>\n      </el-table-column>\n    </el-table>\n    <el-pagination\n      :current-page=\"SkuPager.pageIndex\" background layout=\"prev, pager, next, jumper\" :total.sync=\"SkuPager.total\"\n      :page-size=\"SkuPager.size\" @current-change=\"handleChangePageIndex\"\n    ></el-pagination>\n  </section>\n</template>\n\n<script>\nimport PMSTableItem from '@/components/BaseItem/tableItem';\nimport { NominateStatusList, NominateRejectReasonList, PriceChangeResultList, CheckPointTypeList } from '@/utils/constant';\nimport { roundPriceByRegion } from '@/utils/format';\nimport { formatValue } from '@/utils/formatParams';\nconst ColumnKeyWhiteList = ['selection', 'itemID', 'itemName', 'supplierID', 'shopID', 'limitedSellingQuantities'];\nconst IsCannelled = 11;\nconst IsExpired = 5;\nconst IsComfirmed = 3;\nconst EditKeys = ['apply_promotion_price', 'apply_contract_price', 'discount', 'limited_selling_quantities', 'remark',\n  'gross_margin_check_point', 'limited_selling_quantities_check_point', 'historically_low_selling_price_check_point',\n  'promotion_price_check_point', 'promo_stock'];\nconst CheckPointKeys = ['gross_margin_check_point', 'limited_selling_quantities_check_point', 'historically_low_selling_price_check_point', 'promotion_price_check_point'];\n\nexport default {\n  data() {\n    return {\n      skuList: [],\n      update: false\n    };\n  },\n  props: {\n    region: String,\n    itemList: {\n      type: Array,\n      default: () => []\n    },\n    mode: {\n      type: String,\n      default: 'create'\n    },\n    campaignType: { // 1 product_promotion 2 CFS 3 seller discount 4 orignal price change\n      type: Number,\n      default: 3\n    },\n    SkuPager: Object,\n    cacheSkuList: {\n      type: Array,\n      default: () => []\n    },\n    productsType: {\n      type: String,\n      default: '1'\n    }\n  },\n  components: {\n    'pms-table-cell': PMSTableItem\n  },\n  computed: {\n    currency() {\n      return this.$store.getters.currencyMap[this.region];\n    },\n    tableSchema() {\n      return [\n        { columnKey: 'itemID', fixed: true, field: 'item_id', label: this.$t('productId'), width: 110, align: 'left' },\n        { columnKey: 'itemName', fixed: true, field: 'item_name', label: this.$t('productName'), width: 110, align: 'left' },\n        { columnKey: 'supplierID', field: 'supplier_id', label: this.$t('commonVendorSiteID'), width: 110, align: 'left', hidden: this.productsType === '3' },\n        { columnKey: 'shopID', field: 'shop_id', label: this.$t('commonShopIDOrName'), width: 160, align: 'left',\n          render: (schema, row) => ['p', {}, `${row.shop_id}/${row.shop_name}`] },\n        { columnKey: 'limitedSellingQuantities', field: 'limited_selling_quantities', label: this.$t('limitedSellingQuantities'), width: 120, align: 'right',\n          render: (schema, row, index, h) => this.mode === 'detail' ? this.getLimitedSellingQuantities(row) : ['el-input-number', {\n            class: 'qty-input-number',\n            props: { value: this.getLimitedSellingQuantities(row), min: 0, controls: false, precision: 0, disabled: this.getLimitedSellingQuantitiesDisabledStatus(row) },\n            on: {\n              input: (value) => this.submitLimitedSellingQuantitiesModify(index, schema.field, value)\n            }\n          }]\n        },\n        { columnKey: 'limited_selling_quantities_check_point', field: 'limited_selling_quantities_check_point', label: this.$t('limitedSellingCheckPoint'), align: 'left',\n          filters: this.checkPointFilters, filterMultiple: false, width: 140, render: (schema, row, index, h) => this.getCheckPointStatus(schema, row, index),\n          hidden: this.productsType === '3' },\n        { field: 'sku_id', width: '190px', label: this.$t('commonSkuID'), align: 'left' },\n        { field: 'variation', label: this.$t('commonVariation'), width: '120px', align: 'left', render: (schema, row) => !row[schema.field] ? '/' : row[schema.field] },\n        { field: 'original_price', label: `${this.$t('sellerDiscountOriginalPrice')} (${this.currency})`, align: 'right', render: (schema, row) => formatValue(row[schema.field] || 0), width: 90 },\n        { field: 'contract_price', label: `${this.$t('sellerDiscountContractPrice')} (${this.currency})`, align: 'right',\n          render: (schema, row) => formatValue(row[schema.field] || 0), width: 90, hidden: this.productsType === '3' },\n        { field: 'apply_contract_price', label: `${this.$t('marketingCenter.appliedContractPrice')} (${this.currency})`, width: '120px', align: 'right',\n          render: (schema, row, index, h) => row.purchase_type === 'Consignment' && this.mode !== 'detail' ? ['el-input-number', {\n            class: 'qty-input-number',\n            props: { value: this.skuList[index][schema.field], min: 0.01, controls: false, precision: 2, disabled: this.getDisabledStatus(row) },\n            on: { input: (value) => this.submitModify(index, schema.field, value) }\n          }] : (row.purchase_type === 'Outright' && !row[schema.field] ? '/' : formatValue(row[schema.field] || 0)), hidden: this.productsType === '3'\n        },\n        { field: 'historically_low_selling_price', label: `${this.$t('historicallyLowSellingPrice')} (${this.currency})`, align: 'right',\n          render: (schema, row) => row[schema.field] < 0 ? '/' : formatValue(row[schema.field] || 0), width: 140, hidden: this.productsType === '3' },\n        { field: 'apply_promotion_price', label: `${this.$t('appliedPromotionPrice', {currency: this.currency})}`,\n          minWidth: '130px', align: 'right', numProps: {precision: this.region === 'MY' || this.region === 'SG' ? 2 : 0},\n          render: (schema, row, index, h) => this.mode === 'detail' ? row[schema.field] : ['el-input', {\n            class: `qty-input-number ${this.isPriceError(row) ? 'error-input' : ''}`,\n            props: { value: this.skuList[index][schema.field], type: 'number', disabled: this.getDisabledStatus(row) },\n            on: {\n              input: (value) => this.onNumberInput(index, schema, value, false),\n              change: (value) => this.changePromotionPrice(value, row, index, schema)\n            }\n          }]\n        },\n        { field: 'discount', label: this.$t('marketingCenter.discount'), width: 120, align: 'right',\n          numProps: {min: 0, max: this.region === 'TW' ? 9.9 : 99, precision: this.region === 'TW' ? 1 : 0},\n          render: (schema, row, index, h) => this.mode === 'detail' ? `${this.region !== 'TW' ? Math.round(row[schema.field]) : row.discount.toFixed(1)} ${this.region === 'TW' ? this.$t('marketingCenter.discountUnit') : '%OFF'}` : ['div', {\n            class: `nominate-discount-input-style ${this.isDisountError(row) ? 'error-input' : ''}`\n          }, [h('el-input', {\n            props: { value: this.skuList[index][schema.field], type: 'number', disabled: this.getDisabledStatus(row) },\n            on: {\n              input: (value) => this.onNumberInput(index, schema, value),\n              change: (value) => this.onDiscountChange(value, row, index, schema)\n            }\n          }), h('span', {}, this.region === 'TW' ? this.$t('marketingCenter.discountUnit') : '%OFF')]]\n        },\n        {\n          field: 'promo_stock', label: this.$t('marketingCenterPromotionStock'), width: '120px', align: 'right', hidden: this.campaignType !== 3,\n          render: (schema, row, index, h) => this.mode === 'detail' ? `${row[schema.field]}` : ['el-input-number', {\n            class: 'qty-input-number',\n            props: { value: this.skuList[index][schema.field], min: 0, max: 1000000, controls: false, precision: 0, disabled: true }, // 产品说不可编辑\n            on: {\n              input: (value) => this.submitModify(index, schema.field, value)\n            }\n          }]\n        },\n        { field: 'apply_gross_margin', label: `${this.$t('marketingCenter.appliedGrossMargin')} (%)`, width: '120px', align: 'right',\n          render: (schema, row) => this.getGrossMargin(row), hidden: this.productsType === '3'\n        },\n        { columnKey: 'gross_margin_check_point', field: 'gross_margin_check_point', label: this.$t('grossMarginCheckPoint'), filters: this.checkPointFilters, width: 140, align: 'left',\n          filterMultiple: false, render: (schema, row, index, h) => this.getCheckPointStatus(schema, row, index), hidden: this.productsType === '3' },\n        { columnKey: 'promotion_price_check_point', field: 'promotion_price_check_point', label: this.$t('promotionPriceCheckPoint'), filters: this.checkPointFilters, width: 140, align: 'left',\n          filterMultiple: false, render: (schema, row, index, h) => this.getCheckPointStatus(schema, row, index), hidden: this.productsType === '3' },\n        { columnKey: 'historically_low_selling_price_check_point', field: 'historically_low_selling_price_check_point',\n          label: this.$t('historicallyLowPriceCheckPoint'), filters: this.checkPointFilters, width: 140, align: 'left',\n          filterMultiple: false, render: (schema, row, index, h) => this.getCheckPointStatus(schema, row, index), hidden: this.productsType === '3' },\n        { field: 'remark', width: '120px', label: this.$t('purchaseRequest.remark'), align: 'left',\n          render: (schema, row, index) => {\n            return ['create', 'edit'].includes(this.mode) ? ['el-input', {\n              props: { value: this.skuList[index][schema.field], max: 100, disabled: this.getDisabledStatus(row) },\n              on: { input: value => this.submitModify(index, schema.field, value) }\n            }] : row[schema.field];\n          }, hidden: this.productsType === '3'\n        },\n        { field: 'request_status', label: this.$t('purchaseRequest.status'), hidden: this.mode !== 'detail' || this.productsType === '3', width: 134, align: 'left',\n          render: (schema, row) => {\n            if (row.request_status === 1) return row.request_status_text || '';\n            const statusItem = NominateStatusList.find(item => item.value === row[schema.field]) || {};\n            return statusItem.label || '';\n          }\n        },\n        { field: 'process_status', label: this.$t('marketingCenter.priceChangeResult'), hidden: this.mode !== 'detail' || this.productsType === '3', width: 140, align: 'left',\n          render: (schema, row) => {\n            const statusItem = PriceChangeResultList.find(item => item.value === row[schema.field]) || {};\n            return statusItem.label || '';\n          }\n        },\n        { field: 'reject_reason', label: this.$t('supplier.rejectReason'), hidden: this.mode !== 'detail' || this.productsType === '3', width: 120, align: 'left',\n          render: (schema, row) => {\n            const statusItem = NominateRejectReasonList.find(item => item.value === row[schema.field]) || {};\n            return statusItem.label || '';\n          }\n        },\n        { field: 'reject_remark', label: this.$t('marketingCenter.rejectRemark'), hidden: this.mode !== 'detail' || this.productsType === '3', width: 120, align: 'left' },\n        { fixed: 'right', columnKey: 'action', field: 'action', label: this.$t('commonAction'), width: '96px', align: 'left',\n          render: (schema, row) => {\n            return ['el-button', {\n              class: 'danger-text-btn',\n              props: { type: 'text'},\n              on: { click: () => this.removeSku(row) }\n            }, this.$t('purchaseOrder.remove')];\n          }, hidden: this.mode !== 'create'\n        },\n        { fixed: 'right', columnKey: 'action', field: 'action', label: this.$t('commonAction'), width: '150px', align: 'left',\n          render: (schema, row, index, h) => this.getActionRender(schema, row, index, h),\n          hidden: this.mode !== 'edit'\n        }\n      ].filter(item => !item.hidden);\n    },\n    checkPointFilters() {\n      return CheckPointTypeList.map(({label, value}) => {\n        return {\n          text: label,\n          value\n        };\n      });\n    }\n  },\n  watch: {\n    itemList: {\n      handler(curr) {\n        const list = [];\n        curr.forEach(item => list.push(...(item.sku_list || []).map((sku, index) => ({\n          ...item,\n          ...sku,\n          apply_contract_price: sku.apply_contract_price === null ? undefined : sku.apply_contract_price || sku.contract_price,\n          limited_selling_quantities: sku.limited_selling_quantities || 0,\n          is_cancel: sku.is_cancel || false,\n          skuIndex: index,\n          promo_stock: sku.promo_stock || 0\n        }))));\n        this.skuList = list;\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    onNumberInput(index, schema, value) {\n      this.$set(this.skuList[index], schema.field, value);\n    },\n    onNumberChange(props, value) {\n      value = parseFloat(value);\n      if (props) {\n        const max = props.max;\n        const min = props.min;\n        const precision = props.precision;\n        value = (max && value > max) ? max : value;\n        value = (min && value < min) ? min : value;\n        value = precision === 0 || precision ? parseFloat(value.toFixed(precision)) : value;\n      }\n      return value;\n    },\n    onDiscountChange(value, row, index, schema) {\n      value = this.onNumberChange(schema.numProps, value);\n      let result = 0;\n      if (this.region === 'TW') {\n        result = row.original_price * value / 10;\n      } else {\n        result = row.original_price * (1 - value * 0.01);\n      }\n      const afterRoundResult = roundPriceByRegion(result, this.region);\n      this.$set(this.skuList[index], 'discount', value);\n      this.$emit('modifySku', this.skuList[index], 'discount', value);\n      this.$set(this.skuList[index], 'apply_promotion_price', afterRoundResult);\n      this.$emit('modifySku', this.skuList[index], 'apply_promotion_price', afterRoundResult);\n      this.$emit('nominationRefresh', {value, row, index});\n    },\n    changePromotionPrice(value, row, index, schema) {\n      value = this.onNumberChange(schema.numProps, value);\n      const afterRoundPrice = roundPriceByRegion(value, this.region) || 0;\n      this.skuList[index].apply_promotion_price = null;\n      this.$set(this.skuList[index], 'apply_promotion_price', afterRoundPrice);\n      this.$emit('modifySku', this.skuList[index], 'apply_promotion_price', afterRoundPrice);\n      if (this.region === 'TW') {\n        this.$set(this.skuList[index], 'discount', (parseInt(afterRoundPrice * 100 / row.original_price) / 10).toFixed(1));\n        this.$emit('modifySku', this.skuList[index], 'discount', (parseInt(afterRoundPrice * 100 / row.original_price) / 10).toFixed(1));\n      } else {\n        this.$set(this.skuList[index], 'discount', (100 - parseInt(afterRoundPrice * 100 / row.original_price)));\n        this.$emit('modifySku', this.skuList[index], 'discount', (100 - parseInt(afterRoundPrice * 100 / row.original_price)));\n      }\n        this.$emit('nominationRefresh', {value, row, index});\n    },\n    isPriceError(row) {\n      return row.apply_promotion_price <= 0 || Number(row.original_price) <= Number(row.apply_promotion_price);\n    },\n    isDisountError(row) {\n      let isError = false;\n      if (this.region === 'TW') {\n        isError = row.discount > 9.9 || row.discount <= 0;\n      } else {\n        isError = row.discount > 99 || row.discount <= 0;\n      }\n      return isError;\n    },\n    onFilterChange(filters) {\n      const params = {};\n      Object.entries(filters).forEach(([key, value]) => {\n        const filterValue = value.length ? value[0] : '';\n        params[key] = filterValue;\n        CheckPointKeys.forEach(checkKey => {\n          if (checkKey !== key) {\n            this.$refs.table.clearFilter(checkKey);\n          }\n        });\n      });\n      this.$emit('getFilterItemList', params);\n    },\n    getActionRender(schema, row, index, h) {\n      if (\n        (this.campaignType === 3 && (row.request_status === IsExpired || row.request_status === IsCannelled)) ||\n        ((this.campaignType === 1 || this.campaignType === 2) && (row.request_status === IsComfirmed || row.request_status === IsExpired || row.request_status === IsCannelled)) ||\n        (this.campaignType === 4 && (row.request_status === IsComfirmed || row.request_status === IsCannelled))\n      ) {\n        return '';\n      }\n      // orignal price change 4 只有cancel操作\n      // 其他campaignType 活动在 单独出现一个cancel操作\n      if (this.campaignType === 4 || !row.is_cancel) {\n        return (['div', {}, [\n          h('el-popover', { class: '', attrs: {trigger: 'hover', placement: 'top'}}, [\n              h('el-button', { class: 'danger-text-btn', slot: 'reference', props: { type: 'text' }, on: { click: () => this.cancelItem(row, index) }}, this.$t('commonCancel')),\n              h('span', {style: 'width: 300px'}, this.$t('sellerDiscountCancelTip'))\n            ]\n          )\n        ]]);\n      }\n      if (row.is_cancel) {\n        return (['div', {}, [\n          h('el-button', {\n            class: 'primary-text-btn',\n            props: { type: 'text' },\n            on: { click: () => this.undoItem(row, index) }\n          }, this.$t('commonUndo'))\n        ]]);\n      }\n      return (['div', {}, [\n        h('el-popover', { class: '', attrs: {trigger: 'hover', placement: 'top'}}, [\n            h('el-button', { class: 'danger-text-btn', slot: 'reference', props: { type: 'text' }, on: { click: () => this.cancelItem(row, index) }}, this.$t('commonCancel')),\n            h('span', {style: 'width: 300px'}, this.$t('sellerDiscountCancelTip'))\n          ]\n        )\n      ]]);\n    },\n    getCheckPointStatus(schemam, row, index) {\n      return (this.checkPointFilters.find(item => item.value === row[schemam.field]) || { text: '-' }).text;\n    },\n    closeUpdate() {\n      this.update = false;\n    },\n    itemGroup({ row, column, rowIndex, columnIndex }) {\n      if (ColumnKeyWhiteList.includes(column.columnKey)) {\n        const group = this.itemList.find(item => item.item_id === row.item_id) || {};\n        const groupFirstSku = (group.sku_list || [])[0] || {};\n        return row.sku_id === groupFirstSku.sku_id && row.skuIndex === 0 ? [(group.sku_list || []).length, 1] : [0, 0];\n      }\n    },\n    getGroupStatus(row) {\n      const group = this.itemList.find(item => item.item_id === row.item_id) || {};\n      return !row.is_closed && (group.sku_list || []).filter(sku => !sku.is_closed).length === 1;\n    },\n    getTableCellRender(schema, row, index) {\n      return { schema, row, index };\n    },\n    getDisabledStatus(row) {\n      return row.is_cancel || row.request_status === IsCannelled;\n    },\n    // seller discount 中 每一项sku 是IsExpired 或者 IsCannelled 则不可以编辑\n    // 在product promotion 中 其中一个是confirmed的状态 则不可编辑\n    getLimitedSellingQuantitiesDisabledStatus(row) {\n      if (this.campaignType === 1 || this.campaignType === 2) { // product promotion CFS\n        return (this.skuList.filter(sku => sku.item_id === row.item_id).some(sku => sku.request_status === IsComfirmed || sku.is_confirmed)) ||\n        (this.skuList.filter(sku => sku.item_id === row.item_id).every(sku => sku.request_status === IsExpired || sku.request_status === IsCannelled || sku.is_cancel));\n      }\n      return this.skuList.filter(sku => sku.item_id === row.item_id).every(sku => sku.request_status === IsExpired || sku.request_status === IsCannelled || sku.is_cancel);\n    },\n    getLimitedSellingQuantities(row) {\n      return (this.skuList.filter(sku => sku.item_id === row.item_id).find(sku => sku.limited_selling_quantities) || {limited_selling_quantities: 0}).limited_selling_quantities;\n    },\n    getGrossMargin(row) {\n      if (!row.apply_contract_price || !row.apply_promotion_price) return `0`;\n      return `${(parseFloat((row.apply_promotion_price - row.apply_contract_price) / row.apply_promotion_price) * 100).toFixed(1)} %`;\n    },\n    onSelectRows(rows) {\n      const list = [];\n      const itemMap = {};\n      rows.forEach(row => {\n        if (!itemMap[row.item_id]) {\n          itemMap[row.item_id] = true;\n          row.sku_list.forEach(sku => {\n            const index = this.skuList.findIndex(item => item.sku_id === sku.sku_id && item.item_id === row.item_id);\n            if (index !== -1) list.push(this.skuList[index]);\n          });\n        }\n      });\n      this.$emit('selectRows', list);\n    },\n    removeItem(row) {\n      this.$emit('removeItem', row.item_id);\n    },\n    removeSku(row) {\n      this.$emit('removeSku', row);\n    },\n    cancelItem(row, index) {\n      const cacheSku = this.cacheSkuList.find(sku => sku.sku_id === row.sku_id && row.request_status === sku.request_status);\n      EditKeys.forEach(key => {\n        if (key !== 'limited_selling_quantities') { // limited_selling_quantities 不需要重置\n          this.skuList[index][key] = cacheSku ? cacheSku[key] : this.skuList[index][key];\n          this.$emit('modifySku', this.skuList[index], key, cacheSku ? cacheSku[key] : this.skuList[index][key]);\n        }\n      });\n      this.skuList[index]['is_cancel'] = true;\n      this.$emit('modifySku', this.skuList[index], 'is_cancel', true);\n    },\n    undoItem(row, index) {\n      const field = 'is_cancel';\n      this.$emit('modifySku', this.skuList[index], field, false);\n      row.is_cancel = false;\n    },\n    submitLimitedSellingQuantitiesModify(index, field, value) {\n      const item_id = this.skuList[index]['item_id'];\n      this.skuList.forEach((sku, index) => {\n        if (sku.item_id === item_id && sku.request_status !== IsCannelled && sku.request_status !== IsExpired) {\n          this.submitModify(index, 'limited_selling_quantities', value);\n        }\n      });\n    },\n    submitModify(index, field, value) {\n      this.$set(this.skuList[index], field, value);\n      this.$emit('modifySku', this.skuList[index], field, value);\n    },\n    handleChangePageIndex(index) {\n      this.$emit('getItemList', index);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n  .product-sku-list {\n    .el-table__body-wrapper {\n      position: static;\n    }\n    .input-cell {\n      display: flex;\n      width: 100%;\n      align-items: center;\n      .cell-value {\n        flex: 1;\n        text-align: right;\n      }\n      .cell-unit {\n        width: 40px;\n        padding-left: 4px;\n        text-align: left;\n      }\n    }\n    .el-table__column-filter-trigger {\n      line-height: 18px;\n    }\n    .primary-text-btn {\n      color: #3d6ed1;\n      margin-right: 8px;\n    }\n    .danger-text-btn {\n      color: #f56c6c;\n    }\n    input[type=number] {\n        -moz-appearance:textfield;\n    }\n    input[type=number]::-webkit-inner-spin-button,\n    input[type=number]::-webkit-outer-spin-button {\n        -webkit-appearance: none;\n        margin: 0;\n    }\n  }\n</style>\n\n<style lang=\"scss\" scoped>\n  .product-item-list {\n    text-align: center;\n  }\n  .product-sku-list {\n    margin: 20px 0;\n  }\n  .danger-list-btn {\n    margin-left: 0px;\n    background-color: #f56c6c;\n  }\n  .qty-input-number {\n    width: 100px;\n  }\n  .error-input {\n    &/deep/ .el-input__inner {\n      border: 1px solid #FF4742;\n      background: white;\n    }\n  }\n.nominate-discount-input-style {\n    width: 110px;\n    height: 28px;\n    margin: 2px 0;\n    vertical-align: middle;\n    overflow: hidden;\n    text-align: left;\n    border: 1px solid #c2c2c2;\n    display: flex;\n    &/deep/ span {\n      line-height: 26px;\n      border-left: 1px solid#c2c2c2;\n      padding: 0 3px;\n      flex-shrink: 0;\n    }\n    color: #666;\n    &.error-input {\n      border: 1px solid #FF4742;\n    }\n    &/deep/.el-input-number--medium {\n      width: 60px;\n      height: 27px;\n      line-height: 27px;\n      margin-right: 6px;\n      border: none;\n      border-right:1px solid #c2c2c2;\n    }\n    &/deep/.el-input__inner {\n      border: none;\n      background: transparent;\n    }\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/marketingCenter/priceChangeApplication/baseInfo.vue","messages":[{"ruleId":"vue/no-unused-components","severity":2,"message":"The \"Attachment\" component has been registered but not used.","line":23,"column":5,"nodeType":"Property","endLine":23,"endColumn":15}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-form class=\"markrting-base-info\" label-width=\"140px\">\n    <p class=\"section-title\">{{$t('sellerDiscountCampaignInformation')}}</p>\n    <el-row class=\"pms-ui base-form\">\n      <el-col class=\"form-col\">\n        <el-form-item :label=\"$t('marketingCenter.priceChangeType')\">\n          <span class=\"item-gap\">:</span>\n          <section class=\"item-info\">{{$t('normalPriceChange')}}</section>\n        </el-form-item>\n      </el-col>\n    </el-row>\n  </el-form>\n</template>\n\n<script>\nimport Attachment from '@/views/budget/budgetAttachment';\n\nexport default {\n  data() {\n    return {};\n  },\n  components: {\n    Attachment\n  },\n  props: {\n    form: {\n      required: true,\n      type: Object\n    }\n  },\n  computed: {\n    canEdit() {\n      return this.form.mode !== 'detail' && !this.$route.params.pid;\n    },\n    attachmentList() {\n      const list = this.form.mode === 'create' ? this.form.attachmentList.filter(item => item.status !== 0)\n        : this.form.attachmentList.filter(item => item.status !== 2);\n      return list;\n    }\n  },\n  methods: {\n    uploadSuccess(res) {\n      this.$emit('add', res);\n    },\n    deleteAttachment(index) {\n      this.$emit('delete', index);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  .markrting-base-info {\n    .section-title {\n      font-size: 18px;\n      color: #333333;\n      font-weight: 600;\n      margin-bottom: 24px;\n    }\n    .item-gap {\n      display: inline-block;\n      margin-left: -8px;\n      vertical-align: top;\n    }\n    .item-info {\n      display: inline-block;\n      max-width: 300px;\n      margin-left: 20px;\n      word-break: break-all;\n      vertical-align: middle;\n      color: #333333;\n    }\n    .budget-attachment {\n      width: 100%;\n      margin: 0px 0 0 40px;\n    }\n    .attachment-limit {\n      margin-bottom: -40px;\n    }\n    .attachment-title {\n      margin-left: 40px;\n    }\n  }\n</style>\n<style lang=\"scss\">\n.markrting-base-info {\n  .el-form-item {\n    margin-bottom: 0;\n  }\n  .el-form-item__label{\n    color: #333333;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/marketingCenter/priceChangeApplication/dataList.vue","messages":[{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"SkuPager\" is not in camelCase.","line":93,"column":5,"nodeType":"Property","endLine":93,"endColumn":21}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"price-change-list pms-ui\">\n    <el-checkbox-group @change=\"commitCheckedRows\" v-model=\"checkedRows\">\n      <list-view\n        :dataList=\"skuList\"\n        :config=\"tableConfig\"\n        :tableSchema=\"tableSchema\"\n        @cellMouseEnter=\"cellMouseEnter\"\n        @cellMouseLeave=\"cellMouseLeave\"\n      >\n        <template slot=\"checkColumn\">\n          <el-table-column column-key=\"selection\" width=\"60px\" align=\"center\" :fixed=\"true\">\n            <template slot-scope=\"scope\" slot=\"header\">\n              <el-dropdown @click=\"resetCheckedType\" placement=\"bottom\" split-button trigger=\"click\" class=\"select-page-dropdown\" @command=\"changeSelectPageType\">\n                <span :class=\"`el-checkbox__input ${checkedType ? 'is-checked' : ''}`\">\n                  <span :class=\"`el-checkbox__inner ${checkedType ? 'is-checked' : ''}`\"></span>\n                </span>\n                <el-dropdown-menu class=\"options-field-menu\" slot=\"dropdown\">\n                  <el-dropdown-item command=\"current\">Current Page</el-dropdown-item>\n                  <el-dropdown-item command=\"all\">All Pages</el-dropdown-item>\n                </el-dropdown-menu>\n              </el-dropdown>\n            </template>\n            <template slot-scope=\"scope\">\n              <el-checkbox :disabled=\"checkedType === 'all'\" :label=\"scope.row\">{{''}}</el-checkbox>\n            </template>\n          </el-table-column>\n        </template>\n        <template slot=\"displayOptions\">\n          <el-table-column column-key=\"config\" width=\"40px\" align=\"center\" fixed=\"right\">\n            <template slot-scope=\"scope\" slot=\"header\">\n              <options-field btnType=\"icon\" class=\"option-field-wrapper\" @fieldChange=\"displayOptionsChange\"\n                :dropdownText=\"$t('marketingCenter.displayOptions')\" :fieldList=\"fieldConfig.list || []\" :defaultList=\"fieldConfig.default\">\n              </options-field>\n            </template>\n            <template slot-scope=\"scope\"></template>\n          </el-table-column>\n        </template>\n      </list-view>\n    </el-checkbox-group>\n    <el-pagination\n      :current-page=\"SkuPager.pageIndex\" background layout=\"sizes, prev, pager, next, jumper\" :total.sync=\"SkuPager.total\"\n      :page-size=\"SkuPager.size\" :page-sizes=\"[10, 20, 50, 100]\" @current-change=\"handleChangePageIndex\" @size-change=\"handleChangePageSize\"\n    ></el-pagination>\n    <history-dialog :activeID=\"activeID\" :visible=\"historyDialogVisible\" :info=\"activeRow\" @close=\"closeHistoryDialog\"></history-dialog>\n  </div>\n</template>\n\n<script>\nimport { PriceChangeDefaultDisplayList, PriceChangeDisplayFieldList, PriceChangeTypeList, NominateStatusList, PriceChangeResultList, TimeZoneByCountry,\n NominateRejectReasonList, BlackStockRejectReasonList, Permission, CheckPointTypeList, PriceChangeSubTypeList, NominateCollectionPermissions } from '@/utils/constant';\nimport OptionsField from '@/components/ApproveList/optionsField';\nimport ListView from '@/components/ApproveList/list';\nimport HistoryDialog from './historyDialog';\nimport { hasPermission } from '@/utils/permission';\nimport axios from 'axios';\nimport { formatValue } from '@/utils/formatParams';\n\nconst ColumnKeyWhiteList = ['itemID', 'itemName', 'action'];\nconst StorageKey = 'pmsPriceChangeDisplayFields';\n\nexport default {\n  data() {\n    const storageList = localStorage.getItem(StorageKey);\n    return {\n      activeID: '',\n      checkedType: '',\n      checkedRows: [],\n      activeRow: {},\n      historyDialogVisible: false,\n      skuList: [],\n      tableConfig: {\n        showCheckBox: false,\n        align: 'center',\n        maxHeight: '500px',\n        spanMethod: this.itemGroup,\n        rowClassName: this.rowClassName\n      },\n      showTableSchemaList: storageList ? JSON.parse(storageList) : PriceChangeDefaultDisplayList,\n      hoverRow: {}\n    };\n  },\n  components: {\n    OptionsField,\n    ListView,\n    HistoryDialog\n  },\n  props: {\n    itemList: {\n      type: Array,\n      default: () => []\n    },\n    SkuPager: Object,\n    region: String,\n    actionBlackList: {\n      type: Array,\n      default: () => []\n    },\n    activeViewport: {\n      type: String,\n      default: 'All'\n    },\n    cacheSearchForm: { // 去到详情缓存搜索条件\n      type: Object,\n      default: () => {}\n    },\n    canProcess: {\n      type: Boolean,\n      default: false\n    }\n  },\n  watch: {\n    itemList: {\n      handler(curr) {\n        const list = [];\n        curr.forEach(item => list.push(...(item.sku_list || []).map((sku, index) => ({\n          ...item,\n          ...sku,\n          attachment: (item.attachment_list || [])[0] || {},\n          skuIndex: index\n        }))));\n        this.skuList = list;\n        this.resetCheckedType();\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    cellMouseEnter({ row, column, cell, event }) {\n      this.hoverRow = row;\n    },\n    cellMouseLeave() {\n      this.hoverRow = {};\n    },\n    rowClassName({row}) {\n     if (row.item_id === this.hoverRow.item_id && row.change_type === this.hoverRow.change_type && row.campaign_id === this.hoverRow.campaign_id) {\n       return 'reset-hover-row';\n     }\n    },\n    itemGroup({ row, column, rowIndex, columnIndex }) {\n      if (ColumnKeyWhiteList.includes(column.columnKey)) {\n        const group = this.itemList.find(item => {\n          return item.item_id === row.item_id && item.change_type === row.change_type && item.campaign_id === row.campaign_id;\n        }) || {};\n        const groupFirstSku = (group.sku_list || [])[0] || {};\n        return row.sku_id === groupFirstSku.sku_id && row.skuIndex === 0 ? [(group.sku_list || []).length, 1] : [0, 0];\n      }\n    },\n    getGrossMargin(row) {\n      const field = row.change_type === 4 ? 'apply_original_price' : 'apply_promotion_price';\n      if (!row.apply_contract_price || !row[field]) return `0`;\n      return `${(parseFloat((row[field] - row.apply_contract_price) / row[field]) * 100).toFixed(1)} %`;\n    },\n    resetCheckedType() {\n      this.checkedType = '';\n      this.checkedRows = [];\n      this.$emit('checked', '', []);\n    },\n    changeSelectPageType(type) {\n      this.checkedType = type;\n      this.checkedRows = this.skuList;\n      this.$emit('checked', type, this.checkedRows);\n    },\n    commitCheckedRows() {\n      this.$emit('checked', this.checkedType, this.checkedRows);\n    },\n    displayOptionsChange(list) {\n      // skuAction 与 action 关联\n      const skuActionIndex = list.findIndex(item => item === 'skuAction');\n      const actionIndex = list.findIndex(item => item === 'action');\n      if (actionIndex > -1 && skuActionIndex === -1) { // 添加skuAction\n        list.splice(actionIndex, 0, 'skuAction');\n      }\n      if (actionIndex === -1 && skuActionIndex > -1) {\n        list.splice(skuActionIndex, 1); // 删除skuAction\n      }\n      this.showTableSchemaList = list;\n      localStorage.setItem(StorageKey, JSON.stringify(list));\n    },\n    handleChangePageIndex(index) {\n      this.$emit('getItemList', index);\n    },\n    handleChangePageSize(size) {\n      this.$emit('getItemList', 1, size);\n    },\n    approveItem(row) {\n      this.$emit('massApprove', [row]);\n    },\n    rejectItem(row) {\n      this.$emit('massReject', [row]);\n    },\n    rowClick(row, column) {\n      if (!['action', 'history'].includes(column.columnKey)) {\n        this.modifyItem(row, true);\n      }\n    },\n    modifyItem(row, isSearch) {\n      this.$store.commit('setActiveTab', {\n        module: 'priceChange',\n        tab: this.activeViewport\n      });\n      this.$store.commit('setSearchForm', {\n        module: 'priceChange',\n        form: this.cacheSearchForm,\n        field: 'searchParams'\n      });\n      if (row.change_type === 4) { // 原价变更\n        this.$router.push(`/admin/marketingCenter/priceChange/detail/${this.region}/${row.campaign_id}${isSearch ? ('/' + row.item_id) : ''}`);\n      } else if (row.change_type === 5) { // 黑库存变价\n        this.$router.push(`/admin/marketingCenter/promotion/black/stock/nominate/detail/${row.campaign_id}${isSearch ? ('/' + row.item_id) : ''}`);\n      } else {\n        this.$router.push(`/admin/marketingCenter/nominateProducts/detail/${row.campaign_id}${isSearch ? ('/' + row.item_id) : ''}`);\n      }\n    },\n    reSubmitItem(row) {\n      this.$emit('reSubmit', row);\n    },\n    showHistoryDialog(row) {\n      this.activeID = row.id;\n      this.activeRow = row;\n      this.historyDialogVisible = true;\n    },\n    closeHistoryDialog() {\n      this.historyDialogVisible = false;\n    },\n    previewAttachment(item) {\n      if (item.dataUrl) {\n        const open = window.open();\n        open.opener = null;\n        open.location = item.attachment_type === 'pdf' ? `/admin/PDF?file=${item.pdfUrl}` : item.dataUrl;\n      } else {\n        const url = item.attachment_url;\n        if (!url) return '';\n        let urlWithoutHost = url.match(/\\/pms_attachment_[a-z]*\\/\\w+/gi);\n        if (urlWithoutHost) {\n          urlWithoutHost = urlWithoutHost[0];\n        } else {\n          this.$message.error('invalid attachment url');\n          return;\n        }\n        axios.get(urlWithoutHost, { responseType: 'blob' }).then(res => {\n          const blobUrl = URL.createObjectURL(res.data);\n          if (item.attachment_type === 'pdf') {\n            this.$set(item, 'dataUrl', true);\n            this.$set(item, 'pdfUrl', blobUrl);\n          } else {\n            this.$set(item, 'dataUrl', blobUrl);\n          }\n          const open = window.open();\n          open.opener = null;\n          open.location = item.attachment_type === 'pdf' ? `/admin/PDF?file=${blobUrl}` : blobUrl;\n        }).catch(() => {\n          this.$message.error('Get Attachment Failed!');\n          this.$set(item, 'dataUrl', null);\n        });\n      }\n    },\n    getCheckPointStatus(schemam, row, index) {\n      return (this.checkPointFilters.find(item => item.value === row[schemam.field]) || { text: '-' }).text;\n    }\n  },\n  computed: {\n    currency() {\n      return this.$store.getters.currencyMap[this.region] || '';\n    },\n    fieldConfig() {\n      const storageList = localStorage.getItem(StorageKey);\n      return {\n        list: PriceChangeDisplayFieldList.map(item => ({ ...item, label: this.$t(item.label) })),\n        default: storageList ? JSON.parse(storageList) : PriceChangeDefaultDisplayList\n      };\n    },\n    checkPointFilters() {\n      return CheckPointTypeList.map(({label, value}) => {\n        return {\n          text: label,\n          value\n        };\n      });\n    },\n    tableSchema() {\n      return [\n        { columnKey: 'itemID', field: 'item_id', label: this.$t('supplier.productID'), fixed: true, width: 100, align: 'left'},\n        { columnKey: 'itemName', field: 'item_name', label: this.$t('supplier.productName'), fixed: true, width: 120, align: 'left' },\n        { columnKey: 'categoryName', field: 'category_names', label: this.$t('rule.categoryName'),\n          render: (schema, row) => `${(row.category_names || '').split(',').join(' > ')}`, width: '160px', align: 'left'\n        },\n        { columnKey: 'campaignName', field: 'campaign_name', label: this.$t('marketingCenter.campaignName'), width: '160px', align: 'left',\n          render: (schema, row) => row[schema.field] ? ['el-button', {\n            class: 'text-btn campaign-name-text',\n            props: {\n              type: 'text'\n            },\n            on: { click: () => this.modifyItem(row, false)\n            }}, row[schema.field]] : '-'\n        },\n        { columnKey: 'supplierID', field: 'supplier_id', label: this.$t('commonSupplierID'), width: 120, align: 'left' },\n        { columnKey: 'shopID', field: 'shop_id', label: this.$t('commonShopIDOrName'), width: 120, align: 'left',\n          render: (schema, row) => ['p', {}, `${row.shop_id}/${row.shop_name}`] },\n        { columnKey: 'changeType', field: 'change_type', label: this.$t('marketingCenter.priceChangeType'), align: 'left',\n          type: 'enum', options: PriceChangeTypeList.concat({ label: 'Product Promotion', value: 5 }), width: '160px'\n        },\n        { columnKey: 'subType', field: 'sub_type', label: this.$t('commonSubType'), align: 'left',\n          type: 'enum', options: PriceChangeSubTypeList, width: '160px'\n        },\n        { columnKey: 'changePeriod', field: 'changePeriod', label: this.$t('marketingCenter.priceChangePeriod'), align: 'left',\n          width: '160px', render: (schema, row, index, h) => ['div', {}, [\n            h('div', {}, `${row.change_period_start}`),\n            h('div', {}, `${row.change_period_end}`),\n            h('p', null, `${row.change_period_end ? TimeZoneByCountry[this.region] + '00' : ''}`)\n          ]]\n        },\n        { field: 'requester', label: this.$t('purchaseRequest.requester'), align: 'left' },\n        { field: 'request_time', label: this.$t('marketingCenter.requestTime'), width: 100, align: 'left',\n        render: (schema, row, index, h) => ['div', {}, [\n          h('div', {}, `${row.request_time}`),\n          h('p', null, `${row.request_time ? TimeZoneByCountry[this.region] + '00' : ''}`)\n        ]]\n        },\n        { field: 'sku_id', label: this.$t('purchaseOrder.skuID'), width: '120px', align: 'left' },\n        { field: 'variation', label: this.$t('commonVariation'), width: '120px', align: 'left' },\n        { field: 'apply_original_price', label: `${this.$t('marketingCenter.appliedOriginalPrice')} (${this.currency})`, width: 120, align: 'right',\n          render: (schema, row) => row.change_type === 4 ? formatValue(row[schema.field] || 0) : '-'\n        },\n        { field: 'historically_low_selling_price', width: '140px', label: `${this.$t('historicallyLowSellingPrice')} (${this.currency})`, align: 'right',\n         render: (schema, row) => row[schema.field] < 0 ? '-' : formatValue(row[schema.field] || 0) },\n        { field: 'original_price', label: `${this.$t('marketingCenter.originalPrice')} (${this.currency})`, width: 120, align: 'right',\n          render: (schema, row) => formatValue(row[schema.field] || 0)\n        },\n        { field: 'apply_promotion_price', label: `${this.$t('marketingCenter.appliedPromotionPrice')} (${this.currency})`, width: 140, align: 'right',\n          render: (schema, row) => row.change_type === 4 ? '-' : formatValue(row[schema.field] || 0)\n        },\n        { field: 'discount', label: this.$t('marketingCenter.discount'), align: 'right',\n          render: (schema, row) => row.change_type === 4 ? '-' : `${parseFloat((row.discount * 10).toFixed(1))} ${this.$t('marketingCenter.discountUnit')}`\n        },\n        {\n          field: 'promo_stock', label: this.$t('marketingCenterPromotionStock'), align: 'right',\n          render: (schema, row) => row.change_type === 4 ? '-' : row.change_type === 3 ? formatValue(row[schema.field] || 0) : 0\n        },\n        { field: 'contract_price', label: `${this.$t('marketingCenter.contractPrice')} (${this.currency})`, width: 120, align: 'right',\n          render: (schema, row) => formatValue(row[schema.field] || 0)\n        },\n        { field: 'apply_contract_price', label: `${this.$t('marketingCenter.appliedContractPrice')} (${this.currency})`, width: 120, align: 'right',\n          render: (schema, row) => !row[schema.field] ? '-' : formatValue(row[schema.field] || 0)\n        },\n        { field: 'apply_gross_margin', label: `${this.$t('marketingCenter.appliedGrossMargin')} (%)`, width: 120, align: 'right',\n          render: (schema, row) => this.getGrossMargin(row)\n        },\n        { columnKey: 'gross_margin_check_point', field: 'gross_margin_check_point', label: this.$t('grossMarginCheckPoint'), width: 140, align: 'left',\n          render: (schema, row, index, h) => this.getCheckPointStatus(schema, row, index) },\n          { columnKey: 'limitedSellingQuantities', field: 'limited_selling_quantities', label: this.$t('limitedSellingQuantities'), width: 110, align: 'right',\n          render: (schema, row) => !row[schema.field] ? '-' : formatValue(row[schema.field] || 0)},\n        { columnKey: 'limited_selling_quantities_check_point', field: 'limited_selling_quantities_check_point', label: this.$t('limitedSellingCheckPoint'),\n          width: 140, align: 'left', render: (schema, row, index, h) => this.getCheckPointStatus(schema, row, index) },\n        { columnKey: 'original_price_check_point', field: 'original_price_check_point', label: this.$t('originalPriceCheckPoint'), width: 140, align: 'left',\n          render: (schema, row, index, h) => this.getCheckPointStatus(schema, row, index) },\n        { columnKey: 'promotion_price_check_point', field: 'promotion_price_check_point', label: this.$t('promotionPriceCheckPoint'), width: 140, align: 'left',\n          render: (schema, row, index, h) => this.getCheckPointStatus(schema, row, index) },\n        { columnKey: 'historically_low_selling_price_check_point', field: 'historically_low_selling_price_check_point', label: this.$t('historicallyLowPriceCheckPoint'),\n          width: 140, align: 'left', render: (schema, row, index, h) => this.getCheckPointStatus(schema, row, index) },\n        { field: 'remark', label: this.$t('purchaseRequest.remark'), align: 'left' },\n        { field: 'attachment', columnKey: 'action', label: this.$t('purchaseRequest.attachment'), width: '100px', align: 'left',\n          render: (schema, row) => row.attachment.attachment_url ? ['div', {\n            class: 'text-decoration',\n            on: { click: () => this.previewAttachment(row.attachment)\n            }}, 'View'] : ''\n        },\n        { field: 'request_status', label: this.$t('purchaseRequest.status'), width: '100px', align: 'left',\n          render: (schema, row) => {\n            // 1 Pending Approval\n            if (row.request_status === 1) return row.request_status_text || '';\n            const statusItem = NominateStatusList.find(item => item.value === row[schema.field]) || {};\n            return statusItem.label || '';\n          }\n        },\n        { field: 'process_status', label: this.$t('marketingCenter.priceChangeResult'), width: '100px', align: 'left',\n          render: (schema, row) => {\n            const statusItem = PriceChangeResultList.find(item => item.value === row[schema.field]) || {};\n            return statusItem.label || '';\n          }\n        },\n        { field: 'reject_reason', label: this.$t('supplier.rejectReason'), width: '140px', align: 'left',\n          render: (schema, row) => {\n            const reasonList = row.change_type === 5 ? BlackStockRejectReasonList : NominateRejectReasonList;\n            const statusItem = reasonList.find(item => item.value === row[schema.field]) || {};\n            return statusItem.label || '';\n          }\n        },\n        { field: 'reject_remark', label: this.$t('marketingCenter.rejectRemark'), align: 'left' },\n        { columnKey: 'history', field: 'history', label: this.$t('approvalFlow.history'), align: 'left',\n          render: (schema, row) => {\n            return ['el-button', {\n              class: 'text-btn',\n              props: {\n                type: 'text'\n              },\n              on: { click: () => this.showHistoryDialog(row) }\n            }, this.$t('approvalFlow.history')];\n          }\n        },\n        // skuAction 是sku 纬度的操作\n        {\n          columnKey: 'skuAction', field: 'skuAction', label: this.$t('purchaseRequest.action'), width: '100px', fixed: 'right', align: 'left',\n          render: (schema, row, index, h) => {\n            return ['div', {}, [\n              {\n                field: 'reSubmit', render: h('el-button', { class: 'text-btn', props: {type: 'text'},\n                  on: { click: () => this.reSubmitItem(row) }\n                }, this.$t('commonResync')),\n                hidden: row.process_status !== 2 || row.request_status !== 3 || !hasPermission(Permission[NominateCollectionPermissions[row.change_type]]) },\n              { field: 'approve', render: h('el-button', { class: 'text-btn', props: {type: 'text'},\n                on: { click: () => this.approveItem(row)}\n              }, this.$t('purchaseRequest.approval')), hidden: !row.can_approve || row.request_status !== 1 || !this.canProcess },\n              { field: 'reject', render: h('el-button', { class: 'reject-btn', props: {type: 'text'},\n                on: { click: () => this.rejectItem(row)}\n              }, this.$t('purchaseRequest.reject')), hidden: !row.can_approve || row.request_status !== 1 || !this.canProcess }\n            ].filter(item => !item.hidden && !this.actionBlackList.includes(item.field)).map(item => item.render)];\n          }\n        },\n        // 这个是 item纬度的操作\n        { columnKey: 'action', field: 'action', width: '80px', fixed: 'right', align: 'left',\n          render: (schema, row, index, h) => {\n            return ['div', {}, [\n              { field: 'modify', render: h('el-button', { class: 'text-btn', props: {type: 'text'},\n                on: { click: () => this.modifyItem(row, true) }\n              }, this.$t('commonDetail'))}\n            ].filter(item => !item.hidden).map(item => item.render)];\n          }\n        }\n\n      ].filter(item => !item.hidden && this.showTableSchemaList.includes(item.field));\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  .select-page-dropdown {\n    padding: 0;\n    margin-left: -10px;\n  }\n  .display-options{\n    float: right;\n    margin-bottom: 8px;\n  }\n</style>\n\n<style lang=\"scss\">\n  .price-change-list {\n    text-align: center;\n    .el-checkbox-group {\n      margin-bottom: 20px;\n    }\n    .select-page-dropdown {\n      .el-button {\n        border: none;\n        background: unset;\n        padding: 0 0 0 10px;\n        &:nth-child(1) {\n          width: 20px;\n          padding-right: 16px;\n        }\n        &::before {\n          width: 0;\n        }\n      }\n    }\n    .text-decoration {\n      cursor: pointer;\n      text-decoration: underline;\n    }\n    .reject-btn {\n      color: #f56c6c;\n    }\n    .text-btn{\n      color: #3d61d1;\n    }\n    .reset-hover-row {\n      background-color: #f5f7fa;\n    }\n    .campaign-name-text {\n      white-space: normal;\n    }\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/marketingCenter/priceChangeApplication/detail.vue","messages":[{"ruleId":"vue/no-unused-components","severity":2,"message":"The \"AddProductDialog\" component has been registered but not used.","line":165,"column":5,"nodeType":"Property","endLine":165,"endColumn":21}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"nominate-products pms-ui pms-ele-ui\">\n    <section class=\"header-view\">\n      <section class=\"title-view\">\n        <i class=\"back-icon el-icon-arrow-left\" @click=\"goBack\"></i>\n        <span class=\"nominate-title\">{{form.mode === 'create' ? 'Create Price Change Request' : 'View Price Change Request'}}</span>\n      </section>\n      <section v-if=\"canOperate\" class=\"action-view\">\n        <template v-if=\"form.mode !== 'detail'\">\n          <el-button class=\"list-btn white-grey\" @click=\"cancelEdit\">{{$t('commonCancelEdit')}}</el-button>\n          <el-popover\n            placement=\"top-start\"\n            width=\"200\"\n            trigger=\"hover\"\n            :disabled=\"!isNeedCheckPoint\"\n            :content=\"$t('checkCriteriaInfoTip')\">\n            <el-button\n            :class=\"isNeedCheckPoint ? 'list-btn disable-btn' : 'list-btn'\"\n            slot=\"reference\"\n            :loading=\"actionLoading\"\n            @click=\"submitNomination\">{{$t('commonSubmit')}}</el-button>\n          </el-popover>\n        </template>\n        <el-button v-if=\"canEdit\" class=\"list-btn\"  @click=\"editProducts\">{{$t('commonEdit')}}</el-button>\n      </section>\n    </section>\n    <base-info :form=\"form\" @add=\"uploadSuccess\" @delete=\"deleteAttachment\"></base-info>\n    <section>\n      <p class=\"section-title\">{{$t('sellerDiscountProductInformation')}}\n        <span class=\"product-chosen\">\n          (SKU Number: {{skuNum}})\n        </span>\n      </p>\n      <section class=\"search-row-input\">\n        <el-input placeholder=\"Please Input\" v-model=\"searchForm.value\" class=\"search-input-with-select\" @change=\"searchProducts(1)\">\n          <el-select v-model=\"searchForm.key\" slot=\"prepend\" placeholder=\"Please Input\" @change=\"searchProducts(1)\">\n            <el-option :label=\"$t('productId')\" value=\"item_id\"></el-option>\n            <el-option :label=\"$t('commonSkuID')\" value=\"sku_id\"></el-option>\n          </el-select>\n          <i slot=\"suffix\" class=\"el-input__icon el-icon-search\" @click=\"searchProducts(1)\"></i>\n        </el-input>\n      </section>\n      <section class=\"action-btn-row\">\n        <div class=\"action-btn-left\" >\n           <list-mass-upload @uploadError=\"uploadProductFailed\" @uploadSuccess=\"uploadProductSuccess\" class=\"upload-products\"\n            :actionUrl=\"actionUrl\" :config=\"uploadConfig\" :uploadData=\"{ region: form.region }\">\n            <div slot=\"uploadSlot\">\n              <el-button class=\"list-btn\" :disabled=\"!canOperate || form.mode !== 'create'\">{{$t('commonUpload')}}</el-button>\n              <el-button type=\"text\" @click.stop :disabled=\"!canOperate || form.mode !== 'create'\">\n                <a :href='uploadConfig.templateLink'>\n                  {{$t('commonTemplate')}}\n                </a>\n              </el-button>\n            </div>\n            </list-mass-upload>\n        </div>\n        <div class=\"action-btn-right\">\n          <el-button class=\"list-btn\" :disabled=\"form.mode === 'detail' || skuPager.total === 0\" :loading=\"checkLoading\" @click=\"onCheckPoint\">\n            {{$t('sellerDiscountCheckCriteria')}}\n          </el-button>\n          <el-button class=\"list-btn\" @click=\"showAddProductsDialog\" :disabled=\"!canOperate || form.mode !== 'create'\">{{$t('commonAddSku')}} </el-button>\n        </div>\n      </section>\n      <section v-if=\"form.mode !== 'detail' && skuPager.total !== 0\"   class=\"batch-fill-wrapper\">\n        <el-form :inline=\"true\">\n          <el-form-item>\n            <el-input-number :controls=\"false\" :placeholder=\"$t('appliedOriginalPrice', {currency})\"\n              v-model=\"fillForm.apply_original_price\" class=\"apply-promotion-price\"></el-input-number>\n          </el-form-item>\n          <el-form-item>\n            <el-input-number :controls=\"false\" class=\"apply-contract-price\" :placeholder=\"$t('appliedContractPrice', {currency})\"\n              v-model=\"fillForm.apply_contract_price\"></el-input-number>\n          </el-form-item>\n          <el-form-item>\n            <el-input class=\"remark\" :placeholder=\"$t('commonRemark')\"  v-model=\"fillForm.remark\"></el-input>\n          </el-form-item>\n          <el-button @click=\"fillSkuInfo\" class=\"list-btn apply-to-fill\" :disabled=\"form.mode === 'detail' || skuPager.total === 0\">{{$t('sellerDiscountApplyToAll')}}</el-button>\n        </el-form>\n      </section>\n      <product-table\n        :SkuPager=\"skuPager\" @getItemList=\"searchProducts\" @getFilterItemList=\"getFilterItemList\"  :region=\"form.region\"\n        @selectRows=\"onSelectRows\" :mode=\"form.mode\" @removeSku=\"removeSku\" @modifySku=\"modifyItemSku\" :itemList=\"itemList\" :cacheSkuList=\"cacheSkuList\">\n      </product-table>\n    </section>\n    <product-attachment :form=\"form\" @update=\"uploadSuccess\"></product-attachment>\n      <add-sku-dialog\n      :availableOnly=\"false\"\n      @addProducts=\"addProducts\"\n      @getSku=\"getSkuList\"\n      @close=\"switchAddDialog(false)\"\n      width='1200px'\n      :skuSchema=\"addSkuSchema\"\n      :selectedSchema=\"selectedSkuSchema\"\n      :loading=\"addSkuLoading\"\n      :info=\"form\"\n      :pageTotal=\"addSkuTotal\"\n      :visible=\"addProductsDialogVisible\"\n      :skuList=\"computedSkuList\"\n      :hasDefault=\"false\"\n      popKey=\"commonSkuID\"\n      />\n  </div>\n</template>\n\n<script>\nimport ListMassUpload from '@/components/upload/blobResponseUpload';\nimport BaseInfo from './baseInfo';\nimport AddProductDialog from '../nominateProducts/addProductDialog';\nimport AddSkuDialog from '@/components/marketingCenter/addSkuDialog';\nimport ProductTable from './productTable';\nimport { NominateStatusList, ReturnCodeMap, Permission, FESKUStatus } from '@/utils/constant';\nimport { formatParams } from '@/utils/formatParams';\nimport { ValidateOriginalProduct } from '../validate';\nimport { hasPermission } from '@/utils/permission';\nimport moment from 'moment';\nimport { createPriceChange, updatePriceChange, getPriceChangeDetail } from '@/api/priceChange';\nimport { downloadBlobFile } from '@/utils/downloadFile';\nimport ProductAttachment from '../nominateProducts/productAttachment.vue';\nimport { nominationCheckPoint, getSkuList } from '@/api/nominate';\nconst CheckPointKeys = ['gross_margin_check_point', 'historically_low_selling_price_check_point', 'original_price_check_point', 'historically_low_selling_price'];\nconst SkuPageCount = 50;\nconst SignleProductLimit = 1000;\n\nexport default {\n  data() {\n    return {\n      canOperate: false,\n      form: {\n        mode: this.$route.params.mode || '',\n        campaign_id: Number(this.$route.params.id) || null,\n        campaign_type: 4,\n        region: this.$route.params.region || '',\n        attachmentList: [],\n        actionUrl: `/api/item_price_change/requests/original_price/upload_sku/`\n      },\n      attachmentLength: 0,\n      cacheCheckPointLength: 0,\n      // Add Sku\n      addProductsDialogVisible: false,\n      addSkuTotal: 0,\n      addSkuList: [],\n      addSkuLoading: false,\n      //\n      actionLoading: false,\n      NominateStatusList,\n      searchForm: { request_status: '', item_id: '', sku_id: '', key: 'item_id', value: Number(this.$route.params.pid) || ''},\n      selectRows: [],\n      skuPager: {\n        size: SkuPageCount,\n        pageIndex: 1,\n        total: 0\n      },\n      total: 0,\n      fillForm: { apply_original_price: undefined, apply_contract_price: undefined, remark: '' },\n      productList: [],\n      itemList: [],\n      modifyList: [],\n      isModifyAttachment: false, // 是否修改了附件\n      cacheSkuList: [], // 缓存获取的skuList\n      checkLoading: false,\n      errorMessages: {}\n    };\n  },\n  components: {\n    AddProductDialog,\n    AddSkuDialog,\n    BaseInfo,\n    ListMassUpload,\n    ProductTable,\n    ProductAttachment\n  },\n  computed: {\n    addSkuSchema() {\n      return [\n        { label: 'commonSkuID', field: 'sku_id', width: 90 },\n        { label: 'commonSkuName', field: 'sku_name' },\n        { label: 'commonSupplierID', field: 'supplier_id', width: 90 },\n        { label: 'commonShopIdName', width: 140, render: (schema, row) => (`${row.shop_id}/ ${row.shop_name}`)},\n        { label: 'commonPurchaseType', field: 'purchase_type', width: 110 },\n        { label: 'commonStatus', field: 'sku_status', width: 70, render: (schema, row) => {\n          return FESKUStatus.find(item => (item.value === row.sku_status)).label;\n        }}\n      ];\n    },\n    selectedSkuSchema() {\n      return [\n        { label: 'commonSkuID', field: 'sku_id', width: 90},\n        { label: 'commonSkuName', field: 'sku_name' }\n      ];\n    },\n    computedSkuList() {\n      return this.addSkuList.map(item => {\n        const reason = [];\n        item.isAdded = this.modifyList.some(sku => sku.sku_id === item.sku_id);\n        if (item.is_nominated) {\n          reason.push('exist outstanding normal price change');\n        }\n        if (item.sku_status !== 1) {\n          reason.push('SKU Status');\n        }\n        if (item.is_no_inbound_outright) {\n          reason.push(' No Inbound Info');\n        }\n        if (item.is_deprecated) {\n          reason.push('Deprecated');\n        }\n        if (item.has_virtual) {\n          reason.push('Virtual Sku');\n        }\n        if (item.purchase_type === 'Unknown') {\n          reason.push('No linked supplier');\n        }\n        this.$set(item, 'reason', reason);\n        return item;\n      });\n    },\n    currency() {\n      return this.$store.getters.currencyMap[this.$route.params.region];\n    },\n    skuNum() {\n        if (this.form.mode === 'create') {\n          let total = 0;\n          this.productList.forEach((item, index) => {\n            total += item.sku_list.length;\n          });\n          return total;\n        } else {\n          return this.total;\n        }\n    },\n    actionUrl() {\n      return `/api/item_price_change/requests/original_price/upload_sku/`;\n    },\n    uploadConfig() {\n      return {\n        btnText: this.$t('purchaseRequest.upload'),\n        templateLink: '/admin/data/priceChangeTemplate.xlsx',\n        templateText: this.$t('rule.template')\n      };\n    },\n    isNeedCheckPoint() {\n      if (this.modifyList.some(item => !item.is_check)) {\n        return true;\n      } else {\n        if (this.form.mode === 'create') {\n          return this.cacheCheckPointLength !== this.modifyList.length;\n        }\n        return false;\n      }\n    },\n    canEdit() {\n      return this.form.mode === 'detail' && !!this.canOperate;\n    },\n    filterList() {\n      if (this.form.mode === 'create') {\n        const filterList = [];\n        const {request_status = '', key, value} = this.searchForm;\n        const item_id = key === 'item_id' ? value : '';\n        const sku_id = key === 'sku_id' ? value : '';\n        const filterKey = this.getFilterKey();\n        const filterValue = this.searchForm[filterKey];\n        this.productList.forEach(product => {\n          if (`${product.item_id || ''}`.includes(item_id)) {\n            const filterSKUList = (product.sku_list || []).filter(sku => {\n              return (sku.sku_id || '').includes(sku_id) && (sku.request_status || '').includes(request_status) && (`${sku[filterKey]}` || '').includes(filterValue);\n            }).map(sku => ({ ...product, ...sku }));\n            if (filterSKUList.length) filterList.push(...filterSKUList);\n          }\n        });\n        return filterList;\n      } else {\n        return [];\n      }\n    }\n  },\n  methods: {\n    getSkuList(data) {\n      this.addSkuLoading = true;\n      const params = {...data};\n      getSkuList(params).then(res => {\n        if (res.retcode === 0) {\n          this.addSkuList = res.data.items;\n          this.addSkuTotal = res.data.total;\n        } else {\n          this.$message.error(res.info);\n        }\n      }).catch(e => {\n        this.$message.error(e.info);\n      }).finally(_ => {\n        this.addSkuLoading = false;\n      });\n    },\n    switchAddDialog(isOpen) {\n      this.addProductsDialogVisible = isOpen;\n      if (!isOpen) {\n        this.addSkuList = [];\n      }\n    },\n    async onCheckPoint() {\n      this.cacheCheckPointLength = this.modifyList.length;\n      if (this.form.mode === 'edit' && !this.modifyList.length) {\n        return this.$message.error(this.$t('noChangeTip'));\n      }\n      const errorMessage = ValidateOriginalProduct(this.modifyList);\n      if (errorMessage) {\n        return this.$message.error(errorMessage);\n      }\n      const params = {\n        sku_list: this.modifyList.filter(sku => !sku.is_cancel).map(item => {\n          return {\n            ...item,\n            apply_gross_margin: this.getGrossMargin(item)\n          };\n        })\n      };\n      if (this.$route.params.id) {\n        params.campaign_id = Number(this.$route.params.id);\n      } else {\n        params.region = this.form.region;\n        params.change_type = 4;\n      }\n      this.checkLoading = true;\n      const res = await nominationCheckPoint(params);\n      this.checkLoading = false;\n      let attachmentMessage = '';\n      if (res.retcode === 0) {\n        if (!this.isCheckPonit) this.isCheckPonit = true;\n        this.errorMessages = {};\n        const needAttachment = res.data.need_attachment;\n        if (res.data.approve_role_name_list && res.data.approve_role_name_list.length > 0) {\n          this.errorMessages.approval = ['marketingCenter.priceChangeNeedApproveTips', { roles: (res.data.approve_role_name_list || []).join('、') }];\n          if (needAttachment && this.attachmentLength === 0) {\n            attachmentMessage = this.$t('marketingCenter.priceChangeNeedAttachmentTips', { roles: (res.data.approve_role_name_list || []).join('、')});\n          }\n        }\n        if (attachmentMessage) {\n          this.$message({\n            dangerouslyUseHTMLString: true,\n            message: `<p>${this.$t('checkCriteriaInfoSuccessTip')}</p><p>${attachmentMessage}</p>`,\n            type: 'warning'\n          });\n        } else {\n          this.$message.success(this.$t('checkCriteriaInfoSuccessTip'));\n        }\n        const checkList = res.data.check_point_list;\n        this.modifyList.forEach((sku, index) => {\n          const checkSku = checkList.find(item => item.sku_id === sku.sku_id);\n          if (checkSku) {\n            CheckPointKeys.forEach(key => {\n              // 修改modifyList中的值\n              this.modifyItemSku(sku, key, checkSku[key]);\n              // 修改modifyList中的值\n              sku[key] = checkSku[key];\n            });\n          }\n          this.modifyItemSku(sku, 'is_check', true);\n          sku['is_check'] = true;\n        });\n        if (this.form.mode === 'create') {\n          this.productList = this.getItemGroup(this.modifyList);\n        }\n        // check after data modify searchProducts();\n        this.searchProducts();\n      } else {\n        this.$message.error(res.info);\n      }\n    },\n    uploadSuccess(attachmentList) {\n      this.form.attachmentList = attachmentList.list;\n      this.attachmentLength = attachmentList.length;\n      if (!this.isModifyAttachment) this.isModifyAttachment = true;\n    },\n    deleteAttachment(index) {\n      if (this.form.mode === 'create') {\n        this.form.attachmentList.splice(index, 1);\n      } else {\n        this.form.attachmentList[index].status = 2;\n      }\n    },\n    submitNominationRequest(params = {}) {\n      const requestFun = this.form.mode === 'create' ? createPriceChange : updatePriceChange;\n      this.actionLoading = true;\n      return requestFun(params).then(resp => {\n        if (resp.retcode === ReturnCodeMap.PRICE_CHANGE_NEED_APPROVE) {\n          return this.$confirm(this.$t('marketingCenter.priceChangeNeedApproveTips', { roles: (resp.data.approve_role_name_list || []).join('、') }), '', {\n            showConfirmButton: true\n          }).then(() => {\n            const confirmParams = { ...params, confirm_submit: true };\n            this.submitNominationRequest(confirmParams);\n          }).catch(() => { this.actionLoading = false; });\n        }\n        if (resp.retcode === ReturnCodeMap.PRICE_CHANGE_NEED_ATTACHMENT) {\n          this.actionLoading = false;\n          return this.$message.error(this.$t('marketingCenter.priceChangeNeedAttachmentTips', { roles: (resp.data.approve_role_name_list || []).join('、') }));\n        }\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.$message.success('Success');\n          const region = this.$route.params.region;\n          const id = this.$route.params.id ? this.$route.params.id : resp.data.campaign_id;\n          if (this.$route.params.mode !== 'detail') {\n            this.$router.replace(`/admin/marketingCenter/priceChange/detail/${region}/${id}`);\n          }\n          this.form.id = id;\n          this.form.mode = 'detail';\n          this.modifyList = [];\n          this.searchProducts();\n        }\n        this.actionLoading = false;\n      }).catch(() => { this.$message.error('Failed'); this.actionLoading = false; });\n    },\n    getSubmitConfirmTip() {\n      const h = this.$createElement;\n      const cancelSkuList = this.modifyList.filter(sku => sku.is_cancel).map(sku => sku.sku_id);\n      const modifySkuList = this.modifyList.filter(sku => !sku.is_cancel).map(sku => sku.sku_id);\n      const messageArr = [h('span', null, this.$t('sellerDiscountSubmitTip')), h('br')];\n      if (this.form.mode === 'edit') {\n        if (modifySkuList.length) {\n          messageArr.push(\n            h('br'),\n            h('el-popover', { class: '', attrs: {trigger: 'hover', placement: 'top'}}, [\n                h('span', { class: 'popover-text-num', slot: 'reference' }, modifySkuList.length),\n                h('span', {style: 'width: 300px'}, modifySkuList.join(','))\n              ]\n            ),\n            h('span', {class: 'primary-text'}, '  of SKUs Modified')\n          );\n        }\n        if (cancelSkuList.length) {\n          messageArr.push(\n            h('br'),\n            h('el-popover', { class: '', attrs: {trigger: 'hover', placement: 'top'}}, [\n                h('span', { class: 'popover-text-num', slot: 'reference' }, cancelSkuList.length),\n                h('span', {style: 'width: 300px'}, cancelSkuList.join(','))\n              ]\n            ),\n            h('span', {class: 'primary-text'}, ' of SKUs Cancelled'),\n            h('br'),\n            h('span', {}, 'Any cancelled product cannot be enabled and needs to be re-nominated again.')\n          );\n        }\n      }\n      return messageArr;\n    },\n    submitNomination() {\n      if (this.isNeedCheckPoint) return;\n      if (this.actionLoading) return;\n      if (!this.modifyList.length) {\n        return this.$message.error(this.$t('addOrModifySomeProductsTip'));\n      }\n      if (this.filterList.length && this.modifyList.length < this.filterList.length) {\n        return this.$message.error(this.$t('noEmptySkuTip'));\n      }\n      const errorMessage = ValidateOriginalProduct(this.modifyList);\n      if (errorMessage) {\n        return this.$message.error(errorMessage);\n      }\n      const h = this.$createElement;\n      this.$msgbox({\n        title: this.$t('commonSubmit'),\n        message: h('div', null, this.getSubmitConfirmTip()),\n        showCancelButton: true\n      }).then(() => {\n        const isCreate = this.form.mode === 'create';\n        const modifyList = this.modifyList.map(item => ({\n          ...item,\n          apply_gross_margin: this.getGrossMargin(item),\n          apply_contract_price: item.is_closed ? 0 : item.apply_contract_price,\n          apply_original_price: item.is_closed ? 0 : item.apply_original_price\n        }));\n        const params = formatParams({\n          region: this.form.region,\n          attachment_list: this.form.attachmentList,\n          apply_item_list: isCreate ? this.getItemGroup(modifyList, 'apply_item_sku_list') : '',\n          apply_item_sku_list: isCreate ? '' : modifyList,\n          confirm_submit: false\n        });\n        this.submitNominationRequest(params);\n      }).catch(() => {});\n    },\n    editProducts() {\n      this.form.mode = 'edit';\n    },\n    cancelEdit() {\n      if (this.form.mode === 'create') {\n        this.goBack();\n      } else if (this.form.mode === 'edit') {\n        this.modifyList = [];\n        this.searchProducts(this.skuPager.pageIndex);\n        this.form.mode = 'detail';\n      }\n    },\n    goBack() {\n      this.$router.go(-1);\n    },\n    modifyItemSku(row, field, value) {\n      const product = this.itemList.find(item => item.item_id === row.item_id) || {};\n      const sku = (product.sku_list || []).find(sku => sku.sku_id === row.sku_id && sku.request_status === row.request_status);\n      if (!sku) return;\n      if ((field === 'is_cancel' && value === false)) {\n        const index = this.modifyList.findIndex(item => item.item_id === sku.item_id && item.sku_id === sku.sku_id);\n        this.$set(sku, field, value);\n        if (index > -1) {\n          this.modifyList.splice(index, 1); // 删除undo的sku\n        }\n      } else if (sku[field] !== value || (field === 'is_cancel' && value === true)) {\n        const index = this.modifyList.findIndex(item => item.item_id === sku.item_id && item.sku_id === sku.sku_id);\n        if (index === -1 && this.modifyList.length >= SignleProductLimit) {\n          return this.$message.error(`Maximum number of single registrations is ${SignleProductLimit}`);\n        }\n        this.$set(sku, field, value);\n        // 其他修改 则需要重新check\n        // checkpoint key 则证明当前已经check field === is_check时取value\n        sku.is_check = CheckPointKeys.includes(field) || (field === 'is_check' && value);\n        if (index === -1) {\n          this.modifyList.push(sku); // 新增sku\n        } else {\n          this.modifyList.splice(index, 1, sku); // 更新sku\n        }\n      }\n    },\n    removeSku(row) {\n      const {item_id, sku_id} = row;\n      const productIndex = this.productList.findIndex(item => item.item_id === item_id);\n      const product = this.productList.find(item => item.item_id === item_id);\n      const skuIndex = product ? product.sku_list.findIndex(item => item.sku_id === sku_id) : -1;\n      if (skuIndex !== -1 && productIndex !== -1) {\n        product.sku_list.splice(skuIndex, 1);\n        this.productList[productIndex] = product;\n        const skuList = [];\n        this.productList.forEach(item => skuList.push(...(item.sku_list || []).map(sku => {\n          // 替换已经修改过的数据\n          const modifySku = this.modifyList.find(modify => modify.item_id === item.item_id && modify.sku_id === sku.sku_id);\n          return { ...item, ...(modifySku || sku)};\n        })));\n        this.productList = this.productList.filter(product => !!product.sku_list && !!product.sku_list.length);\n        this.modifyList = skuList;\n        this.searchProducts(1);\n      }\n    },\n    showAddProductsDialog() {\n      this.addProductsDialogVisible = true;\n    },\n    closeAddProductsDialog() {\n      this.addProductsDialogVisible = false;\n    },\n    addProducts(items) {\n      // 已添加过的product\n      const exsitedProductList = this.productList.filter(product => items.find(item => item.item_id === product.item_id));\n      if (exsitedProductList) {\n        exsitedProductList.forEach(product => {\n          const targetItem = items.find(item => item.item_id === product.item_id);\n          if (targetItem) {\n            // 在targetItem的sku_list中， 不在product的sku_list中\n            const skuOnlyforItem = targetItem.sku_list.filter(itemSku => !product.sku_list.find(sku => sku.sku_id === itemSku.sku_id));\n            // 共同拥有\n            const skuForBoth = targetItem.sku_list.filter(itemSku => product.sku_list.find(sku => sku.sku_id === itemSku.sku_id));\n            // 不在targetItem的sku_list中， 在 product的sku_list中\n            let skuOnlyForProduct = product.sku_list.filter(productSku => !targetItem.sku_list.find(sku => sku.sku_id === productSku.sku_id));\n            skuOnlyForProduct = skuOnlyForProduct.map(sku => {\n              // 替换已经修改过的数据\n              const modifySku = this.modifyList.find(modify => modify.item_id === product.item_id && modify.sku_id === sku.sku_id);\n              return modifySku || sku;\n            });\n            product.sku_list = [...skuOnlyforItem, ...skuForBoth, ...skuOnlyForProduct].map(sku => ({\n              ...sku,\n              remark: sku.remark || '',\n              apply_original_price: sku.apply_original_price === null ? undefined\n                : (sku.apply_original_price === undefined ? sku.original_price : sku.apply_original_price),\n              apply_contract_price: sku.apply_contract_price === undefined ? sku.contract_price : sku.apply_contract_price\n            }));\n          }\n        });\n      }\n      // 未添加过的product\n      const list = items.filter(item => !this.productList.find(product => product.item_id === item.item_id));\n      // 仅存在productList中的product 取modifyList中的数据\n      this.productList.forEach(product => {\n        if (items.find(item => item.item_id !== product.item_id)) { // items中不存在\n          product.sku_list = (product.sku_list || []).map(sku => {\n            const modifySku = this.modifyList.find(modify => modify.item_id === product.item_id && modify.sku_id === sku.sku_id);\n            return modifySku || sku;\n          });\n        }\n      });\n      this.productList = [...this.productList, ...list.map(item => ({\n        ...item,\n        sku_list: (item.sku_list || []).map(sku => ({\n          ...sku,\n          remark: sku.remark || '',\n          apply_original_price: sku.apply_original_price === null ? undefined\n            : (sku.apply_original_price === undefined ? sku.original_price : sku.apply_original_price),\n          apply_contract_price: sku.apply_contract_price === undefined ? sku.contract_price : sku.apply_contract_price\n        }))\n      }))];\n      const skuList = [];\n      this.productList.forEach(item => skuList.push(...(item.sku_list || []).map((sku, index) => ({...item, ...sku, skuIndex: index}))));\n      if (skuList.length > SignleProductLimit) {\n        this.$message.error(`Maximum number of single registrations is ${SignleProductLimit}`);\n        const list = skuList.slice(0, SignleProductLimit);\n        this.productList = this.getItemGroup(list);\n        this.modifyList = list;\n      } else {\n        this.modifyList = skuList;\n      }\n      this.searchProducts(1);\n    },\n    uploadProductSuccess({ data }) {\n      if (data.type === 'application/json') {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n          const result = JSON.parse(reader.result);\n          if (result.retcode !== 0) {\n            this.$message.error(result.info);\n          } else {\n            this.$message.success('Upload Successfully!');\n            this.addProducts(result.data.apply_item_list || []);\n          }\n        };\n        reader.readAsText(data);\n      } else {\n        this.$message.error('Upload fail. Please check the error report.');\n        downloadBlobFile(data, `PriceChangeUploadFailed${moment().format('YYYYMMDDHHmmss')}.txt`);\n      }\n    },\n    uploadProductFailed(res) {\n      return;\n    },\n    getGrossMargin(row) {\n      if (!row.apply_contract_price || !row.apply_original_price) return 0;\n      return parseFloat(((row.apply_original_price - row.apply_contract_price) / row.apply_original_price).toFixed(3));\n    },\n    getItemGroup(list, listKey = 'sku_list') {\n      const groupMap = {};\n      list.forEach(item => {\n        if (groupMap[item.item_id]) {\n          groupMap[item.item_id].push({ ...item, apply_gross_margin: this.getGrossMargin(item) });\n        } else {\n          groupMap[item.item_id] = [{ ...item, apply_gross_margin: this.getGrossMargin(item) }];\n        }\n      });\n      const group = [];\n      Object.keys(groupMap).forEach(key => {\n        group.push({ ...groupMap[key][0], [listKey]: groupMap[key] });\n      });\n      return group;\n    },\n    onSelectRows(rows) {\n      this.selectRows = rows;\n    },\n    fillSkuInfo() {\n      // 1906917,1906914,1569948\n      if (this.selectRows.length === 0) {\n        return this.$message.error('Please select some lines first!');\n      } else {\n        this.selectRows.forEach(row => {\n          if (!row.is_cancel && row.request_status !== 11 && row.request_status !== 3) {\n            Object.entries(this.fillForm).forEach(([key, value]) => {\n              if (value === '' || value === undefined) return;\n              if (key === 'apply_contract_price' && row.purchase_type !== 'Consignment') return;\n              this.$set(row, key, value);\n              this.modifyItemSku(row, key, value);\n            });\n          }\n        });\n      }\n    },\n    getFilterItemList(filters) {\n      CheckPointKeys.forEach(key => {\n        this.$set(this.searchForm, key, filters[key]);\n      });\n      this.searchProducts(1);\n    },\n    searchProducts(pageIndex = 1) {\n      this.skuPager.pageIndex = pageIndex;\n      if (this.form.mode === 'create') {\n        const skuList = this.filterList.slice((pageIndex - 1) * SkuPageCount, pageIndex * SkuPageCount);\n        this.itemList = this.getItemGroup(skuList.map((sku, index) => {\n          const modifySku = this.modifyList.find(item => item.item_id === sku.item_id && item.sku_id === sku.sku_id);\n          return {...(modifySku || sku), skuIndex: index };\n        }));\n        this.skuPager.total = this.filterList.length;\n        return;\n      }\n      this.searching = true;\n      const params = this.getSearchParams(this.skuPager.pageIndex);\n      getPriceChangeDetail(params).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.cacheSkuList = [];\n          // 缓存列表的初始值 undo需要还原成原始值\n          (resp.data.items || []).forEach(item => this.cacheSkuList.push(...(item.sku_list || []).map(sku => ({...item, ...sku }))));\n          let list = [];\n          [resp.data || {}].forEach(item => list.push(...(item.sku_list || []).map((sku, index) => {\n            // 替换已经修改过的数据\n            const modifySku = this.modifyList.find(modify => modify.item_id === item.item_id && modify.sku_id === sku.sku_id && modify.request_status === sku.request_status);\n            return { ...item, ...(modifySku || sku), skuIndex: index };\n          })));\n          this.total = list.length;\n          // 对于已经修改或的数据 展示在第一页前面\n          if (this.form.mode === 'edit' && this.skuPager.pageIndex === 1) {\n            const filterKey = this.getFilterKey();\n            const filterValue = this.searchForm[filterKey];\n            // 从返回的数据 过滤出 符合filter条件的数据\n            list = list.filter(sku => sku[filterKey] === filterValue);\n            const skuList = list.map(item => `${item.item_id}_${item.sku_id}_${item.request_status}`);\n            // 从修改过的数据 中过滤出 符合filter条件的数据\n            const filterModifyList = this.modifyList.filter(modify => {\n              return filterKey && modify[filterKey] === this.searchForm[filterKey] && !skuList.includes(`${modify.item_id}_${modify.sku_id}_${modify.request_status}`);\n            });\n            list = filterModifyList.concat(list);\n          }\n          this.itemList = this.getItemGroup(list);\n          this.skuPager.total = resp.data.total;\n          if (!this.form.attachmentList.length) {\n            this.form.attachmentList = ((resp.data || {}).attachment_list || []).map(attachment => ({ ...attachment, status: 0 }));\n            this.attachmentLength = this.form.attachmentList.length;\n          }\n        }\n      });\n    },\n    getSearchParams(pageIndex) {\n      const { key, value} = this.searchForm;\n      const item_id = key === 'item_id' ? value : '';\n      const sku_id = key === 'sku_id' ? value : '';\n      const filterKey = this.getFilterKey();\n      const filterValue = this.searchForm[filterKey];\n      const params = {\n        item_id, sku_id,\n        page_no: pageIndex, count: SkuPageCount,\n        campaign_id: Number(this.$route.params.id)\n      };\n      params[filterKey] = filterValue;\n      return formatParams(params);\n    },\n    getFilterKey() {\n      let filterKey = '';\n      Object.entries(this.searchForm).forEach(([key, value]) => {\n      if (CheckPointKeys.includes(key) && value && !filterKey) {\n        filterKey = key;\n      }\n      });\n      return filterKey;\n    },\n    clearSearchForm() {\n      Object.keys(this.searchForm).forEach(key => this.$set(this.searchForm, key, ''));\n    }\n  },\n  created() {\n    this.canOperate = hasPermission(Permission.NORMAL_PRICE_REQUESTOR_ACCESS);\n    if (this.$route.params.mode === 'detail' && this.$route.params.pid) {\n      this.searchProducts();\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import '~@/styles/common.scss';\n  .nominate-products {\n    padding: 20px;\n    .list-btn {\n      margin-left: 8px;\n    }\n    .disable-btn {\n      opacity: .5;\n      cursor: not-allowed;\n    }\n    .header-view {\n      display: flex;\n      margin-bottom: 30px;\n      border-bottom: 2px solid #EDEEF2;\n      .title-view {\n        width: 400px;\n        max-width: 50%;\n        padding-left: 5px;\n        height: 60px;\n        line-height: 60px;\n      }\n      .back-icon {\n        display: inline-block;\n        margin-right: 10px;\n        transform: scale(1.2);\n        cursor: pointer;\n      }\n      .nominate-title {\n        font-size: 20px;\n        color: rgba(0, 0, 0, 0.7);\n        font-weight: 600;\n        margin-right: 20px;\n      }\n      .back-margin-status {\n        color: rgb(244, 171, 97);\n      }\n      .action-view {\n        flex: 1;\n        display: flex;\n        align-items: center;\n        justify-content: flex-end;\n        .submit-section {\n          position: relative;\n          margin-right: 10px;\n          width: 180px;\n          height: 50px;\n          line-height: 50px;\n          font-size: 14px;\n          color: #86cd57;\n          cursor: pointer;\n          border: 1px solid #86cd57;\n          border-radius: 3px;\n          background-color: #fff;\n          transition: background .3s linear;\n        }\n        .submit-section:hover {\n          background-color: #86cd57;\n          color: #fff;\n          border-color: #fff;\n        }\n        .el-icon-loading {\n          margin-left: 40px;\n        }\n        .btn-icon {\n          display: inline-block;\n          vertical-align: middle;\n          margin-left: 40px;\n          width: 22px;\n          height: 22px;\n          vertical-align: middle;\n        }\n        .submit-btn {\n          position: absolute;\n          top: 0;\n          left: 0;\n          width: 100%;\n          height: 100%;\n          padding-left: 20px;\n          box-sizing: border-box;\n          text-align: center;\n        }\n      }\n    }\n    .section-title{\n      font-size: 18px;\n      color: #333333;\n      font-weight: 600;\n      margin: 24px 0;\n    }\n    .product-chosen {\n      font-size: 14px;\n      font-weight: 400;\n      color: #666;\n    }\n    .search-row-input{\n      margin-bottom: 28px;\n      cursor: pointer;\n    }\n    .action-row {\n      display: flex;\n      align-items: center;\n      overflow: hidden;\n      margin-bottom: -20px;\n      .search-products {\n        flex: 1;\n        margin-right: 100px;\n        .search-row, .fill-row {\n          width: 100%;\n          display: flex;\n          margin-right: 20px;\n          .el-form {\n            flex: 1;\n            display: flex;\n            .el-form-item {\n              margin-right: 10px;\n              height: 36px;\n              line-height: 36px;\n              .el-input-number {\n                width: 100%;\n                .el-input__inner {\n                  padding: 0;\n                  text-align: left;\n                }\n              }\n            }\n          }\n        }\n      }\n      .add-products {\n        padding-top: 36px;\n        width: 400px;\n        margin-bottom: 20px;\n        text-align: right;\n        .add-btn {\n          width: 120px;\n        }\n      }\n    }\n    .action-btn-row{\n      display: flex;\n      justify-content: space-between;\n    }\n    .batch-fill-wrapper{\n      padding: 6px 12px 6px 16px;\n      margin-top: 12px;\n      background: #F1F2F5;\n      border: 1px solid #E8E8E8;\n      .apply-promotion-price{\n        width: 206px;\n      }\n      .discount{\n        width: 70px;\n      }\n      .apply-contract-price{\n        width: 220px;\n      }\n      .remark{\n        width: 490px;\n      }\n      .apply-to-fill{\n        float: right;\n        margin-top: 2px;\n      }\n    }\n  }\n</style>\n\n<style lang=\"scss\">\n  .nominate-products {\n    .search-products {\n      .search-row, .fill-row {\n        .el-input-number {\n          width: 100%;\n          .el-input__inner {\n            padding: 1px 1px 1px 3px;\n            text-align: left;\n          }\n        }\n      }\n    }\n    .search-row-input{\n      .search-input-with-select{\n        width: 520px;\n        background: #FFFFFF;\n        border: 1px solid #E2E6EC;\n        border-left: none;\n        border-radius:4px;\n        .el-select .el-input {\n          width: 101px;\n          background: #FAFBFD;\n          border-radius: 3px 0 0 3px;\n          .el-input__inner{\n            border-radius: 4px 0 0 4px;\n            &:hover{\n              border-radius: 4px 0 0 4px;\n            }\n          }\n        }\n        .el-input-group__prepend {\n          background-color: #fff;\n          border: none;\n        }\n        .el-input__inner{\n          background-color: #fff;\n          border: none;\n          border-left: 1px solid #E2E6EC;\n        }\n        .el-input__icon{\n          line-height: 30px;\n        }\n      }\n    }\n\n    .batch-fill-wrapper{\n      .el-form-item{\n        margin-bottom: 0;\n        .el-input__inner{\n          height: 38px;\n        }\n      }\n    }\n  }\n  .popover-text-num{\n    color: #3D6ED1;\n    font-weight: 600;\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/marketingCenter/priceChangeApplication/historyDialog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/marketingCenter/priceChangeApplication/index.vue","messages":[{"ruleId":"vue/no-side-effects-in-computed-properties","severity":2,"message":"Unexpected side effect in \"canMassOpreate\" computed property.","line":104,"column":9,"nodeType":"AssignmentExpression","endLine":104,"endColumn":60}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"dashboard price-change-center pms-ui\">\n    <page-header :createHidden=\"!canCreate\" :pageTitle=\"$t('menuPriceChangeCenter')\" :createBtnText=\"$t('marketingCenter.createPriceChange')\"\n      :createBtnSlot=\"true\" @onCreate=\"createPriceChange\">\n      <div class=\"list-right-btns-wrapper\">\n        <el-popover\n          :disabled=\"hasConfigFlow\"\n          placement=\"top-start\"\n          v-if=\"canCreate\"\n          width=\"200\"\n          trigger=\"hover\"\n          :content=\"$t('PriceChangeNominatePopOver')\">\n          <div slot=\"reference\">\n            <el-button\n              class='btn'\n              :disabled=\"!hasConfigFlow\"\n              @click='createPriceChange'>\n              <span>\n                {{$t('marketingCenter.createPriceChange')}}\n              </span>\n            </el-button>\n          </div>\n        </el-popover>\n      </div>\n    </page-header>\n    <el-tabs v-model=\"activeViewport\" type=\"card\" class=\"sub-tab\" @tab-click=\"switchViewport\">\n      <el-tab-pane :label=\"$t('commonAll')\" name=\"All\"></el-tab-pane>\n      <el-tab-pane :label=\"$t('commonMyPendingApprovals')\" name=\"PendingApproval\"></el-tab-pane>\n      <el-tab-pane :label=\"$t('commonMyRequest')\" name=\"MyRequest\"></el-tab-pane>\n    </el-tabs>\n    <search-form @massApprove=\"onMassApprove\" @massReject=\"onMassReject\" @export=\"exportList\" @search=\"onPageChange\"\n      :region=\"searchForm.region\" :form=\"searchForm\" @modify=\"modifyForm\" :actionBlackList=\"actionBlackList\" :canProcess=\"canProcess\"\n      :filterBlackList=\"filterBlackList\" :firstShowCount=\"firstShowCount\" :activeViewport=\"activeViewport\" :canMassOpreate=\"canMassOpreate\"\n      @exportHistoryAction=\"showExportHistory\"></search-form>\n    <el-main v-loading=\"loading\">\n      <data-list @massApprove=\"onMassApprove\" @massReject=\"onMassReject\" @checked=\"changeCheck\" @getItemList=\"onPageChange\" :canProcess=\"canProcess\"\n        :actionBlackList=\"rowActionBlackList\" @reSubmit=\"reSubmitRequest\" :region=\"searchForm.region\" :SkuPager=\"SkuPager\" :itemList=\"itemList\"\n        :activeViewport=\"activeViewport\" :cacheSearchForm=\"{...searchForm, ...SkuPager}\"></data-list>\n    </el-main>\n    <reject-dialog @confirm=\"confirmReject\" :reasonVisible=\"rejectDialogVisible\" @close=\"closeRejectDialog\" :type=\"campaginType\"></reject-dialog>\n    <export-history-dialog :needErrorFile=\"true\" :interval=\"15000\" :taskType=\"120\" :visible=\"isShowExportHistory\" @close=\"closeExportHistory\"></export-history-dialog>\n  </div>\n</template>\n\n<script>\nimport SearchForm from './searchForm';\nimport DataList from './dataList';\nimport RejectDialog from './rejectDialog';\nimport { getPriceChangeList, exportPriceChange, approvePriceChange, rejectPriceChange,\n  syncPriceChange, getPendingPriceChangeList, exportPendingApprovalPriceList } from '@/api/priceChange';\nimport { checkHasConfigFlow } from '@/api/nominate';\nimport { formatParams } from '@/utils/formatParams';\nimport { hasPermission } from '@/utils/permission';\nimport { Permission } from '@/utils/constant';\nimport PageHeader from '@/components/marketingCenter/pageHeader';\nimport ExportHistoryDialog from '@/components/ApproveList/exportHistoryDialog';\n\nconst SkuPageCount = 50;\nconst defaultForm = {\n  purchase_type: '', item_sku_id: '', shop_id: '', change_type: '',\n  request_status: '', supplier_id: '', gross_margin_min: undefined, gross_margin_max: undefined,\n  requester: '', request_time_end: '', request_time_start: '', change_period_start: '',\n  change_period_end: '', campaign_name: '', process_status: '', change_period: [], request_time: [],\n  gross_margin_check_point: '', original_price_check_point: '', promotion_price_check_point: '',\n  limited_selling_quantities_check_point: '', historically_low_selling_price_check_point: '', region: ''\n};\nconst NotNeedSearchKeys = ['change_period', 'request_time', 'gross_margin_min,gross_margin_max'];\n\nexport default {\n  data() {\n    return {\n      activeViewport: 'All', // All or Pending Approval or My Request\n      searchForm: { ...defaultForm, region: this.$store.getters.country },\n      SkuPager: {\n        pageIndex: 1,\n        size: SkuPageCount,\n        total: 0\n      },\n      hasConfigFlow: false,\n      itemList: [],\n      loading: false,\n      rejectList: undefined,\n      rejectDialogVisible: false,\n      checkedRows: [],\n      checkedType: '',\n      campaginType: 1,\n      firstShowCount: 7, // 首页显示条件的个数\n      isShowExportHistory: false\n    };\n  },\n  computed: {\n    countryList() {\n      return [...new Set([...this.$store.getters.countryList.map(item => item.country)])];\n    },\n    canCreate() {\n      return hasPermission(Permission.NORMAL_PRICE_REQUESTOR_ACCESS);\n    },\n    canProcess() {\n      return hasPermission(Permission.NORMAL_PRICE_APPROVER_ACCESS);\n    },\n    canMassOpreate() { // TODO\n      if (this.checkedRows.length > 0) {\n        const isFirstBLack = this.checkedRows[0].change_type === 5;\n        this.campaginType = this.checkedRows[0].change_type;\n        return !this.checkedRows.some(item => {\n          const isBlack = item.change_type === 5;\n          return isBlack !== isFirstBLack;\n        });\n      } else {\n        return true;\n      }\n    },\n    actionBlackList() {\n      return this.activeViewport === 'All' || this.activeViewport === 'MyRequest' ? ['massReject', 'massApprove'] : [];\n    },\n    rowActionBlackList() {\n      return this.activeViewport === 'All' || this.activeViewport === 'MyRequest' ? ['reject', 'approve'] : [];\n    },\n    filterBlackList() {\n      switch (this.activeViewport) {\n        case 'All':\n          return [];\n        case 'PendingApproval':\n          return ['request_status'];\n        case 'MyRequest':\n          return ['requester'];\n        default:\n          return [];\n      }\n    }\n  },\n  components: {\n    SearchForm,\n    DataList,\n    RejectDialog,\n    PageHeader,\n    ExportHistoryDialog\n  },\n  methods: {\n    createPriceChange() {\n      if (!this.hasConfigFlow) {\n        return false;\n      }\n      this.$router.push(`/admin/marketingCenter/priceChange/create/${this.searchForm.region}`);\n    },\n    switchViewport(viewport) {\n      this.activeViewport = viewport.name;\n      this.$router.replace(`/admin/marketingCenter/priceChangeCenter?activeTab=${viewport.name}`);\n      this.searchForm = { ...defaultForm, region: this.$store.getters.country };\n      this.onPageChange(1);\n    },\n    closeRejectDialog() {\n      this.rejectDialogVisible = false;\n    },\n    showRejectDialog() {\n      this.rejectDialogVisible = true;\n    },\n    reSubmitRequest(row) {\n      syncPriceChange({ id: row.id }).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.$message.success('Success');\n          this.onSearch();\n        }\n      }).catch(() => {});\n    },\n    confirmReject(form) {\n      this.closeRejectDialog();\n      const list = this.rejectList || this.checkedRows;\n      const params = formatParams({\n        id_list: list.filter(row => row.can_approve).map(row => row.id),\n        reject_reason: Number(form.reasons[0]),\n        reject_remark: form.remark\n      });\n      rejectPriceChange(params).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.$message.success('Rejected successfully!');\n          this.onSearch();\n        }\n      }).catch(() => {});\n    },\n    changeCheck(type, rows) {\n      this.checkedType = type;\n      this.checkedRows = rows;\n    },\n    exportList() {\n      if (!this.checkedRows.length) {\n        return this.$message.error('Please select some lines first!');\n      }\n      const export_type = this.checkedType === 'all' ? 2 : 1;\n      const params = formatParams({\n        export_type,\n        id_list: export_type === 1 ? this.checkedRows.map(row => row.id) : '',\n        filter_params: export_type === 2 ? formatParams({\n          ...this.searchForm,\n          item_id: Number(this.searchForm.item_id) || '',\n          shop_id: Number(this.searchForm.shop_id) || '',\n          change_type: Number(this.searchForm.change_type) || '',\n          request_status: this.activeViewport === 'PendingApproval' ? 1 : Number(this.searchForm.request_status) || '',\n          process_status: Number(this.searchForm.process_status) || '',\n          category_ids: (this.searchForm.category_ids || []).join(','),\n          gross_margin_min: this.searchForm.gross_margin_min !== undefined ? parseFloat(this.searchForm.gross_margin_min / 100) : '',\n          gross_margin_max: this.searchForm.gross_margin_max !== undefined ? parseFloat(this.searchForm.gross_margin_max / 100) : ''\n        }) : ''\n      });\n      const requestFun = this.activeViewport === 'PendingApproval' ? exportPendingApprovalPriceList : exportPriceChange;\n      requestFun(params).then(resp => {\n        if (resp.retcode === 0) {\n          this.$message.success(resp.info);\n        } else {\n          this.$message.error(resp.info);\n        }\n      }).catch(() => { this.$message.error('Failed'); });\n    },\n    onMassApprove(list) {\n      if (!list && this.checkedRows.length === 0) {\n        return this.$message.error('Please select some lines first!');\n      }\n      if (list || this.checkedRows.length) {\n        // 有Historically Low Selling Price为Fail的变价单\n        const filterList = (list || this.checkedRows).filter(item => item.historically_low_selling_price_check_point === 2);\n        if (filterList.length) {\n          this.$confirm(this.$t('priceChangeCenterApproveTip', {num: filterList.length}), this.$t('commonTips'), {\n            showConfirmButton: true,\n            showCancelButton: true,\n            type: 'warning'\n          }).then(() => {\n            this.doMassApprove(list);\n          });\n        } else {\n          this.doMassApprove(list);\n        }\n      }\n    },\n    doMassApprove(list) {\n      if (!list && this.checkedRows.filter(row => row.can_approve).length === 0) {\n        let errorMessage = 'Error. None of the selected item status is \"Pending Approval\".';\n        if (this.checkedRows.some(row => row.request_status === 1)) {\n          errorMessage = `Error! Approver doesn't have the approval access for all the selected items.`;\n        }\n        return this.$message.error(errorMessage);\n      }\n      if (!list && this.checkedType === 'all') {\n        return this.$message.error('Mass approve/ reject is only supported for the current page.');\n      }\n      const params = {\n        id_list: (list || this.checkedRows).filter(row => row.can_approve).map(row => row.id)\n      };\n      approvePriceChange(params).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.$message.success('Approved successfully, please confirm the price change result.');\n          this.onSearch();\n        }\n      }).catch(() => {});\n    },\n    onMassReject(list) {\n      if (!list && this.checkedRows.length === 0) {\n        return this.$message.error('Please select some lines first!');\n      }\n      if (!list && this.checkedRows.filter(row => row.can_approve).length === 0) {\n        let errorMessage = 'Error. None of the selected item status is \"Pending Approval\".';\n        if (this.checkedRows.some(row => row.request_status === 1)) {\n          errorMessage = `Error! Approver doesn't have the approval access for all the selected items.`;\n        }\n        return this.$message.error(errorMessage);\n      }\n      if (!list && this.checkedType === 'all') {\n        return this.$message.error('Mass approve/ reject is only supported for the current page.');\n      }\n      this.rejectList = list;\n      this.showRejectDialog();\n    },\n    modifyForm(field, value) {\n      this.$set(this.searchForm, field, value);\n    },\n    onPageChange(index = 1, size) {\n      this.SkuPager.pageIndex = index;\n      if (size) {\n        this.SkuPager.size = size;\n      }\n      this.onSearch();\n    },\n    checkHasConfigFlow(region) {\n      checkHasConfigFlow({region}).then(res => {\n        if (res.retcode === 0) {\n          this.hasConfigFlow = res.data.has_approval_flow_config;\n        } else {\n          this.$message.error(res.info);\n        }\n      });\n    },\n    onSearch() {\n      this.loading = true;\n      const requestFun = this.activeViewport === 'PendingApproval' ? getPendingPriceChangeList : getPriceChangeList;\n      const params = formatParams({\n        ...this.searchForm,\n        change_period_start: this.searchForm.change_period && this.searchForm.change_period.length ? this.searchForm.change_period[0] : '',\n        change_period_end: this.searchForm.change_period && this.searchForm.change_period.length ? this.searchForm.change_period[1] : '',\n        request_time_start: this.searchForm.request_time && this.searchForm.request_time.length ? this.searchForm.request_time[0] : '',\n        request_time_end: this.searchForm.request_time && this.searchForm.request_time.length ? this.searchForm.request_time[1] : '',\n        request_status: this.activeViewport === 'PendingApproval' ? 1 : this.searchForm.request_status,\n        requester: this.activeViewport === 'MyRequest' ? this.$store.getters.email : this.searchForm.requester,\n        category_ids: (this.searchForm.category_ids || []).join(','),\n        gross_margin_min: this.searchForm.gross_margin_min !== undefined ? parseFloat(this.searchForm.gross_margin_min / 100) : '',\n        gross_margin_max: this.searchForm.gross_margin_max !== undefined ? parseFloat(this.searchForm.gross_margin_max / 100) : '',\n        page_no: this.SkuPager.pageIndex,\n        count: this.SkuPager.size\n      });\n      NotNeedSearchKeys.forEach(key => {\n        delete params[key];\n      });\n      requestFun(params).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n          this.itemList = [];\n          this.SkuPager.total = 0;\n        } else {\n          this.itemList = resp.data.price_change_request_list || [];\n          this.SkuPager.total = resp.data.total || 0;\n        }\n        this.loading = false;\n      }).catch(() => {\n        this.$message.error('Get Data Failed');\n        this.loading = false;\n      });\n    },\n     // 获取缓存的search\n    getCacheConditionObj() {\n      const cacheConditionObj = this.$store.getters.searchForm['priceChange'];\n      if (cacheConditionObj && cacheConditionObj.activeTab && cacheConditionObj.searchParams) {\n        this.activeViewport = cacheConditionObj.activeTab;\n        const searchParams = cacheConditionObj.searchParams;\n        this.SkuPager.size = searchParams.size;\n        this.SkuPager.pageIndex = searchParams.pageIndex;\n        Object.keys(this.searchForm).forEach(key => {\n          if (searchParams[key]) {\n            this.searchForm[key] = searchParams[key];\n          }\n        });\n      }\n    },\n    showExportHistory() {\n      this.isShowExportHistory = true;\n    },\n    closeExportHistory() {\n      this.isShowExportHistory = false;\n    }\n  },\n  created() {\n    this.getCacheConditionObj();\n    this.checkHasConfigFlow(this.searchForm.region);\n    const activeTab = this.$route.query.activeTab;\n    if (activeTab === 'PendingApproval' || activeTab === 'MyRequest' || activeTab === 'All') {\n      this.activeViewport = activeTab;\n    } else {\n      this.$router.replace(`/admin/marketingCenter/priceChangeCenter?activeTab=All`);\n      this.activeViewport = 'All';\n    }\n    this.onSearch();\n  },\n  watch: {\n    'searchForm.region': {\n      handler: function(cur) {\n        this.checkHasConfigFlow(cur);\n      }\n    }\n  }\n};\n</script>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\n.dashboard-header {\n  height: 60px;\n}\n.viewport-switch {\n  margin-left: 20px;\n  .viewport-btn {\n    width: 180px;\n    border-radius: 0;\n    &:nth-child(2) {\n      margin-left: -5px;\n    }\n  }\n  .active-viewport {\n    background-color: #75A3F3;\n    color: #fff;\n  }\n}\n.price-change-center{\n  .el-main{\n    padding: 0 20px;\n  }\n  .sub-tab{\n    margin: 12px 24px;\n  }\n}\n</style>\n<style lang=\"scss\">\n.price-change-center{\n  .el-tabs--card >.el-tabs__header .el-tabs__nav {\n    border: none;\n  }\n  .el-tabs--card>.el-tabs__header .el-tabs__item{\n    font-weight: 400;\n    font-size: 14px;\n    border:1px solid #E4E7ED;\n    background-color:#F6F6F6;\n    margin-right:4px;\n    border-radius:4px 4px 0 0;\n  }\n  .el-tabs--card>.el-tabs__header .el-tabs__item.is-active {\n    font-weight: 600;\n    border-bottom-color:#FFF;\n    background-color:#fff;\n    color:#3D6ED1;\n  }\n  .el-tabs__nav-wrap{\n    margin-bottom: -6px;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/marketingCenter/priceChangeApplication/productTable.vue","messages":[{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"SkuPager\" is not in camelCase.","line":53,"column":5,"nodeType":"Property","endLine":53,"endColumn":21}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <section class=\"product-item-list\">\n    <el-table @selection-change=\"onSelectRows\" :span-method=\"itemGroup\" class=\"product-sku-list\" border :data=\"skuList\" @filter-change=\"onFilterChange\" ref=\"table\">\n      <el-table-column column-key=\"selection\" type=\"selection\" :label-width=\"`40px`\"></el-table-column>\n      <el-table-column :prop=\"schema.field\" :sortable=\"schema.sortable || false\" :width=\"schema.width || 'auto'\"\n        :column-key=\"schema.columnKey || ''\" :align=\"schema.align || 'center'\" :label=\"schema.label\" :filters=\"schema.filters\" :filter-multiple=\"schema.filterMultiple\"\n        v-for=\"schema in tableSchema\" :key=\"schema.field\" :fixed=\"schema.fixed || false\">\n        <template slot-scope=\"scope\">\n          <pms-table-cell @update=\"closeUpdate\" :forceUpdate=\"update\" :renderData=\"getTableCellRender(schema, scope.row, scope.$index)\"></pms-table-cell>\n        </template>\n      </el-table-column>\n    </el-table>\n    <el-pagination\n      v-if=\"mode === 'create'\"\n      :current-page=\"SkuPager.pageIndex\" background layout=\"prev, pager, next, jumper\" :total.sync=\"SkuPager.total\"\n      :page-size=\"SkuPager.size\" @current-change=\"handleChangePageIndex\"\n    ></el-pagination>\n  </section>\n</template>\n\n<script>\nimport PMSTableItem from '@/components/BaseItem/tableItem';\nimport { NominateStatusList, NominateRejectReasonList, PriceChangeResultList } from '@/utils/constant';\nimport { formatValue } from '@/utils/formatParams';\nconst ColumnKeyWhiteList = ['selection', 'itemID', 'itemName'];\nconst IsCannelled = 11;\nconst IsComfirmed = 3;\nconst EditKeys = ['apply_original_price', 'apply_contract_price', 'remark'];\nconst CheckPointKeys = ['gross_margin_check_point', 'historically_low_selling_price_check_point', 'original_price_check_point'];\n\nexport default {\n  data() {\n    return {\n      skuList: [],\n      update: false,\n      checkPointFilters: [\n        { text: 'Pass', value: 1 },\n        { text: 'Fail', value: 2 },\n        { text: 'No Setup', value: 3 }\n      ]\n    };\n  },\n  props: {\n    region: String,\n    itemList: {\n      type: Array,\n      default: () => []\n    },\n    mode: {\n      type: String,\n      default: 'create'\n    },\n    SkuPager: Object,\n    cacheSkuList: {\n      type: Array,\n      default: () => []\n    }\n  },\n  components: {\n    'pms-table-cell': PMSTableItem\n  },\n  computed: {\n    currency() {\n      return this.$store.getters.currencyMap[this.region];\n    },\n    tableSchema() {\n      return [\n        { columnKey: 'itemID', fixed: true, field: 'item_id', label: this.$t('supplier.productID'), width: 90 },\n        { columnKey: 'itemName', fixed: true, field: 'item_name', label: this.$t('supplier.productName'), width: 110 },\n        { columnKey: 'supplierID', field: 'supplier_id', label: this.$t('backMargin.vendorSiteID'), width: 120 },\n        { columnKey: 'shopID', field: 'shop_id', label: this.$t('commonShopIDOrName'), width: 200, align: 'left',\n          render: (schema, row) => ['p', {}, `${row.shop_id}/${row.shop_name}`] }, // TODO add shop_name\n        { field: 'sku_id', width: '120px', label: this.$t('commonSkuID')},\n        { field: 'variation', label: this.$t('commonVariation'), width: '120px', align: 'left', render: (schema, row) => !row[schema.field] ? '/' : row[schema.field] },\n        { field: 'original_price', width: '90px', label: `${this.$t('marketingCenter.originalPrice')} (${this.currency})`, render: (schema, row) => formatValue(row[schema.field] || 0) },\n        { field: 'contract_price', width: '90px', label: `${this.$t('marketingCenter.contractPrice')} (${this.currency})`, render: (schema, row) => formatValue(row[schema.field] || 0) },\n        { field: 'apply_contract_price', label: `${this.$t('marketingCenter.appliedContractPrice')} (${this.currency})`, width: '120px',\n          render: (schema, row, index, h) => row.purchase_type === 'Consignment' && this.mode !== 'detail' ? ['el-input-number', {\n            class: 'qty-input-number',\n            key: `${this.skuList[index]['sku_id']}_${schema.field}`, // 这里需要新增key是为了更新dom\n            props: { value: this.skuList[index][schema.field], min: 0.01, controls: false, precision: 2, disabled: this.getDisabledStatus(row) },\n            on: { input: (value) => this.submitModify(index, schema.field, value) }\n          }] : (row.purchase_type === 'Outright' && !row[schema.field] ? '/' : formatValue(row[schema.field] || 0))\n        },\n        { field: 'historically_low_selling_price', width: '140px', label: `${this.$t('historicallyLowSellingPrice')} (${this.currency})`,\n          render: (schema, row) => row[schema.field] < 0 ? '/' : formatValue(row[schema.field] || 0) },\n        { field: 'apply_original_price', label: `${this.$t('marketingCenter.appliedOriginalPrice')} (${this.currency})`, width: '120px',\n          render: (schema, row, index, h) => this.mode === 'detail' ? formatValue(row[schema.field] || 0) : ['el-input-number', {\n            class: 'qty-input-number',\n            key: `${this.skuList[index]['sku_id']}_${schema.field}`, // 这里需要新增key是为了更新dom\n            props: { value: this.skuList[index][schema.field], min: 1, controls: false, precision: 0, disabled: this.getDisabledStatus(row) },\n            on: { input: (value) => this.submitModify(index, schema.field, value) }\n          }]\n        },\n        { field: 'apply_gross_margin', label: `${this.$t('marketingCenter.appliedGrossMargin')} (%)`, width: '120px',\n          render: (schema, row) => this.getGrossMargin(row)\n        },\n        { columnKey: 'gross_margin_check_point', field: 'gross_margin_check_point', label: this.$t('grossMarginCheckPoint'), filters: this.checkPointFilters, width: 120,\n          filterMultiple: false, render: (schema, row, index, h) => this.getCheckPointStatus(schema, row, index) },\n        { columnKey: 'original_price_check_point', field: 'original_price_check_point', label: this.$t('originalPriceCheckPoint'), filters: this.checkPointFilters, width: 120,\n          filterMultiple: false, render: (schema, row, index, h) => this.getCheckPointStatus(schema, row, index) },\n        { columnKey: 'historically_low_selling_price_check_point', field: 'historically_low_selling_price_check_point', label: this.$t('historicallyLowPriceCheckPoint'), filters: this.checkPointFilters, width: 140,\n          filterMultiple: false, render: (schema, row, index, h) => this.getCheckPointStatus(schema, row, index) },\n        { field: 'remark', width: '120px', label: this.$t('purchaseRequest.remark'),\n          render: (schema, row, index) => {\n            return ['create', 'edit'].includes(this.mode) ? ['el-input', {\n              props: { value: this.skuList[index][schema.field], max: 100, disabled: this.getDisabledStatus(row) },\n              on: { input: value => this.submitModify(index, schema.field, value) }\n            }] : row[schema.field];\n          }\n        },\n        { field: 'request_status', width: 134, label: this.$t('purchaseRequest.status'), hidden: this.mode === 'create',\n          render: (schema, row) => {\n            if (row.request_status === 1) return row.request_status_text || '';\n            const statusItem = NominateStatusList.find(item => item.value === row[schema.field]) || {};\n            return statusItem.label || '';\n          }\n        },\n        { field: 'process_status', width: 140, label: this.$t('marketingCenter.priceChangeResult'), hidden: this.mode === 'create',\n          render: (schema, row) => {\n            const statusItem = PriceChangeResultList.find(item => item.value === row[schema.field]) || {};\n            return statusItem.label || '';\n          }\n        },\n        { field: 'reject_reason', width: 120, label: this.$t('supplier.rejectReason'), hidden: this.mode === 'create',\n          render: (schema, row) => {\n            const statusItem = NominateRejectReasonList.find(item => item.value === row[schema.field]) || {};\n            return statusItem.label || '';\n          }\n        },\n        { field: 'reject_remark', width: 120, label: this.$t('marketingCenter.rejectRemark'), hidden: this.mode === 'create' },\n        { fixed: 'right', columnKey: 'action', field: 'action', label: this.$t('purchaseRequest.action'), width: '96px',\n          render: (schema, row) => {\n            return ['el-button', {\n              class: 'danger-text-btn',\n              props: { type: 'text' },\n              on: { click: () => this.removeSku(row) }\n            }, this.$t('purchaseOrder.remove')];\n          }, hidden: this.mode !== 'create'\n        },\n        { fixed: 'right', columnKey: 'action', field: 'action', label: this.$t('commonAction'), width: '96px',\n          render: (schema, row, index, h) => this.getActionRender(schema, row, index, h),\n          hidden: this.mode !== 'edit'\n        }\n      ].filter(item => !item.hidden);\n    }\n  },\n  watch: {\n    itemList: {\n      handler(curr) {\n        const list = [];\n        curr.forEach(item => list.push(...(item.sku_list || []).map((sku, index) => ({\n          ...item,\n          ...sku,\n          apply_original_price: sku.apply_original_price === undefined ? sku.original_price : sku.apply_original_price,\n          apply_contract_price: sku.apply_contract_price === undefined ? sku.contract_price : (sku.apply_contract_price === null ? undefined : sku.apply_contract_price),\n          is_cancel: sku.is_cancel || false,\n          skuIndex: index\n        }))));\n        this.skuList = list;\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    onFilterChange(filters) {\n      const params = {};\n      Object.entries(filters).forEach(([key, value]) => {\n        const filterValue = value.length ? value[0] : '';\n        params[key] = filterValue;\n        CheckPointKeys.forEach(checkKey => {\n          if (checkKey !== key) {\n            this.$refs.table.clearFilter(checkKey);\n          }\n        });\n      });\n      this.$emit('getFilterItemList', params);\n    },\n    getCheckPointStatus(schemam, row, index) {\n      return (this.checkPointFilters.find(item => item.value === row[schemam.field]) || { text: '/' }).text;\n    },\n    getActionRender(schema, row, index, h) {\n      if (row.request_status === IsComfirmed || row.request_status === IsCannelled) {\n        return '';\n      }\n      // orignal price change 4  request_status: Pending Approval,Pending Confirmation,Rejected 有cancel操作\n      if (row.is_cancel) {\n        return (['div', {}, [\n          h('el-button', {\n            class: 'primary-text-btn',\n            props: { type: 'text' },\n            on: { click: () => this.undoItem(row, index) }\n          }, this.$t('commonUndo'))\n        ]]);\n      }\n      return (['div', {}, [\n        h('el-popover', { class: '', attrs: {trigger: 'hover', placement: 'top'}}, [\n            h('el-button', { class: 'danger-text-btn', slot: 'reference', props: { type: 'text' }, on: { click: () => this.cancelItem(row, index) }}, this.$t('commonCancel')),\n            h('span', {style: 'width: 300px'}, this.$t('sellerDiscountCancelTip'))\n          ]\n        )\n      ]]);\n    },\n    closeUpdate() {\n      this.update = false;\n    },\n    itemGroup({ row, column, rowIndex, columnIndex }) {\n      if (ColumnKeyWhiteList.includes(column.columnKey)) {\n        const group = this.itemList.find(item => item.item_id === row.item_id) || {};\n        const groupFirstSku = (group.sku_list || [])[0] || {};\n        return row.sku_id === groupFirstSku.sku_id && row.skuIndex === 0 ? [(group.sku_list || []).length, 1] : [0, 0];\n      }\n    },\n    getGroupStatus(row) {\n      const group = this.itemList.find(item => item.item_id === row.item_id) || {};\n      return !row.is_closed && (group.sku_list || []).filter(sku => !sku.is_closed).length === 1;\n    },\n    getTableCellRender(schema, row, index) {\n      return { schema, row, index };\n    },\n    getDisabledStatus(row) {\n      return row.is_cancel || row.request_status === IsCannelled || row.request_status === IsComfirmed;\n    },\n    getGrossMargin(row) {\n      if (!row.apply_contract_price || !row.apply_original_price) return `0`;\n      return `${(parseFloat((row.apply_original_price - row.apply_contract_price) / row.apply_original_price) * 100).toFixed(1)} %`;\n    },\n    onSelectRows(rows) {\n      const list = [];\n      const itemMap = {};\n      rows.forEach(row => {\n        if (!itemMap[row.item_id]) {\n          itemMap[row.item_id] = true;\n          row.sku_list.forEach(sku => {\n            const index = this.skuList.findIndex(item => item.sku_id === sku.sku_id && item.item_id === row.item_id);\n            if (index !== -1) list.push(this.skuList[index]);\n          });\n        }\n      });\n      this.$emit('selectRows', list);\n    },\n    removeItem(row) {\n      this.$emit('removeItem', row.item_id);\n    },\n    removeSku(row) {\n      this.$emit('removeSku', row);\n    },\n    cancelItem(row, index) {\n      const cacheSku = this.cacheSkuList.find(sku => sku.sku_id === row.sku_id && row.request_status === sku.request_status);\n      EditKeys.forEach(key => {\n        this.skuList[index][key] = cacheSku ? cacheSku[key] : this.skuList[index][key];\n      });\n      this.skuList[index]['is_cancel'] = true;\n      this.$emit('modifySku', this.skuList[index], 'is_cancel', true);\n    },\n    undoItem(row, index) {\n      const field = 'is_cancel';\n      this.$emit('modifySku', this.skuList[index], field, false);\n      row.is_cancel = false;\n    },\n    submitModify(index, field, value) {\n      this.$set(this.skuList[index], field, value);\n      this.$emit('modifySku', this.skuList[index], field, value);\n    },\n    handleChangePageIndex(index) {\n      this.$emit('getItemList', index);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n  .product-sku-list {\n    .el-table__body-wrapper {\n      position: static;\n    }\n    .input-cell {\n      display: flex;\n      width: 100%;\n      align-items: center;\n      .cell-value {\n        flex: 1;\n        text-align: right;\n      }\n      .cell-unit {\n        width: 40px;\n        padding-left: 4px;\n        text-align: left;\n      }\n    }\n    .primary-text-btn {\n      color: #3d6ed1;\n      margin-right: 8px;\n    }\n    .danger-text-btn {\n      color: #f56c6c;\n    }\n  }\n</style>\n\n<style lang=\"scss\" scoped>\n  .product-item-list {\n    text-align: center;\n  }\n  .product-sku-list {\n    margin: 20px 0;\n  }\n  .danger-list-btn {\n    margin-left: 0px;\n    background-color: #f56c6c;\n  }\n  .qty-input-number {\n    width: 100px;\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/marketingCenter/priceChangeApplication/rejectDialog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/marketingCenter/priceChangeApplication/searchForm.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":2,"column":53,"nodeType":"VIdentifier","messageId":"deprecated","endLine":2,"endColumn":59}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-form class=\"price-change-search-form\" @submit.native.prevent=\"onSearch\">\n    <el-row class=\"price-change-search\">\n      <el-col :offset=\"schema.offset || 0\" :span=\"schema.width || 5\" v-for=\"schema in visibleSearchSchema\" :key=\"Array.isArray(schema.field) ? schema.field[0] : schema.field\" :class=\"{'long-col': longColType.includes(schema.type)}\">\n        <el-form-item :label=\"schema.label\">\n          <pms-form-item @input=\"modifyForm\" :renderData=\"{ schema, form }\"></pms-form-item>\n        </el-form-item>\n      </el-col>\n    </el-row>\n    <el-row>\n      <el-form-item class=\"search-action-box\">\n        <span v-if=\"isShowMoreBtn && showMore === false\" class=\"more-btn\" @click=\"toggleShowMore(true)\"\n          >{{ $t('commonMore') }}<i class=\"el-icon-arrow-down\"></i\n        ></span>\n        <span v-if=\"isShowMoreBtn && showMore === true\" class=\"more-btn\" @click=\"toggleShowMore(false)\"\n          >{{ $t('commonLess') }}<i class=\"el-icon-arrow-up\"></i\n        ></span>\n        <div class=\"list-btn light-btn clear-btn\" @click=\"onReset\">\n          {{ $t('purchaseRequest.clear') }}\n        </div>\n        <div class=\"list-btn\" @click=\"onSearch\">\n          {{ $t('purchaseRequest.search') }}\n        </div>\n      </el-form-item>\n    </el-row>\n    <el-row class=\"option-box\">\n      <el-form-item class=\"option-box-right\">\n        <el-popover :disabled=\"canMassOpreate\" :content=\"$t('priceChangeMassOpreateTip')\" trigger=\"hover\">\n          <div v-if=\"canProcess && !actionBlackList.includes('massApprove')\" :class=\"`mass-btn list-btn ${canMassOpreate ? '' : 'disable-btn-style'}`\" @click=\"onMassApprove\" slot=\"reference\">\n            {{$t('marketingCenter.massApprove')}}</div>\n        </el-popover>\n        <el-popover :disabled=\"canMassOpreate\" :content=\"$t('priceChangeMassOpreateTip')\" trigger=\"hover\">\n          <div v-if=\"canProcess && !actionBlackList.includes('massReject')\" :class=\"`mass-btn mass-reject-btn list-btn ${canMassOpreate ? '' : 'disable-btn-style'}`\" @click=\"onMassReject\" slot=\"reference\">\n          {{$t('marketingCenter.massReject')}}</div>\n        </el-popover>\n        <div class='list-btn' @click=\"onExport\">{{$t('marketingCenter.export')}}</div>\n        <div class=\"export-history-btn list-btn light-btn\" @click=\"onExportHistory\">\n          <i class=\"el-icon-upload\"></i>\n          <span>{{ $t('commonExportHistory') }}</span>\n        </div>\n        <el-button native-type=\"submit\" class=\"hidden-btn\"></el-button>\n      </el-form-item>\n    </el-row>\n  </el-form>\n</template>\n\n<script>\nimport { PurchaseTypeList, PriceChangeTypeList, PriceChangeStatusList, PriceChangeResultList, CheckPointTypeList, PriceChangeSubTypeList } from '@/utils/constant';\nimport PMSFormItem, { getSelectOptions } from '@/components/BaseItem/formItem';\nimport moment from 'moment';\nimport { getSupplierList } from '@/api/supplier';\nimport { getCategories } from '@/api/shop';\nimport { categoryTreeData, getCategoryTreeMap } from '@/utils/treeData';\nimport { getShopListByIdOrName } from '@/api/shopConfig';\nimport { commonFetchAction } from '@/utils';\n\nexport default {\n  data() {\n    return {\n      categoryProps: {\n        label: 'category_name',\n        value: 'category_id',\n        checkStrictly: true,\n        expandTrigger: 'hover'\n      },\n      categoryOptions: [],\n      longColType: ['datetimerange', 'daterange', 'inputrange', 'autocomplete'],\n      showMore: false,\n      shopList: [],\n      elCascaderKey: 1\n    };\n  },\n  props: {\n    form: {\n      type: Object,\n      required: true\n    },\n    region: String,\n    // todo schema use props\n    actionBlackList: {\n      type: Array,\n      default: () => []\n    },\n    filterBlackList: {\n      type: Array,\n      default: () => []\n    },\n    // 首次显示的筛选项数量\n    firstShowCount: {\n      type: Number,\n      default: 100\n    },\n    activeViewport: {\n      type: String,\n      default: 'All'\n    },\n    canProcess: {\n    },\n    canMassOpreate: {\n      type: Boolean,\n      default: true\n    }\n  },\n  watch: {\n    activeViewport() {\n      this.showMore = false;\n    }\n  },\n  components: {\n    'pms-form-item': PMSFormItem\n  },\n  computed: {\n    schemaList() {\n      return [\n        { type: 'select', width: 5, label: this.$t('commonRegion'), field: 'region', on: { change: this.onRegionchange },\n          defaultValue: this.$store.getters.country, getChildren: h => getSelectOptions(this.countryList.map(item => ({ value: item, label: item })), h)\n        },\n        { type: 'input', label: this.$t('skuMgtSkuItemID'), field: 'item_sku_id' },\n        {\n          type: 'select', width: 5, label: this.$t('commonShopIDOrName'), field: 'shop_id', getChildren: h => getSelectOptions(this.shopList, h),\n          props: {\n            'remote-method': this.getShopList, filterable: true, clearable: true,\n            remote: true, loading: this.shopLoading, placeholder: 'please Input'\n          },\n          on: { change: this.handleSelectShopIdByName }\n        },\n        { type: 'input', label: this.$t('marketingCenter.campaignName'), field: 'campaign_name' },\n        { width: 10, field: 'supplier_id', type: 'autocomplete', labelWidth: '216px',\n          label: `${this.$t('backMargin.vendorSiteID')}/${this.$t('purchaseRequest.supplierName')}`,\n          on: {\n            blur: this.onSupplierBlur,\n            select: this.onSupplierSelect\n          },\n          props: {\n            'trigger-on-focus': false,\n            'value-key': 'value',\n            'fetch-suggestions': (value, callback) => this.getSuppliers(value, callback)\n          }\n        },\n        { field: 'process_status', label: this.$t('marketingCenter.priceChangeResult'),\n          on: { change: this.onSearch }, type: 'select', getChildren: (h) => getSelectOptions(PriceChangeResultList, h)\n        },\n        { on: { change: this.onSearch }, type: 'select', getChildren: (h) => getSelectOptions(PriceChangeStatusList, h),\n          label: this.$t('purchaseRequest.status'), field: 'request_status' },\n        { type: 'select', getChildren: (h) => getSelectOptions(PriceChangeTypeList, h),\n          label: this.$t('marketingCenter.priceChangeType'), field: 'change_type',\n          on: { change: this.onChangePriceChangeType }\n        },\n        { type: 'select', label: this.$t('commonSubType'), field: 'sub_type', getChildren: h => getSelectOptions(PriceChangeSubTypeList, h),\n          on: { change: this.onSearch }, hidden: this.form.change_type !== 1\n        },\n        { type: 'input', label: this.$t('purchaseRequest.requester'), field: 'requester' },\n        { type: 'input', label: this.$t('rule.categoryName'), field: 'category_ids', defaultValue: [],\n          render: (schema, row, h) => ['el-cascader', {\n            key: `elCascaderKey${this.elCascaderKey}`,\n            props: {\n              clearable: true, value: this.form.category_ids, 'show-all-levels': false,\n              options: this.categoryOptions, props: this.categoryProps\n            },\n            on: {\n              input: (value) => { this.modifyForm(schema, value); },\n              change: this.onSearch\n            }\n          }]\n        },\n        { on: { change: this.onSearch }, type: 'select', getChildren: (h) => getSelectOptions(PurchaseTypeList, h),\n          label: this.$t('purchaseRequest.purchaseType'), field: 'purchase_type' },\n        { type: 'inputrange', width: 10, label: this.$t('marketingCenter.appliedGrossMargin'), field: ['gross_margin_min', 'gross_margin_max'],\n          class: 'input-range-wrapper', defaultValue: [null, null], render: this.getInputRangeRender },\n        { type: 'datetimerange', width: 10, label: this.$t('marketingCenter.priceChangePeriod'), field: 'change_period',\n         render: this.getDateRender },\n        { type: 'datetimerange', width: 10, label: this.$t('marketingCenter.requestTime'), field: 'request_time',\n         render: this.getDateRender },\n        { on: { change: this.onSearch }, type: 'select', getChildren: (h) => getSelectOptions([{ value: '', label: 'All' }].concat(CheckPointTypeList), h),\n          label: this.$t('grossMarginCheckPoint'), field: 'gross_margin_check_point' },\n        { on: { change: this.onSearch }, type: 'select', getChildren: (h) => getSelectOptions([{ value: '', label: 'All' }].concat(CheckPointTypeList), h),\n          label: this.$t('originalPriceCheckPoint'), field: 'original_price_check_point' },\n        { on: { change: this.onSearch }, type: 'select', getChildren: (h) => getSelectOptions([{ value: '', label: 'All' }].concat(CheckPointTypeList), h),\n          label: this.$t('promotionPriceCheckPoint'), field: 'promotion_price_check_point' },\n        { on: { change: this.onSearch }, type: 'select', getChildren: (h) => getSelectOptions([{ value: '', label: 'All' }].concat(CheckPointTypeList), h),\n          label: this.$t('limitedSellingCheckPoint'), field: 'limited_selling_quantities_check_point' },\n        { on: { change: this.onSearch }, type: 'select', getChildren: (h) => getSelectOptions([{ value: '', label: 'All' }].concat(CheckPointTypeList), h),\n          label: this.$t('historicallyLowPriceCheckPoint'), field: 'historically_low_selling_price_check_point' }\n      ].filter(item => !this.filterBlackList.includes(item.field) && !item.hidden);\n    },\n    countryList() {\n      return [...new Set([...this.$store.getters.countryList.map(item => item.country)])];\n    },\n    visibleSearchSchema() {\n      const schema = this.schemaList || [];\n      return schema.filter((item, index) => (this.showMore || index < this.firstShowCount));\n    },\n    // more less 切换\n    isShowMoreBtn() {\n      return this.firstShowCount && this.firstShowCount < this.schemaList.length;\n    }\n  },\n  methods: {\n    toggleShowMore(val) {\n      this.showMore = val;\n    },\n    modifyInputRange(field, value) {\n      this.$emit('modify', field, value);\n    },\n    modifyForm(schema, value) {\n      this.$emit('modify', schema.field, value);\n    },\n    getCategoryOptions(region) {\n      getCategories({ country: region, use_global: 1 }).then(({ data: { categories }}) => {\n        this.elCascaderKey += 1;\n        const arr = categories || [];\n        this.categoryTreeMap = getCategoryTreeMap(arr);\n        const res = categoryTreeData(arr, {\n          key: 'category_id'\n        });\n        this.categoryOptions = res;\n      }).catch(() => {});\n    },\n    onMassApprove() {\n      if (this.canMassOpreate) {\n        this.$emit('massApprove');\n      }\n    },\n    onMassReject() {\n      if (this.canMassOpreate) {\n        this.$emit('massReject');\n      }\n    },\n    onExport() {\n      this.$emit('export');\n    },\n    onSearch() {\n      this.$emit('search');\n    },\n    onReset() {\n      this.schemaList.forEach(schema => {\n        if (Array.isArray(schema.field)) {\n          schema.field.forEach((field) => {\n            this.$emit('modify', field, undefined);\n          });\n        } else {\n          this.$emit('modify', schema.field, schema.defaultValue === null ? undefined : schema.defaultValue || '');\n        }\n      });\n      this.$nextTick(() => {\n        this.onSearch();\n      });\n    },\n     async getShopList(query = '') {\n      try {\n        const opt = {\n          count: 200,\n          page_no: 1,\n          region: this.form.region,\n          search_type: 0,\n          shop_id_or_name: query\n        };\n        const res = await getShopListByIdOrName(opt);\n        commonFetchAction(res, (data) => {\n          this.shopList = data.shop_list.map(item => ({ label: item.shop_name, value: item.shop_id }));\n        });\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    onRegionchange(region) {\n      this.$emit('modify', 'category_ids', []);\n      this.onSearch();\n      this.getCategoryOptions(region);\n    },\n    handleSelectShopIdByName(shop_id) {\n      this.$emit('modify', 'shop_id', shop_id);\n    },\n    onChangePriceChangeType(type) {\n      this.$emit('modify', 'sub_type', '');\n      this.onSearch();\n    },\n    getSuppliers(value, callback) {\n      const params = { pageno: 1, count: 20, key: `${value}`.trim(), approval_country: this.countryList.join('_') };\n      getSupplierList(params).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          const { list = [] } = resp.data || {};\n          if (Array.isArray(list) && list.length) {\n            return callback(list.map(item => ({ ...item, value: `${item.supplier_id} ${item.name}` })));\n          } else {\n            this.$message.error('This Supplier ID is not exist');\n          }\n        }\n        callback([]);\n      }).catch(() => {\n        this.$message.error('Get Supplier Failed');\n        callback([]);\n      });\n    },\n    onSupplierBlur() {\n      if (this.form.cacheSupplier !== this.form.supplier_id) {\n        this.$emit('modify', 'cacheSupplier', '');\n        this.$emit('modify', 'supplier_id', '');\n      }\n    },\n    onSupplierSelect(item) {\n      this.$emit('modify', 'cacheSupplier', item.supplier_id);\n      this.$emit('modify', 'supplier_id', item.supplier_id);\n    },\n    getDateRender(schema, form, h) {\n      return ['el-date-picker', {\n        class: schema.class || '',\n        on: {\n          input: (value) => { this.modifyForm(schema, value); },\n          change: () => this.onSearch()\n        },\n        props: {\n          value: form[schema.field],\n          type: 'datetimerange',\n          'picker-options': this.getPickerOptions(schema, form),\n          editable: false,\n          disabled: schema.field === 'compare_date' && !form.base_date,\n          'prefix-icon': 'el-icon-date',\n          format: 'yyyy-MM-dd HH:mm:ss',\n          'value-format': 'yyyy-MM-dd HH:mm:ss',\n          class: 'ele-input-width-style'\n        }\n      }];\n    },\n    getIntervalRender(schema, form, h) {\n      return ['el-input-number', {\n        class: schema.class || '',\n        on: { input: (value) => { this.modifyForm(schema, value); } },\n        props: {\n          value: form[schema.field],\n          precision: 1,\n          max: 100,\n          controls: false\n        }\n      }];\n    },\n    // 组合输入框 type inputrange，schema必须是一个数组 schema:[{field: ''}, {field: ''}]\n    getInputRangeRender(schema, form, h) {\n      if (schema.type !== 'inputrange' || !Array.isArray(schema.field) || schema.field.length < 2) return '';\n      return ['div', {class: schema.class || '' }, [\n        h('el-input-number', {\n          on: { input: (value) => { this.modifyInputRange(schema.field[0], value); } },\n          props: {\n            value: form[schema.field[0]],\n            precision: 1,\n            max: 100,\n            controls: false\n          }}),\n        h('span', { class: 'range-separator'}, ' - '),\n        h('el-input-number', {\n          on: { input: (value) => { this.modifyInputRange(schema.field[1], value); } },\n          props: {\n            value: form[schema.field[1]],\n            precision: 1,\n            max: 100,\n            controls: false\n          }})\n      ]];\n    },\n    getPickerOptions(schema, form) {\n      return {\n        disabledDate(time) {\n          if (schema.startField) {\n            return time <= moment(form[schema.startField] || 0, 'YYYY-MM-DD HH:mm:ss');\n          }\n        }\n      };\n    },\n    onExportHistory() {\n      this.$emit('exportHistoryAction');\n    }\n  },\n  created() {\n    this.getCategoryOptions(this.form.region);\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  .search-form {\n    margin-top: 20px;\n    .el-date-editor, .el-input-number {\n      width: 100%;\n      text-align: left;\n    }\n    .compared-date-picker {\n      max-width: calc(166.67% - 160px + 53.33px); // basic span-6, compared span-4\n    }\n    .el-autocomplete {\n      width: 100%;\n    }\n    .el-col {\n      height: 48px;\n      line-height: 48px;\n    }\n    .right-action-btn {\n      float: right;\n      .mass-btn {\n        width: 120px;\n        background-color: #50962B;\n      }\n      .mass-reject-btn {\n        color: #fff;\n        background-color: #f56c6c;\n        margin: 0;\n      }\n      .hidden-btn {\n        visibility: hidden;\n      }\n    }\n  }\n  .price-change-search-form {\n    margin: 0 20px;\n    .list-btn{\n      width: auto;\n      min-width: 70px;\n      padding: 0 8px;\n      &.disable-btn-style {\n        opacity: 0.7;\n        cursor: not-allowed;\n      }\n    }\n    .light-btn {\n      border: 1px solid #3d6ed1;\n      color: #3d6ed1;\n      background-color: #fff;\n    }\n    .hidden-btn {\n      visibility: hidden;\n    }\n    .search-action-box {\n      text-align: right;\n      .more-btn {\n        cursor: pointer;\n        color: #3d6ed1;\n        margin-right: 12px;\n      }\n    }\n    .option-box {\n      display: flex;\n      border-top: rgb(241, 241, 241) solid 2px;\n      padding: 16px 0;\n      .option-box-left {\n        text-align: left;\n        flex: 1;\n      }\n      .option-box-right {\n        text-align: right;\n        flex: 1;\n      }\n      .el-button--medium {\n        padding: 0;\n      }\n      .el-form-item {\n        margin: 0;\n      }\n    }\n  }\n</style>\n\n<style lang=\"scss\">\n  .price-change-search {\n    .el-input-number .el-input__inner {\n      text-align: left;\n    }\n  }\n  .price-change-search-form {\n    .el-form-item--medium .el-form-item__content {\n      display: inline-block;\n    }\n    .el-low {\n      display: flex;\n    }\n\n    .el-col {\n      float: none;\n      display: inline-block;\n      width: calc(25% - 12px);\n      vertical-align: middle;\n      margin: 0 12px 16px 0;\n\n      .el-form-item {\n        display: flex;\n        border: 1px solid #e2e6ec;\n        border-radius: 4px;\n        box-sizing: content-box;\n        height: 30px;\n        line-height: 30px;\n        margin: 0px;\n      }\n    }\n\n    .long-col {\n      width: calc(50% - 12px);\n      .el-form-item__label {\n        max-width: 236px;\n      }\n    }\n\n    .el-form-item__label {\n      max-width: 224px;\n      background-color: #fafbfd;\n      white-space: nowrap;\n      text-overflow: ellipsis;\n      overflow: hidden;\n      padding: 0 8px;\n      border-radius: 4px 0 0 4px;\n      border-right: 1px solid #e2e6ec;\n    }\n    .el-form-item__content {\n      flex: 1;\n      .el-cascader, .el-input__inner {\n        width: 100%;\n      }\n      .input-range-wrapper{\n        display: flex;\n        .el-input-number{\n          flex: 1;\n        }\n        .range-separator{\n          margin: 0 10px;\n        }\n      }\n      .el-input-number--medium, .el-cascader--medium{\n        line-height: 30px;\n      }\n      .el-autocomplete {\n        width: 100%;\n      }\n    }\n    .el-autocomplete {\n      width: 100%;\n    }\n    .ele-input-width-style{\n      width: 100% !important;\n    }\n    .el-input__inner,\n    .el-range-input {\n      border: 0;\n      background-color: transparent;\n      height: auto;\n      padding: 0 0 0 8px;\n      vertical-align: initial;\n      text-align: left;\n      margin: 0;\n      line-height: 30px;\n      &:hover {\n        border: 0;\n        background-color: #faf1e0;\n      }\n    }\n    .el-form-item--medium .el-form-item__content,\n    .el-form-item--medium .el-form-item__label {\n      line-height: 30px;\n      color: #333;\n    }\n    .el-input.is-disabled .el-input__inner {\n      background-color: #fafbfd;\n    }\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/marketingCenter/priceChangeSettings/blackStockConfig/blackList/editDialog.vue","messages":[{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":56,"column":69,"nodeType":"ThisExpression","endLine":56,"endColumn":73},{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":80,"column":7,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":80,"endColumn":8,"fix":{"range":[2540,2541],"text":""}},{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":232,"column":10,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":232,"endColumn":11,"fix":{"range":[7226,7227],"text":""}},{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":235,"column":10,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":235,"endColumn":11,"fix":{"range":[7247,7248],"text":""}}],"errorCount":4,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"<template>\n<el-dialog\n  :visible.sync=\"dialogVisible\"\n  width=\"730px\"\n  :before-close=\"handleClose\"\n  custom-class=\"black-stock-config-create-style\"\n  >\n  <span slot=\"title\">{{$t(modeOption[mode].title)}}</span>\n  <section class=\"content black-list-create\">\n    <el-form\n    v-if=\"dialogVisible\"\n    ref=\"blackListForm\"\n    :rules=\"rules\"\n    :model=\"blackListForm\">\n    <el-form-item :label=\"$t('commonSkuID')\" prop=\"sku_id\">\n      <el-autocomplete\n        popper-class=\"pms-ele-ui supplierIDCompleteWrapperWidth\"\n        v-model=\"blackListForm.sku_id\"\n        :fetch-suggestions=\"getSkuID\"\n        :trigger-on-focus=\"false\"\n        clearable\n        @select=\"handleSkuIDSelect\"\n        @clear=\"handleSkuIDClear\"\n      ></el-autocomplete>\n    </el-form-item>\n    <el-form-item :label=\"$t('commonSkuName')\" class=\"text-full-line\">\n      <span>{{blackListForm.sku_name || '-'}}</span>\n    </el-form-item>\n    <el-form-item\n    :label=\"$t('blackStockBlackListPeriod')\"\n    prop=\"start_date_str\"\n    class=\"date-picker-group\">\n      <el-date-picker\n        v-model=\"blackListForm.start_date_str\"\n        type=\"date\"\n      >\n      </el-date-picker>\n        &nbsp;-&nbsp;\n      <el-date-picker\n        v-model=\"blackListForm.end_date_str\"\n        type=\"date\"\n      >\n      </el-date-picker>\n      <span>{{timeZone}}<br/>{{$t('blackStockTimePeriodTip')}}</span>\n    </el-form-item>\n    <el-form-item :label=\"$t('commonReason')\" prop=\"reason\">\n      <el-select v-model=\"blackListForm.reason\">\n        <el-option\n        v-for=\"item in reasonSelections\"\n        :key=\"item.value\"\n        :label=\"$t(item.label)\"\n        :value=\"item.value\"\n        ></el-option>\n      </el-select>\n    </el-form-item>\n    <el-form-item :label=\"$t('commonRemark')\" prop=\"remark\" :class=\"this.blackListForm.reason === 4 ? 'is-required' : ''\">\n      <el-input\n      type=\"textarea\"\n      :show-word-limit=\"true\"\n      :maxlength=\"500\"\n      :rows=\"4\"\n      v-model=\"blackListForm.remark\"></el-input>\n    </el-form-item>\n    </el-form>\n  </section>\n  <span slot=\"footer\" class=\"dialog-footer\">\n    <el-button @click=\"handleClose\">{{$t('commonCancel')}}</el-button>\n    <el-button type=\"primary\" @click=\"handleCofirm('blackListForm')\">{{$t('commonConfirm')}}</el-button>\n  </span>\n</el-dialog>\n</template>\n\n<script>\nimport { searchSkuAutoComplete } from '@/api/skuMgt';\nimport { TimeZoneByCountry } from '@/utils/constant';\nimport { createBlackList, updateBlackList } from '@/api/priceChangeConfig';\nimport moment from 'moment';\nexport default {\n  components: {},\n  data () {\n    return {\n      dialogVisible: false,\n      blackListForm: {},\n      cachBlackList: {},\n      modeOption: [\n        {\n          title: 'BlackStockAddBlackListSKU'\n        },\n        {\n          title: 'BlackStockEditBlackListSKU'\n        }\n      ]\n    };\n  },\n  props: {\n    visible: {},\n    mode: {\n      default: 0\n    },\n    value: {},\n    basicInfo: {},\n    reasonSelections: {}\n  },\n  computed: {\n    timeZone() {\n      return TimeZoneByCountry[this.basicInfo.region] + '00';\n    },\n    isRemarkRequired() {\n      return this.blackListForm.reason === 4;\n    },\n    rules() {\n      const checkDate = (rule, value, callback) => {\n        if (!value) {\n          return callback(new Error(this.$t('commonIsRequired', {target: this.$t('blackStockBlackListPeriod')})));\n        }\n        if (this.blackListForm.end_date_str) {\n          if (+new Date(this.blackListForm.end_date_str) < new Date(this.blackListForm.start_date_str)) {\n            return callback(new Error(this.$t('commonTimePeriodErrorTip')));\n          }\n        }\n        callback();\n      };\n      const checkReason = (rule, value, callback) => {\n        if (this.blackListForm.reason === 4) {\n          if (!value || !value.trim()) {\n            return callback(this.$t('commonRequiredTipWithThreeParams', {target: this.$t('commonRemark'), targetII: this.$t('commonReason'), result: this.$t('commonOthers')}));\n          }\n        }\n        callback();\n      };\n      return {\n        remark: [{validator: checkReason, trigger: 'blur'}],\n        sku_id: [{required: true, message: this.$t('commonIsRequired', {target: this.$t('commonSkuID')}), trigger: 'blur'}],\n        start_date_str: [\n          {validator: checkDate, trigger: 'blur'},\n          {required: true, trigger: 'blur'}\n        ],\n        reason: [{required: true, message: this.$t('commonIsRequired', {target: this.$t('commonReason')}), trigger: 'blur'}]\n      };\n    }\n  },\n  watch: {\n    '$props.visible': {\n      handler(cur) {\n        this.dialogVisible = cur;\n        if (cur) {\n          if (this.mode) {\n            this.blackListForm = {...this.value};\n            this.cachBlackList = this.value;\n          }\n        } else {\n          this.blackListForm = {};\n          this.cachBlackList = {};\n        }\n      }\n    }\n  },\n  methods: {\n    handleClose() {\n      this.$emit('close');\n    },\n    handleCofirm() {\n      this.$refs['blackListForm'].validate((valid) => {\n        if (valid) {\n          const params = {...this.blackListForm};\n          this.$delete(params, 'sku_name');\n          this.$set(params, 'region', this.basicInfo.region);\n          params.start_date_str = moment(params.start_date_str).format('YYYY-MM-DD');\n          params.end_date_str = params.end_date_str ? moment(params.end_date_str).format('YYYY-MM-DD') : '';\n          params.remark = params.remark ? params.remark : '';\n          if (!this.mode) {\n            createBlackList(params).then(res => {\n              if (res.retcode === 0) {\n                this.$message.success(this.$t('commonConfirmSuccess'));\n                this.$emit('close', true);\n              }\n            });\n          } else {\n            let isChange = false;\n            for (const index in this.cachBlackList) {\n              if (this.cachBlackList[index] !== this.blackListForm[index]) {\n                isChange = true;\n                break;\n              }\n            }\n            if (!isChange) {\n              return this.$message.error(this.$t('commonNotChangeAnyThing'));\n            }\n            updateBlackList(params).then(res => {\n              if (res.retcode === 0) {\n                this.$message.success(this.$t('commonConfirmSuccess'));\n                this.$emit('close', true);\n              }\n            });\n          }\n        } else {\n        }\n      });\n    },\n    handleSkuIDSelect(value) {\n      this.$set(this.blackListForm, 'sku_name', value.name);\n    },\n    handleSkuIDClear() {\n      this.blackListForm.sku_name = '';\n    },\n    async getSkuID(query = '', cb) {\n      if (`${query}`.trim() === '') return;\n      try {\n        const params = {\n          sku_id: `${query}`.trim(),\n          region: this.basicInfo.region\n        };\n        const resp = await searchSkuAutoComplete(params);\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n          cb([]);\n        } else {\n          cb(resp.data.sku_list.map(sku => {\n            return {\n              name: `${sku['sku_name']}`,\n              value: `${sku['sku_id']}`,\n              skuID: sku['sku_id']\n            };\n          })\n          );\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    }\n  },\n  mounted () {\n\n  },\n  created () {\n\n  }\n};\n</script>\n<style lang='scss'>\n.price-change-black-stock-config {\n  .black-stock-config-create-style {\n    .content.black-list-create {\n      min-height: 320px;\n      .el-form-item {\n        margin-right: 0;\n        .el-form-item__label {\n          width: 130px;\n        }\n        .el-form-item__content {\n          .el-autocomplete {\n            width: 100%;\n          }\n          width: 286px;\n          display: flex;\n        }\n        &:last-child {\n          .el-form-item__content {\n            width: calc(100% - 130px);\n            height: 100px;\n          }\n        }\n        &.text-full-line {\n          .el-form-item__content {\n            width: calc(100% - 120px);}\n        }\n        &.date-picker-group {\n          .el-form-item__content {\n            width: calc(100% - 120px);\n            .el-date-editor.el-input {\n              width: 139px;\n            }\n            span {\n              color: #999;\n              margin-left: 5px;\n              font-size: 12px;\n              line-height: 16px;\n              word-break: keep-all;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/marketingCenter/priceChangeSettings/blackStockConfig/blackList/index.vue","messages":[{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":158,"column":7,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":158,"endColumn":8,"fix":{"range":[6378,6379],"text":""}},{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":274,"column":10,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":274,"endColumn":11,"fix":{"range":[9565,9566],"text":""}},{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":277,"column":10,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":277,"endColumn":11,"fix":{"range":[9586,9587],"text":""}}],"errorCount":3,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"<template>\n  <div class='black-stock-config-black-list'>\n    <section class=\"black-stock-config-search\">\n        <el-form ref=\"form\" :model=\"form\">\n          <el-form-item :label=\"$t('commonSkuID')\">\n            <el-input v-model=\"form.sku_id\"></el-input>\n          </el-form-item>\n          <el-form-item :label=\"$t('blackStockBlackListPeriod')\" class=\"black-stock-date-layout\">\n            <el-date-picker\n              v-model=\"form.start_date_str\"\n              type=\"date\"\n            >\n            </el-date-picker>\n             &nbsp;-&nbsp;\n            <el-date-picker\n              v-model=\"form.end_date_str\"\n              type=\"date\"\n            >\n            </el-date-picker>\n          </el-form-item>\n        </el-form>\n        <div class=\"black-stock-button-group\">\n            <el-button @click=\"form = {}\">{{$t('commonReset')}}</el-button>\n            <el-button type=\"primary\" @click=\"onSearch\">{{$t('commonSearch')}}</el-button>\n        </div>\n    </section>\n    <section class=\"black-stock-black-button-group\">\n      <div class=\"black-stock-mass-button\">\n        <el-button @click=\"onExport\">{{$t('commonExport')}}</el-button>\n        <el-button @click=\"handleHistoryDialog(false)\">{{$t('commonExportHistory')}}</el-button>\n        <el-upload\n            v-if=\"canProcess\"\n            :show-file-list=\"false\"\n            class=\"upload-button\"\n            action=\"/api/item_price_change/black_stock_promotion_config/black_list/async_upload\"\n            :http-request=\"handleMassUploadRequest\"\n            accept=\".xls, .xlsx\"\n            ref='massUpload'\n            :headers=\"uploadHeader\"\n            :limit=\"1\"\n            :with-credentials=\"true\">\n            <el-button>{{$t('commonMassUpload')}}</el-button>\n          </el-upload>\n        <el-button @click=\"handleHistoryDialog(true)\" v-if=\"canProcess\">{{$t('commonUploadHistory')}}</el-button>\n        <el-button type=\"text\" @click=\"downloadTemplate\" v-if=\"canProcess\">{{$t('commonTemplate')}}</el-button>\n      </div>\n      <div class=\"black-stock-button-group\">\n        <el-button\n        v-if=\"canProcess\"\n        @click=\"switchEditDilog(true, 0)\"\n        type=\"primary\"\n        >{{$t('CRTActionAddSku')}}</el-button>\n      </div>\n    </section>\n    <section class=\"black-stock-config-table pms-ui\" v-loading=\"listLoading\">\n      <el-checkbox-group v-model=\"checkedRows\" class=\"pms-ui\">\n        <el-table\n        :data=\"tableList\">\n          <el-table-column column-key=\"action\" width=\"60\" align=\"center\">\n            <template #header>\n              <el-dropdown @click=\"resetCheckedType\" placement=\"bottom\" split-button trigger=\"click\" class=\"select-page-dropdown\" @command=\"changeSelectPageType\">\n                <span :class=\"`el-checkbox__input ${checkedStyle}`\">\n                  <span :class=\"`el-checkbox__inner ${checkedStyle}`\"></span>\n                </span>\n                <el-dropdown-menu class=\"options-field-menu\" slot=\"dropdown\">\n                  <el-dropdown-item command=\"current\">Current Page</el-dropdown-item>\n                  <el-dropdown-item command=\"all\">All Pages</el-dropdown-item>\n                </el-dropdown-menu>\n              </el-dropdown>\n            </template>\n            <template slot-scope=\"scope\">\n              <el-checkbox :disabled=\"checkedType === 'all'\" :label=\"scope.row\">{{''}}</el-checkbox>\n            </template>\n        </el-table-column>\n        <el-table-column\n          v-for=\"schema in tableSchema\"\n          :prop=\"schema.field\"\n          :sortable=\"schema.sortable || false\"\n          :width=\"schema.width || 'auto'\"\n          :min-width=\"schema.minWidth || ''\"\n          :column-key=\"schema.columnKey || ''\"\n          :align=\"schema.align || 'left'\"\n          :label=\"$t(schema.label)\"\n          :filters=\"schema.filters\"\n          :filter-multiple=\"schema.filterMultiple\"\n          :key=\"schema.field\"\n          :fixed=\"schema.fixed || false\">\n          <template #header>\n            <span>{{$t(schema.label)}}</span>\n            <span v-if=\"schema.hasQuestion\">\n              <el-tooltip placement=\"right\" effect=\"light\" popper-class=\"price-change-history-selling-tips\">\n                  <div slot=\"content\">\n                    <ul>\n                      <li>{{$t(schema.tip)}}</li>\n                    </ul>\n                  </div>\n                  <svg-icon class=\"icon_question\" icon-class=\"question\" />\n              </el-tooltip>\n            </span>\n          </template>\n          <template slot-scope=\"scope\">\n            <pms-table-cell @update=\"closeUpdate\" :forceUpdate=\"update\" :renderData=\"getTableCellRender(schema, scope.row, scope.$index)\"></pms-table-cell>\n          </template>\n        </el-table-column>\n        </el-table>\n      </el-checkbox-group>\n      <el-pagination\n        :current-page=\"pager.pageno\" background layout=\"sizes, prev, pager, next\" :total.sync=\"total\" :page-sizes=\"[10,20,50,100]\"\n        :page-size=\"pager.count\" @current-change=\"handleChangePageIndex\" @size-change=\"handleSizeChange\"\n      ></el-pagination>\n    </section>\n    <export-history-dialog\n    :taskType=\"taskType\"\n    :needErrorFile=\"true\"\n    :isUplodHistory=\"isUplodHistory\"\n    :visible=\"showExportHistoryDialog\"\n    @close=\"handleHistoryDialog\"></export-history-dialog>\n    <edit-dialog\n    :value=\"currentBlackList\"\n    :visible=\"isEditVisble\"\n    :mode=\"dialogMode\"\n    :reasonSelections=\"reasonsOfSelector\"\n    :basicInfo=\"{region}\"\n    @close=\"closeEditDialog\" />\n    <action-log\n    type=\"field\"\n    @close=\"switchHistoryLog(false)\"\n    @currentChange=\"currentChange\"\n    :outsideData=\"actionData\"\n    :visible=\"actionVisible\"\n    :outsideTotal=\"outsideTotal\"\n    :hasPager=\"true\"\n    :isDataFromOutside=\"true\"></action-log>\n  </div>\n</template>\n\n<script>\nimport moment from 'moment';\nimport { TimeZoneByCountry } from '@/utils/constant';\nimport editDialog from './editDialog';\nimport pmsTableCell from '@/components/BaseItem/tableItem';\nimport ExportHistoryDialog from '@/components/ApproveList/exportHistoryDialog';\nimport actionLog from '@/components/actionLogDialog/actionLog';\nimport {getBlackList, getBlackListActionLog, removeBlackList, asyncExportBlackList, asyncUploadBlackList} from '@/api/priceChangeConfig';\nexport default {\n  components: {\n    editDialog,\n    pmsTableCell,\n    actionLog,\n    ExportHistoryDialog\n  },\n  props: {\n    region: {\n      required: true\n    },\n    canProcess: {}\n  },\n  data () {\n    return {\n      update: true,\n      actionVisible: false,\n      isEditVisble: false,\n      isUplodHistory: false,\n      outsideTotal: 0,\n      taskType: 33, // 导出: 33 导入: 34\n      showExportHistoryDialog: false,\n      dialogMode: 0, // 0: add, 1: edit\n      form: {},\n      lastSearchForm: {},\n      actionData: [],\n      checkedRows: [],\n      checkedType: '',\n      listLoading: false,\n      tableList: [],\n      currentBlackList: {},\n      pager: {\n        pageno: 1,\n        count: 10\n      },\n      total: 0\n    };\n  },\n  computed: {\n    tableSchema() {\n      const schema = [\n        {\n          field: 'sku_id',\n          label: 'commonSkuID'\n        },\n        {\n          field: 'sku_name',\n          label: 'commonSkuName'\n        },\n        {\n          field: '',\n          label: 'blackStockBlackListPeriod',\n          hasQuestion: true,\n          tip: 'blackStockTimePeriodTip',\n          width: 190,\n          render: (schema, row, index, h) => {\n            return ['div', null, [\n              h('p', null, `${row.start_date_str} ~ ${row.end_date_str || ''}`),\n              h('p', {class: 'time-zone-style'}, TimeZoneByCountry[this.region] + '00')\n              ]\n            ];\n          }\n        },\n        {\n          field: 'reason',\n          label: 'commonReason',\n          minWidth: 150,\n          render: (schema, row, index, h) => {\n            const reason = this.reasonsOfSelector.find(item => item.value === row.reason);\n            return ['span', null, this.$t(reason.label)];\n          }\n        },\n        {\n          field: 'remark',\n          label: 'commonRemark'\n        },\n        {\n          field: 'log', label: 'commonHistory', render: (schema, row, index, h) => {\n            return ['el-button', {\n              props: {type: 'text'},\n              on: {click: () => { this.switchHistoryLog(true, row); }}\n            }, this.$t('commonLog')];\n          }\n        }\n      ];\n      if (this.canProcess) {\n        schema.push(\n        {\n          field: 'action', label: 'commonAction', fixed: 'right', width: '135px', render: (schema, row, index, h) => {\n            return ['div', {class: 'action-buttons'}, [h(\n              'el-button', {\n              props: {type: 'text'},\n              on: {click: () => { this.switchEditDilog(true, row); }}\n            }, this.$t('commonEdit')\n            ), h(\n              'el-button', {\n              class: 'red-text',\n              props: {type: 'text'},\n              on: {click: () => { this.onCancel(row); }}\n            }, this.$t('commonRemove')\n            )]];\n          }\n        });\n      }\n      return schema;\n    },\n    reasonsOfSelector() {\n      return [\n        {value: 1, label: 'BlackStockBlackListReason1'},\n        {value: 2, label: 'BlackStockBlackListReason2'},\n        {value: 3, label: 'BlackStockBlackListReason3'},\n        {value: 4, label: 'commonOthers'}\n      ];\n    },\n    checkedStyle() {\n      return this.checkedType ? 'is-checked' : '';\n    },\n    uploadHeader() {\n      return this.$store.getters.uploadHeader;\n    }\n  },\n  watch: {\n    '$props.region': {\n      handler(cur) {\n        this.getList();\n      },\n      immediate: true\n    }\n  },\n  created () {\n\n  },\n  mounted () {\n\n  },\n  methods: {\n    closeUpdate() {\n      this.update = false;\n    },\n    handleHistoryDialog(isUplodHistory) {\n      this.showExportHistoryDialog = !this.showExportHistoryDialog;\n      if (this.showExportHistoryDialog) {\n        this.isUplodHistory = isUplodHistory;\n        if (isUplodHistory) {\n          this.taskType = 34;\n        } else {\n          this.taskType = 33;\n        }\n      }\n    },\n    downloadTemplate() {\n      window.open('/admin/data/black_list_template.xlsx');\n    },\n    handleMassUploadRequest({ file }) {\n      const formData = new FormData();\n      formData.append('files', file);\n      formData.append('region', this.region);\n      asyncUploadBlackList(formData).then(res => {\n        if (res.retcode === 0) {\n          this.$message.success(this.$t('commonAsyncUploadSuccessNewTips'));\n        } else {\n          this.$message.error(res.info || res.message);\n        }\n      }).catch(e => {\n        this.$message.error(e.info || e.message);\n      }).finally(_ => {\n        this.$refs.massUpload.clearFiles();\n      });\n    },\n    resetCheckedType() {\n      this.checkedType = '';\n      this.checkedRows = [];\n    },\n    changeSelectPageType(type) {\n      this.checkedType = type;\n      this.checkedRows = this.tableList;\n    },\n    getActionLog(params) {\n      getBlackListActionLog(params).then(res => {\n        if (res.retcode === 0) {\n          this.actionData = res.data.audit_logs;\n          this.actionData.forEach((item, i) => {\n            if (item.change_list.length) {\n              item.change_list.some((change, j) => {\n                if (change.field === 'reason') {\n                  const beforeText = this.reasonsOfSelector.find(item => item.value === change.before) || {};\n                  const aftertext = this.reasonsOfSelector.find(item => item.value === change.after) || {};\n                  this.actionData[i].change_list[j].before = this.$t(beforeText.label);\n                  this.actionData[i].change_list[j].after = this.$t(aftertext.label);\n                  return true;\n                }\n              });\n            }\n          });\n          this.outsideTotal = res.data.total;\n        } else {\n          this.$message.error(res.info || res.message);\n        }\n      }).catch(e => {\n        this.$message.error(e.info || e.message);\n      });\n    },\n    currentChange(index) {\n      const id = this.currentCategory.id;\n      const params = {id, pageno: index, count: 10};\n      this.getActionLog(params);\n    },\n    closeEditDialog(isUpdate = false) {\n      this.isEditVisble = false;\n      if (isUpdate) {\n        this.onSearch();\n      }\n    },\n    switchHistoryLog(isVisible, row) {\n      this.actionVisible = isVisible;\n      if (isVisible) {\n        this.currentCategory = row;\n        const params = {id: row.id, pageno: 1, count: 10};\n        this.getActionLog(params);\n      }\n    },\n    onExport() {\n      const rows = this.checkedRows;\n      const type = this.checkedType;\n      if (!rows.length) { return this.$message.error(this.$t('atLeastOneItem')); }\n        const params = {region: this.region};\n        if (type === 'all') {\n          params.type = 2;\n          params.filters = this.lastSearchForm;\n          this.$delete(params.filters, 'region');\n        } else {\n          params.type = 1;\n          params.id_list = rows.map(element => (element.id));\n        }\n        asyncExportBlackList(params).then(res => {\n          if (res.retcode === 0) {\n            this.$message.success(this.$t('commonAsyncExportSuccessTips'));\n          } else {\n            this.$message.error(res.info);\n          }\n        }).catch(() => {\n          this.$message.error(this.$t('commonExportHistoryErrorTips'));\n        });\n    },\n    onCancel(row) {\n      const params = {\n        region: this.region,\n        type: 1,\n        id_list: [row.id]\n      };\n      this.$confirm(this.$t('blackStockRemoveTip')).then(_ => {\n        removeBlackList(params).then(res => {\n          if (res.retcode === 0) {\n            this.$message.success(this.$t('commonRemoveSuccess'));\n            if (this.pager.pageno > Math.ceil((this.total - 1) / this.pager.count)) {\n              this.pager.pageno = (this.pager.pageno - 1) || 1;\n            }\n            this.getList();\n          } else {\n            this.$message.error(res.info || res.message);\n          }\n        }).catch(e => {\n          this.$message.error(e.info || e.message);\n        });\n      }).catch();\n    },\n    getTableCellRender(schema, row, index) {\n      return { schema, row, index };\n    },\n    handleChangePageIndex(index) {\n      this.pager.pageno = index;\n      this.getList();\n    },\n    handleSizeChange(index) {\n      this.pager.count = index;\n      this.getList();\n    },\n    switchEditDilog(isShow, row) {\n      this.isEditVisble = isShow;\n      if (isShow) {\n        if (row) {\n          this.currentBlackList = row;\n          this.dialogMode = 1;\n        } else {\n          this.dialogMode = 0;\n        }\n      } else {\n\n      }\n    },\n    onSearch() {\n      this.pager.pageno = 1;\n      this.getList();\n      this.resetCheckedType();\n    },\n    getList() {\n      const params = {...this.form, region: this.region, ...this.pager};\n      params.start_date_str = params.start_date_str ? moment(params.start_date_str).format('YYYY-MM-DD') : '';\n      params.end_date_str = params.end_date_str ? moment(params.end_date_str).format('YYYY-MM-DD') : '';\n      if (!params.end_date_str) { this.$delete(params, 'end_date_str'); }\n      if (!params.start_date_str) { this.$delete(params, 'start_date_str'); }\n      this.listLoading = true;\n      getBlackList(params).then(res => {\n        if (res.retcode === 0) {\n          this.tableList = res.data['config_list'];\n          this.total = res.data.total;\n          this.resetCheckedType();\n          this.lastSearchForm = {...params};\n        } else {\n          this.$message.error(res.info || res.message);\n        }\n      }).catch(e => {\n        this.$message.error(e.info || e.message);\n      }).finally(_ => {\n        this.listLoading = false;\n      });\n    }\n  }\n};\n</script>\n\n<style lang='scss' scoped>\n.black-stock-config-black-list {\n  padding: 26px 18px;\n  .black-stock-black-button-group {\n    display: flex;\n    justify-content: space-between;\n    .black-stock-mass-button {\n      .upload-button {\n        display: inline-block;\n        margin: 0 10px;\n      }\n      .el-button {\n        padding: 8px 15px;\n        margin-bottom: 16px;\n        border: 1px solid #3D6ED1;\n        color: #3D6ED1;\n        &.el-button--text {\n          border: none;\n        }\n      }\n    }\n  }\n}\n</style>\n<style lang='scss'>\n.black-stock-config-black-list {\n  .el-upload {\n    display: inline-block;\n  }\n  .el-form-item {\n    &.black-stock-date-layout{\n      .el-form-item__content {\n        width: 280px !important;\n        display: flex;\n      }\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/marketingCenter/priceChangeSettings/blackStockConfig/category/editDialog.vue","messages":[{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":48,"column":7,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":48,"endColumn":8,"fix":{"range":[1645,1646],"text":""}},{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":215,"column":10,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":215,"endColumn":11,"fix":{"range":[7102,7103],"text":""}},{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":218,"column":10,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":218,"endColumn":11,"fix":{"range":[7123,7124],"text":""}}],"errorCount":3,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"<template>\n<el-dialog\n  :visible.sync=\"dialogVisible\"\n  width=\"800px\"\n  :before-close=\"handleClose\"\n  custom-class=\"black-stock-config-create-style\"\n  >\n  <span slot=\"title\">{{$t(modeOption[mode].title)}}</span>\n  <section class=\"content\">\n    <el-form\n    v-if=\"dialogVisible\"\n    ref=\"categoryForm\"\n    :rules=\"rules\"\n    :model=\"categoryForm\">\n      <el-form-item :label=\"$t('commonCategoryName')\" class=\"category-selector\" prop=\"category_id_list\">\n        <el-cascader\n          style=\"width:100%;\"\n          v-model=\"categoryForm.category_id_list\"\n          :options=\"categoryOptions\"\n          popper-class=\"price-change-settings-category-selector\"\n          :props=\"{\n            label:'category_name',\n            value:'category_id',\n            checkStrictly:true,\n            expandTrigger:'hover'\n          }\"\n        ></el-cascader>\n      </el-form-item>\n      <el-form-item v-for=\"item in formSchema\" :key=\"item.field\" :label=\"item.label\" :prop=\"item.field\">\n        <pms-form-item @input=\"modifyForm\" :renderData=\"{ schema: item, form: categoryForm}\"></pms-form-item>\n      </el-form-item>\n    </el-form>\n  </section>\n  <span slot=\"footer\" class=\"dialog-footer\">\n    <el-button @click=\"handleClose\">{{$t('commonCancel')}}</el-button>\n    <el-button type=\"primary\" @click=\"handleCofirm('categoryForm')\">{{$t('commonConfirm')}}</el-button>\n  </span>\n</el-dialog>\n</template>\n\n<script>\nimport pmsFormItem, { getSelectOptions } from '@/components/BaseItem/formItem';\nimport { createBlackStockPromotionConfig, updateBlackStockPromotionConfig} from '@/api/priceChangeConfig';\nexport default {\n  components: {\n    pmsFormItem\n  },\n  data () {\n    return {\n      dialogVisible: false,\n      categoryForm: {},\n      cachcategoryForm: {},\n      modeOption: [\n        {\n          title: 'blackStockAddCategory'\n        },\n        {\n          title: 'blackStockEditCategory'\n        }\n      ]\n    };\n  },\n  props: {\n    visible: {},\n    categoryOptions: {\n      required: true\n    },\n    basicInfo: {}, // region ,usdRate\n    brandOptions: {},\n    mode: {}, // 0: add, 1: edit\n    value: {}\n  },\n  computed: {\n    rules() {\n      return {\n        category_id_list: [{required: true, message: this.$t('commonIsRequired', {target: this.$t('commonCategoryName')}), trigger: 'blur'}],\n        target_days_to_clear: [\n          {required: true, message: this.$t('commonIsRequired', {target: this.$t('BlackStockTargetTimeToClear')}), trigger: 'blur'}\n        ],\n        min_margin_percentage: [{required: true, message: this.$t('commonIsRequired', {target: this.$t('blackStockMinMargin')}), trigger: 'blur'}],\n        split_factor: [{required: true, message: this.$t('commonIsRequired', {target: this.$t('blackStockSplitFactor')}), trigger: 'blur'}],\n        max_cap: [{required: true, message: this.$t('commonIsRequired', {target: this.$t('blackStockMaxCap', {currency: this.basicInfo.currency})}), trigger: 'blur'}]\n      };\n    },\n    formSchema() {\n      const precisionByRegion = (this.basicInfo.region === 'MY' || this.basicInfo.region === 'SG') ? 2 : 0;\n      return [\n        { type: 'select', field: 'brand_id', label: this.$t('commonBrand'), props: {clearable: true},\n          getChildren: (h) => getSelectOptions(this.brandOptions, h)\n        },\n        {\n          type: 'input-number', field: 'target_days_to_clear', label: this.$t('BlackStockTargetTimeToClear'),\n          props: {\n            controls: false,\n            min: 1,\n            max: 999,\n            precision: 0\n          }\n        },\n        {\n          type: 'input-number', field: 'min_margin_percentage', label: this.$t('blackStockMinMargin'),\n          props: {\n            controls: false,\n            min: -99,\n            max: 99,\n            precision: 0\n          }\n        },\n        {\n          type: 'input-number', field: 'split_factor', label: this.$t('blackStockSplitFactor'),\n          props: {\n            controls: false,\n            min: 1,\n            max: 99,\n            precision: 0\n          }\n        },\n        {\n          type: 'input-number', field: 'max_cap', label: this.$t('blackStockMaxCap', {currency: this.basicInfo.currency}),\n          props: {\n            controls: false,\n            min: 0,\n            max: 100000000,\n            precision: precisionByRegion\n          },\n          on: {\n            change: (value) => this.onCapChange(value, 'local')\n          }\n        },\n        {\n          type: 'input-number', field: 'max_cap_usd', label: this.$t('blackStockMaxCap', {currency: 'USD'}),\n          props: {\n            controls: false,\n            min: 0,\n            precision: 2\n          },\n          on: {\n            change: (value) => this.onCapChange(value, 'usd')\n          }\n        }\n      ];\n    }\n  },\n  watch: {\n    '$props.visible': {\n      handler(cur) {\n        this.dialogVisible = cur;\n        if (cur) {\n          if (this.mode) {\n            this.categoryForm = {...this.value};\n            const value_usd = parseFloat(((this.value.max_cap * this.basicInfo.usdRate) || 0).toFixed(2));\n            this.$set(this.categoryForm, 'max_cap_usd', value_usd);\n            this.cachcategoryForm = this.value;\n          }\n        } else {\n          this.categoryForm = {};\n          this.cachcategoryForm = {};\n        }\n      }\n    }\n  },\n  methods: {\n    onCapChange(value, type) {\n      if (type === 'local') {\n        value = parseFloat(value);\n        this.categoryForm.max_cap_usd = parseFloat(((value * this.basicInfo.usdRate) || value).toFixed(2)) || null;\n      } else {\n        this.categoryForm.max_cap = (value / (this.basicInfo.usdRate || value));\n        this.$refs['categoryForm'].validateField('max_cap');\n      }\n    },\n    handleClose() {\n      this.$emit('close');\n    },\n    modifyForm(schema, value) {\n      this.$set(this.categoryForm, schema.field, value);\n    },\n    handleCofirm(formName) {\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          const params = {...this.categoryForm};\n          this.$delete(params, 'max_cap_usd');\n          this.$set(params, 'region', this.basicInfo.region);\n          if (!this.mode) {\n            createBlackStockPromotionConfig(params).then(res => {\n              if (res.retcode === 0) {\n                this.$message.success(this.$t('commonConfirmSuccess'));\n                this.$emit('close', true);\n              }\n            });\n          } else {\n            let isChange = false;\n            for (const index in this.cachcategoryForm) {\n              if (this.cachcategoryForm[index] !== this.categoryForm[index]) {\n                isChange = true;\n                break;\n              }\n            }\n            if (!isChange) {\n              return this.$message.error(this.$t('commonNotChangeAnyThing'));\n            }\n            updateBlackStockPromotionConfig(params).then(res => {\n              if (res.retcode === 0) {\n                this.$message.success(this.$t('commonConfirmSuccess'));\n                this.$emit('close', true);\n              }\n            });\n          }\n        } else {\n          return false;\n        }\n      });\n    }\n  },\n  mounted () {\n\n  },\n  created () {\n\n  }\n};\n</script>\n<style lang='scss' scoped>\n</style>\n<style lang='scss'>\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/marketingCenter/priceChangeSettings/blackStockConfig/category/index.vue","messages":[{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":131,"column":7,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":131,"endColumn":8,"fix":{"range":[5556,5557],"text":""}},{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":268,"column":10,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":268,"endColumn":11,"fix":{"range":[10152,10153],"text":""}},{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":271,"column":10,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":271,"endColumn":11,"fix":{"range":[10195,10196],"text":""}}],"errorCount":3,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"<template>\n  <div class='black-stock-config-category-list'>\n    <section class=\"black-stock-config-search\">\n        <el-form ref=\"form\" :model=\"form\">\n          <el-form-item :label=\"$t('commonCategoryName')\">\n            <el-cascader\n              style=\"width:100%;\"\n              :key=\"categoryKey\"\n              v-model=\"form.category_id_list\"\n              :options=\"categoryOptions\"\n              :clearable=\"true\"\n              @change=\"onSearch\"\n              popper-class=\"price-change-settings-category-selector\"\n              :props=\"{\n                label:'category_name',\n                value:'category_id',\n                checkStrictly:true,\n                expandTrigger:'hover'\n              }\"\n            ></el-cascader>\n          </el-form-item>\n          <el-form-item :label=\"$t('commonBrand')\">\n            <el-select v-model=\"form.brand_id\" :clearable=\"true\">\n              <el-option v-for=\"item in brandList || []\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"></el-option>\n            </el-select>\n          </el-form-item>\n        </el-form>\n        <div class=\"black-stock-button-group\">\n            <el-button @click=\"form = {}\">{{$t('commonReset')}}</el-button>\n            <el-button type=\"primary\" @click=\"onSearch\">{{$t('commonSearch')}}</el-button>\n        </div>\n    </section>\n    <section class=\"black-stock-black-button-group\">\n      <div class=\"black-stock-mass-button \">\n        <el-button @click=\"onExport\">{{$t('commonExport')}}</el-button>\n        <el-button @click=\"handleHistoryDialog(false)\">{{$t('commonExportHistory')}}</el-button>\n      </div>\n      <div class=\"black-stock-button-group\">\n          <el-button\n          v-if=\"canProcess\"\n          @click=\"switchEditDilog(true, 0)\"\n          type=\"primary\"\n          >{{$t('commonAddCategory')}}</el-button>\n      </div>\n    </section>\n    <section class=\"black-stock-config-table pms-ui\" v-loading=\"listLoading\">\n      <el-checkbox-group v-model=\"checkedRows\" class=\"pms-ui\">\n        <el-table :data=\"tableList\">\n          <el-table-column column-key=\"action\" width=\"60\" align=\"center\">\n            <template #header>\n              <el-dropdown @click=\"resetCheckedType\" placement=\"bottom\" split-button trigger=\"click\" class=\"select-page-dropdown\" @command=\"changeSelectPageType\">\n                <span :class=\"`el-checkbox__input ${checkedStyle}`\">\n                  <span :class=\"`el-checkbox__inner ${checkedStyle}`\"></span>\n                </span>\n                <el-dropdown-menu class=\"options-field-menu\" slot=\"dropdown\">\n                  <el-dropdown-item command=\"current\">Current Page</el-dropdown-item>\n                  <el-dropdown-item command=\"all\">All Pages</el-dropdown-item>\n                </el-dropdown-menu>\n              </el-dropdown>\n            </template>\n            <template slot-scope=\"scope\">\n              <el-checkbox :disabled=\"checkedType === 'all'\" :label=\"scope.row\">{{''}}</el-checkbox>\n            </template>\n        </el-table-column>\n          <el-table-column\n          :prop=\"schema.field\"\n          :sortable=\"schema.sortable || false\"\n          :width=\"schema.width || 'auto'\"\n          :min-width=\"schema.minWidth || ''\"\n          :column-key=\"schema.columnKey || ''\"\n          :align=\"schema.align || 'left'\"\n          :label=\"schema.label\"\n          :filters=\"schema.filters\"\n          :filter-multiple=\"schema.filterMultiple\"\n          v-for=\"schema in tableSchema\"\n          :key=\"schema.field\"\n          :fixed=\"schema.fixed || false\">\n          <template slot-scope=\"scope\">\n            <pms-table-cell @update=\"closeUpdate\" :forceUpdate=\"update\" :renderData=\"getTableCellRender(schema, scope.row, scope.$index)\"></pms-table-cell>\n          </template>\n        </el-table-column>\n        </el-table>\n      </el-checkbox-group>\n      <el-pagination\n        :current-page=\"pager.pageno\" background layout=\"sizes, prev, pager, next\" :total.sync=\"total\" :page-sizes=\"[10,20,50,100]\"\n        :page-size=\"pager.count\" @current-change=\"handleChangePageIndex\" @size-change=\"handleSizeChange\"\n      ></el-pagination>\n    </section>\n    <export-history-dialog\n    :taskType=\"36\"\n    :visible=\"showExportHistoryDialog\"\n    @close=\"handleHistoryDialog\"></export-history-dialog>\n    <action-log\n    type=\"field\"\n    @close=\"switchHistoryLog(false)\"\n    @currentChange=\"currentChange\"\n    :outsideData=\"actionData\"\n    :visible=\"actionVisible\"\n    :outsideTotal=\"outsideTotal\"\n    :hasPager=\"true\"\n    :isDataFromOutside=\"true\"></action-log>\n    <edit-dialog\n    :categoryOptions=\"categoryOptions\"\n    :value=\"currentCategory\"\n    :brandOptions=\"brandList\"\n    :visible=\"isEditVisble\"\n    :mode=\"dialogMode\"\n    :basicInfo=\"{region, usdRate, currency}\"\n    @close=\"closeEditDialog\" />\n  </div>\n</template>\n\n<script>\nimport pmsTableCell from '@/components/BaseItem/tableItem';\nimport editDialog from './editDialog';\nimport actionLog from '@/components/actionLogDialog/actionLog';\nimport ExportHistoryDialog from '@/components/ApproveList/exportHistoryDialog';\nimport { getCategories } from '@/api/shop';\nimport { getBrandList } from '@/api/brand';\nimport { categoryTreeData, getCategoryTreeMap } from '@/utils/treeData';\nimport { getBlackStockPromotionDetail, removeBlackStockPromotionConfig, getBlackStockCategoryLog, asyncExportBlackCategory } from '@/api/priceChangeConfig';\nimport { TimeZoneByCountry } from '@/utils/constant';\nimport { formatValue } from '@/utils/formatParams';\nexport default {\n  components: {\n    editDialog,\n    pmsTableCell,\n    actionLog,\n    ExportHistoryDialog\n  },\n  data () {\n    return {\n      update: false,\n      actionVisible: false,\n      showExportHistoryDialog: false,\n      actionData: [],\n      outsideTotal: 0,\n      categoryTreeMap: {},\n      categoryKey: 0,\n      dialogMode: 0, // 0: add, 1: edit\n      checkedType: '',\n      checkedRows: [],\n      isEditVisble: false,\n      currentCategory: {},\n      usdRate: 0,\n      form: {},\n      lastSearchForm: {},\n      tableList: [],\n      pager: {\n        pageno: 1,\n        count: 10\n      },\n      total: 0,\n      categoryOptions: [],\n      brandList: [],\n      listLoading: false\n    };\n  },\n  props: {\n    region: {\n      required: true\n    },\n    canProcess: {}\n  },\n  computed: {\n    currency() {\n      return this.$store.getters.currencyMap[this.region];\n    },\n    checkedStyle() {\n      return this.checkedType ? 'is-checked' : '';\n    },\n    tableSchema() {\n      const schema = [\n        {\n          field: 'category_id_list', label: this.$t('commonCategory') + '(L1~L5)', minWidth: 264, render: (schema, row, index, h) => {\n            const categories = row.category_id_list.map(id => {\n              return (this.categoryTreeMap[id] || {}).category_name;\n            });\n            const fullCategories = categories.reduce((accu, cur) => accu + '>' + cur);\n            let categoryInTable = '';\n            if (categories.length > 3) {\n              categoryInTable = `${categories[0]}> ... ${categories[categories.length - 2]} > ${categories[categories.length - 1]}`;\n            } else {\n              categoryInTable = fullCategories;\n            }\n          return (['div', {}, [\n            h('el-popover', { class: '', attrs: {trigger: 'hover', placement: 'top'}}, [\n                h('span', {style: 'width: 300px'}, fullCategories),\n                h('span', {slot: 'reference', class: 'balck-config-category-in-table'}, categoryInTable)\n              ]\n            )\n          ]]);\n          }\n        },\n        {\n          field: 'brand_id', label: this.$t('commonBrand'), render: (schema, row, index, h) => {\n            return ['span', {}, (this.brandList.find(item => item.value === row.brand_id) || {}).label || '/'];\n          }\n        },\n        {\n          field: 'target_days_to_clear', label: this.$t('BlackStockTargetTimeToClear'), align: 'right', width: 104\n        },\n        {\n          field: 'min_margin_percentage', label: this.$t('blackStockMinMargin'), align: 'right'\n        },\n        {\n          field: 'split_factor', label: this.$t('blackStockSplitFactor'), align: 'right'\n        },\n        {\n          field: 'max_cap', label: this.$t('blackStockMaxCap', {currency: this.currency}), align: 'right',\n          render: (schema, row) => formatValue(row[schema.field] || 0)\n        },\n        {\n          field: 'max_cap_usd', label: this.$t('blackStockMaxCap', {currency: 'USD'}), align: 'right',\n          render: (schema, row, index, h) => {\n            return ['span', {}, formatValue(parseFloat((row.max_cap * this.usdRate).toFixed(2)))];\n          }\n        },\n        {\n          field: 'create_time_str', label: this.$t('commonCreateTime'), width: 150,\n          render: (schema, row, index, h) => {\n            return ['div', null, [\n            h('p', null, row.create_time_str),\n            h('p', {class: 'time-zone-style'}, `${TimeZoneByCountry[this.region.toUpperCase()]}00`)]];\n          }\n        },\n        {\n          field: 'log', label: this.$t('commonHistory'), render: (schema, row, index, h) => {\n            return ['el-button', {\n              props: {type: 'text'},\n              on: {click: () => { this.switchHistoryLog(true, row); }}\n            }, this.$t('commonLog')];\n          }\n        }\n      ];\n      if (this.canProcess) {\n        schema.push(\n          {\n            field: 'action', label: this.$t('commonAction'), fixed: 'right', width: '135px', render: (schema, row, index, h) => {\n            return ['div', {class: 'action-buttons'}, [h(\n            'el-button', {\n              props: {type: 'text'},\n              on: {click: () => { this.switchEditDilog(true, row); }}\n            }, this.$t('commonEdit')\n            ), h(\n              'el-button', {\n              class: 'red-text',\n              props: {type: 'text'},\n              on: {click: () => { this.onCancel(row); }}\n            }, this.$t('commonRemove')\n          )]];\n        }});\n      }\n      return schema;\n    }\n  },\n  watch: {\n    '$props.region': {\n      handler(cur) {\n        this.getCategoryOptions();\n        this.getCountryBrandList();\n        this.onSearch();\n        this.form = {};\n      },\n      immediate: true\n    }\n  },\n  created () {\n    // this.getList();\n  },\n  mounted () {\n  },\n  methods: {\n    closeUpdate() {\n      this.update = false;\n    },\n    resetCheckedType() {\n      this.checkedType = '';\n      this.checkedRows = [];\n    },\n    changeSelectPageType(type) {\n      this.checkedType = type;\n      this.checkedRows = this.tableList;\n    },\n    handleHistoryDialog() {\n      this.showExportHistoryDialog = !this.showExportHistoryDialog;\n    },\n    onExport() {\n      const rows = this.checkedRows;\n      const type = this.checkedType;\n      if (!rows.length) { return this.$message.error(this.$t('atLeastOneItem')); }\n        const params = {region: this.region};\n        if (type === 'all') {\n          params.type = 2;\n          params.filters = this.lastSearchForm;\n          this.$delete(params.filters, 'region');\n        } else {\n          params.type = 1;\n          params.id_list = rows.map(element => (element.id));\n        }\n        asyncExportBlackCategory(params).then(res => {\n          if (res.retcode === 0) {\n            this.$message.success(this.$t('commonAsyncExportSuccessTips'));\n          } else {\n            this.$message.error(res.info);\n          }\n        }).catch(() => {\n          this.$message.error(this.$t('commonExportHistoryErrorTips'));\n        });\n    },\n    switchHistoryLog(isVisible, row) {\n      this.actionVisible = isVisible;\n      if (isVisible) {\n        this.currentCategory = row;\n        const params = {id: row.id, pageno: 1, count: 10};\n        this.getActionLog(params);\n      }\n    },\n    currentChange(index) {\n      const id = this.currentCategory.id;\n      const params = {id, pageno: index, count: 10};\n      this.getActionLog(params);\n    },\n    getActionLog(params) {\n      getBlackStockCategoryLog(params).then(res => {\n        if (res.retcode === 0) {\n          this.actionData = res.data.audit_logs;\n          this.outsideTotal = res.data.total;\n        } else {\n          this.$message.error(res.info || res.message);\n        }\n      }).catch(e => {\n        this.$message.error(e.info || e.message);\n      });\n    },\n    handleChangePageIndex(index) {\n      this.pager.pageno = index;\n      this.getList();\n    },\n    handleSizeChange(index) {\n      this.pager.count = index;\n      this.getList();\n    },\n    getTableCellRender(schema, row, index) {\n      return { schema, row, index };\n    },\n    getCategoryOptions() {\n      return getCategories({ country: this.region, use_global: 1 }).then(({ data: { categories }}) => {\n        const arr = categories || [];\n        this.categoryTreeMap = getCategoryTreeMap(arr);\n        const res = categoryTreeData(arr, {\n          key: 'category_id'\n        });\n        this.categoryKey++;\n        this.form.category_id_list = [];\n        this.categoryOptions = res;\n      }).finally(_ => {});\n    },\n    getCountryBrandList() {\n      return getBrandList({ pageno: 1, country: this.region, count: 200, status: 0 }).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.brandList = (resp.data.brand_list || []).map(item => ({ label: item.brand_name, value: item.brand_id }));\n        }\n      });\n    },\n    closeEditDialog(isUpdate = false) {\n      this.isEditVisble = false;\n      if (isUpdate) {\n        this.onSearch();\n      }\n    },\n    switchEditDilog(isShow, row) {\n      this.isEditVisble = isShow;\n      if (isShow) {\n        if (row) {\n          this.currentCategory = row;\n          this.dialogMode = 1;\n        } else {\n          this.dialogMode = 0;\n        }\n      } else {\n\n      }\n    },\n    onCancel(row) {\n      const params = {\n        region: this.region,\n        type: 1,\n        id_list: [row.id]\n      };\n      this.$confirm(this.$t('blackStockRemoveTip')).then(_ => {\n        removeBlackStockPromotionConfig(params).then(res => {\n          if (res.retcode === 0) {\n            this.$message.success(this.$t('commonRemoveSuccess'));\n            if (this.pager.pageno > Math.ceil((this.total - 1) / this.pager.count)) {\n              this.pager.pageno = (this.pager.pageno - 1) || 1;\n            }\n            this.getList();\n          } else {\n            this.$message.error(res.info || res.message);\n          }\n        }).catch(e => {\n          this.$message.error(e.info || e.message);\n        });\n      }).catch();\n    },\n    onSearch() {\n      this.pager.pageno = 1;\n      this.getList();\n      this.resetCheckedType();\n    },\n    getList(pageno) {\n      const params = {...this.pager, region: this.region, ...this.form};\n      this.listLoading = true;\n      if (Array.isArray(params.category_id_list) && params.category_id_list.length === 0) {\n        this.$delete(params, 'category_id_list');\n      }\n      getBlackStockPromotionDetail(params).then(res => {\n        if (res.retcode === 0) {\n          this.total = res.data.total;\n          this.tableList = res.data.config_list;\n          this.usdRate = res.data.change_rate_to_usd;\n          this.lastSearchForm = params;\n          this.resetCheckedType();\n        } else {\n          this.$message.error(res.info || res.message);\n        }\n      }).catch(e => {\n        this.$message.error(e.info || e.message);\n      }).finally(_ => {\n        this.listLoading = false;\n      });\n    }\n  }\n};\n</script>\n\n<style lang='scss' scoped>\n.black-stock-config-category-list {\n  padding: 26px 18px;\n\n}\n</style>\n<style lang='scss'>\n.black-stock-config-category-list {\n  .balck-config-category-in-table {\n    min-width: 264px;\n    overflow: hidden;\n    cursor: pointer;\n    text-overflow: ellipsis;\n    display:-webkit-box; //作为弹性伸缩盒子模型显示。\n    -webkit-box-orient:vertical; //设置伸缩盒子的子元素排列方式--从上到下垂直排列\n    -webkit-line-clamp:2; //显示的行\n  }\n\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/marketingCenter/priceChangeSettings/blackStockConfig/index.vue","messages":[{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":36,"column":57,"nodeType":"ThisExpression","endLine":36,"endColumn":61},{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":36,"column":79,"nodeType":"ThisExpression","endLine":36,"endColumn":83},{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":128,"column":51,"nodeType":"ThisExpression","endLine":128,"endColumn":55},{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":128,"column":73,"nodeType":"ThisExpression","endLine":128,"endColumn":77},{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":206,"column":7,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":206,"endColumn":8,"fix":{"range":[7966,7967],"text":""}},{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":356,"column":10,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":356,"endColumn":11,"fix":{"range":[12692,12693],"text":""}},{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":360,"column":10,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":360,"endColumn":11,"fix":{"range":[12825,12826],"text":""}}],"errorCount":7,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"<template>\n  <div class=\"price-change-black-stock-config\">\n    <section class=\"price-change-region-area\">\n      <div>\n        <span>{{$t('commonRegion')}}</span>\n          <el-select v-model=\"region\" placeholder=\"Please Select\" @change=\"getConfig\">\n            <el-option\n            v-for=\"country in countryList\"\n            :key=\"country\"\n            :label=\"country\"\n            :value=\"country\"></el-option>\n          </el-select>\n       </div>\n    </section>\n    <section class=\"black-stock-basic-config\">\n      <ul>\n        <li>\n          <div class=\"black-stock-basic-item\">\n            <h3>{{$t('priceChangeAutoGeneration')}}\n              <el-tooltip placement=\"right\" effect=\"light\" popper-class=\"price-change-history-selling-tips\">\n                <div slot=\"content\">\n                  <ul>\n                    <li>{{$t('BlackStockAutoGenerationTip')}}</li>\n                  </ul>\n                </div>\n                <svg-icon class=\"icon_question\" icon-class=\"question\" />\n              </el-tooltip>\n            </h3>\n          </div>\n          <div class=\"black-stock-basic-item\">\n            <el-radio-group v-model=\"basicForm.auto_generation_enable\" v-if=\"isBasicEditing\">\n              <el-radio :label=\"false\">{{$t('commonOff')}}</el-radio>\n              <el-radio :label=\"true\">{{$t('commonOn')}}</el-radio>\n            </el-radio-group>\n            <span v-else :style=\"cacheBasicForm.auto_generation_enable ? 'color: #1CC461' : 'color: #999'\">\n              {{cacheBasicForm.auto_generation_enable ? this.$t('commonOn') : this.$t('commonOff')}}\n            </span>\n          </div>\n        </li>\n        <li class=\"pms-ui\" v-if=\"isBasicEditing\">\n          <el-button @click=\"cancelBasicEdit\">{{$t('commonCancel')}}</el-button>\n          <el-button @click=\"updateBasicConfig\" class=\"button-blue\">{{$t('commonSave')}}</el-button>\n        </li>\n        <li v-else>\n          <el-button @click=\"switchActionLog(true)\">{{$t('commonActionLog')}}</el-button>\n          <el-button @click=\"isBasicEditing = true\" v-if=\"canProcess\" type=\"primary\">{{$t('commonEdit')}}</el-button>\n        </li>\n      </ul>\n      <ul>\n        <li>\n          <div class=\"black-stock-basic-item\">\n            <h5>{{$t('blackStockGenerationTime')}}\n              <el-tooltip placement=\"right\" effect=\"light\" popper-class=\"price-change-history-selling-tips\">\n                <div slot=\"content\">\n                  <ul>\n                    <li>{{$t('BlackStockConfigAutoGenerationTimeTip')}}</li>\n                  </ul>\n                </div>\n                <svg-icon class=\"icon_question\" icon-class=\"question\" />\n              </el-tooltip>\n            </h5>\n          </div>\n          <div class=\"black-stock-basic-item\">\n            <el-time-picker\n              :disabled=\"!basicForm.auto_generation_enable\"\n              v-if=\"isBasicEditing\"\n              class=\"basic-input\"\n              format=\"HH:mm\"\n              v-model=\"basicForm.auto_generation_time_str\">\n            </el-time-picker>\n            <span v-else>{{cacheBasicForm.auto_generation_time_str}}</span>\n            <span class=\"time-zone-style\"> {{timeZone}} EveryDay</span>\n          </div>\n        </li>\n      </ul>\n      <ul>\n        <li>\n          <div class=\"black-stock-basic-item\">\n            <h5>{{$t('blackStockPromotionDate')}}\n              <el-tooltip placement=\"right\" effect=\"light\" popper-class=\"price-change-history-selling-tips\">\n                <div slot=\"content\">\n                  <ul>\n                    <li>{{$t('BlackStockConfigPromotionDateTip')}}</li>\n                  </ul>\n                </div>\n                <svg-icon class=\"icon_question\" icon-class=\"question\" />\n              </el-tooltip>\n            </h5>\n          </div>\n          <div class=\"black-stock-basic-item\">\n            <el-input-number\n            :disabled=\"!basicForm.auto_generation_enable\"\n            :controls=\"false\"\n            :max=\"7\"\n            :min=\"1\"\n            :precision=\"0\"\n            v-if=\"isBasicEditing\"\n            class=\"basic-input\"\n            v-model=\"basicForm.promotion_delay_days\"></el-input-number>\n            <span v-else>{{cacheBasicForm.promotion_delay_days}}</span>\n            <span> Days later</span>\n          </div>\n        </li>\n      </ul>\n      <ul>\n        <li>\n          <div class=\"black-stock-basic-item\">\n            <h5>{{$t('priceChangeAutoPush')}}\n              <el-tooltip placement=\"right\" effect=\"light\" popper-class=\"price-change-history-selling-tips\">\n                <div slot=\"content\">\n                  <ul>\n                    <li>{{$t('BlackStockConfigAutoPushTip')}}</li>\n                  </ul>\n                </div>\n                <svg-icon class=\"icon_question\" icon-class=\"question\" />\n              </el-tooltip>\n            </h5>\n          </div>\n          <div class=\"black-stock-basic-item\">\n            <el-radio-group\n            :disabled=\"!basicForm.auto_generation_enable\"\n            v-model=\"basicForm.auto_push_enable\"\n            v-if=\"isBasicEditing\">\n              <el-radio :label=\"false\">{{$t('commonOff')}}</el-radio>\n              <el-radio :label=\"true\">{{$t('commonOn')}}</el-radio>\n            </el-radio-group>\n            <span v-else :style=\"cacheBasicForm.auto_push_enable ? 'color: #1CC461' : 'color: #999'\"\n            > {{cacheBasicForm.auto_push_enable ? this.$t('commonOn') : this.$t('commonOff')}}</span>\n          </div>\n        </li>\n      </ul>\n      <ul v-show=\"basicForm.auto_push_enable\">\n        <li>\n          <div class=\"black-stock-basic-item\">\n            <h5>{{$t('blackStockAutoPushTime')}}\n              <el-tooltip placement=\"right\" effect=\"light\" popper-class=\"price-change-history-selling-tips\">\n                <div slot=\"content\">\n                  <ul>\n                    <li>{{$t('BlackStockConfigAutoPushTimeTip')}}</li>\n                  </ul>\n                </div>\n                <svg-icon class=\"icon_question\" icon-class=\"question\" />\n              </el-tooltip>\n            </h5>\n          </div>\n          <div class=\"black-stock-basic-item\">\n            <el-input-number\n            v-if=\"isBasicEditing\"\n            :disabled=\"!basicForm.auto_generation_enable\"\n            :controls=\"false\"\n            :min=\"1\"\n            :precision=\"0\"\n            class=\"basic-input\"\n            v-model=\"basicForm.auto_push_delay_hours\"></el-input-number>\n            <span v-else> {{cacheBasicForm.auto_push_delay_hours}}</span>\n            <span> Hours after generation</span>\n          </div>\n        </li>\n      </ul>\n    </section>\n    <section class=\"black-stock-config-list\">\n      <el-tabs v-model=\"activeName\" type=\"card\">\n        <el-tab-pane name=\"category\" :label=\"$t('commonCategoryConfig')\">\n        </el-tab-pane>\n        <el-tab-pane name=\"balckList\" :label=\"$t('blackStockBlackListedProducts')\">\n        </el-tab-pane>\n      </el-tabs>\n      <div class=\"black-stock-config-list-content\">\n        <category\n        v-if=\"activeName === 'category'\"\n        :region=\"region\"\n        :canProcess=\"canProcess\"\n        />\n        <black-list\n        :region=\"region\"\n        :canProcess=\"canProcess\"\n        v-if=\"activeName === 'balckList'\"/>\n      </div>\n    </section>\n    <action-log\n    type=\"field\"\n    @close=\"switchActionLog(false)\"\n    @currentChange=\"currentChange\"\n    :outsideData=\"actionData\"\n    :visible=\"actionVisible\"\n    :outsideTotal=\"outsideTotal\"\n    :hasPager=\"true\"\n    :isDataFromOutside=\"true\"></action-log>\n  </div>\n</template>\n\n<script>\nimport { hasPermission } from '@/utils/permission';\nimport { TimeZoneByCountry, Permission } from '@/utils/constant';\nimport actionLog from '@/components/actionLogDialog/actionLog';\nimport { getBasicAutoBlackStock, updateBasicAutoBlackStock, getBasicAutoBlackStockAction } from '@/api/priceChangeConfig';\nimport moment from 'moment';\nimport category from './category';\nimport blackList from './blackList';\nexport default {\n  components: {\n    category,\n    blackList,\n    actionLog\n  },\n  data () {\n    return {\n      region: this.$store.getters.country,\n      canProcess: false,\n      isBasicEditing: false,\n      actionVisible: false,\n      actionData: [],\n      outsideTotal: 0,\n      activeName: 'category',\n      basicForm: {\n        auto_generation_enable: false,\n        auto_push_enable: false\n      },\n      cacheBasicForm: {}\n    };\n  },\n  computed: {\n    countryList() {\n      return [\n        ...new Set([\n          ...this.$store.getters.countryList.map(item => item.country)\n        ])\n      ];\n    },\n    timeZone() {\n      return TimeZoneByCountry[this.region] + '00 ' || '';\n    },\n    autoPushTimeDelay() {\n      let hours = this.basicForm.auto_generation_time_str.getHours();\n      if (this.basicForm.auto_generation_time_str.getMinutes() > 1) {\n        hours++;\n      }\n      return 24 - hours;\n    }\n  },\n  methods: {\n    getConfig() {\n      this.isBasicEditing = false;\n      getBasicAutoBlackStock({region: this.region}).then(res => {\n        if (res.retcode === 0) {\n          this.cacheBasicForm = {...res.data};\n          if (res.data.auto_generation_time_str) {\n            const time = new Date().setHours(...res.data.auto_generation_time_str.split(':'));\n            res.data.auto_generation_time_str = new Date(time);\n          }\n          this.basicForm = res.data;\n        } else {\n          this.$message.error(res.info || res.message);\n        }\n      }).catch(e => {\n        this.$message.error(e.info || e.message);\n      });\n    },\n    switchActionLog(isOn) {\n      this.actionVisible = isOn;\n      if (isOn) {\n        const params = {region: this.region, pageno: 1, count: 10};\n        this.getActionLog(params);\n      }\n    },\n    currentChange(index) {\n      const params = {region: this.region, pageno: index, count: 10};\n      this.getActionLog(params);\n    },\n    getActionLog(params) {\n      getBasicAutoBlackStockAction(params).then(res => {\n        if (res.retcode === 0) {\n          this.actionData = res.data.audit_logs;\n          this.outsideTotal = res.data.total;\n        } else {\n          this.$message.error(res.info || res.message);\n        }\n      }).catch(e => {\n        this.$message.error(e.info || e.message);\n      });\n    },\n    updateBasicConfig() {\n      let params = {};\n      if (!this.basicForm.auto_generation_enable) {\n        params = {...this.cacheBasicForm, auto_generation_enable: false};\n      } else {\n        params = {...this.basicForm};\n        params.auto_generation_time_str = moment(params.auto_generation_time_str).format('HH:mm') || '';\n      }\n      const validRes = this.validBaiscConfig(params);\n      if (!validRes.isPass) {\n        const HtmlMessage = validRes.messages.reduce((accumulator, currentValue) => {\n          return accumulator + '<br/>' + currentValue;\n        });\n        return this.$message({\n          dangerouslyUseHTMLString: true,\n          type: 'error',\n          message: `<p>${HtmlMessage}</p>`\n        });\n      }\n      updateBasicAutoBlackStock(params).then(res => {\n        if (res.retcode === 0) {\n          this.$message.success('Success');\n          this.getConfig();\n        } else {\n          this.$message.error(res.info || res.message);\n        }\n      }).catch(e => {\n        this.$message.error(e.info || e.message);\n      });\n    },\n    validBaiscConfig(params) {\n      const error = {\n        isPass: true,\n        messages: []\n      };\n      if (params.auto_generation_enable) {\n        if (!this.basicForm.auto_generation_time_str) {\n          error.isPass = false;\n          error.messages.push(this.$t('commonIsRequired', {target: 'Auto Generation Time'}));\n        }\n        if (!params.promotion_delay_days) {\n          error.isPass = false;\n          error.messages.push(this.$t('commonIsRequired', {target: 'Promotion Date'}));\n        }\n        if (params.auto_push_enable) {\n          if (!params.auto_push_delay_hours) {\n            error.isPass = false;\n            error.messages.push(this.$t('commonIsRequired', {target: 'Auto Push Time'}));\n          }\n        }\n      }\n      let isChange = false;\n      for (const index in params) {\n        if (this.cacheBasicForm[index] !== params[index]) {\n          isChange = true;\n          break;\n        }\n      }\n      if (!isChange) {\n        error.isPass = false;\n        error.messages.push(this.$t('commonNotChangeAnyThing'));\n      }\n      return error;\n    },\n    cancelBasicEdit() {\n      this.isBasicEditing = false;\n      this.basicForm = {...this.cacheBasicForm};\n      if (this.basicForm.auto_generation_time_str) {\n          const time = new Date().setHours(...this.basicForm.auto_generation_time_str.split(':'));\n          this.basicForm.auto_generation_time_str = new Date(time);\n      }\n    }\n  },\n  watch: {},\n  created () {\n    this.canProcess = hasPermission(Permission.AUTO_BLACK_STOCK_PROMOTION_CONFIG_PROCESS);\n    this.getConfig();\n  },\n  mounted () {\n\n  }\n};\n</script>\n\n<style lang='scss' scoped>\n.price-change-black-stock-config {\n  padding: 10px 20px;\n  .color-green {\n    color: #1CC461;\n  }\n  .black-stock-basic-config {\n    padding-bottom: 20px;\n    border-bottom: 1px solid #E5E9EE ;\n    margin-bottom: 30px;\n    &>ul{\n      padding: 12px 0;\n      margin: 0;\n      display: flex;\n      justify-content: space-between;\n      li{\n        list-style: none;\n        display: flex;\n        span {\n          font-size: 14px;\n          color: #333;\n          &.time-zone-style {\n            color: #999;\n            font-size: 12px;\n          }\n        }\n        &>.black-stock-basic-item{\n          line-height: 32px;\n          .basic-input {\n            width: 160px;\n            &/deep/.el-input__inner {\n              height: 32px;\n              line-height: 32px;\n            }\n          }\n          &/deep/.el-radio-group {\n            width: 160px;\n            display: flex;\n            justify-content: space-between;\n            &/deep/.el-radio {\n              line-height: 32px;\n            }\n          }\n          &:first-child{\n            width: 156px;\n            text-align: right;\n            margin-right: 9px;\n            h3{\n              font-size: 18px;\n              font-weight: 400;\n              display: inline;\n            }\n            h5{\n              font-size: 14px;\n              color: rgba(51,51,51,0.7);\n              font-weight: 400;\n              display: inline;\n            }\n          }\n        }\n        &/deep/.el-button {\n          padding: 0 18px;\n        }\n      }\n      &:first-child {\n        padding-top: 2px;\n        padding-bottom: 20px;\n      }\n      &:last-child {\n        li>.black-stock-basic-item>.basic-input {\n          width: 90px;\n        }\n      }\n    }\n  }\n  .black-stock-config-list {\n    .black-stock-config-list-content {\n      min-height: 300px;\n      border: 1px solid #E4E7ED;\n      border-top: none;\n    }\n  }\n}\n</style>\n<style lang='scss'>\n.price-change-black-stock-config {\n  .button-blue {\n    color: white;\n    background: #3D6ED1;\n    border:none;\n  }\n  .time-zone-style {\n    color: #999;\n    font-size: 12px;\n  }\n  .black-stock-config-list {\n    .el-tabs--card>.el-tabs__header{\n      margin: 0;\n      .el-tabs__nav {\n        border: none;\n      }\n      .el-tabs__item{\n        font-weight: 400;\n        border:1px solid #E4E7ED;\n        background-color:#F6F6F6;\n        margin-right:4px;\n        border-radius:4px 4px 0 0;\n        &.is-active {\n          font-weight: 500;\n          border-bottom-color:#FFF;\n          background-color:#fff;\n          color:#3D6ED1;\n        }\n      }\n    }\n  }\n  .black-stock-button-group {\n    text-align: right;\n    .el-button--medium {\n        padding: 8px 20px;\n        margin-bottom: 16px;\n    }\n  }\n  .black-stock-black-button-group {\n    display: flex;\n    justify-content: space-between;\n    .black-stock-mass-button {\n      .el-button {\n        padding: 8px 15px;\n        margin-bottom: 16px;\n        border: 1px solid #3D6ED1;\n        color: #3D6ED1;\n        &.el-button--text {\n          border: none;\n        }\n      }\n    }\n  }\n  .black-stock-config-search {\n    display: flex;\n    .black-stock-button-group {\n      flex-grow:1;\n      margin: 0;\n    }\n    .el-form {\n      flex-shrink: 0;\n    }\n    .el-form-item {\n      display: inline-flex;\n      vertical-align: top;\n      margin-right:20px;\n      &:last-child {\n        flex-grow: 1;\n        text-align: right;\n      }\n      .el-form-item__label {\n        height: 32px;\n        display: inline-block;\n        line-height: 32px;\n      }\n      .el-form-item__content {\n        width: 208px;\n      }\n      .el-input__inner {\n        height: 32px;\n        line-height: 32px;\n      }\n    }\n  }\n  .black-stock-config-create-style {\n    .content {\n      min-height: 394px;\n      .category-selector.el-form-item{\n        .el-form-item__content {\n          width: calc(100% - 200px);\n        }\n      }\n      .el-form-item {\n        display: flex;\n        vertical-align: top;\n        margin-right:20px;\n        &:last-child {\n          flex-grow: 1;\n          text-align: right;\n        }\n        .el-form-item__label {\n          width: 200px;\n          height: 32px;\n          text-align: right;\n          display: inline-block;\n          line-height: 32px;\n        }\n        .el-form-item__content {\n          width: 260px;\n          height: 32px;\n          line-height: 32px;\n          .el-input-number--medium {\n            width: 100%;\n          }\n        }\n        .el-input__inner {\n          height: 32px;\n          line-height: 32px;\n        }\n      }\n    }\n    .dialog-footer {\n      .el-button {\n        line-height: 32px;\n        padding: 0 20px;\n      }\n    }\n  }\n  .black-stock-config-table {\n    text-align: center;\n    .el-pagination {\n      margin-top: 10px;\n    }\n    .action-buttons {\n      .red-text {\n        color:#E02020;\n      }\n    }\n  }\n  .select-page-dropdown {\n    padding: 0;\n    margin-left: -10px;\n    .el-button {\n      border: none;\n      background: unset;\n      padding: 0 0 0 10px;\n      &:nth-child(1) {\n        width: 20px;\n        padding-right: 16px;\n      }\n      &::before {\n        width: 0;\n      }\n    }\n  }\n  .el-checkbox-group {\n    .el-checkbox{\n      line-height: 30px;\n      display: block;\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/marketingCenter/priceChangeSettings/historySellingPriceConfig/actionLog.vue","messages":[{"ruleId":"vue/no-deprecated-filter","severity":2,"message":"Filters are deprecated.","line":18,"column":66,"nodeType":"VFilterSequenceExpression","messageId":"noDeprecatedFilter","endLine":18,"endColumn":103}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-dialog\n    :visible.sync=\"dialogVisible\"\n    width=\"800px\"\n    lock-scroll\n    custom-class=\"pms-new-ui\"\n    :title=\"$t('commonActionLog')\"\n    @close=\"onClose\"\n  >\n    <section v-if=\"type === 'field'\" v-loading=\"loading\" class=\"field-type-wrapper\">\n      <div class=\"log-item\" v-for=\"(log, index) in data\" :key=\"index\">\n        <span class=\"log-item-operator\">{{log.operator}}</span>\n        <span class=\"log-item-time\" >{{log.action_time}}</span>\n        <el-table class=\"log-table\" :data=\"log.info\">\n          <el-table-column :label=\"$t('commonLogContent')\">\n            <template slot-scope=\"scope\">\n              <span class=\"log-field\">{{scope.row.content}}</span>\n              <span v-if=\"scope.row.action\" class=\"log-action\">{{scope.row.action | actionStatusFormat}}</span>\n            </template>\n          </el-table-column>\n          <el-table-column :label=\"$t('commonLogBefore')\">\n             <template slot-scope=\"scope\">\n               {{beforeAfterFormat(scope.row.before)}}\n            </template>\n          </el-table-column>\n          <el-table-column :label=\"$t('commonLogAfter')\">\n            <template slot-scope=\"scope\">\n               {{beforeAfterFormat(scope.row.after)}}\n            </template>\n          </el-table-column>\n        </el-table>\n        </div>\n    </section>\n    <section slot=\"footer\">\n      <el-pagination\n        layout=\"prev, pager, next\"\n        :total=\"total\"\n        :page-size=\"pager.count\"\n        @current-change=\"handleCurrentChange\"\n        class=\"pms-text-center\"\n      >\n      </el-pagination>\n      <el-button class=\"list-btn\" @click=\"onClose\">{{$t('commonOK')}}</el-button>\n    </section>\n  </el-dialog>\n</template>\n\n<script>\nimport moment from 'moment';\nimport { getHistoricalSellingActionLog } from '@/api/priceChangeConfig';\nexport default {\n  props: {\n    visible: {\n      type: Boolean,\n      required: true,\n      default: false\n    },\n    type: {\n      type: String,\n      default: 'field'\n    },\n    region: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      pager: {\n        count: 10,\n        page_no: 1\n      },\n      dialogVisible: false,\n      loading: false,\n      data: [],\n      total: 0\n    };\n  },\n  filters: {\n    actionStatusFormat(item) {\n      return item === 2 ? 'Modify' : '';\n    }\n  },\n  watch: {\n    visible: {\n      handler(value) {\n        this.dialogVisible = value;\n        this.total = 0;\n        this.data = [];\n        this.pager = {\n            count: 10,\n            page_no: 1\n          };\n        if (value) {\n          this.getActionLog();\n        }\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    moment,\n    toggleContent(item) {\n      item.isShowContent = !item.isShowContent;\n    },\n    handleCurrentChange(index) {\n      this.pager.page_no = index;\n      this.getActionLog();\n    },\n    beforeAfterFormat(item) {\n      let str = item;\n      str = str || 'N/A';\n      return str;\n    },\n    getActionLog() {\n      this.loading = true;\n      const params = {\n        ...this.pager,\n        region: this.region\n      };\n      getHistoricalSellingActionLog(params).then(res => {\n        if (res.retcode === 0) {\n          this.data = res.data.audit_list;\n          this.total = res.data.total;\n        } else {\n          this.$message.error(res.info || \"Network did't work, please try it later!\");\n        }\n      }).finally(_ => {\n        this.loading = false;\n      });\n    },\n    onClose() {\n      this.$emit('update:visible', false);\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n@import \"~@/styles/variables.scss\";\n.action-type-wrapper{\n  max-height: 500px;\n  overflow: auto;\n  .row-header {\n    background: $grey_bg;\n    align-items: center;\n    font-size: 12px;\n    font-weight: bold;\n    line-height: 1.2em;\n    padding: 16px 0;\n  }\n  .row-body-wrapper{\n    max-height: 400px;\n    overflow-x: hidden;\n    overflow-y: auto ;\n  }\n  .row-body {\n    padding: 16px 0;\n    line-height: 1.2em;\n    align-items: center;\n    border-bottom: 1px solid $grey_bg;\n    font-size: 14px;\n    .icon-caret{\n      color: $blue;\n      font-size: 16px;\n      cursor: pointer;\n      transition: all 0.3s ease-in;\n      &.show {\n        transform: rotate(180deg);\n      }\n    }\n  }\n  .row-expand{\n    margin-top: 16px;\n  }\n  .empty-block{\n    display: block;\n    width:1px;\n    height: 1px;\n  }\n}\n.field-type-wrapper {\n  max-height: 500px;\n  overflow: auto;\n  .log-item {\n    font-size: 14px;\n    margin-top: 24px;\n    &:first-child {\n      margin-top: 0;\n    }\n    .log-item-creation{\n      font-weight: bold;\n      color: $black;\n    }\n    .log-item-operator,\n    .log-item-time {\n      color: rgba(51, 51, 51, 0.65);\n    }\n    .log-item-time {\n      margin-left: 4px;\n    }\n    .log-table {\n      margin-top: 8px;\n    }\n    .log-action {\n      font-size: 12px;\n      color: $green;\n      padding: 4px;\n      margin-left: 8px;\n      background: #ebf9ef;\n      border-radius: 2px;\n      border-radius: 2px;\n      &.red {\n        color: #ee4d2d;\n        background: #fff1f0;\n      }\n    }\n  }\n}\n</style>\n\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/marketingCenter/priceChangeSettings/historySellingPriceConfig/index.vue","messages":[{"ruleId":"vue/no-deprecated-filter","severity":2,"message":"Filters are deprecated.","line":49,"column":34,"nodeType":"VFilterSequenceExpression","messageId":"noDeprecatedFilter","endLine":49,"endColumn":67},{"ruleId":"vue/no-deprecated-filter","severity":2,"message":"Filters are deprecated.","line":49,"column":74,"nodeType":"VFilterSequenceExpression","messageId":"noDeprecatedFilter","endLine":49,"endColumn":107}],"errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<!--\n * @Author: your name\n * @Date: 2020-08-28 17:18:11\n * @LastEditTime: 2020-09-13 17:13:10\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: /pms-frontend/src/views/marketingCenter/priceChangeSettings/historySellingPriceConfig/index.vue\n-->\n<template>\n  <div class=\"price-change-history-price-config\">\n    <div class=\"price-change-region-area\">\n      <div>\n        <span>{{$t('commonRegion')}}</span>\n          <el-select v-model=\"region\" placeholder=\"Please Select\" @change=\"getConfig\">\n            <el-option\n            v-for=\"country in countryList\"\n            :key=\"country\"\n            :label=\"country\"\n            :value=\"country\"></el-option>\n          </el-select>\n       </div>\n    </div>\n    <el-row :gutter=\"20\" v-loading=\"loading\">\n      <el-col :span=\"24\" style=\"text-align:right\">\n        <div v-if=\"!editStatus\">\n          <el-button class=\"button\" @click=\"actionLogVisible = true;\">{{$t('commonActionLog')}}</el-button>\n          <el-button class=\"edit-button button\" @click=\"editStatus = true\" v-if=\"editPermission\">{{$t('commonEdit')}}</el-button>\n        </div>\n        <div v-else>\n          <el-button class=\"button\" @click=\"editStatus = false\">{{$t('commonCancel')}}</el-button>\n          <el-button class=\"edit-button button\" @click=\"handleSave\">{{$t('commonSave')}}</el-button>\n        </div>\n      </el-col>\n    </el-row>\n    <div class=\"config-content\">\n      <ul>\n        <li>\n          {{$t('priceChangeDiscount')}}(%)\n          <el-tooltip placement=\"right\" effect=\"light\" popper-class=\"price-change-history-selling-tips\">\n            <div slot=\"content\">\n              <ul>\n                <li>{{$t('priceChangeHistoryDiscountTip1')}}</li>\n                <li>{{$t('priceChangeHistoryDiscountTip2')}}</li>\n              </ul>\n            </div>\n            <svg-icon class=\"icon_question\" icon-class=\"question\" />\n         </el-tooltip>\n        </li>\n        <li v-if=\"!editStatus\">{{config.discount_minimum | isEmpty}} - {{config.discount_maximum | isEmpty}}</li>\n        <li v-else class=\"edit-item\">\n          <el-input v-model=\"configParams.discount_minimum\" type=\"number\"></el-input>\n          &nbsp;-&nbsp;\n          <el-input v-model=\"configParams.discount_maximum\" type=\"number\"></el-input>\n        </li>\n      </ul>\n      <ul>\n        <li>\n          {{$t('priceChangeFrequency')}}\n          <el-tooltip placement=\"right\" effect=\"light\" popper-class=\"price-change-history-selling-tips\">\n            <div slot=\"content\">\n              <ul>\n                <li>{{$t('priceChangeHistoryFrequencyTip')}}</li>\n              </ul>\n            </div>\n            <svg-icon class=\"icon_question\" icon-class=\"question\" />\n          </el-tooltip>\n          </li>\n        <li v-if=\"!editStatus\">\n          <span v-if=\"config.frequency === -1\"> - </span>\n          <span v-else>{{config.frequency}}</span>\n        </li>\n        <li v-else class=\"edit-item\">\n          <el-input v-model=\"configParams.frequency\" type=\"number\"></el-input>\n        </li>\n      </ul>\n      <ul>\n        <li>\n          {{$t('priceChangeHistoricalRange')}}\n          <el-tooltip placement=\"right\" effect=\"light\" popper-class=\"price-change-history-selling-tips\">\n            <div slot=\"content\">\n              <ul>\n                <li>{{$t('PriceChangeHistoricalRangeTip')}}</li>\n              </ul>\n            </div>\n            <svg-icon class=\"icon_question\" icon-class=\"question\" />\n          </el-tooltip>\n        </li>\n        <li v-if=\"!editStatus\">\n          <span v-if=\"config.historical_range !== -1\">Last {{config.historical_range}} Days</span>\n          <span v-else>-</span>\n        </li>\n        <li v-else class=\"edit-item\">\n          <span>Last</span>\n          <el-input v-model=\"configParams.historical_range\" type=\"number\"></el-input>\n          <span>Days</span>\n        </li>\n      </ul>\n    </div>\n    <action-log\n    :visible.sync=\"actionLogVisible\"\n    :region=\"region\"\n    ></action-log>\n  </div>\n</template>\n\n<script>\nimport { hasPermission } from '@/utils/permission';\nimport { Permission } from '@/utils/constant';\nimport { getHistoricalSellingConfig, updateHistoricalSellingConfig } from '@/api/priceChangeConfig';\nimport actionLog from './actionLog.vue';\nexport default {\n  data() {\n    return {\n      loading: false,\n      region: this.$store.getters.country,\n      actionLogVisible: false,\n      editStatus: false,\n      editPermission: false,\n      config: {\n        discount_minimum: -1,\n        discount_maximum: -1,\n        frequency: -1,\n        historical_range: -1\n      },\n      configParams: {\n        discount_minimum: null,\n        discount_maximum: null,\n        frequency: null,\n        historical_range: null\n      },\n      trans: {\n        discount_minimum: this.$t('priceChangeDiscount'),\n        discount_maximum: this.$t('priceChangeDiscount'),\n        frequency: this.$t('priceChangeFrequency'),\n        historical_range: this.$t('priceChangeHistoricalRange')\n      }\n    };\n  },\n  methods: {\n    handleSave() {\n      const params = { ...this.configParams };\n      let isChange = false;\n      for (const index in params) {\n        const vResault = this.validate(params[index]);\n        if (!vResault) {\n          return this.$message.error(this.trans[index] + ' ' + this.$t('priceChangeLimitedSellingConfigTips'));\n        }\n        if (params[index] === null || params[index] === '') {\n          params[index] = -1;\n        }\n        if (!isChange && this.config[index] !== params[index]) {\n          isChange = true;\n        }\n        params[index] = Number(params[index]);\n      }\n      if (!isChange) {\n        return this.$message.error(this.$t('commonNotChangeAnyThing'));\n      }\n      if (params.discount_maximum !== -1 && params.discount_minimum === -1) {\n        params.discount_minimum = 0;\n      }\n      if (params.discount_maximum === -1 && params.discount_minimum !== -1) {\n        params.discount_maximum = 100;\n      }\n      if (params.discount_minimum > params.discount_maximum) {\n        return this.$message.error(this.$t('priceChangeHistoricalDiscountTip'));\n      }\n      params.region = this.region;\n      updateHistoricalSellingConfig(params).then(res => {\n        if (res.retcode === 0) {\n          this.$message({\n            type: 'success',\n            message: this.$t('commonSaveSuccess')\n          });\n          this.editStatus = false;\n          this.getConfig();\n        } else {\n          this.$message.error(res.info || \"Network did't work, please try it later!\");\n        }\n      });\n    },\n    validate(num) {\n      num = Number(num);\n      if (num < 0 || num % 1 !== 0) {\n        return false;\n      } else {\n        return true;\n      }\n    },\n    getConfig() {\n      this.loading = true;\n      getHistoricalSellingConfig({ region: this.region }).then(res => {\n        if (res.retcode === 0) {\n          this.config = res.data;\n          for (const index in res.data) {\n            this.configParams[index] = res.data[index] === -1 ? null : res.data[index];\n          }\n        } else {\n          this.$message.error(res.info || \"Network did't work, please try it later!\");\n        }\n      }).finally(_ => {\n        this.loading = false;\n      });\n    }\n  },\n  components: {\n    actionLog\n  },\n  computed: {\n    countryList() {\n      return [\n        ...new Set([\n          ...this.$store.getters.countryList.map(item => item.country)\n        ])\n      ];\n    }\n  },\n  filters: {\n    isEmpty(item) {\n      if (item === -1) {\n        return null;\n      }\n      return item;\n    }\n  },\n  created() {\n    this.editPermission = hasPermission(Permission['HISTORY_SELLING_PRICE_CONFIG_EDIT']);\n    this.getConfig();\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.price-change-history-price-config {\n  color: #333;\n  padding: 10px 20px;\n  .config-title {\n    font-size:18px;\n    margin-bottom:32px;\n  }\n  .button {\n    padding: 8px 22px;\n  }\n  .action-button {\n    display: inline-block;\n    padding: 8px 5px 5px;\n    margin-right:5px;\n    border: 1px solid #3d6ed1;\n    cursor: pointer;\n  }\n  .edit-button {\n    background-color: #3D6ED1;\n    color: white;\n  }\n  .config-content {\n    &>ul {\n      display: flex;\n      height: 32px;\n      margin-bottom: 32px;\n    &>li{\n        font-size:14px;\n        line-height: 32px;\n        &.edit-item {\n          width: 170px;\n          display: flex;\n          &>span:first-child {\n            margin-right: 12px;\n          }\n          &>span:nth-child(3) {\n            margin-left: 12px;\n          }\n        }\n      }\n      &>li:first-child {\n        width: 135px;\n        text-align: right;\n        margin-right:16px;\n      }\n    }\n  }\n\n}\n</style>\n<style lang=\"scss\">\n.price-change-history-selling-tips.el-tooltip__popper.is-light\n{\n  border: none;\n  box-shadow: 0 1px 5px #999;\n  padding: 9px 11px 13px 21px;\n  .popper__arrow {\n    display: none;\n  }\n& ul>li{\n  line-height: 28px;\n  font-size:14px;\n  position: relative;\n}\n& ul>li::before{\n  content:'';\n  position: absolute;\n  top:10.5px;\n  left:-11px;\n  padding: 2.5px;\n  border-radius:2.5px;\n  background-color:#3D6ED1;\n}\n}\n.price-change-history-price-config {\n  .el-input.el-input--medium {\n    flex-grow: 1;\n    &>input{\n    height: 32px}\n  }\n  .config-content {\n    .edit-item {\n          &>input::-webkit-outer-spin-button,input::-webkit-inner-spin-button {\n            -webkit-appearance: none;\n            }\n          &>input[type=\"number\"]{\n            -moz-appearance: textfield;\n            }\n        }\n      }\n    }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/marketingCenter/priceChangeSettings/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/marketingCenter/priceChangeSettings/limitedSellingQuantities/categoryRelatedSetup.vue","messages":[{"ruleId":"vue/no-deprecated-filter","severity":2,"message":"Filters are deprecated.","line":34,"column":18,"nodeType":"VFilterSequenceExpression","messageId":"noDeprecatedFilter","endLine":34,"endColumn":41}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"category-related-setup\">\n    <el-row>\n      <el-col :span=\"12\">\n        <div><button class=\"export-button\" @click=\"handleExport\">{{$t('commonExport')}}</button></div>\n      </el-col>\n      <el-col :span=\"12\" style=\"text-align:right;\">\n        <div v-if=\"canEdit\"><button class=\"new-button\" @click=\"createDialogStatus=[0,0];visible=true;\">{{$t('priceChangeNewSetup')}}</button></div>\n      </el-col>\n    </el-row>\n    <el-table\n      :data=\"list\"\n      header-row-class-name=\"table-header\"\n      style=\"width: 100%;min-height:300px;\"\n      v-loading=\"tLoading\"\n      >\n      <el-table-column\n      v-for=\"(v,vIndex) in categoryColumnKeys\"\n      :key=\"v\" :label=\"$t(`rule.${v}Category`)\"\n      min-width=\"100\"\n      >\n      <template slot-scope=\"scope\">\n        {{scope.row.category_ids[vIndex]&&categoryTreeMap[scope.row.category_ids[vIndex]]&&categoryTreeMap[scope.row.category_ids[vIndex]].category_name}}</template>\n      </el-table-column>\n      <el-table-column\n        :label=\"$t('priceChangePriceRange') + '('+currency+')'\"\n        width=\"180\"\n        align=\"right\"\n        class-name=\"price-list-column list-column\"\n        >\n        <template slot-scope=\"scope\">\n          <ul class=\"table-inner-list\">\n            <li v-for=\"(item, index) in scope.row.range_items\" :key=\"index\">\n              {{ item | priceRangeFilter}}\n            </li>\n          </ul>\n        </template>\n      </el-table-column>\n      <el-table-column\n      class-name=\"quantities-list-column  list-column\"\n      :label=\"$t('priceChangeLimitedSellingQuantities')\"\n      align=\"right\"\n      >\n      <template slot-scope=\"scope\">\n        <ul class=\"table-inner-list quantities-list\">\n          <li v-for=\"(item, index) in scope.row.range_items\" :key=\"index\">\n            {{item.limited_selling_qty}}\n          </li>\n        </ul>\n      </template>\n      </el-table-column>\n      <el-table-column\n        :label=\"$t('commonHistory')\"\n        width=\"100\"\n        >\n        <template slot-scope=\"scope\">\n          <el-button class=\"text-button\" @click=\"handleActionLog(scope.row.config_id)\">\n            {{$t('commonActionLog')}}\n          </el-button>\n        </template>\n      </el-table-column>\n      <el-table-column\n        :label=\"$t('commonAction')\"\n        width=\"150\"\n        >\n        <template slot-scope=\"scope\">\n          <el-button class=\"text-button\" @click=\"visible=true;createDialogData=scope.row;createDialogStatus=[0,1]\">{{$t('commonDetail')}}</el-button>\n          <el-button\n          class=\"text-button text-red\"\n          v-if=\"canEdit\"\n          @click=\"handleDelete(scope.row);\">{{$t('commonDelete')}}</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <div class=\"pagination\">\n      <el-pagination\n        background\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handlePageChange\"\n        :current-page=\"pageInfo.page_no\"\n        :page-sizes=\"[10,20,50,100]\"\n        :page-size=\"pageInfo.count\"\n        layout=\"sizes, prev, pager, next\"\n        :total=\"pageInfo.total\"\n      ></el-pagination>\n    </div>\n    <create-dialog\n    @getList=\"getList\"\n    :canEdit=\"canEdit\"\n    :visible.sync=\"visible\"\n    :createStatus=\"createDialogStatus\"\n    :options=\"categoryOption\"\n    :region=\"currentSearch.region\"\n    :data=\"createDialogData\"\n    :categoryTreeMap=\"categoryTreeMap\"\n    > </create-dialog>\n    <action-log\n    :visible.sync=\"actionLogVisible\"\n    :id=\"config_id\"\n    :categoryTreeMap=\"categoryTreeMap\"\n    ></action-log>\n  </div>\n</template>\n<script>\nimport { hasPermission } from '@/utils/permission';\nimport { Permission } from '@/utils/constant';\nimport { downloadBlobFile } from '@/utils/downloadFile';\nimport moment from 'moment';\nimport createDialog from './dialog/createNewSetup';\nimport actionLog from './dialog/actionLog';\nimport { updateLimitedSellingQuantities, exportLimitedSellingQuantities } from '@/api/priceChangeConfig';\nexport default {\n  data() {\n    return {\n      canEdit: false,\n      createDialogData: {},\n      config_id: '',\n      currenrPage: 1,\n      totalNumber: 0,\n      visible: false,\n      actionLogVisible: false,\n      createDialogStatus: [0, 0],\n      categoryColumnKeys: ['l1', 'l2', 'l3', 'l4', 'l5'],\n      tableData: []\n    };\n  },\n  computed: {\n    currency() {\n      return this.$store.getters.currencyMap[this.currentSearch.region];\n    }\n  },\n  filters: {\n    priceRangeFilter(item) {\n      if (item.begin_price === 0 && item.end_price === 0) {\n        return '/';\n      }\n      return `${item.begin_price} - ${item.end_price === -1 ? '∞' : item.end_price}`;\n    }\n  },\n  props: {\n    categoryOption: {\n      required: false\n    },\n    pageInfo: {\n      type: Object\n    },\n    currentSearch: {\n      required: true\n    },\n    list: {\n      require: true,\n      type: Array\n    },\n    categoryTreeMap: {\n      require: true\n    },\n    tLoading: {\n      required: true\n    }\n  },\n  methods: {\n    handleSizeChange(val) {\n      this.$emit('handleSizeChange', val);\n    },\n    handlePageChange(val) {\n      this.$emit('handlePageChange', val);\n    },\n    handleActionLog(id) {\n      this.config_id = id;\n      this.actionLogVisible = true;\n    },\n    handleExport() {\n      exportLimitedSellingQuantities(this.currentSearch).then(resp => {\n        if (resp.type === 'application/json') {\n          // 下载失败的出现错误提示\n          const reader = new FileReader();\n          reader.onloadend = () => {\n            // const result = JSON.parse(reader.result);\n          };\n          reader.readAsText(resp);\n        } else {\n          let fileName = 'result';\n          fileName = `limited_selling_quantities${moment().format('YYYYMMDDHHmmss')}.xls`;\n          downloadBlobFile(resp, fileName);\n        }\n      }\n      ).catch(e => {\n        this.$message.error('Download Failed');\n      });\n    },\n    handleDelete(row) {\n      this.$confirm(this.$t('priceChangeDeleteTip'), {\n        confirmButtonText: this.$t('commonConfirm'),\n        cancelButtonText: this.$t('commonCancel'),\n        type: 'warning'\n      }).then(_ => {\n        const params = { ...row };\n        params.category_ids = [];\n        params.range_items = [];\n        updateLimitedSellingQuantities(params).then(res => {\n          if (res.retcode === 0) {\n            this.$message({\n              message: this.$t('commonDeleteSuccess'),\n              type: 'success'\n            });\n            this.getList();\n          } else {\n            this.$message.error(res.info || \"Network did't work, please try it later!\");\n          }\n        });\n      }).catch(_ => {});\n    },\n    getList() {\n      this.$emit('refreshData');\n    }\n  },\n  components: {\n    createDialog,\n    actionLog\n  },\n  created() {\n    this.canEdit = hasPermission(Permission['LIMITED_SELLING_QUANTITIES_EDIT']);\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n</style>\n<style lang=\"scss\">\n  .category-related-setup{\n    .pagination {\n      margin: 20px 0;\n      display: flex;\n      justify-content: center;\n      .is-background .el-pager li:not(.disabled).active {\n        background-color: #3D6ED1;\n      }\n    }\n    .export-button,.new-button{\n      height: 32px;\n      font-size:14px;\n      border: none;\n      border-radius:2px;\n      padding: 0 10px;\n      margin-bottom: 16px;\n      cursor: pointer;\n      box-sizing: border-box;\n      &:focus{\n        outline: none;\n      }\n    }\n    .export-button {\n      color: #3D6ED1;\n      background: #fff;\n      border: 1px solid #3D6ED1;\n    }\n    .new-button {\n      color: #fff;\n      background: #3D6ED1;\n    }\n    .el-table__header-wrapper {\n      .table-header{\n        th{\n          background: #F1F2F5;\n          .cell {\n            color: #575757;\n            line-height: 31px;\n            font-size: 12px;\n          }\n        }\n    }\n    }\n    .el-table__row\n    {\n      .list-column\n      {\n        padding: 0;\n        .cell{\n          padding: 0;\n          .table-inner-list{\n            &>li{\n              height: 60px;\n              line-height: 60px;\n              text-align: right;\n              border-bottom:1px solid #F1F2F5;\n              padding: 0 10px;\n            }\n            &>li:last-child{\n              border-bottom: none;\n            }\n          }\n          .table-inner-list.quantities-list{\n            &>li{\n              padding: 0 10px;\n              text-align: right;\n              border-left:none;\n            }\n          }\n        }\n        &.price-list-column,.quantities-list-column{\n          border-left: 1px solid #F1F2F5;\n        }\n        &.quantities-list-column {\n          border-right: 1px solid #F1F2F5;\n        }\n      }\n      .text-button {\n        border: none;\n        color: #3D6ED1;\n        background: transparent;\n        padding: 0;\n      }\n      .text-button.text-red {\n        color:red;\n      }\n    }\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/marketingCenter/priceChangeSettings/limitedSellingQuantities/dialog/actionLog.vue","messages":[{"ruleId":"vue/no-deprecated-filter","severity":2,"message":"Filters are deprecated.","line":18,"column":66,"nodeType":"VFilterSequenceExpression","messageId":"noDeprecatedFilter","endLine":18,"endColumn":103}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-dialog\n    :visible.sync=\"dialogVisible\"\n    width=\"800px\"\n    lock-scroll\n    custom-class=\"pms-new-ui\"\n    :title=\"$t('commonActionLog')\"\n    @close=\"onClose\"\n  >\n    <section v-if=\"type === 'field'\" v-loading=\"loading\" class=\"field-type-wrapper\">\n      <div class=\"log-item\" v-for=\"(log, index) in data\" :key=\"index\">\n        <span class=\"log-item-operator\">{{log.operator}}</span>\n        <span class=\"log-item-time\" >{{log.action_time}}</span>\n        <el-table class=\"log-table\" :data=\"log.info\">\n          <el-table-column :label=\"$t('commonLogContent')\">\n            <template slot-scope=\"scope\">\n              <span class=\"log-field\">{{scope.row.content}}</span>\n              <span v-if=\"scope.row.action\" class=\"log-action\">{{scope.row.action | actionStatusFormat}}</span>\n            </template>\n          </el-table-column>\n          <el-table-column :label=\"$t('commonLogBefore')\">\n             <template slot-scope=\"scope\">\n               <span class=\"action-log-pre-style\" v-html=\"beforeAfterFormat(scope.row.before,scope.row.content)\"></span>\n            </template>\n          </el-table-column>\n          <el-table-column :label=\"$t('commonLogAfter')\">\n            <template slot-scope=\"scope\">\n              <span class=\"action-log-pre-style\" v-html=\"beforeAfterFormat(scope.row.after,scope.row.content)\"></span>\n            </template>\n           </el-table-column>\n        </el-table>\n        </div>\n    </section>\n    <section slot=\"footer\">\n      <el-pagination\n        layout=\"prev, pager, next\"\n        :total=\"total\"\n        :page-size=\"pager.count\"\n        @current-change=\"handleCurrentChange\"\n        class=\"pms-text-center\"\n      >\n      </el-pagination>\n      <el-button class=\"list-btn\" @click=\"onClose\">{{$t('commonOK')}}</el-button>\n    </section>\n  </el-dialog>\n</template>\n\n<script>\nimport moment from 'moment';\nimport { getLimitedActionLog } from '@/api/priceChangeConfig';\nexport default {\n  props: {\n    visible: {\n      type: Boolean,\n      required: true,\n      default: false\n    },\n    type: {\n      type: String,\n      default: 'field'\n    },\n    id: {\n      type: String,\n      required: false\n    },\n    categoryTreeMap: {\n      type: Object,\n      required: false\n    },\n    region: {\n      type: String,\n      required: false\n    }\n  },\n  data() {\n    return {\n      pager: {\n        count: 10,\n        page_no: 1\n      },\n      dialogVisible: false,\n      loading: false,\n      data: [],\n      total: 0\n    };\n  },\n  filters: {\n    actionStatusFormat(item) {\n      return item === 1 ? 'Create' : (item === 2 ? 'Modify' : 'Delete');\n    }\n  },\n  watch: {\n    visible: {\n      handler(value) {\n        this.dialogVisible = value;\n        this.pager = {\n        count: 10,\n        page_no: 1\n      };\n        if (value) {\n          this.getActionLog();\n        } else {\n          this.data = [];\n          this.total = 0;\n        }\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    moment,\n    toggleContent(item) {\n      item.isShowContent = !item.isShowContent;\n    },\n    handleCurrentChange(index) {\n      this.pager.page_no = index;\n      this.getActionLog();\n    },\n    beforeAfterFormat(item, content) {\n      let str = item;\n      if (item instanceof Array) {\n        item.forEach((i, index) => {\n          if (index === 0) {\n            str = this.categoryTreeMap[i].category_name;\n          } else {\n            str += `>${this.categoryTreeMap[i].category_name}`;\n          }\n        });\n      }\n      if (content === 'Limited Selling Quantities & Price Range') {\n        str = `<pre>${str}</pre>`;\n      }\n      str = str || 'N/A';\n      return str;\n    },\n    getActionLog() {\n      this.loading = true;\n      const params = {\n        ...this.pager\n      };\n      if (this.region !== undefined) {\n        params.category_ids = [];\n      } else {\n        params.config_id = this.id;\n      }\n      getLimitedActionLog(params).then(res => {\n        if (res.retcode === 0) {\n          this.data = res.data.audit_list;\n          this.total = res.data.total;\n        } else {\n          this.$message.error(res.info || \"Network did't work, please try it later!\");\n        }\n      }).finally(_ => {\n        this.loading = false;\n      });\n    },\n    onClose() {\n      this.$emit('update:visible', false);\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n@import \"~@/styles/variables.scss\";\n.action-type-wrapper{\n  max-height: 500px;\n  overflow: auto;\n  .row-header {\n    background: $grey_bg;\n    align-items: center;\n    font-size: 12px;\n    font-weight: bold;\n    line-height: 1.2em;\n    padding: 16px 0;\n  }\n  .row-body-wrapper{\n    max-height: 400px;\n    overflow-x: hidden;\n    overflow-y: auto ;\n  }\n  .row-body {\n    padding: 16px 0;\n    line-height: 1.2em;\n    align-items: center;\n    border-bottom: 1px solid $grey_bg;\n    font-size: 14px;\n    .icon-caret{\n      color: $blue;\n      font-size: 16px;\n      cursor: pointer;\n      transition: all 0.3s ease-in;\n      &.show {\n        transform: rotate(180deg);\n      }\n    }\n  }\n  .row-expand{\n    margin-top: 16px;\n  }\n  .empty-block{\n    display: block;\n    width:1px;\n    height: 1px;\n  }\n}\n.field-type-wrapper {\n  max-height: 500px;\n  overflow: auto;\n  .log-item {\n    font-size: 14px;\n    margin-top: 24px;\n    &:first-child {\n      margin-top: 0;\n    }\n    .log-item-creation{\n      font-weight: bold;\n      color: $black;\n    }\n    .log-item-operator,\n    .log-item-time {\n      color: rgba(51, 51, 51, 0.65);\n    }\n    .log-item-time {\n      margin-left: 4px;\n    }\n    .log-table {\n      margin-top: 8px;\n    }\n    .log-action {\n      font-size: 12px;\n      color: $green;\n      padding: 4px;\n      margin-left: 8px;\n      background: #ebf9ef;\n      border-radius: 2px;\n      border-radius: 2px;\n      &.red {\n        color: #ee4d2d;\n        background: #fff1f0;\n      }\n    }\n  }\n}\n</style>\n<style lang=\"scss\">\n  .action-log-pre-style {\n    pre {\n      font-family: 'Helvetica Neue Light', Helvetica, Arial, sans-serif;\n      font-size: 14px;\n    }\n\n  }\n</style>\n\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/marketingCenter/priceChangeSettings/limitedSellingQuantities/dialog/createNewSetup.vue","messages":[{"ruleId":"vue/no-deprecated-filter","severity":2,"message":"Filters are deprecated.","line":68,"column":23,"nodeType":"VFilterSequenceExpression","messageId":"noDeprecatedFilter","endLine":68,"endColumn":51},{"ruleId":"vue/require-valid-default-prop","severity":2,"message":"Type of the default value for 'createStatus' prop must be a function.","line":424,"column":16,"nodeType":"ArrayExpression","endLine":424,"endColumn":22}],"errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n<el-dialog\n  :visible.sync=\"visible\"\n  width=\"50%\"\n  :before-close=\"handleClose\"\n  custom-class=\"limited-selling-quantities-create-style\"\n  center>\n  <span slot=\"title\">{{$t(layouts[status[0]].title[status[1]])}}</span>\n  <section class=\"content\">\n    <div class=\"category\" v-if=\"status[0] === 0\">\n        <div :class=\"status[1] !== 1 ? 'red-star' : ''\">\n          <span>{{$t('commonCategory')}}:</span>\n          <div v-if=\"status[1] !== 1\" class=\"cascader-input\">\n              <el-cascader\n              :show-all-levels=\"false\"\n              style=\"width:240px;\"\n              v-model=\"category_ids\"\n              :class=\"isSubmit && category_ids.length === 0 ? 'error-input' : ''\"\n              popper-class=\"price-change-settings-category-selector\"\n              :options=\"options\"\n              :props=\"{\n              label:'category_name',\n              value:'category_id',\n              checkStrictly:true,\n              expandTrigger:'hover'\n            }\"\n            ></el-cascader>\n            <p v-if=\"isSubmit\" class=\"error-message\">{{category_ids.length === 0 ? $t('PriceChangeCategoryTip') : ''}}</p>\n          </div>\n          <span v-else v-for=\"(category,index) in category_ids\" :key=\"category\" >\n            {{categoryTreeMap[category].category_name}}\n            <span v-if=\"index !== category_ids.length-1\">></span>\n          </span>\n        </div>\n    </div>\n    <div class=\"table\">\n      <el-table\n        :data=\"range_items\"\n        header-row-class-name=\"table-header\"\n        style=\"width: 100%;\"\n        v-loading=\"rangeLoading\"\n        height=\"258\">\n        <el-table-column\n          label=\"No.\"\n          type=\"index\"\n          >\n        </el-table-column>\n        <el-table-column\n          width=\"286\"\n          :column-key=\"currency\"\n        >\n          <template #header>\n            <span class=\"price-change-table-header\">\n              {{$t('priceChangePriceRange')+'(' + currency + ')'}}\n            </span>\n            <el-tooltip placement=\"top\" effect=\"light\" popper-class=\"price-change-table-header-tips\">\n                <div slot=\"content\">\n                  <ul class=\"tips\">\n                    <li>{{$t('priceChangePriceRangeTipFirst')}}</li>\n                    <li>{{$t('priceChangePriceRangeTipSecond')}}</li>\n                  </ul>\n                </div>\n                <svg-icon class=\"icon_question\" icon-class=\"question\" />\n            </el-tooltip>\n          </template>\n          <template slot-scope=\"scope\">\n            <div v-if=\"status[1] === 1 \">\n              <span>{{scope.row | priceRangeFilter}}</span>\n            </div>\n            <div v-else>\n              <div :class=\"status[0] === 0 && range_items.length === 1 ? 'price-range-input-area' : 'price-range-input-area red-star'\">\n                <el-input\n                type=\"number\"\n                v-model=\"scope.row.begin_price\"\n                @change=\"onNumberChange('begin_price', scope.$index)\"\n                :placeholder=\"$t('priceChangeIncluding')\"\n                :class=\"validatePriceRange(scope.row,scope.$index)[0]? '' : 'error-input'\"\n                >\n                </el-input>\n                <span>-</span>\n                <el-input\n                type=\"number\"\n                @change=\"onNumberChange('end_price', scope.$index)\"\n                v-model=\"scope.row.end_price\"\n                :placeholder=\"$t('priceChangeNotIncluding')\"\n                :class=\"validatePriceRange(scope.row,scope.$index)[0]? '' : 'error-input'\"\n                ></el-input>\n               </div>\n               <p class=\"error-message\">{{validatePriceRange(scope.row,scope.$index)[1]}}</p>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column\n          min-width=\"160\"\n          :label=\"$t('priceChangeLimitedSellingQuantities')\">\n          <template slot-scope=\"scope\">\n            <div v-if=\"status[1] === 1\">\n              {{scope.row.limited_selling_qty}}\n            </div>\n            <div v-else>\n              <div class=\"limited-selling-input-area red-star\">\n              <el-input\n              type=\"number\"\n              v-model=\"scope.row.limited_selling_qty\"\n              @change=\"onNumberChange('limited_selling_qty', scope.$index)\"\n              :placeholder=\"$t('commonInput')\"\n              :class=\"validateQuantities(scope.row.limited_selling_qty)[0] ? '' : 'error-input'\"\n              ></el-input>\n              </div>\n              <p class=\"error-message\">{{validateQuantities(scope.row.limited_selling_qty)[1]}}</p>\n            </div>\n          </template>\n        </el-table-column>\n\n        <el-table-column\n          :label=\"$t('commonAction')\"\n          align=\"center\"\n          v-if=\"status[1] !== 1\"\n          >\n          <template slot-scope=\"scope\">\n            <div v-if=\"range_items.length === 1 && status[0] !== 1\">-</div>\n            <div @click=\"removeRange(scope.$index)\"\n            class=\"remove-button\"\n            v-else>{{$t('commonRemove')}}</div>\n          </template>\n        </el-table-column>\n      </el-table>\n    </div>\n    <el-button class=\"add-new-button\"\n    v-if=\"status[1] !== 1\"\n    @click=\"addNewRange\"\n    >\n      <svg-icon class=\"icon_add\" icon-class=\"srmAdd\" />\n      {{$t('commonAddNew')}}</el-button>\n  </section>\n  <span slot=\"footer\" class=\"dialog-footer\">\n    <div v-if=\"status[1]!== 1\">\n      <el-button @click=\"handleClose\">{{$t('commonCancel')}}</el-button>\n      <el-button type=\"primary\" @click=\"saveNewRange\">{{$t('commonSave')}}</el-button>\n    </div>\n    <div v-else>\n      <el-button type=\"primary\" @click=\"handleModify\" v-if=\"canEdit\">{{$t('commonModify')}}</el-button>\n      <el-button @click=\"handleClose\">{{$t('commonClose')}}</el-button>\n    </div>\n  </span>\n</el-dialog>\n</template>\n\n<script>\nimport { createLimitedSellingQuantities, updateLimitedSellingQuantities, getLimitedSellingQuantitiesDetail } from '@/api/priceChangeConfig';\nexport default {\n  data() {\n    return {\n      rangeLoading: false,\n      isSubmit: false,\n      category_ids: [],\n      status: this.createStatus,\n      isChanged: false,\n      layouts: [ // ['price or category',]\n        {\n          title: ['priceChangeCreateNewCategorySetup', 'priceChangeViewNewCategorySetup', 'priceChangeModifyNewCategorySetup'] // 新增、查看、编辑\n        },\n        {\n          title: ['priceChangeModifyNewPriceSetup', 'priceChangeViewNewPriceSetup', 'priceChangeModifyNewPriceSetup']\n        }\n      ],\n      range_items: [\n        {\n          limited_selling_qty: null,\n          begin_price: null,\n          end_price: null\n        }\n      ],\n      oldData: {}\n    };\n  },\n  filters: {\n    categoryFormate(item) {\n      let str = '';\n      item.forEach(element => {\n        if (str) {\n          str += '>' + element;\n        } else {\n          str = element;\n        }\n      });\n      return str;\n    },\n    priceRangeFilter(item) {\n      if (item.begin_price === null && item.end_price === null) {\n        return '/';\n      }\n      return `${item.begin_price === null ? '0' : item.begin_price} - ${item.end_price === null ? '∞' : item.end_price}`;\n    }\n  },\n  methods: {\n    removeRange(index) {\n      this.range_items.splice(index, 1);\n    },\n    onNumberChange(field, index) {\n      const value = parseInt(this.range_items[index][field]);\n      if (isNaN(value)) {\n        return;\n      } else {\n        this.range_items[index][field] = value;\n      }\n    },\n    handleClose() {\n      this.$emit('update:visible', false);\n    },\n    handleModify() {\n      this.status = [this.createStatus[0], 2];\n    },\n    addNewRange() {\n      this.isSubmit = false;\n      const newItem = {\n        limited_selling_qty: null,\n        begin_price: null,\n        end_price: null\n      };\n      this.range_items.push(newItem);\n    },\n    validateIsChanged(newV, index) {\n      if (index === 0) {\n        if (this.range_items.length !== this.oldData.range_items.length) {\n          this.isChanged = true;\n          return;\n        }\n        this.isChanged = this.category_ids.some((item, index) => {\n          return item !== this.oldData.category_ids[index];\n        });\n      }\n      const oldV = this.oldData.range_items[index];\n      if (oldV.begin_price !== newV.begin_price || oldV.end_price !== newV.end_price || oldV.limited_selling_qty !== newV.limited_selling_qty) {\n        this.isChanged = true;\n        return;\n      }\n    },\n    saveNewRange() {\n      this.isSubmit = true;\n      const params = {\n        range_items: [],\n        region: this.region\n      };\n      if (this.status[0] === 0 && this.category_ids.length === 0) {\n        return this.$message.error(this.$t('PriceChangeCategoryTip'));\n      }\n      params.category_ids = this.category_ids;\n      if (this.status[0] === 1 && this.status[1] === 2 && this.range_items.length === 0) {\n        this.isChanged = true;\n      } else {\n        for (let j = 0; j < this.range_items.length; j++) {\n          const isRangeValid = this.validatePriceRange(this.range_items[j], j);\n          if (!isRangeValid[0]) {\n            return this.$message.error(isRangeValid[1]);\n          }\n          const isLimitedValid = this.validateQuantities(this.range_items[j].limited_selling_qty);\n          if (!isLimitedValid[0]) {\n            return this.$message.error(isLimitedValid[1]);\n          }\n          let begin_price, end_price;\n          if (isNaN(parseInt(this.range_items[j].begin_price)) && isNaN(parseInt(this.range_items[j].end_price))) {\n            begin_price = 0;\n            end_price = 0;\n          } else {\n            begin_price = Number(this.range_items[j].begin_price) || 0;\n            end_price = Number(this.range_items[j].end_price) || -1;\n          }\n          const limited_selling_qty = Number(this.range_items[j].limited_selling_qty);\n          const range_item = {\n            begin_price,\n            end_price,\n            limited_selling_qty\n          };\n          if (this.status[1] === 2 && !this.isChanged) {\n            this.validateIsChanged(range_item, j);\n          }\n          params.range_items.push(range_item);\n        }\n      }\n      if (this.status[1] === 0) {\n        createLimitedSellingQuantities(params).then(res => {\n          if (res.retcode === 0) {\n            this.handleClose();\n            this.$emit('getList');\n            this.$message({\n              message: this.$t('commonSaveSuccess'),\n              type: 'success'\n            });\n          }\n        });\n      } else if (this.status[1] === 2) {\n        if (this.isChanged) {\n          params.config_id = this.data.config_id;\n          updateLimitedSellingQuantities(params).then(res => {\n            if (res.retcode === 0) {\n              this.isChanged = false;\n              this.handleClose();\n              this.$emit('getList');\n              this.$message({\n                message: this.$t('commonSaveSuccess'),\n                type: 'success'\n              });\n            } else {\n              this.$message.error(res.info || \"Network did't work, please try it later!\");\n            }\n          });\n        } else {\n          this.$message.error(this.$t('priceChangeLimintedChangeTips'));\n        }\n      }\n    },\n    validatePriceRange(row, index) {\n      if (!this.isSubmit && row.begin_price === null && row.end_price === null) {\n        return [true]; // 当不是提交状态时，新建的空range不能报错\n      }\n      if (parseInt(row.end_price) === 0) {\n        return [false, this.$t('priceChangeEndPriceErrorTip')];\n      }\n      if (isNaN(parseInt(row.begin_price)) && Number(row.end_price) > 0) {\n          return [false, this.$t('priceChangeBeginPriceErrorTip')];\n          // 填了end price 但是没有填begin price 得报错\n      }\n      if (isNaN(parseInt(row.begin_price)) && isNaN(parseInt(row.end_price))) {\n        if (this.status[0] === 0 && this.range_items.length === 1) {\n          return [true]; // 如果是categoryRelated setup 可以只配置limited selling quantities有且只有一项\n        } else {\n          return [false, this.$t('priceChangePriceErrorTip')]; // 其他如果price range为空就得报错\n        }\n      }\n      const row_b = Number(row.begin_price);\n      const row_e = Number(row.end_price) || Infinity;\n      if (row_b >= row_e) {\n        return [false, this.$t('priceChangePriceRangeErrorTip2')];\n      }\n      if (row_b < 0 || row_e < 0) {\n        return [false, this.$t('priceChangePriceErrorTip')];\n      }\n\n      for (let i = 0; i < this.range_items.length; i++) {\n        if (i === index) {\n          continue;\n        }\n        if (this.range_items[i].begin_price === null && this.range_items[i].end_price === null) {\n          continue;\n        }\n        const b = Number(this.range_items[i].begin_price) || 0;\n        const e = Number(this.range_items[i].end_price) || Infinity;\n        if (b >= e) {\n          continue;\n        }\n\n        if (b <= row_b && row_b < e) {\n          return [false, this.$t('priceChangePriceRangeErrorTip')];\n        }\n        if (b < row_e && row_e <= e) {\n          return [false, this.$t('priceChangePriceRangeErrorTip')];\n        }\n        if (row_b < b && b < row_e) {\n          return [false, this.$t('priceChangePriceRangeErrorTip')];\n        }\n        if (row_b < e && e < row_e) {\n          return [false, this.$t('priceChangePriceRangeErrorTip')];\n        }\n      }\n      return [true];\n    },\n    validateQuantities(value) {\n      if (value === null) {\n        if (this.isSubmit) {\n          return [false, this.$t('priceChangeLimitedSellingTip')];\n        }\n        return [true];\n      }\n      value = Number(value);\n      if (value <= 0) {\n        return [false, this.$t('priceChangeLimitedSellingNumberTip')];\n      }\n      return [true];\n    },\n    getLimitedSellingQuantitiesDetail() {\n      this.rangeLoading = true;\n      const params = {\n        config_id: this.data.config_id\n      };\n      getLimitedSellingQuantitiesDetail(params).then(res => {\n        if (res.retcode === 0) {\n          this.oldData = res.data.config;\n          this.range_items = res.data.config.range_items.map((item) => ({ ...item }));\n          this.range_items.forEach((item, index) => {\n            if (item.end_price === -1) {\n              item.end_price = null;\n            }\n            if (item.begin_price === 0 && item.end_price === 0) {\n                item.begin_price = null;\n                item.end_price = null;\n            }\n          });\n          if (this.status[0] === 0) {\n            this.category_ids = [...res.data.config.category_ids];\n          }\n        } else {\n          this.$message.error(res.info || \"Network did't work, please try it later!\");\n        }\n      }).finally(_ => {\n        this.rangeLoading = false;\n      });\n    }\n  },\n  computed: {\n    currency() {\n      return this.$store.getters.currencyMap[this.region];\n    }\n  },\n  props: {\n    visible: {\n      required: true,\n      type: Boolean,\n      default: false\n    },\n    createStatus: {\n      required: true,\n      type: Array,\n      default: [0, 0] // [判断是否有category,判断具体状态]\n    },\n    options: {\n      type: Array\n    },\n    categoryTreeMap: {\n      required: false\n    },\n    region: {\n      required: true\n    },\n    canEdit: {\n      type: Boolean,\n      default: false\n    },\n    data: {\n      required: false\n    }\n  },\n  watch: {\n    visible(isShow) {\n      this.isSubmit = false;\n      this.isChanged = false;\n      this.category_ids = [];\n      this.range_items = [\n        {\n          limited_selling_qty: null,\n          begin_price: null,\n          end_price: null\n        }\n      ];\n      if (isShow) {\n        this.status = this.createStatus;\n        if (this.status[1] !== 0) {\n          this.getLimitedSellingQuantitiesDetail();\n        }\n      }\n    }\n  },\n  created() {\n\n    // console.log(this.options);\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.error-message {\n  color: #EF4A4A;\n  font-size: 12px;\n  line-height: 15px;\n  padding-top: 2px;\n}\n.table {\n  .error-message {\n    margin-left: 8px;\n  }\n}\n</style>\n<style lang=\"scss\">\n.limited-selling-quantities-create-style{\n  min-width: 658px;\n  .red-star{\n    position:relative;\n  }\n  .red-star::before{\n    position: relative;\n    left:-2px;\n    top:5px;\n    content: '*';\n    font-size:20px;\n    line-height: 32px;\n    color: red;\n  }\n  .el-dialog__header{\n    text-align: left;\n    color: #333;\n    font-size: 18px;\n    font-weight: 700;\n  }\n  .dialog-footer {\n    text-align: right;\n    .el-button{\n      width: 72px;\n      height: 32px;\n      padding: 0;\n    }\n    .el-button--primary {\n      background-color:#3D6ED1;\n      border:none;\n    }\n\n  }\n  .category{\n    margin-bottom: 24px;\n    &>div {\n      display: flex;\n      line-height: 32px;\n      &>span {\n        margin-right: 5px;\n      }\n\n    }\n    .cascader-input {\n      display: inline-block;\n    }\n  }\n  .el-input--medium{\n    & * {\n      height: 32px;\n      line-height: 32px;\n    }\n  }\n  .table {\n    .el-table{\n      font-size: 12px;\n      .el-table__header-wrapper {\n        .table-header{\n          th{\n            background: #F1F2F5;\n            color: #575757;\n            .cell {\n              line-height: 21px;\n              height: 21px;\n            }\n            .price-change-table-header{\n              height: 21px;\n              line-height: 21px;\n            }\n            .icon_question {\n                font-size: 16px;\n                margin-left:2px;\n                line-height: 21px;\n            }\n          }\n        }\n      }\n      .el-table__body-wrapper {\n        &::-webkit-scrollbar {\n          width: 10px;\n          display:block;\n          border: 1px solid #DCDFE6;\n          border-top: none;\n        }\n        &::-webkit-scrollbar-thumb {\n          width: 2px;\n          background:rgba(0,0,0,0.56);\n          border-radius: 10px;\n        }\n\n      }\n      .el-table__row td {\n        vertical-align: top;\n\n      }\n      .remove-button{\n        font-size: 14px;\n        color:#E02020;\n        cursor: pointer;\n      }\n      .price-range-input-area{\n        display: flex;\n        line-height: 32px;\n        justify-content: flex-start;\n        & input{\n          width: 120px;\n        }\n        .el-input{\n          width: inherit;\n          input::-webkit-outer-spin-button,input::-webkit-inner-spin-button {\n            -webkit-appearance: none;\n            }\n          input[type=\"number\"]{\n            -moz-appearance: textfield;\n            }\n        }\n        &>span:nth-child(2) {\n          margin: 0 4px;\n        }\n      }\n      .limited-selling-input-area{\n        display: flex;\n        line-height: 32px;\n        justify-content: flex-start;\n        & input{\n          width: 90%;\n          min-width: 140px;\n        }\n        .el-input{\n          width: inherit;\n          input::-webkit-outer-spin-button,input::-webkit-inner-spin-button {\n            -webkit-appearance: none;\n            }\n          input[type=\"number\"]{\n            -moz-appearance: textfield;\n            }\n        }\n      }\n    }\n  }\n  .add-new-button{\n    padding:0;\n    border:none;\n    margin-top:10px;\n    color: #3D62D1;\n    font-size: 18px;\n    font-weight: 600;\n    &:hover{\n      background-color: #fff;;\n    }\n    .icon_add{\n      font-size:16px;\n      padding: 2px;\n      border:1px solid #3d62d1;\n      border-radius:15px;\n    }\n  }\n  .error-input{\n    .el-input__inner{\n      border: 1px solid #EF4A4A;\n    }\n  }\n}\n.price-change-table-header-tips.el-tooltip__popper.is-light\n{\n  border: none;\n  box-shadow: 0 1px 5px #999;\n  padding: 9px 11px 13px 21px;\n  .popper__arrow {\n    display: none;\n  }\n& ul>li{\n  line-height: 28px;\n  font-size:14px;\n  position: relative;\n}\n& ul>li::before{\n  content:'';\n  position: absolute;\n  top:10.5px;\n  left:-11px;\n  padding: 2.5px;\n  border-radius:2.5px;\n  background-color:#3D6ED1;\n}\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/marketingCenter/priceChangeSettings/limitedSellingQuantities/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/marketingCenter/priceChangeSettings/limitedSellingQuantities/priceSetup.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/marketingCenter/priceChangeSettings/originalPriceConfig/priceChangeConfig.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/marketingCenter/priceChangeSettings/originalPriceConfig/priceChangeConfigTabs.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/marketingCenter/priceChangeSettings/targetMarginConfig/targetMarginConfig.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":3,"column":22,"nodeType":"VIdentifier","messageId":"deprecated","endLine":3,"endColumn":28},{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":138,"column":17,"nodeType":"ThisExpression","endLine":138,"endColumn":21}],"errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div v-loading=\"optionsLoading\" class=\"targetMarginConfig pms-ui\">\n    <el-form @submit.native.prevent=\"handleSearch\" :inline=\"true\" class=\"demo-form-inline\">\n      <el-form-item :label=\"$t('commonRegion')\">\n        <el-select class=\"changeConfigTabs\" v-model=\"country\" @change=\"handleCountrySearch\">\n          <el-option\n            v-for=\"item in countryList\"\n            :key=\"item\"\n            :label=\"item\"\n            :value=\"item\"\n          ></el-option>\n        </el-select>\n      </el-form-item>\n      <el-form-item :label=\"$t('rule.categoryName')\">\n        <el-cascader\n          clearable\n          style=\"width:400px;\"\n          :key=\"categoryKey\"\n          v-model=\"formData.category_ids\"\n          popper-class=\"price-change-settings-category-selector\"\n          :options=\"categoryOptions\"\n          :props=\"{\n            label:'category_name',\n            value:'category_id',\n            checkStrictly:true,\n            expandTrigger:'hover'\n          }\"\n        ></el-cascader>\n      </el-form-item>\n\n      <el-form-item :label=\"$t('rule.targetMargin')\">\n        <el-input-number\n          style=\"width:100px;\"\n          :controls=\"false\"\n          v-model=\"formData.target_margin_left\"\n          :min=\"0\"\n          :max=\"100\"\n        ></el-input-number>\n        <span>-</span>\n        <el-input-number\n          style=\"width:100px;\"\n          :controls=\"false\"\n          v-model=\"formData.target_margin_right\"\n          :min=\"0\"\n          :max=\"100\"\n        ></el-input-number>&nbsp;%\n      </el-form-item>\n      <el-form-item :label=\"$t('rule.effectiveDate')\">\n        <el-date-picker\n          popper-class=\"targetMarginConfigDatePicker\"\n          v-model=\"formData.expire_time_left\"\n          type=\"date\"\n          value-format=\"yyyy-MM-dd\"\n        ></el-date-picker>\n        <span>-</span>\n        <el-date-picker\n          popper-class=\"targetMarginConfigDatePicker\"\n          v-model=\"formData.expire_time_right\"\n          type=\"date\"\n          value-format=\"yyyy-MM-dd\"\n        ></el-date-picker>\n      </el-form-item>\n      <ShopeNameToId\n        ref=\"shopeNameToId\"\n        :country=\"country\"\n        @change=\"shopIdChange\"\n        @shopNameChange=\"shopNameChange\"\n      ></ShopeNameToId>\n      <el-form-item>\n        <el-button class=\"list-btn\" @click=\"handleSearch\">{{$t('rule.search')}}</el-button>\n        <el-button class=\"list-btn clear\" @click=\"resetFormData\">{{$t('purchaseRequest.clear')}}</el-button>\n        <el-button native-type=\"submit\" style=\"display:none;\"></el-button>\n      </el-form-item>\n    </el-form>\n    <div class=\"create-button\" v-if=\"canCreate\">\n      <button  @click=\"openEditDialog(1)\">{{$t('rule.createTarget')}}</button>\n    </div>\n    <el-table\n      @row-click.self=\"(row)=>openEditDialog(2,row)\"\n      :data=\"tableData\"\n      stripe\n      :header-cell-style=\"headerCellStyle\"\n      v-loading=\"searchLoading\"\n    >\n      <el-table-column v-for=\"v in categoryColumnKeys\" :key=\"v\" :label=\"$t(`rule.${v}Category`)\">\n        <template slot-scope=\"scope\">{{scope.row[v]&&categoryTreeMap[scope.row[v]]&&categoryTreeMap[scope.row[v]].category_name}}</template>\n      </el-table-column>\n      <el-table-column :label=\"$t('rule.applicableShopID')\">\n        <template slot-scope=\"scope\">{{dealApplicableShopIDStr(scope.row.shop_ids)}}</template>\n      </el-table-column>\n      <el-table-column prop=\"target_margin\" :label=\"$t('rule.targetMargin')+'(%)'\"></el-table-column>\n      <el-table-column prop=\"start_time\" :label=\"$t('rule.startTime')\"></el-table-column>\n      <el-table-column prop=\"end_time\" :label=\"$t('rule.endTime')\"></el-table-column>\n      <el-table-column :label=\"$t('userRole.userList.status')\">\n        <template slot-scope=\"scope\">{{scope.row.config_status ? 'Available' : 'Disable'}}</template>\n      </el-table-column>\n      <el-table-column width=\"200px\" :label=\"$t('userRole.userList.action')\">\n        <template slot-scope=\"scope\">\n          <span v-if=\"canOpearte\">\n            <el-button\n              v-if=\"scope.row.config_status===1\"\n              @click.stop=\"toggleAble(scope.row,'disable')\"\n              size=\"mini\"\n            >{{$t('userRole.userList.disable')}}</el-button>\n            <el-button\n              type=\"primary\"\n              v-else\n              @click.stop=\"toggleAble(scope.row,'enable')\"\n              size=\"mini\"\n            >{{$t('userRole.userList.enable')}}</el-button>\n          </span>\n\n          <el-button\n            @click.stop=\"handleHistory(scope.row)\"\n            size=\"mini\"\n          >{{$t('userRole.userList.history')}}</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <div class=\"pagination\">\n      <el-pagination\n        background\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handlePageChange\"\n        :current-page=\"currentPage\"\n        :page-sizes=\"[10,20,50,100]\"\n        :page-size=\"pageSize\"\n        layout=\"sizes, prev, pager, next\"\n        :total=\"totalNumber\"\n      ></el-pagination>\n    </div>\n    <EditDialog\n      :categoryOptions=\"categoryOptions\"\n      :categoryTreeMap=\"categoryTreeMap\"\n      ref=\"editDialog\"\n      :closeDialog=\"closeEditDialog\"\n      v-if=\"editDialogShow\"\n      :country=\"this.country\"\n      :getList=\"getList\"\n    ></EditDialog>\n    <HistoryDialog ref=\"historyDialog\" :closeDialog=\"closeHistoryDialog\" v-if=\"historyDialogShow\"></HistoryDialog>\n  </div>\n</template>\n<script>\nimport EditDialog from './targetMarginEditDialog';\nimport HistoryDialog from './targetMarginHistoryDialog';\nimport {\n  getConfigList,\n  enableConfig,\n  disableConfig\n} from '@/api/targetMarginConfig';\nimport ShopeNameToId from '@/components/shopNameToId.vue';\nimport { getCategories } from '@/api/shop';\nimport { categoryTreeData, getCategoryTreeMap } from '@/utils/treeData';\nimport { formatParams } from '@/utils/formatParams';\nimport { hasPermission } from '@/utils/permission';\nimport { Permission } from '@/utils/constant';\n\nexport default {\n  data() {\n    return {\n      canCreate: false,\n      canOpearte: false,\n      pageSize: 10,\n      categoryKey: 0,\n      country: this.$store.getters.country,\n      currentPage: 1,\n      totalNumber: 0,\n      formData: {\n        shop_id: undefined,\n        category_ids: []\n      },\n      tableData: [],\n      headerCellStyle: {\n        'font-weight': 'bold',\n        background: 'rgb(240, 242, 245)'\n      },\n      categoryOptions: [],\n      editDialogShow: false,\n      historyDialogShow: false,\n      searchLoading: false,\n      optionsLoading: false,\n      categoryTreeMap: {},\n      categoryColumnKeys: ['l1', 'l2', 'l3', 'l4', 'l5']\n    };\n  },\n  created() {\n    this.canCreate = hasPermission(Permission.TARGET_MARGIN_CONFIG_PROCESS);\n    this.canOpearte = hasPermission(Permission.TARGET_MARGIN_CONFIG_PROCESS);\n    this.handleCountrySearch();\n  },\n  computed: {\n    countryList() {\n      return [\n        ...new Set([\n          ...this.$store.getters.countryList.map(item => item.country)\n        ])\n      ];\n    }\n  },\n  methods: {\n    dealApplicableShopIDStr(str) {\n      if (!str) return str;\n      if (str === '0') return 'All';\n      const arr = str.split(',');\n      if (arr.length <= 10) return str;\n      return arr.slice(0, 10) + '...(Total:' + arr.length + ')';\n    },\n    getList() {\n      const opt = {\n        ...this.formData,\n        page_no: this.currentPage,\n        count: this.pageSize,\n        region: this.country\n      };\n      if (Array.isArray(opt.category_ids)) {\n        const str = opt.category_ids.join(',');\n        opt.category_ids = str;\n      }\n      this.searchLoading = true;\n      getConfigList(formatParams(opt))\n        .then(({ data: { config_list, total }}) => {\n          const arr = config_list || [];\n          arr.forEach(v => {\n            if (!v.category_ids) return;\n            const [l1, l2, l3, l4, l5] = v.category_ids.split(',');\n            Object.assign(v, { l1, l2, l3, l4, l5 });\n          });\n          this.tableData = arr;\n          this.totalNumber = total;\n        })\n        .finally(_ => (this.searchLoading = false));\n    },\n    handleCountrySearch() {\n      this.currentPage = 1;\n      this.getCategoryOptions().then(_ => {\n        this.getList();\n      });\n    },\n    getCategoryOptions() {\n      this.optionsLoading = true;\n      return getCategories({ country: this.country, use_global: 1 })\n        .then(({ data: { categories }}) => {\n          const arr = categories || [];\n          this.categoryTreeMap = getCategoryTreeMap(arr);\n          const res = categoryTreeData(arr, {\n            key: 'category_id'\n          });\n          this.categoryKey++;\n          this.categoryOptions = res;\n        })\n        .finally(_ => {\n          this.optionsLoading = false;\n        });\n    },\n    shopIdChange(v) {\n      this.formData.shop_id = v;\n    },\n    shopNameChange(v) {\n      this.$nextTick(_ => this.getList());\n    },\n    toggleAble({ config_id }, type) {\n      if (!config_id) return;\n      const req = type === 'enable' ? enableConfig : disableConfig;\n      this.searchLoading = true;\n      req({ config_id })\n        .then(() => {\n          this.getList();\n        })\n        .finally(_ => (this.searchLoading = false));\n    },\n    handleHistory(row) {\n      this.historyDialogShow = true;\n      this.$nextTick(_ => this.$refs.historyDialog.openDialog(row));\n    },\n    openEditDialog(mode, row) {\n      this.editDialogShow = true;\n      this.$nextTick(_ => this.$refs.editDialog.openDialog(mode, row));\n    },\n    openHistoryDialog(type) {\n      this.historyDialogShow = true;\n    },\n    closeEditDialog(type) {\n      this.editDialogShow = false;\n    },\n    closeHistoryDialog(type) {\n      this.historyDialogShow = false;\n    },\n    handleSearch() {\n      this.currentPage = 1;\n      this.getList();\n    },\n    handleSizeChange(val) {\n      this.pageSize = val;\n      this.currentPage = 1;\n      this.getList();\n    },\n    handlePageChange(val) {\n      this.currentPage = val;\n      this.getList();\n    },\n    resetFormData() {\n      this.formData = {};\n      this.$refs.shopeNameToId.resetData();\n    }\n  },\n  components: {\n    EditDialog,\n    HistoryDialog,\n    ShopeNameToId\n  }\n};\n</script>\n<style>\n.targetMarginConfigDatePicker .available {\n  color: #606266;\n}\n</style>\n<style scoped>\n.targetMarginConfig {\n  padding: 0 16px;\n}\n\n.pagination {\n  margin-top: 20px;\n  display: flex;\n  justify-content: center;\n}\n.clear {\n  margin-left: 0;\n}\n</style>\n<style lang=\"scss\" scoped>\n    .create-button\n  {\n    text-align: right;\n    padding-bottom: 16px;\n    &>button {\n      padding: 0 10px;\n      height: 32px;\n      font-size:14px;\n      color: #FFF;\n      background: #3D6ED1;\n      outline: none;\n      border: none;\n      border-radius: 2px;\n      cursor: pointer;\n    }\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/marketingCenter/priceChangeSettings/targetMarginConfig/targetMarginConfigTabs.vue","messages":[{"ruleId":"vue/no-unused-components","severity":2,"message":"The \"TabsHeader\" component has been registered but not used.","line":36,"column":5,"nodeType":"Property","endLine":36,"endColumn":15}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"pms-ui\">\n    <MarginConfig :country=\"activeTab\" ref=\"marginConfig\" v-if=\"paneShow\"></MarginConfig>\n  </div>\n</template>\n<script>\nimport MarginConfig from './targetMarginConfig';\nimport TabsHeader from '@/components/tabsHeader';\nimport { hasPermission } from '@/utils/permission';\nimport { Permission } from '@/utils/constant';\n\nexport default {\n  data() {\n    return {\n      canCreate: false,\n      activeTab: this.$store.getters.country,\n      paneShow: true,\n      tabStyle: {\n        height: '60px',\n        'max-width': '75%'\n      }\n    };\n  },\n\n  computed: {\n    countryList() {\n      return [\n        ...new Set([\n          ...this.$store.getters.countryList.map(item => item.country)\n        ])\n      ].map(item => ({ name: item, label: item }));\n    }\n  },\n  components: {\n    MarginConfig,\n    TabsHeader\n  },\n  created() {\n    this.canCreate = hasPermission(Permission.TARGET_MARGIN_CONFIG_PROCESS);\n  },\n  methods: {\n    beforeTabClick(tab) {\n      this.activeTab = tab.name;\n      this.paneShow = false;\n      this.$nextTick(_ => (this.paneShow = true));\n    },\n    onCreate() {\n      this.$refs.marginConfig.openEditDialog(1);\n    }\n  }\n};\n</script>\n<style scoped lang='scss'>\n\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/marketingCenter/priceChangeSettings/targetMarginConfig/targetMarginEditDialog.vue","messages":[{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":3,"column":26,"nodeType":"ThisExpression","endLine":3,"endColumn":30}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-dialog\n    :title=\"mode === 1 ? this.$t('rule.createTarget') : modeMap[mode]\"\n    :visible=\"true\"\n    :close-on-click-modal=\"true\"\n    @close=\"closeDialog\"\n  >\n    <el-form :disabled=\"mode===2\" label-position=\"left\" label-width=\"200px\">\n      <el-form-item required :label=\"$t('rule.categoryName')\">\n        <el-cascader\n          style=\"width:400px;\"\n          v-model=\"formData.category_ids\"\n          :options=\"categoryOptions\"\n          :props=\"{\n            label:'category_name',\n            value:'category_id',\n            checkStrictly:true,\n            expandTrigger:'hover'\n\n          }\"\n        ></el-cascader>\n      </el-form-item>\n      <el-form-item required :label=\"$t('rule.applicableShopID')\">\n        <el-select style=\"width:400px;\" v-model=\"formData.shop_ids\">\n          <el-option v-for=\"(v,i) in shopOptions\" :key=\"i\" :label=\"v.label\" :value=\"v.value\"></el-option>\n        </el-select>\n        <ShopEditor\n          :disabled=\"mode===2\"\n          :supplierList=\"shopEditor\"\n          :errorList=\"shopErrList\"\n          v-show=\"formData.shop_ids===1\"\n          @updateSupplierList=\"shopBlur\"\n          style=\"margin-top:10px;\"\n          :placeholder=\"$t('rule.shopIdPlaceholder')\"\n        ></ShopEditor>\n      </el-form-item>\n      <el-form-item required :label=\"$t('rule.targetMargin')\">\n        <el-input-number\n          style=\"width:200px;\"\n          :controls=\"false\"\n          v-model=\"formData.target_margin\"\n          :min=\"0\"\n          :max=\"100\"\n          :precision=\"1\"\n        ></el-input-number>&nbsp;%\n      </el-form-item>\n      <el-form-item required :label=\"$t('rule.effectiveDate')\">\n        <el-date-picker\n          popper-class=\"targetMarginConfigDatePicker\"\n          style=\"width:200px;\"\n          :picker-options=\"pickerOptions\"\n          v-model=\"formData.start_time\"\n          type=\"date\"\n          :clearable=\"false\"\n          value-format=\"yyyy-MM-dd\"\n        ></el-date-picker>\n        <span>-</span>\n        <el-date-picker\n          popper-class=\"targetMarginConfigDatePicker\"\n          style=\"width:200px;\"\n          :picker-options=\"pickerOptions\"\n          v-model=\"formData.end_time\"\n          type=\"date\"\n          value-format=\"yyyy-MM-dd\"\n        ></el-date-picker>\n        ({{$t('rule.effectiveDateTip')}})\n      </el-form-item>\n    </el-form>\n    <div slot=\"footer\" class=\"dialog-footer\">\n      <div v-if=\"mode===2\">\n        <div @click=\"mode=3\" class=\"dialog-list-btn\">{{$t('userRole.userList.modify')}}</div>\n        <div @click=\"closeDialog\" class=\"dialog-list-btn\">{{$t('userRole.userList.close')}}</div>\n      </div>\n      <div v-else>\n        <div @click=\"submit\" class=\"dialog-list-btn\">{{$t('rule.submit')}}</div>\n        <div @click=\"closeDialog\" class=\"dialog-list-btn\">{{$t('purchaseOrder.cancel')}}</div>\n      </div>\n    </div>\n  </el-dialog>\n</template>\n<script>\nimport ShopEditor from '@/components/Editor/supplierEditor';\nimport { createConfig, editConfig } from '@/api/targetMarginConfig';\nconst submitApiMap = {\n  1: createConfig,\n  3: editConfig\n};\nconst modeMap = {\n  1: 'Create Target Margin',\n  2: 'Target Margin', // view\n  3: 'Modify Target Margin'\n};\nconst requiredParams = [\n  'category_ids',\n  'shop_ids',\n  'target_margin',\n  'start_time'\n];\nexport default {\n  data() {\n    return {\n      modeMap,\n      mode: 1,\n      formData: {\n        category_ids: '',\n        shop_ids: [],\n        target_margin: undefined,\n        start_time: undefined,\n        end_time: undefined,\n        config_id: undefined\n      },\n      shopOptions: [\n        {\n          label: 'All',\n          value: '0'\n        },\n        {\n          label: 'Include',\n          value: 1\n        }\n      ],\n      pickerOptions: {\n        disabledDate: time => time.getTime() < Date.now() - 8.64e7\n      },\n      shopErrList: [],\n      shopEditor: [],\n      submitLoading: false\n    };\n  },\n  props: [\n    'categoryOptions',\n    'closeDialog',\n    'country',\n    'getList',\n    'categoryTreeMap'\n  ],\n  methods: {\n    shopBlur(arr) {\n      this.shopEditor = arr || [];\n    },\n    handleClose() {\n      this.closeDialog();\n    },\n    verifyDuplicate() {\n      const map = {};\n      const errList = [];\n      this.shopEditor.forEach(v => {\n        if (!map[v]) {\n          map[v] = true;\n        } else {\n          errList.push(v);\n        }\n      });\n      this.shopErrList = [...new Set(errList)];\n      const flag = !this.shopErrList.length;\n      if (!flag) this.$message.error('Please check highlighted area');\n      return flag;\n    },\n    openDialog(mode, row) {\n      this.mode = mode;\n      if (!row) return;\n      Object.keys(this.formData).forEach(v => {\n        this.formData[v] = row[v];\n      });\n      let ids = this.formData.category_ids;\n      if (ids) {\n        ids = ids.split(',').map(Number);\n        this.formData.category_ids = ids;\n      }\n      const shop_ids = row.shop_ids;\n      if (shop_ids === '0') {\n        this.formData.shop_ids = '0';\n      } else if (shop_ids) {\n        this.formData.shop_ids = 1;\n        this.$nextTick(_ => (this.shopEditor = shop_ids.split(',')));\n      }\n    },\n    submit() {\n      if (!this.verifyDuplicate()) return;\n      const opt = { ...this.formData, region: this.country };\n      if (Array.isArray(opt.category_ids)) {\n        let str = opt.category_ids.join(',');\n        str = str.replace(/(\\,\\d+__all)$/, '');\n        opt.category_ids = str;\n      }\n      if (opt.shop_ids === 1) opt.shop_ids = this.shopEditor.join(',');\n      if (!this.verifyParams(opt)) return;\n      if (!opt.end_time) opt.end_time = '';\n      if (this.submitLoading) return;\n      this.submitLoading = true;\n      submitApiMap[this.mode](opt)\n        .then(({ retcode, info, data: { invalid_shop_ids = [] }}) => {\n          if (retcode === 0) {\n            this.closeDialog();\n            this.getList();\n            return this.$message.success(\n              (this.mode === 1 ? 'Create' : 'Edit') + ' Successfully!'\n            );\n          } else if (retcode === 8001 || retcode === 8002) {\n            // 8001:shopid与所属国家不符; 8002:shopid重复配置\n            invalid_shop_ids = invalid_shop_ids.map(String);\n            this.shopErrList = invalid_shop_ids;\n            const msg =\n              retcode === 8002\n                ? 'Duplicated Setting'\n                : 'Please check highlighted area';\n            return this.$message.error(msg);\n          } else {\n            this.$message.error(info);\n          }\n        })\n        .finally(_ => {\n          this.submitLoading = false;\n        });\n    },\n    verifyParams(data) {\n      for (const key of requiredParams) {\n        const v = data[key];\n        if ((!v && v !== 0) || (Array.isArray(v) && !v.length)) {\n          this.$message.warning('please input required params');\n          return false;\n        }\n      }\n      const dateNow = new Date().setHours(0, 0, 0, 0);\n      let begTime, endTime;\n      if (data.start_time) {\n        begTime = new Date(data.start_time).setHours(0, 0, 0, 0);\n      }\n      if (data.end_time) endTime = new Date(data.end_time).setHours(0, 0, 0, 0);\n      if (\n        begTime < dateNow ||\n        (endTime && !(endTime >= dateNow && endTime >= begTime))\n      ) {\n        this.$message.warning('invalid date');\n        return false;\n      }\n      return true;\n    }\n  },\n  components: {\n    ShopEditor\n  }\n};\n</script>\n<style scoped>\n.dialog-footer {\n  text-align: center;\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/marketingCenter/priceChangeSettings/targetMarginConfig/targetMarginHistoryDialog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/marketingCenter/productPromotion/blackStock/index.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":10,"column":44,"nodeType":"VIdentifier","messageId":"deprecated","endLine":10,"endColumn":50},{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":69,"column":7,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":69,"endColumn":8,"fix":{"range":[3079,3080],"text":""}},{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":149,"column":10,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":149,"endColumn":11,"fix":{"range":[5915,5916],"text":""}},{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":153,"column":10,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":153,"endColumn":11,"fix":{"range":[6095,6096],"text":""}}],"errorCount":4,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"<template>\n  <div class=\"black-stock-promotion-container\">\n    <section class=\"black-stock-promotion-header\">\n      <h1>{{$t('blackStockPromotion')}}</h1>\n      <el-button @click=\"onSetCreateVisible(true)\" v-if=\"canProcess\">\n        <span>{{$t('PriceChangeNewCampaign')}}</span>\n      </el-button>\n    </section>\n    <section class=\"black-stock-promotion-form\">\n      <el-form :model=\"searchForm\" @submit.native.prevent=\"onSearch\" >\n        <el-button v-show=\"false\" native-type=\"submit\"></el-button>\n        <el-row :gutter=\"16\">\n          <el-col v-for='item in searchSchema' :key='item.field' :span='item.width || 6' :offset='item.offset'>\n            <el-form-item :class='item.class || \"\"' :label=\"item.label\" class=\"search-input-area\">\n              <pms-form-item @input=\"modifyForm\" :renderData=\"{ schema: item, form: searchForm}\"></pms-form-item>\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-form-item class='pms-ui right-action-btn'>\n            <div class='list-btn clear-btn' @click=\"onReset\">{{$t('purchaseRequest.clear')}}</div>\n            <div class='list-btn' @click='onSearch'>{{$t('purchaseRequest.search')}}</div>\n          </el-form-item>\n        </el-row>\n      </el-form>\n    </section>\n    <section class=\"black-stock-promotion-table\" v-loading=\"loading\">\n      <promotion-table\n      :list=\"tableList\"\n      :schema=\"tableSchema\"\n      :canOperate=\"canProcess\"\n      :canNominate=\"canNominate\"\n      @rowClick=\"onRow\"\n      @nominate=\"onNomination\"\n      @viewNomination=\"onViewNomination\"\n      @cancel=\"onCancel\"\n      @log=\"onHistory\"\n      ></promotion-table>\n    </section>\n    <section class='pms-ui pagination-center'>\n      <el-pagination background layout=\"sizes, prev, pager, next\" :current-page='pageInfo.page_no' :total.sync=\"total\" :page-sizes='[10, 20, 50, 100]' :page-size=\"pageInfo.count\" @size-change=\"handleSizeChange\" @current-change=\"handleChangePage\"></el-pagination>\n    </section>\n    <history-dialog :visible=\"historyVisible\" :activeID=\"activeData.id || 0\" @close=\"closeHistoryDialog\" ></history-dialog>\n    <create-dialog\n      :create_mode=\"createMode\"\n      :hasSubType=\"true\"\n      :modifyData=\"activeData\"\n      @refresh=\"onSearch\"\n      :visible=\"createVisible\"\n      :canOperate=\"canProcess\"\n      class=\"pms-ui\"\n      :campaignType=\"CampaignType\"\n      :region=\"searchForm.region\"\n      @close=\"() => onSetCreateVisible(false)\"\n      @modify=\"modifyDetail\"/>\n  </div>\n</template>\nconst CampaignType = 5;\n<script>\nimport pmsFormItem, { getSelectOptions } from '@/components/BaseItem/formItem';\nimport createDialog from '@/components/marketingCenter/createDialog/promotion';\nimport historyDialog from '@/components/marketingCenter/historyDialog/promotion';\nimport promotionTable from '@/components/marketingCenter/promotionList';\nimport { TimeZoneByCountry, Permission} from '@/utils/constant';\nimport { getCampaignList, cancelCampaign } from '@/api/marketingCenter';\nimport { hasPermission } from '@/utils/permission';\nimport moment from 'moment';\nexport default {\n  data () {\n    return {\n     searchForm: {\n       region: this.$store.getters.country,\n       campaign_status: 0\n     },\n     canProcess: false,\n     historyVisible: false,\n     createVisible: false,\n     canNominate: false,\n     loading: true,\n     createMode: 2,\n     CampaignType: 5,\n     pageInfo: {\n       page_no: 1,\n       count: 10\n     },\n     total: 0,\n     lastSearchForm: {},\n     activeData: {},\n     tableList: []\n    };\n  },\n  computed: {\n    searchSchema() {\n      return [\n        { type: 'select', field: 'region', label: this.$t('commonRegion'),\n          getChildren: (h) => getSelectOptions(this.countrySelectList, h),\n          on: { change: this.onSearch }\n        },\n        { type: 'input', field: 'campaign_name', label: this.$t('commonCampaignName')},\n        { type: 'input', field: 'creator', label: this.$t('commonCreator')},\n        { type: 'select', field: 'campaign_status', label: this.$t('commonStatus'),\n          getChildren: (h) => getSelectOptions(this.statusList, h),\n          on: { change: this.onSearch }},\n        { field: 'timePicker', label: this.$t('promotionCampaignTime'), width: 12,\n          render: (schema, row, h) => ['el-date-picker', {\n            props: {\n              clearable: true,\n              value: this.searchForm.timePicker,\n              type: 'datetimerange',\n              format: 'yyyy-MM-dd HH:mm',\n              'range-separator': '-'\n            },\n            on: {\n              input: (value) => { this.modifyForm(schema, value); }\n            }\n          }\n        ]}\n      ];\n    },\n    tableSchema() {\n      return [\n        {label: 'commonRegion', field: 'region', width: 80},\n        {label: 'commonCampaignName', field: 'campaign_name'},\n        {label: 'promotionCampaignTime', width: 270, render: (schema, row, index, h) => {\n          const time = TimeZoneByCountry[row.region.toUpperCase()];\n          const range = `${moment(row.campaign_start_time_str).format('YYYY-MM-DD HH:mm')} ~ ${moment(row.campaign_end_time_str).format('YYYY-MM-DD HH:mm')}`;\n          return ['div', null, [h('p', null, range), h('p', {class: 'time-zone-in-table'}, time + '00')]];\n        }},\n        {label: 'commonCreator', field: 'creator'},\n        {label: 'commonStatus', field: 'campaign_status', width: 100, render: (schema, row) => this.statusFormatter(row)}\n      ];\n    },\n    countryList() {\n      return [...new Set([...this.$store.getters.countryList.map(item => item.country)])];\n    },\n    countrySelectList() {\n      return [...this.countryList.map(item => ({ label: item, value: item }))];\n    },\n    statusList() {\n      return [\n        { label: this.$t('CampaignStatusAll'), value: 0 },\n        { label: this.$t('campaignStatusNormal'), value: 1 },\n        { label: this.$t('campaignStatusCancelled'), value: 2 }\n      ];\n    }\n\n  },\n  watch: {},\n  created () {\n    this.canProcess = hasPermission(Permission.BLACK_STOCK_PROMOTION_PROCESS);\n    this.canNominate = hasPermission(Permission.BLACK_STOCK_PROMOTION_NOMINATE);\n  },\n  mounted () {\n      const lastSearchForm = {...this.$store.getters.searchForm['BLACKSTOCK']} || {};\n      if (lastSearchForm.BlackStock) {\n        this.getList(lastSearchForm.BlackStock);\n        this.clearSearchForm();\n      } else {\n        this.getList();\n      }\n  },\n  methods: {\n    modifyForm(schema, value) {\n      this.$set(this.searchForm, schema.field, value);\n    },\n    onReset() {\n      this.searchForm = {\n        region: this.$store.getters.country\n      };\n    },\n    onSearch() {\n      this.pageInfo.page_no = 1;\n      this.getList();\n    },\n    getList(params = {}) {\n      if (!Object.keys(params).length) { // 判断是不是跳转回来的页面\n        params = { ...this.searchForm, ...this.pageInfo };\n        if (params.timePicker && params.timePicker.length === 2) {\n          params.campaign_start_time_str = moment(params.timePicker[0]).format('YYYY-MM-DD HH:mm:00');\n          params.campaign_end_time_str = moment(params.timePicker[1]).format('YYYY-MM-DD HH:mm:59');\n        }\n        if (params.campaign_status === 0) {\n          this.$delete(params, 'campaign_status');\n        }\n        this.$delete(params, 'timePicker');\n        params.campaign_type = this.CampaignType;\n      } else {\n        this.searchForm = {...params};\n        this.pageInfo.page_no = params.page_no;\n        this.pageInfo.count = params.count;\n        if (params.campaign_start_time_str) {\n          this.searchForm.timePicker = [new Date(params.campaign_start_time_str), new Date(params.campaign_end_time_str)];\n          this.$delete(this.searchForm, 'campaign_start_time_str');\n          this.$delete(this.searchForm, 'campaign_end_time_str');\n        }\n        this.searchForm.campaign_status = params.campaign_status ? params.campaign_status : 0;\n      }\n      for (const index in params) {\n        if (params[index] !== 0 && !params[index]) {\n          this.$delete(params, index);\n        }\n      }\n      this.loading = true;\n      getCampaignList(params).then(res => {\n        if (res.retcode === 0) {\n          this.tableList = res.data.campaign_list;\n          this.total = res.data.total;\n          this.lastSearchForm = params;\n        } else {\n          this.$message.error(res.info);\n        }\n      }\n      ).catch(e => {\n        this.tableList = [];\n        this.$message.error(e.info);\n      }).finally(_ => {\n        this.loading = false;\n      });\n    },\n\n    // 这里开始是table有关的函数辽\n\n    onRow({row, column, event}) {\n      if (!['viewNomination', 'action', 'nomination'].includes(column.columnKey)) {\n        this.createMode = 2;\n        this.activeData = row;\n        this.createVisible = true;\n      }\n    },\n    modifyDetail() {\n      this.createMode = 1;\n    },\n    onSetCreateVisible(isCreate) {\n      if (isCreate) {\n        this.activeData = {};\n        this.createMode = 0;\n        this.createVisible = true;\n      } else {\n        this.createVisible = false;\n      }\n    },\n    onHistory(row) {\n      this.activeData = row;\n      this.historyVisible = true;\n    },\n    closeHistoryDialog() {\n      this.historyVisible = false;\n    },\n    onCancel(row) {\n      this.$confirm(this.$t('cancelCampaignTip'), this.$t('commonTips'), {\n        confirmButtonText: this.$t('commonConfirm'),\n        cancelButtonText: this.$t('commonClose')\n      }).then(({ value }) => {\n        const params = {\n          id: row.id\n        };\n        cancelCampaign(params).then((res) => {\n          if (res && res.retcode === 0) {\n            this.$message({\n              type: 'success',\n              message: 'Cancel Sucessfully'\n            });\n            this.onSearch();\n          } else {\n            this.$message({\n              type: 'error',\n              message: res.info\n            });\n          }\n        }).catch(e => {\n          this.$message({\n            type: 'error',\n            message: e\n          });\n        });\n      }).catch(e => {});\n    },\n    onNomination(row) {\n      this.recordSearchForm();\n      this.$router.push(`/admin/marketingCenter/promotion/black/stock/nominate/create/${row.id}`);\n    },\n    onViewNomination(row) {\n      this.recordSearchForm();\n      this.$router.push(`/admin/marketingCenter/promotion/black/stock/nominate/detail/${row.id}`);\n    },\n    recordSearchForm() {\n      this.$store.commit('setActiveTab', { module: 'BLACKSTOCK'});\n      this.$store.commit('setSearchForm', {\n        module: 'BLACKSTOCK',\n        form: {...this.lastSearchForm},\n        field: 'BlackStock'\n      });\n    },\n    clearSearchForm() {\n      this.$store.commit('setActiveTab', { module: 'BLACKSTOCK'});\n      this.$store.commit('setSearchForm', {\n        module: 'BLACKSTOCK',\n        value: null,\n        form: null,\n        field: 'BlackStock'\n      });\n    },\n    handleSizeChange(item) {\n      this.pageInfo.count = item;\n      this.getList();\n    },\n    handleChangePage(item) {\n        this.pageInfo.page_no = item;\n        this.getList();\n    },\n    statusFormatter(row) {\n      return row.campaign_status === 1 ? this.$t('campaignStatusNormal') : this.$t('campaignStatusCancelled');\n    }\n  },\n  components: {\n    pmsFormItem,\n    promotionTable,\n    createDialog,\n    historyDialog\n  }\n};\n</script>\n\n<style lang='scss' scoped>\n.black-stock-promotion-container {\n  margin: 0 20px;\n  .black-stock-promotion-header {\n    margin-bottom: 20px;\n    display: flex;\n    justify-content: space-between;\n    border-bottom: 3px solid #ECF0F4;\n    h1 {\n      font-size: 18px;\n      font-weight: 500;\n      line-height: 32px;\n      padding-left: 20px;\n      margin-bottom: 8px;\n    }\n    .el-button {\n      height: 32px;\n      line-height: 32px;\n      padding: 0 10px;\n      color: white;\n      background: #3D6ED1;\n      border: none;\n      margin-bottom: 8px;\n    }\n  }\n  .black-stock-promotion-form {\n    border-bottom: 2px solid #ECF0F4;\n    margin-bottom: 16px;\n  }\n  .right-action-btn {\n    text-align: right;\n  }\n  .pagination-center {\n    text-align: center;\n    margin-top: 20px;\n  }\n}\n</style>\n<style lang='scss'>\n.black-stock-promotion-container {\n  .search-input-area.el-form-item--medium {\n    display: flex;\n    border:1px solid #E2E6EC;\n    overflow: hidden;\n    border-radius:4px;\n    margin-bottom: 16px;\n    & * {\n      height: 32px;\n      line-height: 32px;\n    }\n    .el-form-item__label{\n      color: #333333;\n      line-height: 32px;\n      text-align: center;\n      flex-grow: 0;\n      flex-shrink: 0;\n      padding: 0 8px;\n      background-color:#FAFBFD;\n      border-right:1px solid #E2E6EC;\n    }\n    .el-form-item__content{\n      flex-grow: 1;\n      flex-shrink: 1;\n      input::-webkit-outer-spin-button,input::-webkit-inner-spin-button {\n        -webkit-appearance: none;\n        }\n      input[type=\"number\"]{\n        -moz-appearance: textfield;\n        }\n      .el-input__inner {\n        border: none;\n        width: 100%;\n      }\n    }\n    .el-input--medium{\n      .el-input__inner{\n        border:none;\n      }\n    }\n    .range-input-item{\n      display: flex;\n      .el-input--medium{\n        flex-grow: 1;\n      }\n      &>span{\n        flex-grow: 0;\n        color:#ECF0F4;\n        border-left:1px solid #ECF0F4;\n        border-right:1px solid #ECF0F4;\n        padding:0 1px;\n      }\n    }\n    .el-tag--info {\n      line-height: 28px;\n      height: 28px;\n      .el-tag__close.el-icon-close {\n        line-height: 14px;\n        height: 14px;\n        width: 14px;\n        margin-bottom: 3px;\n      }\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/marketingCenter/productPromotion/blackStock/nominate.vue","messages":[{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":14,"column":19,"nodeType":"ThisExpression","endLine":14,"endColumn":23},{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":20,"column":37,"nodeType":"ThisExpression","endLine":20,"endColumn":41},{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":76,"column":107,"nodeType":"ThisExpression","endLine":76,"endColumn":111},{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":76,"column":135,"nodeType":"ThisExpression","endLine":76,"endColumn":139},{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":77,"column":67,"nodeType":"ThisExpression","endLine":77,"endColumn":71}],"errorCount":5,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"black-stock-nominate-products pms-ui pms-ele-ui\">\n    <section class=\"header-view\">\n      <section class=\"title-view\">\n        <i class=\"back-icon el-icon-arrow-left\" @click=\"goBack\"></i>\n        <span class=\"nominate-title\">{{form.mode === 'create' ? 'Nominate Products' : 'View Nomination'}}</span>\n      </section>\n      <section v-if=\"canProcess\" class=\"action-view\">\n        <template v-if=\"form.mode !== 'detail'\">\n          <!-- CFS& Campaign Promotion：仅有Submit按钮. Seller Discount：仅有Submit & Sync to MKT按钮,功能同原来的Submit -->\n          <el-button class=\"list-btn white-grey\" @click=\"cancelEdit\">{{$t('commonCancelEdit')}}</el-button>\n          <el-button class=\"list-btn\" :loading=\"actionLoading\" @click=\"submitNomination(true)\">{{$t('submitAndSyncToMKT')}}</el-button>\n          <el-button\n            v-if=\"this.form.is_auto_black\"\n            class=\"list-btn\"\n            :loading=\"actionLoading\"\n            @click=\"submitNomination(false)\">{{$t('commonSubmit')}}</el-button>\n        </template>\n        <el-button v-if=\"form.is_auto_black && form.mode === 'detail'\" class=\"list-btn\" :loading=\"actionLoading\" @click=\"syncToMKT\">{{$t('submitAndSyncToMKT')}}</el-button>\n        <el-button v-if=\"canEdit && this.productsType === '1'\" class=\"list-btn\"  @click=\"editProducts\">{{$t('commonEdit')}}</el-button>\n      </section>\n    </section>\n    <base-info :form=\"form\" @add=\"uploadSuccess\" @delete=\"deleteAttachment\"></base-info>\n    <section>\n      <p class=\"section-title\">{{$t('sellerDiscountProductInformation')}}\n        <span class=\"product-chosen\" v-if=\"form.mode === 'create'\">\n          (SKU Number: {{skuNum}})\n        </span>\n      </p>\n      <section class=\"search-row\">\n        <el-input placeholder=\"Please Input\" v-model=\"searchForm.value\" class=\"search-input-with-select\" @change=\"searchProducts(1)\">\n          <el-select v-model=\"searchForm.key\" slot=\"prepend\" placeholder=\"Please Input\" @change=\"searchProducts(1)\">\n            <el-option :label=\"$t('productId')\" value=\"item_id\"></el-option>\n            <el-option :label=\"$t('commonSkuID')\" value=\"sku_id\"></el-option>\n          </el-select>\n          <i slot=\"suffix\" class=\"el-input__icon el-icon-search\" @click=\"searchProducts(1)\"></i>\n        </el-input>\n      </section>\n      <el-tabs v-if=\"form.mode !== 'create'\" v-model=\"productsType\" type=\"card\" class=\"sku-type-tab\">\n        <el-tab-pane name=\"1\">\n          <span slot=\"label\"> {{ $t('nominatedSku', { num: tabSkuNum.nominated_products_total})}}</span>\n        </el-tab-pane>\n        <el-tab-pane name=\"2\">\n          <span slot=\"label\"> {{ $t('cancelledSku', { num: tabSkuNum.cancelled_products_total})}}</span>\n        </el-tab-pane>\n        <el-tab-pane name=\"3\">\n          <span slot=\"label\"> {{ $t('syncedToMKTSKU', { num: tabSkuNum.sync_to_mkt_products_total})}}</span>\n        </el-tab-pane>\n      </el-tabs>\n      <section :class=\"{'product-table-section': form.mode !== 'create'}\">\n        <section class=\"action-btn-row\">\n          <div class=\"action-btn-left\" >\n            <list-mass-upload @uploadError=\"uploadProductFailed\" @uploadSuccess=\"uploadProductSuccess\" class=\"upload-products\"\n              :actionUrl=\"actionUrl\" :config=\"uploadConfig\" :uploadData=\"{ campaign_id: $route.params.id }\">\n              <div slot=\"uploadSlot\">\n                <el-button class=\"list-btn\" :disabled=\"!canProcess || form.mode !== 'create'\">{{$t('commonUpload')}}</el-button>\n                <el-button type=\"text\" @click.stop :disabled=\"!canProcess || form.mode !== 'create'\">\n                  <a @click=\"downloadTemplate\">\n                    {{$t('commonTemplate')}}\n                  </a>\n                </el-button>\n              </div>\n              </list-mass-upload>\n          </div>\n          <div class=\"action-btn-right\">\n            <el-button class=\"list-btn\" @click=\"switchAddDialog(true)\" :disabled=\"!canProcess || form.mode !== 'create'\">{{$t('commonAddSku')}} </el-button>\n          </div>\n        </section>\n        <section  v-if=\"form.mode !== 'detail' && skuPager.total !== 0\" class=\"batch-fill-wrapper\">\n          <el-form :inline=\"true\">\n            <el-form-item>\n              <el-input :controls=\"false\" :placeholder=\"$t('appliedPromotionPrice', {currency: currency})\"  :disabled=\"!!fillForm.discount\" type=\"number\"\n              v-model=\"fillForm.apply_promotion_price\" class=\"apply-promotion-price\" @change=\"onPromotionPriceChange\"></el-input>\n            </el-form-item>\n            <el-form-item>\n              <el-input :controls=\"false\" class=\"discount\" :placeholder=\"`${$t('discountPlaceholder')} (${this.form.region === 'TW' ? this.$t('marketingCenter.discountUnit') : '%OFF'})`\" :min=\"0\" type=\"number\"\n              :max=\"form.region === 'TW' ?  9.9 : 99\" :precision=\"this.form.region === 'TW' ? 1 : 0\" @change=\"onDiscountChange\"\n              :disabled=\"!!fillForm.apply_promotion_price\" v-model=\"fillForm.discount\"></el-input>\n            </el-form-item>\n            <el-form-item>\n              <el-input class=\"remark\" :placeholder=\"$t('commonRemark')\"  v-model=\"fillForm.remark\"></el-input>\n            </el-form-item>\n            <el-button @click=\"fillSkuInfo\" class=\"list-btn apply-to-fill\" :disabled=\"form.mode === 'detail' || skuPager.total === 0\">{{$t('sellerDiscountApplyToAll')}}</el-button>\n          </el-form>\n        </section>\n        <sku-table\n          :SkuPager=\"skuPager\" @getItemList=\"searchProducts\" @getFilterItemList=\"getFilterItemList\"  :region=\"form.region\" :campaignType=\"form.campaign_type\"\n          @selectRows=\"onSelectRows\" :mode=\"form.mode\" @removeSku=\"removeSku\" @modifySku=\"modifyItemSku\" :itemList=\"itemList\" :cacheSkuList=\"cacheSkuList\"\n          @nominationRefresh=\"nominationRefresh\" :productsType=\"productsType\">\n        </sku-table>\n      </section>\n    </section>\n    <product-attachment :form=\"form\" @update=\"uploadSuccess\"></product-attachment>\n    <add-sku-dialog\n      @addProducts=\"addProducts\"\n      @getSku=\"getSkuList\"\n      @close=\"switchAddDialog(false)\"\n      :skuSchema=\"addSkuSchema\"\n      :selectedSchema=\"selectedSkuSchema\"\n      :loading=\"addSkuLoading\"\n      :info=\"form\"\n      :pageTotal=\"addSkuTotal\"\n      :visible=\"addSkuVisible\"\n      :skuList=\"computedSkuList\"\n      ></add-sku-dialog>\n  </div>\n</template>\n\n<script>\nimport ListMassUpload from '@/components/upload/blobResponseUpload';\nimport BaseInfo from '../../nominateProducts/baseInfo';\nimport AddSkuDialog from '@/components/marketingCenter/addSkuDialog';\nimport skuTable from './skuTable';\nimport { getNominationDetail, getNominationSkuList, createNomination, updateNomination, nominationRefresh, searchBlackStockSku, syncNominationToMKT, downloadNominationTemplate } from '@/api/nominate';\nimport { NominateStatusList, ReturnCodeMap, Permission, MKTCheckFailRetCodeMap, healthLevelValueMap, FESKUStatus, getContentType } from '@/utils/constant';\nimport { roundPriceByRegion } from '@/utils/format';\nimport { formatParams } from '@/utils/formatParams';\nimport { ValidateProduct } from '../../validate';\nimport { hasPermission } from '@/utils/permission';\nimport moment from 'moment';\nimport { downloadBlobFile } from '@/utils/downloadFile';\nimport productAttachment from '../../nominateProducts/productAttachment';\nconst CheckPointKeys = ['gross_margin_check_point', 'limited_selling_quantities_check_point',\n'historically_low_selling_price_check_point', 'promotion_price_check_point', 'historically_low_selling_price'];\nconst SkuPageCount = 50;\nconst SignleProductLimit = 5000;\n\nexport default {\n  data() {\n    return {\n      canProcess: false,\n      form: {\n        mode: this.$route.params.mode || '',\n        attachmentList: []\n      },\n      actionLoading: false,\n      NominateStatusList,\n      searchForm: { request_status: '', item_id: this.$route.params.pid || '', sku_id: '', key: 'item_id', value: Number(this.$route.params.pid) || '' },\n      selectRows: [],\n      errorType: {\n        failList: 'span',\n        noStepList: 'span',\n        approval: 'p' // 这个放在下面\n      },\n      fillForm: { apply_promotion_price: undefined, discount: undefined, remark: '' },\n      searchKey: 'item_id',\n      searchValue: '',\n      checkLoading: false,\n      cacheSkuList: [],\n      productsType: '1',\n      cacheMode: '',\n      tabSkuNum: {\n        nominated_products_total: 0,\n        cancelled_products_total: 0,\n        sync_to_mkt_products_total: 0\n      },\n      approvalConfirm: false,\n// TABLE LIST DATA AREA\n      skuPager: {\n        size: SkuPageCount,\n        pageIndex: 1,\n        total: 0\n      },\n      modifyList: [], // 这个是修改过的数据 & create的所有数据\n      productList: [],\n      itemList: [], // 这个是给 skuTable的数据\n// UPLOAD ATACHMENT DATA AREA\n      attachmentLength: 0,\n      isModifyAttachment: false, // 是否修改了附件\n// ADD SKU DIALOG DATA AREA\n      addSkuVisible: false,\n      addSkuLoading: false,\n      addSkuList: [],\n      addSkuTotal: 0\n    };\n  },\n  components: {\n    AddSkuDialog,\n    BaseInfo,\n    ListMassUpload,\n    skuTable,\n    productAttachment\n  },\n  computed: {\n    currency() {\n      return this.$store.getters.currencyMap[this.form.region];\n    },\n    skuNum() {\n      if (this.form.mode === 'create') {\n        let total = 0;\n        this.productList.forEach((item, index) => {\n          total += item.sku_list.length;\n        });\n        return total;\n      } else {\n        return this.skuPager.total;\n      }\n    },\n    actionUrl() {\n      return `/api/item_price_change/requests/nomination/${this.$route.params.id}/upload/`;\n    },\n    uploadConfig() {\n      return {\n        btnText: this.$t('purchaseRequest.upload'),\n        templateLink: '/admin/static/priceChangeTemplate.xlsx',\n        templateText: this.$t('rule.template')\n      };\n    },\n    canEdit() {\n      const endInterval = moment() - moment(this.form.campaign_end_time_str || '', 'YYYY-MM-DD HH:mm:ss');\n      return this.form.mode === 'detail' && this.canProcess && endInterval < 0;\n    },\n    filterList() { // create的时候当前页数据\n      if (this.form.mode === 'create') {\n        const filterList = [];\n        const {request_status = '', key, value } = this.searchForm;\n        const item_id = key === 'item_id' ? value : '';\n        const sku_id = key === 'sku_id' ? value : '';\n        const filterKey = this.getFilterKey();\n        const filterValue = this.searchForm[filterKey];\n        // productList 是create的时候全部数据\n        this.productList.forEach(product => {\n          if (`${product.item_id || ''}`.includes(item_id)) {\n            const filterSKUList = (product.sku_list || []).filter(sku => {\n              return (sku.sku_id || '').includes(sku_id) && (sku.request_status || '').includes(request_status) && (`${sku[filterKey]}` || '').includes(filterValue);\n            }).map(sku => ({ ...product, ...sku }));\n            if (filterSKUList.length) filterList.push(...filterSKUList);\n          }\n        });\n        return filterList;\n      } else {\n        return [];\n      }\n    },\n    // SKU Table Computed AREA\n  relationFillKeyMap() {\n  return {\n    apply_promotion_price: { key: 'discount', value: (row) => { // return discount\n      let discount = 0;\n      if (this.form.region === 'TW') {\n        discount = (parseInt(row.apply_promotion_price * 100 / row.original_price) / 10).toFixed(1);\n      } else {\n        discount = (100 - parseInt(row.apply_promotion_price * 100 / row.original_price));\n      }\n      return discount;\n    }},\n  discount: { key: 'apply_promotion_price', value: (row) => { // return promotion price\n      let promotionPrice = 0;\n      if (this.form.region === 'TW') {\n        promotionPrice = row.original_price * row.discount / 10;\n      } else {\n        promotionPrice = (100 - row.discount) / 100 * row.original_price;\n      }\n      return roundPriceByRegion(promotionPrice, this.form.region);\n  }}\n  };\n},\n// ADD SKU DIALOG COMPUTED DATA AREA\n    addSkuSchema() {\n      return [\n        { label: 'commonSkuIDOrName', width: 210, render: (schema, row) => (`${row.sku_id}/ ${row.sku_name}`)},\n        { label: 'PriceChangeInventoryHealthTag', width: 90, align: 'center', render: (schema, row, index, h) => {\n          let color = '';\n          for (color in healthLevelValueMap) {\n            if (healthLevelValueMap[color] === row.inventory_health_level) {\n              break;\n            }\n          }\n          return ['div', {class: 'black-stock-heath-color', style: `background-color:${color}`}, ''];\n          }},\n        { label: 'commonPurchaseType', field: 'purchase_type', width: 105},\n        { label: 'commonStatus', field: 'sku_status', render: (schema, row) => {\n          return FESKUStatus.find(item => (item.value === row.sku_status)).label;\n        }}\n      ];\n    },\n    selectedSkuSchema() {\n      return [\n        { label: 'commonSkuIDOrName', render: (schema, row) => (`${row.sku_id}/ ${row.sku_name}`)}\n      ];\n    },\n    computedSkuList() {\n      return this.addSkuList.map(item => {\n        const reason = [];\n        item.isAdded = item.is_nominated ? true : this.modifyList.some(sku => sku.sku_id === item.sku_id);\n        if (item.is_deprecated) {\n          reason.push('Deprecated');\n        }\n        if (item.purchase_type !== 'Outright') {\n          reason.push(`${item.purchase_type} Purchase Type`);\n        }\n        if (item.sku_status !== 1) {\n          const status = (FESKUStatus.find(item => (item.value === item.sku_status)) || {}).label || '';\n          reason.push(`${status} SKU`);\n        }\n        if (item.inventory_health_level !== 5) {\n          let color = '';\n          for (color in healthLevelValueMap) {\n            if (healthLevelValueMap[color] === item.inventory_health_level) {\n              break;\n            }\n          }\n          reason.push({content: 'Inventory Health Tag:', class: 'black-stock-heath-color', style: `background-color:${color}`});\n        }\n        if (item.has_virtual) {\n          reason.push('Virtual Sku');\n        }\n        this.$set(item, 'reason', reason);\n        return item;\n      });\n    }\n  },\n  watch: {\n    productsType(nv, ov) {\n      if (ov === '1') {\n        this.cacheMode = this.form.mode;\n      }\n      if (nv === '1') {\n        this.form.mode = this.cacheMode || 'detail';\n      } else {\n        this.form.mode = 'detail';\n      }\n      this.searchProducts();\n    }\n  },\n  methods: {\n    downloadTemplate() {\n      downloadNominationTemplate({region: this.form.region}).then(resp => {\n        if (resp.type === 'application/json') {\n          const reader = new FileReader();\n          reader.onloadend = () => {\n            const result = JSON.parse(reader.result);\n            if (result.retcode !== 0) {\n              this.$message.error(result.info);\n            }\n          };\n          reader.readAsText(resp);\n        } else {\n          downloadBlobFile(resp, `${this.$t('marketingCenterPriceChangeTemplate')}.${getContentType(resp.type)}`);\n        }\n      }).catch(() => { this.$message.error('Download Failed'); });\n    },\n    onPromotionPriceChange(value) {\n      value = parseFloat(value);\n      if (value < 0) {\n        value = 0;\n      }\n      if (value) {\n        value = roundPriceByRegion(value, this.form.region);\n      }\n      this.fillForm.apply_promotion_price = value || undefined;\n    },\n    onDiscountChange(value) {\n      value = parseFloat(value);\n      if (value < 0) {\n        value = 0;\n      }\n      if (value) {\n        if (this.form.region === 'TW' && value > 9.9) {\n          value = 9.9;\n        } else if (this.form.region !== 'TW' && value > 99) {\n          value = 99;\n        }\n      }\n      this.fillForm.discount = value || undefined;\n    },\n    nominationRefresh({value, row, index}) {\n      const product = this.itemList.find(item => row.item_id === item.item_id) || {};\n      const productIndex = this.itemList.findIndex(item => row.item_id === item.item_id);\n      const refreshSkuList = (product.sku_list || []).map(sku => {\n        const modifySku = this.modifyList.find(modify => modify.sku_id === sku.sku_id);\n        return {...(modifySku || sku)};\n      });\n      const params = {\n        region: this.form.region,\n        campaign_id: Number(this.$route.params.id),\n        apply_item_list: this.getItemGroup(refreshSkuList, 'apply_item_sku_list')\n      };\n      // 获取最新的limited_selling_quantities\n      nominationRefresh(params).then(res => {\n        if (res.retcode === 0) {\n          const item = res.data.items && res.data.items.length && res.data.items[0];\n          refreshSkuList.forEach(sku => {\n              this.modifyItemSku(sku, 'limited_selling_quantities', item.limited_selling_quantities);\n          });\n          if (productIndex !== -1 && product) {\n            this.itemList.splice(productIndex, 1, product);\n          }\n        }\n      });\n    },\n    uploadSuccess(attachmentList) {\n      this.form.attachmentList = attachmentList.list;\n      this.attachmentLength = attachmentList.length;\n      if (!this.isModifyAttachment) this.isModifyAttachment = true;\n    },\n    deleteAttachment(index) {\n      if (this.form.mode === 'create') {\n        this.form.attachmentList.splice(index, 1);\n      } else {\n        this.form.attachmentList[index].status = 2;\n      }\n    },\n    submitNominationRequest(params = {}) {\n      const requestFun = this.form.mode === 'create' ? createNomination : updateNomination;\n      this.actionLoading = true;\n      return requestFun(params).then(resp => {\n        if (resp.retcode === ReturnCodeMap.PRICE_CHANGE_NEED_CONFIRM) {\n          const names = resp.data.campaign_name.reduce((ret, item) => {\n            return `${ret}(${item.join('、')})`;\n          }, '');\n          return this.$confirm(this.$t('priceChangeNeedConfirmTips', { skus: (resp.data.existed_confirmed_discount_item_ids || []).join('、'), names: names}), '', {\n            showConfirmButton: true\n          }).then(() => {\n            const confirmParams = { ...params, confirmed_discount_existed_confirm_submit: true };\n            this.submitNominationRequest(confirmParams);\n          }).catch(() => { this.actionLoading = false; });\n        }\n        if (resp.retcode === ReturnCodeMap.PRICE_CHANGE_MKT_CHECK_FAILED) {\n          const failInfo = resp.data.error_list.reduce((msg, error) => {\n            const currentErrorConfig = MKTCheckFailRetCodeMap.find(item => item.errorCode === error.error_code);\n            const params = {};\n            if (currentErrorConfig && currentErrorConfig.key) {\n              currentErrorConfig.key.forEach(key => {\n                params[key] = error[key];\n              });\n            }\n            return currentErrorConfig ? `${msg}<p>${this.$t(currentErrorConfig.transifyKey, params)}</p>` : `${msg}<p>${error.err_msg}</p>`;\n          }, '');\n\n         return this.$message({\n            type: 'error',\n            dangerouslyUseHTMLString: true,\n            message: failInfo\n          });\n        }\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.$message.success('Success');\n          const id = this.$route.params.id;\n          if (this.$route.params.mode !== 'detail') {\n            this.$router.replace(`/admin/marketingCenter/promotion/black/stock/nominate/detail/${id}`);\n          }\n          this.form.mode = 'detail';\n          this.modifyList = [];\n          this.searchProducts();\n        }\n        this.actionLoading = false;\n      }).catch(() => { this.$message.error('Failed'); this.actionLoading = false; });\n    },\n    syncToMKT() {\n      const params = {\n        campaign_id: Number(this.$route.params.id)\n      };\n      syncNominationToMKT(params).then(res => {\n        if (res.retcode === 0) {\n          this.$message.success('Sync Success');\n          this.form.mode = 'detail';\n          this.searchProducts();\n        } else {\n          this.$message.error(res.info || res.message);\n        }\n      });\n    },\n    getSubmitConfirmTip() {\n      const h = this.$createElement;\n      const cancelSkuList = this.modifyList.filter(sku => sku.is_cancel).map(sku => sku.sku_id);\n      const modifySkuList = this.modifyList.filter(sku => !sku.is_cancel).map(sku => sku.sku_id);\n      const skuMarginList = this.modifyList.filter(sku => sku.current_margin_lt_min).map(sku => sku.sku_id);\n      const messageArr = [h('span', null, this.$t('sellerDiscountSubmitTip'))];\n      if (this.form.mode === 'edit') {\n        if (modifySkuList.length) {\n          messageArr.push(\n            h('br'),\n            h('el-popover', { class: '', attrs: {trigger: 'hover', placement: 'top'}}, [\n                h('span', { class: 'popover-text-num', slot: 'reference' }, modifySkuList.length),\n                h('span', {style: 'width: 300px'}, modifySkuList.join(','))\n              ]\n            ),\n            h('span', {class: 'primary-text'}, '  of SKUs Modified'),);\n        }\n        if (cancelSkuList.length) {\n          messageArr.push(\n            h('br'),\n            h('el-popover', { class: '', attrs: {trigger: 'hover', placement: 'top'}}, [\n                h('span', { class: 'popover-text-num', slot: 'reference' }, cancelSkuList.length),\n                h('span', {style: 'width: 300px'}, cancelSkuList.join(','))\n              ]\n            ),\n            h('span', {class: 'primary-text'}, ' of SKUs Cancelled'),\n            h('br'),\n            h('span', {}, 'Any cancelled product cannot be enabled and needs to be re-nominated again.'));\n        }\n      }\n      if (skuMarginList.length) {\n        messageArr.push(\n          h('br'),\n          h('el-popover', { class: '', attrs: {trigger: 'hover', placement: 'top'}}, [\n              h('span', { class: 'popover-text-num', slot: 'reference' }, skuMarginList.length),\n              h('span', {style: 'width: 300px'}, skuMarginList.join(','))\n            ]\n          ),\n          h('span', {class: 'primary-text'}, ' SKU current margin is below min margin.'));\n      }\n      return messageArr;\n    },\n    submitNomination(isSync) {\n      if (this.actionLoading) return;\n      if (this.form.mode === 'create' && !this.modifyList.length) {\n        return this.$message.error(this.$t('addOrModifySomeProductsTip'));\n      }\n      if (this.form.mode === 'edit' && !this.modifyList.length && !this.isModifyAttachment) {\n        return this.$message.error(this.$t('noChangeTip'));\n      }\n      if (this.filterList.length && this.modifyList.length < this.filterList.length) {\n        return this.$message.error(this.$t('noEmptySkuTip'));\n      }\n      const errorMessage = ValidateProduct(this.modifyList, this.form.region);\n      if (errorMessage) {\n        return this.$message.error(errorMessage);\n      }\n      const h = this.$createElement;\n      this.$msgbox({\n        title: this.$t('commonSubmit'),\n        message: h('div', null, this.getSubmitConfirmTip()),\n        showCancelButton: true,\n        customClass: 'price-change-nominate-diy-confirm'\n      }).then(() => {\n        const isCreate = this.form.mode === 'create';\n        const modifyList = this.modifyList.map(item => {\n          let discount = parseFloat((1 - (item.discount / 100)).toFixed(2));\n          if (this.form.region === 'TW') {\n            discount = parseFloat((item.discount / 10).toFixed(2));\n          }\n          return {\n          ...item,\n          discount,\n          apply_gross_margin: 0,\n          apply_contract_price: 0,\n          apply_promotion_price: item.apply_promotion_price,\n          remark: item.remark || ''\n          };\n        });\n        const params = formatParams({\n          region: this.form.region,\n          campaign_id: Number(this.$route.params.id),\n          attachment_list: this.form.attachmentList,\n          apply_item_list: isCreate ? this.getItemGroup(modifyList, 'apply_item_sku_list') : '',\n          update_requests: isCreate ? '' : modifyList,\n          approval_confirm_submit: false,\n          confirmed_discount_existed_confirm_submit: false\n        });\n        this.$set(params, 'is_sync', isSync);\n        this.submitNominationRequest(params, isSync);\n      }).catch(() => {});\n    },\n    editProducts() {\n      this.form.mode = 'edit';\n    },\n    cancelEdit() {\n      if (this.form.mode === 'create') {\n        this.goBack();\n      } else if (this.form.mode === 'edit') {\n        this.modifyList = [];\n        this.searchProducts(this.skuPager.pageIndex);\n        this.form.mode = 'detail';\n      }\n    },\n    goBack() {\n      this.$router.go(-1);\n    },\n    modifyItemSku(row, field, value) {\n      const product = this.itemList.find(item => item.item_id === row.item_id) || {};\n      const sku = (product && product.sku_list || []).find(sku => sku.sku_id === row.sku_id && sku.request_status === row.request_status);\n      if (!sku) return false;\n      if ((field === 'is_cancel' && value === false)) {\n        const index = this.modifyList.findIndex(item => item.item_id === sku.item_id && item.sku_id === sku.sku_id);\n        this.$set(sku, field, value);\n        if (index > -1) {\n          this.modifyList.splice(index, 1); // 删除undo的sku\n        }\n      } else if (sku[field] !== value || (field === 'is_cancel' && value === true)) {\n        const index = this.modifyList.findIndex(item => item.item_id === sku.item_id && item.sku_id === sku.sku_id);\n        if (index === -1 && this.modifyList.length >= SignleProductLimit) {\n          return this.$message.error(`Maximum number of single registrations is ${SignleProductLimit}`);\n        }\n        this.$set(sku, field, value);\n        // 其他修改 则需要重新check\n        if (index === -1) {\n          this.modifyList.push(sku); // 新增sku\n        } else {\n          this.modifyList.splice(index, 1, sku); // 更新sku\n        }\n      }\n    },\n    removeSku(row) {\n      const {item_id, sku_id} = row;\n      const productIndex = this.productList.findIndex(item => item.item_id === item_id);\n      const product = this.productList.find(item => item.item_id === item_id);\n      const skuIndex = product ? product.sku_list.findIndex(item => item.sku_id === sku_id) : -1;\n      if (skuIndex !== -1 && productIndex !== -1) {\n        product.sku_list.splice(skuIndex, 1);\n        this.productList[productIndex] = product;\n        const skuList = [];\n        this.productList.forEach(item => skuList.push(...(item.sku_list || []).map(sku => {\n          // 替换已经修改过的数据\n          const modifySku = this.modifyList.find(modify => modify.item_id === item.item_id && modify.sku_id === sku.sku_id);\n          return { ...item, ...(modifySku || sku) };\n        })));\n        this.productList = this.productList.filter(product => !!product.sku_list && !!product.sku_list.length);\n        this.modifyList = skuList;\n        this.searchProducts(1);\n      }\n    },\n    addProducts(items) {\n      // 已添加过的product\n      const exsitedProductList = this.productList.filter(product => items.find(item => item.item_id === product.item_id));\n      if (exsitedProductList) {\n        exsitedProductList.forEach(product => {\n          const targetItem = items.find(item => item.item_id === product.item_id);\n          if (targetItem) {\n            // 在targetItem的sku_list中， 不在product的sku_list中\n            const skuOnlyforItem = targetItem.sku_list.filter(itemSku => !product.sku_list.find(sku => sku.sku_id === itemSku.sku_id));\n            // 共同拥有\n            const skuForBoth = targetItem.sku_list.filter(itemSku => product.sku_list.find(sku => sku.sku_id === itemSku.sku_id));\n            // 不在targetItem的sku_list中， 在 product的sku_list中\n            let skuOnlyForProduct = product.sku_list.filter(productSku => !targetItem.sku_list.find(sku => sku.sku_id === productSku.sku_id));\n            skuOnlyForProduct = skuOnlyForProduct.map(sku => {\n              // 替换已经修改过的数据\n              const modifySku = this.modifyList.find(modify => modify.item_id === product.item_id && modify.sku_id === sku.sku_id);\n              return modifySku || sku;\n            });\n            product.sku_list = [...skuOnlyforItem, ...skuForBoth, ...skuOnlyForProduct].map(sku => {\n              let discount;\n              let promotion_price;\n              if (sku.apply_promotion_price) {\n                  promotion_price = roundPriceByRegion(sku.apply_promotion_price, this.form.region);\n                if (this.form.region === 'TW') {\n                  discount = parseFloat((parseInt(promotion_price * 100 / sku.original_price) / 10).toFixed(1));\n                } else {\n                  discount = (100 - parseInt(promotion_price * 100 / sku.original_price));\n                }\n              }\n              return {\n                ...sku,\n                remark: sku.remark || '',\n                discount: discount,\n                apply_promotion_price: promotion_price,\n                // apply_contract_price: sku.apply_contract_price === undefined ? sku.contract_price : sku.apply_contract_price,\n                limited_selling_quantities: targetItem.limited_selling_quantities || 0\n              };\n            });\n          }\n        });\n      }\n      // 未添加过的product\n      const list = items.filter(item => !this.productList.find(product => product.item_id === item.item_id));\n      // 仅存在productList中的product 取modifyList中的数据\n      this.productList.forEach(product => {\n        if (items.find(item => item.item_id !== product.item_id)) { // items中不存在\n          product.sku_list = (product.sku_list || []).map(sku => {\n            const modifySku = this.modifyList.find(modify => modify.item_id === product.item_id && modify.sku_id === sku.sku_id);\n            return modifySku || sku;\n          });\n        }\n      });\n      this.productList = [...this.productList, ...list.map(item => ({\n        ...item,\n        sku_list: (item.sku_list || []).map(sku => {\n          let promotionPrice;\n          let discount;\n          if (sku.apply_promotion_price) {\n            promotionPrice = roundPriceByRegion(sku.apply_promotion_price, this.form.region);\n            if (this.form.region === 'TW') {\n              discount = parseFloat((parseInt(promotionPrice * 100 / sku.original_price) / 10).toFixed(1));\n            } else {\n              discount = (100 - parseInt(promotionPrice * 100 / sku.original_price));\n            }\n          }\n          return {\n            ...sku,\n            remark: sku.remark || '',\n            discount: discount,\n            apply_promotion_price: promotionPrice,\n            limited_selling_quantities: item.limited_selling_quantities || 0\n          };\n        })\n      }))];\n      const skuList = [];\n      this.productList.forEach(item => skuList.push(...(item.sku_list || []).map((sku, index) => ({...item, ...sku, skuIndex: index}))));\n      if (skuList.length > SignleProductLimit) {\n        this.$message.error(`Maximum number of single registrations is ${SignleProductLimit}`);\n        const list = skuList.slice(0, SignleProductLimit);\n        this.productList = this.getItemGroup(list);\n        this.modifyList = list;\n      } else {\n        this.modifyList = skuList;\n      }\n      this.searchProducts(1);\n    },\n    uploadProductSuccess({ data }) {\n      if (data.type === 'application/json') {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n          const result = JSON.parse(reader.result);\n          if (result.retcode !== 0) {\n            this.$message.error(result.info);\n          } else {\n            this.$message.success('Upload Successfully!');\n            this.addProducts(result.data.apply_item_list || []);\n          }\n        };\n        reader.readAsText(data);\n      } else {\n        this.$message.error('Upload fail. Please check the error report.');\n        downloadBlobFile(data, `PriceChangeUploadFailed${moment().format('YYYYMMDDHHmmss')}.txt`);\n      }\n    },\n    uploadProductFailed(res) {\n      return;\n    },\n    getGrossMargin(row) {\n      if (!row.apply_contract_price || !row.apply_promotion_price) return 0;\n      return parseFloat(((row.apply_promotion_price - row.apply_contract_price) / row.apply_promotion_price).toFixed(3));\n    },\n    getItemGroup(list, listKey = 'sku_list') {\n      const groupMap = {};\n      list.forEach(item => {\n        if (groupMap[item.item_id]) {\n          groupMap[item.item_id].push({ ...item});\n        } else {\n          groupMap[item.item_id] = [{ ...item}];\n        }\n      });\n      const group = [];\n      Object.keys(groupMap).forEach(key => {\n        group.push({ ...groupMap[key][0], [listKey]: groupMap[key] });\n      });\n      return group;\n    },\n    onSelectRows(rows) {\n      this.selectRows = rows;\n    },\n    fillSkuInfo() {\n      // 1906917,1906914,1569948,1906923,1906946,1906943, 1906959\n      if (this.selectRows.length === 0) {\n        return this.$message.error('Please select some lines first!');\n      } else {\n        this.selectRows.forEach(row => {\n          if ((row.request_status !== 3 && row.process_status !== 4) &&\n          !row.is_cancel && row.request_status !== 11 && row.request_status !== 5) {\n            Object.entries(this.fillForm).forEach(([key, value]) => {\n              if (value === '' || value === undefined) return;\n              this.$set(row, key, value);\n              this.modifyItemSku(row, key, value);\n              if (this.relationFillKeyMap[key]) {\n                const option = this.relationFillKeyMap[key];\n                this.$set(row, option.key, option.value(row));\n                this.modifyItemSku(row, option.key, option.value(row));\n              }\n            });\n          }\n        });\n      }\n    },\n    getFilterItemList(filters) {\n      CheckPointKeys.forEach(key => {\n        this.$set(this.searchForm, key, filters[key]);\n      });\n      this.searchProducts(1);\n    },\n    searchProducts(pageIndex = 1) {\n      this.skuPager.pageIndex = pageIndex;\n      if (this.form.mode === 'create') {\n        const skuList = this.filterList.slice((pageIndex - 1) * SkuPageCount, pageIndex * SkuPageCount);\n        this.itemList = this.getItemGroup(skuList.map((sku, index) => {\n          const modifySku = this.modifyList.find(item => item.item_id === sku.item_id && item.sku_id === sku.sku_id);\n          return { ...(modifySku || sku), skuIndex: index};\n        }));\n        this.skuPager.total = this.filterList.length;\n        return;\n      }\n      this.searching = true;\n      const params = this.getSearchParams(this.skuPager.pageIndex);\n      getNominationSkuList(formatParams(params)).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.cacheSkuList = [];\n          // 缓存列表的初始值 undo需要还原成原始值\n          (resp.data.items || []).forEach(item => this.cacheSkuList.push(...(item.sku_list || []).map(sku => {\n            let discount = 0;\n            if (this.form.region === 'TW') {\n              discount = parseFloat((sku.discount * 10).toFixed(1));\n            } else {\n              discount = parseInt(((1 - sku.discount) * 100).toFixed(0));\n            }\n            return {...item, ...sku, discount};\n            })));\n          let list = [];\n          (resp.data.items || []).forEach(item => list.push(...(item.sku_list || []).map((sku, index) => {\n            // 替换已经修改过的数据\n            const modifySku = this.modifyList.find(modify => modify.item_id === item.item_id && modify.sku_id === sku.sku_id && modify.request_status === sku.request_status);\n            let discount = 0;\n            if (this.form.region === 'TW') {\n              discount = modifySku ? modifySku.discount : parseFloat((sku.discount * 10).toFixed(1));\n            } else {\n              discount = modifySku ? modifySku.discount : parseInt(((1 - sku.discount) * 100).toFixed(0));\n            }\n            return { ...item, ...(modifySku || sku), discount, skuIndex: index };\n          })));\n          // 对于已经修改或的数据 展示在第一页前面\n          if (this.form.mode === 'edit' && this.skuPager.pageIndex === 1) {\n            const filterKey = this.getFilterKey();\n            const filterValue = this.searchForm[filterKey];\n            // 从返回的数据 过滤出 符合filter条件的数据\n            list = list.filter(sku => sku[filterKey] === filterValue);\n            const skuList = list.map(item => `${item.item_id}_${item.sku_id}_${item.request_status}`); // 对于 cancelled的数据 request_status === 11 存在多条一样的数据 有效数据只有一条\n            // 从修改过的数据 中过滤出 符合filter条件的数据\n            const filterModifyList = this.modifyList.filter(modify => {\n              return filterKey && modify[filterKey] === this.searchForm[filterKey] && !skuList.includes(`${modify.item_id}_${modify.sku_id}_${modify.request_status}`);\n            });\n            list = filterModifyList.concat(list);\n          }\n          this.itemList = this.getItemGroup(list);\n          this.skuPager.total = resp.data.total;\n\n          const { nominated_products_total, cancelled_products_total, sync_to_mkt_products_total } = resp.data;\n          this.tabSkuNum = { nominated_products_total, cancelled_products_total, sync_to_mkt_products_total };\n        }\n      });\n    },\n    getSearchParams(pageIndex) {\n      const { key, value} = this.searchForm;\n      const item_id = key === 'item_id' ? value : '';\n      const sku_id = key === 'sku_id' ? value : '';\n      const filterKey = this.getFilterKey();\n      const filterValue = this.searchForm[filterKey];\n      const params = {\n        item_id, sku_id, page_no: pageIndex, count: SkuPageCount, campaign_id: this.$route.params.id, products_type: this.productsType\n      };\n      params[filterKey] = filterValue;\n      return params;\n    },\n    getFilterKey() {\n      let filterKey = '';\n      Object.entries(this.searchForm).forEach(([key, value]) => {\n      if (CheckPointKeys.includes(key) && value && !filterKey) {\n        filterKey = key;\n      }\n      });\n      return filterKey;\n    },\n    clearSearchForm() {\n      if (this.$route.params.pid) {\n        this.searchForm.sku_id = '';\n        this.searchForm.request_status = '';\n      } else {\n        Object.keys(this.searchForm).forEach(key => this.$set(this.searchForm, key, ''));\n      }\n    },\n    getNominateDetail() {\n      getNominationDetail({ campaign_id: this.$route.params.id }).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.form = {\n            ...this.form,\n            ...resp.data || {},\n            attachmentList: ((resp.data || {}).attachment_list || []).map(attachment => ({ ...attachment, status: 0 }))\n          };\n          this.attachmentLength = this.form.attachmentList.length;\n          if (this.form.mode === 'detail') {\n            this.searchProducts();\n          }\n        }\n      }).catch(() => {\n        this.$message.error('Failed');\n      });\n    },\n// ADD SKU DIALOG METHOD AREA\n    switchAddDialog(isOpen) {\n      this.addSkuVisible = isOpen;\n      if (!isOpen) {\n        this.addSkuList = [];\n      }\n    },\n    getSkuList(params) {\n      this.addSkuLoading = true;\n      params.campaign_id = Number(this.$route.params.id);\n      searchBlackStockSku(params).then(res => {\n        if (res.retcode === 0) {\n          this.addSkuList = res.data.items;\n          this.addSkuTotal = res.data.total;\n        } else {\n          this.$message.error(res.info);\n        }\n      }).catch(e => {\n        this.$message.error(e.info);\n      }).finally(_ => {\n        this.addSkuLoading = false;\n      });\n    }\n  },\n  created() {\n    this.canProcess = hasPermission(Permission.BLACK_STOCK_PROMOTION_NOMINATE);\n    this.getNominateDetail();\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import '~@/styles/common.scss';\n  .black-stock-nominate-products {\n    padding: 20px;\n    .header-view {\n      display: flex;\n      margin-bottom: 30px;\n      border-bottom: 2px solid #EDEEF2;\n      .title-view {\n        width: 400px;\n        max-width: 50%;\n        padding-left: 5px;\n        height: 60px;\n        line-height: 60px;\n      }\n      .back-icon {\n        display: inline-block;\n        margin-right: 10px;\n        transform: scale(1.2);\n        cursor: pointer;\n      }\n      .nominate-title {\n        font-size: 26px;\n        color: rgba(0, 0, 0, 0.7);\n        font-weight: 600;\n        margin-right: 20px;\n      }\n      .back-margin-status {\n        color: rgb(244, 171, 97);\n      }\n      .action-view {\n        flex: 1;\n        display: flex;\n        align-items: center;\n        justify-content: flex-end;\n        .submit-section {\n          position: relative;\n          margin-right: 10px;\n          width: 180px;\n          height: 50px;\n          line-height: 50px;\n          font-size: 14px;\n          color: #86cd57;\n          cursor: pointer;\n          border: 1px solid #86cd57;\n          border-radius: 3px;\n          background-color: #fff;\n          transition: background .3s linear;\n        }\n        .submit-section:hover {\n          background-color: #86cd57;\n          color: #fff;\n          border-color: #fff;\n        }\n        .el-icon-loading {\n          margin-left: 40px;\n        }\n        .btn-icon {\n          display: inline-block;\n          vertical-align: middle;\n          margin-left: 40px;\n          width: 22px;\n          height: 22px;\n          vertical-align: middle;\n        }\n        .submit-btn {\n          position: absolute;\n          top: 0;\n          left: 0;\n          width: 100%;\n          height: 100%;\n          padding-left: 20px;\n          box-sizing: border-box;\n          text-align: center;\n        }\n      }\n    }\n    .section-title{\n      font-size: 18px;\n      color: #333333;\n      font-weight: 600;\n      margin: 24px 0;\n    }\n    .list-btn {\n      margin-left: 8px;\n    }\n    .disable-btn {\n      opacity: .5;\n      cursor: not-allowed;\n    }\n    .product-chosen {\n      font-size: 14px;\n      font-weight: 400;\n      color: #666;\n    }\n    .search-row{\n      margin-bottom: 28px;\n      .el-icon-search{\n        cursor: pointer;\n      }\n    }\n    .action-row {\n      display: flex;\n      align-items: center;\n      overflow: hidden;\n      margin-bottom: -20px;\n      .search-products {\n        flex: 1;\n        margin-right: 100px;\n        .search-row, .fill-row {\n          width: 100%;\n          display: flex;\n          margin-right: 20px;\n          .el-form {\n            flex: 1;\n            display: flex;\n            .el-form-item {\n              margin-right: 10px;\n              height: 36px;\n              line-height: 36px;\n              .el-input-number {\n                width: 100%;\n                .el-input__inner {\n                  padding: 0;\n                  text-align: left;\n                }\n              }\n            }\n          }\n        }\n      }\n      .add-products {\n        padding-top: 36px;\n        width: 400px;\n        margin-bottom: 20px;\n        text-align: right;\n        .add-btn {\n          width: 120px;\n        }\n      }\n    }\n    .action-btn-row{\n      display: flex;\n      justify-content: space-between;\n    }\n    .batch-fill-wrapper{\n      padding: 6px 12px 6px 16px;\n      margin-top: 12px;\n      background: #F1F2F5;\n      border: 1px solid #E8E8E8;\n      .apply-promotion-price{\n        width: 250px;\n      }\n      .discount{\n        width: 120px;\n      }\n      .apply-contract-price{\n        width: 156px;\n      }\n      .remark{\n        width: 490px;\n      }\n      .apply-to-fill{\n        float: right;\n        margin-top: 2px;\n      }\n    }\n    .product-table-section {\n      padding: 16px 24px;\n      margin-bottom: 24px;\n      border-left: 1px solid #E4E7ED;\n      border-right: 1px solid #E4E7ED;\n      border-bottom: 1px solid #E4E7ED;\n    }\n  }\n</style>\n\n<style lang=\"scss\">\n.price-change-nominate-diy-confirm {\n  width: 550px;\n  line-height: 24px;\n}\n.price-change-add-sku-tip {\n  .black-stock-heath-color {\n    width: 14px;\n    height: 14px;\n    border-radius: 14px;\n    display: inline-block;\n    vertical-align: middle;\n    border: 1px solid #E2E6EC;\n  }\n}\n  .black-stock-nominate-products {\n    input[type=number] {\n    -moz-appearance:textfield;\n    }\n    input[type=number]::-webkit-inner-spin-button,\n    input[type=number]::-webkit-outer-spin-button {\n        -webkit-appearance: none;\n        margin: 0;\n    }\n    .black-stock-heath-color {\n      width: 14px;\n      height: 14px;\n      border-radius: 14px;\n      display: inline-block;\n      border: 1px solid #E2E6EC;\n    }\n    .search-products {\n      .search-row, .fill-row {\n        .el-input-number {\n          width: 100%;\n          .el-input__inner {\n            padding: 1px 1px 1px 3px;\n            text-align: left;\n          }\n        }\n      }\n    }\n    .search-input-with-select{\n      width: 520px;\n      background: #FFFFFF;\n      border: 1px solid #E2E6EC;\n      border-radius: 4px;\n      .el-select .el-input {\n        width: 101px;\n        background: #FAFBFD;\n        border-radius: 3px 0 0 3px;\n        // border: 1px solid #dcdfe6;\n        .el-input__inner{\n          &:hover{\n            border: 1px solid #dcdfe6;\n          }\n          &:focus{\n            border-color: transparent;\n          }\n        }\n      }\n      .el-input-group__prepend {\n        background-color: #fff;\n      }\n      .el-input__inner{\n        background-color: #fff;\n        border: 1px solid #E2E6EC;\n        border-top-right-radius: 4px;\n        border-bottom-right-radius: 4px;\n      }\n      .el-input__icon{\n        line-height: 30px;\n      }\n    }\n    .batch-fill-wrapper{\n      .el-form-item{\n        margin-bottom: 0;\n        .el-input__inner{\n          height: 38px;\n        }\n      }\n    }\n    .sku-type-tab {\n      margin-top: 24px;\n      &.el-tabs--card {\n        .el-tabs__header {\n          margin: 0;\n          .el-tabs__nav {\n            border: none;\n          }\n        }\n        .el-tabs__header .el-tabs__item {\n          font-weight: 600;\n          font-size: 14px;\n          border:1px solid #E4E7ED;\n          background-color:#F6F6F6;\n          margin-right:4px;\n          border-radius:4px 4px 0 0;\n        }\n        .el-tabs__header .el-tabs__item.is-active {\n          font-weight: 600;\n          border-bottom-color:#FFF;\n          background-color:#fff;\n          color:#3D6ED1;\n        }\n        .el-tabs__nav-wrap{\n          margin-bottom: -6px;\n        }\n      }\n    }\n  }\n  .popover-text-num{\n    color: #3D6ED1;\n    font-weight: 600;\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/marketingCenter/productPromotion/blackStock/skuTable.vue","messages":[{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"SkuPager\" is not in camelCase.","line":51,"column":5,"nodeType":"Property","endLine":51,"endColumn":21}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <section class=\"black-product-item-list\">\n    <el-table @selection-change=\"onSelectRows\" :span-method=\"itemGroup\" class=\"black-product-sku-list\" border :data=\"skuList\" @filter-change=\"onFilterChange\" ref=\"table\">\n      <el-table-column column-key=\"selection\" type=\"selection\" :label-width=\"`40px`\"></el-table-column>\n      <el-table-column :prop=\"schema.field\" :sortable=\"schema.sortable || false\" :width=\"schema.width || 'auto'\" :min-width=\"schema.minWidth || ''\"\n        :column-key=\"schema.columnKey || ''\" :align=\"schema.align || 'center'\" :label=\"schema.label\" :filters=\"schema.filters\" :filter-multiple=\"schema.filterMultiple\"\n        v-for=\"schema in tableSchema\" :key=\"schema.field\" :fixed=\"schema.fixed || false\">\n        <template slot-scope=\"scope\">\n          <pms-table-cell @update=\"closeUpdate\" :forceUpdate=\"update\" :renderData=\"getTableCellRender(schema, scope.row, scope.$index)\"></pms-table-cell>\n        </template>\n      </el-table-column>\n    </el-table>\n    <el-pagination\n      :current-page=\"SkuPager.pageIndex\" background layout=\"prev, pager, next, jumper\" :total.sync=\"SkuPager.total\"\n      :page-size=\"SkuPager.size\" @current-change=\"handleChangePageIndex\"\n    ></el-pagination>\n  </section>\n</template>\n\n<script>\nimport PMSTableItem from '@/components/BaseItem/tableItem';\nimport { NominateStatusList, BlackStockRejectReasonList, PriceChangeResultList, CheckPointTypeList} from '@/utils/constant';\nimport { formatValue } from '@/utils/formatParams';\nimport { roundPriceByRegion } from '@/utils/format';\nconst ColumnKeyWhiteList = ['selection', 'itemID', 'itemName', 'supplierID', 'shopID', 'limitedSellingQuantities'];\nconst IsCannelled = 11;\nconst IsExpired = 5;\nconst EditKeys = ['apply_promotion_price', 'apply_contract_price', 'discount', 'limited_selling_quantities', 'remark', 'gross_margin_check_point', 'limited_selling_quantities_check_point', 'historically_low_selling_price_check_point', 'promotion_price_check_point'];\nconst CheckPointKeys = ['gross_margin_check_point', 'limited_selling_quantities_check_point', 'historically_low_selling_price_check_point', 'promotion_price_check_point'];\nexport default {\n  data() {\n    return {\n      skuList: [],\n      update: true\n    };\n  },\n  props: {\n    region: String,\n    itemList: {\n      type: Array,\n      default: () => []\n    },\n    mode: {\n      type: String,\n      default: 'create'\n    },\n    campaignType: { // 1 product_promotion 2 CFS 3 seller discount 4 orignal price change 5、black Stock\n      type: Number,\n      default: 5\n    },\n    SkuPager: Object,\n    cacheSkuList: {\n      type: Array,\n      default: () => []\n    },\n    productsType: {\n      type: String,\n      default: '1'\n    }\n  },\n  components: {\n    'pms-table-cell': PMSTableItem\n  },\n  computed: {\n    currency() {\n      return this.$store.getters.currencyMap[this.region];\n    },\n    tableSchema() {\n      return [\n        { columnKey: 'itemID', fixed: true, field: 'item_id', label: this.$t('productId'), width: 110, align: 'left' },\n        { columnKey: 'itemName', fixed: true, field: 'item_name', label: this.$t('productName'), width: 110, align: 'left' },\n        { columnKey: 'shopID', field: 'shop_id', label: this.$t('commonShopIDOrName'), align: 'left',\n          render: (schema, row) => ['p', {}, `${row.shop_id}/${row.shop_name}`] },\n        { columnKey: 'limitedSellingQuantities', field: 'limited_selling_quantities', label: this.$t('limitedSellingQuantities'), width: 130, align: 'right',\n          render: (schema, row, index, h) => this.mode === 'detail' ? this.getLimitedSellingQuantities(row) : ['el-input-number', {\n            class: 'qty-input-number',\n            props: { value: this.getLimitedSellingQuantities(row), min: 0, controls: false, precision: 0, disabled: row.has_sync },\n            on: {\n              input: (value) => this.submitLimitedSellingQuantitiesModify(index, schema.field, value)\n            }\n          }]\n        },\n        { field: 'sku_id', label: this.$t('commonSkuID'), align: 'left' },\n        { field: 'variation_name', label: this.$t('commonVariation'), width: '120px', align: 'left', render: (schema, row) => row ? row[schema.field] : '/'},\n        { field: 'original_price', label: `${this.$t('sellerDiscountOriginalPrice')} (${this.currency})`, align: 'right', render: (schema, row) => formatValue(row[schema.field] || 0), minWidth: 130 },\n        { field: 'apply_promotion_price', label: `${this.$t('appliedPromotionPrice', {currency: this.currency})}`,\n          minWidth: '130px', align: 'right', numProps: {precision: this.region === 'MY' || this.region === 'SG' ? 2 : 0},\n          render: (schema, row, index, h) => this.mode === 'detail' ? row[schema.field] : ['el-input', {\n            class: `qty-input-number ${this.isPriceError(row) ? 'error-input' : ''}`,\n            props: { value: this.skuList[index][schema.field], type: 'number', disabled: this.getDisabledStatus(row) },\n            on: {\n              input: (value) => this.onNumberInput(index, schema, value, false),\n              change: (value) => this.changePromotionPrice(value, row, index, schema)\n            }\n          }]\n        },\n        { field: 'discount', label: this.$t('marketingCenter.discount'), width: 120, align: 'right',\n          numProps: {min: 0, max: this.region === 'TW' ? 9.9 : 99, precision: this.region === 'TW' ? 1 : 0},\n          render: (schema, row, index, h) => this.mode === 'detail' ? `${this.region !== 'TW' ? Math.round(row[schema.field]) : row.discount.toFixed(1)} ${this.region === 'TW' ? this.$t('marketingCenter.discountUnit') : '%OFF'}` : ['div', {\n            class: `nominate-discount-input-style ${this.isDisountError(row) ? 'error-input' : ''}`\n          }, [h('el-input', {\n            props: { value: this.skuList[index][schema.field], type: 'number', disabled: this.getDisabledStatus(row) },\n            on: {\n              input: (value) => this.onNumberInput(index, schema, value),\n              change: (value) => this.onDiscountChange(value, row, index, schema)\n            }\n          }), h('span', {}, this.region === 'TW' ? this.$t('marketingCenter.discountUnit') : '%OFF')]]\n        },\n        { field: 'remark', minWidth: '120px', label: this.$t('purchaseRequest.remark'), align: 'left',\n          render: (schema, row, index) => {\n            return ['create', 'edit'].includes(this.mode) ? ['el-input', {\n              props: { value: this.skuList[index][schema.field], max: 100, disabled: this.getDisabledStatus(row) },\n              on: { input: value => this.submitModify(index, schema.field, value) }\n            }] : row[schema.field];\n          }, hidden: this.productsType === '3'\n        },\n        { field: 'request_status', label: this.$t('purchaseRequest.status'), hidden: this.mode !== 'detail' || this.productsType === '3', minWidth: 134, align: 'left',\n          render: (schema, row) => {\n            if (row.request_status === 1) return row.request_status_text || '';\n            const statusItem = NominateStatusList.find(item => item.value === row[schema.field]) || {};\n            return statusItem.label || '';\n          }\n        },\n        { field: 'process_status', label: this.$t('marketingCenter.priceChangeResult'), hidden: this.mode !== 'detail' || this.productsType === '3', minWidth: 140, align: 'left',\n          render: (schema, row) => {\n            const statusItem = PriceChangeResultList.find(item => item.value === row[schema.field]) || {};\n            return statusItem.label || '';\n          }\n        },\n        { field: 'reject_reason', label: this.$t('supplier.rejectReason'), hidden: this.mode !== 'detail' || this.productsType === '3', width: 120, minWidth: 'left',\n          render: (schema, row) => {\n            const statusItem = BlackStockRejectReasonList.find(item => item.value === row[schema.field]) || {};\n            return statusItem.label || '';\n          }\n        },\n        { field: 'reject_remark', label: this.$t('marketingCenter.rejectRemark'), hidden: this.mode !== 'detail' || this.productsType === '3', minWidth: 120, align: 'left' },\n        { fixed: 'right', columnKey: 'action', field: 'action', label: this.$t('commonAction'), width: '96px', align: 'left',\n          render: (schema, row) => {\n            return ['el-button', {\n              class: 'danger-text-btn',\n              props: { type: 'text'},\n              on: { click: () => this.removeSku(row) }\n            }, this.$t('purchaseOrder.remove')];\n          }, hidden: this.mode !== 'create'\n        },\n        { fixed: 'right', columnKey: 'action', field: 'action', label: this.$t('commonAction'), width: '150px', align: 'left',\n          render: (schema, row, index, h) => this.getActionRender(schema, row, index, h),\n          hidden: this.mode !== 'edit'\n        }\n      ].filter(item => !item.hidden);\n    },\n    checkPointFilters() {\n      return CheckPointTypeList.map(({label, value}) => {\n        return {\n          text: label,\n          value\n        };\n      });\n    }\n  },\n  watch: {\n    itemList: {\n      handler(curr) {\n        const list = [];\n        curr.forEach(item => list.push(...(item.sku_list || []).map((sku, index) => ({\n          ...item,\n          ...sku,\n          apply_contract_price: sku.apply_contract_price === null ? undefined : sku.apply_contract_price || sku.contract_price,\n          limited_selling_quantities: sku.limited_selling_quantities || 0,\n          is_cancel: sku.is_cancel || false,\n          skuIndex: index\n        }))));\n        this.skuList = list;\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    isPriceError(row) {\n      return row.apply_promotion_price <= 0 || Number(row.original_price) <= Number(row.apply_promotion_price);\n    },\n    isDisountError(row) {\n      let isError = false;\n      if (this.region === 'TW') {\n        isError = row.discount > 9.9 || row.discount <= 0;\n      } else {\n        isError = row.discount > 99 || row.discount <= 0;\n      }\n      return isError;\n    },\n    onNumberInput(index, schema, value) {\n      this.$set(this.skuList[index], schema.field, value);\n    },\n    onNumberChange(props, value) {\n      value = parseFloat(value);\n      if (props) {\n        const max = props.max;\n        const min = props.min;\n        const precision = props.precision;\n        value = (max && value > max) ? max : value;\n        value = (min && value < min) ? min : value;\n        value = precision === 0 || precision ? parseFloat(value.toFixed(precision)) : value;\n      }\n      return value;\n    },\n    onDiscountChange(value, row, index, schema) {\n      value = this.onNumberChange(schema.numProps, value);\n      let result = 0;\n      if (this.region === 'TW') {\n        result = row.original_price * value / 10;\n      } else {\n        result = row.original_price * (1 - value * 0.01);\n      }\n      const afterRoundResult = roundPriceByRegion(result, this.region);\n      this.$set(this.skuList[index], 'discount', value);\n      this.$emit('modifySku', this.skuList[index], 'discount', value);\n      this.$set(this.skuList[index], 'apply_promotion_price', afterRoundResult);\n      this.$emit('modifySku', this.skuList[index], 'apply_promotion_price', afterRoundResult);\n      this.$emit('nominationRefresh', {value, row, index});\n    },\n    changePromotionPrice(value, row, index, schema) {\n      value = this.onNumberChange(schema.numProps, value);\n      const afterRoundPrice = roundPriceByRegion(value, this.region) || 0;\n      this.skuList[index].apply_promotion_price = null;\n      this.$set(this.skuList[index], 'apply_promotion_price', afterRoundPrice);\n      this.$emit('modifySku', this.skuList[index], 'apply_promotion_price', afterRoundPrice);\n      if (this.region === 'TW') {\n        this.$set(this.skuList[index], 'discount', (parseInt(afterRoundPrice * 100 / row.original_price) / 10).toFixed(1));\n        this.$emit('modifySku', this.skuList[index], 'discount', (parseInt(afterRoundPrice * 100 / row.original_price) / 10).toFixed(1));\n      } else {\n        this.$set(this.skuList[index], 'discount', (100 - parseInt(afterRoundPrice * 100 / row.original_price)));\n        this.$emit('modifySku', this.skuList[index], 'discount', (100 - parseInt(afterRoundPrice * 100 / row.original_price)));\n      }\n        this.$emit('nominationRefresh', {value, row, index});\n    },\n    onFilterChange(filters) {\n      const params = {};\n      Object.entries(filters).forEach(([key, value]) => {\n        const filterValue = value.length ? value[0] : '';\n        params[key] = filterValue;\n        CheckPointKeys.forEach(checkKey => {\n          if (checkKey !== key) {\n            this.$refs.table.clearFilter(checkKey);\n          }\n        });\n      });\n      this.$emit('getFilterItemList', params);\n    },\n    getActionRender(schema, row, index, h) {\n      if (!row.is_cancel) {\n        return (['div', {}, [\n          h('el-popover', { class: '', attrs: {trigger: 'hover', placement: 'top'}}, [\n              h('el-button', { class: 'danger-text-btn', slot: 'reference', props: { type: 'text' }, on: { click: () => this.cancelItem(row, index) }}, this.$t('commonCancel')),\n              h('span', {style: 'width: 300px'}, this.$t('sellerDiscountCancelTip'))\n            ]\n          )\n        ]]);\n      }\n      if (row.is_cancel) {\n        return (['div', {}, [\n          h('el-button', {\n            class: 'primary-text-btn',\n            props: { type: 'text' },\n            on: { click: () => this.undoItem(row, index) }\n          }, this.$t('commonUndo'))\n        ]]);\n      }\n      return (['div', {}, [\n        h('el-popover', { class: '', attrs: {trigger: 'hover', placement: 'top'}}, [\n            h('el-button', { class: 'danger-text-btn', slot: 'reference', props: { type: 'text' }, on: { click: () => this.cancelItem(row, index) }}, this.$t('commonCancel')),\n            h('span', {style: 'width: 300px'}, this.$t('sellerDiscountCancelTip'))\n          ]\n        )\n      ]]);\n    },\n    getCheckPointStatus(schemam, row, index) {\n      return (this.checkPointFilters.find(item => item.value === row[schemam.field]) || { text: '-' }).text;\n    },\n    closeUpdate() {\n      this.update = false;\n    },\n    itemGroup({ row, column, rowIndex, columnIndex }) {\n      if (ColumnKeyWhiteList.includes(column.columnKey)) {\n        const group = this.itemList.find(item => item.item_id === row.item_id) || {};\n        const groupFirstSku = (group.sku_list || [])[0] || {};\n        return row.sku_id === groupFirstSku.sku_id && row.skuIndex === 0 ? [(group.sku_list || []).length, 1] : [0, 0];\n      }\n    },\n    getGroupStatus(row) {\n      const group = this.itemList.find(item => item.item_id === row.item_id) || {};\n      return !row.is_closed && (group.sku_list || []).filter(sku => !sku.is_closed).length === 1;\n    },\n    getTableCellRender(schema, row, index) {\n      return { schema, row, index };\n    },\n    getDisabledStatus(row) {\n      return row.is_cancel || row.request_status === IsCannelled || (row.process_status === 4 && row.request_status === 3);\n    },\n    getLimitedSellingQuantities(row) {\n      return (this.skuList.filter(sku => sku.item_id === row.item_id).find(sku => sku.limited_selling_quantities) || {limited_selling_quantities: 0}).limited_selling_quantities;\n    },\n    getGrossMargin(row) {\n      if (!row.apply_contract_price || !row.apply_promotion_price) return `0`;\n      return `${(parseFloat((row.apply_promotion_price - row.apply_contract_price) / row.apply_promotion_price) * 100).toFixed(1)} %`;\n    },\n    onSelectRows(rows) {\n      const list = [];\n      const itemMap = {};\n      rows.forEach(row => {\n        if (!itemMap[row.item_id]) {\n          itemMap[row.item_id] = true;\n          row.sku_list.forEach(sku => {\n            const index = this.skuList.findIndex(item => item.sku_id === sku.sku_id && item.item_id === row.item_id);\n            if (index !== -1) list.push(this.skuList[index]);\n          });\n        }\n      });\n      this.$emit('selectRows', list);\n    },\n    removeItem(row) {\n      this.$emit('removeItem', row.item_id);\n    },\n    removeSku(row) {\n      this.$emit('removeSku', row);\n    },\n    cancelItem(row, index) {\n      const cacheSku = this.cacheSkuList.find(sku => sku.sku_id === row.sku_id && row.request_status === sku.request_status);\n      EditKeys.forEach(key => {\n        if (key !== 'limited_selling_quantities') { // limited_selling_quantities 不需要重置\n          this.skuList[index][key] = cacheSku ? cacheSku[key] : this.skuList[index][key];\n          this.$emit('modifySku', this.skuList[index], key, cacheSku ? cacheSku[key] : this.skuList[index][key]);\n        }\n      });\n      this.skuList[index]['is_cancel'] = true;\n      this.$emit('modifySku', this.skuList[index], 'is_cancel', true);\n    },\n    undoItem(row, index) {\n      const field = 'is_cancel';\n      this.$emit('modifySku', this.skuList[index], field, false);\n      row.is_cancel = false;\n    },\n    submitLimitedSellingQuantitiesModify(index, field, value) {\n      const item_id = this.skuList[index]['item_id'];\n      this.skuList.forEach((sku, index) => {\n        if (sku.item_id === item_id && sku.request_status !== IsCannelled && sku.request_status !== IsExpired) {\n          this.submitModify(index, 'limited_selling_quantities', value);\n        }\n      });\n    },\n    submitModify(index, field, value, isUpdate = true) {\n      this.$set(this.skuList[index], field, value);\n      if (isUpdate) { this.$emit('modifySku', this.skuList[index], field, value); }\n    },\n    handleChangePageIndex(index) {\n      this.$emit('getItemList', index);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n  .black-product-sku-list {\n    .el-table__body-wrapper {\n      position: static;\n    }\n    .input-cell {\n      display: flex;\n      width: 100%;\n      align-items: center;\n      .cell-value {\n        flex: 1;\n        text-align: right;\n      }\n      .cell-unit {\n        width: 40px;\n        padding-left: 4px;\n        text-align: left;\n      }\n    }\n    .el-table__column-filter-trigger {\n      line-height: 18px;\n    }\n    .primary-text-btn {\n      color: #3d6ed1;\n      margin-right: 8px;\n    }\n    .danger-text-btn {\n      color: #f56c6c;\n    }\n    input[type=number] {\n        -moz-appearance:textfield;\n    }\n    input[type=number]::-webkit-inner-spin-button,\n    input[type=number]::-webkit-outer-spin-button {\n        -webkit-appearance: none;\n        margin: 0;\n    }\n  }\n</style>\n\n<style lang=\"scss\" scoped>\n  .error-input {\n    &/deep/ .el-input__inner {\n      border: 1px solid #FF4742;\n      background: white;\n    }\n  }\n  .black-product-item-list {\n    text-align: center;\n  }\n  .black-product-sku-list {\n    margin: 20px 0;\n  }\n  .danger-list-btn {\n    margin-left: 0px;\n    background-color: #f56c6c;\n  }\n  .qty-input-number {\n    width: 100px;\n  }\n  .nominate-discount-input-style {\n    width: 110px;\n    height: 28px;\n    margin: 2px 0;\n    vertical-align: middle;\n    overflow: hidden;\n    text-align: left;\n    border: 1px solid #c2c2c2;\n    display: flex;\n    &/deep/ span {\n      line-height: 26px;\n      border-left: 1px solid#c2c2c2;\n      padding: 0 3px;\n      flex-shrink: 0;\n    }\n    color: #666;\n    &.error-input {\n      border: 1px solid #FF4742;\n    }\n    &/deep/.el-input-number--medium {\n      width: 60px;\n      height: 27px;\n      line-height: 27px;\n      margin-right: 6px;\n      border: none;\n      border-right:1px solid #c2c2c2;\n    }\n    &/deep/.el-input__inner {\n      border: none;\n      background: transparent;\n    }\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/marketingCenter/productPromotion/campaign.vue","messages":[{"ruleId":"vue/no-deprecated-filter","severity":2,"message":"Filters are deprecated.","line":14,"column":38,"nodeType":"VFilterSequenceExpression","messageId":"noDeprecatedFilter","endLine":14,"endColumn":68},{"ruleId":"vue/no-unused-components","severity":2,"message":"The \"tabsHeader\" component has been registered but not used.","line":79,"column":31,"nodeType":"Property","endLine":79,"endColumn":41},{"ruleId":"vue/no-unused-components","severity":2,"message":"The \"ListView\" component has been registered but not used.","line":79,"column":83,"nodeType":"Property","endLine":79,"endColumn":91}],"errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n    <el-container class='promotion-wrapper pms-ui'>\n      <page-header :createHidden=\"!canOperate\" :pageTitle=\"$t('menuCampaignPromotion')\" :createBtnText=\"$t('newCampaign')\" @onCreate=\"onCreate\"></page-header>\n      <el-main class=\"main-wrapper\">\n        <search-form :moduleName=\"moduleName\" :form=\"searchForm\" :searchSchemaFields=\"searchSchemaFields\" @modify=\"modifyForm\" @search=\"onResetPageNoSearch\" :firstShowCount=\"7\"></search-form>\n        <div class=\"split-line\"></div>\n        <el-table :data='tableList' border v-loading=\"loading\" @row-click=\"rowClick\" ref=\"multipleTable\">\n          <el-table-column prop=\"region\" :label=\"$t('commonRegion')\" align=\"left\"></el-table-column>\n          <el-table-column prop=\"campaign_name\" :label=\"$t('commonCampaignName')\" align=\"left\"></el-table-column>\n          <el-table-column :label=\"$t('promotionCampaignTime')\" min-width=\"170px\" align=\"left\">\n            <template slot-scope=\"scope\">\n              <p class=\"table-time-style\">{{moment(scope.row.campaign_start_time_str).format('YYYY-MM-DD HH:mm') || ''}}</p>\n              <p class=\"table-time-style\">{{moment(scope.row.campaign_end_time_str).format('YYYY-MM-DD HH:mm') || ''}}</p>\n              <p class=\"time-zone\">{{scope.row.region | getTimeZone}}</p>\n            </template>\n          </el-table-column>\n          <el-table-column align=\"left\"  :label=\"$t('commonStatus')\" width=\"100px\">\n            <template slot-scope=\"scope\">\n              <p>{{getSattus(scope.row.campaign_status)}}</p>\n            </template>\n          </el-table-column>\n          <el-table-column :label=\"$t('commonLabelCreator')\" prop=\"creator\" align=\"left\" min-width=\"170\"></el-table-column>\n          <el-table-column :label=\"$t('userRole.userList.action')\" width=\"240px\" column-key=\"action\" align=\"left\">\n            <template slot-scope=\"scope\">\n              <el-button type=\"text\" class=\"text-blue-btn\" @click=\"showHistoryDialog(scope.row)\">{{$t('commonHistory')}}</el-button>\n              <el-button type=\"text\" class=\"cancel-btn\" v-if=\"canOperate && scope.row.can_cancel\" @click=\"cancelCampaign(scope.row)\">{{$t('commonCancel')}}</el-button>\n            </template>\n          </el-table-column>\n          <el-table-column :label=\"$t('marketingCenter.nominate')\" width=\"108px\" column-key=\"nomination\" v-if=\"canNomiation\" align=\"left\">\n            <template slot-scope=\"scope\">\n                <el-popover\n                  :disabled=\"hasConfigFlow\"\n                  placement=\"top-start\"\n                  width=\"200\"\n                  trigger=\"hover\"\n                  v-if=\"canShowNomination(scope.row)\"\n                  :content=\"$t('PriceChangeNominatePopOver')\">\n                  <el-button\n                    slot=\"reference\"\n                    :class=\"hasConfigFlow ? 'list-btn success-btn' : 'list-btn success-btn disable-btn'\"\n                    @click=\"onNomination(scope.row.id)\">{{$t('marketingCenter.nominate')}}</el-button>\n                </el-popover>\n            </template>\n          </el-table-column>\n          <el-table-column column-key=\"viewNomination\" align=\"left\" width=\"160\">\n            <template slot-scope=\"scope\">\n              <el-button type=\"text\" class=\"list-btn text-blue-btn\" v-if=\"scope.row.has_nomination\" @click=\"onViewNomination(scope.row.id)\">{{$t('marketingCenter.viewNomination')}}</el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n        <section class='pagination-center'>\n          <el-pagination background layout=\"sizes, prev, pager, next\" :current-page='pager.page_no' :page-sizes='[10, 20, 50, 100]' :total.sync=\"total\"\n          :page-size=\"pager.count\" @size-change='handleSizeChange' @current-change=\"handleChangePage\"></el-pagination>\n        </section>\n      </el-main>\n      <history-diaglog :visible=\"historyVisible\" :activeID=\"activeData.id || 0\" @close=\"closeHistoryDialog\" ></history-diaglog>\n      <create-dialog :create_mode=\"create_mode\" :modifyData=\"activeData\" @refresh=\"onResetPageNoSearch\" :visible=\"createVisible\" :canOperate=\"canOperate\"\n      :campaignType=\"CampaignType\" :hasSubType=\"true\" :region=\"searchForm.region\" @close=\"() => onSetCreateVisible(false)\" @modify=\"modifyDetail\"/>\n    </el-container>\n</template>\n\n<script>\nimport { formatParams } from '@/utils/formatParams';\nimport { commonFetchAction } from '@/utils';\nimport { MarketingCampaignTypeList, Permission, ProductPromotionCampaignStatusList, TimeZoneByCountry } from '@/utils/constant';\nimport { getCampaignList, cancelCampaign } from '@/api/marketingCenter';\nimport createDialog from '@/components/marketingCenter/createDialog/promotion';\nimport historyDiaglog from '@/components/marketingCenter/historyDialog/promotion';\nimport tabsHeader from '@/components/tabsHeader';\nimport moment from 'moment';\nimport { hasPermission } from '@/utils/permission';\nimport PageHeader from '@/components/marketingCenter/pageHeader';\nimport SearchForm from '@/components/marketingCenter/searchForm/Index';\nimport ListView from '@/components/ApproveList/list';\nimport { checkHasConfigFlow } from '@/api/nominate';\nconst CampaignType = 1;\nconst moduleName = 'campaign';\nexport default {\n  components: { createDialog, tabsHeader, historyDiaglog, PageHeader, SearchForm, ListView },\n  data() {\n    return {\n      moduleName,\n      canOperate: false,\n      canNomiation: false,\n      createVisible: false,\n      hasConfigFlow: false,\n      create_mode: 2, // 0-create, 1-modify, 2-view,\n      CampaignType,\n      searchForm: {\n        campaign_name: '',\n        campaign_start_time_str: '',\n        campaign_end_time_str: '',\n        region: this.$store.getters.country,\n        campaign_time: [],\n        campaign_status: ''\n      },\n      loading: false,\n      pager: {\n        page_no: 1,\n        count: 10\n      },\n      total: 0,\n      activeID: '',\n      tableList: [],\n      activeData: {},\n      historyVisible: false\n    };\n  },\n  filters: {\n    getTimeZone(region) {\n      return `${TimeZoneByCountry[region]}00`;\n    }\n  },\n  computed: {\n    countryList() {\n      return [...new Set([...this.$store.getters.countryList.map(item => item.country)])].map(item => ({ value: item, label: item }));\n    },\n    searchSchemaFields() {\n      return ['region', 'campaign_name', 'creator', 'campaign_status', 'campaign_time'];\n    },\n    tabStyle() {\n      return {\n        height: '60px'\n      };\n    }\n  },\n  methods: {\n    moment,\n    modifyForm(field, value) {\n      this.$set(this.searchForm, field, value);\n      if (field === 'campaign_time') {\n        this.onCampaignTimeChange(value);\n      }\n    },\n    getSattus(status) {\n      const label = (ProductPromotionCampaignStatusList.find(item => item.value === status) || {}).label;\n      return this.$t(label);\n    },\n    checkHasConfigFlow(region) {\n      checkHasConfigFlow({region}).then(res => {\n        if (res.retcode === 0) {\n          this.hasConfigFlow = res.data.has_approval_flow_config;\n        } else {\n          this.$message.error(res.info);\n        }\n      });\n    },\n    onCampaignTimeChange(value) {\n      this.searchForm.campaign_start_time_str = value ? value[0] : '';\n      this.searchForm.campaign_end_time_str = value ? value[1] : '';\n      this.onResetPageNoSearch();\n    },\n    canShowNomination(row) {\n      return row.can_nominate;\n    },\n    modifyDetail() {\n      this.create_mode = 1;\n    },\n    onViewNomination(id = 0) {\n      this.$store.commit('setSearchForm', {\n        module: moduleName,\n        form: { ...this.searchForm, ...this.pager },\n        field: 'searchParams'\n      });\n      this.$router.push(`/admin/marketingCenter/nominateProducts/detail/${id}`);\n    },\n    onNomination(id = 0) {\n      if (!this.hasConfigFlow) {\n        return false;\n      }\n      this.$store.commit('setSearchForm', {\n        module: moduleName,\n        form: { ...this.searchForm, ...this.pager },\n        field: 'searchParams'\n      });\n      this.$router.push(`/admin/marketingCenter/nominateProducts/create/${id}`);\n    },\n    showHistoryDialog(row) {\n      this.activeData = row;\n      this.historyVisible = true;\n    },\n    closeHistoryDialog() {\n      this.historyVisible = false;\n    },\n    cancelCampaign(row) {\n      this.$confirm(this.$t('cancelCampaignTip'), this.$t('commonTips'), {\n        confirmButtonText: this.$t('commonConfirm'),\n        cancelButtonText: this.$t('commonClose')\n      }).then(({ value }) => {\n        const params = {\n          id: row.id\n        };\n        cancelCampaign(params).then((res) => {\n          if (res && res.retcode === 0) {\n            this.$message({\n              type: 'success',\n              message: 'Cancel Sucessfully'\n            });\n            this.onSearch();\n          } else {\n            this.$message({\n              type: 'error',\n              message: res.info\n            });\n          }\n        }).catch(e => {\n          this.$message({\n            type: 'error',\n            message: e\n          });\n        });\n      }).catch(e => {});\n    },\n    formatType(type) {\n      return (MarketingCampaignTypeList.find(item => item.value === type) || { label: '' }).label;\n    },\n    onCreate() {\n      this.activeData = {};\n      this.create_mode = 0;\n      this.onSetCreateVisible(true);\n    },\n    onSetCreateVisible(flag) {\n      this.createVisible = flag;\n    },\n    onReset() {\n      this.searchForm.region = this.$store.getters.country;\n      this.searchForm.campaign_name = '';\n      this.searchForm.campaign_start_time_str = '';\n      this.searchForm.campaign_end_time_str = '';\n      this.searchForm.campaign_time = [];\n    },\n    handleChangePage(page_no) {\n      this.pager.page_no = page_no;\n      this.onSearch();\n    },\n    handleSizeChange(count) {\n      this.pager.count = count;\n      this.pager.page_no = 1;\n      this.onSearch();\n    },\n    onResetPageNoSearch() {\n      this.pager.page_no = 1;\n      this.onSearch();\n    },\n    async onSearch() {\n      const params = {\n        ...this.pager,\n        ...this.searchForm,\n        campaign_type: CampaignType\n      };\n      this.checkHasConfigFlow(params.region);\n      this.loading = true;\n      try {\n        const res = await getCampaignList(formatParams(params));\n        commonFetchAction(res, (data) => {\n          this.tableList = data.campaign_list || [];\n          this.total = data.total || 0;\n          this.loading = false;\n        });\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n        this.loading = false;\n      }\n    },\n    onView(row) {\n      this.activeData = row;\n      this.create_mode = 2;\n      this.createVisible = true;\n    },\n    rowClick(row, column, event) {\n      if (!['viewNomination', 'action', 'nomination'].includes(column.columnKey)) {\n        this.onView(row);\n      }\n    },\n    // 获取缓存的search\n    getCacheConditionObj() {\n      const cacheConditionObj = this.$store.getters.searchForm[moduleName];\n      if (\n        cacheConditionObj &&\n        cacheConditionObj.searchParams\n      ) {\n        const searchParams = cacheConditionObj.searchParams;\n        this.pager.count = searchParams.count;\n        this.pager.page_no = searchParams.page_no;\n        this.searchSchemaFields.forEach(key => {\n          if (searchParams[key]) {\n            this.searchForm[key] = searchParams[key];\n          }\n        });\n      }\n    }\n\n  },\n  created() {\n    this.canOperate = hasPermission(Permission.PROMOTION_CAMPAIGN_PROCESS);\n    this.canNomiation = hasPermission(Permission.PROMOTION_CAMPAIGN_NOMINATE);\n    this.getCacheConditionObj();\n    this.onSearch();\n  }\n};\n</script>\n\n<style scoped lang=\"scss\">\n  .promotion-wrapper{\n    display: block;\n    .main-wrapper{\n      width: 100%;\n      .split-line{\n        border-top: #f1f1f1 solid 2px;\n        padding: 16px 0;\n      }\n    }\n    .pagination-center {\n      display: flex;\n      justify-content: center;\n      margin-top: 20px;\n    }\n    .right-action-btn {\n      float: right;\n      margin-bottom: 16px;\n    }\n    .list-btn{\n      font-size: 14px;\n      width: auto;\n      min-width: 70px;\n      padding-left: 10px;\n      padding-right: 10px;\n    }\n    .success-btn{\n      color: #3D6ED1;\n      background-color:transparent;\n      border: 1px solid #3D6ED1;\n      cursor: pointer;\n    }\n    .disable-btn {\n      opacity: .5;\n      cursor: not-allowed;\n    }\n    .clear-btn{\n      color: #333333;\n      background: #FFFFFF;\n      border: 1px solid #D9D9D9;\n      border-radius: 2px;\n    }\n  }\n</style>\n<style lang=\"scss\">\n.promotion-wrapper{\n  .small-date-timer{\n    max-width: 175px;\n    width: calc(100% - 180px);\n    min-width: 105px;\n    .el-date-editor.el-input, .el-date-editor.el-input__inner{\n      width: 100%;\n    }\n  }\n  .table-time-style {\n    display: inline-block;\n  }\n  .time-zone{\n    font-family: Helvetica;\n    font-size: 12px;\n    line-height: 21px;\n    color: #999999;\n  }\n  .list-btn{\n    font-size: 14px;\n    width: auto;\n    min-width: 70px;\n    padding-left: 10px;\n    padding-right: 10px;\n  }\n  .success-btn {\n    color: #3D6ED1;\n    background-color:transparent;\n    border: 1px solid #3D6ED1;\n  }\n  .text-blue-btn{\n    background-color:transparent;\n    color: #3D6ED1;\n  }\n  .cancel-btn {\n    color: #F56C6C;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/marketingCenter/productPromotion/layout.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/marketingCenter/sellerDiscount.vue","messages":[{"ruleId":"vue/no-deprecated-filter","severity":2,"message":"Filters are deprecated.","line":34,"column":38,"nodeType":"VFilterSequenceExpression","messageId":"noDeprecatedFilter","endLine":34,"endColumn":68},{"ruleId":"vue/no-unused-components","severity":2,"message":"The \"tabsHeader\" component has been registered but not used.","line":111,"column":31,"nodeType":"Property","endLine":111,"endColumn":41}],"errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n    <el-container class='seller-discount-wrapper pms-ui'>\n      <page-header :createHidden=\"!canOperate\" :pageTitle=\"$t('sellerDiscountLabel')\" :createBtnText=\"$t('newDiscount')\" @onCreate=\"onCreate\"></page-header>\n      <el-main class=\"main-wrapper\">\n        <search-form :moduleName=\"moduleName\" :form=\"searchForm\" :searchSchemaFields=\"searchSchemaFields\" @modify=\"modifyForm\" @search=\"onResetPageNoSearch\"></search-form>\n        <div class=\"split-line\"></div>\n        <el-table :data='tableList' border v-loading=\"loading\" @row-click=\"rowClick\">\n          <el-table-column prop=\"region\" :label=\"$t('commonRegion')\"></el-table-column>\n          <el-table-column prop=\"shop_name\" :label=\"$t('approvalFlow.shopName')\"></el-table-column>\n          <el-table-column :label=\"$t('commonVendorSiteIDOrName')\">\n            <template slot-scope=\"scope\">\n              <el-popover\n                v-if=\"scope.row.supplier_list.length > 3\"\n                placement=\"top-start\"\n                trigger=\"hover\">\n                <p v-for=\"item in scope.row.supplier_list\" :key=\"item.supplier_id\">{{item.supplier_id}} / {{item.supplier_name}}</p>\n                <div slot=\"reference\" >\n                  <p v-for=\"item in scope.row.supplier_list.slice(0,3)\" :key=\"item.supplier_id\">{{item.supplier_id}} / {{item.supplier_name}}</p>\n                </div>\n              </el-popover>\n              <template v-else>\n                <template v-if=\"scope.row.supplier_list.length\">\n                  <p v-for=\"item in scope.row.supplier_list\" :key=\"item.supplier_id\">{{item.supplier_id}} / {{item.supplier_name}}</p>\n                </template>\n                <span v-else>/</span>\n              </template>\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"campaign_name\" :label=\"$t('marketingCenter.discountName')\"></el-table-column>\n          <el-table-column :label=\"$t('marketingCenter.discountTime')\" min-width=\"150px\" style=\"max-width:260px;\">\n            <template slot-scope=\"scope\">\n              <p class=\"table-time-style\">{{moment(scope.row.campaign_start_time_str).format('YYYY-MM-DD HH:mm') || ''}} ～</p>\n              <p class=\"table-time-style\">{{moment(scope.row.campaign_end_time_str).format('YYYY-MM-DD HH:mm') || ''}}</p>\n              <p class=\"time-zone\">{{scope.row.region | getTimeZone}}</p>\n            </template>\n          </el-table-column>\n          <el-table-column :label=\"$t('commonLabelCreator')\" prop=\"creator\"></el-table-column>\n          <el-table-column align=\"center\"  :label=\"$t('sellerStatus')\" width=\"100px\">\n            <template slot-scope=\"scope\">\n              <p>{{scope.row.campaign_status=== 1? 'Normal' : 'Cancelled'}}</p>\n            </template>\n          </el-table-column>\n          <el-table-column align=\"left\" :label=\"$t('userRole.userList.action')\" width=\"170px\" column-key=\"action\">\n            <template slot-scope=\"scope\">\n              <el-button type=\"primary\" class=\"list-btn text-blue-btn\" @click=\"showHistoryDialog(scope.row)\">{{$t('userRole.userList.history')}}</el-button>\n              <el-popover\n                placement=\"bottom\"\n                popper-class=\"seller-discount-inner-more-style\"\n                width=\"130px\"\n                v-model=\"scope.row.isShowMoreVisible\"\n                v-if=\"canOperate && (scope.row.can_cancel || scope.row.campaign_status === 1)\"\n                >\n                <div style=\"text-align: center; margin: 0\">\n                  <button class=\"list-btn dup-btn\" v-if=\"scope.row.campaign_status === 1\" @click=\"duplicateSellerDiscount(scope.row)\">{{$t('sellerDiscountActionMoreDuplicate')}}</button>\n                  <button class=\"list-btn cancel-btn\" v-if=\"scope.row.can_cancel\" @click=\"cancelSellerDiscount(scope.row)\">{{$t('sellerDiscountActionMoreCancel')}}</button>\n                </div>\n                <el-button slot=\"reference\" class=\"list-btn text-blue-btn btn-middle-line\">{{$t('sellerDiscountActionMore')}}</el-button>\n              </el-popover>\n            </template>\n          </el-table-column>\n          <el-table-column :label=\"$t('marketingCenter.nominate')\" width=\"120px\" column-key=\"nomination\" v-if=\"canNomiation\">\n            <template slot-scope=\"scope\">\n              <el-popover\n                  placement=\"top-start\"\n                  width=\"200\"\n                  v-if=\"canShowNomination(scope.row)\"\n                  trigger=\"hover\"\n                  :disabled=\"hasConfigFlow\"\n                  :content=\"$t('PriceChangeNominatePopOver')\">\n              <el-button\n              slot=\"reference\"\n              :class=\"hasConfigFlow ? 'list-btn success-btn' : 'list-btn success-btn disable-btn'\"\n              @click=\"onNomination(scope.row)\">{{$t('marketingCenter.nominate')}}</el-button>\n              </el-popover>\n            </template>\n          </el-table-column>\n          <el-table-column v-if=\"canViewNomiation\" column-key=\"viewNomination\">\n            <template slot-scope=\"scope\" >\n               <el-button class=\"list-btn text-blue-btn\" v-if=\"scope.row.has_nomination\" @click=\"onViewNomination(scope.row.id)\">{{$t('marketingCenter.viewNomination')}}</el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n        <section class='pagination-center'>\n          <el-pagination background layout=\"sizes, prev, pager, next\" :current-page='pager.page_no' :page-sizes='[10, 20, 50, 100]' :total.sync=\"total\" :page-size=\"pager.count\" @size-change='handleSizeChange' @current-change=\"handleChangePage\"></el-pagination>\n        </section>\n      </el-main>\n      <history-diaglog :visible=\"historyVisible\" :activeID=\"activeData.id || 0\" @close=\"closeHistoryDialog\" ></history-diaglog>\n      <create-dialog :create_mode=\"create_mode\" :modifyData=\"activeData\" @refresh=\"onResetPageNoSearch\" :visible=\"createVisible\"\n        :region=\"searchForm.region\" @close=\"() => onSetCreateVisible(false)\" @modify=\"modifyDetail\" :canOperate=\"canOperate\" />\n      <cancel-dialog :isVisible.sync=\"isCancelVisible\" :data=\"oprateRow\" @sure-cancel=\"sureCancel\"></cancel-dialog>\n    </el-container>\n</template>\n\n<script>\nimport { formatParams } from '@/utils/formatParams';\nimport { commonFetchAction } from '@/utils';\nimport { Permission, TimeZoneByCountry } from '@/utils/constant';\nimport { hasPermission } from '@/utils/permission';\nimport { getSellerDiscountList, cancelSellerDiscount } from '@/api/marketingCenter';\nimport createDialog from '@/components/marketingCenter/createDialog/sellerDiscount';\nimport historyDiaglog from '@/components/marketingCenter/historyDialog/sellerDiscount';\nimport cancelDialog from '@/components/marketingCenter/cancelDialog';\nimport tabsHeader from '@/components/tabsHeader';\nimport { checkHasConfigFlow } from '@/api/nominate';\nimport moment from 'moment';\nimport PageHeader from '@/components/marketingCenter/pageHeader';\nimport SearchForm from '@/components/marketingCenter/searchForm/Index';\nconst moduleName = 'sellerDiscount';\n\nexport default {\n  components: { createDialog, tabsHeader, historyDiaglog, SearchForm, cancelDialog, PageHeader },\n  data() {\n    return {\n      moduleName,\n      canOperate: false,\n      canViewNomiation: false,\n      canNomiation: false,\n      createVisible: false,\n      isCancelVisible: false,\n      hasConfigFlow: false,\n      create_mode: 2, // 0-create, 1-modify, 2-view, 3-duplicate\n      searchForm: {\n        region: this.$store.getters.country,\n        campaign_name: '',\n        shop_id: '',\n        campaign_status: '',\n        campaign_start_time_str: '',\n        campaign_end_time_str: '',\n        campaign_time: [],\n        supplier_id: '',\n        cacheSupplier: ''\n      },\n      shopId: '',\n      loading: false,\n      pager: {\n        page_no: 1,\n        count: 10\n      },\n      total: 20,\n      tableList: [],\n      activeData: {},\n      oprateRow: {},\n      historyVisible: false,\n      shopList: []\n    };\n  },\n  filters: {\n    getTimeZone(region) {\n      return `${TimeZoneByCountry[region]}00`;\n    }\n  },\n  computed: {\n    countryList() {\n      return [...new Set([...this.$store.getters.countryList.map(item => item.country)])];\n    },\n    searchSchemaFields() {\n      return ['region', 'shop_id', 'shop_name', 'campaign_name', 'creator', 'campaign_status', 'campaign_time', 'supplier_id'];\n    },\n    tabStyle() {\n      return {\n        height: '60px'\n      };\n    },\n    searchActionSchema() {\n      return [\n        { type: 'clear', hasPermission: true },\n        { type: 'search', hasPermission: true }\n      ];\n    }\n  },\n  methods: {\n    moment,\n    modifyForm(field, value) {\n      this.$set(this.searchForm, field, value);\n      this.$nextTick(() => {\n        if (['region', 'shop_name', 'campaign_status', 'campaign_time', 'supplier_id'].includes(field)) {\n          this.onResetPageNoSearch();\n        }\n      });\n    },\n    checkHasConfigFlow(region) {\n      checkHasConfigFlow({region}).then(res => {\n        if (res.retcode === 0) {\n          this.hasConfigFlow = res.data.has_approval_flow_config;\n        } else {\n          this.$message.error(res.info);\n        }\n      });\n    },\n    canShowNomination(row) {\n      return row.can_nominate;\n    },\n    modifyDetail() {\n      this.create_mode = 1;\n    },\n    onViewNomination(id = 0) {\n      this.$store.commit('setSearchForm', {\n        module: moduleName,\n        form: { ...this.searchForm, ...this.pager },\n        field: 'searchParams'\n      });\n      this.$router.push(`/admin/marketingCenter/nominateProducts/detail/${id}`);\n    },\n    onNomination(row) {\n      if (!this.hasConfigFlow) {\n        return false;\n      }\n      this.$router.push(`/admin/marketingCenter/nominateProducts/create/${row.id}`);\n    },\n    showHistoryDialog(row) {\n      this.activeData = row;\n      this.historyVisible = true;\n    },\n    closeHistoryDialog() {\n      this.historyVisible = false;\n    },\n    sureCancel(params) {\n      cancelSellerDiscount(params).then((res) => {\n        if (res && res.retcode === 0) {\n          this.$message({\n            type: 'success',\n            message: 'Delete Sucessfully'\n          });\n          this.isCancelVisible = false;\n          this.onSearch();\n        } else {\n          this.$message({\n            type: 'error',\n            message: res.info\n          });\n        }\n      }).catch(e => {\n        this.$message({\n          type: 'error',\n          message: e\n        });\n      });\n    },\n    cancelSellerDiscount(row) {\n      this.isCancelVisible = true;\n      this.oprateRow = row;\n    },\n    onCreate() {\n      this.activeData = {};\n      this.create_mode = 0;\n      this.onSetCreateVisible(true);\n    },\n    onSetCreateVisible(flag) {\n      this.createVisible = flag;\n    },\n    onReset() {\n      this.$refs.searchForm.onReset();\n      this.searchForm.region = this.$store.getters.country;\n      this.searchForm.campaign_name = '';\n      this.searchForm.shop_id = '';\n      this.searchForm.campaign_start_time_str = '';\n      this.searchForm.campaign_end_time_str = '';\n      this.shopId = '';\n    },\n    handleChangePage(page_no) {\n      this.pager.page_no = page_no;\n      this.onSearch();\n    },\n    handleSizeChange(count) {\n      this.pager.count = count;\n      this.pager.page_no = 1;\n      this.onSearch();\n    },\n    onselectChange(field, value) {\n\n    },\n    onResetPageNoSearch(searchForm) {\n      if (searchForm) {\n        this.searchForm = searchForm;\n        this.searchForm.campaign_start_time_str = searchForm.discount_time ? searchForm.discount_time[0] : '';\n        this.searchForm.campaign_end_time_str = searchForm.discount_time ? searchForm.discount_time[1] : '';\n      }\n      this.pager.page_no = 1;\n      this.onSearch();\n    },\n    async onSearch() {\n      const params = formatParams({\n        ...this.pager,\n        ...this.searchForm,\n        campaign_start_time_str: this.searchForm.campaign_time ? this.searchForm.campaign_time[0] : '',\n        campaign_end_time_str: this.searchForm.campaign_time ? this.searchForm.campaign_time[1] : ''\n      });\n      this.checkHasConfigFlow(params.region);\n      if (params.campaign_status === 0) {\n        this.$delete(params, 'campaign_status');\n      }\n      if (params.shop_id) {\n        if (isNaN(parseInt(params.shop_id))) {\n          return this.$message({ type: 'error', message: 'Shop ID must be number' });\n        } else {\n          params.shop_id = parseInt(params.shop_id);\n        }\n      }\n      this.loading = true;\n      try {\n        const res = await getSellerDiscountList(params);\n        commonFetchAction(res, (data) => {\n          this.tableList = data.campaign_list || [];\n          this.total = data.total || 0;\n          this.tableList.forEach(element => {\n            element.status = 'Cancelled';\n            element.isShowMoreVisible = false;\n          });\n          this.loading = false;\n        });\n        this.loading = false;\n      } catch (e) {\n        this.loading = false;\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    onView(row) {\n      this.activeData = row;\n      this.create_mode = 2;\n      this.createVisible = true;\n    },\n    rowClick(row, column, event) {\n      if (!['viewNomination', 'action', 'nomination'].includes(column.columnKey)) {\n        this.onView(row);\n      }\n    },\n    getSchemaConfig(item) {\n      const field = item.field || item;\n      const schema = this.searchSchemaMap[field] || {};\n      const config = typeof item !== 'object' ? {} : item;\n      let disabled = false;\n      if (Array.isArray(schema.disabledCondition)) {\n        schema.disabledCondition.find(item => {\n          if (item.disabledValue.includes(this.searchForm[item.field])) {\n            disabled = true;\n          }\n        });\n      }\n      return {\n        ...schema,\n        ...config,\n        field,\n        options:\n          typeof schema.options === 'function' ? schema.options(this[schema.optionsField]) : schema.options,\n        change: this[schema.change],\n        label: this.$t(item.label || schema.label),\n        hidden:\n          typeof schema.hidden === 'function' ? schema.hidden(this[schema.hiddenField]) : !!this[schema.hiddenField],\n        disabled: item.disabled || disabled\n      };\n    },\n    // 复制活动\n    duplicateSellerDiscount(row) {\n      this.activeData = {...row, campaign_start_time_str: '', campaign_end_time_str: ''};\n      this.create_mode = 3;\n      this.createVisible = true;\n    },\n    // 获取缓存的search\n    getCacheConditionObj() {\n      const cacheConditionObj = this.$store.getters.searchForm[moduleName];\n      if (\n        cacheConditionObj &&\n        cacheConditionObj.searchParams\n      ) {\n        const searchParams = cacheConditionObj.searchParams;\n        this.pager.count = searchParams.count;\n        this.pager.page_no = searchParams.page_no;\n        this.searchSchemaFields.forEach(key => {\n          if (searchParams[key]) {\n            this.searchForm[key] = searchParams[key];\n          }\n        });\n      }\n    }\n  },\n  created() {\n    this.canOperate = hasPermission(Permission.SELLER_DISCOUNT_PROCESS); // 包含create modify cancel\n    this.canViewNomiation = hasPermission(Permission.SELLER_DISCOUNT_VIEW); // 包含（view 列表, view nominate, export ）\n    this.canNomiation = hasPermission(Permission.SELLER_DISCOUNT_NOMINATE);\n    this.getCacheConditionObj();\n    this.onSearch();\n  }\n};\n</script>\n\n<style scoped lang=\"scss\">\n  .seller-discount-wrapper{\n    display: block;\n    .main-wrapper{\n      width: 100%;\n      .split-line{\n        border-top: #f1f1f1 solid 2px;\n        padding: 16px 0;\n      }\n    }\n    .pagination-center {\n      display: flex;\n      justify-content: center;\n      margin-top: 20px;\n    }\n    .right-action-btn {\n      float: right;\n    }\n    .table-time-style {\n      display: inline-block;\n    }\n    .time-zone{\n      font-family: Helvetica;\n      font-size: 12px;\n      line-height: 21px;\n      color: #999999;\n    }\n    .list-btn{\n      font-size: 14px;\n      width: auto;\n      min-width: 70px;\n      padding-left: 10px;\n      padding-right: 10px;\n    }\n    .text-blue-btn {\n      margin:0;\n      background: none;\n      border: none;\n      color:rgb(70,112,202)\n    }\n    .btn-middle-line{\n      border-left:1px solid #BBB;\n      border-radius:0;\n    }\n    .success-btn{\n      border: 1px solid rgb(70,112,202);\n      background:none;\n      color: rgb(70,112,202);\n    }\n    .disable-btn {\n      opacity: .5;\n      cursor: not-allowed;\n    }\n  }\n</style>\n<style lang=\"scss\">\n.seller-discount-wrapper{\n  .small-date-timer{\n    max-width: 175px;\n    width: calc(100% - 180px);\n    min-width: 105px;\n    .el-date-editor.el-input, .el-date-editor.el-input__inner{\n      width: 100%;\n    }\n  }\n\n}\n.seller-discount-inner-more-style{\n  width: 100px;\n  padding: 0;\n  min-width: 100px !important;\n.cancel-btn,.dup-btn{\n      display: block;\n      color: red;\n      background: none;\n      border:none;\n      margin: 10px;\n      cursor: pointer;\n    }\n    .dup-btn{\n      color: rgb(70,112,202);\n    }\n}\n</style>\n<style lang=\"scss\">\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/marketingCenter/validate/index.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/mobile/action.vue","messages":[{"ruleId":"vue/v-on-style","severity":2,"message":"Expected '@' instead of 'v-on:'.","line":7,"column":29,"nodeType":"VAttribute","endLine":7,"endColumn":51,"fix":{"range":[267,272],"text":"@"}},{"ruleId":"vue/v-on-style","severity":2,"message":"Expected '@' instead of 'v-on:'.","line":8,"column":29,"nodeType":"VAttribute","endLine":8,"endColumn":53,"fix":{"range":[371,376],"text":"@"}},{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"mobileAction\" is not PascalCase.","line":17,"column":9,"nodeType":"Literal","endLine":17,"endColumn":23,"fix":{"range":[583,595],"text":"MobileAction"}}],"errorCount":3,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"<template>\n  <div>\n    <main class='info-tips' v-if='resultType'>\n      <div :class='resultTxt.icon'></div>\n      <div :class='resultTxt.status + \" status\"'>{{resultTxt.status}}</div>\n      <div class='message'>{{resultTxt.message}}</div>\n      <div class='next-btn' v-on:touchend='nextPR'>{{resultType === 3 ? 'Try again' : 'Next PR'}}</div>\n      <div class='back-btn' v-on:touchend='backList'>Back to Request List</div>\n    </main>\n  </div>\n</template>\n\n<script>\nimport { approvalPurchaseRequest, getPurchaseApprovalNext } from '@/api/purchaseRequest';\n\nexport default {\n  name: 'mobileAction',\n  data() {\n    return {\n      nextOrderID: '',\n      nextPRMessage: '',\n      nextOrderData: {},\n      purchaseRequest: this.$store.getters.purchaseRequest,\n      approvalInfo: this.$store.getters.approvalInfo,\n      resultType: 0 // 0, 1, 2, 3 分别代表等待,审批通过成功,审批拒绝成功,审批失败\n    };\n  },\n  methods: {\n    nextPR() {\n      if (this.resultType === 3) {\n        return this.approve();\n      }\n      const { nextOrderID, nextPRMessage, nextOrderData } = this;\n      if (nextOrderID) {\n        this.$router.push(`/admin/mobile/detail/${nextOrderID}`);\n      } else {\n        this.$message({\n          message: nextOrderData.info || nextPRMessage,\n          type: nextOrderData.status === 101 ? 'success' : 'error'\n        });\n        this.backList();\n      }\n    },\n    backList() {\n      this.$router.replace('/admin/mobile');\n    },\n    getNextPR() {\n      getPurchaseApprovalNext(this.$route.query.requestID).then(resp => {\n        this.nextOrderData = resp;\n        const result = resp.data || {};\n        this.nextOrderID = result.right || result.left;\n        this.approve();\n      }).catch(() => {\n        this.nextPRMessage = 'Get Next PR Failed!';\n        this.nextOrderID = '';\n        this.approve();\n      });\n    },\n    approve() {\n      const params = {\n        action: Number(this.$route.query.type),\n        requestID: this.$route.query.requestID,\n        remark: this.$route.query.remark,\n        change: this.approvalInfo.skuList.map(sku => [sku.skuID, sku.lastApprovalQuantity, sku.approvalQuantity]),\n        total_value: Number(this.approvalInfo.totalValue),\n        sku_ids: this.purchaseRequest.skuIDList\n      };\n      approvalPurchaseRequest(params).then(resp => {\n        if (resp.status !== 0) {\n          this.resultType = 3;\n        } else {\n          this.resultType = Number(params.action) === 0 ? 1 : 2;\n        }\n        this.loading.close();\n      }).catch(() => {\n        this.loading.close();\n      });\n    }\n  },\n  computed: {\n    resultTxt() {\n      return [\n        { icon: 'el-icon-check', status: 'Approved', message: 'The purchase request has been approved' },\n        { icon: 'el-icon-remove', status: 'Rejected', message: 'The purchase request has been rejected' },\n        { icon: 'el-icon-warning', status: 'Failed', message: 'Update failed' }\n      ][this.resultType - 1];\n    }\n  },\n  created() {\n    this.loading = this.$loading({\n      lock: true,\n      text: 'Loading',\n      spinner: 'el-icon-loading',\n      background: 'rgba(51, 51, 51, 0.5)'\n    });\n    this.getNextPR();\n  }\n};\n</script>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\n  .info-tips {\n    text-align: center;\n    .message {\n      width: 100%;\n      padding: 0 16px;\n      margin-bottom: 48px;\n      font-family: PingFangSC-Regular;\n      font-size: 14px;\n      color: #8F8E94;\n      text-align: center;\n    }\n    .next-btn {\n      display: inline-block;\n      width: 295px;\n      height: 50px;\n      line-height: 50px;\n      background-color: #007AFF;\n      color: #fff;\n      border: 1px solid #007AFF;\n      border-radius: 10px;\n      font-family: SFUIText-Regular;\n      font-size: 17px;\n    }\n    .back-btn {\n      display: inline-block;\n      width: 295px;\n      height: 50px;\n      line-height: 50px;\n      margin-top: 16px;\n      background-color: #fff;\n      color: #007AFF;\n      border: 1px solid #007AFF;\n      border-radius: 10px;\n      font-family: SFUIText-Regular;\n      font-size: 17px;\n    }\n  }\n  .el-icon-check, .el-icon-remove, .el-icon-warning {\n    width: 52px;\n    height: 52px;\n    line-height: 52px;\n    margin-top: 128px;\n    border-radius: 50%;\n  }\n  .el-icon-check {\n    font-size: 36px;\n    font-weight: 800;\n    color: #fff;\n    background: #55CC77;\n  }\n  .el-icon-remove {\n    font-size: 52px;\n    font-weight: 800;\n    color: #EC221D;\n    background-color: #fff;\n  }\n  .el-icon-warning {\n    font-size: 52px;\n    font-weight: 800;\n    color: #FFCE3D;\n    background-color: #fff;\n  }\n  .status {\n    margin: 16px 0 11px;\n    font-size: 24px;\n  }\n  .Approved {\n    color: #55CC77;\n  }\n  .Rejected {\n    color: #EC221D;\n  }\n  .Failed {\n    color: #FFCE3D;\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/mobile/detail.vue","messages":[{"ruleId":"vue/v-on-style","severity":2,"message":"Expected '@' instead of 'v-on:'.","line":4,"column":13,"nodeType":"VAttribute","endLine":4,"endColumn":35,"fix":{"range":[85,90],"text":"@"}},{"ruleId":"vue/v-on-style","severity":2,"message":"Expected '@' instead of 'v-on:'.","line":6,"column":13,"nodeType":"VAttribute","endLine":6,"endColumn":38,"fix":{"range":[213,218],"text":"@"}},{"ruleId":"vue/v-on-style","severity":2,"message":"Expected '@' instead of 'v-on:'.","line":75,"column":12,"nodeType":"VAttribute","endLine":75,"endColumn":31,"fix":{"range":[3382,3387],"text":"@"}},{"ruleId":"vue/v-on-style","severity":2,"message":"Expected '@' instead of 'v-on:'.","line":76,"column":12,"nodeType":"VAttribute","endLine":76,"endColumn":32,"fix":{"range":[3443,3448],"text":"@"}},{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"prdetail\" is not PascalCase.","line":94,"column":9,"nodeType":"Literal","endLine":94,"endColumn":19,"fix":{"range":[3905,3913],"text":"Prdetail"}}],"errorCount":5,"warningCount":0,"fixableErrorCount":5,"fixableWarningCount":0,"source":"<template>\n  <div class='mobile-detail'>\n    <header class='mobile-nav'>\n      <span v-on:touchend='goBack' class='el-icon-arrow-left txt-left'>Back</span>\n      <span class='txt-center'>Detail</span>\n      <span v-on:touchend='goHistory' class='txt-right'>Approval History</span>\n    </header>\n    <main>\n      <section class='pr-info'>\n        <section class='info-title'>\n          {{$route.params.requestID}}\n          <span class='purchase-type'>{{purchaseRequest.supplier.purchaseType}}</span>\n        </section>\n        <section class='info-supplier'>Supplier: {{purchaseRequest.supplier.supplierName}}</section>\n        <section class='info-ctime'>Created Time: {{parseTime(purchaseRequest.ctime, '{m}-{d}-{y} {h}:{i}:{s}')}}</section>\n        <section class='info-requester'>Requester: {{purchaseRequest.createBy}}</section>\n      </section>\n      <div class='gap-title'>SKU List</div>\n      <ul class='sku-list'>\n        <li v-for='item in purchaseRequest.skuList' class='sku' :key='item.skuID'>\n          <section class='sku-img'>\n            <svg-icon iconClass='noImage' className='sku-icon'></svg-icon>\n          </section>\n          <section class='sku-info'>\n            <section class='info-title'>\n              {{item.skuName}}\n            </section>\n            <section class='info-purchase-price'>\n              {{`Purchase Price: ${formatValue(item.purchasePrice)} ${currency}`}}\n            </section>\n            <section class='info-quantity'>\n              {{`Quantity: ${formatValue(item.quantity)}`}}\n              <router-link :to='`/admin/mobile/sku?requestID=${$route.params.requestID}&skuID=${item.skuID}`'>\n                <span class='el-icon-arrow-right'></span>\n              </router-link>\n            </section>\n            <section class='info-value'>\n              {{`Value ${formatValue(item.value)} ${currency}`}}\n            </section>\n          </section>\n        </li>\n      </ul>\n      <div class='gap-title' v-if='purchaseRequest.giftList.length'>Gift List</div>\n      <ul class='sku-list' v-if='purchaseRequest.giftList.length'>\n        <li v-for='item in purchaseRequest.giftList' class='sku' :key='item.skuID'>\n          <section class='sku-img'>\n            <svg-icon iconClass='noImage' className='sku-icon'></svg-icon>\n          </section>\n          <section class='sku-info'>\n            <section class='info-title'>\n              {{item.skuName}}\n            </section>\n            <section class='info-purchase-price'>\n              {{`Purchase Price: ${formatValue(item.purchasePrice)} ${currency}`}}\n            </section>\n            <section class='info-quantity'>\n              {{`Quantity: ${formatValue(item.quantity)}`}}\n              <router-link :to='`/admin/mobile/sku?requestID=${$route.params.requestID}&skuID=${item.skuID}&type=gift`'>\n                <span class='el-icon-arrow-right'></span>\n              </router-link>\n            </section>\n            <section class='info-value'>\n              {{`Value ${formatValue(item.value)} ${currency}`}}\n            </section>\n          </section>\n        </li>\n      </ul>\n    </main>\n    <footer>\n      <section class='total'>\n        <span>Total Value</span>\n        <span class='total-value'>{{`${formatValue(purchaseRequest.totalValue)} ${currency}`}}</span>\n      </section>\n      <section class='action flex' v-if='purchaseRequest.canApproval'>\n        <b v-on:click='reject' class='reject-btn'>Reject</b>\n        <b v-on:click='approve' class='approve-btn'>Approve</b>\n      </section>\n    </footer>\n    <message-box\n      :visible='messageShow'\n      :config='messageConfig'\n    >\n    </message-box>\n  </div>\n</template>\n\n<script>\nimport { parsePurchaseRequestDetail, parseTime } from '@/utils';\nimport { SKUSourcingStatusText } from '@/utils/constant';\nimport { formatValue } from '@/utils/format';\nimport { MessageBox } from '@/components/Mobile';\n\nexport default {\n  name: 'prdetail',\n  data() {\n    return {\n      purchaseRequest: {\n        canApproval: false,\n        ctime: +new Date(),\n        createBy: '',\n        supplier: {\n          supplierID: '',\n          supplierName: '',\n          purchaseType: '',\n          paymentTerms: ''\n        },\n        skuList: [],\n        giftList: [],\n        status: '',\n        approvalList: [],\n        totalValue: 0.00,\n        lastApprovalTotalValue: 0.00\n      },\n      approvalInfo: {\n        remark: '',\n        skuList: [],\n        totalValue: 0.00\n      },\n      dialogVisible: false,\n      dialogType: 0,\n      nextOrderID: '',\n      messageShow: false,\n      messageConfig: {\n\n      }\n    };\n  },\n  components: {\n    MessageBox\n  },\n  methods: {\n    parseTime,\n    formatValue,\n    goBack() {\n      this.$router.replace({\n        path: '/admin/mobile'\n      });\n    },\n    goHistory() {\n      this.$router.push({\n        path: '/admin/mobile/history',\n        query: { requestID: this.$route.params.requestID }\n      });\n    },\n    confirm(config = {}) {\n      this.messageShow = true;\n      return new Promise((resolve, reject) => {\n        this.messageConfig = Object.assign({}, this.messageConfig, config, {\n          confirm: () => {\n            this.messageShow = false;\n            resolve();\n          },\n          cancel: () => {\n            this.messageShow = false;\n            reject();\n          }\n        });\n      });\n    },\n    approve() {\n      this.confirm({\n        title: 'Confirm to Approve?',\n        confirmBtnText: 'Yes',\n        cancelBtnText: 'No'\n      }).then(() => {\n        this.$router.push({\n          path: '/admin/mobile/input',\n          query: { requestID: this.$route.params.requestID, type: 0 }\n        });\n      });\n    },\n    reject() {\n      this.confirm({\n        title: 'Reject this Purchase Request?',\n        confirmBtnText: 'Yes',\n        cancelBtnText: 'No'\n      }).then(() => {\n        this.$router.push({\n          path: '/admin/mobile/input',\n          query: { requestID: this.$route.params.requestID, type: 1 }\n        });\n      });\n    },\n    fetchDetail() {\n      const requestID = this.$route.params.requestID;\n      this.$store.dispatch('fetchPrDetail', requestID).then(resp => {\n        if (resp.status !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.purchaseRequest = parsePurchaseRequestDetail(resp.data);\n          this.approvalInfo.skuList = this.purchaseRequest.skuList;\n          this.purchaseRequest.ctime = resp.data.ctime;\n          this.purchaseRequest.createBy = resp.data.created_by;\n          // generate lastApprovalQuantity\n          if (this.purchaseRequest.approvalList.length > 0) {\n            this.approvalInfo.skuList.forEach(sku => {\n              sku['sourcingStatus'] = SKUSourcingStatusText[sku['sourcingStatus']];\n              sku['approvalQuantity'] = sku['lastApprovalQuantity'];\n            });\n          } else {\n            this.purchaseRequest.lastApprovalTotalValue = this.purchaseRequest.totalValue;\n            this.approvalInfo.skuList = this.approvalInfo.skuList.map(sku => {\n              sku['sourcingStatus'] = SKUSourcingStatusText[sku['sourcingStatus']];\n              sku['lastApprovalQuantity'] = sku['approvalQuantity'] = sku['quantity'];\n              return sku;\n            });\n          }\n          // this.approvalInfo.totalValue = parseFloat(this.purchaseRequest.lastApprovalTotalValue)\n          this.approvalInfo.totalValue = parseFloat(this.purchaseRequest.lastApprovalTotalValue).toFixed(2);\n\n          for (var i = 0; i < this.purchaseRequest.skuList.length; i++) {\n            const purchasePrice = this.purchaseRequest.skuList[i].purchasePrice;\n            const tax = this.purchaseRequest.skuList[i].tax;\n\n            this.purchaseRequest.skuList[i].purchasePriceAfter = (purchasePrice * (100 + tax) / 100).toFixed(2);\n          }\n          this.$store.commit('setPrDetail', {\n            purchaseRequest: this.purchaseRequest,\n            approvalInfo: this.approvalInfo\n          });\n        }\n      }).catch(() => {\n        this.$message.error('Get PR Detail Failed!');\n        this.$router.push({ path: '/admin/mobile' });\n      });\n    }\n  },\n  computed: {\n    currency() {\n      return this.purchaseRequest.currency || '';\n    }\n  },\n  created() {\n    this.fetchDetail();\n  }\n};\n</script>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\n  .mobile-detail {\n    display: flex;\n    flex-direction: column;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    overflow-x: hidden;\n    .mobile-nav {\n      height: 44px;\n      line-height: 44px;\n      text-align: center;\n      align-items: center;\n      background-color: rgba(248,248,248,0.82);\n      border-bottom: 1px solid #EAEAEA;\n    }\n    .pr-info {\n      height: 112px;\n      background: #FFFFFF;\n      box-shadow: 0 2px 4px 0 rgba(213,213,213,0.50);\n      .info-title {\n        margin: 18px 20px 15px;\n        font-family: SFUIText-Medium;\n        font-size: 15px;\n        color: #030303;\n        .purchase-type {\n          float: right;\n          font-family: SFUIText-Bold;\n          font-size: 13px;\n          color: #007AFF;\n          font-weight: bold;\n        }\n      }\n      .info-supplier, .info-ctime, .info-requester{\n        margin: 6px 20px 0;\n        font-family: SFUIText-Regular;\n        font-size: 13px;\n        color: #8F8E94;\n      }\n    }\n    main {\n      flex: 1;\n      overflow-x: hidden;\n      overflow-y: scroll;\n      .gap-title {\n        height: 30px;\n        padding-left: 15px;\n        line-height: 30px;\n        background: #EFEFF4;\n        box-shadow: inset 0 0 0 0 #C7C7C7;\n        font-family: SFUIText-Regular;\n        font-size: 13px;\n        color: #6D6D72;\n      }\n    }\n    footer {\n      .total {\n        width: 100%;\n        padding-left: 14px;\n        height: 49px;\n        line-height: 49px;\n        font-family: SFUIText-Regular;\n        font-size: 15px;\n        color: #030303;\n        border-top: 1px solid #EAEAEA;\n        .total-value {\n          float: right;\n          margin-right: 13px;\n          font-family: SFUIText-Bold;\n          font-size: 17px;\n          font-weight: bold;\n        }\n      }\n      .action {\n        margin-top: 1px;\n        height: 44px;\n        text-align: center;\n        line-height: 44px;\n        font-family: SFUIText-Semibold;\n        font-size: 17px;\n        color: #FFFFFF;\n        .reject-btn, .approve-btn {\n          flex: 1;\n          color: #fff;\n        }\n        .reject-btn {\n          background: #EC221D;\n          border: 2px solid #EC221D;\n        }\n        .approve-btn {\n          background: #55CC77;\n          border: 2px solid #55CC77;\n        }\n      }\n    }\n  }\n  .sku-list {\n    padding-left: 16px;\n    overflow: hidden;\n    .sku {\n      display: flex;\n      width: 100%;\n      height: 129px;\n      border-bottom: 1px solid rgba(191,191,191,1);\n      box-shadow: 0 1px 1px #fff;\n      &:last-child {\n        border-bottom: none;\n      }\n    }\n    .sku-img {\n      width: 88px;\n      height: 88px;\n      padding: 9px;\n      margin: 20px 14px 20px -6px;\n      box-sizing: border-box;\n      border: 1px solid #979797;\n      opacity: 0.25;\n      background: #F8F8F8;\n      .sku-icon {\n        display: inline-block;\n        width: 70px;\n        height: 70px;\n        border: none;\n        opacity: 1.0;\n      }\n    }\n    .sku-info {\n      display: inline-block;\n      flex: 1;\n      min-width: 0;\n      .info-title {\n        margin: 20px 0 2px;\n        line-height: 18px;\n        max-height: 18px;\n        font-family: SFUIText-Regular;\n        font-size: 15px;\n        color: #030303;\n        overflow: hidden;\n        white-space: nowrap;\n        word-break: break-all;\n        text-overflow: ellipsis;\n      }\n      .info-purchase-price, .info-quantity{\n        margin-bottom: 1px;\n        line-height: 18px;\n        font-family: SFUIText-Regular;\n        font-size: 13px;\n        color: #8F8E94;\n      }\n      .info-value {\n        margin-top: 14px;\n        line-height: 21px;\n        font-family: SFUIText-Bold;\n        font-size: 15px;\n        color: #030303;\n        font-weight: bold;\n      }\n    }\n  }\n  .flex {\n    display: flex;\n  }\n  .flex-cell {\n    flex: 1;\n  }\n  .el-icon-arrow-left {\n    font-size: 21px;\n  }\n  .el-icon-arrow-right {\n    float: right;\n    margin-top: -13px;\n    padding: 13px;\n  }\n  .txt-left {\n    position: absolute;\n    top: 0;\n    left: 0;\n    font-family: AppleSystemUIFont;\n    font-size: 17px;\n    height: 44px;\n    line-height: 44px;\n    color: #007AFF;\n  }\n  .txt-center {\n    font-size: 17px;\n    color: #030303;\n  }\n  .txt-right {\n    position: absolute;\n    top: 0;\n    right: 17px;\n    font-size: 14px;\n    font-family: AppleSystemUIFont;\n    color: #007AFF;\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/mobile/history.vue","messages":[{"ruleId":"vue/v-on-style","severity":2,"message":"Expected '@' instead of 'v-on:'.","line":4,"column":13,"nodeType":"VAttribute","endLine":4,"endColumn":35,"fix":{"range":[63,68],"text":"@"}},{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"approvalHistory\" is not PascalCase.","line":31,"column":9,"nodeType":"Literal","endLine":31,"endColumn":26,"fix":{"range":[991,1006],"text":"ApprovalHistory"}}],"errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"<template>\n  <div>\n    <header class='mobile-nav'>\n      <span v-on:touchend='goBack' class='el-icon-arrow-left fl'>Back</span>\n      <div class='txt-center'>Approval History</div>\n    </header>\n    <ul class='approval-history' v-if='purchaseRequest.approvalList.length'>\n      <li class='approval-info' v-for='(item, index) in purchaseRequest.approvalList' :key='index'>\n        <div class='info-role'>\n          {{item.role}}\n          <span :class='purchaseRequest.status === 2 ? \"info-status info-rejected\" : \"info-status\"'>\n            {{item.statusAfter}}\n          </span>\n        </div>\n        <div class='info-by'>{{item.by}}</div>\n        <div class='info-time'>{{parseTime(item.date)}}</div>\n      </li>\n    </ul>\n    <section v-else class='no-data'>\n      No Data\n    </section>\n  </div>\n</template>\n\n<script>\nimport { parsePurchaseRequestDetail } from '@/utils';\nimport moment from 'moment';\nimport { SKUSourcingStatusText } from '@/utils/constant';\n\nexport default {\n  name: 'approvalHistory',\n  data() {\n    return {\n      purchaseRequest: this.$store.getters.purchaseRequest,\n      approvalInfo: this.$store.getters.approvalInfo\n    };\n  },\n  methods: {\n    parseTime(time) {\n      return moment(time).format('HH:mm:ss MM-DD-YYYY');\n    },\n    goBack() {\n      this.$router.back();\n    },\n    fetchDetail() {\n      const requestID = this.$route.query.requestID;\n      this.$store.dispatch('fetchPrDetail', requestID).then(resp => {\n        if (resp.status !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.purchaseRequest = parsePurchaseRequestDetail(resp.data);\n          this.approvalInfo.skuList = this.purchaseRequest.skuList;\n          this.purchaseRequest.ctime = resp.data.ctime;\n          this.purchaseRequest.createBy = resp.data.created_by;\n          // generate lastApprovalQuantity\n          if (this.purchaseRequest.approvalList.length > 0) {\n            this.approvalInfo.skuList.forEach(sku => {\n              sku['sourcingStatus'] = SKUSourcingStatusText[sku['sourcingStatus']];\n              sku['approvalQuantity'] = sku['lastApprovalQuantity'];\n            });\n          } else {\n            this.purchaseRequest.lastApprovalTotalValue = this.purchaseRequest.totalValue;\n            this.approvalInfo.skuList = this.approvalInfo.skuList.map(sku => {\n              sku['sourcingStatus'] = SKUSourcingStatusText[sku['sourcingStatus']];\n              sku['lastApprovalQuantity'] = sku['approvalQuantity'] = sku['quantity'];\n              return sku;\n            });\n          }\n          // this.approvalInfo.totalValue = parseFloat(this.purchaseRequest.lastApprovalTotalValue)\n          this.approvalInfo.totalValue = parseFloat(this.purchaseRequest.lastApprovalTotalValue).toFixed(2);\n\n          for (var i = 0; i < this.purchaseRequest.skuList.length; i++) {\n            const purchasePrice = this.purchaseRequest.skuList[i].purchasePrice;\n            const tax = this.purchaseRequest.skuList[i].tax;\n\n            this.purchaseRequest.skuList[i].purchasePriceAfter = purchasePrice * (100 + tax) / 100;\n          }\n          this.$store.commit('setPrDetail', {\n            purchaseRequest: this.purchaseRequest,\n            approvalInfo: this.approvalInfo\n          });\n        }\n      }).catch(() => {\n        this.$message.error('Get PR Detail Failed!');\n        this.$router.push({ path: '/admin/mobile' });\n      });\n    }\n  },\n  created() {\n    if (this.purchaseRequest.approvalList.length === 0) {\n      this.fetchDetail();\n    }\n  }\n};\n</script>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\n  .mobile-nav {\n    position: relative;\n    height: 44px;\n    line-height: 44px;\n    text-align: center;\n    align-items: center;\n    background-color: rgba(248,248,248,0.82);\n    border-bottom: 1px solid #EAEAEA;\n  }\n  .fl {\n    position: absolute;\n    top: 0;\n    left: 0;\n    font-family: AppleSystemUIFont;\n    font-size: 17px;\n    height: 44px;\n    line-height: 44px;\n    color: #007AFF;\n  }\n  .txt-center {\n    font-family: AppleSystemUIFont;\n    font-size: 17px;\n    color: #030303;\n    text-align: center;\n  }\n  .approval-history {\n    width: 100%;\n    padding-left: 16px;\n    overflow-x: hidden;\n  }\n  .approval-info {\n    font-family: SFUIText-Regular;\n    font-size: 13px;\n    color: #030303;\n    height: 71px;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.25);\n  }\n  .info-role {\n    margin: 15px 0 0 16px;\n    font-size: 15px;\n    line-height: 18px;\n  }\n  .info-by {\n    margin: 3px 0 0 16px;\n    line-height: 15px;\n  }\n  .info-time {\n    margin: 5.5px 0 0 16px;\n    line-height: 15px;\n    color: #8F8E94;\n  }\n  .info-status {\n    float: right;\n    width: 47%;\n    margin: 1.5px 20px 0 0;\n    font-family: SFUIText-Bold;\n    font-size: 13px;\n    color: #55CC77;\n    font-weight: bold;\n    line-height: 15px;\n  }\n  .info-rejected {\n    color: #EC221D;\n  }\n  .no-data {\n    margin-top: 50px;\n    font-family: SFUIText-Bold;\n    font-size: 15px;\n    color: #030303;\n    text-align: center;\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/mobile/input.vue","messages":[{"ruleId":"vue/v-on-style","severity":2,"message":"Expected '@' instead of 'v-on:'.","line":4,"column":13,"nodeType":"VAttribute","endLine":4,"endColumn":35,"fix":{"range":[84,89],"text":"@"}},{"ruleId":"vue/v-on-style","severity":2,"message":"Expected '@' instead of 'v-on:'.","line":6,"column":42,"nodeType":"VAttribute","endLine":6,"endColumn":62,"fix":{"range":[279,284],"text":"@"}},{"ruleId":"vue/v-on-style","severity":2,"message":"Expected '@' instead of 'v-on:'.","line":10,"column":29,"nodeType":"VAttribute","endLine":10,"endColumn":53,"fix":{"range":[563,568],"text":"@"}},{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"approvalInput\" is not PascalCase.","line":17,"column":9,"nodeType":"Literal","endLine":17,"endColumn":24,"fix":{"range":[660,673],"text":"ApprovalInput"}}],"errorCount":4,"warningCount":0,"fixableErrorCount":4,"fixableWarningCount":0,"source":"<template>\n  <div class='mobile-input'>\n    <header class='mobile-nav'>\n      <span v-on:touchend='goBack' class='el-icon-arrow-left fl'>Back</span>\n      <div class='txt-center'>{{type === 1 ? 'Reject reason' : 'Approve Comment'}}</div>\n      <span v-if='type === 0' class='fr' v-on:touchend='skip'>Skip</span>\n    </header>\n    <textarea :maxlength=\"128\" class='comment' :placeholder='type === 1 ? \"Please enter reject reason...\" : \"Please enter approve comment...\"' v-model='comment'></textarea>\n    <div class='white-block'></div>\n    <div class='footer-btn' v-on:touchend='goAction'>Confirm</div>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'approvalInput',\n  data() {\n    return {\n      comment: ''\n    };\n  },\n  methods: {\n    goBack() {\n      this.$router.back();\n    },\n    skip() {\n      this.$router.push({\n        path: '/admin/mobile/action',\n        query: {\n          requestID: this.$route.query.requestID,\n          type: this.$route.query.type,\n          remark: ''\n        }\n      });\n    },\n    goAction() {\n      if (this.$route.query.type === 1 && this.comment === '') {\n        return this.$message.error('Reason is required');\n      }\n      if (this.$route.query.type === 1 && this.comment.length > 128) {\n        return this.$message.error('Reason can not be more than 128');\n      }\n      this.$router.push({\n        path: '/admin/mobile/action',\n        query: {\n          requestID: this.$route.query.requestID,\n          type: this.$route.query.type,\n          remark: this.comment\n        }\n      });\n    }\n  },\n  created() {\n    this.type = Number(this.$route.query.type);\n    this.requestID = this.$route.query.requestID;\n  }\n};\n</script>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\n  .mobile-input {\n    display: flex;\n    flex-direction: column;\n    position:absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  }\n  .mobile-nav {\n    position: relative;\n    height: 44px;\n    line-height: 44px;\n    text-align: center;\n    align-items: center;\n    background-color: rgba(248,248,248,0.82);\n    border-bottom: 1px solid #EAEAEA;\n  }\n  .fl {\n    position: absolute;\n    top: 0;\n    left: 0;\n    font-family: AppleSystemUIFont;\n    font-size: 17px;\n    height: 44px;\n    line-height: 44px;\n    color: #007AFF;\n  }\n  .fr {\n    position: absolute;\n    top: 0;\n    right: 17px;\n    font-family: AppleSystemUIFont;\n    font-size: 17px;\n    height: 44px;\n    line-height: 44px;\n    color: #007AFF;\n  }\n  .txt-center {\n    font-family: AppleSystemUIFont;\n    font-size: 17px;\n    color: #030303;\n    text-align: center;\n  }\n  .comment {\n    resize: none;\n    width: 100%;\n    height: 192px;\n    padding: 14px;\n    overflow: hidden;\n    border: none;\n    font-family: SFUIText-Regular;\n    font-size: 15px;\n    color: #B8B8B8;\n    background: rgba(250,250,250,0.90);\n  }\n  .white-block {\n    flex: 1;\n    background-color: rgba(239,239,244,0.8);\n  }\n  .footer-btn {\n    height: 44px;\n    line-height: 44px;\n    background: #007AFF;\n    font-family: SFUIText-Semibold;\n    font-size: 17px;\n    color: #FFFFFF;\n    text-align: center;\n    font-weight: 800;\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/mobile/list.vue","messages":[{"ruleId":"vue/v-on-style","severity":2,"message":"Expected '@' instead of 'v-on:'.","line":4,"column":13,"nodeType":"VAttribute","endLine":4,"endColumn":56,"fix":{"range":[67,72],"text":"@"}},{"ruleId":"vue/v-on-style","severity":2,"message":"Expected '@' instead of 'v-on:'.","line":5,"column":13,"nodeType":"VAttribute","endLine":5,"endColumn":56,"fix":{"range":[171,176],"text":"@"}},{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"list\" is not PascalCase.","line":47,"column":9,"nodeType":"Literal","endLine":47,"endColumn":15,"fix":{"range":[1714,1718],"text":"List"}},{"ruleId":"vue/no-deprecated-destroyed-lifecycle","severity":2,"message":"The `destroyed` lifecycle hook is deprecated. Use `unmounted` instead.","line":74,"column":3,"nodeType":"Identifier","messageId":"deprecatedDestroyed","endLine":74,"endColumn":12,"suggestions":[{"messageId":"insteadUnmounted","fix":{"range":[2192,2201],"text":"unmounted"},"desc":"Instead, change to `unmounted`."}]}],"errorCount":4,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"<template>\n  <section>\n    <header class='mobile-nav'>\n      <span v-on:touchend.stop.prevent='toggleDropdown'>{{Object.values(regions)[activeRegion]}}</span>\n      <span v-on:touchend.stop.prevent='toggleDropdown' :class='dropShow ? \"el-icon-arrow-up\" : \"el-icon-arrow-down\"'></span>\n    </header>\n    <tabs :tabs='tabs' :activeTab='activeTab' @change='switchTab'></tabs>\n    <ul class='pr-list' v-if='activeList.length'>\n      <li class='pr-info' v-for='item in activeList' :key='item.id'>\n        <header>\n          <span :class='activeTab === 0 ? \"active-dot dot\" : \"dot\"'></span>\n          <span class='info-id'>{{item.request_id}}</span>\n          <span class='info-region'>{{regions[item.country] || 'Vietnam'}}</span>\n        </header>\n        <main>\n          <span class='info-bytime'>{{`${item.created_by} / ${parseTime(item.ctime, '{m}-{d}-{y}')}`}}</span>\n          <router-link :to='\"detail/\" + item.request_id'>\n            <span class='el-icon-arrow-right'></span>\n          </router-link>\n        </main>\n        <footer class='info-total'>\n          {{`Total Value ${formatValue(item.total_value)} ${getCurrency(item.country)}`}}\n        </footer>\n      </li>\n    </ul>\n    <section v-else class='no-data'>\n      No Data\n    </section>\n    <dropdown\n      :visible='dropShow'\n      :options='Object.values(regions)'\n      :activeOption='activeRegion'\n      @change='switchRegion'\n      @close='toggleDropdown'\n    >\n    </dropdown>\n  </section>\n</template>\n\n<script>\nimport { Tabs, Dropdown } from '@/components/Mobile';\nimport { getPurchaseApprovalList } from '@/api/purchaseRequest';\nimport { parseTime } from '@/utils';\nimport { formatValue } from '@/utils/format';\n\nexport default {\n  name: 'list',\n  data() {\n    return {\n      pendingData: {\n        total: 0,\n        list: []\n      },\n      approvedData: {\n        total: 0,\n        list: []\n      },\n      rejectedData: {\n        total: 0,\n        list: []\n      },\n      activeTab: 0,\n      activeRegion: 0,\n      nextRequestTop: [1000, 1000, 1000],\n      dropShow: false\n    };\n  },\n  created() {\n    this.getAllList();\n  },\n  mounted: function() {\n    window.addEventListener('scroll', this.handleScroll);\n  },\n  destroyed: function() {\n    window.removeEventListener('scroll', this.handleScroll);\n  },\n  methods: {\n    formatValue,\n    parseTime,\n    switchTab(tab) {\n      this.activeTab = tab;\n    },\n    switchRegion(region) {\n      this.activeRegion = region;\n      this.toggleDropdown();\n      this.nextRequestTop = [1000, 1000, 1000];\n      this.getAllList();\n    },\n    toggleDropdown() {\n      this.dropShow = !this.dropShow;\n    },\n    getCurrency(country) {\n      return this.$store.getters.currencyMap[country];\n    },\n    handleScroll: function() {\n      const scrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop;\n      const activeData = this[['pendingData', 'approvedData', 'rejectedData'][this.activeTab]];\n      if (scrollTop >= this.nextRequestTop[this.activeTab] && activeData.list.length < activeData.total) {\n        const params = { skip: this.activeList.length, limit: 20 };\n        this.getTabList(params);\n      }\n    },\n    setListData(field, resp) {\n      if (resp.status !== 0) {\n        this.$message.error(resp.info);\n        this[field].total = 0;\n        this[field].list = [];\n      } else {\n        this[field].total = resp.data.total || 0;\n        this[field].list = resp.data.purchase_request_list || [];\n      }\n    },\n    getTabList(params = {}) {\n      const country = Object.keys(this.regions)[this.activeRegion];\n      if (country !== 'ALL') {\n        params.country = country;\n      }\n      const requestParams = [{ op: 1 }, { op: 3 }, { op: 4 }][this.activeTab];\n      this.nextRequestTop[this.activeTab] += 2080;\n      const loading = this.$loading({\n        lock: true,\n        text: 'Loading',\n        spinner: 'el-icon-loading',\n        background: 'rgba(51, 51, 51, 0.5)'\n      });\n      getPurchaseApprovalList(Object.assign({}, params, requestParams)).then(resp => {\n        if (resp.status !== 0) {\n          loading.close();\n          this.$message.error(resp.info);\n          this.nextRequestTop[this.activeTab] -= 2080;\n        } else {\n          loading.close();\n          const field = ['pendingData', 'approvedData', 'rejectedData'][this.activeTab];\n          this[field].total = resp.data.total;\n          this[field].list = [...this.activeList, ...resp.data.purchase_request_list];\n        }\n      }).catch(() => {\n        loading.close();\n        this.nextRequestTop[this.activeTab] -= 2080;\n      });\n    },\n    getAllList(params = {}) {\n      params.skip = params.skip || 0;\n      params.limit = params.limit || 20;\n      const country = Object.keys(this.regions)[this.activeRegion];\n      if (country !== 'ALL') {\n        params.country = country;\n      }\n      const pendingRequest = getPurchaseApprovalList(Object.assign({}, params, { op: 1 }));\n      const approvedRequest = getPurchaseApprovalList(Object.assign({}, params, { op: 3 }));\n      const rejectedRequest = getPurchaseApprovalList(Object.assign({}, params, { op: 4 }));\n      Promise.all([pendingRequest, approvedRequest, rejectedRequest]).then(([pendingResp, approvedResp, rejectedResp]) => {\n        this.setListData('pendingData', pendingResp);\n        this.setListData('approvedData', approvedResp);\n        this.setListData('rejectedData', rejectedResp);\n      });\n    }\n  },\n  computed: {\n    tabs() {\n      return [\n        `Pending (${this.pendingData.total > 999 ? '999+' : this.pendingData.total})`,\n        `Approved (${this.approvedData.total > 999 ? '999+' : this.approvedData.total})`,\n        `Rejected (${this.rejectedData.total > 999 ? '999+' : this.rejectedData.total})`\n      ];\n    },\n    activeList() {\n      const active = ['pendingData', 'approvedData', 'rejectedData'][this.activeTab];\n      return this[active].list || [];\n    },\n    regions() {\n      const regionMap = {\n        ALL: 'All Regions',\n        SG: 'Singapore',\n        ID: 'Indonesia',\n        TH: 'Thailand',\n        MY: 'Malaysia',\n        TW: 'Taiwan',\n        VN: 'Vietnam',\n        PH: 'Philippines'\n      };\n      const regions = {};\n      const isUniversal = (this.$store.getters.organizations.find(item => item.id === this.$store.getters.organization) || {}).type === 0;\n      if (isUniversal) {\n        regions['ALL'] = regionMap['ALL'];\n      }\n      this.$store.getters.countryList.forEach(item => {\n        if (!regions[item.country]) {\n          regions[item.country] = regionMap[item.country];\n        }\n      });\n      return regions;\n    }\n  },\n  components: {\n    Tabs,\n    Dropdown\n  }\n};\n</script>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\n  .mobile-nav {\n    position: relative;\n    height: 44px;\n    line-height: 44px;\n    text-align: center;\n    margin-bottom: 2.5px;\n    font-family: AppleSystemUIFont;\n    font-size: 17px;\n    color: #030303;\n    background-color: rgba(248,248,248,0.82);\n    letter-spacing: -0.41px;\n  }\n  .pr-list {\n    border-top: 1px solid rgba(0,0,0,0.25)\n  }\n  .pr-info {\n    height: 87.5px;\n    margin: 16.5px 0 0 10px;\n    border-bottom: 1px solid rgba(191,191,191,1);\n    box-shadow: 0 1px 1px #fff;\n  }\n  .dot {\n    display: inline-block;\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n  }\n  .active-dot {\n    background-color:#007AFF;\n  }\n  .info-id {\n    display: inline-block;\n    margin-left: 6px;\n    font-family: SFUIText-Regular;\n    font-size: 13px;\n    color: #030303;\n    vertical-align: 1.5px;\n  }\n  .info-region {\n    float: right;\n    margin-right: 17px;\n    font-family: SFUIText-Bold;\n    font-size: 13px;\n    color: #007AFF;\n  }\n  .info-bytime {\n    display: inline-block;\n    margin: 7.5px 0 0 21px;\n    font-family: SFUIText-Regular;\n    font-size: 13px;\n    color: #8F8E94;\n  }\n  .el-icon-arrow-right {\n    float: right;\n    font-size: 14px;\n    padding: 10px;\n    margin: -1.5px 4px 0 0;\n    color: rgba(0,0,0,0.25);\n    font-weight: bold;\n  }\n  .info-total {\n    margin: 16px 0 0 21px;\n    font-family: SFUIText-Bold;\n    font-size: 15px;\n    color: #030303;\n  }\n  .no-data {\n    margin-top: 50px;\n    font-family: SFUIText-Bold;\n    font-size: 15px;\n    color: #030303;\n    text-align: center;\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/mobile/mobile.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"mobile\" is not PascalCase.","line":13,"column":9,"nodeType":"Literal","endLine":13,"endColumn":17,"fix":{"range":[252,258],"text":"Mobile"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <section class='mobile-pr'>\n    <transition name=\"fade\" mode=\"out-in\">\n      <!-- <router-view :key=\"key\"></router-view> -->\n      <router-view></router-view>\n    </transition>\n  </section>\n</template>\n\n<script>\n\nexport default {\n  name: 'mobile'\n};\n</script>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\n  .mobile-pr {\n    width: 100%;\n    overflow-x: hidden;\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/mobile/sku.vue","messages":[{"ruleId":"vue/v-on-style","severity":2,"message":"Expected '@' instead of 'v-on:'.","line":4,"column":13,"nodeType":"VAttribute","endLine":4,"endColumn":35,"fix":{"range":[63,68],"text":"@"}},{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"skuInfo\" is not PascalCase.","line":46,"column":9,"nodeType":"Literal","endLine":46,"endColumn":18,"fix":{"range":[1670,1677],"text":"SkuInfo"}}],"errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"<template>\n  <div>\n    <header class='mobile-nav'>\n      <span v-on:touchend='goBack' class='el-icon-arrow-left fl'>Back</span>\n      <div class='txt-center'>{{$route.query.skuID}}</div>\n    </header>\n    <tabs :tabs='tabs' :activeTab='activeTab' @change='switchTab'></tabs>\n    <ul class='sku-info'>\n      <li v-for='item in Object.keys(labels[activeTab])' :key='item'>\n        <div class='info-label'>{{item}}</div>\n        <div v-if='item !== \"SALES\"' class='info-value'>\n          {{skuInfo[labels[activeTab][item].value] === '' || skuInfo[labels[activeTab][item].value] === undefined ?\n          '--' : (labels[activeTab][item].format ? formatValue(Number(skuInfo[labels[activeTab][item].value]).toFixed(2)) : skuInfo[labels[activeTab][item].value])}}\n          {{labels[activeTab][item].unit ? currency : ''}}\n        </div>\n        <ul v-else class='sale-list'>\n          <li class='info-value'>\n            W1\n            <span class='txt-right'>{{skuInfo.W1}}</span>\n          </li>\n          <li class='info-value'>\n            W2\n            <span class='txt-right'>{{skuInfo.W2}}</span>\n          </li>\n          <li class='info-value'>\n            W3\n            <span class='txt-right'>{{skuInfo.W3}}</span>\n          </li>\n          <li class='info-value'>\n            W4\n            <span class='txt-right'>{{skuInfo.W4}}</span>\n          </li>\n        </ul>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport { parsePurchaseRequestDetail } from '@/utils';\nimport { formatValue } from '@/utils/format.js';\nimport { SKUSourcingStatusText } from '@/utils/constant'; // 可能是不用的\nimport { Tabs } from '@/components/Mobile';\n\nexport default {\n  name: 'skuInfo',\n  data() {\n    return {\n      purchaseRequest: this.$store.getters.purchaseRequest,\n      approvalInfo: this.$store.getters.approvalInfo,\n      activeTab: 0,\n      tabs: ['SKU Information', 'Sales & Inventory'],\n      labels: [{\n        'SKU': { value: 'skuID' },\n        'Extrernal SKU': { value: 'externalSkuID' },\n        'SKU NAME': { value: 'skuName' },\n        'CATEGORY ID': { value: 'categoryID' },\n        'GUIDE PURCHASE PRICE': { value: 'guidePurchasePrice', unit: true, format: true },\n        'REQUESTED QUANTITY': { value: 'quantity' },\n        'REQUESTED PURCHASE PRICE (PRE-TAX)': { value: 'purchasePrice', unit: true, format: true },\n        'TAX CODE': { value: 'taxCode' },\n        'TAX RATE': { value: 'tax' },\n        'REQUESTED PURCHASE PRICE': { value: 'purchasePriceAfter', unit: true, format: true },\n        'REQUESTED VALUE': { value: 'value', unit: true, format: true },\n        'REASON': { value: 'reason' },\n        'COMMENT': { value: 'comment' }\n      }, {\n        'SKU': { value: 'skuID' },\n        'SKU NAME': { value: 'skuName' },\n        'CATEGORY ID': { value: 'categoryID' },\n        'REQUESTED QUANTITY': { value: 'quantity' },\n        'SALES': { value: '' },\n        'STOCK ON HAND': { value: 'stockOnHand' },\n        'STOCK IN TRANSMIT': { value: 'stockInTransmit' },\n        'STOCK FROM EXISTING PR': { value: 'stockFromExistingPr' },\n        'LAST APPROVED QTY': { value: 'lastApprovalQuantity' },\n        'APPROVED QTY': { value: 'approvalQuantity' }\n      }]\n    };\n  },\n  methods: {\n    formatValue,\n    goBack() {\n      this.$router.back();\n    },\n    switchTab(tab) {\n      this.activeTab = tab;\n    },\n    fetchDetail() {\n      const requestID = this.$route.query.requestID;\n      this.$store.dispatch('fetchPrDetail', requestID).then(resp => {\n        if (resp.status !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.purchaseRequest = parsePurchaseRequestDetail(resp.data);\n          this.approvalInfo.skuList = this.purchaseRequest.skuList;\n          this.purchaseRequest.ctime = resp.data.ctime;\n          this.purchaseRequest.createBy = resp.data.created_by;\n          // generate lastApprovalQuantity\n          if (this.purchaseRequest.approvalList.length > 0) {\n            this.approvalInfo.skuList.forEach(sku => {\n              sku['sourcingStatus'] = SKUSourcingStatusText[sku['sourcingStatus']];\n              sku['approvalQuantity'] = sku['lastApprovalQuantity'];\n            });\n          } else {\n            this.purchaseRequest.lastApprovalTotalValue = this.purchaseRequest.totalValue;\n            this.approvalInfo.skuList = this.approvalInfo.skuList.map(sku => {\n              sku['sourcingStatus'] = SKUSourcingStatusText[sku['sourcingStatus']];\n              sku['lastApprovalQuantity'] = sku['approvalQuantity'] = sku['quantity'];\n              return sku;\n            });\n          }\n          // this.approvalInfo.totalValue = parseFloat(this.purchaseRequest.lastApprovalTotalValue)\n          this.approvalInfo.totalValue = parseFloat(this.purchaseRequest.lastApprovalTotalValue).toFixed(2);\n\n          for (var i = 0; i < this.purchaseRequest.skuList.length; i++) {\n            const purchasePrice = this.purchaseRequest.skuList[i].purchasePrice;\n            const tax = this.purchaseRequest.skuList[i].tax;\n\n            this.purchaseRequest.skuList[i].purchasePriceAfter = (purchasePrice * (100 + tax) / 100).toFixed(2);\n          }\n          this.$store.commit('setPrDetail', {\n            purchaseRequest: this.purchaseRequest,\n            approvalInfo: this.approvalInfo\n          });\n        }\n      }).catch(() => {\n        this.$message.error('Get PR Detail Failed!');\n        this.$router.push({ path: '/admin/mobile' });\n      });\n    }\n  },\n  computed: {\n    skuInfo() {\n      const { skuID, type } = this.$route.query;\n      return this.purchaseRequest[type === 'gift' ? 'giftList' : 'skuList'].find(item => item.skuID === skuID) || {};\n    },\n    currency() {\n      return this.purchaseRequest.currency || '';\n    }\n  },\n  created() {\n    if (this.purchaseRequest.skuList.length === 0) {\n      this.fetchDetail();\n    }\n  },\n  components: {\n    Tabs\n  }\n};\n</script>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\n  .mobile-nav {\n    position: relative;\n    height: 44px;\n    line-height: 44px;\n    text-align: center;\n    align-items: center;\n    background-color: rgba(248,248,248,0.82);\n    border-bottom: 1px solid #bfbfbf;\n  }\n  .fl {\n    position: absolute;\n    top: 0;\n    left: 0;\n    font-family: AppleSystemUIFont;\n    font-size: 17px;\n    height: 44px;\n    line-height: 44px;\n    color: #007AFF;\n  }\n  .txt-center {\n    font-family: AppleSystemUIFont;\n    font-size: 17px;\n    color: #030303;\n    text-align: center;\n  }\n  .sku-info {\n    width: 100%;\n    overflow-x: hidden;\n    border-top: 1px solid #C7C7C7\n  }\n  .info-label {\n    height: 30px;\n    padding-left: 15px;\n    line-height: 30px;\n    font-family: AppleSystemUIFont;\n    font-size: 13px;\n    color: #6D6D72;\n    background: #EFEFF4;\n    border-bottom: 1px solid #bfbfbf;\n  }\n  .info-value {\n    padding-left: 15px;\n    line-height: 44px;\n    font-family: AppleSystemUIFont;\n    font-size: 17px;\n    color: #030303;\n    background: #fff;\n    word-break: break-word;\n    .txt-right {\n      float: right;\n      margin-right: 19px;\n    }\n  }\n  .sale-list {\n    width: 100%;\n    padding-left: 15px;\n    overflow-x: hidden;\n    .info-value {\n      padding-left: 0;\n      border-bottom: 1px solid #bfbfbf;\n      &:last-child {\n        border-bottom: none\n      }\n    }\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/moveTransfer/create/add-sku-dialog/added-table.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/moveTransfer/create/add-sku-dialog/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/moveTransfer/create/add-sku-dialog/sku-table.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/moveTransfer/create/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/moveTransfer/create/label-with-tip.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/moveTransfer/create/overview.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/moveTransfer/create/sku-list.vue","messages":[{"ruleId":"vue/no-spaces-around-equal-signs-in-attribute","severity":2,"message":"Unexpected spaces found around equal signs.","line":100,"column":13,"nodeType":"VDirectiveKey","endLine":100,"endColumn":15,"fix":{"range":[4141,4143],"text":"="}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div class=\"pms-ui\">\n    <el-table\n      border\n      class=\"sku-table\"\n      row-key=\"sku_id\"\n      :data=\"currentPageData\"\n    >\n      <el-table-column :label=\"$t('commonSkuID')\" prop=\"sku_id\" :width=\"170\" />\n      <el-table-column :label=\"$t('commonSkuName')\" prop=\"sku_name\" :width=\"170\" />\n      <el-table-column :label=\"$t('commonShopIdName')\" :width=\"170\">\n        <template slot-scope=\"scope\">\n          {{`${scope.row.shop_id}/${scope.row.shop_name}`}}\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('categoryCluster')\" prop=\"category_cluster\" :width=\"120\" />\n      <el-table-column>\n        <template slot=\"header\">\n          <TableHeader textKey=\"commonOutbound\" />\n        </template>\n        <el-table-column prop=\"outbound_whs_fe_stock\" :width=\"100\">\n          <template slot=\"header\">\n            <LabelWithTip\n              :label=\"$t('outboundWarehouseFEStock')\"\n              :tip=\"$t('moveTransferOutboundWarehouseStockTip')\"\n            />\n          </template>\n        </el-table-column>\n        <el-table-column :label=\"$t('outboundInventoryHealthTag')\" prop=\"outbound_whs_health_level\" :width=\"100\">\n          <template slot-scope=\"scope\">\n            <InventoryHealthTag :level=\"scope.row.outbound_whs_health_level\" shape=\"circle\" :size=\"14\" />\n          </template>\n        </el-table-column>\n      </el-table-column>\n      <el-table-column>\n        <template slot=\"header\">\n          <TableHeader textKey=\"inbound\" />\n        </template>\n        <el-table-column prop=\"inbound_whs_sellable_stock\" :width=\"100\">\n          <template slot=\"header\">\n            <LabelWithTip\n              :label=\"$t('moveTransferInboundWarehouseStock')\"\n              :tip=\"$t('moveTransferInboundWarehouseStockTip')\"\n            />\n          </template>\n        </el-table-column>\n        <el-table-column :label=\"$t('inboundHealthTag')\" prop=\"inbound_whs_health_level\" :width=\"100\">\n          <template slot-scope=\"scope\">\n            <InventoryHealthTag :level=\"scope.row.inbound_whs_health_level\" shape=\"circle\" :size=\"14\" />\n          </template>\n        </el-table-column>\n      </el-table-column>\n      <el-table-column :label=\"$t('referencePurchasePrice', {currency})\">\n        <template slot-scope=\"scope\">\n          {{renderPurchasePrice(scope.row.reference_purchase_price)}}\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('commonSellingType')\" min-width=\"120\">\n        <template slot=\"header\" slot-scope='scope'>\n          <span>{{$t('commonSellingType')}}</span>\n          <el-popover placement=\"top\" trigger=\"hover\" width=\"320px\" popper-class=\"break-word\" :content=\"$t('commonSellingTypeTips')\">\n            <svg-icon slot=\"reference\" iconClass=\"question\"></svg-icon>\n          </el-popover>\n        </template>\n        <template slot-scope='scope'>{{formatSellingType(scope.row.selling_type)}}</template>\n      </el-table-column>\n      <el-table-column :label=\"$t('requestedQTY')\" prop=\"request_qty\" :width=\"110\">\n        <template slot-scope=\"scope\">\n          <el-input-number\n            v-model=\"scope.row.request_qty\"\n            :controls=\"false\"\n            :min=\"1\"\n            :max=\"scope.row.outbound_whs_fe_stock || 0\"\n            :style=\"{width: '80px'}\"\n            :step=\"1\"\n            :step-strictly=\"true\"\n          />\n        </template>\n      </el-table-column>\n      <el-table-column :width=\"100\">\n        <template slot=\"header\">\n          <LabelWithTip :label=\"$t('referenceValue', {currency})\" :tip=\"$t('referenceValueTips')\" />\n        </template>\n        <template slot-scope=\"scope\">\n          {{getReferenceValue(scope.row)}}\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('commonAction')\" fixed=\"right\" :width=\"100\">\n        <template slot-scope=\"scope\">\n          <el-button @click=\"handleRemove(scope.row.sku_id)\" type=\"text\" class=\"remove-button\">\n            {{$t('commonRemove')}}\n          </el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <el-pagination\n      background\n      layout=\"sizes, prev, pager, next\"\n      class=\"pagination\"\n      :total= \"total\"\n      :current-page=\"pageNo\"\n      :page-size=\"pageSize\"\n      :page-sizes=\"[10, 20, 50, 100]\"\n      @size-change=\"handlePageSizeChange\"\n      @current-change=\"handlePageChange\"\n    />\n  </div>\n</template>\n\n<script>\nimport InventoryHealthTag from '@/components/Sku/inventoryHealthTag.vue';\nimport TableHeader from './table-header';\nimport LabelWithTip from './label-with-tip';\nimport {formatNumber} from './utils';\nimport { formatSellingType } from '@/utils';\n\nexport default {\n  name: 'CreateMoveTranferSkuList',\n  components: {InventoryHealthTag, TableHeader, LabelWithTip},\n  props: {\n    list: {\n      type: Object,\n      default: () => ({})\n    },\n    currency: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      tableData: [],\n      pageNo: 1,\n      pageSize: 10,\n      total: 0\n    };\n  },\n  mounted() {\n    this.initData(this.list);\n  },\n  methods: {\n    formatSellingType,\n    initData(list) {\n      const data = Object.values(list);\n      this.tableData = data;\n      this.total = data.length;\n    },\n    handleRemove(id) {\n      this.$emit('onRemoveSku', id);\n    },\n    handlePageSizeChange(size) {\n      this.pageNo = 1;\n      this.pageSize = size;\n    },\n    handlePageChange(page) {\n      this.pageNo = page;\n    },\n    getReferenceValue(row) {\n      const {reference_purchase_price, request_qty} = row;\n      if (reference_purchase_price < 0) {\n        return '/';\n      }\n      const totalValue = (reference_purchase_price * request_qty) || 0;\n      return formatNumber(totalValue, 2);\n    },\n    renderPurchasePrice(value) {\n      return value < 0 ? '/' : value;\n    }\n  },\n  computed: {\n    currentPageData() {\n      const start = (this.pageNo - 1) * this.pageSize;\n      const end = start + this.pageSize;\n      return this.tableData.slice(start, end);\n    }\n  },\n  watch: {\n    list(value) {\n      this.initData(value);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.sku-table {\n  .remove-button {\n    color: red;\n  }\n}\n\n.pagination {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 20px;\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/moveTransfer/create/table-header.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/moveTransfer/create/utils.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/moveTransfer/detail/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/moveTransfer/detail/overview.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/moveTransfer/detail/remark.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/moveTransfer/detail/skuList.vue","messages":[{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"Pager\" is not in camelCase.","line":41,"column":5,"nodeType":"Property","endLine":41,"endColumn":18}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"sku-list-content pms-ui\">\n    <list-view\n      :dataList=\"itemList\"\n      :config=\"tableConfig\"\n      :tableSchema=\"tableSchema\">\n    </list-view>\n    <!-- 分页 -->\n    <el-pagination\n      :disabled=\"disabled\"\n      :current-page.sync=\"Pager.pageIndex\" background layout=\"sizes, prev, pager, next\" :total.sync=\"Pager.total\"\n      :page-size.sync=\"Pager.size\" :page-sizes=\"[10, 20, 50, 100]\"\n      @current-change=\"handleChangePageIndex\" @size-change=\"handleChangePageSize\"\n    ></el-pagination>\n  </div>\n</template>\n\n<script>\nimport ListView from '@/components/ApproveList/list';\nimport { formatNumber } from '../create/utils';\nimport { formatSellingType } from '@/utils';\n\nexport default {\n  components: { ListView },\n  data() {\n    return {\n      tableConfig: {\n        align: 'left'\n      }\n    };\n  },\n  props: {\n    currency: {\n      required: true,\n      type: String\n    },\n    itemList: {\n      required: true,\n      default: () => ([])\n    },\n    Pager: Object,\n    canEdit: {\n      required: true,\n      type: Boolean\n    },\n    disabled: {\n      default: false\n    }\n  },\n  computed: {\n    tableSchema() {\n      return [{ field: 'sku_id', label: this.$t('commonSkuID'), width: '170px' },\n      { field: 'sku_name', label: this.$t('commonSkuName'), width: '150px' },\n      { field: 'shop_id', label: this.$t('commonShopIdName'), width: '155px', render: (schema, row) => {\n        return `${row['shop_id']}/${row['shop_name']}`;\n      }},\n      { field: 'category_cluster', label: this.$t('categoryCluster'), width: '168px' },\n      { field: 'outbound_whs_fe_stock', label: this.$t('outboundWarehouseFEStock'), width: '140px', render: this.handleValue },\n      { field: 'outbound_whs_health_tag', label: this.$t('outboundInventoryHealthTag'), width: '155px', render: (schema, row, index, h) => {\n        if (!row[schema.field]) { return '/'; }\n        return ['div', { class: 'health-tag-con' }, [h('span', { class: { 'health-tag': true }, style: { background: row[schema.field] } })]];\n      }},\n      { field: 'inbound_whs_sellable_stock', label: this.$t('inboundWarehouseFEStock'), width: '144px', render: this.handleValue },\n      { field: 'inbound_whs_health_tag', label: this.$t('inboundHealthTag'), width: '155px', render: (schema, row, index, h) => {\n        if (!row[schema.field]) { return '/'; }\n        return ['div', { class: 'health-tag-con' }, [h('span', { class: { 'health-tag': true }, style: { background: row[schema.field] } })]];\n      } },\n      { field: 'reference_purchase_price', label: this.$t('referencePurchasePrice', { currency: this.currency }), width: '144px', render: this.handleValue },\n      { field: 'selling_type', label: this.$t('commonSellingType'),\n          renderHeader: (h, { column }) => {\n            return h('div', null, [\n              column.label,\n              h(\n                  'el-popover',\n                  {\n                    props: {\n                      placement: 'top',\n                      trigger: 'hover',\n                      'popper-class': 'break-word',\n                      width: '320px',\n                      content: this.$t('commonSellingTypeTips')\n                    }\n                  },\n                  [\n                    h(\n                      'svg-icon',\n                      {\n                        class: 'question question-icon',\n                        props: { iconClass: 'question' },\n                        slot: 'reference'\n                      },\n                      null\n                    )\n                  ]\n                )\n            ]);\n          },\n          render: (schema, row, index, h) => {\n            return formatSellingType(row.selling_type);\n          }\n        },\n      { field: 'request_qty', label: this.$t('requestedQTY'), width: '126px', render: (schema, row, index, h) => {\n        return this.handlerQty(schema, row, index, h, 'request_qty');\n      }},\n      { field: 'approved_qty', align: 'center', label: this.$t('approvedQty'), width: '96px', fixed: this.canEdit ? 'right' : false, render: (schema, row, index, h) => {\n        const approvedQty = row.approved_qty < 0 ? row.request_qty : row.approved_qty;\n        return this.canEdit ? ['el-input-number', { class: ['approve-qty', {'is-error': row.isError}], props: { type: 'number', min: 0, controls: false, value: approvedQty, max: row.outbound_whs_fe_stock, precision: 0 },\n        on: { input: value => { this.$set(row, 'approved_qty', value); }, change: (curVal, oldVal) => this.handlerChange(curVal, oldVal, row) }}] : this.handlerQty(schema, row, index, h, 'approved_qty');\n      }},\n      { field: 'allocated_qty', label: this.$t('allocatedQty'), width: '96px', render: (schema, row, index, h) => {\n        return this.handlerQty(schema, row, index, h, 'allocated_qty');\n      }},\n      { field: 'outbound_qty', label: this.$t('actualOutboundQty'), width: '135px', render: (schema, row, index, h) => {\n        return this.handlerQty(schema, row, index, h, 'outbound_qty');\n      }},\n      { field: 'inbound_qty', label: this.$t('actualInboundQty'), width: '135px', render: (schema, row, index, h) => {\n        return this.handlerQty(schema, row, index, h, 'inbound_qty');\n      }},\n      { field: 'reference_value', label: this.$t('referenceValue', { currency: this.currency }), width: '135px', render: this.handleValue,\n      renderHeader: (h, {column}) => {\n        return h('section', [column.label, h('el-popover',\n          { class: 'payment-request-list-wrapper',\n            props: { placement: 'top', trigger: 'hover',\n              popperClass: 'word-break', content: this.$t('referenceValueTips')\n            }\n          },\n          [h('svg-icon', { class: 'question el-icon-question question-icon', props: { iconClass: 'question' }, slot: 'reference' })]\n        )]);\n        }\n       }\n      ];\n    }\n  },\n  methods: {\n    handlerChange(curVal, oldVal, row) {\n      if (curVal === undefined) {\n        row.approved_qty = 0;\n        curVal = 0;\n      }\n      this.$emit('changeSku', curVal, oldVal, row);\n    },\n    handleValue(schema, row, index, h) {\n      if (row[schema.field] < 0) {\n        return '/';\n      } else {\n        if (['reference_purchase_price', 'reference_value'].includes(schema.field)) {\n          return formatNumber(row[schema.field], 2);\n        } else {\n          return row[schema.field];\n        }\n      };\n    },\n    handlerQty(schema, row, index, h, field) {\n      if (row[schema.field] < 0) return '/';\n      // 不是 mapping sku，则除inbound_qty直接展示，inbound_qty则展示good/damage/missing\n      const isNotMappingSku = !row['quantity_detail_list'].length;\n        return isNotMappingSku ? (\n          field !== 'inbound_qty' ? row[schema.field] : ['section', [row[schema.field], h('el-popover',\n          { props: { placement: 'top', trigger: 'hover' } },\n          [h('div', null,\n            `${this.$t('goodQty')}:${row.inbound_good_qty},${this.$t('damageQty')}:${row.inbound_damage_qty}, ${this.$t('missingQty')}:${row.inbound_missing_qty}`),\n            h('i', { class: 'el-icon-warning-outline qty-tips question-icon', slot: 'reference' })]\n        )]]) : ['section', [row[schema.field], h('el-popover',\n          { props: { placement: 'top', trigger: 'hover', popperClass: 'word-break' } },\n          [h('ul', row['quantity_detail_list'].map((item) => {\n            return field !== 'inbound_qty' ? h('li', `${item.actual_sku_id}: ${item[field]}`) : h('li',\n            `${item.actual_sku_id}: ${this.$t('goodQty')}:${item.inbound_good_qty},${this.$t('damageQty')}:${item.inbound_damage_qty}, ${this.$t('missingQty')}:${item.inbound_missing_qty}`);\n          })), h('i', { class: 'el-icon-warning-outline qty-tips question-icon', slot: 'reference' })]\n        )]];\n    },\n    handleChangePageIndex(index) {\n      this.$emit('getItemList', index);\n    },\n    handleChangePageSize(size) {\n      this.$emit('getItemList', 1, size);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.sku-list-content {\n  .health-tag-con {\n    text-align: center;\n  }\n  .health-tag {\n    display: inline-block;\n    width: 14px;\n    height: 14px;\n    border-radius: 50%;\n    border: 1px solid #ddd;\n  }\n  .question-icon {\n    color: #999;\n    cursor: pointer;\n  }\n  .qty-tips {\n    margin-left: 5px;\n  }\n  .approve-qty {\n    width: 64px;\n  }\n}\n</style>\n\n<style scoped lang=\"scss\">\n.sku-list-content {\n  .el-pagination {\n    text-align: center;\n    margin-top: 10px;\n  }\n  /deep/.is-error input.el-input__inner {\n    border-color: #F56C6C;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/moveTransfer/list/dataList.vue","messages":[{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"Pager\" is not in camelCase.","line":98,"column":5,"nodeType":"Property","endLine":98,"endColumn":18}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"move-transfer-table pms-ui\" v-loading=\"loading\">\n    <el-checkbox-group v-model=\"checkedRows\" @change=\"changeCheckedBox\">\n      <list-view\n        :dataList=\"itemList\"\n        :config=\"tableConfig\"\n        :tableSchema=\"tableSchema\"\n        @selectionChange=\"onSelectionChange\">\n        <template slot=\"checkColumn\">\n          <el-table-column\n            class=\"checked-select\"\n            column-key=\"action\"\n            width=\"80px\"\n            align=\"center\"\n            class-name=\"select-all-table-cell\">\n            <template slot-scope=\"scope\" slot=\"header\">\n              <el-dropdown\n                @click=\"resetCheckedType\"\n                placement=\"bottom\"\n                split-button\n                trigger=\"click\"\n                class=\"pms-ele-ui select-page-dropdown\"\n                @command=\"changeSelectPageType\">\n                <span :class=\"`el-checkbox__input ${checkedType ? 'is-checked' : ''}`\">\n                <span :class=\"`el-checkbox__inner ${checkedType ? 'is-checked' : ''}`\"></span>\n                </span>\n                  <el-dropdown-menu class=\"options-field-menu\" slot=\"dropdown\">\n                    <el-dropdown-item command=\"current\">Current Page</el-dropdown-item>\n                    <el-dropdown-item command=\"all\">All Pages</el-dropdown-item>\n                  </el-dropdown-menu>\n                </el-dropdown>\n              </template>\n              <template slot-scope=\"scope\">\n                <el-checkbox :disabled=\"checkedType === 'all'\" :label=\"scope.row\">{{ '' }}</el-checkbox>\n              </template>\n            </el-table-column>\n          </template>\n        <!-- 设置按钮 -->\n        <template slot=\"end\">\n          <el-table-column width=\"20\" fixed=\"right\" class-name=\"display-options\">\n            <template slot-scope=\"scope\" slot=\"header\">\n              <options-field\n                :btnType=\"'icon'\"\n                class=\"option-field-wrapper\"\n                @fieldChange=\"displayOptionsChange\"\n                :dropdownText=\"$t('commonDisplayOptions')\"\n                :fieldList=\"fieldConfig.list || []\"\n                :defaultList=\"fieldConfig.default\"\n              ></options-field>\n            </template>\n          </el-table-column>\n        </template>\n      </list-view>\n    </el-checkbox-group>\n    <!-- 分页 -->\n    <el-pagination\n      :current-page=\"Pager.pageIndex\" background layout=\"sizes, prev, pager, next\" :total.sync=\"Pager.total\"\n      :page-size=\"Pager.size\" :page-sizes=\"[10, 20, 50, 100]\"\n      @current-change=\"handleChangePageIndex\" @size-change=\"handleChangePageSize\"\n    ></el-pagination>\n  </div>\n</template>\n\n<script>\nimport ListView from '@/components/ApproveList/list';\nimport OptionsField from '@/components/ApproveList/optionsField';\nimport {\n  MoveTransferSource,\n  MoveTransferStatus\n} from '@/utils/constant';\nimport { DefaultDisplayList, DisplayFieldList } from './moveTransferConst';\nconst ModuleKey = 'pmsMoveTransferListFields';\n\nexport default {\n  data() {\n    return {\n      tableConfig: {\n        showCheckBox: false,\n        align: 'left'\n      },\n      showTableSchemaList: [],\n      checkedType: '',\n      checkedRows: [],\n      showListFieldArr: [],\n      userSetting: {},\n      loading: false\n    };\n  },\n  components: {\n    ListView,\n    OptionsField\n  },\n  props: {\n    itemList: {\n      type: Array,\n      default: () => []\n    },\n    Pager: Object,\n    activeTab: {\n      type: String,\n      default: 'all'\n    }\n  },\n  watch: {\n    activeTab: {\n      handler(newVal, oldVal) {\n        this.getUserSetting();\n        if (newVal === 'pending') {\n          this.showListFieldArr = ['mtr_id', 'inbound_whs_id', 'expected_outbound_date', 'outbound_whs_id',\n            'expected_inbound_date', 'source', 'request_qty', 'request_time', 'requester', 'action'];\n        } else if (newVal === 'myRequest') {\n          this.showListFieldArr = ['mtr_id', 'mti_id', 'mto_id', 'inbound_whs_id', 'expected_outbound_date', 'outbound_whs_id',\n            'expected_inbound_date', 'status', 'source', 'request_qty', 'request_time', 'action'];\n        } else {\n          this.showListFieldArr = ['mtr_id', 'mti_id', 'mto_id', 'inbound_whs_id', 'expected_outbound_date', 'outbound_whs_id',\n            'expected_inbound_date', 'status', 'source', 'request_qty', 'request_time', 'requester', 'action'];\n        }\n      },\n      immediate: true\n    }\n  },\n  computed: {\n    fieldConfig() {\n      const storageList = this.userSetting[this.activeTab];\n      return {\n        list: DisplayFieldList[this.activeTab].map((item) => ({\n          ...item,\n          label: this.$t(item.label)\n        })),\n        default: (Array.isArray(storageList) && storageList.length) ? storageList : DefaultDisplayList[this.activeTab]\n      };\n    },\n    tableSchema() {\n      return [\n        { field: 'mtr_id', label: this.$t('mtrId'), minWidth: `142px` },\n        { field: 'mti_id', label: `${this.$t('mtiId')}/${this.$t('mtoId')}`, minWidth: `160px`,\n          render: (schema, row) => { return `${row['mti_id']}/${row['mto_id']}`; }\n        },\n        { field: 'outbound_whs_id', label: this.$t('outboundWarehouse\t'), minWidth: `90px` },\n        { field: 'inbound_whs_id', label: this.$t('inboundWarehouse'), minWidth: `90px` },\n        { field: 'expected_outbound_date', label: this.$t('expectedOutboundDate'), minWidth: `120px` },\n        { field: 'expected_inbound_date', label: this.$t('expectedInboundDate'), minWidth: `120px` },\n        { field: 'status', label: this.$t('commonStatus'), minWidth: `108`, render: (schema, row) => {\n          return (MoveTransferStatus.find(item => item.value === row[schema.field]) || {}).label || '/';\n        }},\n        { field: 'source', label: this.$t('commonSource'), minWidth: `88px`, render: (schema, row) => {\n          return (MoveTransferSource.find(item => item.value === row[schema.field]) || {}).label || '/';\n        }},\n        { field: 'request_qty', label: this.$t('requestQty'), minWidth: `105px` },\n        { field: 'request_time', label: this.$t('requestTime'), minWidth: `120px` },\n        { field: 'requester', label: this.$t('commonRequestor'), minWidth: `120px` },\n        { field: 'action', fixed: 'right', label: this.$t('commonAction'), width: '100px', render: (schema, row) => ['span',\n          { class: 'detail-btn', on: { click: () => { this.$emit('rowClick', row); } }}, this.$t('commonDetail')]\n        }\n      ].filter(item => this.showListFieldArr.includes(item.field) && this.showTableSchemaList.includes(item.field));\n    }\n  },\n  methods: {\n    getUserSetting() {\n      const userID = this.$store.getters.userID;\n      const key = `${ModuleKey}-${userID}`;\n      this.loading = true;\n      this.$store.dispatch('getUserSetting', [key]).then(data => {\n        const settings = (data || {})[key];\n        if (settings && typeof settings === 'string') {\n          this.userSetting = JSON.parse(settings);\n          // 获取到的userSetting来配置table显示的列\n          this.showTableSchemaList = (Array.isArray(this.userSetting[this.activeTab]) && this.userSetting[this.activeTab].length) ? this.userSetting[this.activeTab] : DefaultDisplayList[this.activeTab];\n        } else {\n          this.showTableSchemaList = DefaultDisplayList[this.activeTab];\n        }\n      }).catch(() => {\n        this.$message.error('Get user setting failed!');\n      }).finally(() => {\n        this.loading = false;\n      });\n    },\n    resetCheckedType() {\n      this.checkedType = '';\n      this.checkedRows = [];\n      this.$emit('checked', '', []);\n    },\n    changeSelectPageType(type) {\n      this.checkedType = type;\n      this.checkedRows = this.itemList;\n      this.$emit('checked', type, this.checkedRows);\n    },\n    changeCheckedBox() {\n      this.$emit('checked', this.checkedType, this.checkedRows);\n    },\n    onSelectionChange(selection) {\n      this.checkedRows = selection;\n      this.$emit('checked', this.checkedType, this.checkedRows);\n    },\n    displayOptionsChange(list) {\n      this.showTableSchemaList = list;\n      this.userSetting[this.activeTab] = list;\n      const userID = this.$store.getters.userID;\n      const params = {\n        business_key: `${ModuleKey}-${userID}`,\n        business_value: JSON.stringify(this.userSetting)\n      };\n      this.$store.dispatch('setUserSetting', [params]).catch(() => {\n        this.$message.error('Set user setting failed!');\n      });\n    },\n    handleChangePageIndex(index) {\n      this.$emit('getItemList', index);\n    },\n    handleChangePageSize(size) {\n      this.$emit('getItemList', 1, size);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.move-transfer-table {\n  .el-pagination {\n    margin-top: 14px;\n    text-align: center;\n  }\n}\n</style>\n\n<style lang=\"scss\">\n.move-transfer-table {\n  .list-popover-more {\n    font-family: Roboto-Regular;\n    font-size: 14px;\n    color: #3D6ED1;\n    .more-text {\n      padding-right: 5px;\n    }\n  }\n  .el-table th > .cell {\n    text-overflow: clip;\n  }\n  .cell > .detail-btn {\n    cursor: pointer;\n    font-size: 14px;\n    color: #3D6ED1;\n  }\n  .option-field-wrapper {\n    float: none;\n  }\n  .display-options {\n    &.is-leaf {\n      background-color: rgba(0, 0, 0, 0.13);\n    }\n    .cell {\n      padding: 0;\n      text-align: center;\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/moveTransfer/list/index.vue","messages":[{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":32,"column":20,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":32,"endColumn":21,"fix":{"range":[1033,1034],"text":""}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div class=\"pms-ui move-transfer-list\">\n    <section>\n      <el-tabs tab-position='bottom' v-model=\"activeTab\" @tab-click=\"handleTabChange\">\n        <el-tab-pane v-for='item in tabList' :key='item.name' :label=\"$t(item.label)\" :name='item.name'></el-tab-pane>\n      </el-tabs>\n      <div v-if=\"canCreate\" class=\"create-request-btn\">\n        <el-button size=\"mini\" type=\"primary\" icon=\"el-icon-plus\" @click=\"gotoCreate\">Create Request</el-button></div>\n    </section>\n    <list :tab=\"activeTab\" @changeTab=\"handleTabChange\"></list>\n  </div>\n</template>\n\n<script>\nimport { hasPermission } from '@/utils/permission';\nimport {\n  Permission\n} from '@/utils/constant';\nimport List from './moveTransferList';\n\nexport default {\n  data() {\n    return {\n      activeTab: this.$route.query.activeTab || 'all',\n      tabList: [\n        { name: 'all', label: 'commonAll' },\n        { name: 'pending', label: 'commonMyPendingApprovals' },\n        { name: 'myRequest', label: 'commonMyRequest' }\n      ]\n    };\n  },\n  beforeRouteUpdate (to, from, next) {\n    if (to.query && from.query && to.query.activeTab !== from.query.activeTab && !to.query.activeTab) {\n      this.activeTab = 'all';\n    }\n    next();\n  },\n  computed: {\n    canCreate() {\n      return hasPermission(Permission.MOVE_TRANSFER_PROCESS);\n    }\n  },\n  components: { List },\n  methods: {\n    gotoCreate() {\n      this.$router.push(`/admin/inventory/transfer/create`);\n    },\n    handleTabChange(tab) {\n      this.activeTab = tab.name;\n      this.$router.push({ query: { activeTab: tab.name }});\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.move-transfer-list {\n  .el-tabs--bottom .el-tabs__item.is-bottom:nth-child(2) {\n    padding-left: 20px;\n  }\n  .el-tabs__item {\n    font-size: 18px;\n    color: #333333;\n  }\n}\n</style>\n\n<style lang=\"scss\" scoped>\n.move-transfer-list {\n  padding: 0 16px;\n  .create-request-btn {\n    position: relative;\n    float: right;\n    margin-top: -44px;\n    button {\n      font-size: 14px;\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/moveTransfer/list/moveTransferConst.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/moveTransfer/list/moveTransferList.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/moveTransfer/list/searchForm.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":2,"column":54,"nodeType":"VIdentifier","messageId":"deprecated","endLine":2,"endColumn":60}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-form class=\"move-transfer-list-search\" @submit.native.prevent>\n    <div class=\"search-form-row\">\n      <section v-for=\"schema in visibleSearchSchema\" :key=\"schema.field\" :class=\"getColLongClass(schema.field)\">\n        <el-form-item v-if=\"disabledField(schema)\" :label=\"schema.label\">\n          <el-popover popper-class=\"break-word pms-ele-ui fbs-inbound-request\" placement=\"top\" width=\"400\" trigger=\"hover\">\n            <div class=\"pms-text-left\">{{$t('FBSPleaseFilterRegionFirst')}}</div>\n            <el-select slot=\"reference\" :disabled=\"true\" value=\"\"></el-select>\n          </el-popover>\n        </el-form-item>\n        <el-form-item :label=\"schema.label\" v-else>\n          <pms-form-item @input=\"modifyForm\" :renderData=\"{ schema, form }\"></pms-form-item>\n        </el-form-item>\n      </section>\n    </div>\n    <el-row class=\"action-search action-row\">\n      <el-form-item class=\"right-action-btn\">\n        <span v-if=\"isShowMoreBtn && showMore === false\" class=\"more-btn\" @click=\"toggleShowMore(true)\"\n          >{{ $t('commonMore') }}<i class=\"el-icon-arrow-down\"></i\n        ></span>\n        <span v-if=\"isShowMoreBtn && showMore === true\" class=\"more-btn\" @click=\"toggleShowMore(false)\"\n          >{{ $t('commonLess') }}<i class=\"el-icon-arrow-up\"></i\n        ></span>\n        <div class=\"clear-btn list-btn light-btn\" @click=\"onReset\">{{$t(\"purchaseRequest.clear\")}}</div>\n        <el-button class=\"list-btn search-btn\" native-type=\"submit\" @click=\"onSearch\">{{$t(\"rule.search\")}}</el-button>\n      </el-form-item>\n    </el-row>\n  </el-form>\n</template>\n\n<script>\nimport PMSFormItem, { getSelectOptions } from '@/components/BaseItem/formItem';\nimport { MoveTransferStatus, MoveTransferSource } from '@/utils/constant';\n\nexport default {\n  data() {\n    return {\n      showSearchFieldArr: [],\n      showMore: false\n    };\n  },\n  props: {\n    form: {\n      type: Object,\n      required: true\n    },\n    // 首次显示的筛选项数量\n    firstShowCount: {\n      type: Number,\n      default: 100\n    },\n    activeTab: {\n      type: String,\n      default: ''\n    }\n  },\n  components: {\n    'pms-form-item': PMSFormItem\n  },\n  watch: {\n    form: {\n      handler(newName, oldName) {\n        this.showSearchFieldArr = Object.keys(newName);\n      },\n      immediate: true,\n      deep: true\n    },\n    activeTab: {\n      handler() {\n        this.showMore = false;\n      },\n      immediate: true\n    }\n  },\n  computed: {\n    // more less 切换\n    isShowMoreBtn() {\n      return this.firstShowCount && this.firstShowCount < this.schemaList.length;\n    },\n    warehouseList() {\n      const region = this.form.region;\n      return this.$store.getters.warehouseList.filter(warehouse => {\n        return warehouse.country === region;\n      }).map(warehouse => ({ label: warehouse.warehouse, value: warehouse.warehouse }));\n    },\n    isUniversalUser() {\n      return this.$store.getters.isUniversalUser;\n    },\n    regionList() {\n      return [{ label: 'All', value: '' }, ...this.$store.getters.countrySelectList || []];\n    },\n    countryList() {\n      return [...new Set([...this.$store.getters.countryList.map(item => item.country)])];\n    },\n    visibleSearchSchema() {\n      const schema = this.schemaList || [];\n      return schema.filter((item, index) => (this.showMore || index < this.firstShowCount));\n    },\n    schemaList() {\n      return [\n        { field: 'region', type: 'select', label: this.$t('commonRegion'),\n          on: {\n            change: (value) => {\n              this.onSearch();\n            }\n          },\n          defaultValue: !this.isUniversalUser ? this.$store.getters.country : '',\n          props: { clearable: true, placeholder: 'Please Select' },\n          getChildren: (h) => getSelectOptions(this.regionList, h)\n        },\n        { field: 'outbound_whs_id', type: 'select', label: this.$t('outboundWarehouse'),\n          props: { clearable: true, placeholder: 'Please Select' },\n          getChildren: (h) => getSelectOptions([{ label: 'All', value: '' }, ...this.warehouseList], h),\n          on: { change: () => this.onSearch() }\n        },\n        { field: 'inbound_whs_id', type: 'select', label: this.$t('inboundWarehouse'),\n          props: { clearable: true, placeholder: 'Please Select' },\n          getChildren: (h) => getSelectOptions([{ label: 'All', value: '' }, ...this.warehouseList], h),\n          on: { change: () => this.onSearch() }\n        },\n        { field: 'mtr_id', type: 'input', label: this.$t('mtrId'), attrs: { placeholder: 'Please Input' } },\n        { field: 'mto_id', type: 'input', label: this.$t('mtoId'), attrs: { placeholder: 'Please Input' } },\n        { field: 'mti_id', type: 'input', label: this.$t('mtiId'), attrs: { placeholder: 'Please Input' } },\n        { field: 'status', type: 'select', label: this.$t('commonStatus'), defaultValue: null,\n          getChildren: (h) => getSelectOptions(MoveTransferStatus, h),\n          props: { clearable: true, placeholder: 'Please Select' },\n          on: { change: () => this.onSearch() }\n        },\n        { field: 'source', type: 'select', label: this.$t('commonSource'), defaultValue: null,\n          getChildren: (h) => getSelectOptions(MoveTransferSource, h),\n          props: { clearable: true, placeholder: 'Please Select' },\n          on: { change: () => this.onSearch() }\n        },\n        { field: 'expected_outbound_date', type: 'date-picker', label: this.$t('expectedOutboundDate'),\n          props: { type: 'daterange', rangeSeparator: '-', startPlaceholder: 'Begin', endPlaceholder: 'End', placeholder: 'Please Select', valueFormat: 'yyyy-MM-dd' }\n        },\n        { field: 'expected_inbound_date', type: 'date-picker', label: this.$t('expectedInboundDate'),\n          props: { type: 'daterange', rangeSeparator: '-', startPlaceholder: 'Begin', endPlaceholder: 'End', placeholder: 'Please Select', valueFormat: 'yyyy-MM-dd' }\n        },\n        { field: 'create_time', type: 'date-picker', label: this.$t('commonCreateTime'),\n          props: { type: 'daterange', rangeSeparator: '-', startPlaceholder: 'Begin', endPlaceholder: 'End', placeholder: 'Please Select', valueFormat: 'yyyy-MM-dd' }\n        },\n        { field: 'requester', type: 'input', label: this.$t('commonRequestor'),\n          attrs: {\n            placeholder: 'Please Input'\n          }\n        },\n        { field: 'listing_creator', type: 'input', label: this.$t('listingCreator'),\n          attrs: {\n            placeholder: 'Please Input'\n          }\n        }\n      ].filter(item => this.showSearchFieldArr.includes(item.field));\n    }\n  },\n  methods: {\n    toggleShowMore(val) {\n      this.showMore = val;\n    },\n    disabledField(schema) {\n      return (['outbound_whs_id', 'inbound_whs_id', 'expected_outbound_date', 'expected_inbound_date', 'create_time'].includes(schema.field)) && this.form.region === '';\n    },\n    getColLongClass(field) {\n      const longFieldArr = ['expected_outbound_date', 'expected_inbound_date', 'create_time'];\n      return longFieldArr.includes(field) ? 'long-col' : '';\n    },\n    modifyForm(schema, value) {\n      this.$emit('modify', schema.field, value);\n    },\n    onSearch() {\n      this.$emit('search');\n    },\n    onReset() {\n      this.schemaList.forEach(schema => {\n        this.$emit('modify', schema.field, schema.defaultValue === null ? undefined : schema.defaultValue || '');\n      });\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.move-transfer-list-search {\n  margin: 22px 18px 20px 19px;\n  .el-col {\n    height: 58px;\n    line-height: 58px;\n  }\n  .search-form-row {\n    display: grid;\n    grid-auto-flow: row dense;\n    grid-gap: 12px;\n    grid-template-columns: repeat(4, minmax(240px, 1fr));\n    margin-bottom: 20px;\n  }\n  .long-col {\n    grid-column-start: span 2;\n  }\n  .action-row {\n    margin: -16px -4px -18px 0;\n  }\n  .action-search {\n    border-bottom: 1px solid #E3E3E3;\n    text-align: right;\n    .more-btn {\n      cursor: pointer;\n      color: #3d6ed1;\n      margin-right: 12px;\n      i {\n        margin-left: 5px;\n      }\n    }\n  }\n  .clear-btn {\n    color: #555555;\n    background-color: #fff;\n    border: 1px solid #e4e4e4;\n  }\n  .right-action-btn {\n    padding: 13px 0 16px;\n  }\n}\n</style>\n\n<style lang=\"scss\">\n.move-transfer-list-search.el-form {\n  .search-form-row {\n    .el-form-item__content .el-input__inner {\n      background: #FFFFFF;\n      border: 1px solid #E2E6EC;\n      border-radius: 0 4px 4px 0;\n      border-left: none;\n      padding-left: 8px;\n    }\n  }\n  .el-input__inner, .pms-ui .el-range-input {\n    height: 32px;\n    line-height: 32px;\n  }\n  input.el-range-input {\n    background: #ffffff;\n    border: none;\n  }\n  .el-date-editor--daterange {\n    vertical-align: 0px;\n  }\n  .el-input__inner:focus {\n    outline: none;\n  }\n  .el-form-item__label, .el-form-item__content {\n    display: inline-block;\n  }\n  .el-form-item__label {\n    background: #F6F6F6;\n    border-radius: 3px 0 0 3px;\n    font-size: 14px;\n    color: #333333;\n    padding: 0 8px;\n    border: 1px solid #E3E3E3;\n    height: 32px;\n    line-height: 32px;\n  }\n  .el-form-item__content {\n    line-height: 32px;\n    border-left: none;\n    flex: 1;\n  }\n  input::placeholder {\n    font-family: Roboto-Regular;\n    font-size: 14px;\n    color: #B5BBC6;\n  }\n  .el-form-item {\n    display: flex;\n    margin-bottom: 0px;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/ownership/actionLog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/ownership/create.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/ownership/detail.vue","messages":[{"ruleId":"vue/no-unused-components","severity":2,"message":"The \"OutstandingDialog\" component has been registered but not used.","line":162,"column":37,"nodeType":"Property","endLine":162,"endColumn":54}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"pms-ele-ui ownership-detail-wrapper layout-padding\">\n    <section class=\"detail-header-wrapper\">\n      <div class=\"left-info\">\n        <i class=\"el-icon-arrow-left go-back-icon\" @click=\"goBack\"></i>\n        <span class=\"header-text\">{{ baseInfo.task_id || ''}}</span>\n        <span class=\"pms-ele-ui status-span\" :class=\"statusClass[baseInfo.status]\">{{formatStatus}}</span>\n      </div>\n      <section class=\"right-top btn-wrapper\">\n        <el-button class=\"list-btn white-blue\" @click=\"onShowActionLog\">{{$t('commonActionLog')}}</el-button>\n        <el-button class=\"list-btn\" @click=\"onExport\" v-if=\"isCompleted\">{{$t('commonExport')}}</el-button>\n        <el-button\n          v-if=\"isPendingApprove && canApprove && canOperate\"\n          class=\"list-btn white-red\"\n          :loading=\"loadingReject\"\n          @click=\"onApproveOrReject('reject')\"\n        >{{$t('commonReject')}}</el-button>\n        <el-button\n          v-if=\"isPendingApprove && canApprove && canOperate\"\n          class=\"list-btn white-green\"\n          :loading=\"loadingApprove\"\n          @click=\"onApproveOrReject('approve')\"\n        >{{$t('commonApprove')}}</el-button>\n\n        <el-button\n          v-if=\"isRejected && isRequester && canOperate\"\n          class=\"list-btn white-red\"\n          :loading=\"loadingCancel\"\n          @click=\"onCancel\"\n        >{{$t('osCancelTransfer')}}</el-button>\n        <el-button\n          v-if=\"isRejected && isRequester && canOperate\"\n          class=\"list-btn\"\n          @click=\"onRouteToCreatePage\"\n        >{{$t('commonEdit')}}</el-button>\n      </section>\n    </section>\n\n    <div class=\"main-wrapper\">\n      <section class=\"pending-approval-attention\" v-if=\"isPendingApprove && canApprove\">\n        <svg-icon iconClass=\"srmTips\" class=\"attention-icon\"></svg-icon>\n        <p class=\"attention-text\">{{$t('osPendingApprovalAttention')}}</p>\n      </section>\n      <el-form ref=\"detailForm\" label-position=\"left\" label-width=\"200px\" class=\"view-mode-form\">\n        <section class=\"module-block basic-info-block\">\n          <h3 class=\"section-title\">{{$t('commonBasicInfo')}}</h3>\n          <el-row :gutter=\"64\">\n            <el-col v-for=\"item in basicInfoSchema\" :key=\"item.field\" :span=\"item.span || 12\">\n              <el-form-item :label=\"$t(item.label) + ': '\" :prop=\"item.field\">\n                <div>{{handleText(item)}}</div>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"12\">\n              <el-form-item :label=\"$t('osTransferredCompleteTime') + ': '\">\n                <div>{{baseInfo.complete_time || '/'}}</div>\n              </el-form-item>\n            </el-col>\n          </el-row>\n        </section>\n        <section class=\"module-block pms-ui\">\n          <div class=\"pms-ele-ui pms-clearfix\">\n            <h3 class=\"section-title\">\n              {{$t('supplierSkuInformation')}}\n              <span\n                v-if=\"isProcessing || isPendingProcessing || isCompleted\"\n                class=\"sku-total-tip\"\n              >{{$t('osSKUTransferProcessing', { current: allSkuList.filter(item => item.transfer_status === 3).length, total: allSkuList.length})}}</span>\n\n              <span class=\"sku-info-total\" v-else>{{($t('osTotalSku') + `: ${allSkuList.length}`)}}</span>\n            </h3>\n          </div>\n          <el-table :data=\"skuList\" border>\n            <el-table-column :label=\"$t('commonNo')\" width=\"55px\">\n              <template slot-scope=\"scope\">{{(pager.pageNo - 1)* pager.count + scope.$index + 1}}</template>\n            </el-table-column>\n            <el-table-column :label=\"$t('commonSkuID')\" prop=\"sku_id\"></el-table-column>\n            <el-table-column :label=\"$t('commonSkuName')\" prop=\"sku_name\"></el-table-column>\n            <el-table-column :label=\"$t('commonLinkedSku')\" prop=\"link_sku_id\"></el-table-column>\n            <el-table-column :label=\"$t('commonL1CategoryName')\" prop=\"l1_category_name\"></el-table-column>\n            <el-table-column\n              :label=\"$t('osTransferredStatus')\"\n              prop=\"transfer_status\"\n              column-key=\"TransferredStatus\"\n              v-if=\"isPendingProcessing|| isProcessing || isCompleted\"\n            >\n              <template slot-scope=\"scope\">{{formatTransferStatus(scope.row.transfer_status)}}</template>\n            </el-table-column>\n            <el-table-column\n              :label=\"$t('osSKUTransferredTime')\"\n              prop=\"transfer_time\"\n              width=\"150px\"\n              column-key=\"TransferredTime\"\n              v-if=\"isProcessing || isCompleted\"\n            >\n              <template\n                slot-scope=\"scope\"\n              >{{scope.row.transfer_time || ''}}</template>\n            </el-table-column>\n            <el-table-column\n              :label=\"$t('osSKUTransferredQty')\"\n              prop=\"transfer_qty\"\n              column-key=\"TransferredQty\"\n              v-if=\"isProcessing || isCompleted\"\n            >\n              <template slot-scope=\"scope\">{{formatValue(scope.row.transfer_qty)}}</template>\n            </el-table-column>\n            <el-table-column v-if=\"isProcessing || isCompleted\" :label=\"$t('osLinkSKUTransferredTime')\" prop=\"binding_transfer_time\">\n              <template slot-scope=\"scope\">{{scope.row.binding_transfer_time || ''}}</template>\n            </el-table-column>\n            <el-table-column v-if=\"isProcessing || isCompleted\" :label=\"$t('osLinkSKUTransferredQty')\" prop=\"binding_transfer_qty\">\n              <template slot-scope=\"scope\">{{formatValue(scope.row.binding_transfer_qty)}}</template>\n            </el-table-column>\n          </el-table>\n          <el-pagination\n            class=\"sku-pagination\"\n            background\n            layout=\"sizes, prev, pager, next \"\n            :current-page=\"pager.pageNo\"\n            :total=\"allSkuList.length\"\n            :page-sizes=\"[10, 20, 50, 100]\"\n            :page-size=\"pager.count\"\n            @size-change=\"handleSizeChange\"\n            @current-change=\"handleCurrentChange\"\n          ></el-pagination>\n        </section>\n        <section class=\"module-block pms-ui\">\n          <h3 class=\"section-title\">{{$t('osSupportingDocument')}}</h3>\n          <FileListAttachment ref=\"attachment\" :attachmentList=\"attachmentList\" width=\"100%\"></FileListAttachment>\n        </section>\n      </el-form>\n    </div>\n    <ActionLog :visible=\"actionLogVisible\" :taskId=\"baseInfo.task_id\" @close=\"onCloseActionLog\" />\n    <PromptDialog :visible=\"promptVisible\"\n      :config=\"promptConfig\"\n     @close=\"onClosePrompt\"\n     @confirm=\"onConfirmRejectDialog\"\n     />\n  </div>\n</template>\n\n<script>\nimport {\n  getOwnershipRequestDetail,\n  approveOrRejectOwnership,\n  cancelOwnershipOrder,\n  exportOwnershipDetail\n} from '@/api/ownership';\nimport {\n  ownerShipTransferStatusList,\n  ownershipStatusList,\n  Permission\n} from '@/utils/constant';\nimport { hasPermission } from '@/utils/permission';\nimport { formatValue } from '@/utils/format';\nimport { downloadBlobFile } from '@/utils/downloadFile';\nimport FileListAttachment from '~c/fileListAttachment/index';\nimport OutstandingDialog from './outstandingDialog';\nimport PromptDialog from './promptDialog';\nimport ActionLog from './actionLog';\nimport moment from 'moment';\nexport default {\n  components: { FileListAttachment, OutstandingDialog, ActionLog, PromptDialog },\n  data() {\n    return {\n      canOperate: false,\n      loadingApprove: false,\n      loadingReject: false,\n      loadingCancel: false,\n      canApprove: false,\n      promptVisible: false,\n      actionLogVisible: false,\n      promptConfig: {},\n      baseInfo: {\n        task_id: '',\n        task_name: '',\n        original_vendor_site_id: '',\n        original_supplier_name: '',\n        original_supplier_purchase_type: '',\n        original_supplier_region: '',\n        transfer_vendor_site_id: '',\n        transfer_supplier_name: '',\n        transfer_supplier_purchase_type: '',\n        transfer_supplier_region: '',\n        remark: ''\n      },\n      pager: {\n        count: 10,\n        pageNo: 1\n      },\n      allSkuList: [],\n      skuList: [],\n      rejectRemark: '',\n      attachmentList: [],\n      statusClass: {\n        1: 'green',\n        2: 'orange',\n        3: 'orange',\n        4: 'red',\n        5: 'grey',\n        6: 'orange',\n        7: 'blue'\n      },\n      basicInfoSchema: [\n        {\n          label: 'osTaskName',\n          field: 'task_name'\n        },\n        {\n          label: 'osTaskID',\n          field: 'task_id'\n        },\n        {\n          label: 'osOriginalSbsVendorSiteID',\n          field: 'original_sbs_vendor_id',\n          type: this.isCreate ? 'supplierID' : 'text'\n        },\n        {\n          label: 'osTransferredSbsVendorSiteID',\n          field: 'transfer_sbs_vendor_id',\n          type: this.isCreate ? 'supplierID' : 'text'\n        },\n        {\n          label: 'osOriginalVendorSiteID',\n          field: 'original_vendor_site_id'\n        },\n        {\n          label: 'osTransferredVendorSiteID',\n          field: 'transfer_vendor_site_id',\n          type: 'supplierID'\n        },\n        {\n          label: 'osOriginalSupplierName',\n          field: 'original_supplier_name'\n        },\n        {\n          label: 'osTransferredSupplierName',\n          field: 'transfer_supplier_name'\n        },\n        {\n          label: 'osOriginalPurchaseType',\n          field: 'original_supplier_purchase_type'\n        },\n        {\n          label: 'osTransferredPurchaseType',\n          field: 'transfer_supplier_purchase_type'\n        },\n        {\n          label: 'osOriginalSupplierRegion',\n          field: 'original_supplier_region'\n        },\n        {\n          label: 'osTransferredSupplierRegion',\n          field: 'transfer_supplier_region'\n        },\n        {\n          label: 'commonRemark',\n          field: 'remark'\n        }\n      ]\n    };\n  },\n  computed: {\n    isRequester() {\n      return this.baseInfo.requester === this.$store.getters.email;\n    },\n    isRejected() {\n      return this.baseInfo.status === 4;\n    },\n    isPendingApprove() {\n      return this.baseInfo.status === 2;\n    },\n    isPendingProcessing() {\n      return this.baseInfo.status === 3;\n    },\n    isCompleted() {\n      return this.baseInfo.status === 7;\n    },\n    isProcessing() {\n      return this.baseInfo.status === 6;\n    },\n    formatStatus() {\n      const statusText = (\n        ownershipStatusList.find(\n          item => item.value === this.baseInfo.status\n        ) || { label: '' }\n      ).label;\n      if (this.baseInfo.status === 2) {\n        return (\n          this.$t(statusText) + `: ${this.baseInfo.next_approval_role_name}`\n        );\n      } else {\n        return statusText ? this.$t(statusText) : '';\n      }\n    }\n  },\n  created() {\n    this.getDetail();\n    this.canOperate = hasPermission(Permission.EDIT_TRANSFER);\n  },\n  methods: {\n    formatValue,\n    moment,\n    handleText(item) {\n      // 系统自动带出，seller该字段为空\"/\"\n      if (item.field === 'original_vendor_site_id' && this.baseInfo.original_merchant_type === 'SELLER') {\n        return '/';\n      }\n      if (item.field === 'transfer_vendor_site_id' && this.baseInfo.transfer_merchant_type === 'SELLER') {\n        return '/';\n      }\n      // {{vendor_type}} ({{purchase_type}})，若vendor type是seller，则不展示后面的括号\n      if (item.field === 'original_supplier_purchase_type') {\n        if (this.baseInfo.original_merchant_type === 'SUPPLIER') {\n          return `Supplier(${this.baseInfo[item.field]})`;\n        } else if (this.baseInfo.original_merchant_type === 'SELLER') {\n          return 'Seller';\n        }\n      }\n      if (item.field === 'transfer_supplier_purchase_type') {\n        if (this.baseInfo.transfer_merchant_type === 'SUPPLIER') {\n          return `Supplier(${this.baseInfo[item.field]})`;\n        } else if (this.baseInfo.transfer_merchant_type === 'SELLER') {\n          return 'Seller';\n        }\n      }\n      return this.baseInfo[item.field] || '/';\n    },\n    handleSizeChange(count) {\n      this.pager.count = count;\n      this.pagingSkuList();\n    },\n    handleCurrentChange(pageNo) {\n      this.pager.pageNo = pageNo;\n      this.pagingSkuList();\n    },\n    pagingSkuList() {\n      const start = (this.pager.pageNo - 1) * this.pager.count;\n      const end = this.pager.pageNo * this.pager.count;\n      this.skuList = this.allSkuList.slice(start, end);\n    },\n    onRouteToCreatePage() {\n      this.$router.push({\n        name: 'skuOwnershipTransferEdit',\n        params: { id: this.baseInfo.task_id }\n      });\n    },\n    onCancel() {\n      this.$confirm(this.$t('osListCancelTips'), this.$t('commonTips'), {\n        confirmButtonText: this.$t('commonConfirm'),\n        cancelButtonText: this.$t('commonCancel'),\n        customClass: 'pms-ele-ui',\n        confirmButtonClass: 'list-btn',\n        cancelButtonClass: 'list-btn white'\n      })\n        .then(action => {\n          if (action === 'confirm') {\n            this._cancelOwnership();\n          }\n        })\n        .catch(e => {\n          if (e !== 'cancel') {\n            this.$message.error(e);\n          }\n        });\n    },\n    async _cancelOwnership() {\n      try {\n        this.loadingCancel = true;\n        const params = {\n          task_id: this.baseInfo.task_id\n        };\n        const res = await cancelOwnershipOrder(params);\n        if (res && res.retcode === 0) {\n          this.$message({ type: 'success', message: this.$t('commonSuccess') });\n          this.getDetail();\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loadingCancel = false;\n      }\n    },\n    onExport() {\n      const params = {\n        task_id: this.baseInfo.task_id\n      };\n      exportOwnershipDetail(params)\n        .then(resp => {\n          if (resp.type === 'application/json') {\n            const reader = new FileReader();\n            reader.onloadend = () => {\n              const result = JSON.parse(reader.result);\n              if (result.retcode !== 0) {\n                this.$message({ type: 'error', message: result.info });\n              }\n            };\n            reader.readAsText(resp);\n          } else {\n            downloadBlobFile(\n              resp,\n              `OwnershipTransfer_${moment().format('YYYYMMDDHHmmss')}.xls`\n            );\n          }\n        })\n        .catch(() => {\n          this.$message.error('Failed');\n        });\n    },\n    onShowActionLog() {\n      this.actionLogVisible = true;\n    },\n    onCloseActionLog() {\n      this.actionLogVisible = false;\n    },\n    formatTransferStatus(status) {\n      const statusText = (\n        ownerShipTransferStatusList.find(item => item.value === status) || {\n          label: ''\n        }\n      ).label;\n      return statusText ? this.$t(statusText) : '';\n    },\n    goBack() {\n      this.$router.go(-1);\n    },\n    onClosePrompt() {\n      this.promptVisible = false;\n    },\n    onApproveOrReject(type) {\n      if (type === 'reject') {\n        this.promptConfig = {\n          actionType: type,\n          title: 'commonReject',\n          label: 'commonRejectReason',\n          maxLength: 128,\n          required: true,\n          message: 'Reject Reason is Required!'\n        };\n      } else {\n        this.promptConfig = {\n          actionType: type,\n          title: 'commonApprove',\n          label: 'commonRemark',\n          required: false\n        };\n      }\n      this.promptVisible = true;\n    },\n    onConfirmRejectDialog(value, type) {\n      this._approveOrRejectOrder(type, value);\n    },\n    async _approveOrRejectOrder(type = 'approve', remark) {\n      try {\n        const params = {\n          task_id: this.baseInfo.task_id,\n          action: type === 'approve' ? 1 : 2,\n          remark: remark || ''\n        };\n        const res = await approveOrRejectOwnership(params);\n        if (res && res.retcode === 0) {\n          this.$message({ type: 'success', message: this.$t('commonSuccess') });\n          this.getDetail();\n        } else {\n          this.$message({ type: 'error', message: res.message || res.info });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    async getDetail() {\n      try {\n        const params = {\n          task_id: this.$route.params.id\n        };\n        const res = await getOwnershipRequestDetail(params);\n        if (res && res.retcode === 0) {\n          this.baseInfo = res.data.basic_info || {};\n          this.canApprove = this.baseInfo.can_approve || false;\n          this.allSkuList = res.data.sku_list || [];\n          this.pagingSkuList();\n          this.attachmentList = res.data.attachment_list || [];\n          this.$nextTick(() => {\n            if (this.baseInfo.status === 2 && this.canApprove) {\n              this.$alert(\n                this.$t('osPendingApprovalAttention'),\n                this.$t('commonAttention'),\n                {\n                  confirmButtonText: this.$t('commonConfirm'),\n                  confirmButtonClass: 'list-btn',\n                  customClass: 'pms-ele-ui'\n                }\n              );\n            }\n            this.$refs['attachment'] &&\n              this.$refs['attachment'].initAttachmentList(this.attachmentList);\n          });\n        } else {\n          this.$message({ type: 'error', message: res.message || res.info });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    }\n  }\n};\n</script>\n<style lang=\"scss\">\n@import \"~@/styles/common.scss\";\n.ownership-detail-wrapper {\n  .view-mode-form {\n    .el-form-item {\n      margin-bottom: 8px;\n    }\n  }\n}\n</style>\n<style lang=\"scss\" scoped>\n@import \"~@/styles/variables.scss\";\n.ownership-detail-wrapper {\n  &.layout-padding {\n    padding: 24px 32px;\n  }\n  .detail-header-wrapper {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border-bottom: 1px solid $border_color;\n    padding-bottom: 8px;\n    .left-info {\n      flex: 1;\n      font-size: 24px;\n      color: $black;\n      vertical-align: middle;\n      .go-back-icon {\n        color: #666666;\n        cursor: pointer;\n      }\n      .header-text {\n        margin-right: 8px;\n      }\n    }\n    .right-top {\n      flex: 2;\n      text-align: right;\n    }\n  }\n  .main-wrapper {\n    padding-top: 32px;\n  }\n  .module-block {\n    margin-bottom: 40px;\n    .section-title {\n      font-size: 18px;\n      font-weight: bold;\n      line-height: 18px;\n      margin-bottom: 16px;\n      .sku-total-tip {\n        margin-left: 8px;\n      }\n      .sku-info-total {\n        font-size: 14px;\n        font-weight: bold;\n        color: $black_light_one;\n      }\n    }\n\n    &.basic-info-block {\n      width: 80%;\n    }\n    .sku-pagination {\n      margin-top: 16px;\n      text-align: center;\n    }\n  }\n  .pending-approval-attention {\n    padding: 12px 16px;\n    background-color: #fff6e1;\n    color: $black_light_one;\n    font-size: 14;\n    display: flex;\n    align-content: center;\n    margin-bottom: 24px;\n    .attention-icon {\n      flex: 0 0 24px;\n      width: 24px;\n      height: 24px;\n      fill: $orange;\n      margin-right: 12px;\n    }\n    .attention-text {\n      flex: 1;\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/ownership/list.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":30,"column":44,"nodeType":"VIdentifier","messageId":"deprecated","endLine":30,"endColumn":50}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-container class=\"ownership-wrapper pms-ele-ui pms-ui\">\n    <section class=\"list-header-wrapper\">\n      <div class=\"list-create-btn\" v-if=\"canOperate\">\n        <el-popover\n          popper-class=\"break-word pms-ele-ui pms-text-left\"\n          placement=\"top\"\n          width=\"400\"\n          trigger=\"hover\"\n          :content=\"$t('osListNewRequestTips')\"\n        >\n          <svg-icon slot=\"reference\" iconClass=\"question-circle\" class=\"question-icon\"></svg-icon>\n        </el-popover>\n        <el-button class=\"list-btn\" @click=\"onCreateRequest\">\n          <i class=\"el-icon-plus\"></i>\n          <span>{{$t('osNewRequest')}}</span>\n        </el-button>\n      </div>\n\n      <el-tabs class=\"pms-ele-ui\" tab-position=\"bottom\" v-model=\"activeTab\" @tab-click=\"onTabClick\">\n        <el-tab-pane\n          v-for=\"item in headerTabs\"\n          :key=\"item.value\"\n          :label=\"$t(item.label)\"\n          :name=\"item.value\"\n        ></el-tab-pane>\n      </el-tabs>\n    </section>\n    <section class=\"main-wrapper\">\n      <el-form :model=\"searchForm\" @submit.native.prevent=\"onResetPageNoSearch\">\n        <el-button v-show=\"false\" native-type=\"submit\"></el-button>\n        <el-row>\n          <el-col\n            v-for=\"item in searchSchema\"\n            :key=\"item.field\"\n            :span=\"item.width\"\n            :offset=\"item.offset || 0\"\n          >\n            <el-form-item\n              :label-width=\"item.labelWidth || '110px'\"\n              :class=\"item.class || ''\"\n              :label=\"item.label\"\n            >\n              <el-select\n                v-if=\"item.type === 'select'\"\n                :multiple=\"item.multiple\"\n                v-model=\"searchForm[item.field]\"\n                :disabled=\"item.disabled || false\"\n                :collapse-tags=\"true\"\n                @change=\"(...argu) => onChangeSelect(item.field, ...argu)\"\n              >\n                <el-option\n                  v-for=\"option in item.options || []\"\n                  :key=\"option.value\"\n                  :label=\"item.field === 'region' ? option.label: $t(option.label)\"\n                  :value=\"option.value\"\n                ></el-option>\n              </el-select>\n              <el-input v-if=\"item.type === 'input'\" v-model=\"searchForm[item.field]\"></el-input>\n              <el-autocomplete\n                v-else-if=\"item.type === 'supplierID'\"\n                class=\"width_100\"\n                popper-class=\"pms-ele-ui supplierIDCompleteWrapperWidth\"\n                v-model=\"searchForm[item.field]\"\n                :fetch-suggestions=\"getVendorSiteID\"\n                clearable\n                :placeholder=\"$t('commonPleaseInput')\"\n                @select=\"handleVendorSiteIDSelect\"\n              ></el-autocomplete>\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row type=\"flex\" justify=\"space-between\" class=\"action-row\">\n          <el-col>\n            <el-button class=\"list-btn white-blue\" @click=\"onExportExcel\">{{$t('commonExport')}}</el-button>\n            <el-button\n              class=\"pms-ele-ui list-btn white-blue\"\n              @click=\"showExportHistory\"\n            >{{$t('commonExportHistory')}}</el-button>\n          </el-col>\n          <el-col class=\"text-right\">\n            <div class=\"list-btn\" @click=\"onResetPageNoSearch\">{{$t('commonSearch')}}</div>\n            <div class=\"list-btn white-blue\" @click=\"onReset\">{{$t('commonClear')}}</div>\n          </el-col>\n        </el-row>\n      </el-form>\n      <el-table :data=\"tableList\" border v-loading=\"loading\" @selection-change=\"changeSelections\">\n        <el-table-column type=\"selection\"></el-table-column>\n        <el-table-column prop=\"task_id\" :label=\"$t('osTaskIDOrName')\" width=\"170x\">\n          <template slot-scope=\"scope\">\n            {{scope.row.task_id}}/{{scope.row.task_name}}\n          </template>\n        </el-table-column>\n        <el-table-column\n          width=\"180px\"\n          prop=\"original_sbs_vendor_id\"\n          :label=\"$t('osOriginalVendorSiteIDOrName')\"\n        >\n          <template\n            slot-scope=\"scope\"\n          >{{scope.row.original_sbs_vendor_id }} / {{ scope.row.original_supplier_name}}</template>\n        </el-table-column>\n        <el-table-column :label=\"$t('osTransferredVendorSiteIDOrName')\" width=\"180px\">\n          <template\n            slot-scope=\"scope\"\n          >{{scope.row.transfer_sbs_vendor_id }} / {{scope.row.transfer_supplier_name}}</template>\n        </el-table-column>\n\n        <el-table-column prop=\"original_supplier_region\" :label=\"$t('commonRegion')\" width=\"90px\"></el-table-column>\n\n        <el-table-column prop=\"original_supplier_purchase_type\" :label=\"$t('commonPurchaseType')\"></el-table-column>\n\n        <el-table-column :label=\"$t('commonStatus')\">\n          <template slot-scope=\"scope\">\n            <span\n              class=\"pms-ele-ui status-span\"\n              :class=\"statusClass[scope.row.status]\"\n            >{{formatStatus(scope.row.status, scope.row)}}</span>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"requester\" :label=\"$t('commonRequester')\"></el-table-column>\n\n        <el-table-column :label=\"$t('commonMtime')\" prop=\"mtime\" width=\"100px\">\n          <template slot-scope=\"scope\">\n            {{moment(scope.row.mtime * 1000).format('YYYY-MM-DD HH:mm')}}\n          </template>\n        </el-table-column>\n        <el-table-column :label=\"$t('commonAction')\">\n          <template slot-scope=\"scope\">\n            <div>\n              <el-button\n                class=\"list-btn white-blue\"\n                @click=\"onRouteToDetail(scope.row)\"\n              >{{$t('commonDetail')}}</el-button>\n            </div>\n            <div class=\"mt8\">\n              <el-button\n                v-if=\"canOperate && isRequester(scope.row) &&scope.row.status === 4\"\n                class=\"list-btn white-grey\"\n                @click=\"onCancel(scope.row)\"\n              >{{$t('commonCancel')}}</el-button>\n            </div>\n            <div class=\"mt8\">\n              <el-button\n                v-if=\"canOperate && scope.row.status === 1\"\n                class=\"list-btn white-grey\"\n                @click=\"onDelete(scope.row)\"\n              >{{$t('commonDelete')}}</el-button>\n            </div>\n          </template>\n        </el-table-column>\n      </el-table>\n      <section class=\"pagination-center\">\n        <el-pagination\n          background\n          layout=\"sizes, prev, pager, next\"\n          :current-page=\"pager.page_no\"\n          :page-sizes=\"[10, 20, 50, 100]\"\n          :total.sync=\"total\"\n          :page-size=\"pager.count\"\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleChangePage\"\n        ></el-pagination>\n      </section>\n    </section>\n    <export-history-dialog\n      :interval=\"15000\"\n      :taskType=\"15\"\n      :visible=\"isShowExportHistory\"\n      @close=\"closeExportHistory\"\n    ></export-history-dialog>\n  </el-container>\n</template>\n\n<script>\nimport { formatParams } from '@/utils/formatParams';\nimport ExportHistoryDialog from '@/components/ApproveList/exportHistoryDialog';\nimport {\n  getOwnerShipList,\n  deleteSingleOwnership,\n  cancelSingleOwnership,\n  exportOwnershipList,\n  getPendingApprovalOwnerShipList\n} from '@/api/ownership';\nimport { ownershipStatusList, Permission } from '@/utils/constant';\nimport moment from 'moment';\nimport { hasPermission } from '@/utils/permission';\nimport { getSupplierList } from '@/api/supplier';\n\nconst moduleName = 'ownershipModule';\nexport default {\n  components: {\n    ExportHistoryDialog\n  },\n  data() {\n    const defaultCountry = this.$store.getters.countrySelectList.length > 1 ? '' : (this.$store.getters.countrySelectList[0] || { value: '' }).value;\n    return {\n      headerTabs: [\n        { value: 'all', label: 'commonAll' },\n        {\n          value: 'myRequest',\n          label: 'osTabMyRequest'\n        },\n        {\n          value: 'myPA',\n          label: 'osTabMyPendingApprovals'\n        }\n      ],\n      statusClass: {\n        1: 'green',\n        2: 'orange',\n        3: 'orange',\n        4: 'red',\n        5: 'grey',\n        6: 'orange',\n        7: 'blue'\n      },\n      activeTab: 'all',\n      canOperate: false,\n      isShowExportHistory: false,\n      lastSearchForm: {},\n      checkedRows: [],\n      defaultCountry,\n      searchForm: {\n        task_id: '',\n        sbs_vendor_id: '',\n        status: '',\n        requester: '',\n        region: defaultCountry\n      },\n      loading: false,\n      pager: {\n        page_no: 1,\n        count: 10\n      },\n      total: 0,\n      tableList: []\n    };\n  },\n  computed: {\n    searchSchema() {\n      return [\n        {\n          type: 'input',\n          width: 6,\n          label: this.$t('osTaskID'),\n          field: 'task_id'\n        },\n        {\n          type: 'select',\n          width: 6,\n          label: this.$t('commonRegion'),\n          field: 'region',\n          options: [{ label: 'All', value: '' }].concat(this.countryList)\n        },\n        {\n          type: 'supplierID',\n          width: 6,\n          label: this.$t('commonSBSVendorID'),\n          field: 'sbs_vendor_id'\n        },\n        {\n          type: 'select',\n          width: 6,\n          label: this.$t('commonStatus'),\n          field: 'status',\n          options: [{ label: 'commonAll', value: '' }, ...ownershipStatusList],\n          isHidden: this.activeTab === 'myPA'\n        },\n        {\n          type: 'input',\n          width: 6,\n          label: this.$t('commonRequester'),\n          field: 'requester',\n          isHidden: this.activeTab === 'myRequest'\n        }\n      ].filter(item => !item.isHidden);\n    },\n    countryList() {\n      return this.$store.getters.countrySelectList;\n    }\n  },\n  methods: {\n    moment,\n    isRequester(row) {\n      return row.requester === this.$store.getters.email;\n    },\n    onTabClick() {\n      this.onReset();\n      this.onResetPageNoSearch();\n    },\n    showExportHistory() {\n      this.isShowExportHistory = true;\n    },\n    closeExportHistory() {\n      this.isShowExportHistory = false;\n    },\n    changeSelections(selection) {\n      this.checkedRows = selection;\n    },\n    onCreateRequest() {\n      this.$router.push('/admin/supply/ownership/create');\n    },\n    onCancel(row) {\n      this.$confirm(this.$t('osListCancelTips'), this.$t('commonTips'), {\n        confirmButtonText: this.$t('commonConfirm'),\n        cancelButtonText: this.$t('commonCancel'),\n        customClass: 'pms-ele-ui',\n        confirmButtonClass: 'list-btn',\n        cancelButtonClass: 'list-btn white'\n      })\n        .then(action => {\n          if (action === 'confirm') {\n            this._cancelOwnership(row.task_id);\n          }\n        })\n        .catch(e => {\n          if (e !== 'cancel') {\n            this.$message.error(e);\n          }\n        });\n    },\n    async _cancelOwnership(task_id) {\n      try {\n        const params = {\n          task_id\n        };\n        const res = await cancelSingleOwnership(params);\n        if (res && res.retcode === 0) {\n          this.$message({ type: 'success', message: this.$t('commonSuccess') });\n          this.onResetPageNoSearch();\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    onDelete(row) {\n      this.$confirm(this.$t('osListDeleteTips'), this.$t('commonTips'), {\n        confirmButtonText: this.$t('commonConfirm'),\n        cancelButtonText: this.$t('commonCancel'),\n        customClass: 'pms-ele-ui',\n        confirmButtonClass: 'list-btn',\n        cancelButtonClass: 'list-btn white'\n      })\n        .then(action => {\n          if (action === 'confirm') {\n            this._deleteOwnership(row.task_id);\n          }\n        })\n        .catch(e => {\n          if (e !== 'cancel') {\n            this.$message.error(e);\n          }\n        });\n    },\n    async _deleteOwnership(task_id) {\n      try {\n        const params = {\n          task_id\n        };\n        const res = await deleteSingleOwnership(params);\n        if (res && res.retcode === 0) {\n          this.$message({ type: 'success', message: this.$t('commonSuccess') });\n          this.onResetPageNoSearch();\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n\n    onChangeSelect(field, value) {\n      if (field === 'region') {\n        this.searchForm.sbs_vendor_id = '';\n      }\n      this.onResetPageNoSearch();\n    },\n    formatStatus(value, row) {\n      const statusText = (\n        ownershipStatusList.find(item => item.value === value) || { label: '' }\n      ).label;\n      if (row.status === 2) {\n        return this.$t(statusText) + `: ${row.next_approval_role_name}`;\n      } else {\n        return statusText ? this.$t(statusText) : '';\n      }\n    },\n    onExportExcel() {\n      if (this.checkedRows.length < 1) {\n        return this.$message({\n          type: 'error',\n          message: this.$t('commonPleaseChooseAtLeastOneOption')\n        });\n      }\n      const params = {\n        task_id_list: this.checkedRows.map(item => item.task_id)\n      };\n      exportOwnershipList(params)\n        .then(resp => {\n          if (resp && resp.retcode === 0) {\n            this.$message.success(this.$t('commonExportHistorySuccessTips'));\n          } else {\n            this.$message.error(resp.info);\n          }\n        })\n        .catch(() => {\n          this.$message.error('Failed');\n        });\n    },\n    async getVendorSiteID(query = '', cb) {\n      try {\n        const params = {\n          pageno: 1,\n          count: 20,\n          sbs_vendor_id: `${query}`.trim(),\n          merchant_type: 'ALL',\n          approval_country:\n            this.searchForm.region ||\n            this.countryList.map(item => item.value).join('_')\n        };\n        const resp = await getSupplierList(params);\n        if (resp.status !== 0) {\n          this.$message.error(resp.info);\n          cb([]);\n        } else {\n          cb(\n            resp.data.list.map(supplier => {\n              return {\n                value: `${supplier['sbs_vendor_id']} ${supplier['name']}`,\n                supplierID: supplier['sbs_vendor_id'],\n                supplierName: supplier['name']\n              };\n            })\n          );\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    handleVendorSiteIDSelect(item) {\n      this.searchForm.sbs_vendor_id = item.supplierID;\n    },\n    onReset() {\n      Object.keys(this.searchForm).forEach(key => {\n        if (key === 'region') {\n          this.searchForm[key] = this.defaultCountry;\n        } else {\n          this.searchForm[key] = '';\n        }\n      });\n    },\n    handleChangePage(page_no) {\n      this.pager.page_no = page_no;\n      this.onSearch();\n    },\n    handleSizeChange(count) {\n      this.pager.count = count;\n      this.pager.page_no = 1;\n      this.onSearch();\n    },\n    onResetPageNoSearch() {\n      this.handleChangePage(1);\n    },\n    async onSearch() {\n      try {\n        const params = formatParams({\n          ...this.pager,\n          ...this.searchForm\n        });\n        if (this.activeTab === 'myRequest') {\n          params.is_my_request = 1;\n        }\n        let func = () => {};\n        if (this.activeTab === 'myPA') {\n          func = getPendingApprovalOwnerShipList;\n        } else {\n          func = getOwnerShipList;\n        }\n        this.loading = true;\n        const res = await func(params);\n        if (res && res.retcode === 0) {\n          this.tableList = res.data.sot_list || [];\n          this.total = res.data.total || 0;\n          this.lastSearchForm = params;\n        } else {\n          this.$message({ type: 'error', message: res.info });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loading = false;\n      }\n    },\n    cacheSearchCondition(form) {\n      this.$store.commit('setActiveTab', {\n        module: moduleName,\n        tab: this.activeTab\n      });\n      this.$store.commit('setSearchForm', {\n        module: moduleName,\n        form: form || null,\n        field: 'searchParams'\n      });\n    },\n    onRouteToDetail(row) {\n      this.cacheSearchCondition(this.lastSearchForm);\n      if (row.status === 1) {\n        // draft\n        this.$router.push(`/admin/supply/ownership/edit/${row.task_id}`);\n      } else {\n        this.$router.push(`/admin/supply/ownership/detail/${row.task_id}`);\n      }\n    }\n  },\n  created() {\n    this.canOperate = hasPermission(Permission.EDIT_TRANSFER);\n    const cacheConditionObj = this.$store.getters.searchForm[moduleName];\n    if (\n      cacheConditionObj &&\n      cacheConditionObj.activeTab &&\n      cacheConditionObj.searchParams\n    ) {\n      this.activeTab = cacheConditionObj.activeTab;\n      const searchParams = cacheConditionObj.searchParams;\n      this.pager.count = searchParams.count;\n      this.pager.page_no = searchParams.page_no;\n      ['task_id', 'sbs_vendor_id', 'status', 'region', 'requester'].forEach(\n        key => {\n          if (searchParams[key]) {\n            this.searchForm[key] = searchParams[key];\n          }\n        }\n      );\n    }\n    this.onSearch();\n  }\n};\n</script>\n\n<style scoped lang=\"scss\">\n@import \"~@/styles/variables.scss\";\n.ownership-wrapper {\n  padding: 0 20px;\n  display: block;\n  .list-header-wrapper {\n    position: relative;\n    margin-bottom: 16px;\n    .list-create-btn {\n      position: absolute;\n      right: 0;\n      top: 0;\n      z-index: 1;\n    }\n  }\n  .question-icon {\n    width: 16px;\n    height: 16px;\n    margin-right: 8px;\n    fill: $black_light_one;\n  }\n  .main-wrapper {\n    width: 100%;\n    padding: 0;\n  }\n  .pagination-center {\n    display: flex;\n    justify-content: center;\n    margin-top: 20px;\n  }\n  .action-row {\n    margin-bottom: 16px;\n  }\n  .text-right {\n    text-align: right;\n  }\n  .list-btn {\n    font-size: 14px;\n    width: auto;\n    min-width: 70px;\n    padding-left: 10px;\n    padding-right: 10px;\n  }\n  .warning-icon {\n    font-size: 12px;\n    color: $red;\n    vertical-align: middle;\n    margin: 0px 4px 1px 0;\n  }\n}\n</style>\n<style lang=\"scss\">\n@import \"~@/styles/common.scss\";\n.pms-ele-ui.select-all-table-column {\n  div {\n    padding: 0;\n  }\n  .select-page-dropdown {\n    padding: 0;\n    margin-left: 0;\n    .el-button {\n      border: none;\n      background: unset;\n      padding: 0px;\n      &:nth-child(1) {\n        word-break: break-word;\n        white-space: normal;\n        width: 60px;\n        line-height: 16px;\n        padding-right: 0px;\n      }\n      &::before {\n        width: 0;\n      }\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/ownership/outstandingDialog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/ownership/promptDialog.vue","messages":[{"ruleId":"vue/require-valid-default-prop","severity":2,"message":"Type of the default value for 'config' prop must be a function.","line":41,"column":16,"nodeType":"ObjectExpression","endLine":48,"endColumn":8}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-dialog\n    :visible.sync=\"dialogVisible\"\n    width=\"500px\"\n    lock-scroll\n    custom-class=\"pms-dialog pms-ui pms-ele-ui\"\n    :title=\"$t(config.title)\"\n    @close=\"onClose\"\n  >\n    <section class=\"order-log\">\n      <el-form :model=\"form\" label-width=\"110px\" ref=\"form\" label-position=\"left\">\n        <el-form-item\n          :label=\"$t(config.label) + ': '\"\n          prop=\"text\"\n          :rules=\"{ required: config.required, message:config.message, trigger: 'blur'}\"\n        >\n          <el-input type=\"textarea\" v-model=\"form.text\" :maxlength=\"config.maxLength || ''\"></el-input>\n        </el-form-item>\n      </el-form>\n    </section>\n    <section slot=\"footer\">\n      <el-button class=\"list-btn white-blue\" @click=\"onClose\">{{$t('commonCancel')}}</el-button>\n      <el-button class=\"list-btn\" @click=\"onConfirm\">{{$t('commonConfirm')}}</el-button>\n    </section>\n  </el-dialog>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      dialogVisible: false,\n      form: {\n        text: ''\n      }\n    };\n  },\n  props: {\n    config: {\n      type: Object,\n      default: {\n        actionType: 'reject',\n        title: 'commonReject',\n        label: 'commonRejectReason',\n        maxLength: 128,\n        required: true,\n        message: 'Reject Reason is Required!'\n      }\n    },\n    visible: {\n      type: Boolean,\n      required: true,\n      default: false\n    }\n  },\n  watch: {\n    visible: {\n      handler(value) {\n        this.dialogVisible = value;\n        if (value) {\n          this.form.text = '';\n        }\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    onClose() {\n      this.$emit('close');\n    },\n    onConfirm() {\n      this.$refs.form.validate(pass => {\n        if (pass) {\n          this.$emit('confirm', this.form.text, this.config.actionType);\n          this.onClose();\n        }\n      });\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/paymentRequest/component/actionLog.vue","messages":[{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"request_id\" is not in camelCase.","line":87,"column":5,"nodeType":"Property","endLine":89,"endColumn":6}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-dialog\n    :visible.sync=\"dialogVisible\"\n    width=\"800px\"\n    lock-scroll\n    custom-class=\"pms-ele-ui pms-dialog\"\n    :title=\"$t('commonActionLog')\"\n    @close=\"onClose\"\n  >\n    <section v-loading=\"loading\" class=\"order-log\">\n      <el-row class=\"row-header\">\n        <el-col :span=\"1\">\n          <div class=\"empty-block\"></div>\n        </el-col>\n        <el-col :span=\"5\">{{$t('commonAction')}}</el-col>\n        <el-col :span=\"6\">{{$t('commonLogStatusAfterOperate')}}</el-col>\n        <el-col :span=\"6\">{{$t('commonLogOperatorOrOperationTime')}}</el-col>\n        <el-col :span=\"6\">{{$t('commonReason')}}</el-col>\n      </el-row>\n      <section class=\"row-body-wrapper\" v-if=\"Array.isArray(tableList) && tableList.length\">\n        <el-row\n          class=\"row-body\"\n          :gutter=\"20\"\n          v-for=\"(item, index) in tableList\"\n          :key=\"index\"\n          >\n          <el-col :span=\"1\">\n            <i\n              class=\"el-icon-caret-bottom icon-caret\" :class=\"{'show': item.isShowContent}\"\n              v-if=\"item.content.length\"\n              @click=\"toggleContent(item)\"\n            ></i>\n            <span class=\"empty-block\"></span>\n          </el-col>\n          <el-col :span=\"5\">{{formatAction(item.action)}}</el-col>\n          <el-col :span=\"6\">{{formatStatus(item.status)}}</el-col>\n          <el-col\n            :span=\"6\"\n          >{{`${item.operator}/${moment(item.modify_time * 1000).format('YYYY-MM-DD HH:mm')}`}}</el-col>\n\n          <el-col :span=\"6\">{{item.remark || '/'}}</el-col>\n          <div class=\"pms-clearfix\"></div>\n          <transition name=\"fade\">\n            <div v-if=\"item.isShowContent\" class=\"row-expand\">\n              <el-col :span=\"23\" :offset=\"1\">\n                <el-table :data=\"item.content\" border class=\"pms-ele-ui small-table\">\n                  <el-table-column :label=\"$t('commonLogModifyField')\" prop=\"field\"></el-table-column>\n                  <el-table-column :label=\"$t('commonSkuID')\" prop=\"sku_id\">\n                    <template slot-scope=\"scope\">{{scope.row.sku_id || '/'}}</template>\n                  </el-table-column>\n                  <el-table-column :label=\"$t('commonBefore')\" prop=\"before\"></el-table-column>\n                  <el-table-column :label=\"$t('commonAfter')\" prop=\"after\"></el-table-column>\n                </el-table>\n            </el-col>\n            </div>\n          </transition>\n        </el-row>\n\n      </section>\n      <section v-else>\n        <p class=\"no-data\">{{$t('commonNoData')}}</p>\n      </section>\n    </section>\n    <section slot=\"footer\">\n      <el-pagination\n        small\n        layout=\"prev, pager, next\"\n        background\n        :total=\"total\"\n        :page-size=\"pager.count\"\n        @current-change=\"handleCurrentChange\"\n        class=\"pms-ele-ui pms-pagination pms-text-center\"\n      >\n      </el-pagination>\n      <el-button class=\"list-btn\" @click=\"onClose\">{{$t('commonOK')}}</el-button>\n    </section>\n  </el-dialog>\n</template>\n\n<script>\nimport { getPaymentRequestLog } from '@/api/paymentRequest';\nimport { PaymentRequestActionList, PaymentRequestStatusList } from '@/utils/constant';\nimport moment from 'moment';\n\nexport default {\n  props: {\n    request_id: {\n      required: true\n    },\n    visible: {\n      type: Boolean,\n      required: true,\n      default: false\n    }\n  },\n  data() {\n    return {\n      pager: {\n        count: 10,\n        page_no: 1\n      },\n      total: 0,\n      dialogVisible: false,\n      tableList: [],\n      loading: false\n    };\n  },\n  watch: {\n    visible: {\n      handler(value) {\n        this.dialogVisible = value;\n        if (value) {\n          this.getActionLog();\n        }\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    moment,\n    toggleContent(item) {\n      item.isShowContent = !item.isShowContent;\n    },\n    formatAction(action) {\n      const output = (\n        PaymentRequestActionList.find(item => item.value === action) || {\n          label: ''\n        }\n      ).label;\n      return output ? this.$t(output) : '';\n    },\n    formatStatus(action) {\n      const output = (\n        PaymentRequestStatusList.find(item => item.value === action) || {\n          label: ''\n        }\n      ).label;\n      return output ? this.$t(output) : '';\n    },\n    handleCurrentChange(index) {\n      this.pager.page_no = index;\n      this.getActionLog();\n    },\n    async getActionLog() {\n      try {\n        this.loading = true;\n        const params = {\n          request_id: this.request_id,\n          ...this.pager\n        };\n        const res = await getPaymentRequestLog(params);\n        if (res && res.retcode === 0) {\n          this.tableList = (res.data.change_list || []).map(item => ({ ...item, isShowContent: false }));\n          this.total = res.data.total || 0;\n        } else {\n          this.$message({ type: 'error', message: res.message });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loading = false;\n      }\n    },\n    onClose() {\n      this.$emit('close');\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n@import \"~@/styles/variables.scss\";\n.order-log{\n  .row-header {\n    background: $grey_bg;\n    align-items: center;\n    font-size: 12px;\n    font-weight: bold;\n    line-height: 1.2em;\n    padding: 16px 0;\n  }\n  .row-body-wrapper{\n    max-height: 400px;\n    overflow-x: hidden;\n    overflow-y: auto ;\n  }\n  .row-body {\n    padding: 16px 0;\n    line-height: 1.2em;\n    align-items: center;\n    border-bottom: 1px solid $grey_bg;\n    font-size: 14px;\n    .icon-caret{\n      color: $blue;\n      font-size: 16px;\n      cursor: pointer;\n      transition: all 0.3s ease-in;\n      &.show {\n        transform: rotate(180deg);\n      }\n    }\n  }\n  .row-expand{\n    margin-top: 16px;\n  }\n  .empty-block{\n    display: block;\n    width:1px;\n    height: 1px;\n  }\n  .no-data {\n    height: 50px;\n    line-height: 50px;\n    text-align: center;\n    color: #757575;\n  }\n}\n</style>\n<style lang=\"scss\">\n@import \"~@/styles/common.scss\"; // ~@ = @ = 'src' webpack alias path\n.pms-dialog {\n  .el-dialog__body {\n    padding: 8px 24px 16px;\n  }\n}\n.pms-ele-ui {\n    &.small-table {\n    th {\n      background-color: #EBEBEB ;\n      color: $black_light_one;\n      font-size: 12px;\n      font-weight: blod;\n      padding: 4px 0;\n    }\n    td {\n      font-size: 12px;\n      padding: 4px 0;\n      color: $black;\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/paymentRequest/component/addSkuDialog.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":24,"column":106,"nodeType":"VIdentifier","messageId":"deprecated","endLine":24,"endColumn":112}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-dialog\n    :visible.sync=\"dialogVisible\"\n    width=\"1200px\"\n    :close-on-click-modal=\"false\"\n    :close-on-press-escape=\"false\"\n    lock-scroll\n    custom-class=\"pms-dialog pms-new-ui invoice-add-sku-dialog\"\n    :title=\"$t('commonAddSku')\"\n    @close=\"onClose\"\n  >\n    <section>\n      <div class=\"base-info-wrapper\">\n        <p class=\"base-info\">\n          <span class=\"base-info-label\">{{ $t('commonPOID') + ': ' }}</span>\n          <span class=\"base-info-value\">{{ poInfo.order_id || '' }}</span>\n        </p>\n        <p class=\"base-info\">\n          <span class=\"base-info-label\">{{ $t('commonASNID') + ': ' }}</span>\n          <span class=\"base-info-value\">{{ poInfo.inbound_ids.join(', ') || '' }}</span>\n        </p>\n        <el-row type=\"flex\" :gutter=\"24\" class=\"mb24 mt24\">\n          <el-col :span=\"22\">\n            <el-input v-model=\"searchText\" :placeholder=\"$t('invoiceSearchSkuPlaceholder')\" @keyup.enter.native=\"onSearch\">\n              <i slot=\"suffix\" class=\"el-icon-search search-icon\" @click=\"onSearch\"></i>\n            </el-input>\n          </el-col>\n          <el-col :span=\"2\">\n            <el-button @click=\"onReset\">{{ $t('commonReset') }}</el-button>\n          </el-col>\n        </el-row>\n      </div>\n      <el-table\n        ref=\"skuTable\"\n        :data=\"tableList\"\n        class=\"search-shop-table\"\n        v-loading=\"loadingSearch\"\n        height=\"380px\"\n      >\n        <el-table-column width=\"50\">\n          <template slot=\"header\" slot-scope=\"header\">\n            <el-checkbox class=\"all-checkbox\" :indeterminate=\"isIndeterminate\" v-model=\"checkAll\" @change=\"selectAllChange\"></el-checkbox>\n          </template>\n          <template slot-scope=\"props\">\n            <el-checkbox @change=\"onSelectRows([props.row], !getCheckValue(props.row))\" :value=\"getCheckValue(props.row)\"></el-checkbox>\n          </template>\n        </el-table-column>\n        <!-- <el-table-column type=\"selection\" width=\"50px\"></el-table-column> -->\n        <el-table-column :label=\"$t('commonSkuID')\" prop=\"sku_id\"></el-table-column>\n        <el-table-column :label=\"$t('commonSkuName')\" prop=\"sku_name\"></el-table-column>\n        <el-table-column :label=\"$t('commonPurchasePriceAfterTax')\" prop=\"purchase_price\"></el-table-column>\n        <el-table-column :label=\"$t('invoiceActualReceivedQty')\" prop=\"actual_received_qty\">\n          <template slot-scope=\"scope\">\n            <el-popover placement=\"top\" width=\"300\" trigger=\"hover\" popper-class=\"asn-list-popover\">\n              <span slot=\"reference\" class=\"color-blue\">{{ scope.row.actual_received_qty }}</span>\n              <p class=\"asn-item bold\">\n                <span class=\"asn-item-label\">{{\n                  `${$t('commonASNID')}(${(scope.row.inbound_detail || []).length}):`\n                }}</span>\n                <span class=\"asn-item-value\">{{ $t('invoiceQty') + ':' }}</span>\n              </p>\n              <ul>\n                <li class=\"asn-item\" v-for=\"item in scope.row.inbound_detail\" :key=\"item.id\">\n                  <span class=\"asn-item-label\">{{ item.inbound_id }}</span>\n                  <span class=\"asn-item-value\">{{ item.total_received_qty }}</span>\n                </li>\n              </ul>\n            </el-popover>\n          </template>\n        </el-table-column>\n        <el-table-column :label=\"$t('invoicePaymentAmount')\" prop=\"payment_amount\" width=\"100px\">\n          <template slot-scope=\"scope\">{{ scope.row.payment_amount + ` ${currency}` }}</template>\n        </el-table-column>\n      </el-table>\n      <div class=\"total-select-wrapper\">\n        {{$t('commonSelected')}}<span class=\"total-count\">{{selectedList.length}}</span>\n      </div>\n      <section class=\"pms-text-center mt8\">\n\n        <el-pagination\n          small\n          layout=\"prev, pager, next\"\n          background\n          :total=\"total\"\n          :page-size=\"pager.count\"\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n        >\n        </el-pagination>\n      </section>\n    </section>\n    <section slot=\"footer\">\n      <el-button class=\"list-btn\" :loading=\"loadingConfirm\" @click=\"onConfirm\">{{ $t('commonConfirm') }}</el-button>\n    </section>\n  </el-dialog>\n</template>\n\n<script>\nimport moment from 'moment';\nimport { getSkuByInboundID } from '@/api/paymentRequest';\n\nexport default {\n  props: {\n    poInfo: {\n      required: true\n    },\n    visible: {\n      type: Boolean,\n      required: true,\n      default: false\n    },\n    requestType: {\n      required: true\n    },\n    currency: {\n      required: true\n    },\n    requestID: String\n  },\n  data() {\n    return {\n      searchText: '',\n      tableList: [\n        {\n          sku_id: '',\n          sku_name: '',\n          external_sku_id: '',\n          purchase_price: 0,\n          actual_received_qty: 0,\n          barcode: '',\n          disabled: false,\n          sku_type: 0,\n          asn_list: [],\n          payment_amount: 0\n        }\n      ],\n      total: 0,\n      pager: {\n        count: 10,\n        page_no: 1\n      },\n      selectedList: [],\n      checkAll: false,\n      dialogVisible: false,\n      loadingSearch: false,\n      loadingConfirm: false\n    };\n  },\n  watch: {\n    visible: {\n      handler(value) {\n        this.dialogVisible = value;\n        if (value) {\n          this.onSearch();\n        } else {\n          this.clearData();\n        }\n      },\n      immediate: true\n    }\n  },\n  computed: {\n    hasSelection() {\n      return !!this.selectedList.length;\n    },\n    isIndeterminate() {\n      return this.selectedList.length > 0 && !this.checkAll;\n    }\n  },\n  methods: {\n    moment,\n    onReset() {\n      this.searchText = '';\n    },\n    clearData() {\n      this.searchText = '';\n      this.tableList = [];\n      this.selectedList = [];\n      this.total = 0;\n      this.pager = {\n        count: 10,\n        page_no: 1\n      };\n    },\n    selectAllChange(value) {\n      this.onSelectRows(this.tableList, value);\n    },\n    getCheckValue(row) {\n      const selectedList = this.selectedList;\n      return selectedList.some(item => item.sku_id === row.sku_id);\n    },\n    onSelectRows(list, value) {\n      // 支持跨页跨count勾选\n      const allSkuIds = this.selectedList.map(item => item.sku_id);\n      const noRepeatList = list.filter(item => !allSkuIds.includes(item.sku_id));\n      if (value) {\n        this.selectedList = [...this.selectedList, ...noRepeatList];\n      } else {\n        list.forEach(row => {\n          const index = this.selectedList.findIndex(item => item.sku_id === row.sku_id);\n          if (index > -1) {\n            this.selectedList.splice(index, 1);\n          }\n        });\n      }\n      this.getCheckAll();\n    },\n    getCheckAll() {\n      const allSkuIds = this.selectedList.map(item => item.sku_id);\n      if (allSkuIds.length) {\n        this.checkAll = this.tableList.every(item => {\n          return allSkuIds.includes(item.sku_id);\n        });\n      }\n    },\n    onConfirm() {\n      this.$emit('addSku', this.selectedList, this.poInfo);\n      this.onClose();\n    },\n    formatSearchParams() {\n      const temp = this.searchText.split(/[\\n\\s+,，；;]/g);\n      for (let i = 0; i < temp.length; i++) {\n        if (temp[i] === '') {\n          // 删除数组中空值\n          temp.splice(i, 1);\n          i--;\n        }\n      }\n      return {\n        sku_ids: temp\n      };\n    },\n    async onSearch() {\n      try {\n        this.loadingSearch = true;\n        let params = {\n          request_type: this.requestType,\n          search_ids: this.requestType === 1 ? this.poInfo.inbound_ids : [this.poInfo.order_id],\n          ...this.pager\n        };\n        if (String(this.searchText).trim()) {\n          const extra = this.formatSearchParams(this.searchText);\n          params = { ...params, ...extra };\n        }\n        if (this.$props.requestID) {\n          params.request_id = this.$props.requestID;\n        }\n        const res = await getSkuByInboundID(params);\n        if (res && res.retcode === 0) {\n          this.tableList = (res.data.sku_list || []).map(item => {\n            return Object.assign({}, item, {\n              actual_received_qty: item.total_received_qty\n            });\n          });\n          this.getCheckAll();\n          this.total = res.data.total || 0;\n        } else {\n          this.$message({ type: 'error', message: res.info || res.message });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loadingSearch = false;\n      }\n    },\n    handleSizeChange(count) {\n      this.pager.count = count;\n      this.onSearch();\n    },\n    handleCurrentChange(page_no) {\n      this.pager.page_no = page_no;\n      this.onSearch();\n    },\n    onClose() {\n      this.$emit('close');\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.base-info-wrapper {\n  .base-info {\n    display: flex;\n    margin-bottom: 8px;\n  }\n  .base-info-label {\n    flex: 0 0 80px;\n  }\n  .base-info-value {\n    flex: 1;\n  }\n  .search-icon {\n    font-size: 16px;\n    position: relative;\n    top: 50%;\n    right: 4px;\n    transform: translateY(-50%);\n    cursor: pointer;\n  }\n}\n.color-blue {\n  color: $blue;\n}\n.search-shop-block {\n  .search-shop-table {\n    margin-top: 16px;\n    border: 1px solid #f0f2f5;\n  }\n}\n\n.asn-list-popover {\n  .asn-item {\n    display: flex;\n    width: 250px;\n    line-height: 24px;\n    &.bold {\n      font-weight: bold;\n    }\n    .asn-item-label {\n      flex: 0 0 140px;\n    }\n    .asn-item-value {\n      flex: 1;\n      text-align: right;\n    }\n  }\n}\n.total-select-wrapper{\n  float: left;\n  font-size:14px;\n  margin-top: 16px;\n  .total-count {\n    color: $blue;\n    margin-left: 4px;\n    font-weight: 700;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/paymentRequest/component/confirmDialog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/paymentRequest/component/correlativeRequestDialog.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":12,"column":120,"nodeType":"VIdentifier","messageId":"deprecated","endLine":12,"endColumn":126},{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"correlativeRequestDialog\" is not PascalCase.","line":43,"column":9,"nodeType":"Literal","endLine":43,"endColumn":35,"fix":{"range":[1628,1652],"text":"CorrelativeRequestDialog"}}],"errorCount":2,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <el-dialog\n    :visible.sync=\"dialogVisible\"\n    width=\"600px\"\n    custom-class=\"pms-new-ui pms-dialog correlative-request-dialog\"\n    @close=\"onClose\"\n    :title=\"$t('invoiceCorrelativeNormalRequest')\"\n  >\n    <el-table :data=\"tableList\" max-height=\"400px\" >\n      <el-table-column :label=\"$t('commonRequestID')\">\n        <template slot-scope=\"scope\">\n          <router-link class=\"route-style\" :to=\"`/admin/finance/paymentRequest/detail/${scope.row.request_id}`\" @click.native=\"onClose\">{{ scope.row.request_id }}</router-link>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('commonStatus')\">\n        <template slot-scope=\"scope\">\n          <span :class=\"`pms-status-sign pms-status-sign-${findStatus(scope.row.request_status).color || ''}`\">{{\n            findStatus(scope.row.request_status).label || ''\n          }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('invoiceTotalPaymentAmount')\">\n        <template slot-scope=\"scope\">\n          <span :class=\"{ 'is-grey': isCancel(scope.row.status) }\">{{\n            `${formatValue(scope.row.payment_amount)} ${currency}`\n          }}</span>\n        </template>\n      </el-table-column>\n    </el-table>\n    <section class=\"total-wrapper\">\n      <div class=\"item-wrapper\" v-for=\"(item, index) in totalList\" :key=\"index\">\n        <label>{{ item.label }}:</label>\n        <span>{{ item.value }}</span>\n      </div>\n    </section>\n  </el-dialog>\n</template>\n\n<script>\nimport { formatValue } from '@/utils/format';\nimport { PaymentRequestStatusList } from '../constant';\nexport default {\n  name: 'correlativeRequestDialog',\n  props: {\n    visible: {\n      type: Boolean,\n      required: true,\n      default: false\n    },\n    currency: {\n      required: true\n    },\n    data: {\n      type: Object,\n      required: true,\n      default: () => {}\n    }\n  },\n  data() {\n    return {\n      statusColorList: {},\n      total: 0,\n      dialogVisible: false,\n      loading: false\n    };\n  },\n  watch: {\n    visible: {\n      handler(value) {\n        this.dialogVisible = value;\n      },\n      immediate: true\n    }\n  },\n  computed: {\n    tableList() {\n      return this.data.list || [];\n    },\n    totalList() {\n      return [\n        {\n          label: this.$t('invoiceCBDBalance'),\n          value: `${this.data.cbd_balance || 0} ${this.currency}`\n        },\n        {\n          label: this.$t('invoiceNormalTotal'),\n          value: `${this.data.normal_amount || 0} ${this.currency}`\n        }\n      ];\n    }\n  },\n  methods: {\n    formatValue,\n    findStatus(status) {\n      return PaymentRequestStatusList.find(item => item.value === status);\n    },\n    isCancel(status) {\n      return [3, 5].includes(status);\n    },\n    onClose() {\n      this.$emit('close');\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.correlative-request-dialog {\n  /deep/ .is-grey {\n    color: grey;\n  }\n  .total-wrapper{\n    padding: 12px 24px;\n    background-color: #F6F6F6;\n    text-align: right;\n    font-size: 12px;\n    line-height: 16px;\n    border: 1px solid #ddd;\n    border-top: 0;\n    .item-wrapper{\n      color: #666666;\n      display: inline-block;\n      &:not(:last-child) {\n        margin-right: 8px;\n        &:after{\n          content: ',';\n          display: inline-block;\n          width: 3px;\n        }\n      }\n    }\n  }\n  .route-style{\n    color: $blue;\n    text-decoration: underline;\n  }\n}\n</style>\n<style lang=\"scss\">\n.pms-dialog {\n  .el-dialog__body {\n    padding: 8px 24px 16px;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/paymentRequest/component/createDialog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/paymentRequest/component/deleteDialog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/paymentRequest/component/massOperationDialog.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"paymentMassOperateDialog\" is not PascalCase.","line":52,"column":9,"nodeType":"Literal","endLine":52,"endColumn":35,"fix":{"range":[1975,1999],"text":"PaymentMassOperateDialog"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <el-dialog\n    :visible.sync=\"dialogVisible\"\n    width=\"550px\"\n    lock-scroll\n    :title=\"mode === 'approve' ? $t('commonMassApprove') : $t('commonMassReject')\"\n    @close=\"onClose\"\n  >\n    <div class=\"pms-new-ui mass-operate-dialog\">\n      <span>{{  $t('commonYouHaveSelected')}}</span>\n      <el-popover\n        placement=\"top\"\n        :title=\"`${$t('commonRequestID')}(${selectedList.length}):`\"\n        width=\"220\"\n        trigger=\"hover\"\n        popper-class=\"mass-send-pr-list-popover\"\n      >\n        <ul class=\"pr-id-list\">\n          <li class=\"pr-id-item\" v-for=\"item in selectedList\" :key=\"item\">{{ item }}</li>\n        </ul>\n        <span class=\"popover-tips\" slot=\"reference\"\n          >{{ `${selectedList.length} requests, ` }}</span\n        >\n      </el-popover>\n      <span>{{\n        mode === 'approve' ? $t('commonWhichWillBeMassApproved') : $t('commonWhichWillBeMassRejectInputReason')\n      }}</span>\n      <el-form label-width=\"140px\" label-position=\"left\" :model=\"form\" ref=\"form\" v-if=\"isRejectMode\" class=\"mt8\">\n        <el-form-item\n          prop=\"reject_reason\"\n          :label=\"$t('commonRejectReason') + ': '\"\n          :rules=\"{ required: isRejectMode, trigger: 'blur', message: 'Reject reason is required' }\"\n        >\n          <el-input type=\"textarea\" v-model=\"form.reject_reason\" :maxlength=\"500\" :rows=\"2\"></el-input>\n          <span class=\"pms-error-tip mt8 pms-float-right\">{{ form.reject_reason.length }}/500</span>\n        </el-form-item>\n      </el-form>\n    </div>\n\n    <div slot=\"footer\" class=\"pms-clearfix\">\n      <div class=\"pms-float-right\">\n        <el-button class=\"list-btn white-grey\" @click=\"onClose\">{{ $t('commonCancel') }}</el-button>\n        <el-button :loading=\"loading\" class=\"list-btn\" @click=\"onConfirm\">{{ $t('commonConfirm') }}</el-button>\n      </div>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nimport { postMassConfirm, postMassReject } from '@/api/paymentRequest';\nexport default {\n  name: 'paymentMassOperateDialog',\n  data() {\n    return {\n      dialogVisible: false,\n      loading: false,\n      form: {\n        reject_reason: ''\n      }\n    };\n  },\n  props: {\n    visible: {\n      default: false\n    },\n    selectedList: {\n      type: Array,\n      default: () => []\n    },\n    mode: {\n      type: String,\n      default: 'approve'\n    }\n  },\n  computed: {\n    isRejectMode() {\n      return this.mode === 'reject';\n    }\n  },\n  methods: {\n    onClose() {\n      this.$emit('close');\n    },\n    onConfirm() {\n      if (this.isRejectMode) {\n        this.$refs.form.validate(pass => {\n          if (pass) {\n            this.approveOrReject(2);\n          }\n        });\n      } else {\n        this.approveOrReject(1);\n      }\n    },\n    async approveOrReject(action) {\n      try {\n        const params = {\n          request_id_list: this.selectedList\n        };\n        if (action === 2) {\n          params.remark = this.form.reject_reason;\n        }\n        this.loading = true;\n        let func = postMassConfirm;\n        if (action === 2) {\n          func = postMassReject;\n        }\n        const res = await func(params);\n        if (res && res.retcode === 0) {\n          if (res.data.fail_count) {\n            this.$message({ type: 'error', message: this.$t('invoiceMassOperationFailTips', { success: this.selectedList.length - res.data.fail_count, fail: res.data.fail_count }) });\n          } else {\n            this.$message({ type: 'success', message: this.$t('commonSuccess') });\n          }\n          this.$emit('refresh');\n          this.onClose();\n        } else {\n          this.$message({ type: 'error', message: res.info || res.message });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loading = false;\n      }\n    }\n  },\n  watch: {\n    '$props.visible': {\n      handler(now) {\n        this.form.reject_reason = '';\n        this.dialogVisible = now;\n        this.loading = false;\n      },\n      immediate: true\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.mass-operate-dialog {\n  .pms-error-tip {\n    font-size: 12px;\n    line-height: 12px;\n    color: #929292;\n  }\n  .popover-tips {\n    color: #3d6ed0;\n    font-weight: bold;\n  }\n  /deep/ .el-form .el-form-item {\n    margin-bottom: 0px;\n    .el-form-item__label {\n      font-size: 14px;\n      color: #333333;\n    }\n  }\n  .failed-list-wrapper {\n    margin-top: 16px;\n    .failed-item {\n      margin: 4px 0 ;\n    }\n    .failed-item-warning{\n      font-size: 14px;\n      color: #929292;\n    }\n  }\n\n}\n</style>\n<style lang=\"scss\">\n.mass-send-pr-list-popover {\n  max-height: 200px;\n  padding-bottom: 20px;\n  font-size: 14px;\n  color: #333333;\n  transform: translateY(2px);\n  .el-popover__title {\n    margin: 2px 3px 10px;\n    font-weight: normal;\n    font-size: 14px;\n    color: #333333;\n  }\n  .pr-id-list {\n    width: 192px;\n    max-height: 144px;\n    overflow-y: scroll;\n    line-height: 21px;\n    margin-left: 12px;\n    font-size: 14px;\n    color: #333333;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/paymentRequest/component/massOperationGroup.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/paymentRequest/component/pendingRequestTable.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/paymentRequest/component/skuTableList.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/paymentRequest/constant.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/paymentRequest/create.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/paymentRequest/detail.vue","messages":[{"ruleId":"vue/no-template-shadow","severity":2,"message":"Variable 'index' is already declared in the upper scope.","line":213,"column":83,"nodeType":"Identifier","endLine":213,"endColumn":88}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"pms-ele-ui payment-request-detail-wrapper layout-padding\">\n    <section class=\"detail-header-wrapper\">\n      <div class=\"left-info\">\n        <i class=\"el-icon-arrow-left go-back-icon\" @click=\"goBack\"></i>\n        <span class=\"header-text\">\n          <el-popover\n            placement=\"top\"\n            width=\"220\"\n            trigger=\"hover\"\n            v-if=\"isPaymentTransferedFully && !canPaymentIssue\"\n            popper-class=\"break-word pms-ele-ui pms-text-left\"\n            :content=\"$t('invoicePaymentIssueWarnningTips')\"\n          >\n            <i slot=\"reference\" class=\"el-icon-warning warning-icon\"></i>\n          </el-popover>\n          {{ form.request_id || ''}}\n        </span>\n        <span\n          class=\"pms-ele-ui status-span\"\n          :class=\"formatStatusColor\"\n        >{{formatStatus}}</span>\n      </div>\n      <div class=\"right-top btn-wrapper\">\n        <el-dropdown\n          class=\"exportGroup-btn white-blue mr8\"\n          v-if=\"isPendingConfirm && isFirstApproveRole && isFirstApprove && canApprove\"\n          split-button\n          type=\"primary\"\n          @command=\"onDropDownCommand\"\n        >\n          <span>{{$t('commonMore')}}</span>\n          <el-dropdown-menu slot=\"dropdown\">\n            <el-dropdown-item :command=\"btn\" v-for=\"btn in dropDownList\" :key=\"btn.text\">\n              <span>{{$t(btn.text)}}</span>\n            </el-dropdown-item>\n          </el-dropdown-menu>\n        </el-dropdown>\n\n        <template v-else>\n          <el-button\n            v-if=\"!isDraft\"\n            class=\"list-btn white-blue\"\n            @click=\"onShowActionDialog\"\n          >{{$t('commonActionLog')}}</el-button>\n          <el-button\n            v-if=\"!(isDraft || isDelete)\"\n            class=\"list-btn white-blue\"\n            @click=\"onExportPDF\"\n          >{{$t('commonExport')}}</el-button>\n        </template>\n\n        <el-button\n          class=\"list-btn white-red\"\n          @click=\"onDelete\"\n          v-if=\"canOperate && canDelete\"\n          :loading=\"loading\"\n        >{{$t('commonDelete')}}</el-button>\n\n        <el-button\n          class=\"list-btn white-blue\"\n          @click=\"onEdit\"\n          v-if=\"canOperate && canEdit\"\n          :loading=\"loading\"\n        >{{$t('commonEdit')}}</el-button>\n\n        <el-button\n          class=\"list-btn white-red\"\n          @click=\"onInvoiceMisMatch\"\n          v-if=\"canOperate && isPendingConfirm && canApprove\"\n          :loading=\"loading\"\n        >{{$t('invoiceInvoiceMisMatch')}}</el-button>\n        <el-button\n          class=\"list-btn white-green\"\n          @click=\"onConfirmNotice\"\n          v-if=\"canOperate && isPendingConfirm && canApprove\"\n          :loading=\"loading\"\n        >{{$t('commonConfirm')}}</el-button>\n        <!--Payment Issue / Payment Received -->\n        <el-button\n          class=\"list-btn\"\n          @click=\"onPaymentIssue\"\n          v-if=\"canOperate && isPaymentTransferedFully && canPaymentIssue\"\n          :loading=\"loadingPaymentIssue\"\n        >{{$t('invoicePaymentIssue')}}</el-button>\n        <el-button\n          class=\"list-btn\"\n          @click=\"onPaymentReceived\"\n          v-if=\"canOperate && isPaymentTransferedFully && !canPaymentIssue\"\n          :loading=\"loadingPaymentReceived\"\n        >{{$t('invoicePaymentReceived')}}</el-button>\n\n        <el-button class=\"list-btn\" icon=\"el-icon-plus\" v-if=\"canRouteToCreateNormal\" @click=\"onRouteToCreateNormalRequest\">\n          {{$t('invoiceNormalPaymentRequest')}}\n        </el-button>\n      </div>\n    </section>\n\n    <div class=\"main-wrapper\">\n      <section class=\"module-block\">\n        <el-form label-width=\"180px\" :model=\"form\" label-position=\"right\">\n          <div v-for=\"(schema, scIndex) in formSchemaList\" :key=\"scIndex\" class=\"pms-clearfix mb24\">\n            <h3 class=\"section-title\">{{$t(schema.title)}}</h3>\n            <el-col :span=\"item.width || 12\" v-for=\"item in schema.schemaList\" :key=\"item.field\">\n            <el-form-item :label=\"item.label + ': '\" :prop=\"item.field\">\n              <span\n                v-if=\"item.type === 'text'\"\n                class=\"form-component-width\"\n              >{{formatFromValue(item)}}</span>\n              <div\n                class=\"form-component-width invoice-id-box\"\n                v-if=\"item.type === 'invoice_id'\"\n                @mouseenter=\"isShowInvoiceEditIcon = true\"\n                @mouseleave=\"isShowInvoiceEditIcon =  false\"\n              >\n                <span class=\"invoice-number-label\">{{form[item.field] || '/'}}</span>\n                <i\n                  class=\"el-icon-edit edit-icon\"\n                  v-if=\"isInvoiceConfirm && isFirstApproveRole && isShowInvoiceEditIcon\"\n                  @click=\"isShowInvoiceEditBox = !isShowInvoiceEditBox\"\n                ></i>\n                <div class=\"edit-remark-box\" v-if=\"isShowInvoiceEditBox\">\n                  <i class=\"pms-float-right el-icon-close\" @click=\"onCloseEditBox\"></i>\n                  <h3 class=\"title\">{{item.label}}</h3>\n                  <div class=\"pms-clearfix\">\n                    <el-input type=\"textarea\" v-model=\"form[item.field]\" :maxlength=\"512\" @change=\"(value) => onChangePanceil(item.field, value)\"></el-input>\n                  </div>\n                  <div class=\"btn-wrapper\">\n                    <el-button\n                      class=\"list-btn white-grey\"\n                      :loading=\"loading\"\n                      @click=\"onCancelEditBox(item.field)\"\n                    >{{$t('commonCancel')}}</el-button>\n                    <el-button\n                      class=\"list-btn\"\n                      :loading=\"loading\"\n                      @click=\"onConfirmEditBox(item.field)\"\n                    >{{$t('commonConfirm')}}</el-button>\n                  </div>\n                </div>\n              </div>\n              <el-date-picker\n                v-if=\"item.type === 'date'\"\n                :picker-options=\"item.pickerOptions || {}\"\n                popper-class=\"pms-ui\"\n                format=\"yyyy-MM-dd\"\n                :value-format=\"'yyyy-MM-dd [00:00:00]'\"\n                v-model=\"form[item.field]\"\n                type=\"date\"\n              ></el-date-picker>\n              <template v-if=\"item.type === 'attachment'\">\n                 <FileListAttachment\n                  v-if=\"attachmentList.length > 0\"\n                  ref=\"attachment\"\n                  :attachmentList=\"attachmentList\"\n                  width=\"100%\"\n                ></FileListAttachment>\n                <span v-else>/</span>\n              </template>\n              <el-button v-if=\"item.type === 'relativeNormalRequest'\" type=\"text\" @click=\"onShowRelativeRequestDialog\">{{$t('commonViewDetail')}}</el-button>\n\n            </el-form-item>\n          </el-col>\n          </div>\n\n        </el-form>\n      </section>\n      <section class=\"table-section sku-section module-block\">\n        <h3 class=\"section-title\">{{$t('commonSkuInformation')}}</h3>\n\n        <div class=\"total-block\">\n          <p class=\"total-block-row\">\n            <span class=\"total-label\">{{$t('invoiceTotalSkuQty')+': '}}</span>\n            <span class=\"total-value\">{{totalSkuQty}}</span>\n          </p>\n          <p class=\"total-block-row\">\n            <span class=\"total-label\">{{$t('invoiceTotalPaymentAmount')+': '}}</span>\n            <span class=\"total-value\">{{`${formatValue(totalPaymentAmount)} ${currency}`}}</span>\n          </p>\n          <!-- <p class=\"total-block-row\" v-if=\"ruleConfig.sku_pre_tax_purchase_price_required\">\n            <span class=\"total-label\">{{ $t('invoiceTotalPaymentAmountPreTax') }}</span>\n            <span class=\"total-value\">{{ `${formatValue(totalPaymentAmountPreTax)} ${currency}` }}</span>\n          </p> -->\n        </div>\n        <el-form\n          class=\"po-section\"\n          :model=\"poForm\"\n          ref=\"formDom\"\n          label-position=\"left\"\n          label-width=\"70px\"\n        >\n          <section\n            class=\"po-section-item srm-clearfix\"\n            v-for=\"(item, index) in poForm.poList\"\n            :key=\"item.id\"\n          >\n            <h4 class=\"po-section-po-id\">\n              <i\n                v-if=\"poForm.poList.length > 1\"\n                class=\"el-icon-caret-top expand-icon\"\n                :class=\"{'is-expanded': !item.isExpanded}\"\n                @click=\"toggleExpandPO(item)\"\n              ></i>\n              {{$t('commonPO') + ` ${index + 1}`}}\n              <span v-if=\"!item.isExpanded && item.order_id\">({{item.order_id}})</span>\n            </h4>\n            <div v-show=\"item.isExpanded\">\n              <div class=\"po-section-header\">\n                <el-form-item :label=\"$t('commonPOID')\">\n                  <router-link target=\"_blank\" class=\"click-text\" :to=\"`/admin/purchase/order/podetail/${item.order_id}`\">{{item.order_id}}</router-link>\n                </el-form-item>\n                <el-form-item :label=\"$t('commonASNID')\" v-if=\"isNormalRequest\">\n                  <router-link target=\"_blank\" class=\"click-text\" v-for=\"(option, index) in item.asn_inbound_ids\" :key=\"`${option.asn_id}${index}`\" :to=\"`/admin/inbound/asn/detail/${option.asn_id}`\">{{option.inbound_id}}</router-link>\n                </el-form-item>\n              </div>\n              <skuTableList\n                :currency=\"currency\"\n                :requestType=\"form.request_type\"\n                :isDetail=\"true\"\n                :isPendingConfirm=\"isPendingConfirm\"\n                :isDraft=\"isDraft\"\n                :purchaseType=\"form.purchase_type\"\n                :isFirstApproval=\"isPendingConfirm && isFirstApproveRole && isFirstApprove && canApprove\"\n                :skuList=\"item.sku_list\"\n                :ruleConfig=\"ruleConfig\"\n                @checkAll=\"(type, value) => onCheckAllOkToPay(item, type,value) \"\n              ></skuTableList>\n            </div>\n          </section>\n        </el-form>\n      </section>\n    </div>\n    <DeleteDialog\n      :visible=\"deleteDialog\"\n      @close=\"deleteDialog = false\"\n      @confirm=\"onConfirmDelete\"\n      :loading=\"loading\"\n    ></DeleteDialog>\n    <ConfirmNoticeDialog\n      :visible=\"confirmNoticeDialog\"\n      @close=\"onCloseConfirmNotice\"\n      @next=\"onConfirm\"\n    ></ConfirmNoticeDialog>\n    <ActionLog :visible=\"actionLogVisible\" :request_id=\"form.request_id\" @close=\"onCloseActionLog\" />\n    <CorrelativeRequestDialog :visible=\"relativeDialog\" :data=\"form.correlative_normal_request || {}\" :currency=\"currency\" @close=\"relativeDialog = false\"></CorrelativeRequestDialog>\n  </div>\n</template>\n\n<script>\nimport {\n  getPaymentRequestDetail,\n  approveOrRejectRequest,\n  deletePaymentRequest,\n  exportSinglePayReqPDF,\n  getRuleConfig,\n  getPaymentDateConfig,\n  getPendingPermission,\n  changeInvoiceNo,\n  postPaymentIssue,\n  postPaymentReceived\n} from '@/api/paymentRequest';\nimport { Permission } from '@/utils/constant';\nimport { hasPermission } from '@/utils/permission';\nimport { formatValue } from '@/utils/format';\nimport FileListAttachment from '~c/fileListAttachment/index';\nimport { downloadBlobFile } from '@/utils/downloadFile';\nimport SkuTableList from './component/skuTableList';\nimport ActionLog from './component/actionLog';\nimport ConfirmNoticeDialog from './component/confirmDialog';\nimport moment from 'moment';\nimport { getRequestTypeLabel, PaymentRequestStatusList, reduceTotalList } from './constant';\nimport CorrelativeRequestDialog from './component/correlativeRequestDialog';\nimport DeleteDialog from './component/deleteDialog';\nimport { removeSpaceCharacter } from './utils';\nexport default {\n  components: {\n    FileListAttachment,\n    SkuTableList,\n    ActionLog,\n    ConfirmNoticeDialog,\n    CorrelativeRequestDialog,\n    DeleteDialog\n  },\n  data() {\n    return {\n      loading: false,\n      loadingPaymentIssue: false,\n      loadingPaymentReceived: false,\n      canOperate: true,\n      attachmentList: [],\n      isShowInvoiceEditIcon: false,\n      isShowInvoiceEditBox: false,\n      isFirstApproveRole: false,\n      deleteDialog: false,\n      form: {\n        request_type: 1,\n        requester: this.$store.getters.email,\n        credit_amount: '',\n        credit_note_no: '',\n        debit_amount: '',\n        debit_note_no: '',\n        bank_name: '',\n        supplier_account_no: '',\n        payment_term: '',\n        invoice_id: '',\n        cache_invoice_id: '',\n        supplier_id: '',\n        supplier_name: '',\n        region: '',\n        purchase_type: '',\n        remark: '',\n        supplier_remark: '',\n        scheduled_payment_date: '',\n        expected_payment_date: '',\n        pro_forma_invoice_no: '',\n        pro_forma_invoice_amount: '',\n        tax_invoice_amount: '',\n        correlative_cbd_request: '',\n        correlative_normal_request: {}\n      },\n      hasExpectedPaymentDate: false,\n      hasScheduledPaymentDate: false,\n      poForm: {\n        poList: [\n          {\n            id: 1,\n            cache_order_id: '',\n            isExpanded: true,\n            order_id: '',\n            inbound_ids: [],\n            sku_list: []\n          }\n        ]\n      },\n      ruleConfig: {},\n      statusClass: {\n        1: 'orange',\n        2: 'orange',\n        3: 'red',\n        4: 'green',\n        5: 'red',\n        6: 'orange',\n        7: 'orange',\n        8: 'orange'\n      },\n      actionLogVisible: false,\n      confirmNoticeDialog: false,\n      relativeDialog: false,\n      dropDownList: [\n        { text: 'commonDelete', onClick: 'onDelete' },\n        { text: 'commonExport', onClick: 'onExportPDF' },\n        { text: 'commonActionLog', onClick: 'onShowActionDialog' }\n      ],\n      canApprove: false\n    };\n  },\n  computed: {\n    canRouteToCreateNormal() {\n      return this.isCBDRequest && [4, 6, 7, 8].includes(this.form.request_status) && this.form.correlative_normal_request && this.form.correlative_normal_request.cbd_balance > 0;\n    },\n    totalSkuQty() {\n      let allSkuList = [];\n      this.poForm.poList.forEach((item) => {\n        allSkuList = [...allSkuList, ...item.sku_list];\n      });\n      const normalSkuQty = allSkuList\n        .filter((item) =>\n          this.isDraft\n            ? item.sku_type === 0\n            : item.sku_type === 0 && item.is_okay_to_pay\n        )\n        .reduce((sum, item) => {\n          sum += Number(\n            item.received_qty_overwrite || item.actual_received_qty || 0\n          );\n          return sum;\n        }, 0);\n      const giftSkuQty = allSkuList\n        .filter((item) =>\n          this.isDraft\n            ? item.sku_type === 1\n            : item.sku_type === 1 && item.is_okay_to_pay\n        )\n        .reduce((sum, item) => {\n          sum += Number(\n            item.received_qty_overwrite || item.actual_received_qty || 0\n          );\n          return sum;\n        }, 0);\n\n      return `${normalSkuQty} ${this.$t(\n        'commonNormalSku'\n      )} ${giftSkuQty} ${this.$t('commonGiftSku')}`;\n    },\n    // overwrite\n    // totalPaymentAmountPreTax() {\n    //   let allSkuList = [];\n    //   this.poForm.poList.forEach(item => {\n    //     allSkuList = [...allSkuList, ...item.sku_list.filter(item => item.sku_type === 0 && item.is_okay_to_pay)];\n    //   });\n    //   return reduceTotalList(allSkuList, (row) => row.pre_payment_amount).toFixed(2); // todo\n    // },\n    // overwrite\n    totalPaymentAmount() {\n      let allSkuList = [];\n      this.poForm.poList.forEach((item) => {\n        allSkuList = [...allSkuList, ...item.sku_list];\n      });\n      const selectedSkuList = this.isDraft\n        ? allSkuList.filter((item) => item.sku_type === 0)\n        : allSkuList.filter(\n          (item) => item.sku_type === 0 && item.is_okay_to_pay\n        );\n      return reduceTotalList(selectedSkuList, (row) => row.payment_amount_overwrite).toFixed(2);\n    },\n    formSchemaList() {\n      return [\n        {\n          title: 'commonSupplierInformation',\n          schemaList: [\n            {\n              type: 'text',\n              label: this.$t('commonRequester'),\n              field: 'requester'\n            },\n            {\n              type: 'text',\n              label: this.$t('invoiceRequestType'),\n              field: 'request_type'\n            },\n            {\n          type: 'text',\n          label: this.$t('commonVendorSiteID'),\n          field: 'supplier_id'\n        },\n            {\n          type: 'text',\n          label: this.$t('commonSupplierName'),\n          field: 'supplier_name'\n        },\n           {\n          type: 'text',\n          label: this.$t('paymentRequestSupplierAccountNo'),\n          field: 'supplier_account_no',\n          hidden: this.ruleConfig.supplier_account_no_required === 0\n        },\n            {\n          type: 'text',\n          label: this.$t('paymentRequestBankName'),\n          field: 'bank_name',\n          hidden: this.ruleConfig.bank_name_required === 0\n        },\n            {\n          type: 'text',\n          label: this.$t('paymentTerm'),\n          hidden: this.ruleConfig.payment_term_required === 0,\n          field: 'payment_term'\n        },\n        {\n          type: 'text',\n          label: this.$t('invoiceSupplierRemark'),\n          field: 'supplier_remark',\n          hidden: this.isCBDRequest\n        }\n          ].filter(item => !item.hidden)\n        },\n        {\n          title: 'invoiceInvoiceInformation',\n          schemaList: [\n            {\n              type: 'invoice_id',\n              label: this.$t('paymentProformaInvoiceNumber'),\n              field: 'pro_forma_invoice_no',\n              hidden: this.isNormalRequest\n            },\n            {\n              type: 'text',\n              label: this.$t('paymentProformaInvoiceAmount'),\n              field: 'pro_forma_invoice_amount',\n              hasCurrency: true,\n              hidden: this.isNormalRequest\n            },\n            {\n              type: 'invoice_id',\n              label: this.$t('paymentTaxInvoiceNumber'),\n              field: 'invoice_id',\n              hidden: this.isCBDRequest\n            },\n            {\n              type: 'text',\n              label: this.$t('paymentTaxInvoiceAmount'),\n              field: 'tax_invoice_amount',\n              hasCurrency: true,\n              hidden: this.isCBDRequest\n            },\n            {\n              type: 'text',\n              label: this.$t('invoiceCorrelativeCBDRequest'),\n              field: 'correlative_cbd_request',\n              hidden: this.isCBDRequest\n            },\n            {\n              type: 'relativeNormalRequest',\n              label: this.$t('invoiceCorrelativeNormalRequest'),\n              field: 'correlative_normal_request',\n              hidden: !(this.isCBDRequest && [4, 6, 7, 8].includes(this.form.request_status)) // 显示条件：CBD类型+invoice confirmed及之后状态, 不包括delete状态\n            },\n            {\n              type:\n                this.hasExpectedPaymentDate && this.isPendingConfirm\n                  ? 'date'\n                  : 'text',\n              label: this.$t('invoiceExpectedPaymentDate'),\n              field: 'expected_payment_date',\n              hidden: this.isDraft\n            },\n            {\n              type:\n                this.hasScheduledPaymentDate && this.isPendingConfirm\n                  ? 'date'\n                  : 'text',\n              label: this.$t('invoiceScheduledPaymentDate'),\n              field: 'scheduled_payment_date',\n              hidden: this.isDraft\n            },\n            {\n              type: 'text',\n              label: this.$t('commonRemark'),\n              field: 'remark'\n            },\n            {\n              width: 18,\n              type: 'attachment',\n              label: this.$t('purchaseRequest.attachment'),\n              field: 'attachment'\n            }\n          ].filter(item => !item.hidden)\n        },\n         {\n          title: 'invoiceCreditOrDebitNote',\n          schemaList: [\n            {\n              type: 'text',\n              label: this.$t('paymentRequestCreditAmount'),\n              field: 'credit_amount',\n              hidden: this.ruleConfig.credit_amount_required === 0,\n              hasCurrency: true\n            },\n\n            {\n              type: 'text',\n              label: this.$t('paymentRequestCreditNoteNo'),\n              hidden: this.ruleConfig.credit_note_no_required === 0,\n              field: 'credit_note_no'\n            },\n\n            {\n              type: 'text',\n              label: this.$t('paymentRequestDebitAmount'),\n              field: 'debit_amount',\n              hidden: this.ruleConfig.debit_amount_required === 0,\n              hasCurrency: true\n            },\n            {\n              type: 'text',\n              label: this.$t('paymentRequestDebitNoteNo'),\n              field: 'debit_note_no',\n              hidden: this.ruleConfig.debit_note_no_required === 0\n            }\n          ].filter(item => !item.hidden)\n        }\n      ];\n    },\n    isNormalRequest() {\n      return this.form.request_type === 1;\n    },\n    isCBDRequest() {\n      return this.form.request_type === 2;\n    },\n    isDraft() {\n      return this.form.request_status === 1;\n    },\n    isRejected() {\n      return this.form.request_status === 3;\n    },\n    isPendingConfirm() {\n      return this.form.request_status === 2;\n    },\n    isFirstApprove() {\n      // 该单是否没有被审批过，true表示没有\n      return this.form.approve_in_process === 0;\n    },\n    canEdit() {\n      return (\n        this.isDraft ||\n        (this.isPendingConfirm && this.isFirstApproveRole && this.isFirstApprove && this.canApprove) ||\n        (this.isRejected && this.isPMS && this.isRequester)\n      );\n    },\n    isRequester() {\n      return this.form.requester === this.$store.getters.email;\n    },\n    isDelete() {\n      return this.form.request_status === 5;\n    },\n    canDelete() {\n      return (\n        this.isDraft || (this.isRejected && this.isPMS && this.isRequester)\n      );\n    },\n    isPMS() {\n      return this.form.request_source === 'PMS';\n    },\n    isPaymentTransferedFully() {\n      return this.form.request_status === 7;\n    },\n    canPaymentIssue() {\n      return this.form.payment_issue === 0;\n    },\n    currency() {\n      return this.$store.getters.currencyMap[this.form.region] || '';\n    },\n    isInvoiceConfirm() {\n      return this.form.request_status === 4;\n    },\n    formatStatus() {\n      const statusText = (\n        PaymentRequestStatusList.find(\n          (item) => item.value === this.form.request_status\n        ) || { label: '' }\n      ).label;\n\n      if (this.form.request_status === 2) {\n        return `${statusText}: ${this.form.next_approval_role_name}`;\n      }\n      return statusText;\n    },\n    formatStatusColor() {\n      const color = (\n        PaymentRequestStatusList.find(\n          (item) => item.value === this.form.request_status\n        ) || { color: '' }\n      ).color;\n      return color;\n    }\n  },\n  created() {\n    const id = this.$route.params.request_id;\n    if (id) {\n      this.getDetail();\n      this.canOperate = hasPermission(Permission.EDIT_PAYMENT_REQUEST);\n    }\n  },\n  watch: {\n    $route: {\n      handler() {\n        this.getDetail();\n      }\n    }\n  },\n  methods: {\n    onChangePanceil(field, value) {\n      this.form[field] = removeSpaceCharacter(value);\n    },\n    onRouteToCreateNormalRequest() {\n      this.$store.commit('setPRCreateData', {\n        supplier_id: this.form.supplier_id,\n        correlative_cbd_request: this.form.request_id,\n        po_list: []\n      });\n      this.$router.push('/admin/finance/paymentRequest/create');\n    },\n    formatFromValue(item) {\n      if (item.field === 'supplier_account_no') {\n        // 银行账号，明文转秘文\n        return this.form[item.field] === ''\n          ? 'N/A'\n          : Array.from(\n            { length: `${this.form[item.field]}`.length - 4 },\n            () => '*'\n          ).join('') + `${this.form[item.field].substr(-4)}`;\n      }\n      if (['expected_payment_date', 'scheduled_payment_date'].includes(item.field)) {\n        return this.form[item.field] ? this.form[item.field].replace(/\\d+:\\d+:\\d+/, '') : '/';\n      }\n      if (item.field === 'request_type') {\n        return getRequestTypeLabel(this.form[item.field]);\n      }\n      if (['pro_forma_invoice_amount', 'tax_invoice_amount'].includes(item.field)) {\n         return this.form[item.field] !== null\n        ? `${this.form[item.field]} ${item.hasCurrency ? this.currency : ''}`\n        : '/';\n      }\n      return this.form[item.field]\n        ? `${this.form[item.field]} ${item.hasCurrency ? this.currency : ''}`\n        : '/';\n    },\n    onPaymentIssue() {\n      this.$confirm(this.$t('invoiceConfirmPaymentIssueTip'), this.$t('invoicePaymentIssue'), {\n        customClass: 'pms-ele-ui',\n        confirmButtonText: this.$t('commonConfirm'),\n        cancelButtonText: this.$t('commonCancel'),\n        confirmButtonClass: 'list-btn',\n        cancelButtonClass: 'list-btn white-blue'\n      }).then(() => {\n        this._paymentIssue();\n      }).catch(() => {});\n    },\n    async _paymentIssue() {\n      try {\n        this.loadingPaymentIssue = true;\n        const params = {\n          request_id: this.form.request_id\n        };\n        const res = await postPaymentIssue(params);\n        if (res && res.retcode === 0) {\n          this.$message({ type: 'success', message: this.$t('commonSuccess') });\n          this.getDetail();\n        } else {\n          this.$message({ type: 'error', message: res.message || res.info });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loadingPaymentIssue = false;\n      }\n    },\n    onShowRelativeRequestDialog() {\n      this.relativeDialog = true;\n    },\n    async onPaymentReceived() {\n      try {\n        this.loadingPaymentReceived = true;\n        const params = {\n          request_id: this.form.request_id\n        };\n        const res = await postPaymentReceived(params);\n        if (res && res.retcode === 0) {\n          this.$message({ type: 'success', message: this.$t('commonSuccess') });\n          this.getDetail();\n        } else {\n          this.$message({ type: 'error', message: res.message || res.info });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loadingPaymentReceived = false;\n      }\n    },\n    async onConfirmEditBox(field) {\n      try {\n        this.loadingConfirmEdit = true;\n        const params = {\n          request_id: this.form.request_id\n        };\n        if (field === 'invoice_id') {\n          params.invoice_id_ebs = this.form[field];\n        }\n        if (field === 'pro_forma_invoice_no') {\n          params.pro_forma_invoice_no_ebs = this.form[field];\n        }\n        const res = await changeInvoiceNo(params);\n        if (res && res.retcode === 0) {\n          this.$message({ type: 'success', message: this.$t('commonSuccess') });\n          this.onCloseEditBox();\n          this.form[`cache_${field}`] = this.form[field];\n        } else {\n          this.$message({ type: 'error', message: res.message || res.info });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loadingConfirmEdit = false;\n      }\n    },\n    onCloseEditBox() {\n      this.isShowInvoiceEditBox = false;\n    },\n    onCancelEditBox(field) {\n      this.form[field] = this.form[`cache_${field}`];\n      this.onCloseEditBox();\n    },\n    onCheckAllOkToPay(item, type, value) {\n      let skuType = 0;\n      if (type === 'normal') {\n        skuType = 0;\n      } else {\n        skuType = 1;\n      }\n      item.sku_list = item.sku_list.map((sku) => {\n        if (sku.sku_type === skuType) {\n          return Object.assign(sku, { is_okay_to_pay: value });\n        } else {\n          return sku;\n        }\n      });\n    },\n    onDropDownCommand(command) {\n      if (command.onClick && typeof this[command.onClick] === 'function') {\n        this[command.onClick]();\n      }\n    },\n    setAttachmentList(attachmentList) {\n      this.attachmentList = attachmentList;\n    },\n    formatValue,\n    async getRuleConfig() {\n      try {\n        const params = {\n          region: this.form.region\n        };\n        const res = await getRuleConfig(params);\n        if (res && res.retcode === 0) {\n          this.ruleConfig = res.data || {};\n        } else {\n          this.$message({ type: 'error', message: res.message || res.info });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    toggleExpandPO(item) {\n      item.isExpanded = !item.isExpanded;\n    },\n    onShowActionDialog() {\n      this.actionLogVisible = true;\n    },\n    onCloseActionLog() {\n      this.actionLogVisible = false;\n    },\n    onExportPDF() {\n      exportSinglePayReqPDF({ request_id: this.form.request_id })\n        .then((resp) => {\n          if (resp.type === 'application/json') {\n            const reader = new FileReader();\n            reader.onloadend = () => {\n              const result = JSON.parse(reader.result);\n              if (result.retcode !== 0) {\n                this.$message({ type: 'error', message: result.info });\n              }\n            };\n            reader.readAsText(resp);\n          } else {\n            downloadBlobFile(\n              resp,\n              `${this.form.request_id}_${moment().format('YYYYMMDDHHmmss')}.pdf`\n            );\n          }\n        })\n        .catch((e) => {\n          this.$message({ type: 'error', message: e });\n        });\n    },\n    onEdit() {\n      this.$router.push(\n        `/admin/finance/paymentRequest/edit/${this.form.request_id}`\n      );\n    },\n    onConfirmDelete(remark) {\n      try {\n        this.loading = true;\n        this.form.remark = remark;\n        const params = {\n          request_id: this.$route.params.request_id,\n          remark: this.form.remark\n        };\n        deletePaymentRequest(params).then((resp) => {\n          if (resp.retcode !== 0) {\n            this.$message({ type: 'error', message: resp.info });\n          } else {\n            this.$message({ type: 'success', message: this.$t('commonSuccess') });\n            this.getDetail();\n            this.deleteDialog = false;\n          }\n        });\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loading = false;\n      }\n    },\n    onDelete() {\n      this.deleteDialog = true;\n    },\n    onInvoiceMisMatch() {\n      this.loading = true;\n      this.$prompt(this.$t('commonRemark'), this.$t('invoiceInvoiceMisMatch'), {\n        confirmButtonText: this.$t('commonConfirm'),\n        cancelButtonText: this.$t('commonCancel'),\n        cancelButtonClass: 'list-btn white-grey',\n        confirmButtonClass: 'list-btn',\n        inputValue: this.form.remark,\n        customClass: 'reject-dialog pms-ele-ui',\n        inputValidator: (value) =>\n          value && value.replace(/(^\\s*)|(\\s*$)/g, '').length > 0\n            ? true\n            : 'Remark is required.'\n      })\n        .then(({ value }) => {\n          const params = {\n            request_id: this.$route.params.request_id,\n            action: 1,\n            remark: value\n          };\n          return approveOrRejectRequest(params).then((resp) => {\n            if (resp.retcode !== 0) {\n              this.$message.error(resp.info || resp.message);\n            } else {\n              this.$message.success(this.$t('commonSuccess'));\n              this.getDetail();\n            }\n          });\n        })\n        .catch(() => {})\n        .finally(() => {\n          this.loading = false;\n        });\n    },\n    onCloseConfirmNotice() {\n      this.confirmNoticeDialog = false;\n    },\n    onConfirmNotice() {\n      if (this.form.request_type === 2) {\n        this.onConfirm();\n        return;\n      }\n      this.confirmNoticeDialog = true;\n    },\n    onConfirm() {\n      this.loading = true;\n      this.$prompt(\n        this.$t('invoiceAreUsureToApproval'),\n        this.$t('commonConfirm'),\n        {\n          confirmButtonText: this.$t('commonConfirm'),\n          cancelButtonText: this.$t('commonCancel'),\n          cancelButtonClass: 'list-btn white-grey',\n          confirmButtonClass: 'list-btn',\n          inputPlaceholder: this.$t('commonRemark'),\n          inputValue: this.form.remark,\n          customClass: 'pms-ele-ui'\n        }\n      )\n        .then(({ value }) => {\n          const params = {\n            action: 0,\n            request_id: this.$route.params.request_id,\n            expected_payment_date: this.form.expected_payment_date || '',\n            scheduled_payment_date: this.form.scheduled_payment_date || '',\n            po_list: this.poForm.poList.map((item) => {\n              return {\n                order_id: item.order_id,\n                inbound_ids: item.inbound_ids,\n                sku_list: item.sku_list.map((sku) => ({\n                  sku_id: sku.sku_id,\n                  is_okay_to_pay: sku.is_okay_to_pay ? 1 : 0,\n                  remark: sku.remark\n                }))\n              };\n            }),\n            remark: value\n          };\n          return approveOrRejectRequest(params).then((resp) => {\n            if (resp.retcode !== 0) {\n              this.$message.error(resp.info || resp.message);\n            } else {\n              this.$message.success(this.$t('commonSuccess'));\n              this.getDetail();\n            }\n          });\n        })\n        .catch(() => {})\n        .finally(() => {\n          this.loading = false;\n          this.onCloseConfirmNotice();\n        });\n    },\n    goBack() {\n      this.$router.go(-1);\n    },\n    async getPaymentDateConfig() {\n      try {\n        // 判断用户有无权限修改，从审批流的开关上控制，打开开关，代表可以编辑，否则不可编辑\n        const params = {\n          request_id: this.$route.params.request_id\n        };\n        const res = await getPaymentDateConfig(params);\n        if (res && res.retcode === 0) {\n          this.hasExpectedPaymentDate = !!res.data.expected_payment_date;\n          this.hasScheduledPaymentDate = !!res.data.sche_payment_date;\n        } else {\n          this.$message({ type: 'error', message: res.info || res.message });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    async getPendingPermission() {\n      try {\n        const params = {\n          request_id: this.$route.params.request_id\n        };\n        const res = await getPendingPermission(params);\n        if (res && res.retcode === 0) {\n          this.canApprove = res.data.has_permission || false;\n          this.isFirstApproveRole = res.data.is_first_approval_role || false;\n          return Promise.resolve();\n        } else {\n          this.$message({ type: 'error', message: res.message || res.info });\n          return Promise.reject();\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n        return Promise.reject();\n      }\n    },\n    async getDetail() {\n      const params = {\n        request_id: this.$route.params.request_id\n      };\n      try {\n        const res = await getPaymentRequestDetail(params);\n        if (res && res.retcode === 0) {\n          const basicInfo = res.data.basic_info || {};\n          const expected_payment_date = basicInfo.expected_payment_date ? basicInfo.expected_payment_date.replace(/\\d+:\\d+:\\d+/, '00:00:00') : '';\n          const scheduled_payment_date = basicInfo.scheduled_payment_date ? basicInfo.scheduled_payment_date.replace(/\\d+:\\d+:\\d+/, '00:00:00') : '';\n          this.form = {\n            remark: '',\n            ...basicInfo,\n            invoice_id: basicInfo.invoice_id_ebs || basicInfo.invoice_id,\n            cache_invoice_id: basicInfo.invoice_id_ebs || basicInfo.invoice_id,\n            cache_pro_forma_invoice_no: basicInfo.pro_forma_invoice_no_ebs || basicInfo.pro_forma_invoice_no,\n            pro_forma_invoice_no: basicInfo.pro_forma_invoice_no_ebs || basicInfo.pro_forma_invoice_no,\n            credit_amount: basicInfo.credit_amount || '',\n            debit_amount: basicInfo.debit_amount || '',\n            expected_payment_date: expected_payment_date,\n            scheduled_payment_date: scheduled_payment_date,\n            request_type: basicInfo.request_type || 1\n\n          };\n          const asnMap = res.data.asn_map || {};\n          this.poForm.poList = (res.data.po_list || []).map((item, index) => {\n            return {\n              id: index,\n              isExpanded: true,\n              cache_order_id: item.order_id,\n              order_id: item.order_id,\n              inbound_ids: item.inbound_ids,\n              asn_inbound_ids: item.inbound_ids.map(inbound_id => ({ inbound_id, asn_id: asnMap[inbound_id] || ''})),\n              sku_list: item.sku_list.map((sku) =>\n                Object.assign(sku, {\n                  is_okay_to_pay: !!sku.is_okay_to_pay\n                })\n              )\n            };\n          });\n          this.attachmentList = res.data.attachment_list || [];\n          this.$nextTick(() => {\n            this.$refs['attachment'] &&\n              this.$refs['attachment'][0] &&\n              this.$refs['attachment'][0].initAttachmentList(\n                this.attachmentList\n              );\n          });\n          // 获取formschma显示隐藏的配置，从payment request config中来\n          this.getRuleConfig();\n          if (!this.isDraft) {\n            this.getPendingPermission();\n            this.getPaymentDateConfig();\n          }\n        } else {\n          this.$message({ type: 'error', message: res.message || res.info });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    }\n  }\n};\n</script>\n<style lang=\"scss\">\n@import \"~@/styles/common.scss\";\n.reject-dialog {\n  .el-message-box__content {\n    display: flex;\n    align-items: baseline;\n  }\n  .el-message-box__message {\n    flex: 0 0 80px;\n    width: 80px;\n  }\n  .el-message-box__input {\n    flex: 1;\n  }\n}\n</style>\n<style lang=\"scss\" scoped>\n.payment-request-detail-wrapper {\n  /deep/ .el-form-item {\n    margin-bottom: 24px;\n    .el-form-item__label, .el-form-item__content {\n      line-height: 16px;\n    }\n  }\n  &.layout-padding {\n    padding: 0 20px;\n  }\n  .form-component-width {\n    width: 240px;\n  }\n  .invoice-number-label{\n    display: inline-block;\n    word-break: break-word;\n    line-height: 1.2em;\n  }\n  .invoice-id-box {\n    position: relative;\n    .edit-remark-box {\n      position: absolute;\n      top: 28px;\n      left: 0px;\n      width: 400px;\n      border: 1px solid #ccc;\n      background: #fff;\n      box-shadow: 1px 1px 3px #ddd;\n      padding: 24px 24px 16px;\n      z-index: 1;\n      .title {\n        margin-bottom: 16px;\n      }\n      .size-limit {\n        float: right;\n        font-size: 12px;\n        color: $black_light_one;\n      }\n      .btn-wrapper {\n        margin-top: 16px;\n        float: right;\n      }\n    }\n  }\n  .edit-icon {\n    font-size: 14px;\n    color: $blue;\n    cursor: pointer;\n  }\n  .detail-header-wrapper {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border-bottom: 1px solid $border_color;\n    padding-bottom: 8px;\n    .left-info {\n      flex: 3;\n      font-size: 24px;\n      color: $black;\n      vertical-align: middle;\n      .go-back-icon {\n        color: #666666;\n        cursor: pointer;\n      }\n      .header-text {\n        margin-right: 8px;\n      }\n      .warning-icon {\n        font-size: 16px;\n        color: $red;\n        vertical-align: top;\n        margin-top: 4px;\n      }\n    }\n    .right-top {\n      flex: 3;\n      text-align: right;\n    }\n  }\n  .main-wrapper {\n    padding-top: 32px;\n  }\n  .module-block {\n    margin-bottom: 40px;\n    .section-title {\n      font-size: 18px;\n      font-weight: bold;\n      line-height: 18px;\n      margin-bottom: 24px;\n      .sku-total-tip {\n        margin-left: 8px;\n      }\n      .sku-info-total {\n        font-size: 14px;\n        font-weight: bold;\n        color: $black_light_one;\n      }\n    }\n    .total-block {\n      padding: 8px 20px;\n      background: rgba(242, 242, 242, 0.541);\n      margin-bottom: 24px;\n      .total-block-row {\n        font-weight: bold;\n        font-size: 12px;\n        &:not(:last-child) {\n          margin-bottom: 8px;\n        }\n        .total-label {\n          display: inline-block;\n          width: 200px;\n          white-space: pre-wrap;\n          word-break: break-word;\n          margin-left: 16px;\n          vertical-align: top;\n        }\n      }\n    }\n    .po-section {\n      .po-section-item {\n        margin-bottom: 24px;\n        padding-bottom: 16px;\n        border-bottom: 1px dashed $grey;\n      }\n      .po-section-header{\n        width: 800px;\n        margin-top: 16px;\n        .click-text{\n          cursor: pointer;\n          text-decoration: underline;\n          color: $blue;\n          &:not(:last-child) {\n            &:after {\n              width: 16px;\n              height: auto;\n              font-size: 14px;\n              content: ',';\n              display: inline-block;\n            }\n          }\n        }\n      }\n      .expand-icon{\n        color: $blue;\n        cursor: pointer;\n        transition: all 0.5s;\n        &.is-expanded {\n          transform: rotate(180deg);\n        }\n      }\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/paymentRequest/list.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":21,"column":66,"nodeType":"VIdentifier","messageId":"deprecated","endLine":21,"endColumn":72}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"payment-request-list-wrapper pms-ele-ui pms-new-ui\">\n    <section class=\"list-header-wrapper\">\n      <div class=\"list-create-btn\" v-if=\"canOperate && activeTab !== 'pendingRequest'\">\n        <el-button class=\"list-btn\" @click=\"onCreateRequest\">\n          <i class=\"el-icon-plus\"></i>\n          <span>{{ $t('paymentRequest.createBtnText') }}</span>\n        </el-button>\n      </div>\n\n      <el-tabs tab-position=\"bottom\" v-model=\"activeTab\" @tab-click=\"onTabClick\">\n        <el-tab-pane\n          v-for=\"item in headerTabs\"\n          :key=\"item.value\"\n          :label=\"$t(item.label)\"\n          :name=\"item.value\"\n        ></el-tab-pane>\n      </el-tabs>\n    </section>\n    <section class=\"main-wrapper\">\n      <el-form :model=\"searchForm\" class=\"new-list-form\" @submit.native.prevent=\"onResetPageNoSearch\">\n        <el-button v-show=\"false\" native-type=\"submit\"></el-button>\n        <el-row :gutter=\"16\" v-show=\"!isExpandSearchFrom\">\n          <el-col v-for=\"item in searchSchema\" :key=\"item.field\" :span=\"item.width\" :offset=\"item.offset || 0\">\n            <el-form-item :class=\"item.class || ''\" :label=\"item.label\">\n              <el-select\n                class=\"width_100\"\n                v-if=\"item.type === 'select'\"\n                :multiple=\"item.multiple\"\n                v-model=\"searchForm[item.field]\"\n                :disabled=\"item.disabled || false\"\n                :collapse-tags=\"true\"\n                @change=\"(...argu) => onChangeSelect(item.field, ...argu)\"\n              >\n                <el-option\n                  v-for=\"option in item.options || []\"\n                  :key=\"option.value\"\n                  :label=\"option.label\"\n                  :value=\"option.value\"\n                ></el-option>\n              </el-select>\n              <el-cascader\n                class=\"width_100\"\n                v-if=\"item.type === 'cascader'\"\n                v-model=\"searchForm[item.field]\"\n                :options=\"item.options\"\n                @change=\"onResetPageNoSearch\"\n              ></el-cascader>\n              <el-input\n                v-if=\"item.type === 'input'\"\n                v-model=\"searchForm[item.field]\"\n                @change=\"onResetPageNoSearch\"\n              ></el-input>\n              <el-autocomplete\n                class=\"width_100\"\n                v-else-if=\"item.type === 'inboundID'\"\n                v-model=\"searchForm[item.field]\"\n                :fetch-suggestions=\"getInboundID\"\n                clearable\n                placeholder=\"please input inbound id\"\n                @select=\"handleInboundIDSelect\"\n              ></el-autocomplete>\n              <el-autocomplete\n                v-else-if=\"item.type === 'supplierID'\"\n                class=\"width_100\"\n                popper-class=\"pms-ele-ui supplierIDCompleteWrapperWidth\"\n                v-model=\"searchForm[item.field]\"\n                :fetch-suggestions=\"getVendorSiteID\"\n                clearable\n                placeholder=\"Please input Vendor Site ID/Name\"\n                @select=\"handleVendorSiteIDSelect\"\n              ></el-autocomplete>\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col class=\"pms-text-right\">\n            <el-button class=\"white-grey new-list-form-arrow\" @click=\"toggleSearchForm\">\n              <i class=\"el-icon-arrow-up arrow-icon\" :class=\"{ 'is-expanded': isExpandSearchFrom }\"></i>\n            </el-button>\n            <el-button  @click=\"onResetPageNoSearch\">{{ $t('commonSearch') }}</el-button>\n            <el-button class=\"white-blue\" @click=\"onReset\">{{ $t('commonClear') }}</el-button>\n          </el-col>\n        </el-row>\n      </el-form>\n      <el-row type=\"flex\" class=\"block-grey\">\n        <el-col :span=\"18\">\n          <template v-if=\"activeTab === 'myPA'\">\n            <MassOperationGroup :selectedList=\"checkedRows.map(item => item.request_id)\" @refresh=\"onResetPageNoSearch\"></MassOperationGroup>\n          </template>\n        </el-col>\n        <el-col class=\"pms-text-right\" :span=\"6\">\n          <el-button\n            class=\"white-blue\"\n            v-if=\"activeTab === 'pendingRequest'\"\n            @click=\"onExportPendingListExcel\"\n            >{{ $t('commonExport') }}</el-button\n          >\n          <template v-else>\n            <el-dropdown\n              class=\"exportGroup-btn white-blue\"\n              split-button\n              type=\"primary\"\n              @command=\"onDropDownCommand\"\n            >\n              <span>{{ $t('commonExport') }}</span>\n              <el-dropdown-menu slot=\"dropdown\">\n                <el-dropdown-item :command=\"btn\" v-for=\"btn in dropDownList\" :key=\"btn.text\">\n                  <span>{{ $t(btn.text) }}</span>\n                </el-dropdown-item>\n              </el-dropdown-menu>\n            </el-dropdown>\n            <el-button\n              class=\"white-blue\"\n              @click=\"showExportHistory\"\n              >{{ $t('commonExportHistory') }}</el-button\n            >\n          </template>\n\n        </el-col>\n      </el-row>\n      <el-checkbox-group v-model=\"checkedRows\">\n        <commonTable\n          v-if=\"activeTab !== 'pendingRequest'\"\n          :dataList=\"tableList\"\n          v-loading=\"loading\"\n          :fieldList=\"totalFieldList\"\n          :defaultFieldList=\"fieldCheckList\"\n          @selectionChange=\"selectionChange\"\n          @displayOptionsChange=\"onDisplayOptionsChange\"\n          @setFieldListByUser=\"setFieldListByUser\"\n          :config=\"{\n            showCheckBox: false,\n            align: 'left',\n            border: false,\n            hasDisplayOptions: true,\n            isFieldListFromUser: true,\n            ModuleKey: 'PAYMENT_REQUEST_LIST',\n            displayOptionCountMin: 0\n          }\"\n          :tableSchema=\"tableSchema\"\n        >\n          <template slot=\"checkColumn\">\n            <el-table-column column-key=\"action\" width=\"80px\" align=\"center\">\n              <template slot-scope=\"scope\" slot=\"header\">\n                <section class=\"select-all-table-column-new\">\n                <span class=\"select-page-dropdown-text\" @click=\"resetCheckedType\">{{formatCheckedType}}</span>\n                <el-dropdown\n                  placement=\"bottom\"\n                  trigger=\"click\"\n                  class=\"select-page-dropdown-new\"\n                  @command=\"changeSelectPageType\"\n                >\n                  <i class=\"icon-arrow-down el-icon-arrow-down\"></i>\n                  <el-dropdown-menu class=\"options-field-menu\" slot=\"dropdown\">\n                    <el-dropdown-item command=\"current\">{{$t('commonCurrentPage')}}</el-dropdown-item>\n                    <el-dropdown-item command=\"all\">{{$t('commonAllPage')}}</el-dropdown-item>\n                  </el-dropdown-menu>\n                </el-dropdown>\n              </section>\n              </template>\n              <template slot-scope=\"scope\">\n                <el-checkbox :disabled=\"checkedType === 'all'\" :label=\"scope.row\">{{ '' }}</el-checkbox>\n              </template>\n            </el-table-column>\n          </template>\n        </commonTable>\n        <pendingRequestTable\n          :data=\"tableList\"\n          v-loading=\"loading\"\n          @cacheSearchCondition=\"onCacheSearchCondition\"\n          v-else\n        >\n          <template slot=\"checkColumn\">\n            <el-table-column column-key=\"action\" width=\"60px\" align=\"center\" fixed>\n              <template slot-scope=\"scope\" slot=\"header\">\n                <el-dropdown\n                  @click=\"resetCheckedType\"\n                  placement=\"bottom\"\n                  split-button\n                  trigger=\"click\"\n                  class=\"select-page-dropdown\"\n                  @command=\"changeSelectPageType\"\n                >\n                  <span :class=\"`el-checkbox__input ${checkedType ? 'is-checked' : ''}`\">\n                    <span :class=\"`el-checkbox__inner ${checkedType ? 'is-checked' : ''}`\"></span>\n                  </span>\n                  <el-dropdown-menu class=\"options-field-menu\" slot=\"dropdown\">\n                    <el-dropdown-item command=\"current\">Current Page</el-dropdown-item>\n                    <el-dropdown-item command=\"all\">All Pages</el-dropdown-item>\n                  </el-dropdown-menu>\n                </el-dropdown>\n              </template>\n              <template slot-scope=\"scope\">\n                <el-checkbox :disabled=\"checkedType === 'all'\" :label=\"scope.row\">{{ '' }}</el-checkbox>\n              </template>\n            </el-table-column>\n          </template>\n        </pendingRequestTable>\n      </el-checkbox-group>\n      <el-checkbox-group></el-checkbox-group>\n      <section class=\"pagination-center\">\n        <el-pagination\n          background\n          layout=\"sizes, prev, pager, next\"\n          :current-page=\"pager.page_no\"\n          :page-sizes=\"[10, 20, 50, 100]\"\n          :total.sync=\"total\"\n          :page-size=\"pager.count\"\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleChangePage\"\n        ></el-pagination>\n      </section>\n    </section>\n    <export-history-dialog\n      :interval=\"15000\"\n      :taskType=\"25\"\n      :visible=\"isShowExportHistory\"\n      @close=\"closeExportHistory\"\n    ></export-history-dialog>\n    <CreateDialog :visible=\"createBoxVisible\" @close=\"createBoxVisible = false\"></CreateDialog>\n  </div>\n</template>\n\n<script>\nimport {\n  getInboundID,\n  exportPayReqListPDF,\n  exportPayReqListExcel,\n  exportPendingRequestExcel,\n  getAllPaymentRequestList,\n  getMyPendingApprovalList,\n  getPendingPaymentRequestList,\n  getRuleConfig\n} from '@/api/paymentRequest';\nimport commonTable from '@/components/ApproveList/list';\nimport pendingRequestTable from './component/pendingRequestTable';\nimport { PaymentRequestOutstandingPeriodList, Permission } from '@/utils/constant';\nimport { getSupplierList } from '@/api/supplier';\nimport moment from 'moment';\nimport { formatParams } from '@/utils/formatParams';\nimport { downloadBlobFile } from '@/utils/downloadFile';\nimport { hasPermission } from '@/utils/permission';\nimport ExportHistoryDialog from '@/components/ApproveList/exportHistoryDialog';\nimport CreateDialog from './component/createDialog';\nimport MassOperationGroup from './component/massOperationGroup';\n\nimport {\n  PaymentRequestStatusList,\n  RequestTypeList,\n  getRequestTypeLabel,\n  formatTimeByType,\n  PaymentRequestListFieldList,\n  defaultFieldList\n} from './constant';\n\nconst moduleName = 'ownershipModule';\nexport default {\n  components: { commonTable, ExportHistoryDialog, pendingRequestTable, CreateDialog, MassOperationGroup },\n  data() {\n    const statusClass = {};\n    PaymentRequestStatusList.forEach(item => {\n      statusClass[item.value] = item.color;\n    });\n    const defaultCountry =\n      this.$store.getters.countrySelectList.length > 1\n        ? ''\n        : (this.$store.getters.countrySelectList[0] || { value: '' }).value;\n    return {\n      headerTabs: [\n        { value: 'all', label: 'invoiceAllPaymentRequests' },\n        {\n          value: 'myPA',\n          label: 'commonMyPendingApprovals'\n        },\n        {\n          value: 'pendingRequest',\n          label: 'invoicePendingPaymentRequest'\n        }\n      ],\n      statusClass,\n      activeTab: 'all',\n      canOperate: false,\n      isShowExportHistory: false,\n      createBoxVisible: false,\n      lastSearchForm: {},\n      checkedType: '',\n      checkedRows: [],\n      defaultCountry,\n      cancelLoading: false,\n      closeLoading: false,\n      deleteLoading: false,\n      searchForm: {\n        request_id: '',\n        request_type: [],\n        order_id: '',\n        inbound_id: '',\n        requester: '',\n        supplier_id: '',\n        request_source: '',\n        request_status: [''],\n        invoice_pic: '',\n        outstanding_period: '',\n        region: defaultCountry,\n        scheduled_payment_date_filter: []\n      },\n      loading: false,\n      pager: {\n        page_no: 1,\n        count: 10\n      },\n      total: 0,\n      tableList: [],\n      isExpandSearchFrom: false,\n      fieldCheckList: [],\n      paymentStatusSync: true,\n      dropDownList: [\n        { text: 'commonExportExcel', onClick: 'onExportExcel' },\n        { text: 'commonExportPDF', onClick: 'onExportPDF' }\n      ]\n    };\n  },\n  computed: {\n    formatCheckedType() {\n      return this.checkedType === 'all' ? this.$t('commonAllPage') : this.$t('commonCurrentPage'); // 一定要用all，不能用current判断，因为可能有三种值，'',current, all, 只有all才会传搜索参数\n    },\n    totalFieldList() {\n      return PaymentRequestListFieldList.map(item => ({ field: item.field, label: this.$t(item.label) }));\n    },\n    searchSchema() {\n      const paymentStatusList = [{ label: 'All', value: '' }].concat(\n        this.paymentStatusSync\n          ? PaymentRequestStatusList\n          : PaymentRequestStatusList.filter(item => ![6, 7, 8].includes(item.value))\n      );\n      return [\n        {\n          type: 'select',\n          width: 6,\n          field: 'request_type',\n          label: this.$t('invoiceRequestType'),\n          multiple: true,\n          options: RequestTypeList,\n          hidden: this.activeTab === 'pendingRequest'\n        },\n        {\n          type: 'input',\n          width: 6,\n          field: 'request_id',\n          label: this.$t('paymentRequest.paymentID'),\n          hidden: this.activeTab === 'pendingRequest'\n        },\n        {\n          type: 'input',\n          width: 6,\n          field: 'order_id',\n          label: this.$t('purchaseOrder.POID')\n        },\n        {\n          type: 'inboundID',\n          width: 6,\n          field: 'inbound_id',\n          label: this.$t('purchaseOrder.inboundID')\n        },\n        {\n          type: 'select',\n          width: 6,\n          field: 'request_source',\n          label: this.$t('commonSource'),\n          options: [\n            { value: '', label: 'All' },\n            { value: 'SRM', label: 'From Supplier' },\n            { value: 'PMS', label: 'From PMS' },\n            { value: 'ME', label: 'From Me' }\n          ],\n          hidden: this.activeTab === 'pendingRequest'\n        },\n        {\n          type: 'supplierID',\n          width: 12,\n          field: 'supplier_id',\n          label: this.$t('paymentRequest.vendorSiteIDOrName')\n        },\n        {\n          type: 'select',\n          width: 6,\n          field: 'outstanding_period',\n          label: this.$t('invoiceOutstandingPeriod'),\n          options: [{ label: 'All', value: '' }].concat(PaymentRequestOutstandingPeriodList),\n          hidden: this.activeTab !== 'pendingRequest'\n        },\n        {\n          type: 'select',\n          width: 6,\n          field: 'region',\n          label: this.$t('commonRegion'),\n          options:\n            this.countryList.length > 1 ? [{ label: 'All', value: '' }].concat(this.countryList) : this.countryList\n        },\n        {\n          type: 'input',\n          width: 6,\n          field: 'invoice_pic',\n          label: this.$t('invoiceInvoicePIC'),\n          hidden: this.activeTab !== 'pendingRequest'\n        },\n        {\n          type: 'cascader',\n          width: 6,\n          field: 'request_status',\n          label: this.$t('paymentRequest.paymentStatus'),\n          options: paymentStatusList.map(item => {\n            if (item.value === 7) {\n              this.$set(item, 'children', [\n                { value: 7, label: 'All' },\n                { value: 101, label: 'Payment Issue' }\n              ]);\n            }\n            return {\n              ...item,\n              disabled:\n                Array.isArray(this.searchForm.scheduled_payment_date_filter) &&\n                this.searchForm.scheduled_payment_date_filter.length &&\n                ![4, 6].includes(item.value) // 当scheduled_payment_date_filter不为空时，Payment Status filter中只有Invoice Confirmed/ Payment Transferred Partially两个状态置可选，其他状态置灰不可选\n            };\n          }),\n          hidden: this.activeTab !== 'all'\n        },\n        {\n          type: 'input',\n          width: 6,\n          field: 'requester',\n          label: this.$t('purchaseRequest.requester'),\n          hidden: this.activeTab === 'pendingRequest'\n        },\n        {\n          type: 'select',\n          width: 6,\n          field: 'scheduled_payment_date_filter',\n          label: this.$t('invoiceScheduledPaymentDate'),\n          multiple: true,\n          options: [\n            { label: '< 7 Days', value: 1 },\n            { label: '7 - 14 Days', value: 2 },\n            { label: '14 - 30 Days', value: 3 },\n            { label: ' > 30 Days', value: 4 }\n          ],\n          hidden: !(\n            this.activeTab === 'all' &&\n            ((this.searchForm.request_status || []).includes(4) || (this.searchForm.request_status || []).includes(6))\n          ) // 当Payment Status filter选择非Invoice Confirmed/ Payment Transferred,该filter隐藏不可选\n        }\n      ].filter(item => !item.hidden);\n    },\n    tableSchema() {\n      return [\n        {\n          label: this.$t('invoiceRequestType'),\n          field: 'request_type',\n          render: (schema, row) => {\n            return getRequestTypeLabel(row.request_type);\n          },\n          columnFixed: true\n        },\n        {\n          label: this.$t('paymentRequest.paymentID'),\n          field: 'request_id',\n          minWidth: '190px',\n          render: (schema, row, index, h) => {\n            if (row.payment_issue === 0) {\n              return ['span', null, row.request_id];\n            }\n            return [\n              'div',\n              null,\n              [\n                h(\n                  'el-popover',\n                  {\n                    class: 'payment-request-list-wrapper',\n                    props: {\n                      placement: 'top',\n                      width: '220',\n                      trigger: 'hover',\n                      popperClass: 'word-break',\n                      content: this.$t('invoicePaymentIssueWarnningTips')\n                    }\n                  },\n                  [h('i', { class: 'el-icon-warning warning-icon', slot: 'reference' }, '')]\n                ),\n                h('span', null, row.request_id)\n              ]\n            ];\n          }\n        },\n        {\n          label: this.$t('purchaseOrder.POID'),\n          field: 'order_ids',\n          minWidth: '190px',\n          render: (schema, row, index, h) => {\n            if ((row.order_ids || []).length <= 3) {\n              return [\n                'div',\n                null,\n                (row.order_ids || []).map(item => {\n                  return h('p', null, item);\n                })\n              ];\n            } else {\n              return [\n                'div',\n                null,\n                [\n                  ...(row.order_ids || []).slice(0, 3).map(item => {\n                    return h('p', null, item);\n                  }),\n                  h(\n                    'el-popover',\n                    {\n                      class: 'payment-request-list-wrapper list-popover',\n                      props: {\n                        placement: 'top',\n                        width: '200',\n                        trigger: 'hover',\n                        popperClass: 'payment-request-list-wrapper list-popover'\n                      }\n                    },\n                    [\n                      h('p', { class: 'list-popover-more', slot: 'reference' }, this.$t('commonMore')),\n                      h('p', { class: 'mb8' }, [\n                        h(\n                          'span',\n                          { class: 'list-popover-label' },\n                          `${this.$t('commonInboundID')}(${(row.order_ids || []).length}):`\n                        ),\n                        h(\n                          'a',\n                          {\n                            class: 'list-popover-copy',\n                            on: {\n                              click: () => this.onCopyInboundID(row.order_ids)\n                            }\n                          },\n                          [\n                            h('i', { class: 'el-icon-document-copy copy-icon' }, ''),\n                            h('span', null, this.$t('commonCopy'))\n                          ]\n                        )\n                      ]),\n                      ...(row.order_ids || []).slice(3).map(item => {\n                        return h('p', null, item);\n                      })\n                    ]\n                  )\n                ]\n              ];\n            }\n          }\n        },\n        {\n          label: this.$t('purchaseOrder.inboundID'),\n          field: 'inbound_ids',\n          minWidth: '180px',\n          render: (schema, row, index, h) => {\n            if ((row.inbound_ids || []).length <= 0) {\n              return '/';\n            } else if ((row.inbound_ids || []).length <= 3) {\n              return [\n                'div',\n                null,\n                (row.inbound_ids || []).map(item => {\n                  return h('p', null, item);\n                })\n              ];\n            } else {\n              return [\n                'div',\n                null,\n                [\n                  ...(row.inbound_ids || []).slice(0, 3).map(item => {\n                    return h('p', null, item);\n                  }),\n                  h(\n                    'el-popover',\n                    {\n                      class: 'payment-request-list-wrapper list-popover',\n                      props: {\n                        placement: 'top',\n                        width: '200',\n                        trigger: 'hover',\n                        popperClass: 'payment-request-list-wrapper list-popover'\n                      }\n                    },\n                    [\n                      h('p', { class: 'list-popover-more', slot: 'reference' }, this.$t('commonMore')),\n                      h('p', { class: 'mb8' }, [\n                        h(\n                          'span',\n                          { class: 'list-popover-label' },\n                          `${this.$t('commonInboundID')}(${(row.inbound_ids || []).length}):`\n                        ),\n                        h(\n                          'a',\n                          {\n                            class: 'list-popover-copy',\n                            on: {\n                              click: () => this.onCopyInboundID(row.inbound_ids)\n                            }\n                          },\n                          [\n                            h('i', { class: 'el-icon-document-copy copy-icon' }, ''),\n                            h('span', null, this.$t('commonCopy'))\n                          ]\n                        )\n                      ]),\n                      ...(row.inbound_ids || []).slice(3).map(item => {\n                        return h('p', null, item);\n                      })\n                    ]\n                  )\n                ]\n              ];\n            }\n          }\n        },\n        {\n          label: this.$t('paymentRequest.paymentStatus'),\n          field: 'request_status',\n          minWidth: '160px',\n          render: (schema, row, index, h) => [\n            'span',\n            {\n              class: `pms-ele-ui word-break status-span ${this.statusClass[row.request_status]}`\n            },\n            this.PaymentRequestStatus(row.request_status, row)\n          ]\n        },\n        {\n          label: this.$t('commonRegion'),\n          field: 'region',\n          minWidth: '80px'\n        },\n        {\n          label: this.$t('commonVendorSiteID'),\n          field: 'supplier_id'\n        },\n        {\n          label: this.$t('commonSupplierName'),\n          minWidth: '200px',\n          field: 'supplier_name'\n        },\n        {\n          field: 'requester',\n          minWidth: '120px',\n          label: this.$t('commonRequester')\n        },\n        {\n          label: this.$t('invoiceExpectedPaymentDate'),\n          field: 'expected_payment_date',\n          minWidth: '100px'\n        },\n        {\n          label: this.$t('invoiceScheduledPaymentDate'),\n          field: 'scheduled_payment_date',\n          minWidth: '100px'\n        },\n        {\n          label: this.$t('commonCtime'),\n          field: 'ctime',\n          minWidth: '100px',\n          render: (schema, row) => `${formatTimeByType(row[schema.field] * 1000)}`\n        },\n        {\n          label: this.$t('commonMtime'),\n          field: 'mtime',\n          minWidth: '100px',\n          render: (schema, row) => `${formatTimeByType(row[schema.field] * 1000)}`\n        },\n        {\n          columnKey: 'action',\n          label: this.$t('commonAction'),\n          minWidth: '100px',\n          columnFixed: true,\n          fixed: 'right',\n          render: (schema, row, index, h) => {\n            return [\n              'div',\n              { class: 'user-category' },\n              [\n                {\n                  render: [\n                    'el-button',\n                    {\n                      class: 'list-btn white-blue',\n                      on: { click: () => this.onRouteToDetail(row) }\n                    },\n                    this.$t('commonDetail')\n                  ]\n                }\n              ].map(item => h(...item.render))\n            ];\n          }\n        }\n      ].filter(item => item.columnFixed || this.fieldCheckList.includes(item.field));\n    },\n    countryList() {\n      return this.$store.getters.countrySelectList;\n    }\n  },\n  methods: {\n    setFieldListByUser(fieldList) {\n      if (Array.isArray(fieldList)) {\n        this.fieldCheckList = fieldList.length ? fieldList : defaultFieldList;\n      }\n    },\n    onDisplayOptionsChange(list) {\n      this.fieldCheckList = list;\n    },\n    onDropDownCommand(command) {\n      if (this.checkedRows.length === 0) {\n        this.$message.error(this.$t('commonPleaseChooseAtLeastOneOption'));\n        return;\n      }\n      if (command.onClick && typeof this[command.onClick] === 'function') {\n        this[command.onClick]();\n      }\n    },\n    async onExportExcel() {\n      try {\n        const params = {};\n        if (this.checkedType === 'all') {\n          params.filter = this.formatSearchParams();\n          if (this.activeTab === 'myPA') {\n            params.is_my_pending = true;\n          }\n        } else {\n          params.request_ids = this.checkedRows.map(item => item.request_id) || [];\n        }\n        const res = await exportPayReqListExcel(params);\n        if (res && res.retcode === 0) {\n          this.$message({\n            type: 'success',\n            message: this.$t('commonExportHistorySuccessTips')\n          });\n        } else {\n          this.$message({\n            type: 'error',\n            message: res.info || res.message\n          });\n        }\n      } catch (e) {\n        this.$message({\n          type: 'error',\n          message: e\n        });\n      }\n    },\n    async onExportPDF() {\n      try {\n        const params = {};\n        if (this.checkedType === 'all') {\n          params.filter = formatParams(this.searchForm);\n          if (Array.isArray(params.filter.request_status)) {\n            if (params.filter.request_status.includes(101)) {\n              params.filter.request_status = 7;\n              params.filter.payment_issue = 1;\n            } else {\n              params.filter.request_status = params.filter.request_status[0];\n            }\n            if (!params.filter.request_status) {\n              delete params.filter.request_status;\n            }\n          }\n          if (this.activeTab === 'myPA') {\n            params.is_my_pending = true;\n          }\n          if (params.filter.request_source === 'ME') {\n            params.filter.request_source = 'PMS';\n            params.filter.requester = this.$store.getters.email;\n          }\n        } else {\n          params.request_ids = this.checkedRows.map(item => item.request_id) || [];\n        }\n        const res = await exportPayReqListPDF(params);\n        if (res && res.retcode === 0) {\n          this.$message({\n            type: 'success',\n            message: this.$t('commonExportHistorySuccessTips')\n          });\n        } else {\n          this.$message({\n            type: 'error',\n            message: res.info || res.message\n          });\n        }\n      } catch (e) {\n        this.$message({\n          type: 'error',\n          message: e\n        });\n      }\n    },\n\n    toggleSearchForm() {\n      this.isExpandSearchFrom = !this.isExpandSearchFrom;\n    },\n    onTabClick() {\n      this.onReset();\n    },\n    showExportHistory() {\n      this.isShowExportHistory = true;\n    },\n    closeExportHistory() {\n      this.isShowExportHistory = false;\n    },\n    selectionChange(selection) {\n      this.checkedRows = selection;\n    },\n    onCreateRequest() {\n      this.createBoxVisible = true;\n    },\n    resetCheckedType() {\n      this.checkedType = '';\n      this.checkedRows = [];\n    },\n    changeSelectPageType(type) {\n      this.checkedType = type;\n      this.checkedRows = this.tableList;\n    },\n    onCopyInboundID(list = []) {\n      const input = document.createElement('input');\n      document.body.appendChild(input);\n      input.setAttribute('value', (list || []).join(', '));\n      input.select();\n      if (document.execCommand('copy')) {\n        document.execCommand('copy');\n        this.$message.success('Copy Succcessfully!');\n      }\n      document.body.removeChild(input);\n    },\n    async getInboundID(query = '', cb) {\n      try {\n        const params = {\n          status: 4, // 4-done\n          order_id: this.searchForm.order_id,\n          inbound_id: query\n        };\n        const res = await getInboundID(formatParams(params));\n        if (res && res.retcode === 0) {\n          cb(res.data.inbound_list.map(item => ({ value: item })).slice(0, 20));\n        } else {\n          cb([]);\n          this.$message({ type: 'error', message: res.message || res.info });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    handleInboundIDSelect(item) {\n      this.searchForm.inbound_id = item.value;\n      this.onResetPageNoSearch();\n    },\n    async onExportPendingListExcel() {\n      if (this.checkedRows.length === 0) {\n        this.$message.error(this.$t('commonPleaseChooseAtLeastOneOption'));\n        return;\n      }\n      const params = {\n        supplier_ids: this.checkedRows.map(item => item.supplier_id)\n      };\n      exportPendingRequestExcel(params)\n        .then(resp => {\n          if (resp.type === 'application/json') {\n            const reader = new FileReader();\n            reader.onloadend = () => {\n              const result = JSON.parse(reader.result);\n              if (result.retcode !== 0) {\n                this.$message({ type: 'error', message: result.info });\n              }\n            };\n            reader.readAsText(resp);\n          } else {\n            downloadBlobFile(resp, `PendingPaymentRequest_${moment().format('YYYYMMDDHHmmss')}.xlsx`);\n          }\n        })\n        .catch(e => {\n          this.$message({ type: 'error', message: e });\n        });\n    },\n    onChangeSelect(field, value) {\n      if (field === 'region') {\n        this.searchForm.vendor_site_id = '';\n        if (Array.isArray(this.searchForm.request_status)) {\n          if (this.searchForm.request_status.some(status => [6, 7, 8].includes(status))) {\n            this.searchForm.request_status = [''];\n            this.searchForm.scheduled_payment_date_filter = []; // 兼容request_status=6的情况\n          }\n        }\n        if (value) {\n          this.getPaymentStatusSync(value);\n        } else {\n          this.paymentStatusSync = true;\n        }\n      }\n      this.onResetPageNoSearch();\n    },\n    async getPaymentStatusSync(region) {\n      try {\n        const params = {\n          region: region\n        };\n        const res = await getRuleConfig(params);\n        if (res && res.retcode === 0) {\n          this.paymentStatusSync = !!res.data.payment_status_sync_required;\n        } else {\n          this.$message({ type: 'error', message: res.info || res.message });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    async getVendorSiteID(query = '', cb) {\n      try {\n        const params = {\n          pageno: 1,\n          count: 20,\n          key: `${query}`.trim(),\n          approval_country: this.searchForm.region || this.countryList.map(item => item.value).join('_')\n        };\n        const resp = await getSupplierList(params);\n        if (resp.status !== 0) {\n          this.$message.error(resp.info);\n          cb([]);\n        } else {\n          cb(\n            resp.data.list.map(supplier => {\n              return {\n                value: `${supplier['supplier_id']} ${supplier['name']}`,\n                supplierID: supplier['supplier_id'],\n                supplierName: supplier['name']\n              };\n            })\n          );\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    handleVendorSiteIDSelect(item) {\n      this.searchForm.supplier_id = item.supplierID;\n      this.onResetPageNoSearch();\n    },\n    onReset() {\n      Object.keys(this.searchForm).forEach(key => {\n        if (key === 'region') {\n          this.searchForm[key] = this.defaultCountry;\n        } else {\n          this.searchForm[key] = '';\n        }\n      });\n      this.onResetPageNoSearch();\n    },\n    PaymentRequestStatus(status, row) {\n      const statusText = (PaymentRequestStatusList.find(item => item.value === status) || {}).label || '';\n      if (status === 2) {\n        return `${statusText}: ${row.next_approval_role_name}`;\n      }\n      return statusText;\n    },\n    handleChangePage(page_no) {\n      this.pager.page_no = page_no;\n      this.onSearch();\n    },\n    handleSizeChange(count) {\n      this.pager.count = count;\n      this.onResetPageNoSearch();\n    },\n    onResetPageNoSearch() {\n      this.handleChangePage(1);\n    },\n    formatSearchParams() {\n      const params = {\n        ...formatParams(this.searchForm)\n      };\n      // 对params.request_status = []类型的单独处理\n      if (Array.isArray(params.request_status)) {\n        if (params.request_status.includes(101)) {\n          params.request_status = 7;\n          params.payment_issue = 1;\n        } else {\n          params.request_status = params.request_status[0];\n          if (!params.request_status) {\n            delete params.request_status;\n          }\n        }\n      }\n      if (params.request_source === 'ME') {\n        params.request_source = 'PMS';\n        params.requester = this.$store.getters.email;\n      }\n      Object.keys(params).forEach(key => {\n        if (Array.isArray(params[key]) && params[key].length <= 0) {\n          delete params[key];\n        }\n      });\n      return params;\n    },\n    async onSearch() {\n      try {\n        const params = {\n          ...this.pager,\n          ...this.formatSearchParams()\n        };\n        let func = () => {};\n        switch (this.activeTab) {\n          case 'myPA':\n            func = getMyPendingApprovalList;\n            break;\n          case 'pendingRequest':\n            func = getPendingPaymentRequestList;\n            break;\n          case 'all':\n            func = getAllPaymentRequestList;\n            break;\n        }\n        this.loading = true;\n        const res = await func(params);\n        if (res && res.retcode === 0) {\n          this.tableList =\n            this.activeTab === 'pendingRequest'\n              ? (res.data.list || []).map(item =>\n                  Object.assign(item, {\n                    isExpanded: false,\n                    order_list: item.order_list.map(order =>\n                      Object.assign(order, {\n                        isShowRemarkEditBox: false,\n                        isShowEditIcon: false,\n                        cacheRemark: order.remark\n                      })\n                    )\n                  })\n                )\n              : res.data.payment_request_list || [];\n          this.total = res.data.total || 0;\n          this.lastSearchForm = params;\n          this.resetCheckedType();\n        } else {\n          this.tableList = [];\n          this.total = 0;\n          this.$message({ type: 'error', message: res.info || res.message });\n        }\n      } catch (e) {\n        this.tableList = [];\n        this.total = 0;\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loading = false;\n      }\n    },\n    cacheSearchCondition(form) {\n      this.$store.commit('setActiveTab', {\n        module: moduleName,\n        tab: this.activeTab\n      });\n      this.$store.commit('setSearchForm', {\n        module: moduleName,\n        form: form || null,\n        field: 'searchParams'\n      });\n    },\n    onCacheSearchCondition() {\n      this.cacheSearchCondition(this.lastSearchForm);\n    },\n    onRouteToDetail(row) {\n      this.onCacheSearchCondition();\n      this.$router.push(`/admin/finance/paymentRequest/detail/${row.request_id}`);\n    }\n  },\n\n  created() {\n    this.canOperate = hasPermission(Permission.EDIT_PAYMENT_REQUEST);\n    const cacheConditionObj = this.$store.getters.searchForm[moduleName];\n    if (cacheConditionObj && cacheConditionObj.activeTab && cacheConditionObj.searchParams) {\n      this.activeTab = cacheConditionObj.activeTab;\n      const searchParams = cacheConditionObj.searchParams;\n      this.pager.count = searchParams.count;\n      this.pager.page_no = searchParams.page_no;\n      [\n        'supplier_id',\n        'request_id',\n        'order_id',\n        'inbound_id',\n        'requester',\n        'request_source',\n        'request_status',\n        'outstanding_period',\n        'request_type',\n        'scheduled_payment_date_filter',\n        'region'\n      ].forEach(key => {\n        if (searchParams[key]) {\n          this.searchForm[key] = searchParams[key];\n          if (key === 'region' && searchParams[key]) {\n            this.getPaymentStatusSync(searchParams[key]);\n          }\n          if (key === 'request_status') {\n            this.searchForm[key] = [searchParams[key]];\n            if (searchParams[key] === 7) {\n              if (searchParams.payment_issue === 1) {\n                this.searchForm[key] = [7, 101];\n              } else {\n                this.searchForm[key] = [7, 7];\n              }\n            }\n          }\n        }\n      });\n    }\n    this.onSearch();\n  }\n};\n</script>\n\n<style scoped lang=\"scss\">\n.payment-request-list-wrapper {\n  padding: 0 20px;\n  display: block;\n  .list-header-wrapper {\n    position: relative;\n    margin-bottom: 16px;\n    .list-create-btn {\n      position: absolute;\n      right: 0;\n      top: 0;\n      z-index: 1;\n    }\n  }\n  .main-wrapper {\n    width: 100%;\n    padding: 0;\n  }\n  .pagination-center {\n    display: flex;\n    justify-content: center;\n    margin-top: 20px;\n  }\n}\n.block-grey {\n  margin: 16px 0;\n  padding-top: 16px;\n  border-top: 1px solid #f1f1f1;\n}\n</style>\n<style lang=\"scss\">\n@import '~@/styles/common.scss';\n.pms-ele-ui {\n  .new-list-form {\n    .new-list-form-arrow {\n      padding-left: 8px;\n      padding-right: 8px;\n      .arrow-icon {\n        transition: all 0.3s;\n        &.is-expanded {\n          transform: rotate(180deg);\n        }\n      }\n    }\n    &.el-form {\n      .el-form-item {\n        display: flex;\n      }\n      .el-form-item__content,\n      .el-form-item__label {\n        line-height: 32px;\n        height: 32px;\n      }\n      .el-form-item__content {\n        flex: 1;\n      }\n      .el-form-item__label {\n        background: #fafbfd;\n        border-radius: 3px 0 0 3px;\n        border: 1px solid #ddd;\n        border-right: 0;\n        padding: 0 4px;\n      }\n    }\n  }\n}\n.payment-request-list-wrapper {\n  .exportGroup-btn.white-blue .el-dropdown__caret-button::before {\n    background-color: transparent;\n  }\n  .el-cascader--medium {\n    line-height: 32px;\n  }\n  .warning-icon {\n    color: $red;\n    font-size: 14px;\n    margin-right: 4px;\n  }\n  &.list-popover {\n    font-size: 14px;\n    .list-popover-label {\n      font-weight: bold;\n    }\n    .list-popover-more {\n      font-size: 12px;\n      color: $blue;\n      text-align: left;\n    }\n    .list-popover-copy {\n      font-size: 12px;\n      color: $blue;\n      float: right;\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/paymentRequest/pendingDetail.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/paymentRequest/utils.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/productInfo/approveList.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/productInfo/approveRecord.vue","messages":[{"ruleId":"vue/no-template-shadow","severity":2,"message":"Variable 'scope' is already declared in the upper scope.","line":20,"column":39,"nodeType":"Identifier","endLine":20,"endColumn":44}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div v-if=\"showCard\" class=\"record-card\">\n    <section v-if=\"recordType === 'list'\">\n      <div class=\"group-title\">\n        {{$t('supplier.modifyRecords')}}\n        <i @click=\"changeRecordsShow\" :class=\"`icon el-icon-arrow-${showRecords ? 'up' : 'down'}`\"></i>\n      </div>\n      <el-table v-if=\"showRecords\" border :data=\"recordList\">\n        <el-table-column min-width=\"1\" prop=\"action\" :label=\"$t('supplier.processType')\"></el-table-column>\n        <el-table-column min-width=\"1\" prop=\"requester\" :label=\"$t('supplier.user')\"></el-table-column>\n        <el-table-column min-width=\"1\" :label=\"$t('supplier.processTime')\">\n          <template slot-scope=\"scope\">\n            {{scope.row.ctime ? moment(scope.row.ctime * 1000).format('YYYY-MM-DD HH:mm') : ''}}\n          </template>\n        </el-table-column>\n        <el-table-column label=\"\" min-width=\"3\">\n          <template slot-scope=\"scope\">\n            <el-table border :data=\"scope.row.changeInfo || []\">\n              <el-table-column prop=\"field_label\" :label=\"$t('opHistory.field')\">\n                <template slot-scope=\"scope\">{{scope.row.field_label || scope.row.field || ''}}</template>\n              </el-table-column>\n              <el-table-column prop=\"before\" :label=\"$t('opHistory.before')\"></el-table-column>\n              <el-table-column prop=\"after\" :label=\"$t('opHistory.after')\"></el-table-column>\n            </el-table>\n          </template>\n        </el-table-column>\n      </el-table>\n    </section>\n    <section v-else-if=\"showCard && recordType === 'reason'\" class=\"update-card\">\n      <div class=\"record-info\">\n        <i class=\"update-icon el-icon-circle-check\"></i>\n        {{$t('supplier.productUpdated')}}\n      </div>\n      <div class=\"record-info reason-info\">{{`${$t('supplier.updateReason')}: ${productInfo.item_status_reason || ''}`}}</div>\n    </section>\n  </div>\n</template>\n\n<script>\nimport moment from 'moment';\n\nconst approveActionList = ['Approve', 'Reject'];\nconst requestActionList = ['', 'Create', 'Modify', 'Success', 'Failed'];\nconst StorageKey = 'pmsProductModifyRecords';\n\nexport default {\n  data() {\n    return {\n      showRecords: false,\n      moment\n    };\n  },\n  props: {\n    productInfo: {\n      type: Object,\n      required: true\n    },\n    recordType: {\n      type: String,\n      default: ''\n    }\n  },\n  computed: {\n    recordList() {\n      const { approve_record_list = [], item_request_log_list = [] } = this.productInfo;\n      const approveList = approve_record_list.map(item => ({\n        requester: item.approver,\n        action: approveActionList[item.action] || '',\n        ctime: item.ctime\n      }));\n      const requestList = item_request_log_list.map(item => ({\n        ...item,\n        action: requestActionList[item.action] || '',\n        changeInfo: item.change_info || []\n      }));\n      return [...requestList, ...approveList].sort((curr, prev) => prev.ctime - curr.ctime);\n    },\n    showCard() {\n      if (!this.recordType) return false;\n      if (this.recordType === 'list' || !this.productInfo.item_id) return true;\n      const userViewInfo = localStorage.getItem(`${StorageKey}-${this.productInfo.item_id}`);\n      const user = this.$store.getters.username;\n      if (userViewInfo) {\n        const viewInfo = JSON.parse(userViewInfo);\n        const { item_status } = this.productInfo;\n        return viewInfo.user === user && viewInfo.status !== item_status;\n      } else {\n        localStorage.setItem(`${StorageKey}-${this.productInfo.item_id}`, JSON.stringify({\n          user,\n          status: this.productInfo.item_status\n        }));\n        return true;\n      }\n    }\n  },\n  methods: {\n    changeRecordsShow() {\n      this.showRecords = !this.showRecords;\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  .record-card {\n    .icon {\n      font-size: 20px;\n      color: #4D8BFE;\n      cursor: pointer;\n    }\n    .update-card {\n      background-color: #ECF0F9;\n    }\n    .group-title {\n      margin: 10px 0 10px 0;\n      font-weight: 700;\n    }\n    .record-info {\n      margin-left: 20px;\n      height: 32px;\n      line-height: 32px;\n      .update-icon {\n        display: inline-block;\n        width: 24px;\n        margin-right: 10px;\n        font-size: 24px;\n        color: #4D8BFE;\n        vertical-align: middle;\n      }\n    }\n    .reason-info {\n      margin-left: 60px;\n      height: auto;\n    }\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/productInfo/imageUpload.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/productInfo/modificationRecord.vue","messages":[{"ruleId":"vue/no-template-shadow","severity":2,"message":"Variable 'scope' is already declared in the upper scope.","line":17,"column":41,"nodeType":"Identifier","endLine":17,"endColumn":46}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"record-card pms-new-ui\" v-loading=\"loading\">\n    <template v-if=\"templateType == 'old'\">\n      <section>\n        <el-table border :data=\"recordList\">\n          <el-table-column width=\"120px\" prop=\"action\" :label=\"$t('supplier.processType')\"></el-table-column>\n          <el-table-column width=\"180px\" prop=\"requester\" :label=\"$t('supplier.user')\"></el-table-column>\n          <el-table-column width=\"150px\" :label=\"$t('supplier.processTime')\">\n            <template\n              slot-scope=\"scope\"\n            >{{scope.row.ctime ? moment(scope.row.ctime * 1000).format('YYYY-MM-DD HH:mm') : ''}}</template>\n          </el-table-column>\n          <el-table-column label>\n            <template slot-scope=\"scope\">\n              <el-table border :data=\"scope.row.changeInfo || []\">\n                <el-table-column prop=\"field_label\" :label=\"$t('opHistory.field')\">\n                  <template slot-scope=\"scope\">{{scope.row.field_label || scope.row.field || ''}}</template>\n                </el-table-column>\n                <el-table-column prop=\"before\" :label=\"$t('opHistory.before')\"></el-table-column>\n                <el-table-column prop=\"after\" :label=\"$t('opHistory.after')\"></el-table-column>\n              </el-table>\n            </template>\n          </el-table-column>\n        </el-table>\n      </section>\n    </template>\n    <template v-if=\"templateType === 'new'\">\n      <topTips\n        v-if=\"isCheckWarning\"\n        type=\"warning\"\n        :content=\"$t('supplierCheckSkuVariationWarningTips')\"\n      ></topTips>\n      <section>\n        <el-form class=\"total-form\">\n          <el-form-item :label=\"(isCreate ? $t('commonCtime') : $t('commonMtime')) + ': '\">\n            <span>{{recordInfo.ctime ? moment(recordInfo.ctime * 1000).format('YYYY-MM-DD HH:mm') : ''}}</span>\n          </el-form-item>\n          <el-form-item :label=\"(isCreate ? $t('commonCreator') : $t('commonModifier')) + ': '\">\n            <span>{{recordInfo.requester}}</span>\n          </el-form-item>\n          <el-form-item :label=\"$t('commonApprovalStatus')+ ': '\">\n            <span class=\"mr8\">{{formatRequestStatus(productStatus)}}</span>\n            <el-button\n              type=\"text\"\n              @click=\"onShowApproveList\"\n              v-if=\"Array.isArray(approveList)\"\n            >{{$t('supplierApprovalRecord')}}</el-button>\n          </el-form-item>\n        </el-form>\n        <el-table border :data=\"recordInfo.change_info || []\" :span-method=\"spanMethod\">\n          <el-table-column prop=\"field\" :label=\"$t('commonLogModifyField')\" width=\"160px\">\n            <template slot-scope=\"scope\">\n              <p class=\"field-wrapper\">{{formatField(scope.row.field)}}</p>\n              <template v-if=\"scope.row.sku_id\">\n              <p v-if=\"isNewSku(scope.row.sku_id)\" class=\"mt4 new-sku-sign\">new</p>\n              <p v-else class=\"sku-id-title mt4\" >{{scope.row.sku_id}}</p>\n            </template>\n              <div v-if=\"scope.row.checkTags\" class=\"mt4\">\n                <span\n                  v-for=\"(tag, index) in scope.row.checkTags\"\n                  :key=\"index\"\n                  class=\"check-tag\"\n                >{{tag}}</span>\n              </div>\n            </template>\n          </el-table-column>\n          <el-table-column label prop=\"subField\" width=\"130px\">\n            <template slot-scope=\"scope\">{{formatField(scope.row.subField)}}</template>\n          </el-table-column>\n          <el-table-column prop=\"before\" :label=\"$t('commonBefore')\">\n            <template slot-scope=\"scope\">\n              <template v-if=\"imageFields.includes(scope.row.field)\">\n                <img\n                  class=\"image-item\"\n                  :src=\"img\"\n                  v-for=\"(img, index) in scope.row.before.split(',') || []\"\n                  :key=\"index\"\n                />\n              </template>\n              <template v-else-if=\"imageFields.includes(scope.row.subField)\">\n                <img\n                  class=\"image-item\"\n                  :src=\"img\"\n                  v-for=\"(img, index) in scope.row.before.split(',') || []\"\n                  :key=\"index\"\n                />\n              </template>\n              <template v-else-if=\"scope.row.field === 'item_description'\">\n                <pre class=\"desc-text\">{{scope.row.isExpaned ? scope.row.before : scope.row.before.substring(0, 300)}}</pre>\n                <template v-if=\"scope.row.before.length > 300\">\n                  <el-button\n                    type=\"text\"\n                    v-if=\"!scope.row.isExpaned\"\n                    @click=\"scope.row.isExpaned = true\"\n                  >{{$t('commonMore')}}</el-button>\n                  <el-button\n                    type=\"text\"\n                    v-else\n                    @click=\"scope.row.isExpaned = false\"\n                  >{{$t('commonCollapse')}}</el-button>\n                </template>\n              </template>\n              <span v-else>{{scope.row.before || '/'}}</span>\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"after\" :label=\"$t('commonAfter')\">\n            <template slot-scope=\"scope\">\n              <template v-if=\"imageFields.includes(scope.row.field)\">\n                <img\n                  class=\"image-item\"\n                  :src=\"img\"\n                  v-for=\"(img, index) in scope.row.after.split(',') || []\"\n                  :key=\"index\"\n                />\n              </template>\n              <template v-else-if=\"imageFields.includes(scope.row.subField)\">\n                <img\n                  class=\"image-item\"\n                  :src=\"img\"\n                  v-for=\"(img, index) in scope.row.after.split(',') || []\"\n                  :key=\"index\"\n                />\n              </template>\n              <template v-else-if=\"scope.row.field === 'item_description'\">\n                <pre class=\"desc-text\">{{scope.row.isExpaned ? scope.row.after : scope.row.after.substring(0, 300)}}</pre>\n                <template v-if=\"scope.row.after.length > 300\">\n                  <el-button\n                    type=\"text\"\n                    v-if=\"!scope.row.isExpaned\"\n                    @click=\"scope.row.isExpaned = true\"\n                  >{{$t('commonMore')}}</el-button>\n                  <el-button\n                    type=\"text\"\n                    v-else\n                    @click=\"scope.row.isExpaned = false\"\n                  >{{$t('commonCollapse')}}</el-button>\n                </template>\n              </template>\n              <span v-else>{{scope.row.after || '/'}}</span>\n            </template>\n          </el-table-column>\n          <el-table-column slot=\"empty\" width=\"1\">\n            <svg-icon iconClass=\"empty\" class=\"empty-icon\"></svg-icon>\n            <p class=\"no-data-text\">\n              {{$t('supplierNoModificationTips')}}\n              <el-button @click=\"onToggleTab\" type=\"text\">{{$t('supplierProductDetail')}}</el-button>\n            </p>\n          </el-table-column>\n        </el-table>\n      </section>\n      <approveList\n        :visible=\"isShowApproveList\"\n        @close=\"onCloseApproveList\"\n        :tableList=\"approveList\"\n      />\n      <tagEducation v-if=\"isShowTag\" @close=\"closeTag\" />\n    </template>\n  </div>\n</template>\n\n<script>\nimport { getItemRequestDetail, checkSkuVariations, getNewerEducation, setNewerEducation } from '@/api/shop';\nimport { formatParams } from '@/utils/formatParams';\nimport { ProductRequestStatusList, ProductChangeFiledObj } from '@/utils/constant';\nimport ApproveList from './approveList';\nimport moment from 'moment';\nimport topTips from '@/components/common/topTips';\nimport tagEducation from './tagEducation';\n\nconst approveActionList = ['Approve', 'Reject'];\nconst requestActionList = ['', 'Create', 'Modify', 'Success', 'Failed'];\n\nexport default {\n  components: { ApproveList, topTips, tagEducation },\n  data() {\n    return {\n      moment,\n      loading: false,\n      isShowApproveList: false,\n      isShowTag: false,\n      approveList: [],\n      hasTags: false,\n      recordInfo: {},\n      productStatus: '',\n      imageFields: ['image_list', 'variation_images'],\n      isCreate: false,\n      isCheckWarning: false,\n      itemRequestLogList: [],\n      templateType: ''\n    };\n  },\n  created() {\n    this.getRecords();\n  },\n  computed: {\n    recordList() {\n      const approveList = this.approveList.map((item) => ({\n        requester: item.approver,\n        action: approveActionList[item.action] || '',\n        ctime: item.ctime\n      }));\n      const requestList = this.itemRequestLogList.map((item) => ({\n        ...item,\n        action: requestActionList[item.action] || '',\n        changeInfo: item.change_info || []\n      }));\n      return [...requestList, ...approveList].sort((curr, prev) => prev.ctime - curr.ctime);\n    }\n  },\n  methods: {\n    isNewSku(sku_id) {\n      return /_0$/.test(sku_id);\n    },\n    spanMethod({ row, column, rowIndex, columnIndex }) {\n      if (!row.subField) {\n        // 无subField 说明没有children\n        if (columnIndex === 0) {\n          // 合并左右两列\n          return {\n            rowspan: 1,\n            colspan: 2\n          };\n        }\n        if (columnIndex === 1) {\n          // 第二列隐藏\n          return {\n            rowspan: 0,\n            colspan: 0\n          };\n        }\n      }\n      // 存在children的情况（第二级）\n      if (columnIndex === 0) {\n        // 针对第一列\n        if (row.length) {\n          // 合并上下行\n          return {\n            rowspan: row.length,\n            colspan: 1\n          };\n        } else {\n          return {\n            rowspan: 0,\n            colspan: 0\n          };\n        }\n      }\n      // 其他情况正常占一个格\n      return {\n        rowspan: 1,\n        colspan: 1\n      };\n    },\n    formatField(value) {\n      return ProductChangeFiledObj[value] || '/';\n    },\n    onShowApproveList() {\n      this.isShowApproveList = true;\n    },\n    onCloseApproveList() {\n      this.isShowApproveList = false;\n    },\n    onToggleTab() {\n      this.$emit('toggleTab');\n    },\n    formatRequestStatus(status) {\n      return (ProductRequestStatusList.find((item) => item.value === status) || {}).label;\n    },\n    formatChangeInfo(arr = []) {\n      const result = [];\n      arr.forEach((item) => {\n        if (Array.isArray(item.children) && item.children.length) {\n          item.children.forEach((child, index) => {\n            result.push({\n              field: item.field,\n              sku_id: item.sku_id || '',\n              subField: child.field,\n              length: index === 0 ? item.children.length : 0,\n              before: child.before,\n              after: child.after,\n              checkTags: undefined\n            });\n          });\n        } else {\n          const obj = {\n            field: item.field,\n            sku_id: item.sku_id || '',\n            subField: undefined,\n            length: 0,\n            before: item.before,\n            after: item.after,\n            checkTags: undefined\n          };\n          if (item.field === 'item_description') {\n            obj.isExpaned = false;\n          }\n          result.push(obj);\n        }\n      });\n      return result;\n    },\n    closeTag() {\n      this.setTagNewerEducation();\n      this.isShowTag = false;\n    },\n    async setTagNewerEducation() {\n      try {\n        const params = {\n          tab_type: 6\n        };\n        const res = await setNewerEducation(params);\n        if (res.retcode !== 0) {\n          this.$message({ type: 'error', message: res.message || res.info });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    async getTagNewerEducation() {\n      try {\n        const params = {\n          tab_type: 6\n        };\n        const res = await getNewerEducation(params);\n        if (res && res.retcode === 0) {\n          this.isShowTag = res.data.is_new || false;\n        } else {\n          this.$message({ type: 'error', message: res.message || res.info });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    async checkSkuVariations(sku_id_list = [], check_list = [], cb) {\n      try {\n        const params = {\n          sku_id_list: sku_id_list,\n          check_list: check_list\n        };\n        const res = await checkSkuVariations(params);\n        if (res && res.retcode === 0) {\n          const check_list = res.data || [];\n          let hasTags = false;\n          check_list.forEach((item, index) => {\n            const targetModel = this.recordInfo.change_info.find((record) => record.sku_id === item.sku_id);\n            targetModel.checkTags = Object.entries(item.check_items)\n              .filter(([key, value]) => value)\n              .map(([key, value]) => key);\n            if (targetModel.checkTags.length && !hasTags) {\n              hasTags = true;\n              this.isCheckWarning = true;\n              this.getTagNewerEducation();\n            }\n          });\n        } else {\n          this.$message({ type: 'error', message: res.message || res.info });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    getRecords() {\n      // 入口：Supplier Center Admin\n      this.loading = true;\n      const params = {\n        item_id: '',\n        item_request_id: this.$route.params.productID,\n        vendor_site_id: this.$route.params.supplierID\n      };\n      getItemRequestDetail(formatParams(params))\n        .then((resp) => {\n          if (resp.status !== 0) {\n            this.$message({ type: 'error', message: resp.info });\n          } else {\n            const product = resp.data || {};\n            this.approveList = product.approve_record_list || [];\n            if (product.item_request_log_v2) { // 与后台约定好，旧的单据没有这个字段，而不是有这个字段但是是空对象\n              this.templateType = 'new';\n              const recordInfo = product.item_request_log_v2 || {};\n              const changeInfo = recordInfo.change_info || [];\n              this.recordInfo = { ...recordInfo, change_info: this.formatChangeInfo(changeInfo) };\n              this.productStatus = product.request_status;\n              this.isCreate = product.request_type === 1;\n\n              // 根据检查项目来分类\n              const checkTypes = [\n                {\n                  checkNums: [1, 2, 3, 4, 5],\n                  sku_ids: changeInfo\n                    .filter((item) => item.sku_id && item.after === 'Status:Deleted')\n                    .map((item) => item.sku_id)\n                },\n                {\n                  checkNums: [1, 2, 3, 4, 5], // 之前是2，3，4，所以做了区分，现在检查项都一样了感觉可以不做区分，后续在改吧\n                  sku_ids: changeInfo\n                    .filter(\n                      (item) =>\n                        item.sku_id &&\n                        Array.isArray(item.children) &&\n                        item.children.some((child) => child.field === 'variation_name')\n                    )\n                    .map((item) => item.sku_id)\n                }\n              ];\n              checkTypes.forEach((item) => {\n                if (item.sku_ids.length) {\n                  this.checkSkuVariations(item.sku_ids, item.checkNums);\n                }\n              });\n            } else {\n              this.itemRequestLogList = product.item_request_log_list || [];\n              this.templateType = 'old';\n            }\n          }\n        })\n        .catch((e) => {\n          this.$message.error(e);\n        })\n        .finally(() => {\n          this.loading = false;\n        });\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.record-card {\n  padding: 0px 24px;\n  .new-sku-sign{\n    display: inline-block;\n    border: 1px solid #ff4742;\n    color: #ff4742;\n    font-size: 12px;\n    height: 18px;\n    line-height: 18px;\n    padding: 0 2px;\n  }\n  .icon {\n    font-size: 20px;\n    color: #4d8bfe;\n    cursor: pointer;\n  }\n  .image-item {\n    border: 1px solid #dedede;\n    max-width: 112px;\n    height: 112px;\n    margin: 0 8px 8px 0;\n  }\n  .sku-id-title{\n    color: rgba(0,0,0,.45);\n    font-size: 12px;\n    line-height: 14px;\n  }\n}\n.display-flex-wrapper {\n  display: flex;\n  .field-wrapper {\n    flex: 1;\n  }\n  .sub-field-wrapper {\n    flex: 1;\n  }\n}\n.desc-text {\n  white-space: normal;\n  word-break: break-word;\n}\n.check-tag {\n  display: inline-block;\n  color: $orange;\n  font-size: 12px;\n  line-height: 12px;\n  padding: 2px 4px;\n  border: 1px solid $orange;\n  margin-right: 4px;\n  &:last-child {\n    margin-right: 0;\n  }\n}\n.empty-icon {\n  width: 120px;\n  height: 120px;\n  margin-top: 40px;\n}\n.no-data-text {\n  line-height: 18px;\n  margin-bottom: 24px;\n}\n</style>\n<style lang=\"scss\">\n.record-card {\n  .total-form {\n    margin: 16px 0 24px;\n    .el-form-item--medium .el-form-item__content,\n    .el-form-item--medium .el-form-item__label {\n      line-height: 24px;\n    }\n    .el-form-item {\n      margin-bottom: 16px;\n    }\n  }\n  .el-table--border {\n    td {\n      border-right: 1px solid #ebeef5;\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/productInfo/product.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/productInfo/productApplication.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":4,"column":64,"nodeType":"VIdentifier","messageId":"deprecated","endLine":4,"endColumn":70}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-container>\n    <el-main>\n      <el-form :model=\"searchForm\" label-width=\"160px\" @submit.native.prevent='onSearch'>\n        <el-row class=\"pms-ele-ui search-row\">\n          <el-col class=\"form-col\" v-for='item in searchSchema' :key='item.field' :span=\"item.width || 7\" :offset=\"item.offset\">\n            <el-form-item :label=\"item.label\">\n              <pms-form-item @input=\"modifyForm\" :renderData=\"{ schema: item, form: searchForm }\"></pms-form-item>\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col class=\"action-col\">\n            <div class='list-btn' @click='onSearch'>{{$t('purchaseRequest.search')}}</div>\n            <div class='list-btn clear-btn' @click=\"onReset\">{{$t('purchaseRequest.clear')}}</div>\n            <el-button native-type='submit' v-show=\"false\"></el-button>\n          </el-col>\n        </el-row>\n      </el-form>\n      <list-view\n        class=\"pms-ui\"\n        :dataList=\"tableData\"\n        v-loading=\"loading\"\n        :config=\"tableConfig\"\n        :tableSchema=\"tableSchema\"\n        @rowClick=\"rowClick\"\n      >\n      </list-view>\n      <div class=\"content-center padding-top-bottom\">\n        <el-pagination background layout=\"sizes, prev, pager, next\" :page-sizes='[10, 20, 50, 100]' @size-change='handleSizeChange'\n        :page-size=\"pageSize\" :current-page=\"currentPage\" @current-change=\"handleCurrentChange\" :total=\"total\" ></el-pagination>\n      </div>\n    </el-main>\n  </el-container>\n</template>\n\n<script>\nimport { ProductRequestStatusList, ProductRequestTypeList, Permission } from '@/utils/constant';\nimport moment from 'moment';\nimport { getItemRequestList, syncItemRequest } from '@/api/shop';\nimport { getShopList } from '@/api/shopConfig';\nimport PMSFormItem, { getSelectOptions } from '@/components/BaseItem/formItem';\nimport ListView from '@/components/ApproveList/list';\nimport { getSupplierList } from '@/api/supplier';\nimport { getCategoryList } from '@/api/userRole';\nimport { formatParams } from '@/utils/formatParams';\nimport { hasPermission } from '@/utils/permission';\n\nexport default {\n  data() {\n    return {\n      searchForm: {\n        cacheSupplier: '',\n        region: '',\n        request_status: '',\n        shop_id: ''\n      },\n      shopList: [],\n      shopLoading: false,\n      loading: false,\n      categoryList: [],\n      tableData: [],\n      pageSize: 10,\n      currentPage: 1,\n      total: 10\n    };\n  },\n  components: {\n    ListView,\n    'pms-form-item': PMSFormItem\n  },\n  computed: {\n    countryList() {\n      return [{ label: 'All', value: '' }, ...this.$store.getters.countrySelectList || []];\n    },\n    searchSchema() {\n      return [\n        { field: 'region', type: 'select', label: this.$t('purchaseRequest.region'),\n          getChildren: (h) => getSelectOptions(this.countryList, h), on: { change: this.onRegionChange }\n        },\n        { field: 'shop_id', type: 'input', label: this.$t('approvalFlow.shopID'), on: { change: this.handleResetShopName }},\n        {\n          props: {\n            'remote-method': this.getShopList, filterable: true, clearable: true,\n            remote: true, loading: this.shopLoading, placeholder: 'please select a region first'\n          },\n          type: 'select', label: this.$t('approvalFlow.shopName'), field: 'shop_name', getChildren: h => getSelectOptions(this.shopList, h),\n          on: { change: this.handleSelectShopIdByName }\n        },\n        { field: 'request_status', type: 'select', label: this.$t('purchaseRequest.status'),\n          getChildren: (h) => getSelectOptions(ProductRequestStatusList, h), on: { change: this.onSearch }\n        },\n        { field: 'item_id', props: { percision: 0, controls: false, value: this.searchForm.item_id || undefined },\n          type: 'input-number', label: this.$t('supplier.productID') },\n        { field: 'cacheSupplier', type: 'autocomplete', label: this.$t('purchaseOrder.supplierIdOrName'),\n          on: {\n            select: this.onSupplierSelect,\n            blur: this.onSupplierBlur\n          },\n          props: {\n            'trigger-on-focus': false,\n            'value-key': 'supplier_id',\n            'fetch-suggestions': (value, callback) => this.getSuppliers(value, callback)\n          }\n        },\n        { field: 'category_id', type: 'select', label: this.$t('userRole.userList.categoryName'),\n          getChildren: (h) => getSelectOptions(this.categoryList, h), on: { change: this.onSearch },\n          props: { placeholder: 'please select a region first' }\n        },\n        { field: 'item_request_id', type: 'input', label: this.$t('budget.requestID') },\n        { field: 'request_type', type: 'select', label: this.$t('supplier.applicationType'),\n          getChildren: (h) => getSelectOptions(ProductRequestTypeList, h), on: { change: this.onSearch }\n        }\n      ];\n    },\n    tableConfig() {\n      return {\n        showCheckBox: false,\n        align: 'center'\n      };\n    },\n    tableSchema() {\n      return [\n        { field: 'item_request_id', label: this.$t('budget.requestID') },\n        { label: this.$t('supplier.productID'), render: (schema, row) => row.item_id || '' },\n        { field: 'item_name', label: this.$t('supplier.productName') },\n        { label: this.$t('userRole.userList.categoryName'), render: (schema, row) => (row.category_names || '').split(',')[0] || '' },\n        { label: this.$t('supplier.variation'),\n          render: (schema, row, index, h) => {\n            const variationList = row.tier_variation_list || [];\n            const lineOneVariation = variationList[0] || {};\n            const lineOneOptions = lineOneVariation.options || [];\n            const lineTwoVariation = variationList[1] || {};\n            const lineTwoOptions = lineTwoVariation.options || [];\n            return ['div', null, [\n              h('div', null, `${lineOneVariation.name || ''}: ${(lineOneOptions.length > 5 ? [...lineOneOptions.slice(0, 5), '...'] : lineOneOptions).join(',')}`),\n              h('div', null, `${lineTwoVariation.name || ''}: ${(lineTwoOptions.length > 5 ? [...lineTwoOptions.slice(0, 5), '...'] : lineTwoOptions).join(',')}`)\n            ].slice(0, variationList.length)];\n          }\n        },\n        { field: 'supplier_name', label: this.$t('purchaseOrder.supplierName') },\n        { field: 'vendor_site_id', label: this.$t('backMargin.vendorSiteID') },\n        { field: 'purchase_type', label: this.$t('purchaseOrder.purchaseType') },\n        { field: 'region', label: this.$t('purchaseRequest.region') },\n        { field: 'request_type', type: 'enum', options: ProductRequestTypeList, label: this.$t('supplier.applicationType') },\n        { label: this.$t('supplier.applicationTime'), sortable: true, sortBy: 'ctime',\n          render: (schema, row) => row.ctime ? moment(row.ctime * 1000).format('YYYY-MM-DD HH:mm:ss') : '' },\n        { label: this.$t('supplier.approveTime'), sortable: true, sortBy: 'approve_time',\n          render: (schema, row) => row.approve_time ? moment(row.approve_time * 1000).format('YYYY-MM-DD HH:mm:ss') : '' },\n        { label: this.$t('purchaseRequest.status'), type: 'enum', field: 'request_status', options: ProductRequestStatusList },\n        { label: this.$t('purchaseRequest.action'), columnKey: 'action', hidden: !hasPermission(Permission.SUPPLIER_PRODUCT_APPLICATION_ACTION),\n          render: (schema, row, index, h) => row.request_status === 3 ? [\n            'div', null, [\n              h('el-button', {\n                class: 'action-btn',\n                props: { type: 'primary', size: 'mini' },\n                on: { click: () => this.syncApplication(row) }\n              }, this.$t('userRole.userList.sync'))\n            ]\n          ] : null\n        }\n      ].filter(item => !item.hidden);\n    }\n  },\n  methods: {\n    handleSelectShopIdByName(shop_id) {\n      this.searchForm.shop_id = shop_id;\n      this.onSearch();\n    },\n    modifyForm(schema, value) {\n      this.$set(this.searchForm, schema.field, value);\n    },\n    syncApplication(row) {\n      syncItemRequest({ item_request_id: row.item_request_id }).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.$message.success('Success');\n          this.onSearch('', this.currentPage || 1);\n        }\n      }).catch(() => {});\n    },\n    handleResetShopName() {\n      this.searchForm.shop_name = '';\n    },\n    onRegionChange(region) {\n      this.searchForm.category_id = '';\n      this.searchForm.shop_id = '';\n      this.searchForm.shop_name = '';\n      this.categoryList = [];\n      this.shopList = [];\n      if (region) {\n        getCategoryList({ catids: 0, country: region }).then(catResp => {\n          if (catResp.status !== 0) {\n            this.$message.error(catResp.info);\n          } else {\n            this.categoryList = (catResp.data.cats || []).map(item => ({ label: item.display_name, value: item.catid }));\n          }\n        }).catch(() => {});\n      }\n      this.onSearch();\n    },\n    getSuppliers(value, callback) {\n      const params = {\n        pageno: 1,\n        count: 10,\n        key: `${value}`.trim(),\n        approval_country: this.countryList.filter(item => !!item.value).map(item => item.value).join('_')\n      };\n      getSupplierList(params).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          const { list = [] } = resp.data || {};\n          if (Array.isArray(list) && list.length) {\n            return callback(list);\n          } else {\n            this.$message.error('This Supplier ID is not exist');\n          }\n        }\n        callback([]);\n      }).catch(() => {\n        this.$message.error('Get Supplier Failed');\n        callback([]);\n      });\n    },\n    onSupplierSelect(item) {\n      this.searchForm.cacheSupplier = item.supplier_id;\n      this.$set(this.searchForm, 'vendor_site_id', item.supplier_id);\n      this.onSearch();\n    },\n    onSupplierBlur() {\n      if (this.searchForm.cacheSupplier !== this.searchForm.vendor_site_id) {\n        this.searchForm.cacheSupplier = '';\n        this.searchForm.vendor_site_id = '';\n      }\n    },\n    commonFetch(res, cb) {\n      if (res && res.retcode === 0) {\n        cb(res.data);\n      } else {\n        this.$message.error(res.info || 'failed to connect network, pls try it again later');\n      }\n    },\n    async getShopList(query = '') {\n      if (!query || !this.searchForm.region) return;\n      this.shopLoading = true;\n      try {\n        const opt = {\n          count: 10,\n          page_no: 1,\n          country: this.searchForm.region,\n          shop_name: query\n        };\n        const res = await getShopList(opt);\n        this.commonFetch(res, (data) => {\n          this.shopList = data.shops.map(item => ({ label: item.shop_name, value: item.shop_id }));\n          this.shopLoading = false;\n        });\n      } catch (e) {\n        this.shopLoading = false;\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    onSearch(e, pageIndex) {\n      if (typeof pageIndex !== 'number') {\n        this.currentPage = 1;\n      }\n      const params = formatParams({\n        ...this.searchForm,\n        page_no: this.currentPage || 1,\n        count: this.pageSize || 10,\n        shop_name: '',\n        cacheSupplier: ''\n      });\n      this.getApproveList(params);\n    },\n    onReset() {\n      Object.keys(this.searchForm).forEach(key => {\n        this.$set(this.searchForm, key, '');\n      });\n    },\n    handleSizeChange(size) {\n      this.pageSize = size;\n      this.onSearch();\n    },\n    handleCurrentChange(currentPage) {\n      this.currentPage = currentPage;\n      this.onSearch('', currentPage);\n    },\n    rowClick(row, column) {\n      if (column.columnKey !== 'action') {\n        this.$router.push(`/admin/srm/product/${row.item_request_id}/${row.vendor_site_id}/1`);\n      }\n    },\n    getApproveList(params = {}) {\n      this.loading = true;\n      getItemRequestList(params).then(resp => {\n        if (resp.status !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.tableData = resp.data.item_request_list || [];\n          this.total = resp.data.total || 0;\n        }\n        this.loading = false;\n      }).catch(() => { this.loading = false; });\n    }\n  },\n  created() {\n    this.onSearch();\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.search-row {\n  .form-col {\n    .el-input-number, .el-autocomplete {\n      width: 100%;\n    }\n  }\n}\n.action-col {\n  margin: 20px 0;\n  text-align: right;\n}\n</style>\n\n<style lang=\"scss\">\n@import '~@/styles/common.scss';\n.search-row {\n  .el-input-number .el-input__inner {\n    padding-left: 3px;\n    text-align: left;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/productInfo/productAttribute.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/productInfo/productInfo.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/productInfo/productSkuTable.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/productInfo/rejectReasonDialog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/productInfo/shippingFee.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/productInfo/shippingFeeDialog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/productInfo/supplierListingProduct.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/productInfo/supplierProduct.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":4,"column":64,"nodeType":"VIdentifier","messageId":"deprecated","endLine":4,"endColumn":70}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-container>\n    <el-main>\n      <el-form :model=\"searchForm\" label-width=\"160px\" @submit.native.prevent='onSearch'>\n        <el-row class=\"search-row\">\n          <el-col class=\"form-col\" v-for='item in searchSchema' :key='item.field' :span=\"item.width || 7\" :offset=\"item.offset\">\n            <el-form-item :label=\"item.label\">\n              <pms-form-item @input=\"modifyForm\" :renderData=\"{ schema: item, form: searchForm }\"></pms-form-item>\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row type=\"flex\" justify=\"space-between\" class=\"mb16\">\n          <el-col>\n            <el-button class=\"white-blue\" @click=\"onExport\" :loading=\"loadingExport\">{{$t('commonExport')}}</el-button>\n            <el-button @click=\"showExportHistory\">{{$t('commonExportHistory')}}</el-button>\n          </el-col>\n          <el-col align=\"right\">\n            <el-button  @click='onSearch'>{{$t('commonSearch')}}</el-button>\n            <el-button class=\"white-blue\" @click=\"onReset\">{{$t('commonClear')}}</el-button>\n            <el-button native-type='submit' v-show=\"false\"></el-button>\n          </el-col>\n        </el-row>\n      </el-form>\n      <list-view\n        :dataList=\"tableData\"\n        v-loading=\"loading\"\n        :config=\"tableConfig\"\n        :tableSchema=\"tableSchema\"\n        @rowClick=\"rowClick\"\n      >\n        <template slot=\"checkColumn\">\n          <checkAllColumn ref=\"checkAllColumn\" :tableList=\"tableData\" @setSelection=\"onSetSelection\" @setType=\"onSetCheckType\"></checkAllColumn>\n        </template>\n      </list-view>\n      <div class=\"content-center padding-top-bottom\">\n        <el-pagination background layout=\"sizes, prev, pager, next\" :page-sizes='[10, 20, 50, 100]' @size-change='handleSizeChange'\n        :page-size=\"pageSize\" :current-page=\"currentPage\" @current-change=\"handleCurrentChange\" :total=\"total\" ></el-pagination>\n      </div>\n    </el-main>\n     <export-history-dialog :interval=\"15000\" :taskType=\"23\" :visible=\"isShowExportHistory\" @close=\"closeExportHistory\"></export-history-dialog>\n  </el-container>\n</template>\n\n<script>\nimport { ProductStatusList, ProductSourceList, PurchaseTypeList } from '@/utils/constant';\nimport moment from 'moment';\nimport { get } from 'lodash';\nimport { getItemList } from '@/api/shop';\nimport { getShopList } from '@/api/shopConfig';\nimport checkAllColumn from '@/components/common/checkAllColumn';\nimport PMSFormItem, { getSelectOptions } from '@/components/BaseItem/formItem';\nimport ListView from '@/components/ApproveList/list';\nimport { getSupplierList, exportSupplierProductExcel } from '@/api/supplier';\nimport { getCategoryList } from '@/api/userRole';\nimport { formatParams } from '@/utils/formatParams';\nimport ExportHistoryDialog from '@/components/ApproveList/exportHistoryDialog';\n\nexport default {\n  data() {\n    return {\n      searchForm: {\n        cacheSupplier: '',\n        country: '',\n        create_source: '',\n        item_status_list: [],\n        shop_id: '',\n        ctime: []\n      },\n      loadingExport: false,\n      isShowExportHistory: false,\n      shopList: [],\n      shopLoading: false,\n      loading: false,\n      categoryList: [],\n      tableData: [],\n      pageSize: 10,\n      currentPage: 1,\n      total: 10,\n      checkRows: [],\n      checkType: ''\n    };\n  },\n  components: {\n    ListView,\n    'pms-form-item': PMSFormItem,\n    checkAllColumn,\n    ExportHistoryDialog\n  },\n  computed: {\n    countryList() {\n      return [{ label: 'All', value: '' }, ...this.$store.getters.countrySelectList || []];\n    },\n    searchSchema() {\n      return [\n        { field: 'country', type: 'select', label: this.$t('purchaseRequest.region'),\n          getChildren: (h) => getSelectOptions(this.countryList, h), on: { change: this.onRegionChange }\n        },\n        { field: 'shop_id', type: 'input', label: this.$t('approvalFlow.shopID'), on: { change: this.handleResetShopName }},\n        {\n          props: {\n            'remote-method': this.getShopList, filterable: true, clearable: true,\n            remote: true, loading: this.shopLoading, placeholder: 'please select a region first'\n          },\n          type: 'select', label: this.$t('approvalFlow.shopName'), field: 'shop_name', getChildren: h => getSelectOptions(this.shopList, h),\n          on: { change: this.handleSelectShopIdByName }\n        },\n        { field: 'item_status_list', type: 'select', label: this.$t('purchaseRequest.status'), props: { multiple: true, 'collapse-tags': true },\n          getChildren: (h) => getSelectOptions(ProductStatusList, h), on: { change: this.onSearch }\n        },\n        { field: 'item_id', type: 'input', label: this.$t('supplier.productID'), on: { change: this.onChangeItemId } },\n        { field: 'cacheSupplier', type: 'autocomplete', label: this.$t('purchaseOrder.supplierIdOrName'),\n          on: {\n            select: this.onSupplierSelect,\n            blur: this.onSupplierBlur\n          },\n          props: {\n            'trigger-on-focus': false,\n            'value-key': 'supplier_id',\n            'fetch-suggestions': (value, callback) => this.getSuppliers(value, callback)\n          }\n        },\n        { field: 'category_id', type: 'select', label: this.$t('userRole.userList.categoryName'),\n          getChildren: (h) => getSelectOptions(this.categoryList, h), on: { change: this.onSearch },\n          props: { placeholder: 'please select a region first' }\n        },\n        { field: 'create_source', type: 'select', label: this.$t('supplier.source'),\n          getChildren: (h) => getSelectOptions(ProductSourceList, h), on: { change: this.onSearch }\n        },\n        { field: 'ctime', type: 'date-picker', label: this.$t('commonCtime'),\n          on: { change: this.onSearch },\n          props: {\n            type: 'daterange',\n            'start-placeholder': 'Begin',\n            'end-placeholder': 'End',\n            'format': 'yyyy/MM/dd',\n            'valueFormat': 'yyyy-MM-dd HH:mm:ss',\n            'default-time': ['00:00:00', '23:59:59'],\n            'popper-class': 'pms-new-ui'\n          }\n        },\n        { field: 'purchase_type', type: 'select', label: this.$t('commonPurchaseType'),\n          getChildren: (h) => getSelectOptions(PurchaseTypeList, h), on: { change: this.onSearch }\n        }\n      ];\n    },\n    tableConfig() {\n      return {\n        showCheckBox: false,\n        align: 'center',\n        border: false\n      };\n    },\n    tableSchema() {\n      return [\n        { field: 'item_id', label: this.$t('supplier.productID') },\n        { field: 'item_name', label: this.$t('supplier.productName') },\n        { field: 'category_name1', label: this.$t('userRole.userList.categoryName') },\n        { label: this.$t('supplier.variation'),\n          render: (schema, row, index, h) => {\n            const variationList = row.tier_variation_list || row.item_tier_variation || [];\n            const lineOneVariation = variationList[0] || {};\n            const lineOneOptions = lineOneVariation.options || [];\n            const lineTwoVariation = variationList[1] || {};\n            const lineTwoOptions = lineTwoVariation.options || [];\n            return ['div', null, [\n              h('div', null, `${lineOneVariation.name || ''}: ${(lineOneOptions.length > 5 ? [...lineOneOptions.slice(0, 5), '...'] : lineOneOptions).join(',')}`),\n              h('div', null, `${lineTwoVariation.name || ''}: ${(lineTwoOptions.length > 5 ? [...lineTwoOptions.slice(0, 5), '...'] : lineTwoOptions).join(',')}`)\n            ].slice(0, variationList.length)];\n          }\n        },\n        { field: 'supplier_name', label: this.$t('purchaseOrder.supplierName') },\n        { field: 'vendor_site_id', label: this.$t('backMargin.vendorSiteID') },\n        { field: 'vendor_type_text', label: this.$t('purchaseOrder.purchaseType') },\n        { field: 'country', label: this.$t('purchaseRequest.region') },\n        { field: 'create_source', label: this.$t('supplier.source') },\n        { label: this.$t('commonCtime'), sortable: true, sortBy: 'item_ctime',\n          render: (schema, row) => row.item_ctime ? moment(row.item_ctime * 1000).format('YYYY-MM-DD HH:mm:ss') : '' },\n        { label: this.$t('supplier.updateTime'), sortable: true, sortBy: 'item_mtime',\n          render: (schema, row) => row.item_mtime ? moment(row.item_mtime * 1000).format('YYYY-MM-DD HH:mm:ss') : '' },\n        { label: this.$t('purchaseRequest.status'), type: 'enum', field: 'item_status', options: ProductStatusList },\n        { label: this.$t('commonBrand'),\n          render: (schema, row) => {\n            return get(row, 'global_brand.display_name') ? get(row, 'global_brand.display_name') : '/';\n          }\n        }\n      ];\n    }\n  },\n  methods: {\n    onChangeItemId(value) {\n      if (value !== '') {\n        this.searchForm.item_id = isNaN(parseInt(value)) ? '' : parseInt(value);\n      }\n      this.onSearch();\n    },\n    showExportHistory() {\n      this.isShowExportHistory = true;\n    },\n    closeExportHistory() {\n      this.isShowExportHistory = false;\n    },\n    onExport() {\n      let params = {};\n      if (this.checkType === 'all') {\n        params = Object.assign({page_no: this.currentPage, count: this.pageSize }, formatParams({\n          country: this.searchForm.country,\n          create_source: this.searchForm.create_source,\n          category_id: this.searchForm.category_id,\n          item_id: this.searchForm.item_id ? parseInt(this.searchForm.item_id) : '',\n          item_status_list: Array.isArray(this.searchForm.item_status_list) && this.searchForm.item_status_list.length > 0 ? this.searchForm.item_status_list : '',\n          shop_id: Number(this.searchForm.shop_id) || '', // shop_id是int类型！！\n          vendor_site_id: this.searchForm.vendor_site_id,\n          ctime_start: Array.isArray(this.searchForm.ctime) ? this.searchForm.ctime[0] : '',\n          ctime_end: Array.isArray(this.searchForm.ctime) && this.searchForm.ctime.length > 1 ? this.searchForm.ctime[1] : ''\n        }));\n      } else {\n        params = {\n          item_id_list: this.checkRows.map(item => item.item_id)\n        };\n      }\n      this.loadingExport = true;\n      exportSupplierProductExcel(params).then(res => {\n        if (res && res.retcode === 0) {\n          this.$message({ type: 'success', message: this.$t('commonExportHistorySuccessTips')});\n        } else {\n          this.$message({ type: 'error', message: res.message || res.info });\n        }\n      }).catch(e => {\n        this.$message({ type: 'error', message: e });\n      }).finally(() => {\n        this.loadingExport = false;\n      });\n    },\n    onSetSelection(selection) {\n      this.checkRows = selection;\n    },\n    onSetCheckType(type) {\n      this.checkType = type;\n    },\n    handleSelectShopIdByName(shop_id) {\n      this.searchForm.shop_id = shop_id;\n      this.onSearch();\n    },\n    modifyForm(schema, value) {\n      this.$set(this.searchForm, schema.field, value);\n    },\n    handleResetShopName(value) {\n      this.searchForm.shop_name = '';\n      if (value !== '') {\n        this.searchForm.shop_id = isNaN(parseInt(value)) ? '' : parseInt(value);\n      }\n      this.onSearch();\n    },\n    onRegionChange(region) {\n      this.searchForm.category_id = '';\n      this.categoryList = [];\n      this.shopList = [];\n      if (region) {\n        getCategoryList({ catids: 0, country: region }).then(catResp => {\n          if (catResp.status !== 0) {\n            this.$message.error(catResp.info);\n          } else {\n            this.categoryList = (catResp.data.cats || []).map(item => ({ label: item.display_name, value: item.catid }));\n          }\n        }).catch(() => {});\n      }\n      this.onSearch();\n    },\n    getSuppliers(value, callback) {\n      const params = {\n        pageno: 1,\n        count: 10,\n        key: `${value}`.trim(),\n        approval_country: this.countryList.filter(item => !!item.value).map(item => item.value).join('_')\n      };\n      getSupplierList(params).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          const { list = [] } = resp.data || {};\n          if (Array.isArray(list) && list.length) {\n            return callback(list);\n          } else {\n            this.$message.error('This Supplier ID is not exist');\n          }\n        }\n        callback([]);\n      }).catch(() => {\n        this.$message.error('Get Supplier Failed');\n        callback([]);\n      });\n    },\n    onSupplierSelect(item) {\n      this.searchForm.cacheSupplier = item.supplier_id;\n      this.$set(this.searchForm, 'vendor_site_id', item.supplier_id);\n      this.onSearch();\n    },\n    onSupplierBlur() {\n      if (this.searchForm.cacheSupplier !== this.searchForm.vendor_site_id) {\n        this.searchForm.cacheSupplier = '';\n        this.searchForm.vendor_site_id = '';\n      }\n    },\n    commonFetch(res, cb) {\n      if (res && res.retcode === 0) {\n        cb(res.data);\n      } else {\n        this.$message.error(res.info || 'failed to connect network, pls try it again later');\n      }\n    },\n    async getShopList(query = '') {\n      if (!query || !this.searchForm.country) return;\n      this.shopLoading = true;\n      try {\n        const opt = {\n          count: 10,\n          page_no: 1,\n          country: this.searchForm.country,\n          shop_name: query\n        };\n        const res = await getShopList(opt);\n        this.commonFetch(res, (data) => {\n          this.shopList = data.shops.map(item => ({ label: item.shop_name, value: item.shop_id }));\n          this.shopLoading = false;\n        });\n      } catch (e) {\n        this.shopLoading = false;\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    onSearch(e, pageIndex) {\n      if (typeof pageIndex !== 'number') {\n        this.currentPage = 1;\n      }\n      const params = formatParams({\n        ...this.searchForm,\n        item_status_list: this.searchForm.item_status_list.length ? this.searchForm.item_status_list : '',\n        page_no: this.currentPage || 1,\n        count: this.pageSize || 10,\n        shop_id: Number(this.searchForm.shop_id) || '',\n        shop_name: '',\n        cacheSupplier: ''\n      });\n      if (Array.isArray(params.ctime)) {\n        if (params.ctime.length > 1) {\n          params.ctime_start = params.ctime[0];\n          params.ctime_end = params.ctime[1];\n        }\n        delete params.ctime;\n      }\n      this.getApproveList(params);\n    },\n    onReset() {\n      Object.keys(this.searchForm).forEach(key => {\n        this.$set(this.searchForm, key, Array.isArray(this.searchForm[key]) ? [] : '');\n      });\n    },\n    handleSizeChange(size) {\n      this.pageSize = size;\n      this.onSearch();\n    },\n    handleCurrentChange(currentPage) {\n      this.currentPage = currentPage;\n      this.onSearch('', currentPage);\n    },\n    rowClick(row, column, event) {\n      if (column.columnKey !== 'selection') {\n        this.$router.push(`/admin/skuMgt/product/${row.item_id}/${row.vendor_site_id}/2`);\n      }\n    },\n    getApproveList(params = {}) {\n      this.loading = true;\n      getItemList(params).then(resp => {\n        if (resp.status !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.tableData = [...resp.data.items];\n          this.total = resp.data.total || 0;\n          this.$nextTick(() => {\n            this.$refs.checkAllColumn && typeof this.$refs.checkAllColumn.resetCheckedType === 'function' && this.$refs.checkAllColumn.resetCheckedType();\n          });\n        }\n        this.loading = false;\n      }).catch(() => { this.loading = false; });\n    }\n  },\n  created() {\n    this.onSearch();\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.search-row {\n  .form-col {\n    .el-input-number, .el-autocomplete {\n      width: 100%;\n    }\n  }\n}\n</style>\n\n<style lang=\"scss\">\n@import '~@/styles/common.scss';\n.search-row {\n  .el-input-number .el-input__inner {\n    padding-left: 3px;\n    text-align: left;\n  }\n  .el-select__tags {\n    .el-tag {\n      max-width: calc(100% - 80px);\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/productInfo/tagEducation.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/purchaseOrder/asnActionLogDialog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/purchaseOrder/asnPDFDialog.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"asnPDFDialog\" is not PascalCase.","line":49,"column":9,"nodeType":"Literal","endLine":49,"endColumn":23,"fix":{"range":[2510,2522],"text":"AsnPDFDialog"}},{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"order_id\" is not in camelCase.","line":73,"column":5,"nodeType":"Property","endLine":76,"endColumn":6}],"errorCount":2,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <el-dialog width='700px' :title=\"$t('purchaseOrder.asnPDFDialogTitle')\" :visible.sync=\"dialogVisible\" :before-close=\"beforeClose\" class='pms-ui'>\n    <div class=\"pdf-list-wrapper\">\n      <div class=\"flex-box-block inbound-dialog\">\n        <div class=\"search-block inline-block\">\n          <el-dropdown placement=\"bottom-start\">\n            <span class=\"el-dropdown-link\">\n              {{$t('purchaseOrder.fullSelectIn')}}<i class=\"el-icon-arrow-down el-icon--right\"></i>\n            </span>\n            <el-dropdown-menu slot=\"dropdown\">\n              <el-dropdown-item command=\"current\">\n                <el-checkbox class=\"srm-element-ui small\" v-model=\"isCurrentAllChecked\" @change=\"handleCurrentAllChecked\">{{$t('purchaseOrder.fullSelectInCurrentPage')}}</el-checkbox>\n                </el-dropdown-item>\n              <el-dropdown-item command=\"all\">\n                <el-checkbox class=\"srm-element-ui small\" v-model=\"isFullAllChecked\" @change=\"handleFullAllChecked\">{{$t('purchaseOrder.fullSelectInAllPage')}}</el-checkbox>\n                </el-dropdown-item>\n            </el-dropdown-menu>\n          </el-dropdown>\n        </div>\n        <div class=\"inline-block\">\n          <el-pagination background layout=\"total, prev, pager, next\" :current-page='page_no' :pager-count=\"5\" :total.sync=\"total\" :page-size=\"count\" @size-change='handleSizeChange' @current-change=\"handlePageChange\"></el-pagination>\n        </div>\n      </div>\n      <ul class=\"pdf-list-wrapper\" v-if=\"!noSearchData\" >\n        <li v-for=\"pdf in pdfList\" :key=\"pdf.inbound_id\" class=\"pdf-item\">\n          <el-checkbox v-model=\"pdf.isChecked\" class=\"srm-element-ui small pdf-checkbox\" :disabled=\"isFullAllChecked\"></el-checkbox>\n          <svg-icon iconClass=\"PDF\" class=\"pdf-image\" />\n          <div class=\"pdf-text\">\n            <h3 class=\"pdf-filename\">{{pdf.inbound_id}}</h3>\n          </div>\n        </li>\n      </ul>\n      <no-data :noSearchData=\"noSearchData\" v-else/>\n    </div>\n    <el-footer align='right' class=\"pdf-list-footer\">\n        <el-button :loading='loading' class='dialog-list-btn' @click='onConfirm'>{{$t('purchaseRequest.download')}}</el-button>\n      </el-footer>\n  </el-dialog>\n</template>\n\n<script>\nimport noData from '@/components/common/noData';\nimport { getASNList, submitMassDownloadPDF, loopCheckDowloadStatus, downLoadZIP } from '@/api/asn';\nimport { downloadBlobFile } from '@/utils/downloadFile';\nimport moment from 'moment';\nimport { setTimeout } from 'timers';\n\nexport default {\n  name: 'asnPDFDialog',\n  components: {\n    noData\n  },\n  data() {\n    return {\n      dialogVisible: false,\n      loading: false,\n      isCurrentAllChecked: false,\n      isFullAllChecked: false,\n      page_no: 1,\n      count: 10,\n      total: 0,\n      pdfList: [],\n      taskIds: [],\n      timer: null,\n      downloadMsgInstance: null\n    };\n  },\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    order_id: {\n      type: String,\n      required: true\n    },\n    vendorSideId: {\n      type: String,\n      default: ''\n    },\n    region: {\n      type: String,\n      required: true\n    }\n  },\n  computed: {\n    noSearchData() {\n      return this.total < 1;\n    }\n  },\n  methods: {\n    beforeClose() {\n      if (this.taskIds.length > 0) {\n        this.$confirm(this.$t('purchaseOrder.asnDownloadLeaveTip'), {\n          confirmButtonText: this.$t('purchaseOrder.Confirm'),\n          cancelButtonText: this.$t('purchaseOrder.cancel'),\n          showClose: false,\n          type: 'warning'\n        }).then(() => {\n          this.close();\n        }).catch((e) => {});\n      } else {\n        this.close();\n      }\n    },\n    close() {\n      this.$emit('close');\n      this.removeWindowUnloadEvent();\n      clearTimeout(this.timer);\n    },\n    handleFullAllChecked(value) {\n      this.pdfList.forEach(item => {\n        item.isChecked = value;\n      });\n      this.isCurrentAllChecked = false;\n    },\n    handleCurrentAllChecked(value) {\n      this.pdfList.forEach(item => {\n        item.isChecked = value;\n      });\n      this.isFullAllChecked = false;\n    },\n    handlePageChange(page_no) {\n      this.page_no = page_no;\n      this.getPDFList();\n    },\n    handleSizeChange(count) {\n      this.count = count;\n      this.getPDFList();\n    },\n    downloadOnePDF(inbound_id) {\n      this.loading = true;\n      const a = document.createElement('a');\n      a.href = `/api/asn/inbound/download/?inbound_id=${inbound_id}`;\n      a.download = '';\n      a.click();\n      this.$message.success('successfully downloaded PDF file');\n      setTimeout(() => {\n        this.loading = false;\n      }, 1000);\n    },\n    onConfirm() {\n      if (this.isFullAllChecked) {\n        const params = {\n          order_id: this.order_id,\n          all: true\n        };\n        this.downloadSomePDF(params);\n      } else {\n        const selectedPDFList = this.pdfList.filter(item => item.isChecked);\n        if (selectedPDFList.length < 1) {\n          this.$message.error('Please select some orders first!');\n        } else if (selectedPDFList.length === 1) {\n          this.downloadOnePDF(selectedPDFList[0].inbound_id);\n        } else {\n          const params = {\n            inbound_ids: selectedPDFList.map(item => item.inbound_id) || [],\n            order_id: this.order_id\n          };\n          this.downloadSomePDF(params);\n        }\n      }\n    },\n    async downloadSomePDF(params) {\n      try {\n        this.loading = true;\n        this.setWindowUnloadEvent();\n        const res = await submitMassDownloadPDF(params);\n        this.commonFetchAction(res, (data) => {\n          const { task_id = '' } = data;\n          this.taskIds.push(task_id);\n          if (this.taskIds.length <= 1) {\n            this.loopCheckDowloadStatus();\n          }\n          this.downloadMsgInstance = this.$message({\n            type: 'success',\n            message: this.$t('purchaseOrder.zipDownloading'),\n            during: 0,\n            showClose: true\n          });\n        });\n      } catch (e) {\n        this.$messsage({\n          type: 'error',\n          message: e\n        });\n      } finally {\n        this.loading = false;\n      }\n    },\n    loopCheckDowloadStatus() {\n      let isAllFinish = false;\n      let error_count = 0;\n      function loopStatus() {\n        this.timer = setTimeout(() => {\n          const self = this;\n          loopCheckDowloadStatus({ task_ids: this.taskIds }).then(res => {\n            if (res && res.retcode === 0) {\n              const { tasks = [] } = res.data;\n              tasks.forEach(item => {\n                if (item.status === 2) {\n                  self.downloadZip(item);\n                } else if (item.status === 3) {\n                  self.$message({ type: 'error', message: res.data && res.data.err_msg || 'Error during download' });\n                }\n                if (item.status === 2 || item.status === 3) {\n                  this.taskIds.splice(this.taskIds.indexOf(item.task_id), 1);\n                }\n              });\n              isAllFinish = tasks.every(item => item.status !== 1);\n              if (isAllFinish) {\n                self.resetParams();\n              } else {\n                loopStatus.call(self);\n              }\n            }\n          }).catch(e => {\n            self.$message({ type: 'error', message: e });\n            error_count++;\n            if (error_count < 3) {\n              loopStatus.call(self);\n            } else {\n              self.resetParams();\n              error_count = 0;\n            }\n          });\n        }, 10000);\n      }\n      loopStatus.call(this);\n    },\n    downloadZip({ result_link = '', task_id = '' }) {\n      if (!result_link || !task_id) return;\n      const params = {\n        task_id,\n        result_link\n      };\n      downLoadZIP(params).then(resp => {\n        if (resp.type === 'application/json') {\n          const reader = new FileReader();\n          reader.onloadend = () => {\n            const result = JSON.parse(reader.result);\n            if (result.retcode !== 0) {\n              this.$message({ type: 'error', message: result.info });\n            }\n          };\n          reader.readAsText(resp);\n        } else {\n          downloadBlobFile(resp, `${this.vendorSideId}_${this.order_id}_${moment().format('YYYYMMDDHHmmss')}.zip`);\n        }\n      }).catch((e) => { this.$message({ type: 'error', message: e }); }); ;\n    },\n    commonFetchAction(res, cb) {\n      if (res && res.retcode === 0) {\n        cb && cb(res.data);\n      } else {\n        this.$message({\n          type: 'error',\n          message: res.info || this.$t('common.timeoutTips')\n        });\n      }\n    },\n    resetParams() {\n      this.taskIds = [];\n      this.downloadMsgInstance && this.downloadMsgInstance.close();\n      clearTimeout(this.timer);\n      this.removeWindowUnloadEvent();\n    },\n    setWindowUnloadEvent() {\n      window.onbeforeunload = function(e) {\n        e = e || window.event;\n        // 兼容IE8和Firefox 4之前的版本\n        if (e) {\n          e.returnValue = '关闭提示';\n        }\n\n        // Chrome, Safari, Firefox 4+, Opera 12+ , IE 9+\n        return '关闭提示';\n      };\n    },\n    removeWindowUnloadEvent() {\n      window.onbeforeunload = null;\n    },\n    async getPDFList() {\n      try {\n        const opt = {\n          region: this.region,\n          order_id: this.order_id,\n          status: '1,7',\n          skip: (this.page_no - 1) * this.count,\n          limit: this.count\n        };\n        const res = await getASNList(opt);\n        this.commonFetchAction(res, (data) => {\n          this.total = data.total || 0;\n          this.pdfList = (data.asn_list || []).map(item => Object.assign({ isChecked: this.isFullAllChecked }, item));\n        });\n      } catch (e) {\n        this.$message({\n          type: 'error',\n          message: e\n        });\n      }\n    }\n  },\n  watch: {\n    visible: {\n      handler(now) {\n        this.dialogVisible = now;\n        if (now) {\n          this.getPDFList();\n        }\n      },\n      immediate: true\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.flex-box-block{\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  &.inbound-dialog{\n    padding: 8px 0;\n    border-bottom: 1px solid #ccc;\n  }\n}\n.pdf-list-wrapper{\n  min-height: 300px;\n  box-sizing: border-box;\n  padding-bottom: 8px;\n  font-family: 'PingFangHK-Medium';\n  .pdf-item{\n    height: 62px;\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    .pdf-checkbox{\n      margin-right: 0px\n    }\n  }\n  .pdf-image{\n    width: 40px;\n    height:34px;\n    margin-left: 10px;\n  }\n  .pdf-text {\n    flex: 1;\n    align-items: flex-start;\n    margin-left: 12px;\n    margin-top: -6px;\n  }\n  .pdf-filename{\n    font-size: 14px;\n    line-height: 1.2em;\n    color: #333;\n    font-weight: 400;\n    margin-top: 4px;\n  }\n  .pdf-others{\n    font-size: 12px;\n    font-weight: 400;\n    color: #888;\n    line-height:1.2em;\n    margin-top:4px;\n    vertical-align: middle\n  }\n}\n.pdf-list-footer{\n  padding-top:20px;\n  border-top: 1px solid #ccc;\n  padding-right: 0;\n}\n.dialog-list-btn{\n  width: auto;\n  height: auto;\n  min-height: 30px;\n  padding:2px 16px;\n\n}\n\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/purchaseOrder/create.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"poCreate\" is not PascalCase.","line":153,"column":9,"nodeType":"Literal","endLine":153,"endColumn":19,"fix":{"range":[7958,7966],"text":"PoCreate"}},{"ruleId":"vue/no-side-effects-in-computed-properties","severity":2,"message":"Unexpected side effect in \"getTotalValue\" computed property.","line":223,"column":7,"nodeType":"AssignmentExpression","endLine":223,"endColumn":42}],"errorCount":2,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div class='create-po-page pms-ui'>\n    <el-container>\n      <el-header class='pr-detail-header'>\n        <section class='left-info'>\n          <span class='pr-back-icon sprite-btn-back' @click='goBack'></span>\n          <span class='pr-id'>{{$route.params.requestID}}</span>\n          <span class='pr-status'>{{purchaseRequest.statusText}}</span>\n        </section>\n        <section class='right-op'>\n          <div class='submit-section' @click=\"onConfirmCreate\">\n            <span :class=\"`${actionLoading ? 'el-icon-loading' : 'sprite-btn-submit'} submit-icon`\"></span>\n            <div class='submit-btn'>{{$t('purchaseOrder.submit')}}</div>\n          </div>\n        </section>\n      </el-header>\n      <el-main>\n        <el-form ref=\"createPurchaseOrderForm\" :model=\"purchaseOrder.generalInformation\" :rules=\"rules\" label-width=\"200px\">\n          <el-row v-for='item in supplierInfo' :key='item.leftLabel'>\n            <el-col :span='12'>\n              <el-form-item :label=\"$t(item.leftLabel)\">\n                <span class='supplier-gap'>:</span>\n                <span class='supplier-info'>{{item.leftValue || ''}}</span>\n              </el-form-item>\n            </el-col>\n            <el-col :span='12' v-if='item.rightLabel'>\n              <el-form-item class='supplier-right-info' :label=\"$t(item.rightLabel)\">\n                <span class='supplier-gap'>:</span>\n                <span class='supplier-info'>{{item.rightValue || ''}}</span>\n              </el-form-item>\n            </el-col>\n            <el-col :span='12' v-if='item.line'>\n              <section class='gap-line'>\n                <comments :purchaseRequest='purchaseRequest'></comments>\n              </section>\n            </el-col>\n          </el-row>\n          <el-row class='general-form pms-ui'>\n            <el-col v-for='item in generalSchema' :key='item.field' :span=\"12\">\n              <el-form-item :prop=\"item.field\" :label=\"item.label\">\n                <span class='supplier-gap'>:</span>\n                <section class='supplier-info'>\n                  <el-date-picker v-if='item.type === \"date\"' :value-format='`dd/MM/yyyy`' @change='getInboundDateInfo' v-model=\"purchaseOrder.generalInformation[item.field]\" type=\"date\"></el-date-picker>\n                  <el-select v-else-if='item.type === \"select\"' v-model=\"purchaseOrder.generalInformation[item.field]\">\n                    <el-option v-for=\"country in countryList\" :key=\"country\" :label=\"country\" :value=\"country\"></el-option>\n                  </el-select>\n                  <span v-else-if=\"item.type === 'text'\">{{purchaseOrder.generalInformation[item.field]}}</span>\n                  <el-input v-else v-model=\"purchaseOrder.generalInformation[item.field]\"></el-input>\n                </section>\n              </el-form-item>\n            </el-col>\n          </el-row>\n          <sku-upload\n            @uploadSuccess='uploadSuccess'\n            v-if=\"!hiddenSkuModule\"\n            :title=\"$t('purchaseOrder.SKU_Information')\"\n            :actionUrl='`/api/purchase_request/${$route.params.requestID}/generate_po/upload/`'\n            :config=\"{ buttonText: $t('purchaseOrder.massUpdateSKU'), templateLink: `/api/purchase_request/${$route.params.requestID}/generate_po/export_skus/`}\"\n          >\n          </sku-upload>\n          <PoSkuList\n            v-if=\"!hiddenSkuModule\"\n            :purchaseOrder='purchaseOrder'\n            :unitList='unitList'\n            :purchasePriceConf='purchasePriceConf'\n            @removeSku='onRemove'\n          />\n          <section v-if='countryGiftConf.flag'>\n            <section class='gift-action-row'>\n              <span class='gift-title'>{{$t('purchaseRequest.giftInfo')}}</span>\n              <el-row type='flex' align='middle' justify='end' :gutter='10'>\n                <el-col :span=\"3.5\">\n                  <el-button v-if=\"!hiddenSkuModule\" class='list-btn' @click=\"onAddAboveGift\" :disabled=\"!purchaseOrder.supplier.supplierID\">{{$t('purchaseRequest.addAboveGift')}}</el-button>\n                </el-col>\n                <el-col :span=\"3.5\">\n                  <el-button class='list-btn' @click=\"onAddNewGift\" :disabled=\"!purchaseOrder.supplier.supplierID\">{{$t('purchaseRequest.addNewGift')}}</el-button>\n                </el-col>\n              </el-row>\n            </section>\n            <gift-list :skuList='purchaseOrder.skuList' :isPO=true :giftList='purchaseOrder.giftList' :unitList='unitList' @updateGiftSkuUnit='updateSkuUnit' @updateGiftSKUValue='updateGiftSKUValue' @onRemoveGift='onRemoveGift'></gift-list>\n          </section>\n          <ServiceAddtionInfo\n            :additionList=\"service_addition_list\"\n            :skuList='purchaseOrder.skuList'\n          />\n          <attachment :attachmentList=\"attachmentList\" :isShowBtn=\"false\" :isAllowDelete=\"false\" @setLoadingStatus=\"setLoadingStatus\"/>\n          <add-gift-dialog\n            v-if='countryGiftConf.flag'\n            :visible='dialogVisible'\n            :warehouse='purchaseOrder.supplier.warehouse'\n            :supplierID='purchaseOrder.supplier.supplierID'\n            :prSkuList='purchaseOrder.skuList'\n            :dialogType='dialogType'\n            :sbsVendorId='purchaseOrder.supplier.sbsVendorId'\n            @close='onCloseChooseSKU'\n            @submitSKU='onConfirmChooseSKU'\n          >\n          </add-gift-dialog>\n        </el-form>\n        <span class='gift-title gift-action-row'>{{$t('purchaseRequest.inboundTitle')}}</span>\n        <expected-inbound-table :showTitle=false :inboundTableData='inboundTableData' :inboundPlanningData='inboundPlanningData'></expected-inbound-table>\n      </el-main>\n    </el-container>\n    <remove-sku-reason @confirmRemove='onRemoveDialog' @close='onRemoveCancel' :visible='dialogRemoveVisible'></remove-sku-reason>\n  </div>\n</template>\n\n<script>\nimport { createPurchaseOrder, getInboundDateCheck, removePurchaseOrderSKUItem } from '@/api/purchaseOrder';\nimport { getSkusUnitList } from '@/api/unitConfig';\nimport { getPurchaseRequestDetail, getPurchasePriceConf, getCountryGiftConf } from '@/api/purchaseRequest';\nimport { parsePurchaseRequestCreate, parsePurchaseRequestDetail } from '@/utils/index';\nimport { validateDate, isValidPOSkuList, isValidPOGiftList, isValidGiftUnit } from '@/utils/validate';\nimport { CBNominationType, SKUReason, POCountryList, OrderType } from '@/utils/constant';\nimport { formatValue, formatSkuServiceTypes } from '@/utils/format';\nimport moment from 'moment';\nimport Comments from '@/components/Comments';\nimport SkuUpload from '@/components/upload/skuUpload';\nimport RemoveSkuReason from '@/components/Dialog/removeSkuReason';\nimport AddGiftDialog from '@/components/Dialog/addSkuDialog';\nimport PoSkuList from '@/components/Sku/poSku';\nimport GiftList from '@/components/Sku/gift';\nimport ExpectedInboundTable from './expectedDateTable';\nimport attachment from '@/components/Attachment';\nimport attachMixins from '@/components/Attachment/mixins';\nimport ServiceAddtionInfo from './serviceAddtionInfo';\n\nconst validateAdditionService = (skuList, additionList) => {\n  const updateItems = [];\n\n  const existSkuIds = skuList.map(item => item.sku_id);\n  const filteredAdditionList = additionList.filter(item => existSkuIds.includes(item.sku_id));\n  filteredAdditionList.forEach(({sku_id, sku_name, service_list}) => {\n    const target = skuList.find(item => item.sku_id === sku_id);\n    const maxApprovedQty = target.confirmedQty * target.unit_rate;\n    service_list.forEach(({service_type, approved_service_qty}) => {\n      if (maxApprovedQty < approved_service_qty) {\n        updateItems.push({sku_id, sku_name, service_type, before: approved_service_qty, after: maxApprovedQty});\n      }\n    });\n  });\n\n  if (!updateItems.length) {\n    return '';\n  }\n\n  return updateItems.map(({sku_id, sku_name, service_type, before, after}) => (\n    `${sku_id}/${sku_name} ${formatSkuServiceTypes([service_type])}: ${before} --> ${after}`\n  )).join('<br />');\n};\n\nexport default {\n  name: 'poCreate',\n  mixins: [attachMixins],\n  data() {\n    return {\n      requestID: '',\n      purchaseOrder: {\n        supplier: {},\n        skuList: [],\n        giftList: [],\n        totalValue: 0,\n        generalInformation: {\n          expectedInboundDate: '',\n          countryFrom: '',\n          countryTo: '',\n          trackingNumber: '',\n          logisticsChannel: ''\n        },\n        CBNominationType: '',\n        ebsCompanyCode: ''\n      },\n      service_addition_list: [],\n      inboundTableData: [],\n      inboundPlanningData: [],\n      rules: {\n        expectedInboundDate: [{ required: true, validator: validateDate }],\n        countryFrom: [{ required: true }],\n        countryTo: [{ required: true }]\n      },\n      dialogRemoveVisible: false,\n      removeIndex: 0,\n      removeRow: {},\n      countryList: POCountryList,\n      reasonList: SKUReason,\n      purchasePriceConf: {},\n      countryGiftConf: {},\n      originSkus: [],\n      dialogVisible: false,\n      actionLoading: false,\n      dialogType: 2,\n      unitList: [],\n      unitFlag: false,\n      purchaseRequest: {\n        totalValue: 0,\n        lastApprovalTotalValue: 0\n      },\n      budgetGroup: ['FMCG', 'LifeStyle']\n    };\n  },\n  components: {\n    ExpectedInboundTable,\n    SkuUpload,\n    RemoveSkuReason,\n    PoSkuList,\n    Comments,\n    GiftList,\n    AddGiftDialog,\n    attachment,\n    ServiceAddtionInfo\n  },\n  computed: {\n    isAllReInbound() {\n      const list = this.purchaseRequest.skuList || [];\n      return list.length && list.every(item => item.reason === 'Re-Inbound');\n    },\n    getTotalValue() {\n      let sum = 0;\n      for (let i = 0; i < this.purchaseOrder.skuList.length; i++) {\n        sum += this.purchaseOrder.skuList[i].value;\n      }\n      sum = Math.round(sum * 100) / 100;\n      this.purchaseOrder.totalValue = sum;\n      return this.purchaseOrder.totalValue;\n    },\n    generalSchema() {\n      return [\n        { label: this.$t('purchaseOrder.expectedInboundDate'), field: 'expectedInboundDate', type: this.purchaseRequest.expectedInboundDate ? 'text' : 'date' },\n        ...(this.isCBSupplier ? [{ label: this.$t('purchaseOrder.countryFrom'), field: 'countryFrom', type: 'select' }] : []),\n        ...(this.isCBSupplier ? [{ label: this.$t('purchaseOrder.countryTo'), field: 'countryTo', type: 'select' }] : [])\n      ];\n    },\n    allSkuIDList() {\n      return [...new Set([...this.purchaseOrder.skuList.map(item => item.skuID), ...this.purchaseOrder.giftList.map(item => item.skuID)])];\n    },\n    hiddenSkuModule() {\n      return this.purchaseRequest.orderType === 2;\n    },\n    isCBSupplier() {\n      return this.purchaseOrder.supplier.supplierType === 'CB';\n    },\n    supplierInfo() {\n      const configs = [\n        {\n          leftLabel: 'purchaseRequest.regionWarehouse',\n          leftValue: `${this.purchaseRequest.country}/${this.purchaseRequest.warehouse}`,\n          rightLabel: 'purchaseRequest.prTotalValue',\n          rightValue: `${this.formatValue(Number(this.purchaseRequest.totalValue).toFixed(2))} ${this.purchaseOrder.currency}`\n        },\n        {\n          leftLabel: 'purchaseRequest.requester',\n          leftValue: `${this.purchaseRequest.requester}`,\n          rightLabel: 'purchaseRequest.lastApprovalTotalValue',\n          rightValue: `${this.formatValue(Number(this.purchaseRequest.lastApprovalTotalValue).toFixed(2))} ${this.purchaseOrder.currency}`\n        },\n        {\n          leftLabel: 'purchaseRequest.supplierName',\n          leftValue: `${this.purchaseOrder.supplier.supplierName}`,\n          rightLabel: 'purchaseRequest.approvalTotalValue',\n          rightValue: `${this.formatValue(Number(this.getTotalValue).toFixed(2))} ${this.purchaseOrder.currency}`\n        },\n        { leftLabel: 'purchaseOrder.vendorSideID', leftValue: `${this.purchaseOrder.supplier.supplierID}`, line: true },\n        // { leftLabel: 'purchaseRequest.supplierID', leftValue: `${this.purchaseOrder.supplier.parentSupplierID}` },\n        { leftLabel: 'purchaseOrder.ebsCompanyCode', leftValue: `${this.purchaseOrder.ebsCompanyCode}` },\n        { leftLabel: 'purchaseOrder.supplierType', leftValue: `${this.purchaseOrder.supplier.supplierType}` },\n        { leftLabel: 'purchaseRequest.purchaseType', leftValue: `${this.purchaseOrder.supplier.purchaseType}` },\n        { leftLabel: 'purchaseRequest.paymentTerms', leftValue: `${this.purchaseOrder.supplier.paymentTerms}` },\n        { leftLabel: 'purchaseRequest.moq', leftValue: `${this.purchaseOrder.supplier.moq}` },\n        { leftLabel: 'purchaseRequest.orderType', leftValue: (OrderType.find(item => item.value === this.purchaseRequest.orderType) || {}).label || '' }\n      ];\n      if (this.purchaseOrder.supplier.supplierType === 'CB') {\n        const cbItem = CBNominationType.find(item => item.value === this.purchaseOrder.CBNominationType) || {};\n        configs.push({\n          leftLabel: 'purchaseRequest.CBNominationType',\n          leftValue: cbItem.label // cb新增字段\n        });\n      }\n      return configs;\n    }\n  },\n  watch: {\n    async allSkuIDList(newList, oldList) {\n      if (!newList.length) return;\n      const size = new Set([...newList, ...oldList]).size;\n      if (size !== newList.length || size !== oldList.length) {\n        await this.getUnitList(newList);\n      }\n      [...this.purchaseOrder.skuList, ...this.purchaseOrder.giftList].filter(item => !item.unit_id).forEach(item => {\n        const unitConfig = this.unitList.find(unit => unit.sku_id === item.skuID) || {};\n        item.unit_id = unitConfig.default_unit_id;\n        const skuUnit = unitConfig.sku_unit_list.find(unit => unit.unit_id === unitConfig.default_unit_id) || {};\n        item.unit_rate = skuUnit.unit || 1;\n        item.guidePurchasePrice = skuUnit.guide_purchase_price || item.guidePurchasePrice;\n      });\n    }\n  },\n  methods: {\n    formatValue,\n    getSkuUnitList(row = {}) {\n      return (this.unitList.find(item => item.sku_id === row.skuID) || {}).sku_unit_list || [];\n    },\n    updateSkuUnit(row) {\n      const skuUnitList = this.getSkuUnitList(row);\n      const unitConfig = skuUnitList.find(item => item.unit_id === row.unit_id) || {};\n      row.unit_rate = unitConfig.unit || 1;\n      row.guidePurchasePrice = unitConfig.guide_purchase_price || row.guidePurchasePrice;\n    },\n    getUnitList(list) {\n      if (!this.unitFlag) return Promise.resolve([]);\n      return getSkusUnitList({ sbsVendorId: this.purchaseOrder.supplier.sbsVendorId, skus: list }).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.unitList = resp.data.sku_list || [];\n        }\n      });\n    },\n    uploadSuccess(res) {\n      if (res.status === 58) {\n        const skuIDStr = (res.data.purchase_price_cannot_modify_sku_ids || []).join(',');\n        const h = this.$createElement;\n        this.$msgbox({\n          title: 'Tips',\n          message: h('div', null, [\n            h('p', { style: 'color: green; font-size: 16px;' }, 'Upload successfully!'),\n            h('p', null, 'Purchase price(pre-tax) in file is different from that in system: sku id'),\n            h('p', null, skuIDStr)\n          ]),\n          showCancelButton: true,\n          showConfirmButton: false,\n          closeOnClickModal: false,\n          cancelButtonText: this.$t('purchaseRequest.close')\n        }).catch(() => {});\n      } else {\n        this.$message.success('Upload Success!');\n      }\n      this.getPRDetail(true, res.data.upload_skus || []);\n    },\n    goBack() {\n      this.$router.back();\n    },\n    onAddAboveGift() {\n      this.dialogType = 2;\n      this.dialogVisible = true;\n    },\n    onAddNewGift() {\n      this.dialogType = 3;\n      this.dialogVisible = true;\n    },\n    onConfirmChooseSKU(skuListSelected) {\n      const list = skuListSelected.filter(item => !this.purchaseOrder.giftList.find(sku => sku.skuID === item.skuID)).map(item => Object.assign({}, item, {\n        sourcingStatus: 0,\n        tax: 0,\n        initQuantity: null,\n        quantity: null,\n        purchasePrice: 0,\n        reason: 'Deal',\n        comment: '',\n        unit_id: '',\n        unit_rate: 1,\n        value: 0,\n        type: 1\n      }));\n      this.purchaseOrder.giftList = [...this.purchaseOrder.giftList, ...list];\n      this.dialogVisible = false;\n    },\n    onCloseChooseSKU() {\n      this.dialogVisible = false;\n    },\n    getInboundDateInfo() {\n      const isDateString = moment(this.purchaseOrder.generalInformation.expectedInboundDate, 'DD/MM/YYYY').isValid();\n      if (!isDateString) return;\n      const params = {\n        expected_inbound_date_str: this.purchaseOrder.generalInformation.expectedInboundDate,\n        warehouse: this.purchaseOrder.supplier.warehouse\n      };\n      getInboundDateCheck(params).then(resp => {\n        if (resp.status !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          const data = resp.data.inbound_order_check || {};\n          this.inboundTableData = Object.keys(data).map(item => ({\n            date: this.purchaseOrder.generalInformation.expectedInboundDate,\n            POID: item,\n            PRID: data[item].request_id,\n            sku: data[item].sku_count,\n            skuTotal: data[item].sku_total_quantity,\n            totalQty: data[item].total_inbound_quantity\n          }));\n          const maxQuantity = resp.data.expected_inbound_date_max_quantity;\n          this.inboundPlanningData = [\n            { label: this.$t('approvalFlow.maxInboundCapacity'), value: maxQuantity === 0 ? '--' : maxQuantity }\n          ];\n          if (this.purchaseOrder.country === 'TW') {\n            let valueText = '--';\n            if (maxQuantity !== 0) {\n              const currentQuantity = resp.data.expected_inbound_date_real_quantity;\n              const rate = Math.round(currentQuantity * 100 / maxQuantity) || 0;\n              valueText = `${rate}%`;\n            }\n            this.inboundPlanningData = [...this.inboundPlanningData, { label: this.$t('approvalFlow.rate'), value: valueText, text: '' }];\n          }\n        }\n      });\n    },\n    onRemove(index, row) {\n      this.removeIndex = index;\n      this.removeRow = row;\n      this.dialogRemoveVisible = true;\n    },\n    onRemoveGift(index, row) {\n      this.$confirm('sure to delete？').then(() => {\n        const params = {\n          remove_sku_list: [{ request_id: this.requestID, sku_id: row.skuID, remark: '', type: row.type }]\n        };\n        removePurchaseOrderSKUItem(params).then(resp => {\n          if (resp.retcode !== 0) {\n            this.$message.error(resp.info);\n          } else {\n            this.purchaseOrder.giftList.splice(index, 1);\n          }\n        });\n      }).catch(() => {});\n    },\n    updateGiftSKUValue(row) {\n      if (row.quantity <= 0) {\n        this.$message.error('Quantity is not more than 0. when sku = ' + row.skuID);\n      }\n    },\n    onRemoveCancel() {\n      this.dialogRemoveVisible = false;\n    },\n    onRemoveDialog(reason) {\n      const index = this.removeIndex;\n      const row = this.removeRow;\n      const params = {\n        remove_sku_list: [{ request_id: this.requestID, sku_id: row.skuID, remark: reason, type: row.type }]\n      };\n      removePurchaseOrderSKUItem(params).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.purchaseOrder.skuList.splice(index, 1);\n          this.dialogRemoveVisible = false;\n        }\n      });\n    },\n    onConfirmCreate() {\n      if (this.actionLoading) return;\n      this.$confirm(this.$t('purchaseOrder.generatePOConfirmContent'), this.$t('purchaseOrder.dialogTitle'), {\n        showCancel: true\n      }).then(() => {\n        this.onConfirm();\n      }).catch(() => {});\n    },\n    onConfirm() {\n      this.$refs.createPurchaseOrderForm.validate(valid => {\n        if (valid) {\n          const priceConfig = this.purchasePriceConf[this.purchaseOrder.supplier.purchaseType.toLowerCase()];\n          const { skuList, giftList } = this.purchaseOrder;\n          if ((!this.hiddenSkuModule && skuList.length < 1) || (this.hiddenSkuModule && giftList.length < 1)) {\n            return this.$message.error('Please Choose Some SKU First!');\n          }\n          const skuErrorMessage = isValidPOSkuList(skuList, priceConfig) || isValidPOGiftList(giftList) || isValidGiftUnit(skuList, giftList);\n          if (skuErrorMessage) {\n            this.$message.error(skuErrorMessage);\n            return;\n          }\n          const nowTime = (new Date()).getTime() - 3600 * 24 * 1000;\n          const expectedTime = +moment(this.purchaseOrder.generalInformation.expectedInboundDate, 'DD/MM/YYYY');\n          if (expectedTime < nowTime) {\n            this.$message.error('Expected Inbound Date should not less than today.');\n            return;\n          }\n          const hasSKUWarning = [];\n          skuList.forEach(sku => {\n            if (sku.confirmedQty * sku.unit_rate < sku.min_order_quantity && sku.reason !== 'Re-Inbound') {\n              hasSKUWarning.push(sku.skuID);\n            }\n          });\n          if (hasSKUWarning.length > 0) {\n            this.$confirm(`Confirmed qty for [SKU ID: ${hasSKUWarning.join()}] must be >= MOQ. Please revise the confirmed qty or remove this SKU to proceed`, 'Warning', {\n              confirmButtonText: 'Confirm',\n              cancelButtonText: 'Cancel',\n              type: 'warning'\n            }).then(() => {\n              this.checkAdditionServiceInfo();\n            }).catch(() => {});\n          } else {\n            this.checkAdditionServiceInfo();\n          }\n        }\n      });\n    },\n    checkAdditionServiceInfo() { // 确认提交前校验sku附加服务信息\n      const updateMessage = validateAdditionService(this.purchaseOrder.skuList, this.service_addition_list);\n      if (updateMessage) {\n        this.$confirm(\n          this.$t('POAdditionServiceUpdateTip') + '<br />' + updateMessage,\n          this.$t('serviceUpdateConfirm'),\n          {\n            confirmButtonText: this.$t('commonConfirm'),\n            cancelButtonText: this.$t('commonCancel'),\n            type: 'warning',\n            customClass: 'addition-service-update-comfirm',\n            dangerouslyUseHTMLString: true\n          }\n        ).then(() => {\n          this.generatepo();\n        }).catch(() => {});\n      } else {\n        this.generatepo();\n      }\n    },\n    generatepo() {\n      const params = {\n        request_id: this.requestID,\n        supplier_id: this.purchaseOrder.supplier.supplierID,\n        supplier_name: this.purchaseOrder.supplier.supplierName,\n        purchase_type: this.purchaseOrder.supplier.purchaseType,\n        category_id: this.purchaseOrder.supplier.categoryID,\n        warehouse: this.purchaseOrder.supplier.warehouse,\n        expected_inbound_date_str: this.purchaseOrder.generalInformation.expectedInboundDate,\n        country_from: `${this.purchaseOrder.generalInformation.countryFrom}`.trim(),\n        country_to: `${this.purchaseOrder.generalInformation.countryTo}`.trim(),\n        tracking_number: `${this.purchaseOrder.generalInformation.trackingNumber}`.trim(),\n        logistics_channel: `${this.purchaseOrder.generalInformation.logisticsChannel}`.trim(),\n        status: 1,\n        total_value: this.purchaseOrder.totalValue,\n        sku_list: [...this.purchaseOrder.skuList, ...this.purchaseOrder.giftList].map(sku => {\n          const normalSku = sku.type === 1 ? (this.purchaseOrder.skuList.find(item => item.skuID === sku.skuID) || {}) : sku;\n          return {\n            sku_id: sku.skuID,\n            sku_name: sku.skuName,\n            comment: sku.comment,\n            external_sku_id: sku.externalSkuID,\n            confirmed_quantity: sku.type === 1 ? Number(sku.quantity) : Number(sku.confirmedQty),\n            confirmed_purchase_price: sku.type === 1 ? 0 : Number(sku.confirmedPurchasePrice),\n            value: sku.type === 1 ? 0 : Number(sku.value),\n            type: sku.type,\n            reason: this.isAllReInbound ? 'Re-Inbound' : normalSku.reason || 'Deal',\n            expected_sales_date_str: normalSku.reason === 'Pre-Order' ? (normalSku.expected_sales_date_str || '') : '',\n            expected_fulfill_date_str: normalSku.reason === 'Pre-Order' ? (normalSku.expected_fulfill_date_str || '') : '',\n            unit_id: sku.unit_id,\n            unit_rate: sku.unit_rate\n          };\n        }),\n        cb_nomination_type: this.purchaseOrder.CBNominationType\n      };\n      params.change = [];\n      this.purchaseOrder.skuList.forEach(sku => {\n        if (sku.approvalQuantity !== sku.confirmedQty) {\n          params.change.push(`${sku.skuID} ${sku.approvalQuantity} --> ${sku.confirmedQty}`);\n        }\n        if (sku.purchasePriceInPR !== sku.confirmedPurchasePrice) {\n          params.change.push(`${sku.skuID} ${sku.purchasePriceInPR}${this.purchaseOrder.currency} --> ${sku.confirmedPurchasePrice}${this.purchaseOrder.currency}`);\n        }\n      });\n      this.purchaseOrder.giftList.forEach(gift => {\n        if (gift.initQuantity !== gift.quantity) {\n          params.change.push(`${gift.skuID}(gift) ${gift.initQuantity || 0} --> ${gift.quantity}`);\n        }\n      });\n      this.originSkus.forEach(sku => {\n        const nowSku = params.sku_list.find(item => item.sku_id === sku.skuID && item.type === sku.type);\n        if (!nowSku) {\n          params.change.push(`${sku.skuID}${sku.type === 0 ? '' : '(gift)'} Removed`);\n        } else if (nowSku.unit_id !== sku.unit_id) {\n          const skuUnitList = (this.unitList.find(item => item.sku_id === nowSku.sku_id) || {}).sku_unit_list || [];\n          const unitConfig = skuUnitList.find(item => item.unit_id === nowSku.unit_id) || {};\n          params.change.push(`${sku.skuID}${sku.type === 0 ? '' : '(gift)'} unit: ${sku.unit_name} --> ${unitConfig.unit_name}`);\n        }\n      });\n      this.actionLoading = true;\n      createPurchaseOrder(params).then(resp => {\n        this.actionLoading = false;\n        if (resp.status !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.$message.success(resp.info);\n          this.$router.push({ path: `/admin/purchase/order/podetail/${resp.data.order_id}` });\n        }\n      }).catch(() => {\n        this.$message.error('Failed');\n        this.actionLoading = false;\n      });\n    },\n    getPRDetail(useUpload, uploadList = []) {\n      const requestID = this.$route.params.requestID;\n      this.requestID = requestID;\n      getPurchaseRequestDetail(requestID).then(async resp => {\n        if (resp.status !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          const data = parsePurchaseRequestCreate(resp.data);\n          this.purchaseRequest = parsePurchaseRequestDetail(resp.data);\n          if (resp.data['attachment_list']) {\n            this.resetAPIData(resp.data['attachment_list']);\n          }\n          this.purchaseOrder.ebsCompanyCode = resp.data['company_code'];\n          this.purchaseOrder.CBNominationType = data['CBNominationType'];\n          this.purchaseOrder.generalInformation.expectedInboundDate = data.expectedInboundDate || '';\n          this.purchaseOrder.supplier = data['supplier'];\n          const isValidSku = this.purchaseRequest.country === 'ID' && /^[O|o]utright$/g.test(this.purchaseRequest.supplier.purchaseType);\n          this.purchaseOrder.skuList = data['skuList'].map(sku => {\n            const uploadData = uploadList.find(item => item.sku_id === sku.skuID) || {};\n            const useUploadSalesDate = useUpload && uploadData.expected_sales_date_str && sku.type === 0 && sku.reason === 'Pre-Order';\n            const useUploadFulfillDate = useUpload && uploadData.expected_fulfill_date_str && sku.type === 0 && sku.reason === 'Pre-Order';\n            const tax = Number(sku.tax);\n            const confirmedPurchasePrice = useUpload && sku.po_confirmed_price >= 0 ? sku.po_confirmed_price : sku.purchasePriceInPR;\n            if (isValidSku && this.budgetGroup.includes(sku.budget_cluster_code) && sku.reason !== 'Re-Inbound') {\n              sku.purchasePriceDisabled = true;\n            }\n            const confirmedQty = useUpload && sku.po_confirmed_quantity >= 0 ? sku.po_confirmed_quantity : sku.approvalQuantity;\n            const purchasePriceAfter = Math.round(confirmedPurchasePrice * (100 + tax)) / 100;\n            const item = {\n              unit_id: useUpload && sku.po_confirmed_unit_id ? sku.po_confirmed_unit_id : sku.unit_id,\n              unit_rate: useUpload && sku.po_confirmed_unit_rate ? sku.po_confirmed_unit_rate : sku.unit_rate,\n              sourcingStatus: Number(sku.sourcingStatus),\n              confirmedQty,\n              confirmedPurchasePrice,\n              purchasePriceAfter,\n              value: Math.round(confirmedQty * confirmedPurchasePrice * (100 + tax)) / 100,\n              expected_sales_date_str: useUploadSalesDate ? uploadData.expected_sales_date_str || '' : sku.expected_sales_date_str || '',\n              expected_fulfill_date_str: useUploadFulfillDate ? uploadData.expected_fulfill_date_str || '' : sku.expected_fulfill_date_str || ''\n            };\n            return Object.assign({}, sku, item);\n          });\n          this.purchaseOrder.country = data['country'];\n          this.purchaseOrder.currency = data['currency'];\n          const giftList = [];\n          const removeList = [];\n          const skuList = [];\n          this.purchaseOrder.skuList.forEach(item => {\n            if (!item.confirmedQty && item.type === 0) {\n              removeList.push({ request_id: this.requestID, sku_id: item.skuID, remark: '', type: item.type });\n            } else if (item.type === 0) {\n              skuList.push(item);\n            } else if (item.type === 1) {\n              giftList.push(item);\n            }\n          });\n          this.purchaseOrder.skuList = skuList;\n          this.purchaseOrder.giftList = giftList;\n          if (!useUpload) this.originSkus = [...skuList, ...giftList].map(item => ({ ...item }));\n          if (removeList.length) {\n            await removePurchaseOrderSKUItem({ remove_sku_list: removeList }).then(resp => {\n              if (resp.retcode !== 0) {\n                this.$message.error(resp.info);\n              }\n            });\n          }\n          this.service_addition_list = resp.data.service_addition_list || [];\n          if (useUpload) return;\n          await getPurchasePriceConf({\n            country: this.purchaseOrder.country\n          }).then(resp => {\n            if (resp.status !== 0) {\n              this.$message.error(resp.info);\n            } else {\n              this.purchasePriceConf = resp.data;\n            }\n          });\n          await getCountryGiftConf({\n            country: this.purchaseOrder.country\n          }).then(async resp => {\n            if (resp.status !== 0) {\n              this.$message.error(resp.info);\n            } else {\n              this.countryGiftConf = resp.data;\n              this.countryGiftConf.flag_two = this.countryGiftConf.flag_two || 0;\n              this.unitFlag = true;\n              await this.getUnitList(this.allSkuIDList);\n              this.getInboundDateInfo();\n            }\n          });\n        }\n      }).catch((e) => {\n        this.$message.error('Get PR Detail Failed!');\n        this.$router.push({ path: '/admin/' });\n      });\n    }\n  },\n  mounted() {\n    this.getPRDetail();\n  }\n};\n</script>\n\n<style>\n  .create-po-page .general-form .el-input__inner, .create-po-page .general-form .el-input {\n    width: 220px;\n  }\n  .create-po-page .general-form  .el-date-editor .el-input__inner {\n    padding-left: 30px;\n  }\n\n  .addition-service-update-comfirm.el-message-box {\n    width: 650px;\n  }\n</style>\n\n<style scoped>\n  .pr-detail-header {\n    position: sticky;\n    margin-bottom: 30px;\n    z-index: 1;\n    top: 0;\n    background: #fff;\n  }\n  .left-info {\n    position: absolute;\n    top: 0;\n    left: 20px;\n    min-width: 20%;\n    padding-left: 5px;\n    height: 60px;\n    line-height: 60px;\n    border-bottom: 2px solid #f0f2f5;\n  }\n  .right-op {\n    position: absolute;\n    top: 0;\n    right: 20px;\n    padding-left: 5px;\n    height: 60px;\n    line-height: 60px;\n  }\n  .pr-back-icon {\n    display: inline-block;\n    margin-right: 10px;\n    transform: scale(1.2);\n  }\n  .pr-id {\n    color: rgb(215, 215, 215);\n    font-size: 26px;\n    margin-right: 20px;\n  }\n  .pr-status {\n    color: rgb(244, 171, 97);\n  }\n  .supplier-gap {\n    display: inline-block;\n    margin-left: 8px;\n    vertical-align: top;\n  }\n  .supplier-info {\n    display: inline-block;\n    max-width: 300px;\n    margin-left: 20px;\n    word-break: break-all;\n    vertical-align: middle;\n  }\n  .supplier-right-info {\n    float: right;\n    margin-right: 30px;\n  }\n  .gap-line {\n    position: relative;\n    z-index: 2;\n    height: 1px;\n    width: 80%;\n    float: right;\n    margin-top: 5px;\n    background-color: rgb(225, 225, 225)\n  }\n  .submit-section {\n    position: relative;\n    float: left;\n    width: 180px;\n    height: 50px;\n    margin: 15px 10px 0 0;\n    line-height: 50px;\n    font-size: 14px;\n    color: #86cd57;\n    cursor: pointer;\n    border: 1px solid #86cd57;\n    border-radius: 3px;\n    background-color: #fff;\n    transition: background .3s linear;\n  }\n  .submit-section:hover {\n    background-color: #86cd57;\n    color: #fff;\n    border-color: #fff;\n  }\n  .submit-section:hover .submit-icon {\n    background-position: 0 -1797px;\n  }\n  .submit-icon {\n    display: inline-block;\n    vertical-align: middle;\n    margin-left: 40px;\n  }\n  .submit-btn {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    padding-left: 42px;\n    box-sizing: border-box;\n    text-align: center;\n  }\n  .gift-title {\n    float: left;\n    font-size: 22px;\n    color: rgba(0,0,0,.6);\n  }\n  .gift-action-row {\n    margin: 20px 0;\n  }\n  .gift-action-row .list-btn {\n    width: auto;\n    padding-left: 20px;\n    padding-right: 20px;\n  }\n  .table-date {\n    font-weight: 700;\n  }\n  .general-form {\n    padding-top: 10px;\n    border-top: 1px solid rgb(225, 225, 225);\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/purchaseOrder/dateModifyLog.vue","messages":[{"ruleId":"vue/v-on-style","severity":2,"message":"Expected '@' instead of 'v-on:'.","line":25,"column":44,"nodeType":"VAttribute","endLine":25,"endColumn":71,"fix":{"range":[1530,1535],"text":"@"}},{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"dateHistory\" is not PascalCase.","line":37,"column":9,"nodeType":"Literal","endLine":37,"endColumn":22,"fix":{"range":[1841,1852],"text":"DateHistory"}}],"errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"<template>\n  <el-dialog title=\"Action Log\" :visible.sync=\"dialogVisible\" @close='$emit(\"close\")' class='pms-ui'>\n    <el-container>\n      <el-main>\n        <el-table v-loading=\"loading\" :data=\"histories\" size=\"mini\" border>\n          <el-table-column type=\"index\" :label=\"`No.`\"></el-table-column>\n          <el-table-column :label=\"$t('asnControlActionTime')\">\n            <template slot-scope='scope'>{{moment(scope.row.ctime * 1000).format('YYYY-MM-DD HH:mm')}}</template>\n          </el-table-column>\n          <el-table-column prop=\"operator\" :label=\"$t('opHistory.operator')\"></el-table-column>\n          <el-table-column prop=\"before_str\" :label=\"$t('asnControlTimeBeforeModification')\"></el-table-column>\n          <el-table-column prop=\"after_str\" :label=\"$t('asnControlTimeAfterModification')\"> </el-table-column>\n          <el-table-column :label=\"$t('asnControlModificationReason')\">\n            <template slot-scope='scope'>{{scope.row.modify_reason === 5 ? scope.row.modify_other_reason :\n              (ASNChangeReasonList.find(item => item.value === scope.row.modify_reason) || {}).label || ''\n            }}</template>\n          </el-table-column>\n        </el-table>\n        <div class=\"content-center padding-top-bottom\">\n          <el-pagination background layout=\"prev, pager, next\" :current-page='page'\n          :total.sync=\"total\" :page-size=\"10\" @current-change=\"handleChangePage\"></el-pagination>\n        </div>\n      </el-main>\n      <el-footer align='right'>\n        <div class=\"dialog-right-list-btn\" v-on:click='$emit(\"close\")'>{{$t('purchaseRequest.close')}}</div>\n      </el-footer>\n    </el-container>\n  </el-dialog>\n</template>\n\n<script>\nimport { getInboundDateLog } from '@/api/purchaseOrder';\nimport { ASNChangeReasonList } from '@/utils/constant';\nimport moment from 'moment';\n\nexport default {\n  name: 'dateHistory',\n  data() {\n    return {\n      ASNChangeReasonList,\n      histories: [],\n      dialogVisible: false,\n      loading: false,\n      page: 1,\n      total: 0\n    };\n  },\n  props: {\n    visible: {\n      default: false\n    },\n    orderID: {\n      required: true\n    }\n  },\n  methods: {\n    moment,\n    handleChangePage(pageIndex) {\n      this.page = pageIndex;\n      this.fetchHistories(pageIndex);\n    },\n    fetchHistories(page) {\n      const parmas = {\n        order_id: this.$props.orderID,\n        page_no: page || this.page,\n        count: 10\n      };\n      getInboundDateLog(parmas).then(resp => {\n        if (resp.status !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.total = resp.data.total;\n          this.histories = resp.data.change_list || [];\n        }\n      });\n    }\n  },\n  watch: {\n    '$props.visible': function(now, prev) {\n      this.dialogVisible = now;\n      if (now) {\n        this.fetchHistories();\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.dialog-right-list-btn {\n  display: inline-block;\n  font-size: 14px;\n  color: #fff;\n  background-color: #3d6ed1;\n  height: 32px;\n  width: 70px;\n  cursor: pointer;\n  line-height: 32px;\n  text-align: center;\n  cursor: pointer;\n  border-radius: 3px;\n  vertical-align: middle;\n  font-weight: bolder;\n  padding: 0;\n  border: 0;\n  font-weight: 400;\n  font-family: \"Helvetica Light\",\"Helvetica Neue Light\",Helvetica,Arial,sans-serif;\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/purchaseOrder/detail.vue","messages":[{"ruleId":"vue/v-on-style","severity":2,"message":"Expected '@' instead of 'v-on:'.","line":82,"column":71,"nodeType":"VAttribute","endLine":82,"endColumn":96,"fix":{"range":[5379,5384],"text":"@"}},{"ruleId":"vue/no-side-effects-in-computed-properties","severity":2,"message":"Unexpected side effect in \"getPrTotalValue\" computed property.","line":298,"column":7,"nodeType":"AssignmentExpression","endLine":298,"endColumn":44}],"errorCount":2,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div id=\"app-container\" class=\"po-detail\">\n    <el-container>\n      <el-header class='po-detail-header'>\n        <section class='left-info'>\n          <span class='po-back-icon sprite-btn-back' @click='goBack'></span>\n          <span class='po-id'>{{$route.params.order_id}}</span>\n          <span class='po-status'>{{purchaseOrder.statusText}}</span>\n        </section>\n        <section class='right-op'>\n          <el-dropdown  v-if='canExportPO' class='po-exportGroup-btn' split-button type=\"primary\" @command=\"onExportContentClick\">\n            <span>{{$t('purchaseRequest.export')}}</span>\n            <el-dropdown-menu slot=\"dropdown\">\n              <el-dropdown-item :command=\"btn\" v-for=\"btn in exportBtns\" :key=\"btn.text\" >\n                <span>{{$t(btn.text)}}</span>\n              </el-dropdown-item>\n            </el-dropdown-menu>\n          </el-dropdown>\n          <el-button class='view-btn' v-if=\"purchaseOrder.status !== 4\" type=\"success\" plain size=\"big\" @click='onViewContract' v-loading=\"viewBtnLoading\">{{$t('purchaseOrder.viewContract')}}</el-button>\n        </section>\n        <div class='action-log-btn' @click='showActionDialog'>{{$t('purchaseRequest.actionLog')}}</div>\n      </el-header>\n      <el-main>\n        <h3 class=\"page-title\">{{$t('purchaseOrder.poBasicInformation')}}</h3>\n        <el-form :model=\"purchaseOrder\" label-width=\"200px\" label-position=\"left\" class=\"form-wrapper\">\n          <div class='info-view'>\n            <section class='left-view'>\n              <el-row v-for='item in supplierInfo' :key='item.label' :style='item.style || \"\"'>\n                <el-form-item :label=\"$t(item.label)\">\n                  <span class='supplier-gap'>{{':'}}</span>\n                  <span class='supplier-info'>\n                    {{item.value || ''}}\n                  </span>\n                </el-form-item>\n              </el-row>\n            </section>\n            <section class='right-view'>\n              <el-tabs tab-position='bottom' v-model='activeOverview'>\n                <el-tab-pane name='value' :label=\"$t('budget.poValueOverview')\"></el-tab-pane>\n                <el-tab-pane name='budget' :label=\"$t('budget.budgetOverview')\" v-if='!isAllReInbound && purchaseOrder.supplier.purchaseType === \"Outright\"'></el-tab-pane>\n              </el-tabs>\n              <value-overview :schema='valueSchema' v-if='activeOverview === \"value\"' :overviewInfo='valueInfo'  :usdRate='countryGiftConf.exchange_rate_to_usd' :localCurrency='currency'></value-overview>\n              <budget-overview v-if='activeOverview === \"budget\"' :requestID='purchaseOrder.requestID' :usdRate='countryGiftConf.exchange_rate_to_usd' :localCurrency='currency'></budget-overview>\n            </section>\n          </div>\n          <section class=\"general-info-block general-information-form pms-ui\">\n            <span class='general-information'>{{$t('purchaseOrder.Po_General_Information')}}</span>\n            <el-row v-for=\"(parent, index) in generalInfoSchema\" :key=\"index\">\n              <el-col :span=\"16\">\n                <el-form-item v-for=\"child in parent\" :key=\"child.label\" :label=\"$t(child.label)\">\n                  <span class='supplier-gap'>{{':'}}</span>\n                  <span v-if=\"!child.type || !dateEditing\" class='supplier-info'>{{child.value}}</span>\n                  <el-date-picker class='supplier-info' v-else-if=\"child.type === 'date'\" :value-format='`dd/MM/yyyy`' v-model=\"newInboundDate\" type=\"date\"></el-date-picker>\n                  <el-select v-model=\"changeReason\" class='supplier-info' v-else-if=\"child.type === 'select'\">\n                    <el-option v-for=\"item in child.options\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"></el-option>\n                  </el-select>\n                  <el-input maxlength=\"1024\" v-else-if=\"child.type === 'input'\" v-model=\"changeReasonRemark\" class=\"supplier-info\"></el-input>\n                </el-form-item>\n              </el-col>\n              <el-col class=\"date-btn-module\" v-if=\"index === 0\" align=\"right\" :span=\"8\">\n                <div v-if=\"!!purchaseOrder.expected_inbound_date_modify_reason\" @click=\"showModifyLog\" class=\"date-action-log-btn\">Action Log</div>\n                <div v-if=\"canEdit\" class=\"po-action-btn pms-ui\">\n                  <el-button v-if=\"!dateEditing\" :loading=\"loading\" class=\"list-btn\" @click=\"enableDatePicker\">\n                    {{$t('purchaseRequest.edit')}}\n                  </el-button>\n                  <el-button v-if=\"dateEditing\" :loading=\"loading\" class=\"list-btn cancel-btn\" @click=\"disableDatePicker\">\n                    {{$t('purchaseOrder.cancel')}}\n                  </el-button>\n                  <el-button v-if=\"dateEditing\" :loading=\"loading\" class=\"list-btn\" @click=\"confirmDateChange\">\n                    {{$t('approvalFlow.save')}}\n                  </el-button>\n                </div>\n              </el-col>\n            </el-row>\n          </section>\n          <section v-if=\"!hiddenSkuModule\" class=\"sku-info-block\">\n            <span class='sku-title'>{{$t('purchaseRequest.skuInfo')}}</span>\n            <SkuInfomation :purchaseOrder=\"purchaseOrder\" :currency=\"currency || ''\" :skuList=\"purchaseOrder.skuList\" />\n          </section>\n          <section v-if='countryGiftConf.flag'>\n            <span class='gift-title'>\n              <i :class='`el-icon-${!giftExpand ? \"plus\" : \"minus\"}`' v-on:click=\"onExpandGift\">\n                {{$t('purchaseRequest.giftInfo')}}\n              </i>\n            </span>\n            <el-table v-if='giftExpand' :data=\"purchaseOrder.giftList\" border size=\"mini\">\n              <el-table-column type=\"index\"></el-table-column>\n              <el-table-column prop=\"skuID\" :label=\"$t('purchaseRequest.skuID')\" min-width=\"100\"></el-table-column>\n              <el-table-column prop=\"categoryName\" :label=\"$t('userRole.userList.categoryName')\" min-width=\"120\"></el-table-column>\n              <el-table-column prop=\"skuName\" :label=\"$t('purchaseRequest.skuName')\" min-width=\"100\"></el-table-column>\n              <el-table-column align='center' :label=\"$t('commonSellingType')\" min-width=\"120\">\n                <template slot=\"label\" slot-scope='scope'>\n                  <span>{{$t('commonSellingType')}}</span>\n                  <el-popover placement=\"top\" trigger=\"hover\" width=\"320px\" popper-class=\"break-word\" :content=\"$t('commonSellingTypeTips')\">\n                    <svg-icon slot=\"reference\" iconClass=\"question\"></svg-icon>\n                  </el-popover>\n                </template>\n                <template slot-scope='scope'>{{formatSellingType(scope.row.selling_type)}}</template>\n              </el-table-column>\n              <el-table-column prop=\"unit_name\" :label=\"$t('purchaseRequest.unit')\" min-width=\"90\"></el-table-column>\n              <el-table-column align='center' :label=\"$t('PRConfirmedQty(pcs)')\" width=\"auto\">\n                <template slot-scope='scope'>\n                  {{formatValue(scope.row.confirmedQty * scope.row.unit_rate || 0)}}\n                </template>\n              </el-table-column>\n              <el-table-column align='center' prop='barcode' :label=\"$t('supplier.barCode')\"></el-table-column>\n              <el-table-column align='center' prop='confirmedQty' :label=\"$t('PRGiftQty(unit)')\" min-width=\"135\"></el-table-column>\n            </el-table>\n          </section>\n          <attachment :attachmentList=\"attachmentList\" :isShowBtn=\"false\" :isAllowDelete=\"false\" @setLoadingStatus=\"setLoadingStatus\"/>\n          <ServiceAddtionInfo\n            v-if=\"isShowServiceAdditionInfo\"\n            mode=\"VIEW_DETAIL\"\n            :additionList=\"purchaseOrder.additionSkuList\"\n            :skuList=\"purchaseOrder.skuList\"\n          />\n        </el-form>\n        <section class=\"check-inbound-section\">\n          <CheckInbound :config=\"PoCheckInboundConifg\" ref=\"checkInbound\" @updatePendingASN=\"getPendingASN\">\n            <h3 class=\"section-title\" slot=\"checkInboundTitle\">{{$t('rtsMgt.checkInbound')}}</h3>\n          </CheckInbound>\n        </section>\n        <date-log-dialog :visible='logDialogShow' @close='closeLogDialog' :orderID='$route.params.order_id'></date-log-dialog>\n      </el-main>\n      <action-log-dialog :visible='actionDialogShow' :requestID='$route.params.order_id' @close='closeActionDialog'></action-log-dialog>\n    </el-container>\n  </div>\n</template>\n\n<script>\nimport { isEmpty } from 'lodash';\nimport { getPurchaseOrderDetail, getPurchaseOrderExport, downloadOnePDF, checkPDFSignature, modifyInboundDate } from '@/api/purchaseOrder';\nimport ActionLogDialog from '@/components/actionLogDialog';\nimport { getCountryGiftConf } from '@/api/purchaseRequest';\nimport { parsePurchaseOrderDetail, commonFetchAction, formatSellingType } from '@/utils';\nimport { SKUSourcingStatusText, OrderType, ASNChangeReasonList, CBNominationType, Permission } from '@/utils/constant';\nimport { formatValue } from '@/utils/format.js';\nimport attachment from '@/components/Attachment';\nimport attachMixins from '@/components/Attachment/mixins';\nimport BudgetOverview from '@/views/purchaseRequest/budgetOverview';\nimport ValueOverview from '@/components/Overview/valueOverview';\nimport CheckInbound from '@/components/RTSManagement/checkInbound';\nimport SkuInfomation from './skuInfomation';\nimport DateLogDialog from './dateModifyLog';\nimport moment from 'moment';\nimport { hasPermission } from '@/utils/permission';\nimport { downloadBlobFile } from '@/utils/downloadFile';\nimport { getPendingASN } from '@/api/asn';\nimport { formatParams } from '../../utils/formatParams';\nimport ServiceAddtionInfo from '../purchaseRequest/serviceAddtionInfo';\n\nexport default {\n  name: 'PrDetail',\n  mixins: [attachMixins],\n  data() {\n    return {\n      exportBtns: [\n        { text: 'purchaseOrder.poExcel', onClick: 'onExportPO' },\n        { text: 'purchaseOrder.poContract', onClick: 'onExportContract' }\n      ],\n      viewBtnLoading: false,\n      isFirstShowAddASNDialog: true,\n      purchaseOrder: {\n        requestID: '',\n        orderID: '',\n\n        supplier: {\n          supplierID: '',\n          parentSupplierID: '',\n          supplierName: '',\n          purchaseType: '',\n          categoryID: '',\n          paymentTerms: '',\n          warehouse: '',\n          ebsCompanyCode: ''\n        },\n        CBNominationType: '',\n        skuList: [],\n        additionSkuList: [],\n        giftList: [],\n        prTotalValue: '',\n\n        generalInformation: {\n          expectedInboundDate: '',\n          countryFrom: '',\n          countryTo: '',\n          trackingNumber: '',\n          logisticsChannel: ''\n        }\n      },\n      canExportPO: false,\n      canEditASN: false,\n      canAddASN: false,\n      giftExpand: false,\n      actionDialogShow: false,\n      changeReason: '',\n      changeReasonRemark: '',\n      logDialogShow: false,\n      canEdit: false,\n      dateEditing: false,\n      loading: false,\n      newInboundDate: '',\n      activeOverview: 'value', // value-valueOverview, budget-budgetOverview\n      sourceString: [\n        {\n          value: 0,\n          label: 'available'\n        },\n        {\n          value: 1,\n          label: 'unavailable'\n        }\n      ],\n      countryGiftConf: {},\n      isShowPDFDialog: false,\n      pendingASN: {}\n    };\n  },\n  computed: {\n    isAllReInbound() {\n      const list = this.purchaseOrder.skuList || [];\n      return list.length && list.every(item => item.reason === 'Re-Inbound');\n    },\n    showAddButton() {\n      return [1, 2, 6].includes(this.pendingASN.po_status) && this.pendingASN.sku_list && this.pendingASN.sku_list.length;\n    },\n    PoCheckInboundConifg() {\n      return {\n        canExportASN: this.canEditASN,\n        canAddASN: this.canEditASN && this.showAddButton,\n        order_id: this.$route.params.order_id,\n        region: this.purchaseOrder.country || '',\n        supplier_id: this.purchaseOrder.supplier.supplierID || '',\n        inbound_type: 0\n        // pendingASN: this.pendingASN\n      };\n    },\n    generalInfoSchema() {\n      return [\n        [{ label: 'purchaseOrder.expectedInboundDate', value: this.newInboundDate || this.formatExpectedInboundDate, type: 'date' }],\n        [{ type: 'select', label: 'purchaseOrder.changeReason', options: ASNChangeReasonList,\n          value: (ASNChangeReasonList.find(item => item.value === this.changeReason) || {}).label || '' }],\n        ...(this.changeReason === 5 ? [[{ type: 'input', label: '', value: this.changeReasonRemark }]] : []),\n        [{ label: 'purchaseOrder.countryFrom', value: this.purchaseOrder.generalInformation.countryFrom }],\n        [{ label: 'purchaseOrder.countryTo', value: this.purchaseOrder.generalInformation.countryTo }]\n      ];\n    },\n    formatExpectedInboundDate() {\n      return this.purchaseOrder.generalInformation.expectedInboundDate; // 查看\n    },\n    valueInfo() {\n      return {\n        totalValue: this.purchaseOrder.poTotalValue\n      };\n    },\n    hiddenSkuModule() {\n      return this.purchaseOrder.orderType === 2;\n    },\n    isShowServiceAdditionInfo() {\n      return !this.hiddenSkuModule && !isEmpty(this.purchaseOrder.additionSkuList);\n    },\n    valueSchema() {\n      return [{ label: this.$t('purchaseOrder.poTotalValue'), field: 'totalValue', align: 'left' }];\n    },\n    isSeller() {\n      return this.purchaseOrder.supplier.merchantType === 'SELLER';\n    },\n    supplierInfo() {\n      const configs = [\n        { label: 'purchaseRequest.regionWarehouse', value: `${this.purchaseOrder.country}/${this.purchaseOrder.warehouse}` },\n        { label: 'purchaseRequest.requester', value: `${this.purchaseOrder.requester}` },\n        { label: 'commonVendorName', value: `${this.purchaseOrder.supplier.supplierName}` },\n        { label: 'supplierSBSVendorID', value: `${this.purchaseOrder.sbs_vendor_id}` },\n        { label: 'purchaseOrder.vendorSideID', value: this.isSeller ? '/' : `${this.purchaseOrder.supplier.supplierID}` },\n        // { label: 'purchaseRequest.supplierID', value: `${this.purchaseOrder.supplier.parentSupplierID}` },\n        { label: 'purchaseOrder.ebsCompanyCode', value: this.isSeller ? '/' : `${this.purchaseOrder.ebsCompanyCode}` },\n        { label: 'purchaseOrder.supplierType', value: this.isSeller ? '/' : `${this.purchaseOrder.supplier.supplierType}` },\n        { label: 'purchaseRequest.purchaseType', value: this.isSeller ? '/' : `${this.purchaseOrder.supplier.purchaseType}` },\n        { label: 'purchaseRequest.paymentTerms', value: this.isSeller ? '/' : `${this.purchaseOrder.supplier.paymentTerms}` },\n        { label: 'purchaseRequest.moq', value: this.isSeller ? '/' : `${this.purchaseOrder.supplier.moq}` },\n        { label: 'purchaseRequest.orderType', value: (OrderType.find(item => item.value === this.purchaseOrder.orderType) || {}).label || '' }\n      ];\n      if (this.purchaseOrder.supplier.supplierType === 'CB') {\n        const cbItem = CBNominationType.find(item => item.value === this.purchaseOrder.CBNominationType) || {};\n        configs.push({\n          label: 'purchaseRequest.CBNominationType',\n          value: cbItem.label // cb新增字段\n        });\n      }\n      return configs;\n    },\n    getPrTotalValue() {\n      var sum = 0;\n      for (var i = 0; i < this.purchaseOrder.skuList.length; i++) {\n        sum += Number(this.purchaseOrder.skuList[i].value);\n      }\n      sum = Math.round(sum * 100) / 100;\n      this.purchaseOrder.prTotalValue = sum;\n      return this.purchaseOrder.prTotalValue;\n    },\n    currency() {\n      return this.$store.getters.currencyMap[this.purchaseOrder.warehouse];\n    }\n  },\n  components: {\n    ActionLogDialog,\n    BudgetOverview,\n    DateLogDialog,\n    SkuInfomation,\n    ValueOverview,\n    attachment,\n    CheckInbound,\n    ServiceAddtionInfo\n  },\n  methods: {\n    formatValue,\n    formatSellingType,\n    onExportContentClick(command) {\n      if (command.onClick && typeof this[command.onClick] === 'function') {\n        this[command.onClick]();\n      }\n    },\n    onExportContract() {\n      const { orderID } = this.purchaseOrder;\n      if (orderID) {\n        this.exportOneContract(orderID);\n      }\n    },\n    downloadOnePDF(order_id, cb) {\n      downloadOnePDF(order_id).then(resp => {\n        if (resp.type === 'application/json') {\n          const reader = new FileReader();\n          reader.onloadend = () => {\n            const result = JSON.parse(reader.result);\n            if (result.retcode !== 0) {\n              this.$message({ type: 'error', message: result.info });\n            }\n          };\n          reader.readAsText(resp);\n        } else {\n          cb && cb(resp);\n        }\n      }).catch((e) => { this.$message({ type: 'error', message: e }); });\n    },\n    exportOneContract(order_id) {\n      this.$message({\n        type: 'success',\n        message: this.$t('purchaseOrder.zipDownloading'),\n        during: 0,\n        showClose: true\n      });\n      this.downloadOnePDF(order_id, (resp) => {\n        downloadBlobFile(resp, `${order_id}_${moment().format('YYYYMMDDHHmmss')}.pdf`);\n      });\n    },\n    onViewContract() {\n      this.viewBtnLoading = true;\n      this.checkSignatureStatus();\n    },\n    async checkSignatureStatus() {\n      try {\n        const res = await checkPDFSignature(this.purchaseOrder.orderID);\n        commonFetchAction(res, (data) => {\n          if (data.is_signed === false) {\n            this.$message({ type: 'error', message: this.$t('userRole.userList.lockOfSignature') });\n          }\n          this.viewBtnLoading = false;\n          this.previewPDF();\n        });\n      } catch (e) {\n        this.viewBtnLoading = false;\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    previewPDF() {\n      this.downloadOnePDF(this.purchaseOrder.orderID, (resp) => {\n        const fileUrl = URL.createObjectURL(resp);\n        window.open(`/admin/PDF?file=${fileUrl}`, '_blank');\n      });\n    },\n    goBack() {\n      this.$router.replace('/admin/purchase/order/pending?activeTab=poList');\n    },\n    onExportPO() {\n      const orderID = this.$route.params.order_id;\n      getPurchaseOrderExport(orderID);\n    },\n    onExpandGift() {\n      this.giftExpand = !this.giftExpand;\n    },\n    closeActionDialog() {\n      this.actionDialogShow = false;\n    },\n    showActionDialog() {\n      this.actionDialogShow = true;\n    },\n    enableDatePicker() {\n      this.dateEditing = true;\n    },\n    disableDatePicker() {\n      const reason = this.purchaseOrder.expected_inbound_date_modify_reason || '';\n      this.changeReason = reason;\n      this.changeReasonRemark = this.purchaseOrder.modify_other_reason || '';\n      const inboundDate = this.purchaseOrder.generalInformation.expectedInboundDate;\n      this.newInboundDate = inboundDate;\n      this.dateEditing = false;\n    },\n    confirmDateChange() {\n      if (this.newInboundDate === this.formatExpectedInboundDate) {\n        return this.$message.error('Expected Inbound Date has not been modified.');\n      }\n      if (!this.changeReason || (this.changeReason === 5 && !this.changeReasonRemark)) {\n        return this.$message.error('Change Reason is required.');\n      }\n      const modifyDate = moment(this.newInboundDate, 'DD/MM/YYYY').unix();\n      const baseTime = moment().unix() - 3600 * 24;\n      if (baseTime > modifyDate) {\n        this.$message.error('Expected Inbound Date should not less than today.');\n        return;\n      }\n      const params = formatParams({\n        order_id: this.$route.params.order_id,\n        modify_date_str: moment(this.newInboundDate, 'DD/MM/YYYY').format('YYYY-MM-DD'),\n        modify_reason: this.changeReason,\n        modify_other_reason: this.changeReason === 5 ? this.changeReasonRemark : ''\n      });\n      this.loading = true;\n      const requestFun = (params) => {\n        modifyInboundDate(params).then(resp => {\n          if (resp.retcode === 4311) {\n            const h = this.$createElement;\n            const inboundList = (resp.data && resp.data.confirm_modify_asns) || [];\n            this.$msgbox({\n              title: 'Confirm Update',\n              center: true,\n              customClass: 'pms-confirm-update-box',\n              message: h('div', { class: 'message-box-confirm pms-ui' }, [\n                h('section', { class: 'confirm-info' }, [\n                  h('span', `All the ASN(s)’ expected inbound date will be updated to `),\n                  h('span', { class: 'confirm-date-info' }, `${params.modify_date_str}`)\n                ]),\n                h('section', 'Relevant ASN(s)：'),\n                h('el-table', { class: 'inbound-list', props: {\n                  border: true, data: inboundList\n                }}, [\n                  h('el-table-column', {\n                    props: { label: 'No.', type: 'index' }\n                  }),\n                  h('el-table-column', {\n                    props: { label: 'Inbound ID', prop: 'inbound_id' }\n                  }),\n                  h('el-table-column', {\n                    props: { label: 'Original Expected Inbound Date', prop: 'expected_delivery_date_str' }\n                  }),\n                  h('el-table-column', {\n                    props: { label: 'Action', width: '100px' },\n                    scopedSlots: {\n                      default: scope => h('span', { class: 'detail-action', on: {\n                        click: () => { window.open(`/admin/asn/detail/${scope.row.id}`); }\n                      }}, 'Detail')\n                    }\n                  })\n                ])\n              ]),\n              showCancelButton: true,\n              confirmButtonText: 'Confirm',\n              cancelButtonText: 'Cancel'\n            }).then(() => {\n              params.confirm_modify_asn = 1;\n              requestFun(params);\n            }).catch(() => { this.loading = false; });\n          } else if (resp.retcode !== 0) {\n            this.$message.error(resp.info);\n            this.loading = false;\n          } else {\n            this.$message.success('Success');\n            this.loading = false;\n            this.dateEditing = false;\n            this.getPODetail(this.$route.params.order_id);\n          }\n        }).catch(() => { this.loading = false; });\n      };\n      requestFun(params);\n    },\n    showModifyLog() {\n      this.logDialogShow = true;\n    },\n    closeLogDialog() {\n      this.logDialogShow = false;\n    },\n    getPendingASN() {\n      getPendingASN({ order_id: this.$route.params.order_id, inbound_type: 0 }).then(resp => { // inbound_type 0-PO 1-RTS\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.pendingASN = resp.data;\n          this.pendingASN.sku_list = this.pendingASN.sku_list.filter(sku => !!sku.pending_asn_qty);\n          if (!this.showAddButton) {\n            return;\n          }\n          if (this.$route.query.create && this.isFirstShowAddASNDialog) {\n            this.$nextTick(() => {\n              this.$refs.checkInbound && typeof this.$refs.checkInbound.updatePendingASN === 'function' && this.$refs.checkInbound.updatePendingASN();\n            });\n            this.isFirstShowAddASNDialog = false;\n          }\n        }\n      });\n    },\n    getPODetail(order_id) {\n      getPurchaseOrderDetail(order_id).then(resp => {\n        if (resp.status !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.purchaseOrder = parsePurchaseOrderDetail(resp.data);\n          this.canEdit = hasPermission(Permission.EDIT_INBOUND_INFO) && [1, 2].includes(this.purchaseOrder.status);\n          const reason = this.purchaseOrder.expected_inbound_date_modify_reason || '';\n          this.changeReason = reason;\n          this.changeReasonRemark = this.purchaseOrder.modify_other_reason || '';\n          const inboundDate = this.purchaseOrder.generalInformation.expectedInboundDate;\n          this.newInboundDate = inboundDate;\n          if (resp.data.status === 4) {\n            this.exportBtns.splice(1, 1);\n          }\n          this.purchaseOrder.skuList.forEach(sku => {\n            sku['sourcingStatus'] = SKUSourcingStatusText[sku['sourcingStatus']];\n            const tax = Number(sku['tax']);\n            sku['purchasePriceAfter'] = Math.round(Number(sku['confirmedPurchasePrice']) * (100 + tax)) / 100;\n          });\n          if (resp.data['attachment_list']) {\n            this.resetAPIData(resp.data['attachment_list']);\n          }\n          this.giftExpand = this.purchaseOrder.orderType === 2;\n          getCountryGiftConf({\n            country: this.purchaseOrder.country\n          }).then(resp => {\n            if (resp.status !== 0) {\n              this.$message.error(resp.info);\n            } else {\n              this.countryGiftConf = resp.data;\n              this.countryGiftConf.flag_two = this.countryGiftConf.flag_two || 0;\n              // this.getInboundDateInfo();\n            }\n          });\n          this.$nextTick(() => {\n            this.$refs.checkInbound && typeof this.$refs.checkInbound.onSearch === 'function' && this.$refs.checkInbound.onSearch();\n          });\n        }\n      }).catch(() => {\n        this.$message.error('Get PO Detail Failed!');\n        this.$router.push({ path: '/admin/' });\n      });\n    }\n  },\n  created() {\n    this.canExportPO = true;\n    this.canEditASN = hasPermission(Permission.EDIT_PO_ASN);\n    const order_id = this.$route.params.order_id;\n    this.getPODetail(order_id);\n    this.getPendingASN();\n  }\n};\n</script>\n\n<style>\n  .po-detail .el-table th {\n    background-color: #f0f2f5;\n  }\n  .po-detail .el-table--border td,\n  .po-detail .el-table--border th,\n  .po-detail .el-table__body-wrapper .el-table--border.is-scrolling-left~.el-table__fixed {\n    border-right: none;\n  }\n  .po-detail .el-table th>.cell{\n    color: #575757;\n    font: 12px/1.5 \"Helvetica Neue Light\",Helvetica,Arial,sans-serif;\n    font-weight: 700;\n  }\n  .po-detail .el-form-item__label {\n    color: #565258;\n  }\n  .po-detail .el-table__footer-wrapper tbody td {\n    background-color: #fff;\n    font-weight: bold;\n  }\n  .po-detail .el-table td {\n    font-size: 14px;\n    font-family: \"Helvetica Neue Light\", Helvetica, Arial, sans-serif;\n    color: #000;\n    font-weight: 400;\n  }\n  .po-detail .el-input--prefix .el-input__inner {\n    padding-left: 30px;\n  }\n  .po-detail .right-view .el-tabs__item {\n    color: #565258;\n    font-size: 16px;\n  }\n  .po-detail .form-wrapper{\n    padding: 0 16px;\n  }\n</style>\n<style scoped lang=\"scss\">\n  .info-view {\n    display: flex;\n  }\n  .left-view {\n    flex: 1;\n  }\n  .right-view {\n    flex: 1;\n    max-width: 50%;\n    margin-top: -12px;\n  }\n  .po-detail-header {\n    position: relative;\n  }\n  .section-title {\n    margin: 10px 0 20px;\n    font-size: 22px;\n    font-weight: normal;\n    color: rgba(0,0,0,.6);\n    width: 100%;\n  }\n  .el-main {\n    overflow-x: hidden;\n    .page-title{\n      font-size: 22px;\n      color: grey;\n      font-weight: 500;\n      margin-bottom: 20px;\n    }\n  }\n  .left-info {\n    position: absolute;\n    top: 0;\n    left: 20px;\n    min-width: 20%;\n    padding-left: 5px;\n    height: 60px;\n    line-height: 60px;\n    border-bottom: 2px solid #f0f2f5;\n  }\n  .right-op {\n    position: absolute;\n    top: 0;\n    right: 20px;\n    /* max-width: 50%; */\n    padding-left: 5px;\n    height: 60px;\n    line-height: 60px;\n  }\n  .po-back-icon {\n    display: inline-block;\n    margin-right: 10px;\n    transform: scale(1.2);\n  }\n  .po-id {\n    color: rgb(215, 215, 215);\n    font-size: 26px;\n    margin-right: 20px;\n  }\n  .po-status {\n    color: rgb(244, 171, 97);\n  }\n  .date-btn-module {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    .date-action-log-btn {\n      margin-right: 20px;\n      font-size: 16px;\n      color: #7B9CDF;\n      cursor: pointer;\n      text-decoration: underline;\n    }\n  }\n  .detail-action {\n    font-size: 16px;\n    color: #3D62D1;\n    cursor: pointer;\n  }\n  .export-btn {\n    float: left;\n    width: 180px;\n    height: 50px;\n    margin: 15px 10px 0 0;\n    line-height: 50px;\n    font-size: 14px;\n    text-align: center;\n    vertical-align: middle;\n    color: #86cd57;\n    cursor: pointer;\n    border: 1px solid #86cd57;\n    border-radius: 3px;\n    background-color: #fff;\n    transition: background .3s linear;\n  }\n  .export-btn:hover {\n    background-color: #86cd57;\n    color: #fff;\n    border-color: #fff;\n  }\n  .action-log-btn {\n    position: absolute;\n    bottom: -40px;\n    right: 30px;\n    color: #7B9CDF;\n    cursor: pointer;\n    text-decoration: underline;\n  }\n  .supplier-gap {\n    display: inline-block;\n    margin-left: 8px;\n    vertical-align: top;\n  }\n  .supplier-info {\n    display: inline-block;\n    width: auto;\n    max-width: 100%;\n    margin-left: 20px;\n    word-break: break-all;\n    &.el-select, &.el-date-editor, &.el-input {\n      width: 180px;\n    }\n  }\n  .sku-title, .gift-title, .general-information {\n    float: left;\n    margin: 40px 0 10px;\n    font-size: 22px;\n    color: rgba(0,0,0,.6);\n    width: 100%;\n    padding-bottom: 10px;\n  }\n  .right-action {\n    float: left;\n    margin-left: 20px;\n  }\n</style>\n<style lang=\"scss\">\n.po-exportGroup-btn{\n  margin-right: 8px;\n  vertical-align: middle;\n  .el-button--primary{\n    background-color: #3d6ed1;\n    border-color: #3d6ed1;\n  }\n  .el-button--medium{\n    padding: 11px 16px;\n  }\n  .el-dropdown__caret-button{\n    padding: 11px 9px;\n  }\n}\n.po-detail {\n  .general-information-form .el-form-item {\n    min-height: 36px;\n    height: auto;\n    .el-form-item__content {\n      display: flex;\n      .supplier-gap {\n        width: 4px;\n      }\n    }\n  }\n}\n.pms-confirm-update-box {\n  width: 588px;\n  .el-message-box__title {\n    padding-left: 9px;\n    font-size: 16px;\n    color: #333333;\n    justify-content: flex-start;\n  }\n  .el-message-box__content {\n    padding: 10px 24px 0;\n  }\n  .message-box-confirm {\n    font-size: 14px;\n    color: #333333;\n    text-align: left;\n    .confirm-info {\n      margin-bottom: 15px;\n      .confirm-date-info {\n        font-weight: bold;\n        color: #151515;\n      }\n    }\n    .el-table {\n      margin: 16px 0 24px;\n    }\n  }\n  .el-message-box__btns {\n    text-align: right;\n    padding-right: 24px;\n    .el-button {\n      font-size: 14px;\n    }\n    .el-button--primary {\n      border-color: #3D62D1;\n      background-color: #3D62D1;\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/purchaseOrder/expectedDateTable.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/purchaseOrder/orderLevelList.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/purchaseOrder/pendingPO.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"pendingGeneratePO\" is not PascalCase.","line":26,"column":9,"nodeType":"Literal","endLine":26,"endColumn":28,"fix":{"range":[1365,1382],"text":"PendingGeneratePO"}},{"ruleId":"vue/return-in-computed-property","severity":2,"message":"Expected to return a value in \"searchSchema\" computed property.","line":162,"column":17,"nodeType":"FunctionExpression","endLine":176,"endColumn":6}],"errorCount":2,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <section class='pms-ui'>\n    <PRList @showExportHistory=\"showExportHistory\" :tableSchema=\"tableSchema\" :createHidden=true :activeTab=\"activeTab\" :searchSchema='searchSchema' merchantType=\"ALL\">\n      <template slot=\"header\">\n        <el-tabs tab-position='bottom' style='height:60px;' v-model=\"activeTab\">\n          <el-tab-pane v-if='showPOList' :label=\"$t('route.purchaseOrderList')\" name=\"poList\"></el-tab-pane>\n        </el-tabs>\n      </template>\n    </PRList>\n    <check-inbound-dialog :visible=\"showCheckInbound\" :orderID=\"orderID\" @close=\"closeCheckInbound\"></check-inbound-dialog>\n    <export-history-dialog :interval=\"15000\" :taskType=\"taskType\" :visible=\"showExportHistoryDialog\" @close=\"closeExportHistory\"></export-history-dialog>\n  </section>\n</template>\n\n<script>\nimport { setPurchaseOrderStatus } from '@/api/purchaseOrder';\nimport PRList from '@/components/ApproveList';\nimport { hasPermission } from '@/utils/permission';\nimport { Permission, ReturnCodeMap, PurchaseOrderStatus, IRUnderReservationList } from '@/utils/constant';\nimport { formatValue } from '@/utils/formatParams';\nimport CheckInboundDialog from '@/components/ApproveList/checkInboundDialog';\nimport ExportHistoryDialog from '@/components/ApproveList/exportHistoryDialog';\nimport { getSellerPageUrl } from '@/views/FBS/sellerAndShop/utils';\n\nexport default {\n  name: 'pendingGeneratePO',\n  data() {\n    return {\n      activeTab: '',\n      showPOList: false,\n      orderID: '',\n      showCheckInbound: false,\n      showExportHistoryDialog: false,\n      tabList: [\n        { field: 'showPOList', value: 'poList' }\n      ]\n    };\n  },\n  mounted() {\n    this.showPOList = hasPermission(Permission.PO_LIST);\n    this.canCheckInbound = true;\n    this.canCancelPO = hasPermission(Permission.EDIT_PO);\n    const activeTab = `${this.$route.query.activeTab}`;\n    this.tabList.some(item => {\n      if (this[item.field]) {\n        const tabOption = this.tabList.find(tab => tab.value.includes(activeTab));\n        if (tabOption && this[tabOption.field]) {\n          this.activeTab = tabOption.value;\n        } else if (tabOption) {\n          this.$message.error('You do not have permission to view this page, please contact the system administrator to add permissions');\n          this.$router.replace('/admin/dashboard');\n        } else {\n          this.activeTab = item.value;\n        }\n        return true;\n      }\n    });\n  },\n  methods: {\n    formatValue,\n    formatUnderReservation(value) {\n      return (IRUnderReservationList.find(item => item.value === value) || { label: '/'}).label;\n    },\n    linkSupplier(row) {\n      if (row.merchant_type === 'SELLER') {\n        const path = getSellerPageUrl('detail', { id: row.sbs_vendor_id});\n        this.$router.push(path);\n      } else {\n        this.$router.push({ path: `/admin/supplier/list/detail/${row.supplierID}` });\n      }\n    },\n    getCurrency(warehouse) {\n      return this.currencyMap[warehouse];\n    },\n    closeExportHistory() {\n      this.showExportHistoryDialog = false;\n    },\n    showExportHistory() {\n      this.showExportHistoryDialog = true;\n    },\n    closeCheckInbound() {\n      this.orderID = '';\n      this.showCheckInbound = false;\n    },\n    cancelPO(row, index) {\n      this.$confirm(this.$t('purchaseOrder.confirmCancelPO'), this.$t('purchaseOrder.warn'), {\n        confirmButtonText: this.$t('purchaseOrder.Confirm'),\n        cancelButtonText: this.$t('purchaseOrder.cancel')\n      }).then(() => {\n        this.changePOStatus(row, 4);\n      }).catch(() => {});\n    },\n    addASN(row) {\n      window.open(`/admin/purchase/order/podetail/${row.orderID}?create=1`);\n    },\n    checkInboundPO(row, index) {\n      this.orderID = row.orderID;\n      this.showCheckInbound = true;\n    },\n    changePOStatus(row, status, confirmed = false) {\n      const params = { order_id: row.orderID, last_status: row.status, new_status: status, double_confirm: confirmed };\n      setPurchaseOrderStatus(params).then(resp => {\n        if (resp.retcode === ReturnCodeMap.OUTSTANDING_ASN_WARNING) {\n          this.$alert(resp.info, 'Warning', {\n            confirmButtonText: 'Close'\n          });\n        } else if (resp.retcode === ReturnCodeMap.SKU_SALES_ORDER_WARNING) {\n          const h = this.$createElement;\n          const skuList = (resp.info && resp.info.error) || [];\n          this.$msgbox({\n            title: '',\n            center: true,\n            customClass: 'pms-warning-message-box',\n            message: h('div', { class: 'message-box-warning pms-ui' }, [\n              h('section', { class: 'warning-title' }, 'Warning!'),\n              h('section', { class: 'warning-info' }, [\n                h('i', { class: 'el-icon-warning warning-info-icon' }),\n                h('div', {}, [\n                  h('span', `Please note that following skus already have sales orders,\n                  fulfilment of which might be impacted by this PO ${status === 4 ? 'cancellation' : 'closure'}!`),\n                  h('i', { class: 'el-icon-download info-download-icon' }),\n                  h('a', { on: { click: () => window.open(`/api/purchase_orders/${row.orderID}/pre_order_export/`) }}, 'Reserved SKUs'),\n                  h('span', ' (click this link and get reserved sku list)')\n                ])\n              ]),\n              h('el-table', { class: 'reserved-sku', props: {\n                border: true, data: skuList.length > 3 ? [...skuList.slice(0, 3), { sku_id: '...', unit_reserved: '...' }] : skuList\n              }}, [\n                h('el-table-column', {\n                  props: { label: 'SKU ID', prop: 'sku_id' }\n                }),\n                h('el-table-column', {\n                  props: { label: 'Units reserved by sales orders', prop: 'unit_reserved' }\n                })\n              ])\n            ]),\n            showCancelButton: true,\n            confirmButtonText: 'Confirm',\n            cancelButtonText: 'Cancel'\n          }).then(() => {\n            this.changePOStatus(row, status, true);\n          }).catch(() => {});\n        } else if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          row.status = status;\n          row.statusText = this.statusList[status].label;\n        }\n      });\n    },\n    closePO(row, index) {\n      this.$confirm('', this.$t('purchaseOrder.warnBtnCloseContent'), {\n        confirmButtonText: this.$t('purchaseOrder.Confirm'),\n        cancelButtonText: this.$t('purchaseOrder.cancelPoClose')\n      }).then(() => { this.changePOStatus(row, 5); }).catch(() => {});\n    }\n  },\n  computed: {\n    currencyMap() {\n      return this.$store.getters.currencyMap;\n    },\n    searchSchema() {\n      if (this.activeTab === 'poList') {\n        return ['ctime', 'region', 'orderID', 'supplierName', 'expected_inbound_date', 'purchaseType', 'requestID', 'supplierID',\n          { field: 'sbsVendorId', offset: 9 },\n          'prCreatedBy',\n          { field: 'createdBy', label: 'purchaseOrder.poProcessor' },\n          { field: 'orderType', offset: 9 },\n          'status',\n          'backlogDuration',\n          { field: 'CBNominationType', offset: 9 },\n          { field: 'supplierType', offset: 9 },\n          'under_reservation'\n        ];\n      }\n    },\n    statusList() {\n      const arr = this.activeTab === 'poList' ? PurchaseOrderStatus : [];\n      return [{ value: '', label: 'All' }, ...arr];\n    },\n    taskType() {\n      return this.activeTab === 'poList' ? 7 : 6;\n    },\n    tableSchema() {\n      return [\n        { label: this.$t('purchaseRequest.requestID'), field: 'requestID' },\n        { label: this.$t('purchaseOrder.orderID'), field: 'orderID', hidden: this.activeTab !== 'poList' },\n        { label: this.$t('IBRUnderReservation'), field: 'under_reservation',\n          render: (schema, row) => {\n            return `${this.formatUnderReservation(row.under_reservation)}`;\n          }\n        },\n        { label: this.$t('purchaseRequest.region'), field: 'country' },\n        { label: this.$t('purchaseOrder.warehouse'), field: 'warehouse' },\n        { label: this.$t('commonVendorName'), field: 'supplierName' },\n        {\n          label: `${this.$t('commonSBSVendorID')} / ${this.$t('commonVendorSiteID')}`,\n          field: 'supplierID',\n          columnKey: 'action',\n          render: (schema, row) => {\n            return [\n              'div',\n              {\n                class: 'supplier-id',\n                on: { click: () => this.linkSupplier(row) }\n              },\n              `${row.sbs_vendor_id}/${row[schema.field]}`\n            ];\n          }\n        },\n        { label: this.$t('purchaseRequest.purchaseType'), field: 'purchaseType' },\n        {\n          label: this.activeTab === 'poList' ? this.$t('purchaseOrder.totalValue') : this.$t('purchaseRequest.preApprovalValue'),\n          field: 'totalValue',\n          sortable: 'custom',\n          render: (schema, row) => `${this.formatValue(row[schema.field])} ${this.getCurrency(row.warehouse)}`\n        },\n        {\n          label: this.$t('purchaseRequest.postApprovalValue'),\n          field: 'hasApproval',\n          hidden: this.activeTab === 'poList',\n          sortable: 'custom',\n          render: (schema, row) => {\n            if (row[schema.field]) {\n              return `${this.formatValue(row.lastApprovalTotalValue)} ${this.getCurrency(row.warehouse)}`;\n            } else {\n              return '\\\\';\n            }\n          }\n        },\n        { label: this.$t('purchaseRequest.status'), field: 'statusText' },\n        { label: this.activeTab === 'poList' ? this.$t('purchaseRequest.prRequester') : this.$t('purchaseRequest.requester'), field: 'createdBy' },\n        { label: this.$t('purchaseOrder.createTime'), field: 'createdDate' },\n        {\n          hidden: this.activeTab !== 'poList',\n          columnKey: 'action',\n          label: this.$t('purchaseRequest.action'),\n          width: '180px',\n          render: (schema, row, index, h) => {\n            return [\n              'div',\n              { class: 'po-action' },\n              [\n                {\n                  hidden: row.status !== 1 || !this.canCancelPO,\n                  render: ['el-button', {\n                    class: 'action-btn',\n                    props: { type: 'danger', size: 'mini' },\n                    on: { click: () => this.cancelPO(row, index) }\n                  }, this.$t('purchaseOrder.cancel')]\n                },\n                {\n                  hidden: !row.can_add,\n                  render: ['el-button', {\n                    class: 'action-btn',\n                    props: { type: 'primary', size: 'mini' },\n                    on: { click: () => this.addASN(row) }\n                  }, this.$t('purchaseOrder.createASN')]\n                },\n                {\n                  hidden: !([2, 3, 5].includes(row.status)) || !this.canCheckInbound,\n                  render: ['el-button', {\n                    class: 'action-btn',\n                    props: { type: 'primary', size: 'mini' },\n                    on: { click: () => this.checkInboundPO(row, index) }\n                  }, this.$t('purchaseOrder.checkInboundOrder')]\n                },\n                {\n                  hidden: row.status !== 2 || !this.canCancelPO,\n                  render: ['el-button', {\n                    class: 'action-btn',\n                    props: { type: 'primary', size: 'mini' },\n                    on: { click: () => this.closePO(row, index) }\n                  }, this.$t('purchaseOrder.Close')]\n                }\n              ].filter(item => !item.hidden).map(item => h(...item.render))\n            ];\n          }\n        }\n      ].filter(item => !item.hidden);\n    }\n  },\n  components: {\n    PRList,\n    CheckInboundDialog,\n    ExportHistoryDialog\n  }\n};\n</script>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/purchaseOrder/serviceAddtionInfo.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/purchaseOrder/skuInfomation/index.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":6,"column":28,"nodeType":"VIdentifier","messageId":"deprecated","endLine":6,"endColumn":34}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"pms-ui sku-information\">\n    <el-row>\n      <el-col :span=\"5\">\n        <el-form-item label-width=\"100px\" :label=\"$t('purchaseOrder.skuID')\">\n          <el-input @keyup.native.enter=\"handleSearch\" v-model=\"searchForm.skuID\" clearable></el-input>\n        </el-form-item>\n      </el-col>\n      <el-col :span=\"5\">\n        <el-form-item label-width=\"100px\" :label=\"$t('purchaseRequest.reason')\">\n          <el-select @change=\"handleSearch\" v-model=\"searchForm.reason\">\n            <el-option value=\"\" label=\"All\"></el-option>\n            <el-option v-for=\"item in SKUReason\" :key=\"item\" :value=\"item\" :label=\"item\"></el-option>\n          </el-select>\n        </el-form-item>\n      </el-col>\n      <el-col :span=\"5\">\n        <el-form-item label-width=\"160px\" :label=\"$t('skuMgt.inventoryHealthTag')\">\n          <el-select class=\"select-health\" @change=\"handleSearch\" v-model=\"searchForm.healthTag\">\n            <el-option value=\"\" label=\"All\"></el-option>\n            <el-option v-for=\"item in healthLevelValueList\" :key=\"item.color\" :value=\"item.label\" :label=\"''\">\n              <div class=\"color-tag\" :style=\"{ 'background-color': item.color }\"></div>\n            </el-option>\n          </el-select>\n        </el-form-item>\n      </el-col>\n      <el-col class=\"right-action-btn\" :span=\"2\">\n        <el-button @click=\"handleSearch\" :loading=\"searching\" class=\"list-btn\">{{$t('purchaseRequest.search')}}</el-button>\n      </el-col>\n      <el-col class=\"right-action-btn\" :offset=\"3\" :span=\"4\">\n        <el-button @click=\"editPreOrderSKU\" v-if=\"showEditBtn && !editing\" class=\"list-btn\">{{$t('purchaseOrder.edit')}}</el-button>\n        <el-button @click=\"saveSKUChange\" :loading=\"saving\" v-if=\"editing\" class=\"list-btn\">{{$t('purchaseOrder.save')}}</el-button>\n        <el-button @click=\"cancelEdit\" :loading=\"saving\" v-if=\"editing\" class=\"list-btn\">{{$t('purchaseOrder.cancel')}}</el-button>\n      </el-col>\n    </el-row>\n    <list-view v-if=\"showResult\" :dataList=\"resultList\" :tableSchema=\"tableSchema\"></list-view>\n    <list-view class=\"list-gap\" :dataList=\"dataList\" :tableSchema=\"tableSchema\" :config=\"tableConfig\"></list-view>\n  </div>\n</template>\n\n<script>\nimport ListView from '@/components/ApproveList/list';\nimport { updatePreOrderDate } from '@/api/purchaseOrder';\nimport { SKUReason, healthLevelValueList, Permission, SKUReplenishmentIndicatorList } from '@/utils/constant';\nimport { formatValue } from '@/utils/formatParams';\nimport { formatSkuServiceTypes } from '@/utils/format';\nimport moment from 'moment';\nimport { hasPermission } from '@/utils/permission';\nimport { formatSellingType } from '@/utils';\n\nexport default {\n  data() {\n    return {\n      cacheStorage: {},\n      dataList: [],\n      dateOptions: {\n        disabledDate(time) {\n          return time.getTime() < Date.now() - 86400000;\n        }\n      },\n      editing: false,\n      healthLevelValueList,\n      salesDateRule: {\n        expected_sales_date_str: [\n          { required: true, trigger: 'change', message: 'Expected Sales Date is required' },\n          { validator: this.validateSalesDate, trigger: 'change' }\n        ]\n      },\n      saving: false,\n      searchForm: {\n        skuID: '', reason: '', healthTag: ''\n      },\n      searching: false,\n      showResult: false,\n      SKUReason,\n      resultList: [],\n      tableConfig: {\n        maxHeight: '900px'\n      }\n    };\n  },\n  props: {\n    skuList: {\n      type: Array,\n      default: () => []\n    },\n    currency: {\n      type: String,\n      required: true\n    },\n    purchaseOrder: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  components: {\n    ListView\n  },\n  computed: {\n    showEditBtn() {\n      if (!hasPermission(Permission.EDIT_PO)) {\n        return false;\n      }\n      const now = moment().valueOf();\n      return [1, 2].includes(this.purchaseOrder.status) && this.skuList.length && this.skuList.some(sku => {\n        const sales = moment(sku.expected_sales_date_str, 'YYYY-MM-DD HH:mm:ss').valueOf();\n        const fulfillment = moment(sku.expected_fulfill_date_str, 'YYYY-MM-DD HH:mm:ss').valueOf();\n        return sku.reason === 'Pre-Order' && (now < sales || (fulfillment && now < fulfillment));\n      });\n    },\n    tableSchema() {\n      return [\n        { label: 'NO', width: '40px', fixed: true, render: (schema, row, index) => index + 1 },\n        { label: this.$t('purchaseOrder.skuID'), field: 'skuID', fixed: true },\n        { label: this.$t('purchaseRequest.externalSkuID'), field: 'externalSkuID', fixed: true },\n        { label: this.$t('purchaseOrder.skuName'), width: '120px', field: 'skuName', fixed: true },\n        { label: this.$t('userRole.userList.categoryName'), field: 'categoryName', fixed: true },\n        { label: this.$t('budget.brandName'), field: 'brand_name', fixed: true },\n        { label: this.$t('purchaseOrder.guidePurchasePrice'), field: 'guidePurchasePrice',\n          render: (schema, row) => `${formatValue(row.guidePurchasePrice || 0)} ${this.currency}` },\n        { label: this.$t('purchaseOrder.sourcingStatus'), field: 'sourcingStatus' },\n        { label: this.$t('commonReplenishmentIndicator'), field: 'replenishment_indicator', width: '110px',\n          render: (schema, row, index, h) => {\n            return this.formatReplenishmentIndicator(row.replenishment_indicator);\n          }\n        },\n        { label: this.$t('commonSellingType'), field: 'selling_type', width: '110px',\n          renderHeader: (h, { column }) => {\n            return h('div', null, [\n              column.label,\n              h(\n                  'el-popover',\n                  {\n                    props: {\n                      placement: 'top',\n                      trigger: 'hover',\n                      'popper-class': 'break-word',\n                      width: '320px',\n                      content: this.$t('commonSellingTypeTips')\n                    }\n                  },\n                  [\n                    h(\n                      'svg-icon',\n                      {\n                        class: 'question question-icon',\n                        props: { iconClass: 'question' },\n                        slot: 'reference'\n                      },\n                      null\n                    )\n                  ]\n                )\n            ]);\n          },\n          render: (schema, row, index, h) => {\n            return formatSellingType(row.selling_type);\n          }\n        },\n        { label: this.$t('purchaseOrder.moq'), field: 'min_order_quantity' },\n        {\n          field: 'health_tag', label: this.$t('skuMgt.inventoryHealthTag'), render: (schema, row) => {\n            return ['div', { class: 'color-tag', style: { 'background-color': row.health_tag }}, ''];\n          }\n        },\n        { label: this.$t('purchaseRequest.reason'), field: 'reason', width: '120px' },\n        { label: this.$t('commonServiceType'), field: 'service_type_list', width: '120px', render: (schema, row, index, h) => {\n          const types = row.service_type_list || [];\n          return formatSkuServiceTypes(types);\n        }},\n        { label: this.$t('purchaseRequest.expectedSalesDate'), width: '200px', field: 'expected_sales_date_str',\n          render: (schema, row, index, h) => {\n            return row.canEditSales && this.editing ? [\n              'el-form', {\n                props: { rules: this.salesDateRule, model: row }\n              }, [\n                h('el-form-item', {\n                  class: 'pre-order-item',\n                  props: { prop: 'expected_sales_date_str' }\n                }, [\n                  this.getBasicDatePicker(schema, row, index, h)\n                ])\n              ]\n            ] : (row.reason === 'Pre-Order' ? (row[schema.field] || '') : '-');\n          }\n        },\n        { label: this.$t('purchaseRequest.expectedFulfillmentDate'), width: '200px', field: 'expected_fulfill_date_str',\n          render: (schema, row, index, h) => {\n            return row.canEditFulfill && this.editing ? [\n              'el-form', {}, [\n                h('el-form-item', {\n                  class: 'pre-order-item',\n                  props: { error: this.getErrorMessage(row) }\n                }, [\n                  this.getBasicDatePicker(schema, row, index, h)\n                ])\n              ]\n            ] : (row.reason === 'Pre-Order' ? (row[schema.field] || '') : '-');\n          }, disableClear: true\n        },\n        { label: this.$t('PRRequestedQty(unit)'), field: 'quantity' },\n        { label: this.$t('purchaseRequest.unit'), field: 'unit_name' },\n        { label: this.$t('PRConfirmedQty(pcs)'), field: 'confirmedQty2',\n          render: (schema, row) => `${formatValue(row.confirmedQty * row.unit_rate || 0)}` },\n        { label: this.$t('PRApprovedQty(unit)'), field: 'approvalQuantity' },\n        { label: this.$t('PRConfirmedQty(unit)'), field: 'confirmedQty' },\n        { label: this.$t('purchaseOrder.confirmedPurchasePrice'), field: 'confirmedPurchasePrice',\n          render: (schema, row) => `${formatValue(row.confirmedPurchasePrice || 0)} ${this.currency}` },\n        { label: this.$t('purchaseOrder.purchasePriceInPR'), field: 'purchasePriceInPR',\n          render: (schema, row) => `${formatValue(row.purchasePriceInPR || 0)} ${this.currency}` },\n        { label: this.$t('purchaseOrder.purchasePriceAfter'), field: 'purchasePriceAfter',\n          render: (schema, row) => `${formatValue(row.purchasePriceAfter || 0)} ${this.currency}` },\n        { label: this.$t('purchaseRequest.taxCode'), field: 'taxCode' },\n        { label: this.$t('purchaseOrder.tax'), field: 'tax',\n          render: (schema, row) => `${row.tax} %` },\n        { label: this.$t('supplier.barCode'), field: 'barcode' },\n        { label: this.$t('purchaseOrder.value'), field: 'value',\n          render: (schema, row) => `${formatValue(row.value || 0)} ${this.currency}` }\n      ];\n    }\n  },\n  methods: {\n    formatReplenishmentIndicator(value) {\n      return (SKUReplenishmentIndicatorList.find(item => item.value === value) || {}).label || '';\n    },\n    cancelEdit() {\n      this.editing = false;\n      this.resultList = this.cacheStorage.resultList || [];\n      this.dataList = this.cacheStorage.dataList || [];\n      this.cacheStorage = {};\n    },\n    editPreOrderSKU() {\n      this.editing = true;\n      this.resultList = this.resultList.sort((curr, next) => {\n        return this.findReasonIndex(next.reason) - this.findReasonIndex(curr.reason);\n      });\n      this.dataList = this.dataList.sort((curr, next) => {\n        return this.findReasonIndex(next.reason) - this.findReasonIndex(curr.reason);\n      });\n      this.cacheStorage = {\n        dataList: JSON.parse(JSON.stringify(this.dataList)),\n        resultList: JSON.parse(JSON.stringify(this.resultList))\n      };\n    },\n    findReasonIndex(reason) {\n      return SKUReason.findIndex(item => item === reason);\n    },\n    getBasicDatePicker(schema, row, index, h) {\n      const pickerOptions = this.getDateOptions(schema, row);\n      return h('el-date-picker', {\n        class: 'pre-order-date',\n        props: {\n          'value-format': 'yyyy-MM-dd HH:mm:ss',\n          type: 'datetime',\n          'popper-class': 'pre-order-date-picker',\n          editable: false,\n          pickerOptions,\n          format: 'yyyy-MM-dd HH:mm',\n          value: row[schema.field],\n          clearable: !schema.disableClear\n        },\n        on: {\n          input: value => {\n            this.$set(row, schema.field, value);\n            if (schema.field === 'expected_sales_date_str') {\n              if (!this.validateFulfillDate(row)) {\n                this.$set(row, 'expected_fulfill_date_str', '');\n              }\n            }\n          }\n        }\n      });\n    },\n    getDateOptions(schema, row) {\n      if (schema.field === 'expected_sales_date_str') {\n        return this.dateOptions;\n      }\n      if (schema.field === 'expected_fulfill_date_str') {\n        return {\n          disabledDate: (time) => {\n            let expected_sales_date_str = '';\n            if (row.expected_sales_date_str) {\n              expected_sales_date_str = new Date(row.expected_sales_date_str.split(' ')[0] + ' 00:00:00');\n            }\n            return !this.validateFulfillDate(row, moment(time).format('YYYY-MM-DD HH:mm:ss'), expected_sales_date_str);\n          }\n        };\n      }\n    },\n    validateFulfillDate(row, expected_fulfill_date_str, expected_sales_date_str, dts) {\n      expected_fulfill_date_str = expected_fulfill_date_str || row.expected_fulfill_date_str;\n      expected_sales_date_str = expected_sales_date_str || row.expected_sales_date_str;\n      dts = dts || row.dts;\n\n      if (!expected_fulfill_date_str) {\n        return true; // 非必填，为空时不校验\n      }\n      expected_fulfill_date_str = moment(expected_fulfill_date_str, 'YYYY-MM-DD HH:mm:ss').valueOf();\n      expected_sales_date_str = moment(expected_sales_date_str, 'YYYY-MM-DD HH:mm:ss').valueOf();\n\n      // 小于sales_date + dts， 大于sales_date或者now\n      const min = expected_sales_date_str || moment().valueOf();\n      if (expected_fulfill_date_str < min) return false;\n\n      if (expected_sales_date_str && dts) {\n        // 一天的毫秒数为86400000\n        const max = expected_sales_date_str + 86400000 * dts;\n        if (expected_fulfill_date_str > max) return false;\n      }\n      return true;\n    },\n    getErrorMessage(row) {\n      if (!this.validateFulfillDate(row)) {\n        return 'Please select a valid date.';\n      }\n      return '';\n    },\n    // getErrorMessage(row) {\n    //   if (!this.validateFulfillDate(row)) {\n    //     if (row.dts && row.expected_sales_date_str) {\n    //       const max = moment((moment(row.expected_sales_date_str, 'YYYY-MM-DD HH:mm:ss').valueOf() + row.dts)).format('YYYY-MM-DD HH:mm:ss');\n    //     return `Please select a valid date between ${row.expected_sales_date_str} and ${max}`;\n    //     }\n    //     return 'Please select a valid date.';\n    //   }\n    //   return '';\n    // },\n    handleSearch() {\n      this.searching = true;\n      const { skuID = '', reason = '', healthTag = '' } = this.searchForm;\n      this.resultList = (skuID || reason || healthTag) ? this.skuList.filter(sku => {\n        const healthColor = (healthLevelValueList.find(item => item.label === healthTag) || {}).color || '';\n        return sku.skuID.includes(skuID) && sku.reason.includes(reason) && (sku.health_tag || '').includes(healthColor);\n      }) : [];\n      this.dataList = this.skuList.filter(sku => {\n        return !this.resultList.find(item => item.skuID === sku.skuID);\n      });\n      this.searching = false;\n      this.showResult = !!(skuID || reason || healthTag);\n    },\n    saveSKUChange() {\n      const skuList = [...this.resultList, ...this.dataList].filter(item => {\n        return item.reason === 'Pre-Order' && (item.canEditSales || item.canEditFulfill);\n      });\n      let errorMessage = '';\n      skuList.some(sku => {\n        if (!sku.expected_sales_date_str) {\n          errorMessage = `Expected Sales Date for [SKU ID: ${sku.skuID}] is required`;\n          return true;\n        }\n        const sales = moment(sku.expected_sales_date_str, 'YYYY-MM-DD HH:mm:ss').valueOf();\n        const now = moment().valueOf();\n        if (sku.canEditSales && sales < now) {\n          errorMessage = `Expected Sales Date for [SKU ID: ${sku.skuID}] is too early, Please select a future date.`;\n          return true;\n        }\n        const fulfillment = moment(sku.expected_fulfill_date_str, 'YYYY-MM-DD HH:mm:ss').valueOf();\n        if (sku.canEditFulfill && fulfillment < now) {\n          errorMessage = `Expected Fulfillment Date for [SKU ID: ${sku.skuID}] is too early, Please select a future date.`;\n          return true;\n        }\n        if (sku.canEditFulfill && fulfillment && fulfillment <= sales) {\n          errorMessage = `Expected Fulfillment Date for [SKU ID: ${sku.skuID}] isn't later than Expected Sales Date, Please select a future date.`;\n          return true;\n        }\n      });\n      if (errorMessage) return this.$message.error(errorMessage);\n      this.saving = true;\n      const params = {\n        orderID: this.$route.params.order_id,\n        sku_list: skuList\n      };\n      updatePreOrderDate(params).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.$message.success('Success');\n          this.editing = false;\n        }\n        this.saving = false;\n      }).catch(() => {\n        this.saving = false;\n      });\n    },\n    validateSalesDate(rule, value, callback) {\n      const timestamp = moment(value, 'YYYY-MM-DD HH:mm:ss').valueOf();\n      const now = moment().valueOf();\n      if (timestamp < now) {\n        callback(new Error('Please select a future date.'));\n      } else {\n        callback();\n      }\n    }\n  },\n  watch: {\n    '$props.skuList': {\n      handler(curr) {\n        this.resultList = [];\n        const now = moment().valueOf();\n        this.dataList = (curr || []).map(item => {\n          const sales = moment(item.expected_sales_date_str, 'YYYY-MM-DD HH:mm:ss').valueOf();\n          const fulfillment = moment(item.expected_fulfill_date_str, 'YYYY-MM-DD HH:mm:ss').valueOf();\n          item.canEditSales = item.reason === 'Pre-Order' && now < sales;\n          item.canEditFulfill = item.reason === 'Pre-Order' && fulfillment && now < fulfillment;\n          return item;\n        });\n      },\n      immediate: true\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  .list-gap {\n    margin-top: 20px;\n  }\n  .right-action-btn {\n    text-align: right;\n  }\n  .pre-order-item {\n    margin-bottom: 0;\n    &.is-error {\n      margin-bottom: 22px;\n    }\n  }\n  .pre-order-date {\n    width: 180px;\n  }\n  .sku-information .el-form-item {\n    padding-left: 10px;\n  }\n</style>\n\n<style lang=\"scss\">\n  .pre-order-date-picker > .el-picker-panel__footer > .el-button--text {\n    display: none;\n  }\n  .el-select-dropdown__item, .sku-information .el-table {\n    .color-tag {\n      margin: 0 auto;\n      width: 30px;\n      height: 30px;\n      border: 1px solid #ddd;\n    }\n  }\n  .select-health {\n    .el-select-dropdown__item {\n      margin: 10px 0;\n    }\n    .color-tag {\n      margin: 0;\n    }\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/purchaseOrder/skuLevelList.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/purchaseRequest/approval.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"myApprove\" is not PascalCase.","line":63,"column":9,"nodeType":"Literal","endLine":63,"endColumn":20,"fix":{"range":[2072,2081],"text":"MyApprove"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <section class=\"pms-ui my-purchase\">\n    <PRList\n      ref=\"prList\"\n      :fieldConfig=\"fieldConfig\"\n      :tableSchema=\"tableSchema\"\n      :searchSchema=\"searchSchema\"\n      :activeTab=\"activeTab\"\n      :firstShowCount=\"firstShowCount\"\n      merchantType=\"ALL\"\n      @showExportHistory=\"showExportHistory\"\n      @changeTableSchema=\"changeTableSchema\"\n      @massSend=\"massSendToSupplier\"\n      @change-region=\"changeRegion\"\n    >\n      <template slot=\"header\">\n        <el-tabs\n          tab-position=\"bottom\"\n          style=\"height:60px; max-width: 75%;\"\n          v-model=\"activeTab\"\n          @tab-click=\"handleTabClick\"\n        >\n          <el-tab-pane v-if=\"showAllPR\" :label=\"$t('prAllPR')\" name=\"allPR\"></el-tab-pane>\n          <el-tab-pane v-if=\"showPendingPO\" :label=\"$t('route.pendingPO')\" name=\"pendingPO\"></el-tab-pane>\n          <el-tab-pane v-if=\"showMyPR\" :label=\"$t('route.myPR')\" name=\"myPR\"></el-tab-pane>\n          <el-tab-pane v-if=\"showMyPA\" :label=\"$t('route.myPA')\" name=\"myPending\"></el-tab-pane>\n        </el-tabs>\n      </template>\n    </PRList>\n    <export-history-dialog\n      :interval=\"15000\"\n      :taskType=\"taskType\"\n      :visible=\"showExportHistoryDialog\"\n      @close=\"closeExportHistory\"\n    ></export-history-dialog>\n    <send-to-supplier-dialog\n      @massSuccess=\"massSendSuccess\"\n      @close=\"closeSendToSupplierDialog\"\n      :selectedPR=\"prList\"\n      :visible=\"massSendDialogShow\"\n    ></send-to-supplier-dialog>\n  </section>\n</template>\n\n<script>\nimport PRList from '@/components/ApproveList';\nimport { hasPermission } from '@/utils/permission';\nimport {\n  Permission,\n  DisplayFieldList,\n  DefaultDisplayList,\n  PRPODisplayFieldList,\n  PRPODefaultDisplayList,\n  IRUnderReservationList,\n  OrderType\n} from '@/utils/constant';\nimport { formatValue } from '@/utils/formatParams';\nimport ExportHistoryDialog from '@/components/ApproveList/exportHistoryDialog';\nimport SendToSupplierDialog from './sendToSupplierDialog';\nimport { getSellerPageUrl } from '@/views/FBS/sellerAndShop/utils';\n\nexport default {\n  name: 'myApprove',\n  data() {\n    const storageList = localStorage.getItem('pmsDisplayFields');\n    const PRPOStorageList = localStorage.getItem('PRPODisplayFields');\n    return {\n      activeTab: '',\n      showMyPR: false,\n      showAllPR: false,\n      showMyPA: false,\n      showPendingPO: false,\n      massSendDialogShow: false,\n      showExportHistoryDialog: false,\n      tabList: [\n        { field: 'showAllPR', value: ['allPR'] },\n        { field: 'showPendingPO', value: ['pendingPO'] },\n        { field: 'showMyPR', value: ['myPR'] },\n        { field: 'showMyPA', value: ['myPending', '3'] }\n      ],\n      prList: [],\n      selectRegion: '',\n      // MyPending Table Schema\n      showTableSchemaList: storageList ? JSON.parse(storageList) : DefaultDisplayList,\n      // allPR, pendingPO or myPR Table Schema\n      PRPOTableSchemaList: PRPOStorageList ? JSON.parse(PRPOStorageList) : PRPODefaultDisplayList\n    };\n  },\n  watch: {\n    activeTab() {\n      this.selectRegion = '';\n    }\n  },\n  computed: {\n    firstShowCount() {\n      switch (this.activeTab) {\n        case 'allPR':\n        case 'myPR':\n          return 6;\n        case 'pendingPO':\n          return 8;\n        case 'myPending':\n          return 7;\n        default:\n          return 100;\n      }\n    },\n    currencyMap() {\n      return this.$store.getters.currencyMap;\n    },\n    fieldConfig() {\n      let storageList = '';\n      let fieldList = [];\n      let defaultDisplayList = [];\n      if (['myPending', '3'].includes(this.activeTab)) {\n        storageList = localStorage.getItem('pmsDisplayFields');\n        fieldList = DisplayFieldList;\n        defaultDisplayList = DefaultDisplayList;\n      } else {\n        storageList = localStorage.getItem('PRPODisplayFields');\n        fieldList = PRPODisplayFieldList;\n        defaultDisplayList = PRPODefaultDisplayList;\n      }\n      return {\n        list: fieldList\n          .filter(item => {\n            if (item.isOnlyTW) {\n              return this.selectRegion === 'TW';\n            }\n            return true;\n          })\n          .map(item => ({ ...item, label: this.$t(item.label) })),\n        default: storageList ? JSON.parse(storageList) : defaultDisplayList\n      };\n    },\n    searchSchema() {\n      let list = [];\n      if (this.activeTab === 'allPR') {\n        list = [\n          'region',\n          'purchaseType',\n          'requestID',\n          'supplierName',\n          'ctime',\n          'expected_inbound_date',\n          'totalValue',\n          'status',\n          'supplierID',\n          'categoryID',\n          'supplierType',\n          'warehouse',\n          'CBNominationType',\n          'orderType',\n          'createdBy',\n          'sbsVendorId',\n          'under_reservation'\n        ];\n      } else if (this.activeTab === 'pendingPO') {\n        list = [\n          'supplierName',\n          'requestID',\n          'status',\n          'createdBy',\n          'purchaseType',\n          'region',\n          'supplierID',\n          'backlogDuration',\n          'ctime',\n          'totalValue',\n          'supplierType',\n          'orderType',\n          'sbsVendorId',\n          'under_reservation',\n          'expected_inbound_date'\n        ];\n      } else if (this.activeTab === 'myPR') {\n        list = [\n          'requestID',\n          'status',\n          'supplierName',\n          'supplierID',\n          'ctime',\n          'expected_inbound_date',\n          'totalValue',\n          'region',\n          'purchaseType',\n          'categoryID',\n          'supplierType',\n          'warehouse',\n          'CBNominationType',\n          'orderType',\n          'sbsVendorId',\n          'under_reservation'\n        ];\n      } else if (this.activeTab === 'myPending') {\n        list = [\n          'createdBy',\n          'purchaseType',\n          'requestID',\n          'supplierName',\n          'expected_inbound_date',\n          'region',\n          'durationType',\n          'totalValue',\n          'supplierID',\n          'categoryID',\n          'ctime',\n          'warehouse',\n          'orderType',\n          'sbsVendorId',\n          { field: 'sku_reasons', isOnlyTW: true },\n          'under_reservation'\n        ];\n        // if (this.selectRegion === 'TW') list = [...list, 'sku_reasons']; // .push('sku_reasons'); // 这里改动会影响select的值更新\n      }\n      return list;\n    },\n    tableSchema() {\n      const list = [\n        { label: this.$t('purchaseRequest.requestID'), field: 'requestID', fixed: true },\n        {\n          label: this.$t('IBRUnderReservation'),\n          field: 'under_reservation',\n          render: (schema, row) => {\n            return `${this.formatUnderReservation(row.under_reservation)}`;\n          }\n        },\n        { label: this.$t('purchaseRequest.region'), field: 'country' },\n        { label: this.$t('purchaseOrder.warehouse'), field: 'warehouse' },\n        {\n          label: this.$t('expectedInboundDate'),\n          field: 'expected_inbound_date',\n          hidden: ['myPending', '3'].includes(this.activeTab),\n          render: (schema, row) => (row.expected_inbound_date_str ? row.expected_inbound_date_str : '/')\n        },\n        {\n          label: this.$t('commonVendorName'),\n          field: 'supplierName',\n          render: (schema, row) => {\n            return row[schema.field];\n          }\n        },\n        {\n          label: `${this.$t('commonSBSVendorID')} / ${this.$t('commonVendorSiteID')}`,\n          field: 'supplierID',\n          columnKey: 'action',\n          width: 90,\n          render: (schema, row) => {\n            return [\n              'div',\n              {\n                class: 'supplier-id',\n                on: { click: () => this.linkSupplier(row) }\n              },\n              row.merchant_type === 'SUPPLIER' ? `${row.sbs_vendor_id}/${row.supplier_id}` : row.sbs_vendor_id\n            ];\n          }\n        },\n        {\n          label: this.$t('purchaseRequest.purchaseType'),\n          field: 'purchaseType'\n        },\n        { label: this.$t('commonSupplierType'), field: 'supplier_type' },\n        {\n          label: this.$t('commonOrderType'),\n          field: 'order_type',\n          render: (scheme, row) => (OrderType.find(item => item.value === row.order_type) || {}).label || '/'\n        },\n        {\n          label: this.$t('commonReason'),\n          field: 'sku_reasons',\n          isOnlyMyPending: true,\n          isOnlyTW: true\n        },\n        {\n          label: this.$t('purchaseRequest.paymentTerms'),\n          field: 'paymentTerms',\n          hidden: this.activeTab !== 'myPending'\n        },\n        {\n          label: this.$t('purchaseRequest.totalSKUVariety'),\n          field: 'total_sku_variety',\n          sortable: true,\n          // width: '100px',\n          hidden: !['myPending', '3'].includes(this.activeTab),\n          render: (schema, row) => `${this.formatValue(row[schema.field])}`\n        },\n        {\n          label: this.$t('purchaseRequest.totalSKUQty'),\n          field: 'total_sku_quantity',\n          sortable: true,\n          width: '120px',\n          hidden: !['myPending', '3'].includes(this.activeTab),\n          render: (schema, row) => `${this.formatValue(row[schema.field])}`\n        },\n        {\n          label: this.$t('purchaseRequest.preApprovalValue'),\n          field: 'totalValue',\n          sortable: 'custom',\n          width: '100px',\n          render: (schema, row) => `${this.formatValue(row[schema.field])} ${this.getCurrency(row.warehouse)}`\n        },\n        {\n          label: this.$t('purchaseRequest.postApprovalValue'),\n          field: 'hasApproval',\n          width: '100px',\n          sortable: 'custom',\n          render: (schema, row) => {\n            if (row[schema.field]) {\n              return `${this.formatValue(\n                row.lastApprovalTotalValue\n              )} ${this.getCurrency(row.warehouse)}`;\n            } else {\n              return '/';\n            }\n          }\n        },\n        {\n          label: this.$t('purchaseRequest.redBlackRatio'),\n          field: 'unHealthyRatio',\n          sortable: true,\n          width: '120px',\n          hidden: !['myPending', '3'].includes(this.activeTab),\n          render: (schema, row) => {\n            return row[schema.field] >= 0 ? `${row[schema.field]} %` : row[schema.field] || '/';\n          }\n        },\n        {\n          label: this.$t('purchaseRequest.redBlackQtyRatio'),\n          field: 'unhealthy_purchase_quantity_ratio',\n          sortable: true,\n          width: '110px',\n          hidden: !['myPending', '3'].includes(this.activeTab),\n          render: (schema, row) => {\n            return row[schema.field] >= 0 ? `${row[schema.field]} %` : row[schema.field] || '/';\n          }\n        },\n        { label: this.$t('purchaseRequest.status'), field: 'statusText' },\n        {\n          hidden: this.activeTab === 'myPR',\n          label: this.$t('purchaseRequest.requester'),\n          field: 'createdBy'\n        },\n        {\n          label: this.$t('purchaseOrder.createTime'),\n          field: 'createdDate',\n          width: '110px',\n          sortable: ['myPending', '3'].includes(this.activeTab)\n        },\n        {\n          label: this.$t('purchaseOrder.expectedInboundDate'),\n          field: 'expected_inbound_date',\n          sortable: true,\n          width: '110px',\n          hidden: !['myPending', '3'].includes(this.activeTab),\n          render: (schema, row) => {\n            return row[schema.field] ? `${row[schema.field]}` : '/';\n          }\n        },\n        {\n          label: this.$t('PRRemainingIBCapacity'),\n          field: 'remaining_inbound_capacity',\n          isOnlyMyPending: true\n        }\n      ].filter(item => {\n        if (this.activeTab === 'myPending') {\n          if (item.isOnlyTW) {\n            return (\n              this.selectRegion === 'TW' &&\n              this.showTableSchemaList.includes(item.field)\n            );\n          }\n          return !item.hidden && this.showTableSchemaList.includes(item.field);\n        } else {\n          // allPR、pendingPO、myPR\n          return !item.hidden && !item.isOnlyMyPending && this.PRPOTableSchemaList.includes(item.field);\n        }\n      });\n\n      return list;\n    },\n    taskType() {\n      return this.activeTab === 'poList' ? 7 : 6;\n    }\n  },\n  methods: {\n    formatUnderReservation(value) {\n      return (IRUnderReservationList.find(item => item.value === value) || { label: '/' }).label;\n    },\n    changeRegion(value) {\n      this.selectRegion = value;\n    },\n    formatValue,\n    handleTabClick(tab) {\n      if (this.activeTab !== tab.name) {\n        this.activeTab = tab.name;\n      }\n    },\n    changeTableSchema(list) {\n      if (['myPending', '3'].includes(this.activeTab)) {\n        this.showTableSchemaList = list;\n        localStorage.setItem('pmsDisplayFields', JSON.stringify(list));\n      } else {\n        this.PRPOTableSchemaList = list;\n        localStorage.setItem('PRPODisplayFields', JSON.stringify(list));\n      }\n    },\n    closeExportHistory() {\n      this.showExportHistoryDialog = false;\n    },\n    showExportHistory() {\n      this.showExportHistoryDialog = true;\n    },\n    linkSupplier(row) {\n      if (row.merchant_type === 'SELLER') {\n        const path = getSellerPageUrl('detail', { id: row.sbs_vendor_id });\n        this.$router.push(path);\n      } else {\n        this.$router.push({ path: `/admin/supplier/list/detail/${row.supplierID}` });\n      }\n    },\n    getCurrency(warehouse) {\n      return this.currencyMap[warehouse];\n    },\n    massSendSuccess() {\n      this.closeSendToSupplierDialog();\n      this.$refs.prList.onSearch();\n    },\n    massSendToSupplier(list) {\n      this.prList = list;\n      this.massSendDialogShow = true;\n    },\n    closeSendToSupplierDialog() {\n      this.prList = [];\n      this.massSendDialogShow = false;\n    }\n  },\n  created() {\n    this.showMyPR = hasPermission(Permission.MY_PURCHASE_REQUEST);\n    this.showPendingPO = hasPermission(Permission.PENDING_PO_GENERATION);\n    this.showAllPR = hasPermission(Permission.All_PURCHASE_REQUEST);\n    this.showMyPA = hasPermission(Permission.MY_PENDING_APPROVAL);\n    const activeTab = `${this.$route.query.activeTab}`;\n    this.tabList.some(item => {\n      if (this[item.field]) {\n        const tabOption = this.tabList.find(tab =>\n          tab.value.includes(activeTab)\n        );\n        if (tabOption && this[tabOption.field]) {\n          this.activeTab = tabOption.value[0];\n        } else if (tabOption) {\n          this.$message.error(\n            'You do not have permission to view this page, please contact the system administrator to add permissions'\n          );\n          this.$router.replace('/admin/dashboard');\n        } else {\n          this.activeTab = item.value[0];\n        }\n        return true;\n      }\n    });\n  },\n  components: {\n    PRList,\n    ExportHistoryDialog,\n    SendToSupplierDialog\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.my-purchase {\n  .el-select .el-select__tags > span {\n    display: inline-block;\n    white-space: nowrap;\n    overflow: hidden;\n  }\n}\n.my-purchase .el-tabs__item {\n  font-size: 21px;\n}\n.pms-warning-message-box {\n  width: 800px;\n}\n.message-box-warning {\n  .warning-title {\n    margin: -20px 0 20px 0;\n    font-size: 20px;\n    font-weight: 800;\n    text-align: left;\n  }\n  .warning-info {\n    display: flex;\n    align-items: center;\n    text-align: left;\n    line-height: 24px;\n    .warning-info-icon {\n      width: 60px;\n      color: #fcc155;\n      font-size: 24px;\n    }\n    a {\n      text-decoration: underline;\n      color: #bcccf0;\n    }\n    .info-download-icon {\n      margin-left: 10px;\n    }\n  }\n  .reserved-sku {\n    margin-top: 20px;\n    margin-left: 10%;\n    width: 80%;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/purchaseRequest/budgetOverview.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/purchaseRequest/create.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"prCreate\" is not PascalCase.","line":177,"column":9,"nodeType":"Literal","endLine":177,"endColumn":19,"fix":{"range":[9720,9728],"text":"PrCreate"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div class='create-pr-page pms-ui pms-ui-detail'>\n    <el-container>\n      <el-header class='pr-detail-header'>\n        <section class='left-info'>\n          <span class='pr-back-icon sprite-btn-back' @click='onCancelSubmit'></span>\n          <span class='pr-id'>{{$route.params.requestID || $t('purchaseRequest.createPRTitle') || ''}}</span>\n          <span class='pr-status'>{{purchaseRequest.statusText}}</span>\n        </section>\n        <section class='right-op' v-if='purchaseRequest.status === 0 || !edit'>\n          <div v-if='canDeletePR' class='delete-btn' @click=\"deletePR\">\n            {{$t('purchaseRequest.cancelPO')}}\n          </div>\n          <div class='submit-section' @click=\"confirmUpdate(0)\">\n            <span :class=\"`${actionLoading ? 'el-icon-loading' : 'sprite-btn-draft'} draft-icon`\"></span>\n            <div class='submit-btn'>{{$t('purchaseRequest.save')}}</div>\n          </div>\n          <div class='submit-section' @click=\"confirmUpdate(1)\">\n            <span :class=\"`${actionLoading ? 'el-icon-loading' : 'sprite-btn-submit'} submit-icon`\"></span>\n            <div class='submit-btn'>{{$t('purchaseOrder.submit')}}</div>\n          </div>\n        </section>\n        <section class='right-op' v-else-if='showSubmitButton'>\n          <div class='submit-section' v-if='purchaseRequest.status !== 6' @click=\"onCancelSubmit\">\n            <span class=\"sprite-btn-back submit-icon\"></span>\n            <div class='submit-btn'>{{$t('purchaseOrder.cancel')}}</div>\n          </div>\n          <div v-if='canDeletePR' class='delete-btn' @click=\"cancelPR\">\n            {{$t('prCancelPR')}}\n          </div>\n          <div class='submit-section' @click=\"confirmUpdate(2)\">\n            <span :class=\"`${actionLoading ? 'el-icon-loading' : 'sprite-btn-submit'} submit-icon`\"></span>\n            <div class='submit-btn'>{{$t('purchaseOrder.submit')}}</div>\n          </div>\n        </section>\n      </el-header>\n      <el-main>\n        <p class=\"pr-form-tips\">\n          <svg-icon iconClass=\"srmTips\"></svg-icon>\n          Please make sure all SKUs in one PR are either all re-inbound (including gift SKU) or all non-reinbound\n        </p>\n        <el-form :model=\"purchaseRequest\" label-width=\"200px\">\n          <el-row class='pms-ui general-form'>\n            <el-col v-for='item in generalSchema' :key='item.field' :span=\"item.width || 13\">\n              <el-form-item :prop=\"item.field\" :label=\"item.label\">\n                <span class='supplier-gap'>:</span>\n                <section class='supplier-info'>\n                  <el-autocomplete\n                    v-if='item.type === \"autoComplete\"'\n                    v-model.trim=\"purchaseRequest.supplier[item.field]\"\n                    :fetch-suggestions=\"querySupplier\"\n                    placeholder=\"Please input Vendor Site ID/Name\"\n                    @blur='onSupplierBlur'\n                    @select=\"handleSupplierSelect\">\n                  </el-autocomplete>\n                  <el-autocomplete\n                    v-else-if='item.type === \"sbsVendorId\"'\n                    v-model.trim=\"purchaseRequest.supplier[item.field]\"\n                    :fetch-suggestions=\"querySbsVendorId\"\n                    placeholder=\"Please input SBS Vendor ID\"\n                    @blur='onSbsVendorBlur'\n                    @select=\"handleSupplierSelect\">\n                  </el-autocomplete>\n                  <el-date-picker v-else-if='item.type === \"date\"' :value-format='`dd/MM/yyyy`' :picker-options=\"item.options\" v-model=\"purchaseRequest[item.field]\" type=\"date\"></el-date-picker>\n                  <el-select v-else-if='item.type === \"select\"' :disabled='!!item.disabeld' v-model=\"purchaseRequest[item.field]\"\n                    :clearable=\"item.clearable\">\n                    <el-option v-for=\"(option, optIdx) in item.options\" :key=\"optIdx\" :label=\"option.label || option\" :value=\"option.value || option\"></el-option>\n                  </el-select>\n                  <el-input class='input-remark' v-else-if='item.type === \"textarea\"' type=\"textarea\" :autosize=\"{minRows: 10, maxRows: 20}\" v-model=\"purchaseRequest[item.field]\"></el-input>\n                  <router-link v-else-if='item.type === \"link\"' :to='item.path'>{{item.value || ''}}</router-link>\n                  <span v-else>{{item.value || ''}}</span>\n                </section>\n              </el-form-item>\n            </el-col>\n          </el-row>\n          <budget-overview v-if='isNeedBudget && isOutrightType' :brandList='budgetBrandList' :skuList='purchaseRequest.skuList' :usdRate='countryGiftConf.exchange_rate_to_usd' :localCurrency='currency'></budget-overview>\n          <section v-if='!hiddenSkuModule' class='gift-action-row'>\n            <sku-upload\n              :title='$t(\"purchaseRequest.skuInfo\")'\n              actionUrl='/api/purchase_request_sku_upload/'\n              :config='uploadConfig'\n              @uploadSuccess='uploadAddSku'\n            />\n            <span v-if=\"isFromInboundReservation\" class=\"sku-remain-ib-quota\">{{`(${`${$t('IRRemainIBQuota')}: ${remainIBQty || '/'}`})`}}</span>\n          </section>\n          <PrCreateSku\n            @getSkuDate=\"getSKUDate\"\n            v-if='!hiddenSkuModule'\n            :purchaseRequest='purchaseRequest'\n            :healthList=\"inventoryHealthList\"\n            :unitList='unitList'\n            :purchasePriceConf='purchasePriceConf'\n            :errorSkuList='errorSkuList'\n            :taxCodeList='taxCodeList'\n            @addNewSku='onChooseSKU'\n            @removeSku='onRemoveSku'\n            @onServiceTypeChange=\"onServiceTypeChange\"\n          />\n          <section v-if='countryGiftConf.flag'>\n            <section class='gift-action-row'>\n              <span class='gift-title'>{{$t('purchaseRequest.giftInfo')}}</span>\n              <el-row type='flex' align='middle' justify='end' :gutter='10'>\n                <el-col :span=\"3.5\">\n                  <el-button v-if='!hiddenSkuModule' class='list-btn' @click=\"onAddAboveGift\" :disabled=\"addDisabled\">{{$t('purchaseRequest.addAboveGift')}}</el-button>\n                </el-col>\n                <el-col :span='3.5'>\n                  <el-button class='list-btn' @click=\"onAddNewGift\" :disabled=\"addDisabled\">{{$t('purchaseRequest.addNewGift')}}</el-button>\n                </el-col>\n              </el-row>\n            </section>\n              <p v-if=\"isAllReInbound\" class=\"pr-form-tips\">\n                <svg-icon iconClass=\"srmTips\"></svg-icon>\n                SKUs added to Gift information will be for re-inbound if normal SKUs are for re-inbound.\n              </p>\n            <gift-sku-list :skuList='purchaseRequest.skuList' :unitList='unitList' :giftList='purchaseRequest.giftList' @updateGiftSkuUnit='updateSkuUnit' @updateGiftSKUValue='updateGiftSKUValue' @onRemoveGift='onRemoveGift'></gift-sku-list>\n          </section>\n          <attachment :attachmentList=\"attachmentList\" @successUploadAttachment=\"handleSuccessUpload\" @deleteAttachment=\"handleDeleteUpload\" @setLoadingStatus=\"setLoadingStatus\"/>\n          <ServiceAddtionInfo\n            v-if=\"isShowServiceAdditionInfo\"\n            mode=\"EDIT\"\n            :additionList=\"purchaseRequest.additionSkuList\"\n            :skuList=\"purchaseRequest.skuList\"\n          />\n        </el-form>\n        <add-sku-dialog\n          v-if='countryGiftConf.flag'\n          :visible='dialogVisible'\n          :warehouse='purchaseRequest.warehouse'\n          :supplierID='purchaseRequest.supplier.supplierID'\n          :sbsVendorId='purchaseRequest.supplier.sbsVendorId'\n          :prSkuList='purchaseRequest.skuList'\n          :dialogType='dialogType'\n          :noVirtualSku=\"true\"\n          @close='onCloseChooseSKU'\n          @submitSKU='onConfirmChooseSKU'\n        >\n        </add-sku-dialog>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<script>\nimport { savePurchaseRequest, submitPurchaseRequest, getCountryGiftConf, getPurchasePriceConf, getPurchaseRequestDetail, getCountryTaxList, deletePurchaseRequest, PurchaseRequestCancelPo, getPreOrderDate } from '@/api/purchaseRequest';\nimport moment from 'moment';\nimport { isEmpty, remove, filter, concat } from 'lodash';\nimport { getSkusUnitList } from '@/api/unitConfig';\nimport { getSupplierList, getSbsVendorSupplierSearch } from '@/api/supplier';\nimport { getBudgetBrandOverview } from '@/api/budgetLine';\nimport { getSKUInventoryHealth } from '@/api/inventoryHealth';\nimport { parsePurchaseRequestDetail } from '@/utils';\nimport { formatValue } from '@/utils/format';\nimport { CBNominationType, ReturnCodeMap } from '@/utils/constant';\nimport { getSomeKeys } from '@/utils/formatParams';\nimport GiftSkuList from '@/components/Sku/gift';\nimport AddSkuDialog from '@/components/Dialog/addSkuDialog';\nimport PrCreateSku from '@/components/Sku/prCreateSku';\nimport SkuUpload from '@/components/upload/skuUpload';\nimport attachment from '@/components/Attachment';\nimport BudgetOverview from './budgetOverview';\nimport attachMixins from '@/components/Attachment/mixins';\nimport { isValidSkuList, isValidGiftList, isValidGiftUnit, isAdditionSkuListValid } from '@/utils/validate';\nimport checkIRRemainQty from '@/mixins/checkIRRemainQty';\nimport { getSellerPageUrl } from '@/views/FBS/sellerAndShop/utils';\nimport { getShopWhiteList } from '@/api/FBS/shopWhiteList';\nimport ServiceAddtionInfo from './serviceAddtionInfo';\nimport { getAdditionServiceList } from './utils';\n\nconst budgetGroup = ['FMCG', 'LifeStyle'];\n\n// 判断特殊逻辑的SKU\nexport function isSpecialSKU(purchaseRequest, sku) {\n  return purchaseRequest.country === 'ID' && /^[O|o]utright$/g.test(purchaseRequest.supplier.purchaseType) && budgetGroup.includes(sku.budget_cluster_code) && sku.reason !== 'Re-Inbound';\n}\n\nexport default {\n  name: 'prCreate',\n  mixins: [attachMixins, checkIRRemainQty],\n  data() {\n    return {\n      inboundDateOptions: {\n        disabledDate(time) {\n          return time.getTime() < Date.now() - 86400000;\n        }\n      },\n      edit: 0,\n      unitList: [],\n      budgetBrandList: [],\n      inventoryHealthList: [],\n      actionLoading: false,\n      initFlag: false,\n      purchaseRequest: {\n        supplier: {},\n        skuList: [],\n        additionSkuList: [], // 含有addition service的sku列表\n        giftList: [],\n        remark: '',\n        warehouse: '',\n        country: '', // ebs需求 country的value相当于approvalCountry，不过变量名不变\n        expectedInboundDate: '',\n        ebsCompanyCode: '',\n        orderType: '',\n        hasSupplierAdmin: false,\n        shopId: '',\n        shopName: ''\n      },\n      errorSkuList: [],\n      purchasePriceConf: {},\n      taxCodeList: [],\n      countryGiftConf: {\n        flag: 0,\n        flag_two: 0\n      },\n      CBNominationTypeOptions: CBNominationType,\n      dialogType: 1,\n      dialogVisible: false,\n      prCancelReason: 'Product not available',\n      budgetGroup,\n      ibrID: '',\n      isFromInboundReservation: false,\n      shopList: [],\n      warehouseListForShop: []\n    };\n  },\n  components: {\n    BudgetOverview,\n    GiftSkuList,\n    PrCreateSku,\n    AddSkuDialog,\n    SkuUpload,\n    attachment,\n    ServiceAddtionInfo\n  },\n  methods: {\n    formatValue,\n    goBack() {\n      this.$router.replace('/admin/purchase/request/approval');\n    },\n    changeCancelReason(val) {\n      this.prCancelReason = val;\n      this.$refs.selectReason.value = val;\n    },\n    deletePR() {\n      this.$msgbox({\n        title: '',\n        message: 'Are you sure to delete this PR?',\n        showCancelButton: true,\n        confirmButtonText: this.$t('purchaseOrder.Confirm'),\n        cancelButtonText: this.$t('purchaseOrder.cancel')\n      }).then(action => {\n        const params = {\n          request_id: this.$route.params.requestID\n        };\n        deletePurchaseRequest(params).then(resp => {\n          if (resp.retcode !== 0) {\n            this.$message.error(resp.info);\n          } else {\n            this.goBack();\n          }\n        });\n      }).catch(() => {});\n    },\n    cancelPR() {\n      const h = this.$createElement;\n      this.$msgbox({\n        title: this.$t('purchaseOrder.Remove_Reason'),\n        message: h('el-select', {\n          ref: 'selectReason',\n          props: {\n            value: this.prCancelReason\n          },\n          on: {\n            input: this.changeCancelReason\n          }\n        }, [\n          h('el-option', {\n            props: {\n              label: 'Product not available',\n              value: 'Product not available'\n            }\n          }),\n          h('el-option', {\n            props: {\n              value: 'Purchase price incorrect',\n              label: 'Purchase price incorrect'\n            }\n          }),\n          h('el-option', {\n            props: {\n              value: 'Found cheaper supplier',\n              label: 'Found cheaper supplier'\n            }\n          }),\n          h('el-option', {\n            props: {\n              value: 'SKU not approved',\n              label: 'SKU not approved'\n            }\n          })\n        ]),\n        showCancelButton: true,\n        confirmButtonText: this.$t('purchaseOrder.Confirm'),\n        cancelButtonText: this.$t('purchaseOrder.cancel')\n      }).then(action => {\n        const request_id = this.$route.params.requestID;\n        const last_status = this.purchaseRequest.status;\n        const new_status = 5;\n        const remark = this.prCancelReason || '';\n        PurchaseRequestCancelPo(request_id, last_status, new_status, remark).then(resp => {\n          if (resp.status !== 0) {\n            this.$message.error(resp.info);\n          } else {\n            this.goBack();\n          }\n        });\n      });\n    },\n    onCancelSubmit() {\n      this.$router.back();\n    },\n    getSkuValue(sku) {\n      return Math.round(sku.quantity * sku.purchasePrice * (sku.tax + 100)) / 100;\n    },\n    confirmUpdate(type) {\n      // type0代表保存草稿, type1代表创建pr单, type2代表重新提交pr单\n      if (this.actionLoading) return;\n      const { skuList, giftList, orderType, additionSkuList } = this.purchaseRequest;\n      if (!orderType) return this.$message.error('Order Type is required'); // 1-ordinary, 2-gift\n      if ((orderType === 1 && skuList.length <= 0) || (orderType === 2 && giftList.length <= 0)) {\n        this.$message.error('Please Choose Some SKU First!');\n        return;\n      }\n      const bannedCompanyCode = ['SPM', 'SPH'];\n      if (bannedCompanyCode.includes(this.purchaseRequest.ebsCompanyCode)) {\n        this.$message.error('Unable to create PR with EBS Company Code ' + this.purchaseRequest.ebsCompanyCode);\n        return;\n      }\n      const siteEndDate = this.purchaseRequest.supplier.siteEndDate;\n      if (type !== 0 && siteEndDate && Date.now() > moment(siteEndDate, 'YYYYMMDDHHmmSS').valueOf()) {\n        return this.$alert('This Supplier is expired in EBS，can not create new PR/PO !').then(() => {\n          this.purchaseRequest.supplier = { value: '' };\n        });\n      }\n      const rule = this.purchasePriceConf[this.purchaseRequest.supplier.purchaseType.toLowerCase()];\n      const errorMessage = isValidSkuList(skuList, rule) || isValidGiftList(giftList) || isValidGiftUnit(skuList, giftList);\n      if (errorMessage) {\n        this.$message.error(errorMessage);\n        return;\n      }\n      const additionSkuErrorMessage = isAdditionSkuListValid(additionSkuList, skuList);\n      if (additionSkuErrorMessage) {\n        this.$message({\n          type: 'error',\n          message: additionSkuErrorMessage,\n          dangerouslyUseHTMLString: true\n        });\n        return;\n      }\n      // attachmentList有假删除，有缓存，后台会自动过滤掉假删除的附件，但是这样会迷惑，这个应该是从srm过来的，逻辑应该可以去掉，需要跟后台确认，这个未来也建议改成新的上传组件。\n      const isEmptyAttachment = this.type !== 0 && this.purchaseRequest.country.toUpperCase() === 'TW' &&\n        this.isOutrightType && !this.purchaseRequest.hasSupplierAdmin && this.attachmentList.filter(item => item.status !== 2).length < 1;\n      if (isEmptyAttachment) {\n        return this.$message.error('please upload at least one attachment first');\n      }\n      const supplierKeyArr = ['supplierID', 'supplierName', 'purchaseType', 'paymentTerms', 'sbsVendorId', 'merchantType'];\n      const supplierKeyObj = {\n        supplierID: 'supplier_id',\n        supplierName: 'supplier_name',\n        purchaseType: 'purchase_type',\n        paymentTerms: 'payment_terms',\n        sbsVendorId: 'sbs_vendor_id',\n        merchantType: 'merchant_type'\n      };\n      const otheKeyArr = ['remark', 'country', 'warehouse', 'orderType'];\n      const otherKeyObj = { orderType: 'order_type' };\n\n      if (this.isSeller && !!this.purchaseRequest.shopId) {\n        otheKeyArr.push('shopId', 'shopName');\n        otherKeyObj.shopId = 'shop_id';\n        otherKeyObj.shopName = 'shop_name';\n      }\n      const params = {\n        attachment_list: this.attachmentList, // 附件提交参数，改key名需与后台确定\n        basic_info: {\n          request_id: this.$route.params.requestID || '',\n          ...getSomeKeys(this.purchaseRequest.supplier, supplierKeyArr, supplierKeyObj),\n          ...getSomeKeys(this.purchaseRequest, otheKeyArr, otherKeyObj),\n          total_value: this.calculateTotalValue()\n        },\n        sku_list: [...this.purchaseRequest.skuList, ...this.purchaseRequest.giftList].map(sku => {\n          const normalSku = sku.type === 1 ? (skuList.find(item => item.skuID === sku.skuID) || {}) : sku;\n          return {\n            sourcing_status: sku.type === 1 ? 0 : Number(sku.sourcingStatus),\n            replenishment_indicator: sku.replenishment_indicator,\n            value: sku.type === 1 ? 0 : this.getSkuValue(sku),\n            guide_purchase_price: Number(sku.guidePurchasePrice),\n            purchase_price: sku.type === 1 ? 0 : Number(sku.purchasePrice),\n            ...getSomeKeys(sku, [\n              'type', 'quantity', 'unit_id', 'unit_rate', 'reason', 'comment', 'skuID', 'externalSkuID', 'skuName', 'categoryID', 'brand_id'\n            ], {\n              skuID: 'sku_id',\n              externalSkuID: 'external_sku_id',\n              skuName: 'sku_name',\n              categoryID: 'category_id'\n            }),\n            reason: this.isAllReInbound ? 'Re-Inbound' : normalSku.reason || 'Deal',\n            service_type_list: sku.service_type_list || [],\n            expected_sales_date_str: normalSku.reason === 'Pre-Order' ? (normalSku.expected_sales_date_str || '') : '',\n            expected_fulfill_date_str: normalSku.reason === 'Pre-Order' ? (normalSku.expected_fulfill_date_str || '') : '',\n            tax_code: sku.type === 1 ? '' : sku.taxCode,\n            tax: sku.type === 1 ? 0 : sku.tax\n          };\n        }),\n        service_addition_list: additionSkuList\n      };\n      if (this.isCBType) {\n        if (this.purchaseRequest.CBNominationType) {\n          params.basic_info.cb_nomination_type = this.purchaseRequest.CBNominationType;\n        } else {\n          this.$message.error(this.$t('purchaseRequest.cbNominationTypeLostTip'));\n          return;\n        }\n      }\n      if ((this.countryFlagTwo(1) || this.isCBType) && !this.purchaseRequest.expectedInboundDate) {\n        return this.$message.error('Expected Inbound Date is required.');\n      }\n      if (this.purchaseRequest.expectedInboundDate) {\n        params.basic_info.expected_inbound_date_str = this.purchaseRequest.expectedInboundDate;\n      }\n      if (this.ibrID) {\n        params.inbound_reservation = this.ibrID;\n      }\n      const fun = type === 0 ? savePurchaseRequest : submitPurchaseRequest;\n      const fetchRequest = () => {\n        this.actionLoading = true;\n        fun(params).then(resp => {\n          this.actionLoading = false;\n          const retcode = resp.retcode;\n          if (retcode === ReturnCodeMap.BUDGET_EXCESS_FORBIDDEN || retcode === ReturnCodeMap.BUDGET_EXCESS_ALLOWED) {\n            this.$confirm(resp.info, '', {\n              confirmButtonText: 'Confirm',\n              cancelButtonText: 'Close',\n              showConfirmButton: retcode === ReturnCodeMap.BUDGET_EXCESS_ALLOWED\n            }).then(() => {\n              params.basic_info.confirm_budget_submit = 'Y';\n              fetchRequest();\n            }).catch(() => { this.actionLoading = false; });\n          } else if (retcode === ReturnCodeMap.SKU_MISS_LIFECYCLE_FORBIDDEN || retcode === ReturnCodeMap.SKU_MISS_LIFECYCLE_ALLOWED) {\n            const h = this.$createElement;\n            this.$msgbox({\n              title: retcode === ReturnCodeMap.SKU_MISS_LIFECYCLE_ALLOWED ? 'Warning Message' : 'Error Message',\n              message: h('ul', null, (resp.info.missing_lifecycle_msg_list || []).map(item => h('li', null, item))),\n              showConfirmButton: retcode === ReturnCodeMap.SKU_MISS_LIFECYCLE_ALLOWED,\n              showCancelButton: true,\n              confirmButtonText: 'Confirm',\n              cancelButtonText: 'Close'\n            }).then(() => {\n              params.basic_info.confirm_lifecycle_submit = 'Y';\n              fetchRequest();\n            }).catch(() => { this.actionLoading = false; });\n          } else if (retcode === ReturnCodeMap.SKU_CATEGORY_GROUP_ERROR) {\n            this.$message.error(resp.info);\n            this.errorSkuList = resp.data.verify_fail_sku_ids || [];\n          } else if (retcode === 300 || retcode === 303) { // 300-sourcing status error 303-indicator error\n            this.$message.error(resp.info);\n            if (this.$route.params.requestID) {\n              this.getDetail(this.$route.params.requestID);\n            }\n          } else if (retcode !== 0) {\n            this.$message.error(resp.info);\n          } else {\n            this.$message.success(resp.info);\n            this.$router.push({ path: `/admin/purchase/request/approval` });\n          }\n        }).catch(() => {\n          this.$message.error('Failed');\n          this.actionLoading = false;\n        });\n      };\n      fetchRequest();\n    },\n    onAddAboveGift() {\n      this.dialogType = 2;\n      this.dialogVisible = true;\n    },\n    onAddNewGift() {\n      this.dialogType = 3;\n      this.dialogVisible = true;\n    },\n    countryFlagTwo(index) {\n      // TW、MY、VN都需要出现并校验expectedInboundDateOption\n      return ['TW', 'MY', 'VN'].includes(this.countryGiftConf.country);\n      // return this.countryGiftConf.flag_two.toString(2).split('').reverse()[index] === '1';\n    },\n    onChooseSKU() {\n      this.dialogType = 1;\n      this.dialogVisible = true;\n    },\n    onRemoveSku(index, row) {\n      this.purchaseRequest.skuList.splice(index, 1);\n      this.removeAdditionSku(row.sku_id);\n    },\n    onServiceTypeChange(sku, serviceTypes) {\n      const skuId = sku.sku_id;\n\n      if (isEmpty(serviceTypes)) { // 删除一个addition sku\n        this.removeAdditionSku(skuId);\n        return;\n      }\n\n      const index = this.purchaseRequest.additionSkuList.findIndex(item => item.sku_id === skuId);\n      const serviceList = getAdditionServiceList(sku, serviceTypes);\n      if (index < 0) { // 新增一个addition sku\n        const item = {\n          sku_id: skuId,\n          service_list: serviceList\n        };\n        this.purchaseRequest.additionSkuList.push(item);\n      } else { // 修改addition sku\n        this.$set(this.purchaseRequest.additionSkuList[index], 'service_list', serviceList);\n      }\n    },\n    removeAdditionSku(id) {\n      remove(this.purchaseRequest.additionSkuList, item => item.sku_id === id);\n      this.purchaseRequest.additionSkuList = [...this.purchaseRequest.additionSkuList]; // 更新视图\n    },\n    onRemoveGift(index, row) {\n      this.purchaseRequest.giftList.splice(index, 1);\n    },\n    uploadAddSku(response) {\n      if (response.status === 58) {\n        const skuIDStr = (response.data.purchase_price_cannot_modify_sku_ids || []).join(',');\n        const h = this.$createElement;\n        this.$msgbox({\n          title: 'Tips',\n          message: h('div', null, [\n            h('p', { style: 'color: green; font-size: 16px;' }, 'Upload successfully!'),\n            h('p', null, 'Purchase price(pre-tax) in file is different from that in system: sku id'),\n            h('p', null, skuIDStr)\n          ]),\n          showCancelButton: true,\n          showConfirmButton: false,\n          closeOnClickModal: false,\n          cancelButtonText: this.$t('purchaseRequest.close')\n        }).catch(() => {});\n      } else {\n        this.$message.success('Upload Success!');\n      }\n      this.setPurchaseData(response);\n    },\n    // TODO upload处理数据,待校验\n    setPurchaseData(response) {\n      const uploadSkuList = [];\n      const uploadGiftList = [];\n      (response.data.sku_list || []).forEach(sku => {\n        const item = {\n          type: sku.type,\n          skuID: sku.sku_id,\n          externalSkuID: sku.external_sku_id,\n          skuName: sku.sku_name,\n          categoryID: sku.category_id,\n          categoryName: sku.category_name,\n          guidePurchasePrice: parseFloat(sku.guide_purchase_price),\n          sourcingStatus: sku.type === 1 ? 0 : sku.sourcing_status,\n          min_order_quantity: sku.min_order_quantity,\n          purchasePrice: sku.type === 1 ? 0 : sku.purchase_price,\n          taxCode: sku.tax_code,\n          hasTaxCodeFromSCBS: sku.tax_code !== '' || sku.tax === 0,\n          tax: sku.tax_code === '' ? '' : sku.tax,\n          reason: sku.reasonText,\n          replenishment_indicator: sku.replenishment_indicator,\n          service_type_list: sku.service_type_list || [],\n          expected_sales_date_str: sku.reasonText === 'Pre-Order' ? (sku.expected_sales_date_str || '') : '',\n          expected_fulfill_date_str: sku.reasonText === 'Pre-Order' ? (sku.expected_fulfill_date_str || '') : '',\n          ...getSomeKeys(sku, ['sku_id', 'barcode', 'unit_id', 'unit_rate', 'comment', 'quantity', 'brand_id', 'brand_name', 'selling_type']),\n          value: sku.type === 1 ? 0 : Math.round(sku.quantity * sku.purchase_price * (sku.tax + 100)) / 100\n        };\n        if (this.purchaseRequest.country === 'ID' && /^[O|o]utright$/g.test(this.purchaseRequest.supplier.purchaseType) && this.budgetGroup.includes(sku.budget_cluster_code) && sku.reason !== 'Re-Inbound') {\n          item.purchasePrice = item.guidePurchasePrice;\n          item.value = sku.type === 1 ? 0 : Math.round(sku.quantity * item.purchasePrice * (sku.tax + 100)) / 100;\n          item.purchasePriceDisabled = true;\n        }\n        item.purchasePriceAfter = Math.round(item.purchasePrice * (100 + Number(item.tax))) / 100;\n        if (sku.type === 0) {\n          uploadSkuList.push(item);\n        } else if (sku.type === 1) {\n          uploadGiftList.push(item);\n        }\n      });\n      this.purchaseRequest.skuList = [...this.purchaseRequest.skuList.filter(item => !uploadSkuList.find(sku => sku.skuID === item.skuID)), ...uploadSkuList];\n      this.purchaseRequest.giftList = [...this.purchaseRequest.giftList.filter(item => !uploadGiftList.find(sku => sku.skuID === item.skuID)), ...uploadGiftList];\n\n      this.mergeAdditionSkuList(response.data.service_addition_list || []);\n    },\n    mergeAdditionSkuList(incomeList = []) {\n      const incomeSkuIds = incomeList.map(item => item.sku_id);\n      const oldList = filter(this.purchaseRequest.additionSkuList, item => !incomeSkuIds.includes(item.sku_id));\n      const newList = concat(oldList, incomeList);\n      this.purchaseRequest.additionSkuList = newList;\n    },\n    onConfirmChooseSKU(skuListSelected) {\n      if (this.dialogType === 2 || this.dialogType === 3) { // 2,3是添加gift sku\n        const list = skuListSelected.filter(item => !this.purchaseRequest.giftList.find(sku => sku.skuID === item.skuID)).map(item => Object.assign({}, item, {\n          sourcingStatus: 0,\n          tax: 0,\n          quantity: null,\n          purchasePrice: 0,\n          reason: 'Deal',\n          comment: '',\n          unit_id: '',\n          unit_rate: 1,\n          value: 0,\n          type: 1,\n          unit_price_payload: [\n            {\n            skuID: item.skuID,\n            purchasePrice: item.purchasePrice,\n            purchasePriceDisabled: !!item.purchasePriceDisabled,\n            quantity: item.quantity,\n            unit_id: item.unit_id,\n            unit_name: item.unit_name,\n            unit_rate: item.unit_rate,\n            purchasePriceAfter: item.purchasePriceAfter,\n            guidePurchasePrice: item.guidePurchasePrice,\n            value: item.value\n          }\n          ]\n        }));\n        this.purchaseRequest.giftList = [...this.purchaseRequest.giftList, ...list];\n        this.dialogVisible = false;\n        return;\n      }\n      if (skuListSelected.length <= 0) {\n        this.$message.error('chooseSKU is not selected.');\n        return;\n      }\n      const list = skuListSelected.filter(item => !this.purchaseRequest.skuList.find(sku => sku.skuID === item.skuID)).map(item => { // 排除已存在的sku，避免出现重复sku\n        item.type = 0;\n        this.$set(item, 'service_type_list', []);\n        if (/^[C|c]onsignment$/g.test(this.purchaseRequest.supplier.purchaseType) && this.countryGiftConf.flag_two % 2 === 1) {\n          item.purchasePrice = 0; // tw需求，Consignment供应商的采购价可以为0且默认为0\n        }\n        if (this.purchaseRequest.country === 'ID' && /^[O|o]utright$/g.test(this.purchaseRequest.supplier.purchaseType) && this.budgetGroup.includes(item.budget_cluster_code) && item.reason !== 'Re-Inbound') {\n          item.purchasePrice = item.guidePurchasePrice;\n          item.purchasePriceDisabled = true;\n        }\n        return item;\n      });\n      this.purchaseRequest.skuList = [...this.purchaseRequest.skuList, ...list];\n      this.dialogVisible = false;\n    },\n    updateSkuUnit(row) {\n      const skuUnitList = this.getSkuUnitList(row);\n      const unitConfig = skuUnitList.find(item => item.unit_id === row.unit_id) || {};\n      row.unit_rate = unitConfig.unit || 1;\n      row.guidePurchasePrice = unitConfig.guide_purchase_price || row.guidePurchasePrice;\n    },\n    updateGiftSKUValue(row) {\n      if (row.quantity <= 0) {\n        this.$message.error('Quantity is not more than 0. when sku = ' + row.skuID);\n      }\n    },\n    onCloseChooseSKU() {\n      this.dialogVisible = false;\n    },\n    calculateTotalValue() {\n      let totalValue = 0.00;\n      for (let i = 0; i < this.purchaseRequest.skuList.length; i++) {\n        if (this.purchaseRequest.skuList[i].value) {\n          totalValue += this.purchaseRequest.skuList[i].value;\n        } else {\n          this.purchaseRequest.skuList[i].value = 0;\n        }\n      }\n      totalValue = Math.round(totalValue * 100) / 100;\n      return totalValue;\n    },\n    onSupplierBlur() {\n      // 在blur强制使用上一次的value以避免用户操作失误，若用户选择了建议，则会在select事件中覆盖为最新选择\n      this.purchaseRequest.supplier.supplierID = this.purchaseRequest.supplier.lastSupplierId;\n    },\n    onSbsVendorBlur() {\n      // 在blur强制使用上一次的value以避免用户操作失误，若用户选择了建议，则会在select事件中覆盖为最新选择\n      this.purchaseRequest.supplier.sbsVendorId = this.purchaseRequest.supplier.lastSbsVendorId;\n    },\n    querySupplier(queryString = '', cb) {\n      const params = {\n        pageno: 1,\n        count: 20,\n        key: `${queryString}`.trim(),\n        approval_country: this.countryList.join('_')\n      };\n      getSupplierList(params).then(resp => {\n        if (resp.status !== 0) {\n          this.$message.error(resp.info);\n          cb([]);\n        } else {\n          if (resp.data.list.length === 0) {\n            this.$message.error('this supplier ID is not exist.');\n            cb([]);\n            return;\n          }\n          cb(resp.data.list.map(supplier => {\n            return this.handleQueryResult(supplier);\n          }));\n        }\n      });\n    },\n    querySbsVendorId(queryString = '', cb) {\n      const params = {\n        pageno: 1,\n        count: 20,\n        sbs_vendor_id: `${queryString}`.trim(),\n        approval_country: this.countryList.join('_'),\n        merchant_type: 'ALL' // sbs vendor id 新增seller数据，这里需要传All查询所有，不传默认查询supplier\n      };\n      getSbsVendorSupplierSearch(params).then(resp => {\n        if (resp.status !== 0) {\n          this.$message.error(resp.info);\n          cb([]);\n        } else {\n          if (resp.data.list.length === 0) {\n            this.$message.error('this Sbs Vendor ID is not exist.');\n            cb([]);\n            return;\n          }\n          cb(resp.data.list.map(supplier => {\n            return this.handleQueryResult(supplier, 'sbs');\n          }));\n        }\n      });\n    },\n    handleQueryResult(supplier, id) {\n      const result = {\n        value: supplier['supplier_id'],\n        supplierID: supplier['supplier_id'],\n        parentSupplierID: supplier['parent_supplier_id'],\n        approvalCountry: supplier['approval_country'],\n        supplierType: supplier.supplier_type,\n        supplierName: supplier['name'],\n        purchaseType: supplier['purchase_type'],\n        paymentTerms: supplier['payment_method'],\n        moq: supplier['minimum_order_quantity'],\n        siteEndDate: supplier['site_end_date'] || '',\n        ebsCompanyCode: supplier['company_code'],\n        sbsVendorId: supplier['sbs_vendor_id'],\n        hasSupplierAdmin: supplier['has_supplier_admin'],\n        merchantType: supplier['merchant_type']\n      };\n      if (id === 'sbs') {\n        result.value = supplier['sbs_vendor_id'];\n      }\n      return result;\n    },\n    handleSupplierSelect(item) {\n      this.purchaseRequest.supplier = item;\n      this.purchaseRequest.supplier.lastSupplierId = item.supplierID;\n      this.purchaseRequest.supplier.lastSbsVendorId = item.sbsVendorId;\n      this.purchaseRequest.ebsCompanyCode = item.ebsCompanyCode;\n      this.purchaseRequest.country = item.approvalCountry;\n      this.purchaseRequest.hasSupplierAdmin = item.hasSupplierAdmin;\n      this.purchaseRequest.shopId = '';\n      this.warehouseListForShop = [];\n      if (item.merchantType === 'SELLER') {\n        this.getShopList();\n      }\n    },\n    getSkuUnitList(row = {}) {\n      return (this.unitList.find(item => item.sku_id === row.skuID) || {}).sku_unit_list || [];\n    },\n    getSKUDate(skuID, index) {\n      getPreOrderDate({ sku_list: [skuID], supplier_id: this.purchaseRequest.supplier.supplierID }).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          const item = (resp.data.suggestion || []).find(sku => sku.sku_id === skuID) || {};\n          this.$set(this.purchaseRequest.skuList[index], 'expected_sales_date_str', item.expected_sales_date_str || '');\n          this.$set(this.purchaseRequest.skuList[index], 'expected_fulfill_date_str', item.expected_fulfill_date_str || '');\n        }\n      }).catch(() => {});\n    },\n    getBudgetBrandList() {\n      if (!this.initFlag || !this.isNeedBudget) {\n        this.budgetBrandList = [];\n        return Promise.resolve([]);\n      }\n\n      const list = this.purchaseRequest.skuList.map(item => item.skuID);\n      return getBudgetBrandOverview({\n        supplier_id: this.purchaseRequest.supplier.supplierID,\n        sku_id_list: list,\n        sbs_vendor_id: this.purchaseRequest.supplier.sbsVendorId\n      }).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.budgetBrandList = (resp.data.budget_overview || {}).brand_list || [];\n        }\n      });\n    },\n    getInventoryHealthList() {\n      if (!this.initFlag || !this.purchaseRequest.skuList.length) {\n        this.inventoryHealthList = [];\n        return Promise.resolve([]);\n      }\n      const list = this.purchaseRequest.skuList.map(item => item.skuID);\n      return getSKUInventoryHealth({\n        whs_id: this.purchaseRequest.warehouse,\n        country: this.purchaseRequest.country,\n        supplier_id: this.purchaseRequest.supplier.supplierID,\n        sku_id_list: list\n      }).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.inventoryHealthList = resp.data || [];\n        }\n      });\n    },\n    getUnitList(list) {\n      if (!this.initFlag) return Promise.resolve([]);\n      return getSkusUnitList({ sbsVendorId: this.purchaseRequest.supplier.sbsVendorId, skus: list }).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.unitList = resp.data.sku_list || [];\n        }\n      });\n    },\n    // 根据supplier_id获取绑定的shop\n    async getShopList() {\n      this.shopList = [];\n      try {\n        const params = {\n          page_no: 1,\n          count: 20,\n          sbs_vendor_id: this.purchaseRequest.supplier.sbsVendorId\n        };\n        const res = await getShopWhiteList(params);\n        if (res && res.retcode === 0) {\n          const { list = [] } = res.data;\n          this.shopList = list.map(item => ({value: item.shop_id, label: item.shop_name, whs_id_list: item.whs_id_list}))\n                          .filter(item => item.label);\n        } else {\n          this.$message.error(res.message || 'failed to connect network, pls try it again later');\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    getDetail(requestID) {\n       getPurchaseRequestDetail(requestID).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.purchaseRequest = parsePurchaseRequestDetail(resp.data);\n          const isValidSku = this.purchaseRequest.country === 'ID' && /^[O|o]utright$/g.test(this.purchaseRequest.supplier.purchaseType);\n          this.purchaseRequest.skuList = this.purchaseRequest.skuList.map(sku => {\n            if (isValidSku && this.budgetGroup.includes(sku.budget_cluster_code) && sku.reason !== 'Re-Inbound') {\n              sku.purchasePrice = sku.guidePurchasePrice;\n              sku.purchasePriceDisabled = true;\n            }\n            return Object.assign({}, sku, {\n              purchasePriceAfter: Math.round(sku.purchasePrice * (100 + Number(sku.tax))) / 100,\n              value: this.getSkuValue(sku),\n              hasTaxCodeFromSCBS: sku.taxCode !== '' || sku.tax === 0,\n              tax: sku.taxCode === '' ? '' : sku.tax\n            });\n          });\n          if (resp.data['attachment_list']) {\n            this.resetAPIData(resp.data['attachment_list']);\n          }\n          if (this.isSeller) {\n            this.purchaseRequest.shopId = resp.data.shop_id || ''; // shop_id 是非必填字段 没填会返回0 但页面不能展示0\n            this.getShopList();\n          }\n          const { supplier_id } = this.purchaseRequest;\n          if (supplier_id) {\n            this.querySupplier(supplier_id, (supplierList) => {\n              this.purchaseRequest.hasSupplierAdmin = supplierList[0].hasSupplierAdmin;\n            });\n          }\n        }\n      });\n    }\n  },\n  computed: {\n    isNeedBudget() {\n      const list = this.purchaseRequest.skuList || [];\n      return this.isOutrightType && list.length && list.every(item => item.reason !== 'Re-Inbound');\n    },\n    isAllReInbound() {\n      const list = this.purchaseRequest.skuList || [];\n      return list.length && list.every(item => item.reason === 'Re-Inbound');\n    },\n    isShowServiceAdditionInfo() {\n      return !this.hiddenSkuModule && !isEmpty(this.purchaseRequest.additionSkuList);\n    },\n    canDeletePR() {\n      return this.isRequester && (this.purchaseRequest.status === 0 || this.purchaseRequest.status === 6);\n    },\n    isRequester() {\n      return this.$store.getters.username === this.purchaseRequest.requester;\n    },\n    totalValue() {\n      return this.calculateTotalValue();\n    },\n    isCBType() {\n      return this.purchaseRequest.supplier.supplierType === 'CB';\n    },\n    isOutrightType() {\n      return this.purchaseRequest.supplier.purchaseType === 'Outright';\n    },\n    hiddenSkuModule() {\n      return this.purchaseRequest.orderType === 2;\n    },\n    isSeller() {\n      return this.purchaseRequest.supplier.merchantType === 'SELLER';\n    },\n    generalSchema() {\n      const dateSchema = [];\n      const expectedInboundDateOption = { label: this.$t('purchaseOrder.expectedInboundDate'), type: this.isFromInboundReservation ? '' : 'date', field: 'expectedInboundDate', options: this.inboundDateOptions, value: this.isFromInboundReservation ? this.purchaseRequest.expectedInboundDate.replace(/(\\d+)\\/(\\d+)\\/(\\d+)/, '$3-$2-$1') : '' };\n      const CBNominationTypeOption = { label: this.$t('purchaseRequest.CBNominationType'), type: 'select', field: 'CBNominationType', options: this.CBNominationTypeOptions };\n      if (this.countryFlagTwo(1) || this.isCBType) {\n        dateSchema.push(expectedInboundDateOption);\n      }\n      if (this.isCBType) {\n        dateSchema.push(CBNominationTypeOption);\n      }\n      return [\n        { label: this.$t('purchaseRequest.requester'), width: 14, value: this.purchaseRequest.requester || this.$store.getters.username || '' },\n        { label: this.$t('purchaseRequest.prTotalValue'), width: 8, value: `${this.formatValue(this.totalValue)} ${this.currency}` },\n        { label: this.$t('supplierSBSVendorID'), width: 14, field: 'sbsVendorId', value: this.purchaseRequest.supplier.sbsVendorId || '', type: (this.edit || this.isFromInboundReservation) ? '' : 'sbsVendorId' },\n        { label: this.$t('purchaseOrder.vendorSideID'), width: 14, field: 'supplierID', value: this.purchaseRequest.supplier.supplierID || '', type: (this.edit || this.isFromInboundReservation) ? '' : 'autoComplete', hidden: this.isSeller },\n        { label: this.$t('purchaseOrder.vendorSideID'), width: 14, field: 'supplierID', value: '/', hidden: !this.isSeller },\n        { label: this.$t('commonShop'), width: 14, type: this.isFromInboundReservation ? '' : 'select', field: 'shopId', value: this.purchaseRequest.shopId,\n          disabeld: !!this.edit, options: this.shopList, hidden: !this.isSeller, clearable: true },\n        { label: this.$t('purchaseOrder.ebsCompanyCode'), width: 14, field: 'ebsCompanyCode', value: this.purchaseRequest.ebsCompanyCode || '' },\n        { label: this.$t('purchaseRequest.remark'), width: 8, type: 'textarea', field: 'remark' },\n        { label: this.$t('purchaseRequest.region'), field: 'country', value: this.purchaseRequest.country || '' },\n        { label: this.$t('userRole.userList.warehouse'), type: this.isFromInboundReservation ? '' : 'select', field: 'warehouse', disabeld: !!this.edit, options: (this.warehouseList || []), value: this.purchaseRequest.warehouse },\n        { label: this.$t('purchaseOrder.supplierID'), width: 14, field: 'parentSupplierID', value: this.purchaseRequest.supplier.parentSupplierID || '' },\n        { label: this.$t('purchaseRequest.supplierName'), value: this.purchaseRequest.supplier.supplierName || '', type: 'link',\n          path: this.isSeller ? getSellerPageUrl('detail', {id: this.purchaseRequest.supplier.sbsVendorId}) : `/admin/supplier/list/detail/${this.purchaseRequest.supplier.supplierID}` },\n        { label: this.$t('purchaseOrder.supplierType'), width: 14, value: this.purchaseRequest.supplier.supplierType || '' },\n        { label: this.$t('purchaseRequest.purchaseType'), value: this.purchaseRequest.supplier.purchaseType || '' },\n        { label: this.$t('purchaseRequest.paymentTerms'), value: this.purchaseRequest.supplier.paymentTerms || '' },\n        { label: this.$t('purchaseRequest.moq'), value: this.purchaseRequest.supplier.moq || '' },\n        { label: this.$t('purchaseRequest.orderType'), field: 'orderType', type: 'select', value: this.purchaseRequest.orderType || '', options: [{ label: 'Ordinary', value: 1 }, { label: 'Gift', value: 2 }] },\n        ...dateSchema\n      ].filter(item => !item.hidden);\n    },\n    warehouseList() {\n      return this.isSeller && this.purchaseRequest.shopId\n        ? this.warehouseListForShop\n        : this.$store.getters.countryList\n          .filter(item => item.country === this.purchaseRequest.country)\n          .map(item => ({ label: item.warehouse, value: item.warehouse }));\n    },\n    countryList() {\n      return [...new Set(this.$store.getters.countryList.map(item => item.country))];\n    },\n    currency() {\n      return this.$store.getters.currencyMap[this.purchaseRequest.country] || '';\n    },\n    addDisabled() {\n      return !this.purchaseRequest.supplier.sbsVendorId || this.purchaseRequest.warehouse === '';\n    },\n    showSubmitButton() {\n      const username = this.$store.getters.username;\n      return [2, 5, 6].includes(this.purchaseRequest.status) && this.purchaseRequest.requester === username;\n    },\n    allSkuIDList() {\n      return [...new Set([...this.purchaseRequest.skuList.map(item => item.skuID), ...this.purchaseRequest.giftList.map(item => item.skuID)])];\n    },\n    uploadConfig() {\n      return {\n        templateLink: '/admin/data/SKUListTemplate.xlsx',\n        uploadDisabled: this.addDisabled,\n        data: {\n          supplier_id: this.purchaseRequest.supplier.supplierID,\n          sbs_vendor_id: this.purchaseRequest.supplier.sbsVendorId,\n          warehouse: this.purchaseRequest.warehouse\n        },\n        name: 'excel'\n      };\n    }\n  },\n  watch: {\n    isNeedBudget(newVal) {\n      if (newVal) {\n        this.getBudgetBrandList();\n      }\n    },\n    async allSkuIDList(newList, oldList) {\n      if (this.isOutrightType) {\n        await this.getBudgetBrandList();\n      }\n      await this.getInventoryHealthList();\n      if (!newList.length) return;\n      const size = new Set([...newList, ...oldList]).size;\n      if (size !== newList.length || size !== oldList.length) {\n        await this.getUnitList(newList);\n      }\n      [...this.purchaseRequest.skuList, ...this.purchaseRequest.giftList].filter(item => !item.unit_id).forEach(item => {\n        const unitConfig = this.unitList.find(unit => unit.sku_id === item.skuID) || {}; // filter过滤掉了没有unitid的情况，也就是新增的情况，后面从add sku dialog新增的情况也过滤掉了，要查查批量上传的会不会没有unitid这些\n        item.unit_id = unitConfig.default_unit_id;\n        const skuUnit = unitConfig.sku_unit_list.find(unit => unit.unit_id === unitConfig.default_unit_id) || {};\n        item.unit_rate = skuUnit.unit || 1;\n        item.guidePurchasePrice = skuUnit.guide_purchase_price || item.guidePurchasePrice;\n        // // 箱规需求增加 sku可添加多个unit https://confluence.shopee.io/pages/viewpage.action?pageId=380839827\n        Array.isArray(item.unit_price_payload) && item.unit_price_payload.forEach(unitPriceItem => {\n          unitPriceItem.unit_id = item.unit_id;\n          unitPriceItem.unit_rate = item.unit_rate;\n          unitPriceItem.guidePurchasePrice = item.guidePurchasePrice;\n        });\n      });\n    },\n    hiddenSkuModule(now) {\n      if (now) this.purchaseRequest.skuList = [];\n    },\n    'purchaseRequest.shopId'(nv) {\n      if (this.edit) return false; // 编辑状态不处理\n      this.purchaseRequest.warehouse = '';\n      const selectShop = (this.shopList.find(item => item.value === nv) || { whs_id_list: [], label: ''});\n      this.purchaseRequest.shopName = selectShop.label;\n      this.warehouseListForShop = selectShop.whs_id_list.map(item => ({label: item, value: item}));\n    },\n    'purchaseRequest.warehouse': function(now, prev) {\n      if (!this.edit) {\n        this.purchaseRequest.skuList = [];\n        this.purchaseRequest.giftList = [];\n      }\n    },\n    'purchaseRequest.country': {\n      async handler(now, prev) {\n        if (now) {\n          if (!this.edit && !this.isFromInboundReservation) {\n            this.purchaseRequest.warehouse = '';\n            this.purchaseRequest.expectedInboundDate = '';\n          }\n          const params = {\n            country: now\n          };\n          await getPurchasePriceConf(params).then(resp => {\n            if (resp.status !== 0) {\n              this.$message.error(resp.info);\n            } else {\n              this.purchasePriceConf = resp.data;\n            }\n          });\n          await getCountryGiftConf(params).then(resp => {\n            if (resp.status !== 0) {\n              this.$message.error(resp.info);\n            } else {\n              this.countryGiftConf = resp.data;\n              this.countryGiftConf.flag_two = this.countryGiftConf.flag_two || 0;\n            }\n          });\n          await getCountryTaxList(params).then(resp => {\n            if (resp.status !== 0) {\n              this.$message.error(resp.info);\n            } else {\n              this.taxCodeList = resp.data.tax_conf_list || [];\n            }\n          });\n          this.initFlag = true;\n          if (!this.unitList.length && this.allSkuIDList.length) {\n            await this.getUnitList(this.allSkuIDList);\n            if (this.isOutrightType) {\n              await this.getBudgetBrandList();\n            }\n            await this.getInventoryHealthList();\n          }\n        }\n      },\n      immediate: true\n    },\n    'purchaseRequest.supplier.value': function() {\n      this.purchaseRequest.skuList = [];\n      this.purchaseRequest.giftList = [];\n      if (this.isFromInboundReservation) {\n        this.purchaseRequest.warehouse = '';\n        this.purchaseRequest.expectedInboundDate = '';\n      }\n    }\n  },\n  created() {\n    if (this.$store.getters.ibrToPRData) {\n      const ibrCatchData = this.$store.getters.ibrToPRData;\n      this.ibrID = ibrCatchData.ibr_id;\n      this.isFromInboundReservation = true;\n      this.getWmsRemainingIbQuota(ibrCatchData.warehouse, ibrCatchData.expected_inbound_date, ibrCatchData.vendor_site_id);\n      if (ibrCatchData.sbs_vendor_id) {\n        this.querySbsVendorId(ibrCatchData.sbs_vendor_id, (list) => {\n          if (Array.isArray(list) && list.length) {\n            const item = list[0];\n            this.purchaseRequest.supplier = item;\n            this.purchaseRequest.ebsCompanyCode = item.ebsCompanyCode;\n            this.purchaseRequest.country = item.approvalCountry;\n            this.$nextTick(() => {\n              this.purchaseRequest.warehouse = ibrCatchData.warehouse || '';\n              this.purchaseRequest.expectedInboundDate = ibrCatchData.expected_inbound_date.replace(/(\\d+)\\-(\\d+)\\-(\\d+)/, '$3/$2/$1') || '';\n            });\n          }\n        });\n      }\n      this.$store.commit('CLEAR_IBR_CREATE_PR_DATA');\n    }\n    const requestID = this.$route.params.requestID;\n    if (requestID) {\n      this.edit = 1;\n      this.getDetail(requestID);\n    }\n  }\n};\n</script>\n\n<style>\n.block-padding {\n  padding-top: 12px;\n}\n\n#app-container .el-upload-list {\n  float: right;\n}\n.c-icon-download {\n  margin-left: 6px;\n}\n.create-pr-table .error-sku {\n  background-color: #f56c6c;\n}\n.create-pr-page .general-form .el-input__inner, .create-pr-page .general-form .el-input {\n  width: 220px;\n}\n.create-pr-page .general-form  .el-date-editor .el-input__inner {\n  padding-left: 30px;\n}\n</style>\n\n<style lang=\"scss\" scoped>\n.pr-form-tips {\n  padding: 10px;\n  color: #666;\n  overflow: hidden;\n  background: rgb(254,246,227);\n  margin-bottom: 20px;\n  line-height: 2em;\n}\n  .pr-detail-header {\n    position: sticky;\n    margin-bottom: 30px;\n    z-index: 1;\n    top: 0;\n    background: #fff;\n  }\n  .left-info {\n    position: absolute;\n    top: 0;\n    left: 20px;\n    min-width: 20%;\n    padding-left: 5px;\n    height: 60px;\n    line-height: 60px;\n    border-bottom: 2px solid #f0f2f5;\n  }\n  .right-op {\n    position: absolute;\n    top: 0;\n    right: 20px;\n    padding-left: 5px;\n    height: 60px;\n    line-height: 60px;\n  }\n  .pr-back-icon {\n    display: inline-block;\n    margin-right: 10px;\n    transform: scale(1.2);\n  }\n  .pr-id {\n    color: rgb(215, 215, 215);\n    font-size: 26px;\n    margin-right: 20px;\n  }\n  .pr-status {\n    color: rgb(244, 171, 97);\n  }\n  .supplier-gap {\n    display: inline-block;\n    margin-left: 8px;\n    vertical-align: top;\n  }\n  .supplier-info {\n    display: inline-block;\n    max-width: 300px;\n    margin-left: 20px;\n    word-break: break-all;\n    vertical-align: middle;\n    position: relative;\n    a {\n      text-decoration: underline;\n    }\n    .input-remark {\n      position: absolute;\n      top: -6px;\n      left: 0px;\n      width: 200px;\n    }\n  }\n  .supplier-right-info {\n    float: right;\n    margin-right: 30px;\n  }\n  .gap-line {\n    position: relative;\n    height: 1px;\n    width: 80%;\n    float: right;\n    margin-top: 5px;\n    background-color: rgb(225, 225, 225)\n  }\n  .submit-section {\n    position: relative;\n    float: left;\n    width: 180px;\n    height: 50px;\n    margin: 15px 10px 0 0;\n    line-height: 50px;\n    font-size: 14px;\n    color: #86cd57;\n    cursor: pointer;\n    border: 1px solid #86cd57;\n    border-radius: 3px;\n    background-color: #fff;\n    transition: background .3s linear;\n  }\n  .submit-section:hover {\n    background-color: #86cd57;\n    color: #fff;\n    border-color: #fff;\n  }\n  .submit-section:hover .submit-icon {\n    background-position: 0 -1797px;\n  }\n  .submit-section:hover .draft-icon {\n    background-position: 0 -739px\n  }\n  .submit-icon, .draft-icon {\n    display: inline-block;\n    vertical-align: middle;\n    margin-left: 40px;\n  }\n  .submit-btn {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    padding-left: 42px;\n    box-sizing: border-box;\n    text-align: center;\n  }\n  .gift-title {\n    float: left;\n    font-size: 22px;\n    color: rgba(0,0,0,.6);\n  }\n  .gift-action-row {\n    position: relative;\n    margin: 20px 0;\n    overflow: hidden;\n  }\n  .sku-remain-ib-quota {\n    position: absolute;\n    left: 0px;\n    top: 60px;\n    color: #9a9a9a;\n  }\n  .gift-action-row .list-btn {\n    width: auto;\n    padding-left: 20px;\n    padding-right: 20px;\n  }\n  .gift-action-row .list-btn:hover {\n    color: #fff;\n    background-color: #3d6ed1;\n  }\n\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/purchaseRequest/detail.vue","messages":[{"ruleId":"vue/no-side-effects-in-computed-properties","severity":2,"message":"Unexpected side effect in \"reviewer\" computed property.","line":787,"column":19,"nodeType":"CallExpression","endLine":787,"endColumn":62}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div id=\"app-container\" class='pr-detail'>\n    <el-container>\n      <el-header class='pr-detail-header'>\n        <section class='left-info'>\n          <span class='pr-back-icon sprite-btn-back' @click='goBack'></span>\n          <span class='pr-id'>{{$route.params.requestID}}</span>\n          <span class='pr-status'>{{purchaseRequest.statusText}}</span>\n        </section>\n        <section v-if='purchaseRequest.needGroup' class='right-op'>\n          <div v-if='canReSubmit' class='export-btn' @click=\"reSubmitPR\">\n            {{$t('purchaseRequest.reSubmit')}}\n          </div>\n          <div v-if='canWithdrawn' class='delete-btn' @click=\"withdrawPR\">\n            {{$t('purchaseRequest.withdrawPR')}}\n          </div>\n        </section>\n        <section v-else-if='purchaseRequest.canApproval' class='right-op'>\n          <div @click='onGOPrev' :class='`previous-btn sprite-btn-turnPagePrevious-${prevOrderID ? \"active\" : \"disabled\"}`'></div>\n          <div @click='onGONext' :class='`next-btn sprite-btn-turnPageNext-${nextOrderID ? \"active\" : \"disabled\"}`'></div>\n          <div class='approve-btn' @click=\"onApprovalDialog\">\n            <svg-icon icon-class=\"checkSelect\" />\n            {{`${$t('purchaseRequest.approveNext')}(${pendingTotal - 1})`}}\n          </div>\n          <div class='reject-btn' @click=\"onRejectDialog\">\n            <svg-icon icon-class=\"error\" />\n            {{$t('purchaseRequest.reject')}}\n          </div>\n        </section>\n        <section v-else class='right-op'>\n          <div v-if='([2, 3, 7].includes(purchaseRequest.status))&& canDeletePR' class='delete-btn' @click=\"deletePR\">\n            {{$t('prCancelPR')}}\n          </div>\n          <div v-if='canReSubmit' class='export-btn' @click=\"reSubmitPR\">\n            {{$t('purchaseRequest.reSubmit')}}\n          </div>\n          <div v-if='canWithdrawn' class='delete-btn' @click=\"withdrawPR\">\n            {{$t('purchaseRequest.withdrawPR')}}\n          </div>\n          <div class='export-btn' v-if='canExportPR' @click='onExportPR'>{{$t('purchaseRequest.export')}}</div>\n          <div v-if='canSendToSupplier' class='approve-btn' @click=\"sendToSupplier\">\n            <svg-icon icon-class=\"checkSelect\" />\n            {{$t('prSendToSupplier')}}\n          </div>\n          <div v-if='canGenerate' class='approve-btn' @click=\"generatePO\">\n            <svg-icon icon-class=\"checkSelect\" />\n            {{$t('purchaseRequest.startPO')}}\n          </div>\n        </section>\n        <div class='action-log-btn' @click='showActionDialog'>{{$t('purchaseRequest.actionLog')}}</div>\n      </el-header>\n\n      <el-main>\n        <el-form :model=\"purchaseRequest\" label-width=\"200px\">\n          <div class='info-view'>\n            <section class='left-view'>\n              <el-row v-for='item in supplierInfo' :key='item.label' :style='item.style || \"\"'>\n                <el-form-item :label=\"$t(item.label)\">\n                  <span class='supplier-gap'>{{':'}}</span>\n                  <span class='supplier-info'>\n                    {{item.value || ''}}\n                  </span>\n                </el-form-item>\n              </el-row>\n            </section>\n            <section class='right-view'>\n              <el-tabs tab-position='bottom' v-model='activeOverview'>\n                <el-tab-pane name='value' :label=\"$t('purchaseRequest.prSummaryOverview')\"></el-tab-pane>\n                <el-tab-pane name='budget' :label=\"$t('budget.budgetOverview')\" v-if='!isAllReInbound && purchaseRequest.supplier.purchaseType === \"Outright\"'></el-tab-pane>\n              </el-tabs>\n              <summary-overview v-if='activeOverview === \"value\"' :skuList=\"purchaseRequest.skuList\" :approvalList=\"purchaseRequest.approvalList\" :usdRate='countryGiftConf.exchange_rate_to_usd' :localCurrency='currency'></summary-overview>\n              <budget-overview v-if='activeOverview === \"budget\"' :requestID='$route.params.requestID' :usdRate='countryGiftConf.exchange_rate_to_usd' :localCurrency='currency'></budget-overview>\n              <section class='reviewer-item'>\n                <span class='el-form-item__label'>{{$t('purchaseRequest.reviewer')}}</span>\n                <span>:</span>\n                <span class='supplier-viewer'>{{reviewer}}</span>\n              </section>\n              <comments :purchaseRequest='purchaseRequest'></comments>\n            </section>\n          </div>\n          <div class=\"gap-section\"></div>\n          <span v-if=\"!hiddenSkuModule\" class='sku-title'>{{$t('purchaseRequest.skuInfo')}}</span>\n          <el-row v-if=\"!hiddenSkuModule\" type='flex' align='middle' justify='end'>\n            <el-col :span='1.5'>\n              <span style=\"margin-left:2px; color: #587CCF;\">\n                  <i class=\"el-icon-download\" @click=\"onDownTmp\">\n                    {{$t('purchaseRequest.template')}}\n                  </i>\n              </span>\n            </el-col>\n            <el-col :span='3.5'>\n              <el-upload\n                class=\"upload-demo el-button--medium\"\n                ref='uploadComp'\n                :action=\"uploadUrl\"\n                :with-credentials='true'\n                :show-file-list='false'\n                :limit=\"1\"\n                :on-success=\"uploadSuccess\"\n                :on-error=\"uploadError\"\n                :headers='uploadHeader'\n                :disabled='!purchaseRequest.canApproval'\n                :data=\"getCsrfData()\"\n              >\n                <el-button :disabled='!purchaseRequest.canApproval' type=\"primary\" class='upload-btn'>\n                  {{$t('purchaseRequest.massUploadQty')}}\n                </el-button>\n              </el-upload>\n            </el-col>\n          </el-row>\n          <el-row v-if=\"!hiddenSkuModule\" class=\"pms-ui\">\n            <el-col :span=\"5\">\n              <el-form-item label-width=\"160px\" :label=\"$t('skuMgt.inventoryHealthTag')\">\n                <el-select class=\"select-health\" @change=\"handleSearch\" v-model=\"searchForm.healthTag\">\n                  <el-option value=\"\" label=\"All\"></el-option>\n                  <el-option v-for=\"item in healthLevelValueList\" :key=\"item.color\" :value=\"item.label\" :label=\"''\">\n                    <div class=\"color-tag\" :style=\"{ 'background-color': item.color }\"></div>\n                  </el-option>\n                </el-select>\n              </el-form-item>\n            </el-col>\n            <el-col class=\"right-action-btn\" :span=\"2\">\n              <el-button @click=\"handleSearch\" class=\"list-btn\">{{$t('purchaseRequest.search')}}</el-button>\n            </el-col>\n          </el-row>\n          <SkuList\n            v-if=\"!hiddenSkuModule && !!searchForm.healthTag\"\n            :purchaseRequest='{ ...purchaseRequest, skuList: resultList }'\n            @updateValue='updateApprovalTotalValue'\n            @approvalGroup='onApprovalDialog'\n            @rejectGroup='onRejectDialog'\n            @onServiceTypeChange=\"onServiceTypeChange\"\n          />\n          <SkuList\n            v-if=\"!hiddenSkuModule\"\n            :purchaseRequest=\"{ ...purchaseRequest, skuList: !!searchForm.healthTag ? filterList : purchaseRequest.skuList }\"\n            @updateValue='updateApprovalTotalValue'\n            @approvalGroup='onApprovalDialog'\n            @rejectGroup='onRejectDialog'\n            @onServiceTypeChange=\"onServiceTypeChange\"\n          />\n          <section v-if='countryGiftConf.flag'>\n            <span class='gift-title'>\n              <i :class='`el-icon-${!giftExpand ? \"plus\" : \"minus\"}`' @click=\"onExpandGift\">\n                {{$t('purchaseRequest.giftInfo')}}\n              </i>\n            </span>\n            <gift-group-list v-if=\"giftExpand\" :purchaseRequest='purchaseRequest' @approvalGroup='onApprovalDialog' @rejectGroup='onRejectDialog'></gift-group-list>\n          </section>\n\n          <section v-if='countryFlagTwo(1) || purchaseRequest.supplier.supplierType === \"CB\"'>\n            <span class='gift-title'>\n              <i :class='`el-icon-${!inboundExpand ? \"plus\" : \"minus\"}`' @click=\"onExpandInbound\">\n                {{$t('purchaseRequest.inboundTitle')}}\n              </i>\n            </span>\n            <expected-date-table v-if='inboundExpand' :showTitle=false :inboundTableData='inboundTableData' :inboundPlanningData='[]'></expected-date-table>\n          </section>\n\n          <attachment :attachmentList=\"attachmentList\" :isShowBtn=\"false\" :isAllowDelete=\"false\" @setLoadingStatus=\"setLoadingStatus\"/>\n          <ServiceAddtionInfo\n            v-if=\"isShowServiceAdditionInfo\"\n            :mode=\"purchaseRequest.canApproval ? 'APPROVAL_DETAIL' : 'VIEW_DETAIL'\"\n            :additionList=\"purchaseRequest.additionSkuList\"\n            :skuList=\"purchaseRequest.skuList\"\n            :originAdditionList=\"originAdditionSkuList\"\n          />\n\n          <el-dialog :title=\"dialogType === 1 ? $t('purchaseRequest.reason') : $t('purchaseRequest.comment')\" :visible.sync=\"dialogVisible\">\n            <el-form>\n              <el-form-item>\n                <el-input type=\"textarea\" :maxlength=\"128\" :autosize=\"{minRows: 5, maxRows: 10}\" v-model=\"approvalInfo.remark\"></el-input>\n              </el-form-item>\n              <div class=\"content-center\">\n                <el-button :loading='actionLoading' type=\"primary\" @click=\"onConfirm\">{{$t('purchaseRequest.confirm')}}</el-button>\n                <el-button @click=\"onDialogClose\">{{$t('purchaseRequest.close')}}</el-button>\n              </div>\n            </el-form>\n          </el-dialog>\n\n        </el-form>\n      </el-main>\n    </el-container>\n    <action-log-dialog :visible='actionDialogShow' :requestID='$route.params.requestID' @close='closeActionDialog'></action-log-dialog>\n    <send-to-supplier-dialog @refresh=\"fetchDetail\" :date=\"purchaseRequest.expectedInboundDate\" :country=\"purchaseRequest.country\" :visible=\"sendToSupplierDialogShow\" @close=\"closeSendToSupplier\"></send-to-supplier-dialog>\n  </div>\n</template>\n\n<script>\nimport { isEmpty, remove, isInteger } from 'lodash';\nimport ActionLogDialog from '@/components/actionLogDialog';\nimport { getPurchaseRequestDetail, withdrawnPurchaseRequest, getCountryGiftConf, approvalPurchaseRequest, getPurchaseApprovalNext, getPurchaseRequestExport, PurchaseRequestCancelPo } from '@/api/purchaseRequest';\nimport { parsePurchaseRequestDetail } from '@/utils';\nimport { SKUSourcingStatusText, CBNominationType, OrderType, healthLevelValueList, Permission } from '@/utils/constant';\nimport { formatValue } from '@/utils/format';\nimport { hasPermission } from '@/utils/permission';\nimport SkuList from '@/components/Sku';\nimport GiftGroupList from '@/components/Sku/giftGroup';\nimport attachment from '@/components/Attachment';\nimport attachMixins from '@/components/Attachment/mixins';\nimport BudgetOverview from './budgetOverview';\nimport Comments from '@/components/Comments';\nimport SummaryOverview from '@/components/Overview/summaryOverview';\nimport moment from 'moment';\nimport ExpectedDateTable from '@/views/purchaseOrder/expectedDateTable';\nimport SendToSupplierDialog from './sendPRDialog';\nimport { getCsrfHeader, getCsrfData } from '@/utils/cookie';\nimport ServiceAddtionInfo from './serviceAddtionInfo';\nimport { getApprovalAdditionServiceList } from './utils';\n\nconst deepClone = (data, defaultResult) => {\n  try {\n    const result = JSON.parse(JSON.stringify(data));\n    return result;\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.warn(e);\n    return defaultResult;\n  }\n};\n\nexport default {\n  name: 'PRDetail',\n  mixins: [attachMixins],\n  data() {\n    return {\n      purchaseRequest: {\n        canApproval: false,\n        supplier: {\n          supplierID: '',\n          parentSupplierID: '',\n          supplierName: '',\n          purchaseType: '',\n          paymentTerms: ''\n        },\n        skuList: [],\n        additionSkuList: [],\n        giftList: [],\n        status: '',\n        approvalList: [],\n        totalValue: 0.00,\n        country: '',\n        lastApprovalTotalValue: 0.00,\n        CBNominationType: '',\n        ebsCompanyCode: ''\n      },\n      originAdditionSkuList: [], // 记录初始的addition sku service detail\n      approvalInfo: {\n        remark: '',\n        skuList: [],\n        totalValue: 0.00\n      },\n      dialogVisible: false,\n      dialogType: 0, // approve 0, reject 1\n      filterList: [],\n      healthLevelValueList,\n      resultList: [],\n      searchForm: {\n        healthTag: ''\n      },\n      nextOrderID: '',\n      prevOrderID: '',\n      pendingTotal: 1,\n      uploadUrl: `${location.protocol}//${location.host}/api/purchase_requests/${this.$route.params.requestID}/approval/upload_skus/`,\n      countryGiftConf: {\n        exchange_rate_to_usd: '',\n        flag_two: 0\n      },\n      actionDialogShow: false,\n      activeOverview: 'value', // value-SummaryOverview, budget-budgetOverview\n      giftExpand: false,\n      inboundExpand: false,\n      canStartPO: false,\n      sendToSupplierDialogShow: false,\n      canDeletePR: false,\n      canExportPR: false,\n      actionLoading: false,\n      prCancelReason: 'Product not available',\n      skuIDList: [],\n      unitList: [],\n      isShowBtn: false\n    };\n  },\n  methods: {\n    getCsrfData,\n    getCsrfHeader,\n    formatValue,\n    moment,\n    goBack() {\n      const activeTab = this.$route.query.activeTab;\n      this.$router.replace(`/admin/purchase/request/approval?activeTab=${activeTab}`);\n    },\n    onGOPrev() {\n      if (this.prevOrderID) {\n        this.$router.push(`/admin/purchase/request/detail/${this.prevOrderID}`);\n      }\n    },\n    onGONext() {\n      if (this.nextOrderID) {\n        this.$router.push(`/admin/purchase/request/detail/${this.nextOrderID}`);\n      }\n    },\n    onExpandGift() {\n      this.giftExpand = !this.giftExpand;\n    },\n    onExpandInbound() {\n      this.inboundExpand = !this.inboundExpand;\n    },\n    reSubmitPR() {\n      this.$confirm('Confirm to Re-Submit this PR ?', 'Warning', {\n        showCancel: true\n      }).then(() => {\n        this.$router.push(`/admin/purchase/request/edit/${this.$route.params.requestID}`);\n      }).catch(() => {});\n    },\n    withdrawPR() {\n      this.$prompt('Withdraw Reason', `Confirm to withdraw this PR ?`, {\n        confirmButtonText: 'Confirm',\n        cancelButtonText: 'Cancel',\n        inputValidator: value => value && value.replace(/(^\\s*)|(\\s*$)/g, '').length > 0 ? true : 'Reason Can Not Be Empty!'\n      }).then(({ value }) => {\n        withdrawnPurchaseRequest({ requestID: this.$route.params.requestID, reason: value }).then(resp => {\n          if (resp.retcode !== 0) {\n            this.$message.error(resp.info);\n          } else {\n            this.$message.success('success');\n            this.fetchDetail();\n          }\n        });\n      }).catch(() => {});\n    },\n    onExportPR() {\n      const requestID = this.$route.params.requestID;\n      getPurchaseRequestExport(requestID);\n    },\n    handleSearch() {\n      // todo refactor\n      const { healthTag = '' } = this.searchForm;\n      const resultList = [];\n      const filterList = [];\n      const isSearch = !!healthTag;\n      const healthColor = (healthLevelValueList.find(item => item.label === healthTag) || {}).color || '';\n      this.purchaseRequest.skuList.forEach(sku => {\n        if (isSearch && sku.health_tag.includes(healthColor)) {\n          resultList.push({ ...sku, canApproval: false });\n        } else {\n          filterList.push({ ...sku, canApproval: false });\n        }\n      });\n      this.resultList = resultList;\n      this.filterList = filterList;\n    },\n    changeCancelReason(val) {\n      this.prCancelReason = val;\n      this.$refs.selectReason.value = val;\n    },\n    deletePR() {\n      const h = this.$createElement;\n      this.$msgbox({\n        title: this.$t('purchaseOrder.Remove_Reason'),\n        message: h('el-select', {\n          ref: 'selectReason',\n          props: {\n            value: this.prCancelReason\n          },\n          on: {\n            input: this.changeCancelReason\n          }\n        }, [\n          h('el-option', {\n            props: {\n              label: 'Product not available',\n              value: 'Product not available'\n            }\n          }),\n          h('el-option', {\n            props: {\n              value: 'Purchase price incorrect',\n              label: 'Purchase price incorrect'\n            }\n          }),\n          h('el-option', {\n            props: {\n              value: 'Found cheaper supplier',\n              label: 'Found cheaper supplier'\n            }\n          }),\n          h('el-option', {\n            props: {\n              value: 'SKU not approved',\n              label: 'SKU not approved'\n            }\n          })\n        ]),\n        showCancelButton: true,\n        confirmButtonText: this.$t('purchaseOrder.Confirm'),\n        cancelButtonText: this.$t('purchaseOrder.cancel')\n      }).then(action => {\n        const request_id = this.$route.params.requestID;\n        const last_status = this.purchaseRequest.status;\n        const new_status = 5;\n        const remark = this.prCancelReason || '';\n        PurchaseRequestCancelPo(request_id, last_status, new_status, remark).then(resp => {\n          if (resp.status !== 0) {\n            this.$message.error(resp.info);\n          } else {\n            this.goBack();\n          }\n        });\n      });\n    },\n    generatePO() {\n      if (!this.purchaseRequest.supplier.supplierID) {\n        this.$message.error(`PR of SBS Vendor ID can't  generate PO before getting vendor site id`);\n        return;\n      }\n      const requestID = this.$route.params.requestID;\n      this.$router.push({ path: `/admin/purchase/order/create/${requestID}` });\n    },\n    sendToSupplier() {\n      this.sendToSupplierDialogShow = true;\n      // const requestID = this.$route.params.requestID;\n    },\n    closeSendToSupplier() {\n      this.sendToSupplierDialogShow = false;\n    },\n    showActionDialog() {\n      this.actionDialogShow = true;\n    },\n    closeActionDialog() {\n      this.actionDialogShow = false;\n    },\n    approval(action) {\n      const params = {\n        action,\n        requestID: this.$route.params.requestID,\n        remark: this.approvalInfo.remark,\n        change: this.approvalInfo.skuList.map(sku => [sku.skuID, sku.lastApprovalQuantity, sku.approvalQuantity]),\n        total_value: Number(this.approvalInfo.totalValue)\n      };\n      if (this.skuIDList.length) {\n        params.sku_ids = this.skuIDList;\n      } else {\n        params.sku_ids = this.purchaseRequest.skuIDList;\n      }\n\n      // 筛选出本次审批的addition sku\n      const filteredAdditionSkus = this.purchaseRequest.additionSkuList.filter(item => params.sku_ids.includes(item.sku_id));\n      params.service_addition_list = filteredAdditionSkus;\n\n      this.actionLoading = true;\n      approvalPurchaseRequest(params).then(resp => {\n        this.actionLoading = false;\n        if (resp.status !== 0 && resp.status !== 5008) {\n          this.$confirm(resp.info, `${this.dialogType === 1 ? this.$t('purchaseRequest.reject') : this.$t('purchaseRequest.approval')} Failed!`, {\n            cancelButtonText: 'Close',\n            type: 'error',\n            showConfirmButton: false,\n            center: true\n          });\n        } else {\n          // 没有vendor site id则给个提示，会自动转换为PO\n          if (resp.status === 5008) {\n            this.$message.success('Successfully! This PR will generate PO automatically after EBS returns Vendor Site ID.');\n          }\n          this.skuIDList = [];\n          if (action === 0 && this.nextOrderID) {\n            this.$router.replace({ path: `/admin/purchase/request/detail/${this.nextOrderID}` });\n          } else {\n            this.fetchDetail();\n          }\n        }\n        this.onDialogClose();\n      }).catch(() => {\n        this.$message.error('Failed');\n        this.actionLoading = false;\n        this.dialogVisible = false;\n      });\n    },\n    validateSKU(approvalType) {\n      let errorMessage = '';\n      this.approvalInfo.skuList.some((sku, index) => {\n        if (!Number.isInteger(sku.approvalQuantity)) {\n          errorMessage = `Approved Qty for [SKU ID: ${sku.skuID}] should be integer`;\n          return true;\n        }\n        if (sku.approvalQuantity < 0) {\n          errorMessage = `Approved Qty for [SKU ID: ${sku.skuID}] should be positive integer`;\n          return true;\n        }\n        if (sku.approvalQuantity !== 0 && sku.approvalQuantity * sku.unit_rate < sku.min_order_quantity && sku.reason !== 'Re-Inbound') {\n          errorMessage = `Approved Qty for [SKU ID: ${sku.skuID}] must be >= MOQ. Please revise the approved qty or put 0 to reject this SKU and proceed with the PR`;\n          return true;\n        }\n        if (sku.approvalQuantity > sku.lastApprovalQuantity) {\n          errorMessage = `Approved Qty for [SKU ID: ${sku.skuID}] should not greater than last approval quantity`;\n          return true;\n        }\n      });\n\n      // 校验Service addition info\n      if (approvalType === 'APPROVE' && !isEmpty(this.purchaseRequest.additionSkuList)) {\n          for (const sku of this.purchaseRequest.additionSkuList) {\n            const skuId = sku.sku_id;\n            const target = this.purchaseRequest.skuList.find(item => item.sku_id === skuId);\n            if (!target) {\n              errorMessage = `Can not find SKU: ${skuId}`;\n              break;\n            }\n\n            const isApproveQtyValid = sku.service_list.every(({approved_service_qty}) => (\n              isInteger(approved_service_qty) &&\n              (approved_service_qty > 0) &&\n              (approved_service_qty <= target.approvalQuantity * target.unit_rate)\n            ));\n            if (!isApproveQtyValid) {\n              errorMessage = `${this.$t('approvedServiceQtyInputTip')}(${skuId})`;\n              break;\n            }\n\n            const isServiceDetailValid = sku.service_list.every(({service_type, service_detail}) => {\n              if (service_type !== 2) {\n                return true;\n              }\n              const values = Object.values(service_detail);\n              return values.every(value => isInteger(value) && value >= 0) && values.some(value => value > 0);\n            });\n            if (!isServiceDetailValid) {\n              errorMessage = `${this.$t('serviceDetailValidateTip')}(${skuId})`;\n              break;\n            }\n          }\n      }\n\n      if (!this.hiddenSkuModule && this.approvalInfo.skuList.every(sku => sku.approvalQuantity === 0)) {\n        errorMessage = 'approved qty should not be 0 for all sku if you wanna approve this PR !';\n      }\n      return errorMessage;\n    },\n    onApprovalDialog(skuIDList) {\n      const errorMessage = this.validateSKU('APPROVE');\n      if (errorMessage) {\n        this.$message.error(errorMessage);\n        return;\n      }\n      if (skuIDList && Array.isArray(skuIDList)) {\n        this.skuIDList = skuIDList;\n      }\n      this.dialogVisible = true;\n      this.dialogType = 0;\n    },\n    onRejectDialog(skuIDList) {\n      const errorMessage = this.validateSKU('REJECT');\n      if (errorMessage) {\n        this.$message.error(errorMessage);\n        return;\n      }\n      if (skuIDList && Array.isArray(skuIDList)) {\n        this.skuIDList = skuIDList;\n      }\n      this.dialogVisible = true;\n      this.dialogType = 1;\n    },\n    countryFlagTwo(index) {\n      // TW、MY、VN都需要出现并校验expectedInboundDateOption\n      return ['TW', 'MY', 'VN'].includes(this.countryGiftConf.country);\n      // return this.countryGiftConf.flag_two.toString(2).split('').reverse()[index] === '1';\n    },\n    onServiceTypeChange(sku, serviceTypes) {\n      const skuId = sku.sku_id;\n      if (isEmpty(serviceTypes)) { // 移除一个addition sku\n        remove(this.purchaseRequest.additionSkuList, item => item.sku_id === skuId);\n        this.purchaseRequest.additionSkuList = [...this.purchaseRequest.additionSkuList]; // 更新视图\n        return;\n      }\n\n      const index = this.purchaseRequest.additionSkuList.findIndex(item => item.sku_id === skuId);\n      const serviceList = getApprovalAdditionServiceList(sku, serviceTypes, this.purchaseRequest.additionSkuList);\n      if (index < 0) { // 新增一个addition sku\n        const item = {\n          sku_id: skuId,\n          service_list: serviceList\n        };\n        this.purchaseRequest.additionSkuList.push(item);\n      } else {\n        const currentAdditionSku = this.purchaseRequest.additionSkuList[index];\n        this.$set(currentAdditionSku, 'service_list', serviceList);\n      }\n    },\n    onDownTmp() {\n      const requestID = this.$route.params.requestID;\n      window.open(`${location.protocol}//${location.host}/api/purchase_requests/${requestID}/export_skus/`);\n    },\n    uploadSuccess(res) {\n      if (res.status !== 0) {\n        this.$message.error(res.info);\n        this.$refs.uploadComp.clearFiles();\n      } else {\n        this.$message.success('Upload Success!');\n        this.$refs.uploadComp.clearFiles();\n        this.fetchDetail(true);\n      }\n    },\n    uploadError() {\n      this.$message.error('Upload Failed!');\n      this.$refs.uploadComp.clearFiles();\n    },\n    onDialogClose() {\n      this.dialogVisible = false;\n    },\n    onConfirm() {\n      if (this.dialogType === 1 && !this.approvalInfo.remark) {\n        return this.$message.error('Reason is required');\n      }\n      if (this.dialogType === 1 && this.approvalInfo.remark.length > 128) {\n        return this.$message.error('Reason can not be more than 128');\n      }\n      this.approval(this.dialogType);\n    },\n    fetchDetail(useUpload) {\n      if (!useUpload) {\n        this.activeOverview = 'value';\n        this.purchaseRequest.canApproval = false;\n        this.purchaseRequest.skuList = [];\n        this.approvalInfo.skuList = [];\n        this.skuIDList = [];\n      }\n      const requestID = this.$route.params.requestID;\n      return getPurchaseRequestDetail(requestID).then(resp => {\n        if (resp.status !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.purchaseRequest = parsePurchaseRequestDetail(resp.data);\n          this.originAdditionSkuList = deepClone(this.purchaseRequest.additionSkuList, []);\n          this.approvalInfo.skuList = this.purchaseRequest.skuList;\n          if ((this.purchaseRequest.approvalList || []).length) {\n            this.purchaseRequest.skuList.forEach(sku => {\n              sku['sourcingStatus'] = SKUSourcingStatusText[sku['sourcingStatus']];\n              this.$set(sku, 'approvalQuantity', sku.lastApprovalQuantity);\n              sku.purchasePriceAfter = Math.round(sku.purchasePrice * (100 + sku.tax)) / 100;\n            });\n          } else {\n            this.purchaseRequest.lastApprovalTotalValue = this.purchaseRequest.totalValue;\n            this.purchaseRequest.skuList.forEach(sku => {\n              sku['sourcingStatus'] = SKUSourcingStatusText[sku['sourcingStatus']];\n              this.$set(sku, 'approvalQuantity', sku.quantity);\n              sku['lastApprovalQuantity'] = sku['quantity'];\n              sku.purchasePriceAfter = Math.round(sku.purchasePrice * (100 + sku.tax)) / 100;\n            });\n          }\n          this.approvalInfo.totalValue = parseFloat(this.purchaseRequest.lastApprovalTotalValue).toFixed(2);\n          if (useUpload) {\n            let totalValue = 0;\n            this.approvalInfo.skuList.forEach(item => {\n              item.approvalQuantity = item.uploadQuantity >= 0 ? item.uploadQuantity : item.approvalQuantity;\n              totalValue += parseFloat(item.approvalQuantity * item.purchasePrice * (100 + item.tax) / 100);\n            });\n            this.approvalInfo.totalValue = parseFloat(totalValue).toFixed(2);\n          }\n          this.getNextOrder();\n          if (resp.data['attachment_list']) {\n            this.resetAPIData(resp.data['attachment_list']);\n          }\n          this.giftExpand = this.purchaseRequest.orderType === 2;\n          this.handleSearch();\n        }\n      }).catch(() => {\n        this.$message.error('Get PR Detail Failed!');\n        this.$router.push({ path: '/admin/' });\n      });\n    },\n    getNextOrder() {\n      if (!this.purchaseRequest.canApproval) {\n        return;\n      }\n      return getPurchaseApprovalNext(this.$route.params.requestID).then(resp => {\n        if (resp.status !== 0 && resp.status !== 101) {\n          this.$message.error(resp.info);\n          this.nextOrderID = '';\n        } else {\n          this.nextOrderID = (resp.data || {}).right || '';\n          this.prevOrderID = (resp.data || {}).left || '';\n          this.pendingTotal = (resp.data || {}).total || 0;\n        }\n      });\n    },\n    updateApprovalTotalValue(index, row) {\n      const realIndex = this.purchaseRequest.skuList.findIndex(sku => sku.skuID === row.skuID);\n      this.$set(this.purchaseRequest.skuList[realIndex], 'approvalQuantity', row.approvalQuantity);\n      this.fixApprovalQuantity(realIndex, row);\n      let totalValue = 0;\n      this.approvalInfo.skuList.forEach(sku => {\n        totalValue += Math.round(sku.approvalQuantity * sku.purchasePrice * (sku.tax + 100)) / 100;\n      });\n      this.approvalInfo.totalValue = parseFloat(totalValue).toFixed(2);\n    },\n    fixApprovalQuantity(index, row) {\n      const approvalQuantity = row.approvalQuantity;\n      const lastApprovalQuantity = row.lastApprovalQuantity;\n      if (!Number.isInteger(approvalQuantity)) {\n        this.$message.error('Quantity should be integer');\n        return;\n      }\n      if (approvalQuantity < 0) {\n        this.$message.error('Approval quantity should be positive integer');\n        return;\n      }\n      if (approvalQuantity > lastApprovalQuantity) {\n        this.$message.error('Approval quantity should not greater than last approval quantity');\n        return;\n      }\n    }\n  },\n  components: {\n    Comments,\n    GiftGroupList,\n    SendToSupplierDialog,\n    SummaryOverview,\n    SkuList,\n    BudgetOverview,\n    ActionLogDialog,\n    ExpectedDateTable,\n    attachment,\n    ServiceAddtionInfo\n  },\n  computed: {\n    isAllNotReInbound() {\n      const list = this.purchaseRequest.skuList || [];\n      return list.length && list.every(item => item.reason !== 'Re-Inbound');\n    },\n    isAllReInbound() {\n      const list = this.purchaseRequest.skuList || [];\n      return list.length && list.every(item => item.reason === 'Re-Inbound');\n    },\n    uploadHeader() {\n      return Object.assign(this.getCsrfHeader(), this.$store.getters.uploadHeader);\n    },\n    hiddenSkuModule() {\n      return this.purchaseRequest.orderType === 2;\n    },\n    isSeller() {\n      return this.purchaseRequest.supplier.merchantType === 'SELLER';\n    },\n    isShowServiceAdditionInfo() {\n      return !this.hiddenSkuModule && !isEmpty(this.purchaseRequest.additionSkuList);\n    },\n    supplierInfo() {\n      const configs = [\n        { label: 'purchaseRequest.regionWarehouse', value: `${this.purchaseRequest.country}/${this.purchaseRequest.warehouse}` },\n        { label: 'purchaseRequest.requester', value: `${this.purchaseRequest.requester}` },\n        { label: 'commonVendorName', value: `${this.purchaseRequest.supplier.supplierName}` },\n        { label: 'supplierSBSVendorID', value: `${this.purchaseRequest.supplier.sbsVendorId}` },\n        { label: 'purchaseOrder.vendorSideID', value: this.isSeller ? '/' : `${this.purchaseRequest.supplier.supplierID}` },\n        // { label: 'purchaseRequest.supplierID', value: `${this.purchaseRequest.supplier.parentSupplierID}` },\n        { label: this.$t('commonShop'), value: this.purchaseRequest.shopId ? `${this.purchaseRequest.shopId}/${this.purchaseRequest.shopName}` : '/', hidden: !this.isSeller},\n        { label: 'purchaseOrder.ebsCompanyCode', value: this.isSeller ? '/' : `${this.purchaseRequest.ebsCompanyCode}` },\n        { label: 'purchaseOrder.supplierType', value: this.isSeller ? '/' : `${this.purchaseRequest.supplier.supplierType}` },\n        { label: 'purchaseRequest.purchaseType', value: this.isSeller ? '/' : `${this.purchaseRequest.supplier.purchaseType}` },\n        { label: 'purchaseRequest.paymentTerms', value: this.isSeller ? '/' : `${this.purchaseRequest.supplier.paymentTerms}` },\n        { label: 'purchaseRequest.moq', value: this.isSeller ? '/' : `${this.purchaseRequest.supplier.moq}` },\n        { label: 'purchaseRequest.orderType', value: (OrderType.find(item => item.value === this.purchaseRequest.orderType) || {}).label || '' }\n      ];\n      if (this.countryFlagTwo(1) || this.purchaseRequest.supplier.supplierType === 'CB' ||\n        this.purchaseRequest.status === 7) {\n        const value = this.purchaseRequest.expectedInboundDate || '\\\\';\n        const CBItems = [\n          {\n            label: 'purchaseRequest.inboundDate',\n            value: `${value}`\n          }\n        ];\n        if (this.purchaseRequest.supplier.supplierType === 'CB') {\n          const cbItem = CBNominationType.find(item => item.value === this.purchaseRequest.CBNominationType) || {};\n          configs.push({\n            label: 'purchaseRequest.CBNominationType',\n            value: cbItem.label // cb新增字段\n          });\n        }\n        CBItems.forEach(item => {\n          configs.push(item);\n        });\n      }\n      return configs.filter(item => !item.hidden);\n    },\n    reviewer() {\n      const username = this.$store.getters.username;\n      const arr = this.purchaseRequest.approvalList.reverse().map(item => item.by);\n      return this.purchaseRequest.canApproval ? [...arr, username].join(' -> ') : arr.join(' -> ');\n    },\n    currency() {\n      return this.$store.getters.currencyMap[this.purchaseRequest.warehouse];\n    },\n    inboundTableData() {\n      const data = this.purchaseRequest.inboundOrderCheck || {};\n      return this.purchaseRequest.expectedInboundDate ? Object.keys(data).map(item => {\n        return {\n          date: this.purchaseRequest.expectedInboundDate,\n          POID: item,\n          PRID: data[item].request_id,\n          sku: data[item].sku_count,\n          skuTotal: data[item].sku_total_quantity,\n          totalQty: data[item].total_inbound_quantity\n        };\n      }) : [];\n    },\n    canReSubmit() {\n      const isRejectStatus = (this.purchaseRequest.status === 2);\n      return isRejectStatus && this.isRequester;\n    },\n    isRequester() {\n      return this.$store.getters.username === this.purchaseRequest.requester;\n    },\n    canWithdrawn() {\n      const isApprovalStatus = this.purchaseRequest.status === 1;\n      return isApprovalStatus && this.isRequester;\n    },\n    canSendToSupplier() {\n      return this.purchaseRequest.need_supplier_confirm && this.canStartPO && this.isAllNotReInbound;\n    },\n    canGenerate() {\n      if (this.purchaseRequest.country === 'TW' && this.canSendToSupplier) {\n        return false;\n      }\n      return this.purchaseRequest.status === 3 && this.canStartPO;\n    }\n  },\n  watch: {\n    'purchaseRequest.country': function(now, prev) {\n      const params = {\n        country: now\n      };\n      getCountryGiftConf(params).then(resp => {\n        if (resp.status !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.countryGiftConf = resp.data;\n          this.countryGiftConf.flag_two = this.countryGiftConf.flag_two || 0;\n        }\n      });\n    },\n    '$route': {\n      handler: function() {\n        this.fetchDetail();\n      }\n    }\n  },\n  async created() {\n    await this.fetchDetail();\n    this.canStartPO = hasPermission(Permission.EDIT_PR);\n    this.canDeletePR = hasPermission(Permission.EDIT_PR);\n    this.canExportPR = true;\n  }\n};\n</script>\n\n<style lang=\"scss\">\n  .el-select-dropdown__item {\n    .color-tag {\n      margin: 0 auto;\n      width: 30px;\n      height: 30px;\n      border: 1px solid #ddd;\n    }\n  }\n  .pr-detail .el-table th {\n    background-color: #f0f2f5;\n  }\n  .pr-detail .el-table--border td,\n  .pr-detail .el-table--border th,\n  .pr-detail .el-table__body-wrapper .el-table--border.is-scrolling-left~.el-table__fixed {\n    border-right: none;\n  }\n  .pr-detail .el-table th>.cell{\n    color: #575757;\n    font-size: 12px;\n    line-height: 1.2;\n    word-break: break-word;\n  }\n  .pr-detail .el-table__expanded-cell tr.el-table__row, .pr-detail .el-table thead.is-group th {\n    background-color: rgb(241, 243, 246);\n  }\n  .pr-detail .el-table__body tr.current-row>td {\n    background-color: #fff;\n  }\n  .pr-detail .el-table--enable-row-hover .el-table__body tr:hover>td {\n    background-color: #fff;\n  }\n  .pr-detail .el-table__expanded-cell .el-table--enable-row-hover .el-table__body tr:hover>td {\n    background-color: rgb(241, 243, 246);\n  }\n  .pr-detail .el-table__expand-icon > .el-icon-arrow-right:before {\n    content: \"\\E62B\";\n  }\n  .pr-detail .el-table__expand-icon--expanded {\n    transform: rotate(0);\n  }\n  .pr-detail .el-table__expand-icon > .el-icon-arrow-right:before {\n    content: \"\\e6d9\";\n  }\n  .pr-detail .el-table__expand-icon--expanded > .el-icon-arrow-right:before {\n    content: \"\\e6d8\";\n  }\n  .pr-detail .svg-icon {\n    width: 22px;\n    height: 22px;\n    vertical-align: middle;\n  }\n  .pr-detail .el-form-item__label {\n    color: #565258;\n  }\n  .pr-detail .el-table__footer-wrapper tbody td {\n    background-color: #fff;\n    font-weight: bold;\n  }\n  .pr-detail .el-table__footer-wrapper td:first-child {\n    border-top: none;\n  }\n  .pr-detail .el-table td {\n    font-size: 14px;\n    font-family: \"Helvetica Neue Light\", Helvetica, Arial, sans-serif;\n    color: #000;\n    font-weight: 400;\n  }\n  .pr-detail .el-form-item__content {\n    display: flex;\n  }\n  .pr-detail .right-view .el-tabs__item {\n    color: #565258;\n    font-size: 16px;\n  }\n</style>\n<style lang=\"scss\" scoped>\n  .sku-list + .sku-list {\n    margin-top: 20px;\n  }\n  .right-action-btn {\n    text-align: right;\n  }\n  .info-view {\n    display: flex;\n  }\n  .left-view {\n    flex: 1;\n  }\n  .right-view {\n    flex: 1;\n    max-width: 50%;\n    margin-top: -12px;\n  }\n  .pr-detail-header {\n    position: sticky;\n    margin-bottom: 30px;\n    z-index: 1;\n    top: 0;\n    background: #fff;\n  }\n  .action-log-btn {\n    position: absolute;\n    bottom: -40px;\n    right: 30px;\n    color: #7B9CDF;\n    cursor: pointer;\n    text-decoration: underline;\n  }\n  .left-info {\n    position: absolute;\n    top: 0;\n    left: 20px;\n    min-width: 20%;\n    padding-left: 5px;\n    height: 60px;\n    line-height: 60px;\n    border-bottom: 2px solid #f0f2f5;\n  }\n  .right-op {\n    position: absolute;\n    top: 0;\n    right: 20px;\n    /* max-width: 50%; */\n    padding-left: 5px;\n    height: 60px;\n    line-height: 60px;\n  }\n  .pr-back-icon {\n    display: inline-block;\n    margin-right: 10px;\n    transform: scale(1.2);\n  }\n  .pr-id {\n    color: rgb(215, 215, 215);\n    font-size: 26px;\n    margin-right: 20px;\n  }\n  .pr-status {\n    color: rgb(244, 171, 97);\n  }\n  .supplier-gap {\n    display: inline-block;\n    margin-left: 8px;\n    vertical-align: top;\n  }\n  .supplier-info {\n    display: inline-block;\n    max-width: 300px;\n    margin-left: 20px;\n    word-break: break-all;\n  }\n  .reviewer-item {\n    width: 100%;\n    display: flex;\n    line-height: 40px;\n    margin-top: 20px;\n    border-top: 1px solid rgb(225, 225, 225);\n  }\n  .supplier-viewer {\n    flex: 1;\n    margin-left: 12px;\n    line-height: 40px;\n  }\n  .previous-btn, .next-btn {\n    float: left;\n    margin: 20px 10px 0 50px;\n    transition: opacity .3s linear;\n  }\n  .next-btn {\n    margin: 20px 20px 0 0;\n  }\n  .previous-btn:hover, .next-btn:hover {\n    opacity: 0.6;\n  }\n  .approve-btn, .reject-btn, .export-btn, .delete-btn {\n    float: left;\n    max-width: 240px;\n    padding: 0px 16px;\n    height: 50px;\n    margin: 15px 10px 0 0;\n    line-height: 50px;\n    font-size: 14px;\n    text-align: center;\n    vertical-align: middle;\n    color: #86cd57;\n    cursor: pointer;\n    border: 1px solid #86cd57;\n    border-radius: 3px;\n    background-color: #fff;\n    transition: background .3s linear;\n  }\n  .reject-btn {\n    margin: 15px 0 0 0;\n  }\n  .delete-btn {\n    border-color: #f56c6c;\n    color: #f56c6c;\n  }\n  .delete-btn:hover {\n    background-color: #f56c6c;\n    color: #fff;\n  }\n  .approve-btn:hover, .reject-btn:hover, .export-btn:hover {\n    background-color: #86cd57;\n    color: #fff;\n    border-color: #fff;\n  }\n  .upload-btn {\n    color: #fff;\n    border-radius: 3px;\n    background-color: #3d6ed1;\n  }\n  .sku-title {\n    float: left;\n    margin: 20px 0 0;\n    font-size: 22px;\n    color: rgba(0,0,0,.6);\n  }\n  .gift-title {\n    float: left;\n    margin: 40px 0 10px;\n    font-size: 22px;\n    color: rgba(0,0,0,.6);\n    width: 100%;\n    padding-bottom: 10px;\n  }\n  .table-date {\n    font-weight: 700;\n  }\n  .gap-section {\n    height: 80px;\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/purchaseRequest/massSendValidateDialog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/purchaseRequest/sendPRDialog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/purchaseRequest/sendToSupplierDialog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/purchaseRequest/serviceAddtionInfo.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/purchaseRequest/utils.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/approvalFlow.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/approvalFlow_v2/actionLog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/approvalFlow_v2/constant.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/approvalFlow_v2/index.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"approval-flow\" is not PascalCase.","line":96,"column":9,"nodeType":"Literal","endLine":96,"endColumn":24,"fix":{"range":[3546,3559],"text":"ApprovalFlow"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div class=\"approval-flow-wrapper pms-new-ui\">\n    <section class=\"tab-section\">\n      <el-tabs v-model=\"activeCountry\" tab-position=\"bottom\" :before-leave=\"onTabBeforeLeave\">\n        <el-tab-pane v-for=\"item in countryList\" :key=\"item.label\" :label=\"item.label\" :name=\"item.value\"></el-tab-pane>\n      </el-tabs>\n    </section>\n\n    <section class=\"flow-type-section\">\n      <el-form class=\"pms-list-form\">\n        <el-form-item :label=\"$t('commonApprovalFlow')\" class=\"form-item-width\">\n          <el-select v-model=\"flowType\" @change=\"onChangeFlowType\" :disabled=\"isEdit\">\n            <el-option\n              v-for=\"(item, index) in flowTypeGroups\"\n              :key=\"index\"\n              :label=\"item.label\"\n              :value=\"item.value\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n      </el-form>\n    </section>\n\n    <section class=\"content-wrapper\">\n      <h3 class=\"title\">{{ flowTypeName }}</h3>\n      <div class=\"other-search-params-warpper\" v-if=\"Array.isArray(filterSchemas) && filterSchemas.length\">\n        <listSearch\n          :components=\"filterSchemas\"\n          :searchForm=\"filterParams\"\n          @change=\"onChangefilterParams\"\n        ></listSearch>\n      </div>\n      <div class=\"operate-wrapper\">\n        <template v-if=\"!isEdit\">\n          <el-button class=\"white-blue\" @click=\"actionLogVisible = true\">{{ $t('commonActionLog') }}</el-button>\n          <el-button @click=\"isEdit = true\" v-if=\"isEditPermission\">{{ $t('commonEdit') }}</el-button>\n        </template>\n        <template v-else>\n          <el-button\n            class=\"white-blue\"\n            v-if=\"isMultipleSectionFlowType\"\n            @click=\"onAddTier\"\n            :loading=\"loadingSave\"\n            icon=\"el-icon-plus\"\n          >\n            {{ $t('commonNewTier') }}</el-button\n          >\n          <el-button class=\"white-blue\" v-else @click=\"onAddSectionRole\" :loading=\"loadingSave\" icon=\"el-icon-plus\">\n            {{ $t('commonNewRole') }}</el-button\n          >\n          <el-button @click=\"onSave\" :loading=\"loadingSave\">{{ $t('commonSave') }}</el-button>\n          <el-button class=\"white-blue\" @click=\"onCancel\" :loading=\"loadingSave\">{{ $t('commonCancel') }}</el-button>\n        </template>\n      </div>\n      <ApprovalFlowTable :tableData=\"tableData\" :flowType=\"flowType\" :flowConfigId=\"flowConfigId\" :isEdit=\"isEdit\" :roleList=\"roleList\" :currency=\"currency\" v-loading=\"loadingTable\"></ApprovalFlowTable>\n      <!-- <div class=\"table-wrapper\">\n        <ListView\n          :dataList=\"tableData\"\n          :config=\"tableConfig\"\n          :tableSchema=\"tableSchema\"\n          v-loading=\"loadingTable\"\n        ></ListView>\n      </div> -->\n    </section>\n\n    <ActionLog :visible=\"actionLogVisible\" :country=\"activeCountry\" @close=\"onCloseActionLog\"></ActionLog>\n  </div>\n</template>\n\n<script>\nimport ApprovalFlowTable from './table';\nimport ActionLog from './actionLog';\n\nimport listSearch from '@/components/common/listSearch';\nimport { getRoles } from '@/api/userRole';\nimport {\n  getApprovalDetail,\n  createFlowConfig,\n  modifyFlowSections\n} from '@/api/approvalFlow';\nimport _ from 'lodash';\nimport { FlowTypeList, Permission } from '@/utils/constant';\nimport {\n  totalFilterSchema,\n  multipleSectionFlowTypeList,\n  tableInitItemObj,\n  defaultNewItem,\n  InfinityValue\n} from './constant';\nimport { findRoleAttr } from './utils';\nimport { formatParams } from '@/utils/formatParams';\nimport { hasPermission } from '@/utils/permission';\n\nlet originTableDataStr = '';\nexport default {\n  name: 'approval-flow',\n  components: {\n    listSearch,\n    ApprovalFlowTable,\n    ActionLog\n  },\n  data() {\n    return {\n      actionLogVisible: false,\n\n      filterParams: {\n        purchase_type: 'Outright',\n        supplier_type: '1',\n        bm_type: '',\n        campaign_type: ''\n      },\n\n      loadingTable: false,\n      loadingSave: false,\n      isEdit: false,\n      flowType: '1',\n      flowConfigId: 0,\n      flowTypeName: 'PR Total Value',\n      flowTypeGroups: FlowTypeList,\n      activeCountry: this.$store.getters.country,\n      roleList: [], // 下拉选框的角色列表\n      tableData: [],\n      isEditPermission: false,\n      roleListForSupplierType: [],\n      cascaderKey: '1'\n    };\n  },\n  created() {\n    this.isEditPermission = hasPermission(Permission.APPROVAL_FLOW_MODIFY);\n    this.initData();\n  },\n  computed: {\n    countryList() {\n      return this.$store.getters.countrySelectList;\n    },\n    filterSchemas() {\n      const result = totalFilterSchema[this.flowType] || [];\n      return result.map(item => {\n        if (item.props) {\n          this.$set(item.props, 'disabled', this.isEdit);\n        }\n        return item;\n      });\n    },\n    isPaymentRequestFlow() {\n      return Number(this.flowType) === 14;\n    },\n    isMultipleSectionFlowType() {\n      return multipleSectionFlowTypeList.includes(Number(this.flowType));\n    },\n    currency() {\n      return (this.$store.getters.currencyMap || {})[this.activeCountry];\n    },\n    noDataChange() {\n      return originTableDataStr === JSON.stringify(this.tableData);\n    }\n  },\n  methods: {\n    initData() {\n      new Promise(async resolve => {\n        this.loadingTable = true;\n        const res = await this.getRoleList();\n        if (res) {\n          resolve();\n        }\n      })\n        .then(() => {\n          this.getApprovalFlowList();\n        })\n        .catch(() => {});\n    },\n    findTableInitItem() {\n      if (tableInitItemObj[this.flowType]) {\n        return JSON.parse(JSON.stringify(tableInitItemObj[this.flowType]));\n      } else {\n        return JSON.parse(JSON.stringify(defaultNewItem));\n      }\n    },\n    onAddSectionRole() {\n      const tableItem = this.findTableInitItem();\n      this.tableData.push(tableItem);\n    },\n    onAddTier() {\n      const lastItem = this.tableData[this.tableData.length - 1];\n      if (lastItem && lastItem.section) {\n        // 说明tableData.length >= 1\n        lastItem.section.max_value = lastItem.section.min_value + 100000;\n      }\n      this.tableData.push({\n        role_list: [{ role_id: '', type: 0 }],\n        section: {\n          min_value: lastItem && lastItem.section ? lastItem.section.max_value : 0,\n          max_value: InfinityValue\n        }\n      });\n    },\n    async getRoleList() {\n      const params = {\n        skip: 0,\n        limit: 200,\n        country: this.activeCountry\n      };\n      const resp = await getRoles(params);\n      if (resp && resp.status === 0) {\n        this.roleList = (resp.data.role_list || [])\n          .filter(role => role.status === 0)\n          .map(role => {\n            return {\n              id: role.id,\n              name: role.name,\n              type: role.role_type\n            };\n          });\n        if (this.roleList.length === 0) {\n          // if no role available, jump to role page\n          this.$alert(this.$t('approvalFlowAddSomeRolesFirst!'), this.$t('approvalFlowNoRolesAvailable'));\n          this.$router.push({ name: 'role' });\n          return Promise.reject();\n        }\n        return Promise.resolve(1);\n      } else {\n        this.$message({ type: 'error', message: this.$t('approvalFlowGetRolesFailed') });\n        return Promise.reject();\n      }\n    },\n    onChangeFlowType(flowType) {\n      this.flowTypeName = this.formatFlowType(flowType);\n      this.onResetfilterParams();\n      this.filterSchemas.forEach(item => {\n        if (item.defaultValue && item.props) {\n          this.filterParams[item.props.field] = item.defaultValue;\n        }\n        if (item.defaultProps && typeof item.defaultProps === 'object') {\n          Object.keys(item.defaultProps).forEach(key => {\n            item.props[key] = typeof item.defaultProps[key] === 'object' ? _.clone(item.defaultProps[key]) : item.defaultProps[key];\n          });\n        }\n      });\n      this.getApprovalFlowList();\n    },\n    onResetfilterParams() {\n      Object.keys(this.filterParams).forEach(key => {\n        this.filterParams[key] = '';\n      });\n    },\n    onChangefilterParams({ field, value }) {\n      const { changeFun } = this.filterSchemas.find(item => item.props.field === field) || {};\n      if (changeFun && typeof changeFun === 'function') {\n        const changeFunReturnList = changeFun(value);\n        if (changeFunReturnList && Array.isArray(changeFunReturnList)) {\n          changeFunReturnList.forEach(item => {\n            this.filterParams[item.relativeField] = item.value;\n            if (item.props && typeof item.props === 'object') {\n              const relativeSchemaItem = this.filterSchemas.find(\n                schema => schema.props.field === item.relativeField\n              );\n              Object.keys(item.props).forEach(key => {\n                relativeSchemaItem.props[key] = typeof item.props[key] === 'object' ? _.clone(item.props[key]) : item.props[key];\n              });\n            }\n          });\n        }\n      }\n      this.getApprovalFlowList();\n    },\n    formatFlowType(flowType) {\n      return (this.flowTypeGroups.find(item => item.value === flowType) || { label: '' }).label;\n    },\n    onTabBeforeLeave(nv, ov) {\n      if (!this.isEdit || this.noDataChange) {\n        this.activeCountry = nv;\n        this.initData();\n        return true;\n      }\n      return new Promise((resolve, reject) => {\n        this.$confirm(this.$t('approvalFlowToggleCountryTips'), this.$t('commonWarning'), {\n          cancelButtonText: this.$t('commonCancel'),\n          confirmButtonText: this.$t('commonConfirm'),\n          customClass: 'pms-new-ui',\n          cancelButtonClass: 'white-grey'\n        })\n          .then(() => {\n            this.isEdit = false;\n            this.activeCountry = nv;\n            this.initData();\n            resolve();\n          })\n          .catch(() => {\n            reject();\n          });\n      });\n    },\n    onCloseActionLog() {\n      this.actionLogVisible = false;\n    },\n    onCancel() {\n      this.isEdit = false;\n      this.tableData = JSON.parse(originTableDataStr);\n    },\n    async getApprovalFlowList() {\n      try {\n        this.loadingTable = true;\n        const params = {\n          ...formatParams(this.filterParams),\n          group: Number(this.flowType),\n          country: this.activeCountry\n        };\n\n        const res = await getApprovalDetail(params);\n        if (res) {\n          if (res.status === 113) {\n            this.createFlowConfig(params);\n          } else if (res.status === 0) {\n            this.flowConfigId = res.data.id;\n            if (this.isMultipleSectionFlowType) {\n              this.tableData = (res.data.sections || []).map((item, index, sections) => {\n                return {\n                  ...item,\n                  role_list: (index > 0\n                    ? item.role_list.slice(sections[index - 1].role_list.length, item.role_list.length)\n                    : item.role_list\n                  ).map(role => ({\n                    ...role,\n                    role_ids: [findRoleAttr(this.roleList, role.role_id, 'type'), role.role_id]\n                  }))\n                };\n              });\n            } else {\n              this.tableData = this.formatGeneralTableData((res.data.sections[0] || {}).role_list || []);\n            }\n            originTableDataStr = JSON.stringify(this.tableData); // 备份源数据，save的时候做对比，提交成功后要更新该值\n          }\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loadingTable = false;\n      }\n    },\n    formatGeneralTableData(list) {\n      const result = [];\n      list.forEach((item, index) => {\n        if (this.isPaymentRequestFlow) {\n          const qty_overwrite_options = [];\n          if (item.qty_overwrite_to_higher) {\n            qty_overwrite_options.push(1);\n          }\n          if (item.qty_overwrite_to_lower) {\n            qty_overwrite_options.push(0);\n          }\n          item.qty_overwrite_options = !index ? [] : qty_overwrite_options;\n\n          const price_overwrite_options = [];\n          if (item.price_overwrite_to_higher) {\n            price_overwrite_options.push(1);\n          }\n          if (item.price_overwrite_to_lower) {\n            price_overwrite_options.push(0);\n          }\n          item.price_overwrite_options = !index ? [] : qty_overwrite_options;\n        }\n        result.push(Object.assign(item, { role_ids: [findRoleAttr(this.roleList, item.role_id, 'type'), item.role_id] }));\n      });\n      return result;\n    },\n    async createFlowConfig(params) {\n      try {\n        const res = await createFlowConfig(params);\n        if (res && res.status === 0) {\n          this.flowConfigId = res.data.id;\n          this.getApprovalFlowList();\n        } else {\n          this.flowConfigId = '';\n          this.$message({ type: 'error', message: res.info });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    validateSections(sections) {\n      if (sections.length === 0) {\n        this.$message.error('sections is empty');\n        return false;\n      }\n      for (let i = 0; i < sections.length; i++) {\n        // check minValue < maxValue\n        if (sections[i].section.min_value >= sections[i].section.max_value) {\n          this.$message.error('section: ' + (i + 1) + ': minValue should less than maxValue');\n          return false;\n        }\n        // check curSection.minValue === preSection.maxValue\n        if (i > 0 && sections[i].section.min_value !== sections[i - 1].section.max_value) {\n          this.$message.error('section: ' + (i + 1) + ': minValue should equal to pre section maxValue');\n          return false;\n        }\n        // check roleList not empty\n        if (sections[i].role_list.length === 0 || sections[i].role_list.some(role => !role.role_id)) {\n          this.$message.error('section: ' + (i + 1) + ': approval role is empty');\n          return false;\n        }\n        // check each role unique\n        const roleSet = new Set();\n        sections[i].role_list.map(item => roleSet.add(item.role_id));\n        if (roleSet.size !== sections[i].role_list.length) {\n          this.$message.error('section: ' + (i + 1) + ': roles in a section can not be the same');\n          return false;\n        }\n        // check if preSection is prefix of curSection\n        if (i > 0) {\n          if (sections[i].role_list.length <= sections[i - 1].role_list.length) {\n            this.$message.error('section: ' + (i + 1) + ': roles in this section are fewer than pre-section');\n            return false;\n          }\n          for (let j = 0; j < sections[i - 1].role_list.length; j++) {\n            if (sections[i].role_list[j].role_id !== sections[i - 1].role_list[j].role_id) {\n              this.$message.error('section: ' + (i + 1) + ': roles in this section are not prefix of pre-section');\n              return false;\n            }\n          }\n        }\n      }\n      return true;\n    },\n    formatSections() {\n      let result = [];\n      if (this.isMultipleSectionFlowType) {\n        let cacheRoleList = [];\n        result = this.tableData.map((item, index) => {\n          // 循环加所有\n          const output = {\n            sequence: index + 1,\n            role_list: cacheRoleList.concat(item.role_list).map(role => {\n              const roleItem = JSON.parse(JSON.stringify(role));\n              if (roleItem.hasOwnProperty('role_ids')) {\n                delete roleItem.role_ids;\n              }\n              if (roleItem.hasOwnProperty('type')) {\n                delete roleItem.type;\n              }\n              return roleItem;\n            }),\n            section: {\n              min_value: item.section.min_value,\n              max_value: item.section.max_value\n            }\n          };\n          cacheRoleList = [...cacheRoleList, ...item.role_list];\n          return output;\n        });\n        cacheRoleList = [];\n        return result;\n      } else {\n        const roleList = this.tableData.map((role, index) => {\n          if (this.isPaymentRequestFlow) {\n            return {\n              role_id: role.role_id,\n              expected_payment_date: !!role.expected_payment_date,\n              sche_payment_date: !!role.sche_payment_date,\n              price_overwrite_to_higher: role.price_overwrite_options.includes(1) ? 1 : 0,\n              price_overwrite_to_lower: role.price_overwrite_options.includes(0) ? 1 : 0,\n              qty_overwrite_to_higher: role.qty_overwrite_options.includes(1) ? 1 : 0,\n              qty_overwrite_to_lower: role.qty_overwrite_options.includes(0) ? 1 : 0\n            };\n          }\n          const roleObj = _.clone(role);\n          delete roleObj.role_ids; // 去除role_ids, 保留后台返回的所有字段\n          return roleObj;\n        });\n        result = [\n          {\n            sequence: 1,\n            role_list: roleList,\n            section: {\n              min_value: 0,\n              max_value: InfinityValue\n            }\n          }\n        ];\n      }\n      return result;\n    },\n    async onSave() {\n      if (this.loadingSave) {\n        return;\n      }\n      try {\n        this.loadingSave = true;\n        const params = {\n          flow_config_id: this.flowConfigId,\n          sections: this.formatSections()\n        };\n        if (!this.validateSections(params.sections)) {\n          return;\n        }\n        const res = await modifyFlowSections(params);\n        if (res && res.retcode === 0 || res.retcode === 2017) {\n          this.$message({ type: 'success', message: res.retcode === 2017 ? res.info || res.message : this.$t('commonSaveSuccess') });\n          this.isEdit = false;\n          originTableDataStr = JSON.stringify(this.tableData);\n        } else {\n          this.$message({ type: 'error', message: res.info || res.message });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loadingSave = false;\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.pms-list-form {\n  /deep/ .el-form-item {\n    display: flex;\n    color: #333;\n    margin-bottom: 0;\n    .el-form-item__label {\n      max-width: 148px;\n      background-color: #fafbfd;\n      white-space: nowrap;\n      text-overflow: ellipsis;\n      overflow: hidden;\n      padding: 0 8px;\n      border-radius: 4px 0 0 4px;\n      border: 1px solid #e2e6ec;\n      border-right: 0;\n      height: 32px;\n      line-height: 32px;\n      box-sizing: border-box;\n    }\n    .el-form-item__content {\n      flex: 1;\n      height: 32px;\n      line-height: 32px;\n      box-sizing: border-box;\n      > div {\n        width: 100%;\n      }\n    }\n  }\n  /deep/ .long-col {\n    .el-form-item {\n      .el-form-item__label {\n        max-width: 236px;\n      }\n    }\n  }\n\n  /deep/ .el-input__inner {\n    border-top-left-radius: 0px;\n    border-bottom-left-radius: 0px;\n  }\n  /deep/ .el-input.is-disabled .el-input__inner {\n    background-color: #fafbfd;\n  }\n}\n.approval-flow-wrapper {\n  padding: 0px 24px;\n  .flow-type-section {\n    .form-item-width {\n      width: 550px;\n    }\n    padding: 24px 0;\n    border-bottom: 1px solid #e3e3e3;\n    margin-bottom: 24px;\n  }\n  .content-wrapper {\n    .other-search-params-warpper {\n      width: 800px;\n    }\n    .title {\n      font-style: normal;\n      font-size: 16px;\n      line-height: 16px;\n      font-weight: 500;\n      color: #333333;\n      margin-bottom: 20px;\n    }\n    .operate-wrapper {\n      padding-bottom: 24px;\n      text-align: right;\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/approvalFlow_v2/table.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"approvalFlow-table\" is not PascalCase.","line":29,"column":9,"nodeType":"Literal","endLine":29,"endColumn":29,"fix":{"range":[924,942],"text":"ApprovalFlowTable"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div class=\"approval-flow-table-wrapper\">\n    <ListView :dataList=\"tableData\" :config=\"tableConfig\" :tableSchema=\"tableSchema\"></ListView>\n    <CategoryConfig\n      :visible=\"configDialogShow\"\n      :configData=\"categoryConfigData\"\n      @close=\"closeConfigDialog\"\n      @modifyNotifyConfig=\"modifyNotifyConfig\"\n    ></CategoryConfig>\n  </div>\n</template>\n\n<script>\nimport ListView from '@/components/ApproveList/list';\nimport CategoryConfig from '@/views/rule/configDialog';\n\nimport {\n  singleTableSlotSchemaConfig,\n  multipleTableSlotSchemaConfig,\n  multipleSectionFlowTypeList,\n  ApprovalRoleTitlePopoverTipConfig,\n  InfinityValue,\n  chargingReportTriggerConditionsList\n} from './constant';\nimport { formatTime, findRoleAttr, formatTriggerConditions, formatChargingReportTriggerConditions } from './utils';\nimport { createNotifyConfig, getNotifyConfig } from '@/api/approvalFlow';\n\nexport default {\n  name: 'approvalFlow-table',\n  components: {\n    ListView,\n    CategoryConfig\n  },\n  props: {\n    tableData: {\n      type: Array,\n      default: () => [],\n      required: true\n    },\n    isEdit: {\n      type: Boolean,\n      default: false,\n      required: true\n    },\n    roleList: {\n      type: Array,\n      default: () => [],\n      required: true\n    },\n    flowType: {\n      required: true\n    },\n    flowConfigId: {\n      required: true\n    }\n  },\n  data() {\n    return {\n      configDialogShow: false,\n      categoryConfigData: {},\n      tableConfig: {\n        showCheckBox: false,\n        align: 'left',\n        border: false\n      },\n      roleListForSupplierType: [],\n      cascaderKey: '1'\n    };\n  },\n  watch: {\n    '$props.roleList': {\n      handler(list) {\n        this.setRoleListForSupplierType(list);\n      }\n    }\n  },\n  computed: {\n    hasApprovalConfigFlowType() {\n      return [1].includes(Number(this.flowType)); // 1-pr\n    },\n    approvalRoleTitlePopoverTip() {\n      return {\n        isShow: [14].includes(Number(this.flowType)), // 14-paymentRequest\n        content: ApprovalRoleTitlePopoverTipConfig[this.flowType]\n          ? this.$t(ApprovalRoleTitlePopoverTipConfig[this.flowType])\n          : ''\n      };\n    },\n    multipleSchema() {\n      const schema = [\n        {\n          label: this.$t('commonNo'),\n          field: 'no',\n          width: '45px',\n          render: (schema, row, index, h) => {\n            return index + 1;\n          }\n        },\n        {\n          label: this.$t('approvalFlowValue'),\n          field: 'section_value',\n          minWidth: '150px',\n          render: (schema, row, index, h) => {\n            return [\n              'div',\n              {\n                class: 'value-flex-box'\n              },\n              !this.isEdit\n                ? `${row.section ? row.section.min_value : 0}< ${this.$t('approvalFlowValue')} ≤ ${\n                    row.section ? row.section.max_value === InfinityValue ? 'Infinity' : row.section.max_value : 0\n                  }`\n                : [\n                    h(\n                      'el-input',\n                      {\n                        class: 'flex-1',\n                        props: { value: row.section ? row.section.min_value : 0, disabled: index === 0 },\n                        on: {\n                          input: value => {\n                            row.section.min_value = Number(value);\n                            if (index - 1 >= 0) {\n                              this.tableData[index - 1].section.max_value = row.section.min_value;\n                            }\n                          }\n                        }\n                      },\n                      null\n                    ),\n                    h('span', { class: 'flex-line' }, `< ${this.$t('approvalFlowValue')} ≤`),\n                    h(\n                      'el-input',\n                      {\n                        class: 'flex-1',\n                        props: {\n                          value: row.section\n                            ? row.section.max_value === InfinityValue\n                              ? 'Infinity'\n                              : row.section.max_value\n                            : 'Infinity',\n                          disabled: index === this.tableData.length - 1\n                        },\n                        on: {\n                          input: value => {\n                            row.section.max_value = Number(value);\n                            if (index + 1 < this.tableData.length) {\n                              this.tableData[index + 1].section.min_value = row.section.max_value;\n                            }\n                          }\n                        }\n                      },\n                      null\n                    )\n                  ]\n            ];\n          }\n        },\n        {\n          label: this.$t('approvalFlowRole'),\n          field: 'approval_role',\n          minWidth: '120px',\n          render: (schema, row, index, h) => {\n            return [\n              'div',\n              {\n                class: 'el-table-role-td'\n              },\n              !this.isEdit\n                ? (row.role_list || []).map(roleItem => {\n                    return h(\n                      'p',\n                      { class: 'role-cascader-box role-cascader-row' },\n                      findRoleAttr(this.roleList, roleItem.role_id, 'name')\n                    );\n                  })\n                : [\n                    ...(row.role_list || []).map(roleItem => {\n                      return this.createSingleRole(roleItem, h, this.roleListForSupplierType);\n                    }),\n                    h(\n                      'el-button',\n                      {\n                        props: { type: 'text', icon: 'el-icon-plus' },\n                        on: { click: () => this.onAddRole(row.role_list) }\n                      },\n                      this.$t('commonNewRole')\n                    )\n                  ]\n            ];\n          }\n        },\n        {\n          label: this.$t('commonRoleID'),\n          field: 'role_id',\n          render: (schema, row, index, h) => {\n            return [\n              'div',\n              { class: 'role-cascader-row' },\n              (row.role_list || []).map(item => {\n                return h('div', { class: 'role-id-box role-cascader-box' }, item.role_id);\n              })\n            ];\n          }\n        }\n      ];\n      if (this.isEdit) {\n        schema.push({\n          label: this.$t('commonAction'),\n          field: 'action',\n          minWidth: '100px',\n          render: (schema, row, index, h) => {\n            return [\n              'div',\n              null,\n              (row.role_list || []).map((item, roleIndex) => {\n                return h('section', { class: 'role-cascader-row action-row' }, [\n                  this.hasApprovalConfigFlowType && this.showCategoryBtn(item.role_id)\n                    ? h(\n                        'el-button',\n                        {\n                          props: {\n                            type: 'text'\n                          },\n                          on: {\n                            click: () => this.onShowNotifyConfig(item.role_id)\n                          }\n                        },\n                        this.$t('approvalFlow.approvalConfig')\n                      )\n                    : null,\n                  h(\n                    'el-button',\n                    {\n                      props: {\n                        type: 'text'\n                      },\n                      on: {\n                        click: () => this.onRemoveRoleItem(row, roleIndex, index)\n                      }\n                    },\n                    this.$t('commonRemove')\n                  )\n                ]);\n              })\n            ];\n          }\n        });\n      }\n      return schema.filter(item => {\n        if (!multipleTableSlotSchemaConfig[this.flowType]) {\n          return ['no', 'section_value', 'approval_role', 'role_id', 'action'].includes(item.field);\n        } else {\n          return multipleTableSlotSchemaConfig[this.flowType].includes(item.field);\n        }\n      });\n    },\n    singleSchema() {\n      const schema = [\n        {\n          label: this.$t('commonNo'),\n          field: 'no',\n          width: '45px',\n          render: (schema, row, index, h) => {\n            return index + 1;\n          }\n        },\n\n        {\n          label: this.$t('approvalFlowRole'),\n          field: 'approval_role',\n          minWidth: '120px',\n          renderHeader: (h, { column }) => {\n            return this.approvalRoleTitlePopoverTip.isShow\n              ? h('section', [\n                  column.label,\n                  h(\n                    'el-popover',\n                    {\n                      props: {\n                        placement: 'top',\n                        trigger: 'hover',\n                        'popper-class': 'break-word',\n                        width: '320px',\n                        content: this.approvalRoleTitlePopoverTip.content\n                      }\n                    },\n                    [\n                      h(\n                        'svg-icon',\n                        {\n                          class: 'question question-icon',\n                          props: { iconClass: 'question' },\n                          slot: 'reference'\n                        },\n                        null\n                      )\n                    ]\n                  )\n                ])\n              : column.label;\n          },\n          render: (schema, row, index, h) => {\n            return [\n              'span',\n              { class: 'el-table-role-td' },\n              this.isEdit\n                ? [this.createSingleRole(row, h, this.roleListForSupplierType)]\n                : findRoleAttr(this.roleList, row.role_id, 'name')\n            ];\n          }\n        },\n        {\n          label: this.$t('commonRoleID'),\n          field: 'role_id',\n          render: (schema, row, index, h) => {\n            return ['p', { class: 'role-cascader-row role-id-box' }, row.role_id];\n          }\n        },\n        {\n          label: this.$t('approvalFlow.triggerCondition'),\n          field: 'trigger_condition',\n          width: '600px',\n          renderHeader: (h, { column }) => {\n            return h('section', [\n              column.label,\n              h(\n                'el-popover',\n                {\n                  props: {\n                    title: this.$t('approvalFlow.triggerTitle'),\n                    placement: 'top',\n                    trigger: 'hover',\n                    width: '560'\n                  }\n                },\n                [\n                  h('p', null, this.$t('approvalFlow.triggerContentTitle1')),\n                  h('p', null, this.$t('approvalFlow.triggerContentTitle2')),\n                  h('p', null, this.$t('approvalFlow.triggerContentTitle3')),\n                  h('p', null, this.$t('approvalFlow.triggerContentTitle4')),\n                  h('p', null, this.$t('approvalFlow.triggerContentTitle5')),\n                  h('p', null, this.$t('approvalFlow.triggerContentTitle6')),\n                  h('svg-icon', {\n                    class: 'question question-icon',\n                    props: { iconClass: 'question' },\n                    slot: 'reference'\n                  })\n                ]\n              )\n            ]);\n          },\n          render: (schema, row, index, h) => {\n            return !this.isEdit\n              ? ['div', null, formatTriggerConditions(row.price_change_trigger_conditions || [], this) || '/']\n              : [\n                  'el-checkbox-group',\n                  {\n                    props: { value: row.price_change_trigger_conditions || [] },\n                    on: {\n                      input: value => {\n                        row.price_change_trigger_conditions = value.sort((prev, next) => prev - next);\n                      }\n                    }\n                  },\n                  [\n                    h('el-checkbox', { props: { label: 1 } }, this.$t('approvalFlow.grossMarginTarget')),\n                    h('el-checkbox', { props: { label: 2 } }, this.$t('approvalFlow.promotionPriceCheckPoint')),\n                    h('el-checkbox', { props: { label: 3 } }, this.$t('approvalFlow.originalPriceCheckPoint')),\n                    h('el-checkbox', { props: { label: 4 } }, this.$t('limitedSellingQuantities'))\n                  ]\n                ];\n          }\n        },\n        {\n          label: this.$t('approvalFlow.triggerCondition'),\n          field: 'charging_report_trigger_conditions',\n          width: '600px',\n          renderHeader: (h, { column }) => {\n            return h('section', [\n              column.label,\n              h(\n                'el-popover',\n                {\n                  props: {\n                    title: this.$t('approvalFlow.triggerTitle'),\n                    placement: 'top',\n                    trigger: 'hover',\n                    width: '560'\n                  }\n                },\n                [\n                  h('p', null, this.$t('crTriggerContentTitle1')),\n                  h('p', null, this.$t('crTriggerContentTitle2')),\n                  h('p', null, this.$t('crTriggerContentTitle3')),\n                  h('p', null, this.$t('crTriggerContentTitle4')),\n                  h('p', null, this.$t('crTriggerContentTitle5')),\n                  h('svg-icon', {\n                    class: 'question question-icon',\n                    props: { iconClass: 'question' },\n                    slot: 'reference'\n                  })\n                ]\n              )\n            ]);\n          },\n          render: (schema, row, index, h) => {\n            return !this.isEdit\n              ? ['div', null, formatChargingReportTriggerConditions(row.charging_report_trigger_conditions || [], this) || '/']\n              : [\n                  'el-checkbox-group',\n                  {\n                    props: { value: row.charging_report_trigger_conditions || [] },\n                    on: {\n                      input: value => {\n                        row.charging_report_trigger_conditions = value.sort((prev, next) => prev - next);\n                      }\n                    }\n                  },\n                  (chargingReportTriggerConditionsList || []).map(item => {\n                    return h(\n                      'el-checkbox',\n                      { props: { label: item.value, disabled: index === 0 } },\n                      this.$t(item.label)\n                    );\n                  })\n                ];\n          }\n        },\n        {\n          label: this.$t('approvalFlowPriceOverwrite'),\n          field: 'price_overwrite',\n          width: '300px',\n          renderHeader: (h, { column }) => {\n            return h('section', [\n              column.label,\n              h(\n                'el-popover',\n                {\n                  props: {\n                    placement: 'top',\n                    trigger: 'hover',\n                    width: '300px',\n                    content: this.$t('approvalFlowPriceOverwriteTip')\n                  }\n                },\n                [\n                  h('svg-icon', {\n                    class: 'question question-icon',\n                    props: { iconClass: 'question' },\n                    slot: 'reference'\n                  })\n                ]\n              )\n            ]);\n          },\n          render: (schema, row, index, h) => {\n            return this.isEdit\n              ? [\n                  'el-checkbox-group',\n                  {\n                    props: { value: row.price_overwrite_options || [] },\n                    on: {\n                      input: value => {\n                        row.price_overwrite_options = value;\n                      }\n                    }\n                  },\n                  [\n                    h('el-checkbox', { props: { label: 1, disabled: index === 0 } }, this.$t('approvalFlowToHigher')),\n                    h('el-checkbox', { props: { label: 0, disabled: index === 0 } }, this.$t('approvalFlowToLower'))\n                  ]\n                ]\n              : Array.isArray(row.price_overwrite_options) && row.price_overwrite_options.length\n              ? row.price_overwrite_options\n                  .map(item => {\n                    return item === 1 ? this.$t('approvalFlowToHigher') : this.$t('approvalFlowToLower');\n                  })\n                  .join(', ')\n              : '-';\n          }\n        },\n        {\n          label: this.$t('approvalFlowQtyOverwrite'),\n          field: 'qty_overwrite',\n          width: '300px',\n          renderHeader: (h, { column }) => {\n            return h('section', [\n              column.label,\n              h(\n                'el-popover',\n                {\n                  props: {\n                    placement: 'top',\n                    trigger: 'hover',\n                    width: '300px',\n                    content: this.$t('approvalFlowQtyOverwriteTip')\n                  }\n                },\n                [\n                  h('svg-icon', {\n                    class: 'question question-icon',\n                    props: { iconClass: 'question' },\n                    slot: 'reference'\n                  })\n                ]\n              )\n            ]);\n          },\n          render: (schema, row, index, h) => {\n            return this.isEdit\n              ? [\n                  'el-checkbox-group',\n                  {\n                    props: { value: row.qty_overwrite_options || [] },\n                    on: {\n                      input: value => {\n                        row.qty_overwrite_options = value;\n                      }\n                    }\n                  },\n                  [\n                    h('el-checkbox', { props: { label: 1, disabled: index === 0 } }, this.$t('approvalFlowToHigher')),\n                    h('el-checkbox', { props: { label: 0, disabled: index === 0 } }, this.$t('approvalFlowToLower'))\n                  ]\n                ]\n              : Array.isArray(row.qty_overwrite_options) && row.qty_overwrite_options.length\n              ? row.qty_overwrite_options\n                  .map(item => {\n                    return item === 1 ? this.$t('approvalFlowToHigher') : this.$t('approvalFlowToLower');\n                  })\n                  .join(', ')\n              : '-';\n          }\n        },\n        {\n          label: this.$t('invoiceExpectedPaymentDate'),\n          field: 'expected_payment_date',\n          width: '120px',\n          renderHeader: (h, { column }) => {\n            return h('section', [\n              column.label,\n              h(\n                'el-popover',\n                {\n                  props: {\n                    placement: 'top',\n                    trigger: 'hover',\n                    width: '300px',\n                    content: this.$t('invoiceExpectedPaymentDateHoverTips')\n                  }\n                },\n                [\n                  h('svg-icon', {\n                    class: 'question question-icon',\n                    props: { iconClass: 'question' },\n                    slot: 'reference'\n                  })\n                ]\n              )\n            ]);\n          },\n          render: (schema, row, index, h) => {\n            return this.isEdit\n              ? [\n                  'el-switch',\n                  {\n                    props: {\n                      'active-color': '#55CC77',\n                      'inactive-color': '#B7B7B7',\n                      value: row.expected_payment_date || false\n                    },\n                    on: {\n                      change: value => {\n                        row.expected_payment_date = value;\n                      }\n                    }\n                  },\n                  null\n                ]\n              : row.expected_payment_date\n              ? this.$t('commonOn')\n              : this.$t('commonOff');\n          }\n        },\n        {\n          label: this.$t('invoiceScheduledPaymentDate'),\n          field: 'sche_payment_date',\n          width: '120px',\n          renderHeader: (h, { column }) => {\n            return h('section', [\n              column.label,\n              h(\n                'el-popover',\n                {\n                  props: {\n                    placement: 'top',\n                    trigger: 'hover',\n                    width: '300px',\n                    content: this.$t('invoiceScheduledPaymentDateHoverTips')\n                  }\n                },\n                [\n                  h('svg-icon', {\n                    class: 'question question-icon',\n                    props: { iconClass: 'question' },\n                    slot: 'reference'\n                  })\n                ]\n              )\n            ]);\n          },\n          render: (schema, row, index, h) => {\n            return this.isEdit\n              ? [\n                  'el-switch',\n                  {\n                    props: {\n                      'active-color': '#55CC77',\n                      'inactive-color': '#B7B7B7',\n                      value: row.sche_payment_date || false\n                    },\n                    on: {\n                      change: value => {\n                        row.sche_payment_date = value;\n                      }\n                    }\n                  },\n                  null\n                ]\n              : row.sche_payment_date\n              ? this.$t('commonOn')\n              : this.$t('commonOff');\n          }\n        }\n      ];\n      if (this.isEdit) {\n        schema.push({\n          label: this.$t('commonAction'),\n          field: 'action',\n          width: '100px',\n          render: (schema, row, index, h) => {\n            return [\n              'el-button',\n              {\n                class: 'role-cascader-row',\n                props: {\n                  type: 'text'\n                },\n                on: {\n                  click: () => this.onRemoveTableRow(index)\n                }\n              },\n              this.$t('commonRemove')\n            ];\n          }\n        });\n      }\n      return schema.filter(item => {\n        if (!singleTableSlotSchemaConfig[this.flowType]) {\n          return ['no', 'approval_role', 'role_id', 'action'].includes(item.field);\n        } else {\n          return singleTableSlotSchemaConfig[this.flowType].includes(item.field);\n        }\n      });\n    },\n    tableSchema() {\n      return this.isMultipleSectionFlowType ? this.multipleSchema : this.singleSchema;\n    },\n    isMultipleSectionFlowType() {\n      return multipleSectionFlowTypeList.includes(Number(this.flowType));\n    }\n  },\n\n  methods: {\n    showCategoryBtn(roleID) {\n      const role = this.roleList.find(role => role.id === roleID) || { type: 0 };\n      if (role.type === 0) {\n        return this.$store.getters.isUniversalUser;\n      } else {\n        return true;\n      }\n    },\n    onRemoveRoleItem(row, roleIndex, tableIndex) {\n      row.role_list.splice(roleIndex, 1);\n      if (!row.role_list.length) {\n        this.tableData.splice(tableIndex, 1);\n        if (this.tableData.length) {\n          this.tableData[0].section.min_value = 0; // 区间被删除时，重置区间第一个和最后一只值\n          this.tableData[this.tableData.length - 1].section.max_value = InfinityValue;\n        }\n      }\n    },\n    onAddRole(role_list) {\n      role_list.push({ role_id: '', type: 0 });\n    },\n    onRemoveTableRow(index) {\n      this.tableData.splice(index, 1);\n    },\n    createSingleRole(roleItem, h, options) {\n      return h(\n        'el-cascader',\n        {\n          class: 'role-cascader-box role-cascader-row',\n          key: `${this.cascaderKey}${Math.random()}`,\n          props: {\n            props: { expandTrigger: 'hover' },\n            'show-all-levels': false,\n            value: roleItem.role_ids,\n            options\n          },\n          on: {\n            change: value => {\n              roleItem.role_ids = value;\n              roleItem.role_id = roleItem.role_ids[roleItem.role_ids.length - 1];\n            }\n          }\n        },\n        null\n      );\n    },\n    setRoleListForSupplierType(roleList) {\n      this.cascaderKey = Math.random();\n      this.roleListForSupplierType = [\n        // universal role & local role\n        {\n          label: 'universal', // universal,\n          value: 0,\n          children: roleList.filter(item => item.type === 0).map(item => ({ value: item.id, label: item.name }))\n        },\n        {\n          label: 'local', // local == country role\n          value: 1,\n          children: roleList.filter(item => item.type === 1).map(item => ({ value: item.id, label: item.name }))\n        }\n      ];\n    },\n    modifyNotifyConfig() {\n      const { is_realtime, startTime, endTime, workday_type, interval_hours, roleID } = this.categoryConfigData;\n      const params = {\n        flow_config_id: this.flowConfigId,\n        role_id: roleID,\n        is_realtime: is_realtime\n      };\n      if (!is_realtime) {\n        if (!startTime || !endTime || !workday_type) {\n          this.$message.error('Please Choose Notification Frequency First');\n          return;\n        } else if (!interval_hours) {\n          this.$message.error('Please Choose Time First');\n          return;\n        } else {\n          const beginHour = Number(startTime.split(':')[0]);\n          const beginMinute = Number(startTime.split(':')[1]);\n          const endHour = Number(endTime.split(':')[0]);\n          const endMinute = Number(endTime.split(':')[1]);\n          if (beginHour > endHour || (beginHour === endHour && beginMinute >= endMinute)) {\n            this.$message.error('Start Time Must Be Less Than End Time');\n            return;\n          }\n          params.period = {\n            begin_hour: beginHour,\n            begin_minute: beginMinute,\n            end_hour: endHour,\n            end_minute: endMinute\n          };\n          params.workday_type = Number(workday_type);\n          params.interval_hours = Number(interval_hours);\n        }\n      }\n      createNotifyConfig(params)\n        .then(resp => {\n          if (resp.status !== 0) {\n            this.$message.error(resp.info);\n          } else {\n            this.$message.success('success');\n            this.closeConfigDialog();\n          }\n        })\n        .catch(e => this.$message.error(e));\n    },\n    closeConfigDialog() {\n      this.configDialogShow = false;\n    },\n    async onShowNotifyConfig(roleID) {\n      try {\n        this.loadingNotify = true;\n        const params = {\n          role_id: roleID,\n          flow_config_id: this.flowConfigId\n        };\n        const resp = await getNotifyConfig(params);\n        if (resp.status !== 0 && resp.status !== 114) {\n          this.$message({ type: 'error', message: resp.info });\n        } else {\n          const data = resp.data || {};\n          const startTime =\n            !data.is_realtime && data.period\n              ? `${formatTime(data.period.begin_hour)}:${formatTime(data.period.begin_minute)}`\n              : '';\n          const endTime =\n            !data.is_realtime && data.period\n              ? `${formatTime(data.period.end_hour)}:${formatTime(data.period.end_minute)}`\n              : '';\n          this.categoryConfigData = Object.assign({}, data, {\n            roleID,\n            interval_hours: data.interval_hours || '',\n            workday_type: data.workday_type || '',\n            is_realtime: !!data.is_realtime,\n            startTime,\n            endTime,\n            universalRole: (this.roleList.filter(role => role.id === roleID)[0] || { type: 0 }).type === 0\n          });\n          this.configDialogShow = true;\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loadingNotify = false;\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.approval-flow-table-wrapper {\n  /deep/ .el-table__row {\n    &:not(:last-of-type) {\n      .el-table-role-td:after {\n        content: '';\n        background: url('../../../assets/arrow-down-fill.svg') no-repeat;\n        position: absolute;\n        bottom: -21px;\n        left: 14px;\n        width: 24px;\n        height: 24px;\n        margin-bottom: 8px;\n        display: block;\n        z-index: 5;\n      }\n    }\n  }\n  /deep/ .role-id-box {\n    &:not(:last-child):after {\n      content: '';\n      display: block;\n      height: 24px;\n    }\n  }\n\n  /deep/ .role-cascader-row {\n    display: block;\n    line-height: 32px;\n    margin: 8px 0;\n  }\n  /deep/ .action-row {\n    &:not(:last-child):after {\n      content: '';\n      display: block;\n      height: 20px;\n    }\n  }\n  /deep/ .role-cascader-box {\n    max-width: 240px;\n    width: 100%;\n    &:not(:last-of-type):after {\n      content: '';\n      background: url('../../../assets/arrow-down.svg') no-repeat;\n      width: 20px;\n      height: 20px;\n      margin: 8px 0;\n      display: block;\n    }\n  }\n  /deep/ .value-flex-box {\n    display: flex;\n    .flex-1 {\n      flex: 1;\n    }\n    .flex-line {\n      flex: 0;\n      display: inline-block;\n      white-space: nowrap;\n      padding: 0 8px;\n      text-align: center;\n      line-height: 32px;\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/approvalFlow_v2/utils.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/asnControl.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/backMarginConfig/index.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"backMarginConfig\" is not PascalCase.","line":47,"column":9,"nodeType":"Literal","endLine":47,"endColumn":27,"fix":{"range":[2038,2054],"text":"BackMarginConfig"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div class=\"pms-ui bm-config pms-ele-ui\">\n    <el-header>\n      <el-tabs class=\"bm-header\" tab-position=\"bottom\" v-model=\"activeTab\" :before-leave=\"countryChange\">\n        <el-tab-pane v-for=\"item in countryList\" :key=\"item\" :label=\"item\" :name=\"item\"></el-tab-pane>\n      </el-tabs>\n      <div v-if=\"canEdit\" class=\"bm-action-btn\">\n        <el-button v-if=\"!editing\" :loading=\"loading\" class=\"list-btn\" @click=\"editBackMarginConfig\">\n          {{ $t('purchaseRequest.edit') }}\n        </el-button>\n        <el-button v-if=\"editing\" :loading=\"loading\" class=\"list-btn white-blue\" @click=\"cancelEditConfig\">\n          {{ $t('purchaseOrder.cancel') }}\n        </el-button>\n        <el-button v-if=\"editing\" :loading=\"loading\" class=\"list-btn\" @click=\"saveBackMarginConfig\">\n          {{ $t('approvalFlow.save') }}\n        </el-button>\n      </div>\n    </el-header>\n\n    <section class=\"info-section\">\n      <div class=\"info-title\">{{ $t('BMTypeConfig') }}</div>\n      <type-config :country=\"activeTab\" :is-edit=\"editing\" v-model=\"form.bm_type_config\"></type-config>\n    </section>\n\n    <section v-for=\"item in configSchemaList || []\" :key=\"item.title\" class=\"info-section form-section\">\n      <el-form label-width=\"200px\" :model=\"form[item.field]\">\n        <div class=\"info-title\">{{ item.title }}</div>\n        <div class=\"info-item\" v-for=\"schema in item.schemaList || []\" :key=\"schema.field\">\n          <el-form-item :required=\"schema.required\" :label=\"`${schema.label}:`\">\n            <pms-form-item v-if=\"editing\" :renderData=\"{ schema, form }\"></pms-form-item>\n            <span v-else>{{ getLabel(schema) }}</span>\n          </el-form-item>\n        </div>\n      </el-form>\n    </section>\n  </div>\n</template>\n\n<script>\nimport PMSFormItem from '@/components/BaseItem/formItem';\nimport { hasPermission } from '@/utils/permission';\nimport { Permission } from '@/utils/constant';\nimport { getBackMarginConfig, saveBackMarginConfig } from '@/api/backMargin';\nimport TypeConfig from './typeConfig';\n\nexport default {\n  name: 'backMarginConfig',\n  data() {\n    return {\n      activeTab: this.$store.getters.country,\n      canEdit: false,\n      editing: false,\n      loading: false,\n      originalConfig: {},\n      form: {\n        bm_type_config: [],\n        basic_info_config: {},\n        approval_rule_config: {}\n      }\n    };\n  },\n  components: {\n    'pms-form-item': PMSFormItem,\n    TypeConfig\n  },\n  computed: {\n    countryList() {\n      return [...new Set([...this.$store.getters.countryList.map(item => item.country)])];\n    },\n    configSchemaList() {\n      return [\n        {\n          title: this.$t('backMargin.basicInfoConfig'),\n          field: 'basic_info_config',\n          schemaList: [\n            {\n              required: true,\n              label: this.$t('backMargin.bmPaymentMethod'),\n              field: 'payment_method_option',\n              render: (...arg) => this.getCommonRadioRender(...arg)\n            },\n            {\n              required: true,\n              label: this.$t('backMargin.supplierPaymentTime'),\n              field: 'payment_time_option',\n              render: (...arg) => this.getCommonRadioRender(...arg)\n            },\n            {\n              required: true,\n              label: this.$t('backMargin.ContractID'),\n              field: 'contract_id_option',\n              render: (...arg) => this.getCommonRadioRender(...arg)\n            },\n            {\n              required: true,\n              label: this.$t('CFAgreement'),\n              field: 'cf_agreement_option',\n              render: (...arg) => this.getCommonRadioRender(...arg)\n            }\n          ].map(item => {\n            item.parent = 'basic_info_config';\n            item.options = [\n              {\n                label: 'Optional', // 可选\n                value: 0\n              },\n              {\n                label: 'Mandatory', // 必填\n                value: 1\n              },\n              {\n                label: 'Not Required', // 不出现\n                value: 2\n              }\n            ];\n            return item;\n          })\n        },\n        {\n          title: this.$t('backMargin.approvalRuleConfig'),\n          field: 'approval_rule_config',\n          schemaList: [\n            {\n              required: true,\n              label: this.$t('backMargin.partiallyApprovedTag'),\n              field: 'allowed_partially_approved',\n              parent: 'approval_rule_config',\n              render: (...arg) => this.getCommonRadioRender(...arg),\n              options: [\n                {\n                  label: 'Yes',\n                  value: true\n                },\n                {\n                  label: 'No',\n                  value: false\n                }\n              ]\n            }\n          ]\n        }\n      ];\n    }\n  },\n  methods: {\n    getLabel(schema) {\n      return (schema.options.find(item => item.value === this.form[schema.parent][schema.field]) || {}).label || '/';\n    },\n    getCommonRadioRender(schema, row, h) {\n      return [\n        'div',\n        {},\n        schema.options.map(item => {\n          return h(\n            'el-radio',\n            {\n              props: { value: this.form[schema.parent][schema.field], label: item.value },\n              on: { input: value => this.$set(this.form[schema.parent], schema.field, value) }\n            },\n            item.label\n          );\n        })\n      ];\n    },\n    editBackMarginConfig() {\n      this.originalConfig = JSON.parse(JSON.stringify(this.form));\n      this.editing = true;\n    },\n    cancelEditConfig() {\n      this.editing = false;\n      this.getConfigDetail(this.activeTab);\n    },\n    saveBackMarginConfig() {\n      // if (this.form.calculated_period_type === 1 && !this.form.calculated_date) {\n      //   return this.$message.error('Calculated Date is required');\n      // }\n      const data = Object.assign({}, this.form, {\n        region: this.activeTab\n      });\n      this.loading = true;\n      saveBackMarginConfig(data)\n        .then(resp => {\n          this.loading = false;\n          if (resp.retcode !== 0) {\n            this.$message.error(resp.info);\n          } else {\n            this.$message.success('Success');\n            this.editing = false;\n          }\n        })\n        .catch(() => {\n          this.$message.error('Failed');\n          this.loading = false;\n        });\n    },\n    countryChange(region) {\n      if (this.loading) {\n        this.$message.info('Please wait for loading');\n        return false;\n      }\n      this.editing = false;\n      this.form = {};\n      this.getConfigDetail(region);\n      return true;\n    },\n    getConfigDetail(region) {\n      this.loading = true;\n      getBackMarginConfig({ region })\n        .then(resp => {\n          // resp.retcode = 0;\n          if (resp.retcode !== 0) {\n            this.$message.error(resp.info);\n          } else {\n            this.form = resp.data || {};\n          }\n          this.loading = false;\n        })\n        .catch(() => {\n          this.loading = false;\n        });\n    }\n  },\n  created() {\n    this.getConfigDetail(this.activeTab);\n    this.canEdit = hasPermission(Permission.BACK_MARGIN_CONFIG_PROCESS);\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.bm-header {\n  // margin-top: 11px;\n  height: 60px;\n  max-width: 75%;\n}\n.bm-action-btn {\n  float: right;\n  margin-top: -56px;\n  min-width: 160px;\n  padding: 0 20px;\n}\n.info-section {\n  margin-bottom: 40px;\n  &:last-child {\n    border-bottom: none;\n  }\n  .info-title {\n    padding: 0 20px;\n    font-size: 18px;\n    height: 48px;\n    line-height: 48px;\n  }\n  .info-item {\n    line-height: 48px;\n    .el-select {\n      width: 200px;\n    }\n    .el-input-number {\n      text-align: left;\n    }\n  }\n}\n</style>\n\n<style lang=\"scss\">\n@import '~@/styles/common.scss';\n\n.bm-config {\n  .info-section {\n    .info-item {\n      .el-input-number .el-input__inner {\n        padding-left: 5px;\n        text-align: left;\n      }\n    }\n  }\n  &.pms-ele-ui .form-section .el-radio {\n    margin-right: 40px;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/backMarginConfig/typeConfig.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"typeConfig\" is not PascalCase.","line":16,"column":9,"nodeType":"Literal","endLine":16,"endColumn":21,"fix":{"range":[441,451],"text":"TypeConfig"}},{"ruleId":"vue/require-valid-default-prop","severity":2,"message":"Type of the default value for 'tableData' prop must be a function.","line":32,"column":16,"nodeType":"ArrayExpression","endLine":32,"endColumn":18}],"errorCount":2,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div class=\"pms-ui bm-type-config\">\n    <list-view :dataList=\"tableData\" v-loading=\"loading\" :tableSchema=\"tableSchema\">\n      <template slot=\"checkColumn\">\n        <el-table-column label=\"No.\" type=\"index\"></el-table-column>\n      </template>\n    </list-view>\n  </div>\n</template>\n\n<script>\nimport ListView from '@/components/ApproveList/list';\nimport { BackMarginTypeList } from '@/utils/constant';\n\nexport default {\n  name: 'typeConfig',\n  model: {\n    prop: 'tableData',\n    event: 'input'\n  },\n  props: {\n    country: {\n      type: String,\n      default: ''\n    },\n    isEdit: {\n      type: Boolean,\n      default: false\n    },\n    tableData: {\n      type: Array,\n      default: []\n    }\n  },\n  data() {\n    return {\n      tableSchema: [\n        {\n          label: this.$t('commonBMType'),\n          field: 'bm_type',\n          type: 'enum',\n          options: BackMarginTypeList\n        },\n        {\n          label: this.$t('commonStatus'),\n          field: 'action',\n          type: 'el-radio',\n          width: '240px',\n          options: [\n            {\n              label: this.$t('commonActive'),\n              value: true\n            },\n            {\n              label: this.$t('commonInactive'),\n              value: false\n            }\n          ],\n          render: this.renderForm.bind(this)\n        },\n        {\n          label: this.$t('backMargin.ClaimCalculationControl'),\n          field: 'claim_calculated_control',\n          type: 'el-switch',\n          options: [\n            {\n              label: 'Yes',\n              value: true\n            },\n            {\n              label: 'No',\n              value: false\n            }\n          ],\n          render: this.renderForm.bind(this),\n          isShow(schema, row, index) {\n            return row.action;\n          },\n          disabled(schema, row) {\n            return [3, 5, 7].includes(row.bm_type);\n          }\n        },\n        {\n          label: this.$t('backMargin.CalculationPeriod'),\n          field: 'calculated_period_type',\n          type: 'el-select',\n          options: [\n            {\n              label: this.$t('backMargin.Fixed-timeCalculation'),\n              value: 1,\n              filter(schema, row) {\n                return ![3, 5, 7].includes(row.bm_type);\n              }\n            },\n            {\n              label: this.$t('backMargin.One-timeCalculation'),\n              value: 2,\n              filter(schema, row) {\n                return ![3, 5, 7].includes(row.bm_type);\n              }\n            },\n            {\n              label: this.$t('backMargin.Real-timeCalculation'),\n              value: 3,\n              filter(schema, row) {\n                return [3, 5, 7].includes(row.bm_type);\n              }\n            }\n          ],\n          render: this.renderForm.bind(this),\n          isShow(schema, row, index) {\n            return row.action && row.claim_calculated_control;\n          }\n        },\n        {\n          label: this.$t('backMargin.CalculationDate'),\n          field: 'calculated_date',\n          type: 'el-input-number',\n          render: this.renderForm.bind(this),\n          width: '218px',\n          formProps: {\n            min: 1,\n            max: 28\n          },\n          isShow(schema, row, index) {\n            return row.action && row.claim_calculated_control && row.calculated_period_type === 1;\n          }\n        }\n      ],\n      loading: false\n    };\n  },\n  methods: {\n    getLabel(schema, value) {\n      return (schema.options.find(item => item.value === value) || {}).label;\n    },\n    renderForm(schema, row, index, createElement) {\n      if (typeof schema.isShow === 'function') {\n        if (!schema.isShow(schema, row, index)) return '';\n      }\n\n      if (!this.isEdit) {\n        if (['el-radio', 'el-select', 'el-switch'].includes(schema.type)) {\n          return this.getLabel(schema, this.tableData[index][schema.field]);\n        }\n        return this.tableData[index][schema.field];\n      }\n      const disabled = schema.disabled ? schema.disabled(schema, row) : false;\n      let element = null;\n      switch (schema.type) {\n        case 'el-radio': {\n          element = [\n            'span',\n            null,\n            schema.options.map(item => {\n              return createElement(\n                'el-radio',\n                {\n                  props: {\n                    value: this.tableData[index][schema.field],\n                    label: item.value,\n                    disabled,\n                    ...schema.formProps\n                  },\n                  on: {\n                    input: value => this.editForm(index, schema.field, value)\n                  }\n                },\n                [item.label]\n              );\n            })\n          ];\n          break;\n        }\n        case 'el-select': {\n          element = [\n            'el-select',\n            {\n              props: {\n                value: this.tableData[index][schema.field],\n                disabled,\n                ...schema.formProps\n              },\n              on: {\n                input: value => this.editForm(index, schema.field, value)\n              }\n            },\n            schema.options\n              .filter(item => {\n                if (typeof item.filter === 'function') {\n                  return item.filter(schema, row);\n                }\n                return true;\n              })\n              .map(item => {\n                return createElement('el-option', {\n                  props: {\n                    label: item.label,\n                    value: item.value\n                  }\n                });\n              })\n          ];\n          break;\n        }\n        default: {\n          element = [\n            schema.type,\n            {\n              props: {\n                value: this.tableData[index][schema.field],\n                disabled,\n                ...schema.formProps\n              },\n              on: {\n                input: value => this.editForm(index, schema.field, value)\n              }\n            }\n          ];\n          break;\n        }\n      }\n\n      return element;\n    },\n    editForm(index, field, value) {\n      this.tableData[index][field] = value;\n      if ([3, 5, 7].includes(this.tableData[index]['bm_type'])) {\n        this.tableData[index]['claim_calculated_control'] = true;\n      }\n      this.$emit('input', this.tableData);\n    }\n  },\n  components: {\n    ListView\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.bm-type-config {\n  padding: 0 20px;\n  /deep/.el-radio {\n    margin-right: 30px;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/categoryCluster/categoryTree.vue","messages":[{"ruleId":"vue/no-template-shadow","severity":2,"message":"Variable 'data' is already declared in the upper scope.","line":20,"column":58,"nodeType":"Identifier","endLine":20,"endColumn":62},{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"categoryTree\" is not PascalCase.","line":30,"column":9,"nodeType":"Literal","endLine":30,"endColumn":23,"fix":{"range":[1052,1064],"text":"CategoryTree"}},{"ruleId":"vue/require-prop-type-constructor","severity":2,"message":"The \"isEdit\" property should be a constructor.","line":33,"column":13,"nodeType":"Literal","endLine":33,"endColumn":18},{"ruleId":"vue/no-deprecated-destroyed-lifecycle","severity":2,"message":"The `destroyed` lifecycle hook is deprecated. Use `unmounted` instead.","line":76,"column":3,"nodeType":"Identifier","messageId":"deprecatedDestroyed","endLine":76,"endColumn":12,"suggestions":[{"messageId":"insteadUnmounted","fix":{"range":[2005,2014],"text":"unmounted"},"desc":"Instead, change to `unmounted`."}]}],"errorCount":4,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div>\n    <header class=\"category-tree-header\">\n      <span class=\"tree-name\">{{$t(isGlobal ? 'commonGlobalCategoryName' : 'commonLocalCategoryName')}}</span>\n      <span class=\"tree-id\">{{$t(isGlobal ? 'commonGlobalCategoryID' : 'commonLocalCategoryID')}}</span>\n      <span class=\"tree-cluster\">Current Cluster</span>\n    </header>\n    <el-tree\n      ref=\"tree\"\n      :data=\"showData\"\n      :show-checkbox=\"isEdit\"\n      node-key=\"category_id\"\n      @check=\"onCheck\"\n      :default-checked-keys=\"checkedKeys\"\n      :check-strictly=\"true\"\n      :default-expand-all=\"false\"\n      :expand-on-click-node=\"false\"\n      :render-after-expand=\"true\"\n    >\n      <span class=\"custom-tree-node\" slot-scope=\"{ node, data }\">\n        <span class=\"tree-name\">{{ data.category_name }}</span>\n        <span class=\"tree-id\">{{ data.category_id }}</span>\n        <span class=\"tree-cluster\">{{ data.cluster_info ? data.cluster_info.category_cluster_name : '-' }}</span>\n      </span>\n    </el-tree>\n  </div>\n</template>\n<script>\nexport default {\n  name: 'categoryTree',\n  props: {\n    data: Array,\n    isEdit: false,\n    checkedKeys: Array,\n    isGlobal: Boolean,\n    pageSize: {\n      type: Number,\n      default: 20 // 不能小于5, 如果不需要可以设为无穷大\n    }\n  },\n  data() {\n    const options = {\n      root: null,\n      rootMargin: '0px',\n      threshold: 1\n    };\n    return {\n      showLength: this.pageSize,\n      observer: new IntersectionObserver(this.handleSlide.bind(this), options),\n      observerDom: null\n    };\n  },\n  computed: {\n    showData() {\n      const list = [];\n      const dataLength = Math.min(this.data.length, this.showLength);\n      for (let i = 0; i < dataLength; i++) {\n        list.push(this.data[i]);\n      }\n      return list;\n    }\n  },\n  watch: {\n    checkedKeys: {\n      handler(val) {\n        this.$refs.tree.setCheckedKeys(val);\n      }\n    },\n    'data.length'() {\n      this.showLength = this.pageSize;\n      this.$nextTick(() => {\n        this.bindObserve();\n      });\n    }\n  },\n  destroyed() {\n    this.cancelObserve();\n  },\n  methods: {\n    bindObserve() {\n      this.cancelObserve();\n      this.observerDom = this.$refs.tree.$el.children[this.showLength - 5];\n      // console.log('绑定元素', this.showLength, this.observerDom);\n      if (!this.observerDom) return;\n      this.observer.observe(this.observerDom);\n    },\n    cancelObserve() {\n      if (!this.observerDom) return;\n      this.observer.unobserve(this.observerDom);\n    },\n    handleSlide(entries, observer) {\n      // 从显示到隐藏暂不处理\n      if (!entries[0].isIntersecting) return;\n      // console.log('显示元素');\n      // 如果已经到最后一页，则不再添加元素\n      if (this.showLength >= this.data.length) {\n        this.cancelObserve();\n        return;\n      }\n      // 添加后续元素\n      this.showLength += this.pageSize;\n      this.$nextTick(() => {\n        this.bindObserve();\n      });\n    },\n    onCheck(data, node) {\n      let checkedKeys = node.checkedKeys;\n      // console.log(data, node);\n      if (data.children) {\n        const key = data.category_id;\n        const isChecked = node.checkedKeys.includes(key);\n        const children = this.getChildrenKeys(data);\n        if (isChecked) {\n          checkedKeys = this.mergeArray(node.checkedKeys, children);\n        } else {\n          checkedKeys = this.subArray(node.checkedKeys, children);\n        }\n      }\n\n      // 因为不显示出来的阶段无法获取选中状态，可能导致提交时丢失数据（后台每次提交需要全量数据），最后做了一层搜索补充数据\n      // 将未显示的节点中已选中的按钮保留\n      if (this.showLength < this.data.length) {\n        checkedKeys = this.mergeArray(checkedKeys, this.getHiddenCheckedKeys());\n      }\n      this.$emit('setCheckedKeys', checkedKeys);\n    },\n    getHiddenCheckedKeys() {\n      // 获取被隐藏的已选中的keys\n      const showKeys = this.showData.reduce((res, curr) => {\n        res = res.concat(this.getChildrenKeys(curr));\n        return res;\n      }, []);\n      return this.checkedKeys.filter(key => !showKeys.includes(key));\n    },\n    getChildrenKeys(data) {\n      // 获取所有可选的子节点，包括自身\n      const list = [];\n      if (!data.disabled) list.push(data.category_id);\n      if (!data.children) return list;\n      const childrenKeys = data.children.reduce((res, cur) => {\n        const children = this.getChildrenKeys(cur);\n        if (children.length) res = res.concat(children);\n        return res;\n      }, []);\n      return list.concat(childrenKeys);\n    },\n    mergeArray(...arrs) {\n      // 合并多个数组， 且去重\n      const set = new Set([].concat(...arrs));\n      return [...set];\n    },\n    subArray(arr, subArr) {\n      // 去除某些子元素\n      if (!Array.isArray(arr) || !Array.isArray(subArr)) return arr;\n      return arr.filter(key => !subArr.includes(key));\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.category-tree-header,\n.custom-tree-node {\n  display: flex;\n\n  & > span {\n    padding-left: 10px;\n  }\n  .tree-name {\n    flex: 1;\n  }\n  .tree-id {\n    width: 120px;\n  }\n  .tree-cluster {\n    width: 120px;\n  }\n}\n.custom-tree-node {\n  flex: 1;\n}\n.category-tree-header {\n  line-height: 40px;\n  font-weight: 700;\n  background-color: #f0f2f5;\n  font-size: 12px;\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/categoryCluster/commonHeader.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"commonHeader\" is not PascalCase.","line":17,"column":9,"nodeType":"Literal","endLine":17,"endColumn":23,"fix":{"range":[366,378],"text":"CommonHeader"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <header class=\"pms-header pms-ui\">\n    <span class=\"title-box\">\n      <i class=\"back-icon sprite-btn-back\" @click=\"goBack\"></i>\n      <span class=\"header-title\">\n        <slot></slot>\n      </span>\n    </span>\n    <section class=\"option-box\">\n      <slot name=\"options\"></slot>\n    </section>\n  </header>\n</template>\n\n<script>\nexport default {\n  name: 'commonHeader',\n  props: {},\n  methods: {\n    goBack() {\n      this.$router.go(-1);\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.pms-header {\n  height: 60px;\n  line-height: 60px;\n  padding: 0 20px;\n  display: flex;\n  .title-box {\n    border-bottom: 2px solid #f0f2f5;\n    display: inline-block;\n    padding: 0 10px;\n  }\n  .header-title {\n    color: #d7d7d7;\n    font-size: 26px;\n    padding-left: 10px;\n  }\n  .option-box {\n    flex: 1;\n    text-align: right;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/categoryCluster/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/categoryCluster/list.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/categoryCluster/view.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/categoryTable.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/chargingReportFlow.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":3,"column":57,"nodeType":"VIdentifier","messageId":"deprecated","endLine":3,"endColumn":63}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-main class=\"charging-report-approval-flow\">\n    <el-form class=\"search-form\" :model=\"form\"  @submit.native.prevent=\"onSearch\">\n      <el-row>\n        <el-col :offset=\"schema.offset || 0\" :span=\"schema.width || 8\" v-for=\"schema in visibleSearchSchema\" :key=\"schema.field\">\n          <el-form-item :label=\"schema.label\">\n            <pms-form-item @input=\"modifyForm\" :renderData=\"{ schema, form }\"></pms-form-item>\n          </el-form-item>\n        </el-col>\n      </el-row>\n    </el-form>\n    <section class=\"content-tab-section\">\n      <!-- 按钮区域：编辑权限 -->\n      <div class=\"btns-wrapper\" v-if=\"canEditApprovalFlow\">\n        <el-button v-if=\"!isEditApproval\" type=\"primary\" class=\"list-btn\" @click=\"onEdit\">{{$t('commonEdit')}}</el-button>\n        <template v-else>\n          <el-button class=\"list-btn clear-btn\"  @click=\"onCancel\">{{$t('commonCancel')}}</el-button>\n          <el-button type=\"primary\" class=\"list-btn\" @click=\"onSave\" :loading=\"actionLoading\">{{$t('commonSave')}}</el-button>\n        </template>\n      </div>\n      <el-table :data=\"tableData\" v-loading=\"approvalDataLoading\">\n        <el-table-column label=\"Approval Role Config\" width=\"500px\">\n          <!-- role name -->\n          <template slot-scope=\"scope\">\n            <template v-if=\"isEditApproval\">\n              <el-select class='role-select' v-model=\"scope.row.role_id\" @change=\"checkSections\">\n                <el-option v-for=\"role in roleList\" :key=\"role.id\" :value=\"role.id\" :label=\"role.name\"></el-option>\n              </el-select>\n               <i class=\"el-icon-close role-delete-icon\" @click=\"onDelRole(scope.row, scope.$index)\"></i>\n            </template>\n\n            <div v-else class=\"flow-text\">{{getRoleName(scope.row.role_id)}}</div>\n            <el-row v-if=\"scope.$index !== tableData.length - 1 \"  class='flow-arrow'>\n              <div class='el-icon-bottom bottom-select-icon-btn'></div>\n            </el-row>\n          </template>\n        </el-table-column>\n        <el-table-column  key=\"price-change-column\">\n          <template slot=\"header\">\n            <el-popover\n              placement=\"top\"\n              :title=\"$t('approvalFlow.triggerTitle')\"\n              width=\"560\"\n              trigger=\"hover\"\n              >\n              <p>{{$t('crTriggerContentTitle1')}}</p>\n              <p>{{$t('crTriggerContentTitle2')}}</p>\n              <h4 >{{$t('crTriggerContentTitle3')}}</h4>\n              <p>{{$t('crTriggerContentTitle4')}}</p>\n              <p>{{$t('crTriggerContentTitle5')}}</p>\n              <span slot=\"reference\">{{$t('approvalFlow.triggerCondition')}}<i class=\"el-icon el-icon-question\"></i></span>\n            </el-popover>\n          </template>\n          <template slot-scope=\"scope\">\n            <el-checkbox-group v-model=\"scope.row.charging_report_trigger_conditions\"  @change=\"checkSections\">\n              <!-- 第一行以及非编辑态的时候，disabled -->\n              <el-checkbox\n              v-for=\"item in chargingReportTriggerConditionsList\"\n              :key=\"item.value\"\n              :disabled=\"!isEditApproval || scope.$index === 0\"\n              :label=\"item.value\">{{item.label}}</el-checkbox>\n            </el-checkbox-group>\n          </template>\n\n        </el-table-column>\n      </el-table>\n      <div v-if=\"isEditApproval\" class=\"add-role-row\">\n        <i @click=\"onAddRole()\" class=\"el-icon-circle-plus-outline add-role-icon\"></i>\n        <span @click=\"onAddRole()\" class=\"add-role-text\">{{$t('addNewApprovalRole')}}</span>\n      </div>\n    </section>\n  </el-main>\n</template>\n\n<script>\nimport PMSFormItem, { getSelectOptions } from '@/components/BaseItem/formItem';\nimport { FlowTypeList, Permission } from '@/utils/constant';\nimport { modifyFlowSections } from '@/api/approvalFlow';\nimport { hasPermission } from '@/utils/permission';\n\nexport default {\n  props: {\n    // 需要传入\n    activeTab: {\n      type: String,\n      required: true\n    },\n    flowData: {\n      type: Object,\n      default: () => {}\n    },\n    roleList: {\n      required: true,\n      type: Array\n    },\n    isEditApproval: {\n      type: Boolean,\n      default: false\n    },\n    noSectionChange: {\n      type: Boolean,\n      default: true\n    },\n    approvalDataLoading: {\n      type: Boolean,\n      default: false\n    }\n  },\n  components: { 'pms-form-item': PMSFormItem },\n  data() {\n    return {\n      form: {\n        flowType: '21',\n        purchaseType: 'Outright'\n      },\n      sections: [],\n      tableData: [],\n      actionLoading: false,\n      canEditApprovalFlow: false,\n      originTableData: [],\n      clientTypeOptions: [{\n        value: 'Outright',\n        label: 'Local - Outright'\n      }, {\n        value: 'Consignment',\n        label: 'Local-Consignment'\n      }, {\n        value: 'LocalFbs',\n        label: 'Local-FBS'\n      }, {\n        value: 'CbFbs',\n        label: 'CB-FBS'\n      }]\n    };\n  },\n  computed: {\n    schemaList() {\n      return [\n        { type: 'select', getChildren: (h) => getSelectOptions(FlowTypeList, h),\n          label: this.$t('approvalFlow.flowType'), field: 'flowType' },\n        { type: 'select', getChildren: (h) => getSelectOptions(this.clientTypeOptions, h),\n          label: this.$t('commonClientType'), field: 'purchaseType' }\n      ];\n    },\n    visibleSearchSchema() {\n      const schema = this.schemaList || [];\n      return schema.filter((item, index) => !item.hidden);\n    },\n    chargingReportTriggerConditionsList() {\n      return [\n        {value: 1, label: this.$t('approveValueChanged')},\n        {value: 2, label: this.$t('approveAttachmentUpdated')}\n      ];\n    }\n  },\n  watch: {\n    flowData: {\n      handler(nv) {\n        if (!nv) return false;\n        this.tableData = nv.sections && Array.isArray(nv.sections) && nv.sections.length ? JSON.parse(JSON.stringify(nv.sections[0].role_list)) : [];\n        this.originTableData = JSON.parse(JSON.stringify(this.tableData));\n        this.$nextTick(() => {\n          this.checkSections();\n        });\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    changeSearchFrom(field, value) {\n      this.form[field] = value;\n      this.onCancel();\n      // 修改 search form 的内容\n      this.$emit('changeSearchFrom', field, value);\n      // 重置数据\n      this.$emit('resetFlowType');\n    },\n    beforeTabClick(tab) {\n      // 没有改变\n      if (!this.noSectionChange) {\n        this.$confirm(this.$t('crConfirmToSwitchTips'), 'Warning', {\n          showCancel: true\n        }).then(resp => {\n          this.changeSearchFrom('purchaseType', tab);\n        }).catch(() => {});\n      } else {\n        this.$emit('changeEditApproval', false);\n        this.changeSearchFrom('purchaseType', tab);\n      }\n    },\n    modifyForm(schema, value) {\n      if (schema.field === 'purchaseType') {\n        this.beforeTabClick(value);\n      } else {\n        this.changeSearchFrom(schema.field, value);\n      }\n    },\n    getRoleName(id) {\n      return (this.roleList.find(item => item.id === id) || {}).name;\n    },\n    onEdit() {\n      this.$emit('changeEditApproval', true);\n    },\n    onCancel() {\n      this.tableData = JSON.parse(JSON.stringify(this.originTableData));\n      this.$emit('changeEditApproval', false);\n    },\n    onSave() {\n      if (this.actionLoading) {\n        return;\n      }\n      if (!this.tableData.length) {\n        return this.$message.error('please add rold first');\n      }\n      const params = {\n        flow_config_id: this.flowData.id,\n        sections: [{\n            sequence: 1,\n            role_list: this.tableData.map(role => {\n              // TODO:联调的时候注意\n              if (Array.isArray(role.charging_report_trigger_conditions) && role.charging_report_trigger_conditions.length < 1) {\n                return Object.assign({}, role, { charging_report_trigger_conditions: [0] });\n              } else {\n                return role;\n              }\n            }),\n            section: {\n              min_value: 0,\n              max_value: this.$store.getters.flowMaxValue || 30000000000\n            }\n          }]\n      };\n      this.actionLoading = true;\n      modifyFlowSections(params).then(resp => {\n        this.actionLoading = false;\n        if (resp.status !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.$message.success(resp.info);\n          this.originTableData = JSON.parse(JSON.stringify(this.tableData));\n          this.checkSections();\n          // 修改掉是否为编辑态的状态\n          this.$emit('changeEditApproval', false);\n        }\n      }).catch(() => { this.actionLoading = false; });\n    },\n    onDelRole(row, index) {\n      this.tableData.splice(index, 1);\n      if (index === 0 && this.tableData.length > 0) {\n        this.tableData[0].charging_report_trigger_conditions = []; // 删除后如果有第一条，则置空\n      }\n      this.checkSections();\n    },\n    onAddRole() {\n      if (this.roleList.length <= 0) {\n        this.$message.error('Please add some roles first!');\n        return;\n      }\n      const newRoleItem = {\n        role_id: this.roleList[0].id,\n        charging_report_trigger_conditions: []\n      };\n      this.tableData.push(newRoleItem);\n      this.checkSections();\n    },\n    // 是否有变化\n    checkSections() {\n      const flag = JSON.stringify(this.tableData) === JSON.stringify(this.originTableData);\n      this.$emit('checkSections', flag);\n    }\n  },\n  created() {\n    this.canEditApprovalFlow = hasPermission(Permission.APPROVAL_FLOW_MODIFY);\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.charging-report-approval-flow{\n  .search-form {\n    margin-bottom: 30px;\n    .el-form-item--medium .el-form-item__content {\n      display: inline-block;\n    }\n    .el-low {\n      display: flex;\n    }\n\n    .el-col {\n      float: none;\n      display: inline-block;\n      // width: calc(25% - 12px);\n      vertical-align: middle;\n      margin: 0 12px 16px 0;\n\n      .el-form-item {\n        display: flex;\n        border: 1px solid #e2e6ec;\n        border-radius: 4px;\n        box-sizing: content-box;\n        height: 30px;\n        line-height: 30px;\n        margin: 0px;\n      }\n    }\n\n    .long-col {\n      width: calc(50% - 12px);\n      .el-form-item__label {\n        max-width: 236px;\n      }\n    }\n\n    .el-form-item__label {\n      max-width: 224px;\n      background-color: #fafbfd;\n      white-space: nowrap;\n      text-overflow: ellipsis;\n      overflow: hidden;\n      padding: 0 8px;\n      border-radius: 4px 0 0 4px;\n      border-right: 1px solid #e2e6ec;\n    }\n    .el-form-item__content {\n      flex: 1;\n      .el-cascader, .el-input__inner {\n        width: 100%;\n      }\n      .input-range-wrapper{\n        display: flex;\n        .el-input-number{\n          flex: 1;\n        }\n        .range-separator{\n          margin: 0 10px;\n        }\n      }\n      .el-input-number--medium, .el-cascader--medium{\n        line-height: 30px;\n      }\n    }\n    .ele-input-width-style\n      {\n        width: 100% !important;\n      }\n    .el-input__inner,\n    .el-range-input {\n      border: 0;\n      background-color: transparent;\n      height: auto;\n      padding: 0 0 0 8px;\n      vertical-align: initial;\n      text-align: left;\n      margin: 0;\n      line-height: 30px;\n      &:hover {\n        border: 0;\n        background-color: #faf1e0;\n      }\n    }\n    .el-form-item--medium .el-form-item__content,\n    .el-form-item--medium .el-form-item__label {\n      line-height: 30px;\n      color: #333;\n    }\n    .el-input.is-disabled .el-input__inner {\n      background-color: #fafbfd;\n    }\n  }\n  .btns-wrapper{\n    text-align: right;\n    margin-bottom: 8px;\n  }\n  .approval-wrapper-tab-card{\n    .el-tabs__item {\n      margin-bottom: 0px;\n      font-family: Helvetica;\n      font-size: 14px;\n      color: #333333;\n      &.is-active {\n        font-family: Helvetica-Bold;\n        font-size: 14px;\n        color: #3D62D1;\n      }\n    }\n  }\n\n  .el-table{\n    .el-select {\n      width: 240px;\n      .el-input__inner{\n        border: 1px solid #E5E5E5;\n        border-radius: 4px;\n        background: #ffffff;\n      }\n    }\n  }\n}\n</style>\n<style lang=\"scss\" scoped>\n.charging-report-approval-flow{\n  .content-tab-section {\n    border: 1px solid #DCDFE6;\n    margin-top: -15px;\n    padding: 8px 24px 24px 24px;\n  }\n  .add-role-row{\n    font-size: 18px;\n    color: #3D62D1;\n    font-weight: 600;\n    cursor: pointer;\n    margin-top: 16px;\n  }\n  .bottom-select-icon-btn {\n    width: 20px;\n    height: 20px;\n    background: #3D6ED1;\n    color: #ffffff;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  .flow-arrow {\n    margin-top: 8px;\n    width: 240px;\n    display: flex;\n    justify-content: center;\n  }\n  .flow-text{\n    width: 240px;\n    text-align: center;\n  }\n  .role-delete-icon {\n      display: inline-block;\n      width: 18px;\n      height: 18px;\n      margin-left: 4px;\n      line-height: 18px;\n      border-radius: 50%;\n      text-align: center;\n      background-color: #C0C4CC;\n      color: #fff;\n      font-size: 14px;\n      font-weight: 700;\n    }\n}\n\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/configDialog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/feeTypeConfig/actionLog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/feeTypeConfig/crtConfig.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/feeTypeConfig/discountTable.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/feeTypeConfig/emailConfig/blackList.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/feeTypeConfig/emailConfig/constants.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/feeTypeConfig/emailConfig/formLabel.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/feeTypeConfig/emailConfig/formLayout.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/feeTypeConfig/emailConfig/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/feeTypeConfig/emailConfig/massUpload.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/feeTypeConfig/emailConfig/recipients.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/feeTypeConfig/emailConfig/utils.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/feeTypeConfig/index.vue","messages":[{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":197,"column":25,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":197,"endColumn":26,"fix":{"range":[6053,6054],"text":""}},{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":526,"column":26,"nodeType":"ArrowFunctionExpression","messageId":"unexpectedSpace","endLine":526,"endColumn":27,"fix":{"range":[16764,16765],"text":""}},{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":621,"column":25,"nodeType":"FunctionExpression","messageId":"unexpectedSpace","endLine":621,"endColumn":26,"fix":{"range":[19697,19698],"text":""}}],"errorCount":3,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"<template>\n  <el-main class=\"fee-Type-config pms-ele-ui pms-ui\">\n    <section class=\"config-header-section\">\n      <header class=\"wrapper-title\">{{$t('chargingConfig')}}</header>\n      <div class=\"header-form-item\">\n        <span class=\"form-item-title\">{{$t('commonRegion') + ':'}}</span>\n        <el-select v-model=\"region\" class=\"form-item-select\" @change=\"changeRegion\">\n          <el-option v-for=\"item in countryList\" :key=\"item\" :label=\"item\" :value=\"item\"></el-option>\n        </el-select>\n        <span class=\"form-item-title ml40\">{{$t('commonClientType') + ':'}}</span>\n        <el-select\n          v-model=\"supplierType\"\n          class=\"form-item-select supplier-type-select\"\n          @change=\"changeSupplierType\"\n        >\n          <el-option\n            v-for=\"item in supplierTypeList\"\n            :key=\"item.value\"\n            :label=\"item.label\"\n            :value=\"item.value\"\n          ></el-option>\n        </el-select>\n      </div>\n    </section>\n    <!-- tabs -->\n    <section class=\"config-tab-section\">\n      <el-tabs\n        v-model=\"activeConfigTab\"\n        type=\"card\"\n        class=\"pms-ele-ui wrapper-tab-card\"\n        :before-leave=\"onBeforeLeaveCofigType\"\n      >\n        <el-tab-pane\n          v-for=\"item in configTypes\"\n          :key=\"item.value\"\n          :label=\"$t(item.label)\"\n          :name=\"item.value\"\n        ></el-tab-pane>\n      </el-tabs>\n    </section>\n    <section class=\"config-content-section\" v-loading=\"loading\">\n      <!-- 按钮操作区 -->\n      <div class=\"btn-wrapper pms-clearfix pms-ele-ui\">\n        <div class=\"pms-float-right\">\n          <div class=\"list-btn\" @click=\"onClickActionLog\">{{$t('commonActionLog')}}</div>\n          <div class=\"list-btn white\" v-if=\"isEdit\" @click=\"onCancel\">{{$t('commonCancel')}}</div>\n          <div class=\"list-btn\" v-if=\"isEdit\" @click=\"onSave\">{{$t('commonSave')}}</div>\n          <div class=\"list-btn\" v-if=\"!isEdit && canOperate\" @click=\"onEdit\">{{$t('commonEdit')}}</div>\n        </div>\n      </div>\n      <!-- sub fee config -->\n      <sub-fee-type-config\n        v-if=\"activeConfigTab === '1'\"\n        :supplierType=\"supplierType\"\n        :feeTypeConfigList=\"feeTypeConfigList\"\n        :isEdit=\"isEdit\"\n      ></sub-fee-type-config>\n      <!-- crt config -->\n      <crt-config\n        v-else-if=\"activeConfigTab === '2'\"\n        :crtConfig=\"crtConfig\"\n        :supplierType=\"supplierType\"\n        :isEdit=\"isEdit\"\n        :sourceData=\"JSON.parse(cacheConfigStr)\"\n        :isTWLocalConsignment=\"isTWLocalConsignment\"\n      ></crt-config>\n      <!-- option config -->\n      <option-config\n        v-else-if=\"activeConfigTab === '3'\"\n        :optionAllConfig=\"optionAllConfig\"\n        :supplierType=\"supplierType\"\n        :currency=\"currency\"\n        :isEdit=\"isEdit\"\n        :sourceData=\"JSON.parse(cacheConfigStr)\"\n        :isTWLocalConsignment=\"isTWLocalConsignment\"\n      ></option-config>\n      <EmailConfig\n        ref=\"emailConfig\"\n        v-else-if=\"activeConfigTab === '4'\"\n        :region=\"region\"\n        :supplierType=\"supplierType\"\n        :isEdit=\"isEdit\"\n        :sourceData=\"emailConfig\"\n      />\n    </section>\n    <ActionLog\n      :region=\"region\"\n      :supplierPurchaseType=\"supplierType\"\n      :configType=\"Number(activeConfigTab)\"\n      :visible=\"actionLogVisible\"\n      @close=\"closeActionLog\"\n    />\n  </el-main>\n</template>\n\n<script>\nimport { get } from 'lodash';\nimport { hasPermission } from '@/utils/permission';\nimport { Permission, CRTSupplierTypeList } from '@/utils/constant';\nimport {\n  getFeeTypeConfigList,\n  updateFeeTypeConfig,\n  getCrtConfig,\n  getOptionConfig,\n  updateCrtConfig,\n  updateOptionConfig,\n  apiGetCharingEmailConfig,\n  apiPostCharingEmailConfig\n} from '@/api/feeTypeConfig';\nimport { formatParams } from '@/utils/formatParams';\nimport SubFeeTypeConfig from './subFeeTypeConfig';\nimport CrtConfig from './crtConfig';\nimport OptionConfig from './optionConfig';\nimport EmailConfig from './emailConfig/index';\nimport { fomratFormDataToParams } from './emailConfig/utils';\nimport ActionLog from './actionLog';\n\nconst supplierOptions = CRTSupplierTypeList.filter(item => item.value !== '');\n\nconst configTypes = [\n  { value: '1', label: 'subFeeTypeConfig' },\n  { value: '2', label: 'CRTConfig' },\n  { value: '3', label: 'optionConfig' },\n  { value: '4', label: 'commonEmailConfig' }\n];\n\nexport default {\n  name: 'CharingConfig',\n  data() {\n    const defaultCountry = (\n      this.$store.getters.countrySelectList[0] || { value: '' }\n    ).value;\n    return {\n      canOperate: true,\n      supplierTypeList: supplierOptions,\n      supplierType: 3,\n      feeTypeConfigList: [], // sub Fee Type Config\n      crtConfig: {}, // CRT Config\n      optionAllConfig: {}, // Option Config\n      emailConfig: {},\n      region: defaultCountry, // 设置默认国家\n      lastRegion: defaultCountry,\n      activeConfigTab: '1',\n      isEdit: false,\n      loading: false,\n      cacheConfigStr: '{}', // 缓存\n      actionLogVisible: false\n    };\n  },\n  components: {\n    SubFeeTypeConfig,\n    CrtConfig,\n    OptionConfig,\n    EmailConfig,\n    ActionLog\n  },\n  created() {\n    this.canOperate = hasPermission(Permission.FEE_TYPE_CONFIG_EDIT);\n    this.getConfigData();\n  },\n  computed: {\n    /**\n     * subFeeType config 是 1\n     * crt config 是 2\n     * option config 是 3\n     * email config 是 4\n     */\n    currency() {\n      return this.$store.getters.currencyMap[this.region];\n    },\n    configTypes() {\n      return configTypes;\n    },\n    countryList() {\n      return this.$store.getters.countrySelectList.map((item) => item.value);\n    },\n    operateChargingConfigMap() {\n      return {\n        1: {\n          save: this.submitSubFeeConfig,\n          getData: this.getSubFeeConfig\n        },\n        2: {\n          save: this.updateCrtConfig,\n          getData: this.getCrtConfig\n        },\n        3: {\n          save: this.updateOptionConfig,\n          getData: this.getOptionConfig\n        },\n        4: {\n          save: this.updateEmailConfig,\n          getData: this.getEmailConfig\n        }\n      };\n    },\n    isTWLocalConsignment () {\n      return this.region === 'TW' && this.supplierType === 3;\n    }\n  },\n  methods: {\n    changeSupplierType(value) {\n      if (Number(this.activeConfigTab) === 1) {\n        return;\n      }\n      if (this.isEdit) {\n        this.$confirm(\n          this.$t('commonBeforeChangeTabTips'),\n          this.$t('commonTips'),\n          {\n            confirmButtonText: this.$t('commonConfirm'),\n            cancelButtonText: this.$t('commonCancel'),\n            customClass: 'pms-ele-ui',\n            confirmButtonClass: 'list-btn',\n            cancelButtonClass: 'list-btn white'\n          }\n        )\n          .then((action) => {\n            if (action === 'confirm') {\n              this.getConfigData();\n              this.isEdit = false;\n            }\n          })\n          .catch((e) => {\n            if (e !== 'cancel') {\n              this.$message.error(e);\n            }\n          });\n      } else {\n        this.getConfigData();\n      }\n    },\n    // 切换 region，切换后需要重新获取数据\n    changeRegion(value) {\n      if (this.isEdit) {\n        this.$confirm(\n          this.$t('commonBeforeChangeTabTips'),\n          this.$t('commonTips'),\n          {\n            confirmButtonText: this.$t('commonConfirm'),\n            cancelButtonText: this.$t('commonCancel'),\n            customClass: 'pms-ele-ui',\n            confirmButtonClass: 'list-btn',\n            cancelButtonClass: 'list-btn white'\n          }\n        )\n          .then((action) => {\n            if (action === 'confirm') {\n              this.getConfigData();\n              this.lastRegion = value;\n              this.isEdit = false;\n            }\n          })\n          .catch((e) => {\n            if (e === 'cancel') {\n              this.region = this.lastRegion;\n            } else {\n              this.$message.error(e);\n            }\n          });\n      } else {\n        this.getConfigData();\n        this.lastRegion = value;\n      }\n    },\n    onBeforeLeaveCofigType(activeName) {\n      if (this.isEdit) {\n        return new Promise((resolve, reject) => {\n          this.$confirm(\n            this.$t('commonBeforeChangeTabTips'),\n            this.$t('commonTips'),\n            {\n              confirmButtonText: this.$t('commonConfirm'),\n              cancelButtonText: this.$t('commonCancel'),\n              customClass: 'pms-ele-ui',\n              confirmButtonClass: 'list-btn',\n              cancelButtonClass: 'list-btn white'\n            }\n          )\n            .then(() => {\n              this.activeConfigTab = activeName;\n              this.getConfigData();\n              resolve();\n              this.isEdit = false;\n            })\n            .catch(() => {\n              reject();\n            });\n        });\n      } else {\n        this.activeConfigTab = activeName;\n        this.getConfigData();\n        return true;\n      }\n    },\n    // 展示 action Log\n    onClickActionLog() {\n      this.actionLogVisible = true;\n    },\n    closeActionLog() {\n      if (this.actionLogVisible) {\n        this.actionLogVisible = false;\n      }\n    },\n    // 根据 activeConfigTab，缓存赋值也会有所不同\n    onCancel() {\n      const cacheData = JSON.parse(this.cacheConfigStr);\n      if (this.activeConfigTab === '1') {\n        this.feeTypeConfigList = cacheData;\n      } else if (this.activeConfigTab === '2') {\n        this.crtConfig = cacheData;\n      } else if (this.activeConfigTab === '3') {\n        this.optionAllConfig = cacheData;\n      } else if (this.activeConfigTab === '4') {\n        this.emailConfig = cacheData;\n      }\n      this.isEdit = false;\n    },\n    // 获取数据，根据 activeConfigTab 的不同获取不同的数据\n    getConfigData() {\n      this.loading = true;\n      const params = {\n        region: this.region,\n        supplier_purchase_type: Number(this.supplierType)\n      };\n      this.operateChargingConfigMap[this.activeConfigTab].getData(params);\n    },\n    // 保存的时候根据 activeConfigTab 的不同调用不同的接口\n    onSave() {\n      this.loading = true;\n      this.operateChargingConfigMap[this.activeConfigTab].save();\n    },\n    validOptionConfig() {\n      let isValid = true;\n      if (!this.optionAllConfig.sold_standard) {\n        this.$message.error('Sold Standard is required.');\n        isValid = false;\n      }\n      isValid = this.optionAllConfig.option_config_list.every((option) => {\n        if (\n          option.config.black_stock_limit &&\n          !option.config.black_stock_days_limit\n        ) {\n          this.$message.error('\"Black Stock\" days Limits is required.');\n          return false;\n        }\n        if (\n          option.config.tiered_rates_based_on_sold_qty &&\n          !option.config.tier_rate_threshold_by\n        ) {\n          this.$message.error('Tier Rate Threshold By is required.');\n          return false;\n        }\n        if (option.config.low_price_filter_switch && !option.config.low_price_limit) {\n          this.$message.error('Low Price Limit is required.');\n          return false;\n        }\n        return true;\n      });\n      return isValid;\n    },\n    handleOptionConfigList(option_config_list) {\n      option_config_list.forEach((item) => {\n        if (item.option === 6) {\n          item.config.black_stock_days_limit = Number(\n            item.config.black_stock_days_limit\n          );\n          delete item.config.fee_cap_per_sku_per_order;\n        }\n        if (item.option === 1) {\n          delete item.config.black_stock_days_limit;\n          delete item.config.black_stock_limit;\n        }\n        if (item.option === 3 || item.option === 2) {\n          item.config = {\n            fee_cap_per_sku_per_order: item.config.fee_cap_per_sku_per_order,\n            low_price_filter_switch: item.config.low_price_filter_switch,\n            low_price_limit: item.config.low_price_limit\n          };\n        }\n      });\n      return option_config_list;\n    },\n    // 更新 option 配置\n    async updateOptionConfig() {\n      try {\n        // 校验\n        if (!this.validOptionConfig()) {\n          return;\n        }\n        // 处理参数\n        const option_config_list = this.handleOptionConfigList(\n          JSON.parse(JSON.stringify(this.optionAllConfig.option_config_list))\n        );\n        const params = {\n          supplier_purchase_type: Number(this.supplierType),\n          region: this.region,\n          option_config_list: option_config_list,\n          sold_standard: this.optionAllConfig.sold_standard,\n          refund_seller_for_return_qty_switch: this.optionAllConfig\n            .refund_seller_for_return_qty_switch\n        };\n        const res = await updateOptionConfig(params);\n        this.commonFetch(res, (data) => {\n          this.$message({\n            type: 'success',\n            message: this.$t('commonSubmitSuccess')\n          });\n          this.cacheConfigStr = JSON.stringify(this.optionAllConfig);\n          this.isEdit = false;\n        });\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loading = false;\n      }\n    },\n    // 更新 CRT 配置\n    async updateCrtConfig() {\n      try {\n        const params = {\n          region: this.region,\n          supplier_purchase_type: Number(this.supplierType),\n          ...this.crtConfig\n        };\n        // 校验是否必填\n        if (!this.crtConfig.period_options.length) {\n          this.$message.error('CRT Period Option is required.');\n          return;\n        }\n        const detail = this.crtConfig.supplier_shop_discount_detail;\n        if (\n          this.crtConfig.supplier_shop_discount_enable &&\n          ((detail.exit_supplier_fee.enable &&\n            // sub_fee_type_list 要有值，而且长度不能为空\n            !(\n              detail.exit_supplier_fee.sub_fee_type_list &&\n              detail.exit_supplier_fee.sub_fee_type_list.length\n            )))\n        ) {\n          this.$message.error('Fee Type To Be Waiver is required.');\n          return;\n        }\n        // 校验 New Shop Discount 表格配置\n        // TODO:翻译\n        if (this.crtConfig.supplier_shop_discount_enable && detail.new_shop_discount.enable) {\n          const subFeeList = detail.new_shop_discount.sub_fee_list;\n          let errorMessage = '';\n          if (!subFeeList || !subFeeList.length) {\n            errorMessage = 'feeTypeIsRequired';\n          }\n          subFeeList && subFeeList.every(subFee => {\n            if (subFee.fee_type.length === 0) {\n              errorMessage = 'feeTypeIsRequired';\n              return false;\n            }\n            return subFee.discount_info_list.every((discount, index) => {\n              if (typeof discount.discount_days_start !== 'number') {\n                errorMessage = `lowerLimitRequired`;\n                return false;\n              }\n              if (typeof discount.discount_days_end !== 'number') {\n                errorMessage = `upperLimitRequired`;\n                return false;\n              }\n              if (typeof discount.discount_rate !== 'number') {\n                errorMessage = `discountRateRequired`;\n                return false;\n              }\n              if (index !== (subFee.discount_info_list.length - 1) &&\n              discount.discount_days_end + 1 !== subFee.discount_info_list[index + 1].discount_days_start) {\n                 errorMessage = 'mustConsecutiveTips';\n                 return false;\n              }\n              return true;\n            });\n          });\n          if (errorMessage) {\n            this.$message.error(this.$t(errorMessage));\n            return;\n          };\n        }\n        const res = await updateCrtConfig(params);\n        this.commonFetch(res, (data) => {\n          this.$message({\n            type: 'success',\n            message: this.$t('commonSubmitSuccess')\n          });\n          this.cacheConfigStr = JSON.stringify(this.crtConfig);\n          this.isEdit = false;\n        });\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loading = false;\n      }\n    },\n    // 提交更新 sub Fee Config\n    async submitSubFeeConfig() {\n      try {\n        const params = {\n          sub_fee_type_list: this.feeTypeConfigList,\n          supplier_purchase_type: Number(this.supplierType),\n          region: this.region\n        };\n        const res = await updateFeeTypeConfig(params);\n        this.commonFetch(res, (data) => {\n          this.$message({\n            type: 'success',\n            message: this.$t('commonSubmitSuccess')\n          });\n          this.cacheConfigStr = JSON.stringify(this.feeTypeConfigList);\n          this.isEdit = false;\n        });\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loading = false;\n      }\n    },\n    onEdit() {\n      this.isEdit = true;\n    },\n    updateEmailConfig() {\n      const form = get(this.$refs.emailConfig, '$refs.form');\n      form.validate(async (pass, rules) => {\n        if (!pass) {\n          this.loading = false;\n          return;\n        }\n        try {\n          const {formData} = this.$refs.emailConfig;\n          const params = {\n            supplier_purchase_type: Number(this.supplierType),\n            region: this.region,\n            ...fomratFormDataToParams(formData, this.emailConfig)\n          };\n          const result = await apiPostCharingEmailConfig(params);\n          this.commonFetch(result, (data) => {\n            this.$message({type: 'success', message: this.$t('commonSubmitSuccess')});\n            this.getEmailConfig();\n            this.isEdit = false;\n          });\n        } catch (e) {\n          this.$message({type: 'error', message: e});\n        } finally {\n          this.loading = false;\n        }\n      });\n    },\n    async getEmailConfig() {\n      try {\n        const params = {\n          region: this.region,\n          supplier_purchase_type: Number(this.supplierType)\n        };\n        const res = await apiGetCharingEmailConfig(formatParams(params));\n        this.commonFetch(res, (data) => {\n          this.emailConfig = data || {};\n          this.cacheConfigStr = JSON.stringify(data);\n        });\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loading = false;\n      }\n    },\n    // 获取 Option 配置\n    async getOptionConfig(params) {\n      try {\n        const res = await getOptionConfig(formatParams(params));\n        this.commonFetch(res, (data) => {\n          this.optionAllConfig = data || {};\n          this.cacheConfigStr = JSON.stringify(this.optionAllConfig);\n        });\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loading = false;\n      }\n    },\n    // 获取 CRT 配置\n    async getCrtConfig(params) {\n      try {\n        const res = await getCrtConfig(formatParams(params));\n        this.commonFetch(res, (data) => {\n          this.crtConfig = data || {};\n          this.cacheConfigStr = JSON.stringify(this.crtConfig);\n        });\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loading = false;\n      }\n    },\n    commonFetch(res, cb) {\n      if (res && res.retcode === 0) {\n        cb(res.data);\n      } else {\n        this.$message.error(\n          res.info || 'failed to connect network, pls try it again later'\n        );\n      }\n    },\n    // 获取 sub Fee Config\n    async getSubFeeConfig(params) {\n      try {\n        const res = await getFeeTypeConfigList(formatParams(params));\n        this.commonFetch(res, (data) => {\n          this.feeTypeConfigList = data.sub_fee_type_list || [];\n          this.cacheConfigStr = JSON.stringify(this.feeTypeConfigList);\n        });\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loading = false;\n      }\n    }\n  },\n  watch: {\n    lastRegion: function (newLastRegion) {\n      if (newLastRegion === 'TW') {\n        this.supplierTypeList = this.supplierTypeList.filter(item => item.value !== 2);\n        this.supplierType = this.supplierType === 2 ? 3 : this.supplierType;\n      } else {\n        this.supplierTypeList = supplierOptions;\n      }\n    }\n  }\n};\n</script>\n\n<style scoped lang=\"scss\">\n@import '~@/styles/variables.scss';\n.fee-Type-config {\n  padding: 0 20px;\n  color: #333;\n  .wrapper-title {\n    font-size: 24px;\n    line-height: 36px;\n  }\n  .config-tab-section {\n    margin-top: 32px;\n  }\n  .config-content-section {\n    padding: 16px 32px;\n    border: 1px solid #dcdfe6;\n    border-top: 0;\n    .btn-wrapper {\n      overflow: hidden;\n      .action-log {\n        margin-right: 8px;\n      }\n    }\n    .block-form {\n      width: 80%;\n      .form-title {\n        color: #333;\n        font-weight: bold;\n        font-size: 18px;\n        margin-bottom: 20px;\n      }\n      .form-item {\n        padding-left: 32px;\n      }\n    }\n  }\n}\n</style>\n<style lang=\"scss\">\n@import '~@/styles/common.scss'; // ~@ = @ = 'src' webpack alias path\n.fee-Type-config {\n  .header-form-item {\n    margin: 24px 0;\n    .form-item-title {\n      display: inline-block;\n      font-size: 14px;\n      margin-right: 8px;\n    }\n    .form-item-select {\n      width: 120px;\n      &.supplier-type-select {\n        width: 160px;\n      }\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/feeTypeConfig/optionConfig.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/feeTypeConfig/subFeeTypeConfig.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/inboundHistoryDialog.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"inboundHistory\" is not PascalCase.","line":29,"column":9,"nodeType":"Literal","endLine":29,"endColumn":25,"fix":{"range":[1470,1484],"text":"InboundHistory"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <el-dialog :title='$t(\"approvalFlow.history\")' :visible.sync=\"dialogVisible\" @close='$emit(\"close\")'>\n    <el-container>\n      <el-main>\n        <el-table :data=\"histories\" size=\"mini\" border>\n          <el-table-column :label=\"$t('purchaseOrder.modifyTime')\">\n            <template slot-scope='scope'>\n              {{moment(scope.row.ctime * 1000).format('YYYY-MM-DD HH:mm:ss')}}\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"max_inbound_capacity_before\" :label=\"$t('opHistory.maxInboundCapacityBefore')\"></el-table-column>\n          <el-table-column prop='max_inbound_capacity_after' :label=\"$t('opHistory.maxInboundCapacityAfter')\"></el-table-column>\n          <el-table-column prop=\"warn_rate_before\" :label=\"$t('opHistory.warnRateBefore')\"></el-table-column>\n          <el-table-column prop='warn_rate_after' :label=\"$t('opHistory.warnRateAfter')\"></el-table-column>\n          <el-table-column prop='operator' :label=\"$t('opHistory.operatorEmail')\"></el-table-column>\n        </el-table>\n      </el-main>\n      <el-footer align='center'>\n        <el-pagination background layout=\"prev, pager, next\" :current-page='pageIndex' :total.sync=\"total\" :page-size=\"10\" @current-change=\"handleChangePage\"></el-pagination>\n      </el-footer>\n    </el-container>\n  </el-dialog>\n</template>\n\n<script>\nimport { getHistoryInboundPlanning } from '@/api/inboundPlanning';\nimport moment from 'moment';\nexport default {\n  name: 'inboundHistory',\n  data() {\n    return {\n      histories: [],\n      dialogVisible: false,\n      pageIndex: 1,\n      total: 0\n    };\n  },\n  props: {\n    visible: {\n      default: false\n    },\n    warehouse: {\n      type: String,\n      required: true\n    },\n    dateRow: {\n      required: true\n    }\n  },\n  methods: {\n    moment,\n    fetchHistories() {\n      const parmas = {\n        skip: (this.pageIndex - 1) * 10,\n        limit: 10,\n        whs_id: this.$props.warehouse,\n        date_str: this.$props.dateRow.date_str\n      };\n      getHistoryInboundPlanning(parmas).then(resp => {\n        if (resp.status !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.histories = resp.data.inbound_plan_op_history_list;\n          this.total = resp.data.total || 0;\n        }\n      });\n    },\n    handleChangePage(page) {\n      this.pageIndex = page;\n      this.fetchHistories();\n    }\n  },\n  watch: {\n    '$props.visible': function(now, prev) {\n      this.dialogVisible = now;\n      if (now) {\n        this.pageIndex = 1;\n        this.fetchHistories();\n      }\n    }\n  }\n};\n</script>\n\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/inboundMassUpdateDialog.vue","messages":[{"ruleId":"vue/v-on-style","severity":2,"message":"Expected '@' instead of 'v-on:'.","line":16,"column":38,"nodeType":"VAttribute","endLine":16,"endColumn":63,"fix":{"range":[860,865],"text":"@"}},{"ruleId":"vue/v-on-style","severity":2,"message":"Expected '@' instead of 'v-on:'.","line":20,"column":38,"nodeType":"VAttribute","endLine":20,"endColumn":65,"fix":{"range":[1055,1060],"text":"@"}},{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"inboundMassUpdate\" is not PascalCase.","line":28,"column":9,"nodeType":"Literal","endLine":28,"endColumn":28,"fix":{"range":[1223,1240],"text":"InboundMassUpdate"}}],"errorCount":3,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"<template>\n  <el-dialog :title='$t(\"approvalFlow.massUpdate\")' :visible.sync=\"dialogVisible\" @close='$emit(\"close\")'>\n    <el-container>\n      <el-main>\n        <el-form ref='massUpdateInbound' :model='modifyForm' :rules='modifyRule' label-width='200px'>\n          <el-form-item prop='max_inbound_capacity' :label='$t(\"approvalFlow.maxInboundCapacity\")'>\n            <el-input-number :precision='0' :controls=false v-model.number='modifyForm.max_inbound_capacity'></el-input-number>\n          </el-form-item>\n          <el-form-item prop='warn_rate' :label='$t(\"approvalFlow.warningRate\")'>\n            <el-input-number :precision='0' :controls=false v-model.number='modifyForm.warn_rate'></el-input-number>\n            {{'%'}}\n          </el-form-item>\n        </el-form>\n      </el-main>\n      <el-footer align='center'>\n        <div class='dialog-list-btn' v-on:click='submitModify'>\n          <span :class='actionLoading ? \"el-icon-loading\" : \"\"'></span>\n          {{$t('purchaseRequest.confirm')}}\n        </div>\n        <div class='dialog-list-btn' v-on:click='$emit(\"close\")'>{{$t('purchaseRequest.close')}}</div>\n      </el-footer>\n    </el-container>\n  </el-dialog>\n</template>\n\n<script>\nexport default {\n  name: 'inboundMassUpdate',\n  data() {\n    return {\n      modifyForm: {\n        max_inbound_capacity: undefined,\n        warn_rate: undefined\n      },\n      modifyRule: {\n        max_inbound_capacity: [\n          { required: true, min: 1, type: 'number', message: 'Maximum inbound capacity must be a positive！', trigger: 'blur' },\n          { required: true, min: 1, max: 2000000000, type: 'number', message: 'Maximum inbound capacity must be less than 2,000,000,000！', trigger: 'blur' }\n        ],\n        warn_rate: { required: true, min: 1, max: 100, type: 'number' }\n      },\n      dialogVisible: false\n    };\n  },\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    actionLoading: {\n      type: Boolean,\n      default: false\n    }\n  },\n  methods: {\n    submitModify() {\n      this.$refs.massUpdateInbound.validate(validate => {\n        if (validate) {\n          this.$emit('massUpdate', this.modifyForm);\n        }\n      });\n    }\n  },\n  watch: {\n    '$props.visible': function(now, prev) {\n      this.dialogVisible = now;\n    }\n  }\n};\n</script>\n\n<style>\n.dialog-list-btn {\n  display: inline-block;\n  margin-right: 16px;\n  font-size: 14px;\n  color: #fff;\n  background-color: #3d6ed1;\n  height: 32px;\n  width: 70px;\n  cursor: pointer;\n  line-height: 32px;\n  text-align: center;\n  cursor: pointer;\n  border-radius: 3px;\n  vertical-align: middle;\n  font-weight: bolder;\n  padding: 0;\n  border: 0;\n  font-weight: 400;\n  font-family: \"Helvetica Light\",\"Helvetica Neue Light\",Helvetica,Arial,sans-serif;\n}\n</style>\n\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/inboundPlanning.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/inventoryHealth/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/inventoryHealth/inventoryHealthConfig.vue","messages":[{"ruleId":"vue/no-template-shadow","severity":2,"message":"Variable 'index' is already declared in the upper scope.","line":40,"column":35,"nodeType":"Identifier","endLine":40,"endColumn":40}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"inventory-health-config\">\n    <el-table :data=\"tagGroupList\" border>\n      <el-table-column prop=\"label\" align=\"center\" min-width=\"5\" :label=\"$t('approvalFlow.inventoryHealthLevel')\"></el-table-column>\n      <el-table-column align=\"center\" width=\"100px\" :label=\"$t('approvalFlow.inventoryHealthTag')\">\n        <template slot-scope=\"scope\">\n          <div :style=\"{ 'background-color': scope.row.value }\" class=\"color-tag\"></div>\n        </template>\n      </el-table-column>\n      <el-table-column align=\"center\" min-width=\"33\" :label=\"$t('route.rule')\">\n        <template slot-scope=\"scope\">\n          <el-form v-if=\"scope.row.groupList && scope.row.groupList.length\" class=\"rule-form\" :disabled=\"scope.$index !== activeIndex\">\n            <div class=\"rule-main\">\n              <el-checkbox\n                :class=\"{ 'hidden-element': activeIndex !== scope.$index }\"\n                :indeterminate=\"!isAllGroupChecked(scope.row) && !!groupCheckList.length\"\n                @change=\"changeAllGroupCheck(scope.row)\"\n                :value=\"isAllGroupChecked(scope.row)\">\n              </el-checkbox>\n              <div class=\"rule-number-order-label\">{{`NO`}}</div>\n              <i class=\"el-icon-minus hidden-element\"></i>\n              <section class=\"rule-item rule-title\">\n                <div class=\"rule-attribute\">{{$t(\"approvalFlow.lowerLimit\")}}</div>\n                <div class=\"rule-attribute\">{{$t(\"approvalFlow.operator\")}}</div>\n                <div class=\"rule-attribute\">{{$t(\"approvalFlow.inventoryMetric\")}}</div>\n                <div class=\"rule-attribute\">{{$t(\"approvalFlow.operator\")}}</div>\n                <div class=\"rule-attribute\">{{$t(\"approvalFlow.upperLimit\")}}</div>\n              </section>\n              <i class=\"el-icon-plus hidden-element\"></i>\n            </div>\n            <div class=\"rule-main\" v-for=\"(group, index) in scope.row.groupList\" :key=\"index\">\n              <el-checkbox\n                :class=\"{ 'hidden-element': activeIndex !== scope.$index }\"\n                @change=\"changeGroupCheck(index)\"\n                :value=\"groupCheckList.includes(index)\">\n              </el-checkbox>\n              <section class=\"rule-number-order\">{{ index + 1 }}</section>\n              <i v-if=\"!group.rule_param_list || !group.rule_param_list.length\" @click=\"deleteRule(scope.$index, group.tagIndex)\" class=\"el-icon-minus\"></i>\n              <ul class=\"rule-list\">\n                <li v-for=\"(rule, index) in group.rule_param_list || []\" :key=\"index\" class=\"rule-item\">\n                  <i @click=\"deleteRule(scope.$index, group.tagIndex, index)\" class=\"el-icon-minus\"></i>\n                  <section class=\"rule-attribute\">\n                    <el-input-number :precision=\"0\" :min=\"0\" :controls=\"false\" v-model=\"rule.lower_limit\"></el-input-number>\n                  </section>\n                  <section class=\"rule-attribute\">\n                    <el-select v-model=\"rule.operator_lower\">\n                      <el-option v-for=\"connector in connectorList\" :key=\"connector.value\" :value=\"connector.value\" :label=\"connector.label\"></el-option>\n                    </el-select>\n                  </section>\n                  <section class=\"rule-attribute\">\n                    <el-cascader :props=\"{ emitPath: false }\" :show-all-levels=\"false\" v-model=\"rule.dimension\" :options=\"latitudeList\"></el-cascader>\n                  </section>\n                  <section class=\"rule-attribute\">\n                    <el-select v-model=\"rule.operator_upper\">\n                      <el-option v-for=\"connector in connectorList\" :key=\"connector.value\" :value=\"connector.value\" :label=\"connector.label\"></el-option>\n                    </el-select>\n                  </section>\n                  <section class=\"rule-attribute\">\n                    <el-input-number :precision=\"0\" :min=\"(Number(rule.lower_limit) || 0) + 1\" :controls=\"false\" v-model=\"rule.upper_limit\"></el-input-number>\n                  </section>\n                  <i v-if=\"index === group.rule_param_list.length - 1\" @click=\"addRule(scope.$index, group.tagIndex)\" class=\"el-icon-plus\"></i>\n                  <i v-else class=\"el-icon-plus hidden-element\"></i>\n                </li>\n              </ul>\n              <i v-if=\"!group.rule_param_list || !group.rule_param_list.length\" @click=\"addRule(scope.$index, group.tagIndex)\" class=\"el-icon-plus\"></i>\n            </div>\n          </el-form>\n        </template>\n      </el-table-column>\n      <el-table-column v-if=\"canEditTag\" align=\"center\" width=\"120px\" :label=\"$t('purchaseRequest.action')\">\n        <template slot-scope=\"scope\">\n          <el-button v-if=\"activeIndex === scope.$index\" class=\"list-btn\" @click=\"addGroup(scope.row, scope.$index)\">{{$t('purchaseOrder.add')}}</el-button>\n          <el-button v-if=\"activeIndex === scope.$index && scope.row.groupList && scope.row.groupList.length\" class=\"list-btn danger-btn\"\n            @click=\"deleteGroup(scope.row, scope.$index)\">{{$t('purchaseOrder.delete')}}</el-button>\n          <el-button class=\"list-btn\" @click=\"editTag(scope.$index)\" v-if=\"activeIndex !== scope.$index\">{{$t('purchaseOrder.edit')}}</el-button>\n          <el-button :loading=\"actionLoading\" class=\"list-btn\" @click=\"saveTag(scope.row, scope.$index)\" v-if=\"activeIndex === scope.$index\">{{$t('purchaseOrder.save')}}</el-button>\n          <el-button class=\"list-btn\" @click=\"cancelModifyTag(scope.$index)\" v-if=\"activeIndex === scope.$index\">{{$t('purchaseOrder.cancel')}}</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n  </div>\n</template>\n\n<script>\nimport { healthLevelList, healthLatitudeList, healthConnectorList, Permission } from '@/utils/constant';\nimport { isValidHealthRule } from '@/utils/validate';\nimport { saveHealthConfig, getHealthConfigList } from '@/api/inventoryHealth';\nimport { hasPermission } from '@/utils/permission';\n\nexport default {\n  data() {\n    return {\n      connectorList: healthConnectorList,\n      tagList: [],\n      latitudeList: healthLatitudeList,\n      activeIndex: -1,\n      cacheTagList: {},\n      groupCheckList: [],\n      actionLoading: false,\n      canEditTag: false\n    };\n  },\n  computed: {\n    tagGroupList() {\n      return healthLevelList.map(level => {\n        const groupList = [];\n        (this.tagList || []).forEach((tag, index) => {\n          if (tag.health_tag === level.value) {\n            groupList.push({ ...tag, tagIndex: index });\n          }\n        });\n        return {\n          ...level,\n          health_tag: level.value,\n          groupList // 后端数据是铺平的，前端需要组合为group\n        };\n      });\n    }\n  },\n  methods: {\n    addRule(rowIndex, tagIndex) {\n      if (rowIndex !== this.activeIndex) return;\n      const ruleList = this.tagList[tagIndex].rule_param_list || [];\n      ruleList.push({ dimension: '', lower_limit: undefined, upper_limit: undefined });\n      this.$set(this.tagList[tagIndex], 'rule_param_list', ruleList);\n    },\n    deleteRule(rowIndex, tagIndex, index = 0) {\n      if (rowIndex !== this.activeIndex) return;\n      const ruleList = this.tagList[tagIndex].rule_param_list || [];\n      ruleList.splice(index, 1);\n      this.$set(this.tagList[tagIndex], 'rule_param_list', ruleList);\n    },\n    addGroup(row, index) {\n      if (this.activeIndex !== index) return;\n      this.tagList.unshift({\n        id: 0,\n        health_tag: row.health_tag,\n        rule_param_list: []\n      });\n    },\n    changeAllGroupCheck(row) {\n      if (this.isAllGroupChecked(row)) {\n        this.groupCheckList = [];\n      } else {\n        this.groupCheckList = (row.groupList || []).map((item, index) => index);\n      }\n    },\n    isAllGroupChecked(row) {\n      const groupCheckList = this.groupCheckList;\n      return (row.groupList || []).every((item, index) => groupCheckList.includes(index));\n    },\n    changeGroupCheck(index) {\n      const groupIndex = this.groupCheckList.findIndex(item => item === index);\n      if (groupIndex === -1) {\n        this.groupCheckList.push(index);\n      } else {\n        this.groupCheckList.splice(groupIndex, 1);\n      }\n    },\n    deleteGroup(row) {\n      if (!this.groupCheckList.length) return;\n      const groupIndexList = []; // todo use tagIndex\n      (this.tagList || []).forEach((tag, index) => {\n        if (tag.health_tag === row.health_tag) {\n          groupIndexList.push(index);\n        }\n      });\n      const groupCheckList = this.groupCheckList;\n      groupCheckList.sort((curr, next) => next - curr).forEach(groupIndex => {\n        const tagIndex = groupIndexList[groupIndex];\n        this.tagList.splice(tagIndex, 1);\n      });\n      this.groupCheckList = [];\n    },\n    saveTag(row, index) {\n      const errorMessage = isValidHealthRule(row.groupList, this.tagList);\n      if (errorMessage) return this.$message.error(errorMessage);\n      const cacheTagList = this.cacheTagList.filter(tag => tag.health_tag === row.health_tag);\n      const groupList = row.groupList.map(item => ({\n        ...item,\n        rule_param_list: (item.rule_param_list || []).map(rule => ({\n          ...rule,\n          operator_lower: rule.operator_lower === 1,\n          operator_upper: rule.operator_upper === 1\n        }))\n      }));\n      const createList = [];\n      const updateList = [];\n      const deleteList = [];\n      [...groupList, ...cacheTagList].forEach(item => {\n        if (item.id === 0) {\n          createList.push(item);\n        } else {\n          const inCache = cacheTagList.find(tag => tag.id === item.id);\n          const inGroup = groupList.find(tag => tag.id === item.id);\n          if (inCache && !inGroup) {\n            deleteList.push(item);\n          } else if (inCache && inGroup && !updateList.find(tag => tag.id === item.id)) {\n            updateList.push(item);\n          }\n        }\n      });\n      const params = {\n        health_tag: row.health_tag,\n        create: createList,\n        delete: deleteList,\n        update: updateList\n      };\n      this.actionLoading = true;\n      saveHealthConfig(params).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.$message.success('Success');\n          this.getTagList();\n          this.activeIndex = -1;\n        }\n        this.actionLoading = false;\n      }).catch(() => {\n        this.$message.error('Failed');\n        this.actionLoading = false;\n      });\n    },\n    cancelModifyTag(index) {\n      this.tagList = JSON.parse(JSON.stringify(this.cacheTagList));\n      this.activeIndex = -1;\n      this.cacheTagList = {};\n      this.groupCheckList = [];\n    },\n    editTag(index) {\n      if (this.activeIndex !== -1) return this.$message.warning('Editing, please save or cancel and try again');\n      this.activeIndex = index;\n      this.cacheTagList = JSON.parse(JSON.stringify(this.tagList));\n      this.groupCheckList = [];\n    },\n    getTagList() {\n      getHealthConfigList().then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.tagList = (resp.data || []).map(item => ({\n            ...item,\n            rule_param_list: (item.rule_param_list || []).map(rule => ({\n              ...rule,\n              operator_lower: rule.operator_lower ? 1 : 2,\n              operator_upper: rule.operator_upper ? 1 : 2\n            }))\n          }));\n        }\n      }).catch(() => {\n        this.$message.error('Get Tag Failed!');\n      });\n    }\n  },\n  created() {\n    this.canEditTag = hasPermission(Permission.INVENTORY_HEALTH_CONFIG_PROCESS);\n    this.getTagList();\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  .inventory-health-config {\n    padding: 20px;\n  }\n  .level-list {\n    display: inline-block;\n    margin-left: 4px;\n    width: 100%;\n    height: 100%;\n    .level-item {\n      float: left;\n      margin: 0 8px 8px 0;\n      width: 36px;\n      height: 36px;\n      line-height: 36px;\n      cursor: pointer;\n    }\n  }\n  .color-tag {\n    margin: 0 auto;\n    width: 36px;\n    height: 36px;\n    border: 1px solid #ddd;\n  }\n  .hidden-element {\n    visibility: hidden;\n  }\n  .rule-form {\n    border: 1px solid #ddd;\n  }\n  .rule-main {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-top: 1px solid #ddd;\n    min-height: 56px;\n    &:first-child {\n      border-top: none;\n    }\n    .el-checkbox {\n      display: block;\n      width: 30px;\n      height: 100%;\n    }\n    .el-icon-plus, .el-icon-minus {\n      margin: 0px 10px 0 10px;\n      width: 20px;\n      height: 20px;\n      font-size: 20px;\n      line-height: 20px;\n      border-radius: 50%;\n      color: #fff;\n      background-color: #5BA963;\n    }\n    .rule-number-order {\n      width: 40px;\n      margin-top: 4px;\n      &-label {\n        width: 40px;\n        margin-top: 0px;\n      }\n    }\n    .rule-list {\n      flex: 1;\n    }\n    .rule-item {\n      flex: 1;\n      height: 72px;\n      display: flex;\n      margin-bottom: 10px;\n      align-items: center;\n      justify-content: center;\n      .el-icon-plus, .el-icon-minus {\n        margin-top: 16px;\n      }\n      .rule-attribute {\n        flex: 1;\n        height: 100%;\n        .el-cascader, .el-input-number, .el-select {\n          margin-top: 8px;\n          width: 100%;\n          max-width: 100px;\n          line-height: 72px;\n        }\n      }\n    }\n    .rule-title {\n      height: 36px;\n      margin-bottom: 0;\n      line-height: 36px;\n    }\n  }\n  .danger-btn {\n    background-color: #f56c6c;\n  }\n  .list-btn+.list-btn {\n    margin: 10px 5px 0 0;\n  }\n</style>\n\n<style lang=\"scss\">\n  .health-config {\n    .rule-list .rule-attribute {\n      .el-select .el-input__inner {\n        height: 28px !important;\n      }\n    }\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/inventoryHealth/inventoryHealthTag.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/lifecycle/categoryTree.vue","messages":[{"ruleId":"vue/no-deprecated-destroyed-lifecycle","severity":2,"message":"The `destroyed` lifecycle hook is deprecated. Use `unmounted` instead.","line":137,"column":3,"nodeType":"Identifier","messageId":"deprecatedDestroyed","endLine":137,"endColumn":12,"suggestions":[{"messageId":"insteadUnmounted","fix":{"range":[4784,4793],"text":"unmounted"},"desc":"Instead, change to `unmounted`."}]}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"category-tree-wrapper\">\n    <el-tree\n      v-for=\"group in treeGroup\"\n      :key=\"group.id\"\n      node-key=\"catid\"\n      :default-expanded-keys=\"Array.from(expandedKeys)\"\n      :auto-expand-parent=\"false\"\n      @node-expand=\"nodeExpand\"\n      @node-collapse=\"nodeCollapse\"\n      @check-change=\"checkChange\"\n      :props=\"{ label: 'display_name' }\"\n      :data=\"group.tree\"\n      :expand-on-click-node=\"false\"\n    >\n      <section class=\"category-row\" slot-scope=\"{node, data}\" :class=\"{'deep-bg': !data.children}\">\n        <div :title=\"node.label\" class=\"category-cell\">{{node.label}}</div>\n        <div class=\"category-cell\">{{data.catid}}</div>\n        <div class=\"category-cell\">{{getFrontendStatus(data)}}</div>\n        <div v-if=\"isGlobalCategory\" class=\"category-cell\">{{data.cb_block}}</div>\n        <div v-if=\"isGlobalCategory\" class=\"category-cell\">{{data.local_block}}</div>\n        <div class=\"category-cell\">\n          <template v-if=\"isEdit\">\n            <el-checkbox\n              :class=\"`level-${node.level}`\"\n              :indeterminate=\"data.indeterminate.is_shelflife\"\n              v-model=\"data.is_shelflife\"\n              @change=\"(value) => handleCheckChange(value, node, 'is_shelflife')\"\n            ></el-checkbox>\n            <span class=\"category-span\">YES</span>\n          </template>\n          <span v-else>{{getShelfLifeStatus(data)}}</span>\n        </div>\n        <div class=\"category-cell\">\n          <template v-if=\"isEdit\">\n            <template v-if=\"data.is_shelflife\">\n              <el-input-number class=\"pms-ele-ui category-input\" :controls=\"false\" step-strictly v-model=\"data.default_lifecycle\" :class=\"{'error': data.default_lifecycle_error }\" @change=\"(value) => handleChangeInput(data, value)\"></el-input-number>\n              <span class=\"category-span\">{{$t('FBSDays')}}</span>\n            </template>\n            <span v-else>{{ data.children ? '/': ''}}</span>\n          </template>\n          <span v-else>{{ data.default_lifecycle ? `${data.default_lifecycle} ${$t('FBSDays')}`: '/'}}</span>\n        </div>\n        <div class=\"category-cell\">\n          <template v-if=\"isEdit\">\n            <el-checkbox\n              :class=\"`level-${node.level}`\"\n              :indeterminate=\"data.indeterminate.is_auto_approve\"\n              v-model=\"data.is_auto_approve\"\n              @change=\"(value) => handleCheckChange(value, node, 'is_auto_approve')\"\n            ></el-checkbox>\n            <span class=\"category-span\">YES</span>\n          </template>\n          <span v-else>{{getAutoApproveStatus(data)}}</span>\n        </div>\n        <div class=\"category-cell\">\n          <template v-if=\"isEdit\">\n            <el-checkbox\n              :class=\"`level-${node.level}`\"\n              :indeterminate=\"data.indeterminate.is_documents_required\"\n              v-model=\"data.is_documents_required\"\n              @change=\"(value) => handleCheckChange(value, node, 'is_documents_required')\"\n            ></el-checkbox>\n            <span class=\"category-span\">YES</span>\n          </template>\n          <span v-else>{{getDocumentRequiredStatus(data)}}</span>\n        </div>\n      </section>\n    </el-tree>\n  </div>\n</template>\n\n<script>\nimport { categoryTreeData } from '@/utils/treeData';\n\nconst GroupLength = 50;\nconst LoadNextGroupLength = 650;\nexport default {\n  data() {\n    return {\n      categoryTree: {},\n      activeIndex: 0\n    };\n  },\n  props: {\n    treeData: {\n      type: Array,\n      default: () => []\n    },\n    isEdit: {\n      type: Boolean,\n      default: false\n    },\n    expandedKeys: {\n      type: Set,\n      default: () => new Set([])\n    },\n    isGlobalCategory: {\n      type: Boolean\n    }\n  },\n  computed: {\n    treeGroup() {\n      const tree = this.categoryTree || [];\n      const groupLength = Math.ceil(tree.length / GroupLength);\n      return Array.from({ length: groupLength }, (value, index) => {\n        const groupTree = tree.slice(\n          index * GroupLength,\n          (index + 1) * GroupLength\n        );\n        return {\n          id: `${index}${groupTree[0].catid}`,\n          tree: groupTree\n        };\n      }).filter((item, index) => index <= this.activeIndex);\n    }\n  },\n  watch: {\n    '$props.treeData': {\n      handler(curr) {\n        const scrollDom = document.querySelector('.main-container');\n        scrollDom.removeEventListener('scroll', this.modifyActiveIndex);\n        const categoryTree = categoryTreeData(curr, {\n          key: 'catid',\n          childKey: 'parent_category'\n        });\n        categoryTree.forEach(item => {\n          this.checkAllIndeterminate(item);\n        });\n        this.categoryTree = categoryTree;\n        this.activeIndex = 0;\n        scrollDom.addEventListener('scroll', this.modifyActiveIndex);\n      },\n      immediate: true\n    }\n  },\n  destroyed() {\n    const scrollDom = document.querySelector('.main-container');\n    scrollDom.removeEventListener('scroll', this.modifyActiveIndex);\n  },\n  methods: {\n    getFrontendStatus(data) {\n      return ['Deleted', 'Active', 'Disable'][data.cs_status];\n    },\n    getShelfLifeStatus(data) {\n      return data.is_shelflife ? 'Yes' : data.indeterminate.is_shelflife ? '-' : '/';\n    },\n    getAutoApproveStatus(data) {\n      return data.is_auto_approve ? 'Yes' : data.indeterminate.is_auto_approve ? '-' : '/';\n    },\n    getDocumentRequiredStatus(data) {\n      return data.is_documents_required ? 'Yes' : data.indeterminate.is_documents_required ? '-' : '/';\n    },\n    nodeExpand(data) {\n      this.$emit('nodeExpand', data);\n    },\n    nodeCollapse(data) {\n      this.$emit('nodeCollapse', data);\n    },\n    _hasCheckedChildNode(node, field) {\n      // 寻找子节点中，有选中的节点\n      if (Array.isArray(node.children) && node.children.length) {\n        const hasCheckedNode = node.children.some(item => item[field]);\n        if (hasCheckedNode) {\n          return true;\n        } else {\n          return node.children.some(item => {\n            return this._hasCheckedChildNode(item, field);\n          });\n        }\n      } else {\n        return node[field];\n      }\n    },\n    checkAllIndeterminate(item) {\n      this._checkNodeIndeterminate(item, 'is_shelflife');\n      this._checkNodeIndeterminate(item, 'is_auto_approve');\n      this._checkNodeIndeterminate(item, 'is_documents_required');\n    },\n    _checkNodeIndeterminate(node, field) {\n      if (node[field]) return;\n      if (!(Array.isArray(node.children) && node.children.length)) {\n        node.indeterminate[field] = false;\n        return;\n      }\n      node.indeterminate[field] = this._hasCheckedChildNode(node, field); // 当前节点位非必选，同时有选中的子节点，当前节点就是半选状态\n      node.children.forEach(item => {\n        if (Array.isArray(item.children) && item.children.length) {\n          this._checkNodeIndeterminate(item, field);\n        }\n      });\n    },\n    loopSetValue(value, children, field) {\n      children.forEach(item => {\n        const oldValue = item[field];\n        item[field] = value;\n        if (field === 'is_shelflife' && oldValue !== value) {\n          this.handleChangeInput(item, item.default_lifecycle);\n        }\n        if (Array.isArray(item.children) && item.children.length) {\n          this.loopSetValue(value, item.children, field);\n        }\n      });\n    },\n    handleCheckChange(value, node, field) {\n      const data = node.data;\n      data[field] = value;\n      this.checkChange(data, field);\n      if (field === 'is_shelflife') {\n        this.handleChangeInput(data, data.default_lifecycle);\n      }\n      data.indeterminate[field] = false;\n      if (Array.isArray(data.children) && data.children.length) {\n        // children\n        this.loopSetValue(value, data.children, field);\n      }\n      // parent\n      const parantNode = node.parent;\n      if (parantNode) {\n        this._findParentNode(parantNode, field);\n      }\n    },\n    _findParentNode(node, field) {\n      const parantData = node.data;\n      if (Array.isArray(parantData.children) && parantData.children) {\n        const oldValue = parantData[field];\n        parantData[field] = parantData.children.every(item => item[field]);\n        if (oldValue !== parantData[field]) {\n          if (field === 'is_shelflife') {\n            this.handleChangeInput(parantData, parantData.default_lifecycle);\n          }\n          this.checkChange(parantData, field, true);\n        }\n        const noCheckedCount = parantData.children.reduce((sum, item) => {\n          if (!item[field] || item.indeterminate[field]) {\n            sum += 1;\n          }\n          return sum;\n        }, 0);\n        parantData.indeterminate[field] = noCheckedCount > 0;\n      }\n      if (node.parent) {\n        this._findParentNode(node.parent, field);\n      }\n    },\n    handleChangeInput(data, value) {\n      if (data.is_shelflife) {\n        if (value && value > 0) {\n          data.default_lifecycle_error = false;\n        } else {\n          data.default_lifecycle_error = true;\n        }\n      } else {\n        data.default_lifecycle_error = false;\n      }\n      this.$emit('nodeCheckChange', data, 'default_lifecycle_error', data.default_lifecycle_error);\n      this.$emit('nodeCheckChange', data, 'default_lifecycle', Math.round(value));\n    },\n    checkChange(data, field, isParentNode = false) {\n      this.$emit('nodeCheckChange', data, field, data[field], isParentNode);\n    },\n    modifyActiveIndex(e) {\n      const scrollDom = document.querySelector('.main-container');\n      const scrollTop = scrollDom.scrollTop;\n      const index = Math.floor(scrollTop / LoadNextGroupLength);\n      if (this.activeIndex < index) {\n        this.activeIndex = index;\n      }\n    },\n    loadChildren(node, resolve) {\n      if (node.level === 0) {\n        const list = (this.categoryTree.result || [])\n          .filter(item => !!item.cs_status)\n          .map(item => ({\n            ...item,\n            leaf: !(item.children && item.children.length)\n          }));\n        return resolve(list);\n      }\n      const nodeList = this.categoryTree.keyMap[node.key] || {};\n      if (Array.isArray(nodeList.children)) {\n        const list = nodeList.children.map(child => ({\n          ...child,\n          leaf: !(child.children && child.children.length)\n        }));\n        resolve(list);\n      } else {\n        resolve([]);\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"~@/styles/variables.scss\";\n.category-row {\n  flex: 1;\n  overflow: hidden;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 14px;\n  line-height: 1.2em;\n  text-align: left;\n  color: #666666;\n  padding: 10px 0;\n  &.deep-bg{\n    background-color: rgba(216,216,216,0.18);\n    .category-cell{\n      &:nth-child(1){\n        padding-left:8px;\n      }\n    }\n  }\n  .category-cell {\n    flex: 1;\n    $levelLength: 10;\n    white-space: break-spaces;\n    word-break: break-word;\n    @for $i from 1 through $levelLength {\n      .level-#{$i} {\n        margin-left: ($i - 1) * 14px;\n      }\n    }\n    .category-span{\n      margin-left: 4px\n    }\n  }\n}\n</style>\n<style lang=\"scss\">\n@import '~@/styles/common.scss';\n.category-tree-wrapper{\n\n  .el-tree {\n    .el-tree-node__content{\n      line-height: 36px;\n      height: auto;\n      >.el-tree-node__expand-icon{\n        padding: 6px 12px;\n      }\n    }\n  }\n  .category-input{\n      width: 80px;\n      height: 32px;\n      &.error {\n        .el-input__inner{\n          border-color: $red\n        }\n\n      }\n    }\n}\n\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/lifecycle/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/paymentRequestConfig/index.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"paymentRequestConfig\" is not PascalCase.","line":99,"column":9,"nodeType":"Literal","endLine":99,"endColumn":31,"fix":{"range":[3522,3542],"text":"PaymentRequestConfig"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div class=\"pms-ui pms-ele-ui pay-config-config\">\n    <el-header>\n      <el-tabs class=\"pay-config-header\" tab-position=\"bottom\" v-model=\"activeTab\">\n        <el-tab-pane v-for=\"item in countryList\" :key=\"item\" :label=\"item\" :name=\"item\"></el-tab-pane>\n      </el-tabs>\n    </el-header>\n    <div class=\"pay-config-options\">\n      <div class=\"pay-config-menus\">\n        <el-tabs v-model=\"menusTab\">\n          <el-tab-pane name=\"payment\" label=\"Payment Request Config\"></el-tab-pane>\n          <el-tab-pane name=\"notification\" label=\"Notification Config\"></el-tab-pane>\n        </el-tabs>\n      </div>\n    </div>\n    <div class=\"pay-config-body\">\n      <div v-if=\"canEdit\" class=\"pay-config-btns\">\n        <el-button\n          v-if=\"!isEdit\"\n          :loading=\"loading\"\n          class=\"list-btn\"\n          @click=\"onEdit\"\n        >{{$t('purchaseRequest.edit')}}</el-button>\n        <el-button\n          v-if=\"isEdit\"\n          :loading=\"loading\"\n          class=\"list-btn white\"\n          @click=\"onCancel\"\n        >{{$t('purchaseOrder.cancel')}}</el-button>\n        <el-button\n          v-if=\"isEdit\"\n          :loading=\"loading\"\n          class=\"list-btn\"\n          @click=\"onSave\"\n        >{{$t('approvalFlow.save')}}</el-button>\n      </div>\n\n      <div v-if=\"menusTab === 'payment'\">\n        <el-form label-width=\"200px\" :model=\"form\" label-suffix=\":\">\n          <section v-for=\"item in configSchemaList || []\" :key=\"item.title\" class=\"info-section\">\n            <div class=\"info-title\">\n              {{item.title}}\n\n              <el-popover\n                v-if=\"item.tips\"\n                popper-class=\"payment-tips\"\n                placement=\"top\"\n                width=\"290\"\n                trigger=\"hover\"\n              >\n                <p>{{item.tips}}</p>\n                <svg-icon slot=\"reference\" iconClass=\"question-circle\" class=\"question-icon\"></svg-icon>\n              </el-popover>\n\n              :</div>\n            <div class=\"info-item\" v-for=\"schema in item.schemaList || []\" :key=\"schema.field\">\n              <el-form-item :label=\"schema.label\">\n                <el-radio-group v-if=\"isEdit\" v-model=\"form[schema.field]\">\n                  <template v-if=\"schema.options && schema.options.length\">\n                    <el-radio :label=\"option.value\" v-for=\"(option, index) in schema.options\" :key=\"option.label + `${index}`\">{{$t(option.label)}}</el-radio>\n                  </template>\n                  <template v-else>\n                    <el-radio :label=\"1\">{{$t('commonRequired')}}</el-radio>\n                    <el-radio :label=\"0\">{{$t('commonNotRequired')}}</el-radio>\n                  </template>\n                </el-radio-group>\n                <div v-else>{{getValue(form[schema.field], schema.options)}}</div>\n              </el-form-item>\n            </div>\n          </section>\n        </el-form>\n      </div>\n\n      <div v-else>\n        <notification-config\n          :region=\"activeTab\"\n          :is-edit=\"isEdit\"\n          v-model=\"notificationData\"\n          @add=\"addOneNotification\"\n        ></notification-config>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { hasPermission } from '@/utils/permission';\nimport { Permission } from '@/utils/constant';\nimport { isValidEmail } from '@/utils/validate';\nimport {\n  getPaymentRequestConfig,\n  savePaymentRequestConfig,\n  getNotificationConfig,\n  saveNotificationConfig\n} from '@/api/paymentRequestConfig';\nimport NotificationConfig from './notificationConfig.vue';\n\nexport default {\n  name: 'paymentRequestConfig',\n  data() {\n    return {\n      activeTab: this.$store.getters.country,\n      menusTab: 'payment',\n      canEdit: false,\n      isEdit: false,\n      loading: false,\n      originalConfig: {},\n      form: {\n        payment_status_sync_required: 1,\n        credit_amount_required: 1,\n        credit_note_no_required: 0,\n        debit_amount_required: 1,\n        debit_note_no_required: 1,\n        bank_name_required: 0,\n        supplier_account_no_required: 1,\n        payment_term_required: 1,\n        upc_barcode_required: 0,\n        external_sku_id_required: 1,\n        overwrite_required: 1,\n        pro_forma_invoice_no_required: 0,\n        pro_forma_invoice_amount_required: 0,\n        tax_invoice_amount_required: 0,\n        invoice_id_required: 0,\n        attachment_required: 0,\n        sku_pre_tax_purchase_price_required: 0\n      },\n      configSchemaList: [\n        {\n          tips: '1 invoice = 1 payment request, otherwise payment status sync may fail.',\n          title: this.$t('paymentStatusSyncConfig'),\n          schemaList: [\n            {\n              required: true,\n              label: this.$t('paymentStatusSync'),\n              field: 'payment_status_sync_required'\n            }\n          ]\n        },\n        {\n          title: this.$t('commonBasicInformation'),\n          schemaList: [\n            {\n              required: true,\n              label: this.$t('paymentRequestCreditAmount'),\n              field: 'credit_amount_required'\n            },\n            {\n              required: true,\n              label: this.$t('paymentRequestCreditNoteNo'),\n              field: 'credit_note_no_required'\n            },\n            {\n              required: true,\n              label: this.$t('paymentRequestDebitAmount'),\n              field: 'debit_amount_required'\n            },\n            {\n              required: true,\n              label: this.$t('paymentRequestDebitNoteNo'),\n              field: 'debit_note_no_required'\n            },\n            {\n              required: true,\n              label: this.$t('paymentRequestBankName'),\n              field: 'bank_name_required'\n            },\n            {\n              required: true,\n              label: this.$t('paymentRequestSupplierAccountNo'),\n              field: 'supplier_account_no_required'\n            },\n            {\n              required: true,\n              label: this.$t('paymentTerm'),\n              field: 'payment_term_required'\n            },\n            {\n              required: true,\n              label: this.$t('paymentProformaInvoiceNumber'),\n              field: 'pro_forma_invoice_no_required',\n              options: [\n                { label: 'supplierConfigOptional', value: 0 },\n                { label: 'supplierConfigMandatory', value: 1 }\n              ]\n            },\n            {\n              required: true,\n              label: this.$t('paymentProformaInvoiceAmount'),\n              field: 'pro_forma_invoice_amount_required',\n               options: [\n                { label: 'supplierConfigOptional', value: 0 },\n                { label: 'supplierConfigMandatory', value: 1 }\n              ]\n            },\n            {\n              required: true,\n              label: this.$t('paymentTaxInvoiceNumber'),\n              field: 'invoice_id_required',\n               options: [\n                { label: 'supplierConfigOptional', value: 0 },\n                { label: 'supplierConfigMandatory', value: 1 }\n              ]\n            },\n            {\n              required: true,\n              label: this.$t('paymentTaxInvoiceAmount'),\n              field: 'tax_invoice_amount_required',\n               options: [\n                { label: 'supplierConfigOptional', value: 0 },\n                { label: 'supplierConfigMandatory', value: 1 }\n              ]\n            },\n            {\n              required: true,\n              label: this.$t('Attachment'),\n              field: 'attachment_required',\n               options: [\n                { label: 'supplierConfigOptional', value: 0 },\n                { label: 'supplierConfigMandatory', value: 1 }\n              ]\n            }\n          ]\n        },\n        {\n          title: this.$t('SKUGiftSKUInformation'),\n          schemaList: [\n            {\n              required: true,\n              label: this.$t('ruleUpcBarcode'),\n              field: 'upc_barcode_required'\n            },\n            {\n              required: true,\n              label: this.$t('ruleExternalSkuId'),\n              field: 'external_sku_id_required'\n            },\n            {\n              required: true,\n              label: this.$t('commonOverwrite'),\n              field: 'overwrite_required'\n            },\n            {\n              required: true,\n              label: this.$t('commonPurchasePricePreTax'),\n              field: 'sku_pre_tax_purchase_price_required'\n            }\n          ]\n        }\n      ],\n      notificationData: [],\n      oldData: null\n    };\n  },\n  computed: {\n    countryList() {\n      return [\n        ...new Set([\n          ...this.$store.getters.countryList.map(item => item.country)\n        ])\n      ];\n    }\n  },\n  created() {\n    this.getData();\n    this.canEdit = hasPermission(Permission.PAYMENT_REQUEST_CONFIG_PROCESS);\n\n    // TODO 测试数据\n    // this.canEdit = true;\n  },\n  watch: {\n    activeTab() {\n      this.getData();\n    },\n    menusTab() {\n      this.getData();\n    }\n  },\n  methods: {\n    onEdit() {\n      this.isEdit = true;\n      if (this.menusTab === 'notification') {\n        this.oldData = JSON.parse(JSON.stringify(this.notificationData));\n        if (this.notificationData.length < 1) {\n          this.addOneNotification();\n        }\n      } else {\n        this.oldData = JSON.parse(JSON.stringify(this.form));\n      }\n    },\n    // 获取后台数据\n    onCancel() {\n      this.isEdit = false;\n      if (this.menusTab === 'payment') {\n        this.form = this.oldData;\n      } else {\n        this.notificationData = this.oldData;\n      }\n      this.oldData = null;\n    },\n    getData() {\n      this.isEdit = false;\n      if (this.menusTab === 'payment') {\n        this.getPaymentRequestConfig();\n      } else {\n        this.getNotificationConfig();\n      }\n    },\n    async onSave() {\n      if (this.menusTab === 'payment') {\n        await this.savePaymentRequestConfig();\n      } else {\n        await this.saveNotificationConfig();\n      }\n      this.getData();\n    },\n\n    // 通用http方法\n    async ajax(request, params) {\n      this.loading = true;\n      try {\n        const resp = await request(params);\n        if (resp.retcode === 0) {\n          this.loading = false;\n          return resp.data;\n        }\n        throw new Error(resp.message);\n      } catch (e) {\n        this.loading = false;\n        this.$message.error(e.message || 'Error');\n        throw e;\n      }\n    },\n\n    // payment request模块\n    getValue(value, options) {\n      if (Array.isArray(options)) {\n         const label = (options.find(item => item.value === value) || {}).label;\n         if (label) {\n           return this.$t(label);\n         }\n         return '';\n      }\n      return this.$t(value === 0 ? 'commonNotRequired' : 'commonRequired');\n    },\n    modifyForm(schema, value) {\n      this.$set(this.form, schema.field, value);\n    },\n    getPaymentRequestConfig() {\n      const params = {\n        region: this.activeTab\n      };\n      this.ajax(getPaymentRequestConfig, params).then(data => {\n        Object.keys(this.form).forEach(key => {\n          if (Number.isInteger(data[key])) {\n            this.form[key] = data[key];\n          }\n        });\n      });\n    },\n    savePaymentRequestConfig() {\n      const params = Object.assign({ region: this.activeTab }, this.form);\n      return this.ajax(savePaymentRequestConfig, params);\n    },\n\n    // notification模块\n    addOneNotification() {\n      this.notificationData.push({\n        recipient_name: '',\n        recipient_email: '',\n        emailAppend: '@shopee.com'\n      });\n    },\n    getNotificationConfig() {\n      const params = {\n        region: this.activeTab\n      };\n      this.ajax(getNotificationConfig, params).then(data => {\n        const list = data.recipient_list || [];\n        this.notificationData = list.map(item => {\n          const [email, append] = item.recipient_email.split('@');\n          return {\n            emailAppend: `@${append}`,\n            recipient_name: item.recipient_name,\n            recipient_email: email\n          };\n        });\n      });\n    },\n    saveNotificationConfig() {\n      const params = {\n        region: this.activeTab,\n        recipient_list: this.notificationData\n          .filter(item => {\n            return item.recipient_email;\n          })\n          .map(item => ({\n            recipient_name: item.recipient_name || item.recipient_email, // 如果没有填写名字则取邮箱前缀\n            recipient_email: item.recipient_email + item.emailAppend\n          }))\n      };\n      const noValidData = params.recipient_list.find(\n        item => !isValidEmail(item.recipient_email)\n      );\n      if (noValidData) {\n        this.$message.error(this.$t('pleaseEnterValidEmail'));\n        return Promise.reject();\n      }\n      return this.ajax(saveNotificationConfig, params);\n    }\n  },\n\n  components: {\n    NotificationConfig\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.pay-config-config {\n  color: #333;\n}\n.pay-config-header {\n  margin-top: 11px;\n  height: 60px;\n}\n.pay-config-options {\n  display: flex;\n  height: 68px;\n  line-height: 68px;\n  padding: 0 20px;\n  border-top: 8px solid #f1f1f1;\n}\n.pay-config-btns {\n  padding: 0 20px;\n  text-align: right;\n}\n.info-section {\n  &:last-child {\n    border-bottom: none;\n  }\n  .info-title {\n    margin: 10px 0 20px 20px;\n    font-size: 16px;\n    height: 48px;\n    line-height: 48px;\n  }\n  .info-item {\n    line-height: 48px;\n    .el-select {\n      width: 200px;\n    }\n    .el-input-number {\n      text-align: left;\n    }\n  }\n}\n</style>\n\n<style lang=\"scss\">\n@import \"~@/styles/common.scss\";\n// @import \"~@/styles/variables.scss\";\n\n.pay-config-config {\n  .el-tabs__nav-wrap::after {\n    background-color: transparent;\n  }\n  .el-form-item__label {\n    text-align: left;\n    padding-left: 20px;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/paymentRequestConfig/notificationConfig.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/priceChangeApprovalFlow.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":3,"column":57,"nodeType":"VIdentifier","messageId":"deprecated","endLine":3,"endColumn":63}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-main class=\"price-change-approval-flow\">\n    <el-form class=\"search-form\" :model=\"form\"  @submit.native.prevent=\"onSearch\">\n      <el-row>\n        <el-col :offset=\"schema.offset || 0\" :span=\"schema.width || 5\" v-for=\"schema in visibleSearchSchema\" :key=\"schema.field\">\n          <el-form-item :label=\"schema.label\">\n            <pms-form-item @input=\"modifyForm\" :renderData=\"{ schema, form }\"></pms-form-item>\n          </el-form-item>\n        </el-col>\n      </el-row>\n    </el-form>\n    <el-tabs v-if=\"hasPurchaseType\" v-model=\"form.purchaseType\" type=\"card\" class=\"approval-wrapper-tab-card\" :before-leave=\"beforeTabClick\">\n      <el-tab-pane v-for=\"tab in purchaseTypeList\" :key=\"tab.label\" :label=\"tab.label\" :name=\"tab.value\"></el-tab-pane>\n    </el-tabs>\n    <section :class=\"['content-tab-section', {'link-to-tab': hasPurchaseType}]\">\n      <div class=\"btns-wrapper\" v-if=\"canEditApprovalFlow\">\n        <el-button v-if=\"!isEditApproval\" type=\"primary\" class=\"list-btn\" @click=\"onEdit\">{{$t('commonEdit')}}</el-button>\n        <template v-else>\n          <el-button class=\"list-btn clear-btn\"  @click=\"onCancel\">{{$t('commonCancel')}}</el-button>\n          <el-button type=\"primary\" class=\"list-btn\" @click=\"onSave\" :loading=\"actionLoading\">{{$t('commonSave')}}</el-button>\n        </template>\n      </div>\n      <el-table :data=\"tableData\" v-loading=\"approvalDataLoading\">\n        <el-table-column label=\"Approval Role Config\" :min-width=\"500\">\n          <template slot-scope=\"scope\">\n            <template v-if=\"isEditApproval\">\n              <el-select class='role-select' v-model=\"scope.row.role_id\" @change=\"checkSections\">\n                <el-option v-for=\"role in roleList\" :key=\"role.id\" :value=\"role.id\" :label=\"role.name\"></el-option>\n              </el-select>\n               <i class=\"el-icon-close role-delete-icon\" @click=\"onDelRole( scope.row, scope.$index)\"></i>\n            </template>\n\n            <div v-else class=\"flow-text\">{{getRoleName(scope.row.role_id)}}</div>\n            <el-row v-if=\"scope.$index !== tableData.length - 1 \"  class='flow-arrow'>\n              <div class='el-icon-bottom bottom-select-icon-btn'></div>\n            </el-row>\n          </template>\n        </el-table-column>\n        <el-table-column v-if=\"isPriceChange\"  key=\"price-change-column\" :min-width=\"600\">\n          <template slot=\"header\">\n            <el-popover\n              placement=\"top\"\n              :title=\"$t('approvalFlow.triggerTitle')\"\n              width=\"560\"\n              trigger=\"hover\"\n              >\n              <p>{{$t('approvalFlow.triggerContentTitle1')}}</p>\n              <p>{{$t('approvalFlow.triggerContentTitle2')}}</p>\n              <h4 >{{$t('approvalFlow.triggerContentTitle3')}}</h4>\n              <p>{{$t('approvalFlow.triggerContentTitle4')}}</p>\n              <p>{{$t('approvalFlow.triggerContentTitle5')}}</p>\n              <p>{{$t('approvalFlow.triggerContentTitle6')}}</p>\n              <p>{{$t('approvalFlowLimitedSellingQuantitiesTriggerContentTitle')}}</p>\n              <span slot=\"reference\">{{$t('approvalFlow.triggerCondition')}}<i class=\"el-icon el-icon-question\"></i></span>\n            </el-popover>\n          </template>\n          <template slot-scope=\"scope\">\n            <el-checkbox-group v-model=\"scope.row.price_change_trigger_conditions\"  @change=\"checkSections\">\n              <el-checkbox\n              v-for=\"item in priceChangeTriggerConditionsList\"\n              :key=\"item.value\"\n              :disabled=\"!isEditApproval\"\n              :label=\"item.value\">{{item.label}}</el-checkbox>\n            </el-checkbox-group>\n          </template>\n\n        </el-table-column>\n      </el-table>\n      <div v-if=\"isEditApproval\" class=\"add-role-row\">\n        <i @click=\"onAddRole()\" class=\"el-icon-circle-plus-outline add-role-icon\"></i>\n        <span @click=\"onAddRole()\" class=\"add-role-text\">{{$t('addNewApprovalRole')}}</span>\n      </div>\n    </section>\n  </el-main>\n</template>\n\n<script>\nimport PMSFormItem, { getSelectOptions } from '@/components/BaseItem/formItem';\nimport { PurchaseTypeList, FlowTypeList, Permission } from '@/utils/constant';\nimport { modifyFlowSections } from '@/api/approvalFlow';\nimport { hasPermission } from '@/utils/permission';\n\nexport default {\n  props: {\n    activeTab: {\n      type: String,\n      required: true\n    },\n    flowData: {\n      type: Object,\n      default: () => {}\n    },\n    flowType: {\n      type: String,\n      required: true\n    },\n    roleList: {\n      required: true,\n      type: Array\n    },\n    isEditApproval: {\n      type: Boolean,\n      default: false\n    },\n    noSectionChange: {\n      type: Boolean,\n      default: true\n    },\n    approvalDataLoading: {\n      type: Boolean,\n      default: false\n    }\n  },\n  components: { 'pms-form-item': PMSFormItem },\n  data() {\n    return {\n      form: {\n        flowType: this.flowType,\n        purchaseType: 'Consignment'\n      },\n      sections: [],\n      tableData: [],\n      actionLoading: false,\n      canEditApprovalFlow: false,\n      originTableData: []\n    };\n  },\n  computed: {\n    schemaList() {\n      return [\n        { on: { change: this.modifyForm }, type: 'select', getChildren: (h) => getSelectOptions(FlowTypeList, h),\n          label: this.$t('approvalFlow.flowType'), field: 'flowType' }\n      ];\n    },\n    visibleSearchSchema() {\n      const schema = this.schemaList || [];\n      return schema.filter((item, index) => !item.hidden);\n    },\n    purchaseTypeList() {\n      return PurchaseTypeList.slice(1);\n    },\n    priceChangeTriggerConditionsList() {\n      return [\n        {value: 1, label: this.$t('approvalFlow.grossMarginTarget')},\n        {value: 2, label: this.$t('approvalFlow.promotionPriceCheckPoint')},\n        {value: 3, label: this.$t('approvalFlow.originalPriceCheckPoint')},\n        {value: 4, label: this.$t('limitedSellingQuantities')}\n      ];\n    },\n    hasPurchaseType() {\n      return ['12'].includes(this.flowType);\n    },\n    isPriceChange() {\n      return this.flowType === '12';\n    },\n    isBlackStock() {\n      return this.flowType === '18';\n    }\n  },\n  watch: {\n    flowData: {\n      handler(nv) {\n        if (!nv) return false;\n        this.tableData = nv.sections && Array.isArray(nv.sections) && nv.sections.length ? JSON.parse(JSON.stringify(nv.sections[0].role_list)) : [];\n        this.originTableData = JSON.parse(JSON.stringify(this.tableData));\n        this.$nextTick(() => {\n          this.checkSections();\n        });\n      },\n      immediate: true\n    },\n    flowType(nv) {\n      if (nv === this.isPriceChange) {\n        this.changeSearchFrom('purchaseType', 'Consignment');\n      }\n    }\n  },\n  methods: {\n    changeSearchFrom(field, value) {\n      this.onCancel();\n      this.$emit('changeSearchFrom', field, value);\n      this.$emit('resetFlowType');\n    },\n    beforeTabClick(tab) {\n      if (!this.noSectionChange) {\n        return new Promise((resolve, reject) => {\n          this.$confirm('The modify will not save，confirm to switch to other region?', 'Warning', {\n            showCancel: true\n          }).then(resp => {\n            if (this.isEditApproval) this.onCancel();\n            this.changeSearchFrom('purchaseType', tab);\n            resolve();\n          }).catch(() => {\n            reject();\n          });\n        });\n      }\n      this.$emit('changeEditApproval', false);\n      this.changeSearchFrom('purchaseType', tab);\n    },\n    getPriceChangeTriggerConditions(arr) {\n      if (!Array.isArray(arr)) return '';\n\n      if (arr.length === 1 && arr.includes(0)) {\n        return this.priceChangeTriggerConditionsList.reduce((ret, item) => {\n          return ret ? `${ret}/${item.label}` : item.label;\n        }, '');\n      }\n      return arr.reduce((ret, key) => {\n        const label = (this.priceChangeTriggerConditionsList.find(item => item.value === key) || {label: ''}).label;\n        return label ? ret ? `${ret}/${label}` : label : ret;\n      }, '');\n    },\n    modifyForm(schema, value) {\n      this.form[schema.field] = value;\n      this.changeSearchFrom(schema.field, value);\n    },\n    getRoleName(id) {\n      return (this.roleList.find(item => item.id === id) || {}).name;\n    },\n    onEdit() {\n      this.$emit('changeEditApproval', true);\n    },\n    onCancel() {\n      this.tableData = JSON.parse(JSON.stringify(this.originTableData));\n      this.$emit('changeEditApproval', false);\n    },\n    onSave() {\n      if (this.actionLoading) {\n        return;\n      }\n      if (!this.isBlackStock && !this.tableData.length) { //  BlackStock 允许保存空\n        return this.$message.error('please add rold first');\n      }\n      const params = {\n        flow_config_id: this.flowData.id,\n        sections: this.tableData.length ? [{\n            sequence: 1,\n            role_list: this.tableData.map(role => {\n              if (Array.isArray(role.price_change_trigger_conditions) && role.price_change_trigger_conditions.length < 1) {\n                return Object.assign({}, role, { price_change_trigger_conditions: [0] });\n              } else {\n                return role;\n              }\n            }),\n            section: {\n              min_value: 0,\n              max_value: this.$store.getters.flowMaxValue || 30000000000\n            }\n          }] : []\n      };\n\n      this.actionLoading = true;\n      modifyFlowSections(params).then(resp => {\n        this.actionLoading = false;\n        if (resp.retcode !== 0 && resp.retcode !== 2017) {\n          this.$message.error(resp.info);\n        } else {\n          this.$message.success(resp.info);\n          this.originTableData = JSON.parse(JSON.stringify(this.tableData));\n          this.checkSections();\n          this.$emit('changeEditApproval', false);\n        }\n      }).catch(() => { this.actionLoading = false; });\n    },\n    onDelRole(row, index) {\n      this.tableData.splice(index, 1);\n      this.checkSections();\n    },\n    onAddRole() {\n      if (this.roleList.length <= 0) {\n        this.$message.error('Please add some roles first!');\n        return;\n      }\n      const newRoleItem = {\n        role_id: this.roleList[0].id,\n        price_change_trigger_conditions: []\n      };\n      this.tableData.push(newRoleItem);\n      this.checkSections();\n    },\n    checkSections() {\n      const flag = JSON.stringify(this.tableData) === JSON.stringify(this.originTableData);\n      this.$emit('checkSections', flag);\n    }\n  },\n  created() {\n    this.canEditApprovalFlow = hasPermission(Permission.APPROVAL_FLOW_MODIFY);\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.price-change-approval-flow{\n  .search-form {\n    .el-form-item--medium .el-form-item__content {\n      display: inline-block;\n    }\n    .el-low {\n      display: flex;\n    }\n\n    .el-col {\n      float: none;\n      display: inline-block;\n      width: calc(25% - 12px);\n      vertical-align: middle;\n      margin: 0 12px 16px 0;\n\n      .el-form-item {\n        display: flex;\n        border: 1px solid #e2e6ec;\n        border-radius: 4px;\n        box-sizing: content-box;\n        height: 30px;\n        line-height: 30px;\n        margin: 0px;\n      }\n    }\n\n    .long-col {\n      width: calc(50% - 12px);\n      .el-form-item__label {\n        max-width: 236px;\n      }\n    }\n\n    .el-form-item__label {\n      max-width: 224px;\n      background-color: #fafbfd;\n      white-space: nowrap;\n      text-overflow: ellipsis;\n      overflow: hidden;\n      padding: 0 8px;\n      border-radius: 4px 0 0 4px;\n      border-right: 1px solid #e2e6ec;\n    }\n    .el-form-item__content {\n      flex: 1;\n      .el-cascader, .el-input__inner {\n        width: 100%;\n      }\n      .input-range-wrapper{\n        display: flex;\n        .el-input-number{\n          flex: 1;\n        }\n        .range-separator{\n          margin: 0 10px;\n        }\n      }\n      .el-input-number--medium, .el-cascader--medium{\n        line-height: 30px;\n      }\n    }\n    .ele-input-width-style\n      {\n        width: 100% !important;\n      }\n    .el-input__inner,\n    .el-range-input {\n      border: 0;\n      background-color: transparent;\n      height: auto;\n      padding: 0 0 0 8px;\n      vertical-align: initial;\n      text-align: left;\n      margin: 0;\n      line-height: 30px;\n      &:hover {\n        border: 0;\n        background-color: #faf1e0;\n      }\n    }\n    .el-form-item--medium .el-form-item__content,\n    .el-form-item--medium .el-form-item__label {\n      line-height: 30px;\n      color: #333;\n    }\n    .el-input.is-disabled .el-input__inner {\n      background-color: #fafbfd;\n    }\n  }\n  .btns-wrapper{\n    text-align: right;\n    margin-bottom: 8px;\n  }\n  .approval-wrapper-tab-card{\n    .el-tabs__item {\n      margin-bottom: 0px;\n      font-family: Helvetica;\n      font-size: 14px;\n      color: #333333;\n      &.is-active {\n        font-family: Helvetica-Bold;\n        font-size: 14px;\n        color: #3D62D1;\n      }\n    }\n  }\n\n  .el-table{\n    .el-select {\n      width: 240px;\n      .el-input__inner{\n        border: 1px solid #E5E5E5;\n        border-radius: 4px;\n        background: #ffffff;\n      }\n    }\n  }\n}\n</style>\n<style lang=\"scss\" scoped>\n.price-change-approval-flow{\n  .content-tab-section {\n    border: 1px solid #DCDFE6;\n    padding: 8px 24px 24px 24px;\n    margin-top: 16px;\n  }\n  .link-to-tab{\n    margin-top: -15px;\n    border-top: none;\n  }\n  .add-role-row{\n    font-size: 18px;\n    color: #3D62D1;\n    font-weight: 600;\n    cursor: pointer;\n    margin-top: 16px;\n  }\n  .bottom-select-icon-btn {\n    width: 20px;\n    height: 20px;\n    background: #3D6ED1;\n    color: #ffffff;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  .flow-arrow {\n    margin-top: 8px;\n    width: 240px;\n    display: flex;\n    justify-content: center;\n  }\n  .flow-text{\n    width: 240px;\n    text-align: center;\n  }\n  .role-delete-icon {\n      display: inline-block;\n      width: 18px;\n      height: 18px;\n      margin-left: 4px;\n      line-height: 18px;\n      border-radius: 50%;\n      text-align: center;\n      background-color: #C0C4CC;\n      color: #fff;\n      font-size: 14px;\n      font-weight: 700;\n    }\n}\n\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/shopConfigDialog.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":5,"column":98,"nodeType":"VIdentifier","messageId":"deprecated","endLine":5,"endColumn":104},{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":36,"column":71,"nodeType":"ThisExpression","endLine":36,"endColumn":75},{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"newShopDialog\" is not PascalCase.","line":80,"column":9,"nodeType":"Literal","endLine":80,"endColumn":24,"fix":{"range":[4577,4590],"text":"NewShopDialog"}}],"errorCount":3,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <el-container class=\"shop-config-dialog\">\n    <el-row>\n      <el-col :span=\"12\">\n        <el-form label-position=\"left\" ref=\"searchForm\" :model=\"formData\" :rules=\"rules\" @submit.native.prevent=\"onSearch\" :inline=\"true\">\n          <h5 class=\"title-wrapper\">{{$t('approvalFlow.selectShop')}}</h5>\n          <el-form-item prop=\"shop_id\" :label=\"$t('approvalFlow.shopID')\" label-width=\"76px\" >\n            <el-input v-model=\"formData.shop_id\" class=\"searchFrom-input\"></el-input>\n          </el-form-item>\n          <div class=\"right-action-btn\">\n            <el-button plain size=\"small\" class=\"plain-btn\" @click='onSearch'>{{$t('purchaseRequest.search')}}</el-button>\n            <el-button plain size=\"small\" class=\"plain-btn\" @click=\"onReset\">{{$t('purchaseRequest.clear')}}</el-button>\n          </div>\n        </el-form>\n\n        <el-table :data=\"realShowTable\" ref=\"multipleTable\" border v-loading=\"loading\">\n          <el-table-column prop='shop_id' :label=\"$t('approvalFlow.shopID')\"></el-table-column>\n          <el-table-column prop='shop_name' :label=\"$t('approvalFlow.shopName')\"></el-table-column>\n          <el-table-column prop='country' :label=\"$t('purchaseRequest.region')\"></el-table-column>\n          <el-table-column prop=\"fbs_tag\" :label=\"$t('shopConfigFulfillmentTag')\"></el-table-column>\n          <el-table-column prop='status' :label=\"$t('userRole.roleList.status')\">\n            <template slot-scope=\"scope\">\n              {{scope.row.status === 0 ? $t('skuMgt.deleted') : $t('skuMgt.normal')}}\n            </template>\n          </el-table-column>\n          <el-table-column :label=\"$t('attachmentAction')\">\n            <template>\n              <el-button type=\"text\" v-if=\"!isAdded\" @click=\"onChooseSkus\" class=\"add-btn\">Add ></el-button>\n              <el-button v-else type=\"text\" class=\"add-btn-added\">Added ></el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n      </el-col>\n\n      <el-col :span=\"11\" :offset=\"1\">\n        <p class=\"added-shop-count\">{{$t('newShopAddedCount',{ count: this.chosenShopTable.length })}}</p>\n        <el-table :data=\"chosenShopTable\" border size=\"mini\" v-loading=\"bindLoding\">\n          <el-table-column align=\"center\" prop=\"shop_id\" :label=\"$t('approvalFlow.shopID')\"></el-table-column>\n          <el-table-column align=\"center\" prop=\"shop_name\" :label=\"$t('approvalFlow.shopName')\"></el-table-column>\n          <el-table-column :label=\"$t('purchaseOrder.warehouse')\" width=\"180px\">\n            <template slot-scope=\"scope\">\n              <el-checkbox-group v-if=\"scope.row.multi_whs === 1\" v-model=\"scope.row.checkbox\">\n                <el-checkbox v-for=\"item in scope.row.whs_list\" :label=\"item.whs_id\" :value=\"item.whs_id\" :key=\"item.whs_id\" :disabled=\"item.disabled\"></el-checkbox>\n              </el-checkbox-group>\n              <el-radio-group v-else v-model=\"scope.row.radio\">\n                <el-radio v-for=\"item in scope.row.whs_list\" :label=\"item.whs_id\" :value=\"item.whs_id\" :key=\"item.whs_id\" :disabled=\"item.disabled\"></el-radio>\n              </el-radio-group>\n            </template>\n          </el-table-column>\n           <el-table-column width=\"180px\" v-if=\"activeCountry === 'TW'\">\n             <template slot=\"header\">\n               <em class=\"require-sign\">*</em><label>{{$t('approvalFlow.shopType')}}</label>\n             </template>\n            <template slot-scope=\"scope\">\n              <el-select v-model=\"scope.row.shop_type\">\n                <el-option :label=\"$t('approvalFlow.shopType24hours')\" :value=\"1\"></el-option>\n                <el-option :label=\"$t('approvalFlow.shopTypeSBS')\" :value=\"2\"></el-option>\n              </el-select>\n            </template>\n          </el-table-column>\n          <el-table-column align=\"center\" :label=\"$t('purchaseOrder.Action')\">\n            <template slot-scope=\"scope\">\n              <el-button size=\"mini\" type=\"text\" @click=\"onCancel(scope.$index, scope.row)\">{{$t('purchaseRequest.remove')}}</el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n      </el-col>\n    </el-row>\n    <el-row class=\"right-action-btn\">\n      <el-button type=\"primary\" size=\"small\" @click=\"onConfirm\">{{$t('purchaseRequest.confirm')}}</el-button>\n      <el-button type=\"danger\" size=\"small\" plain @click=\"onCloseDialog\">{{$t('supplier.cancel')}}</el-button>\n    </el-row>\n  </el-container>\n</template>\n\n<script>\nimport { formatParams } from '@/utils/formatParams';\nimport { getShopListById, bindWarehouse, getWarehouseListByCountry } from '@/api/shopConfig';\nexport default {\n  name: 'newShopDialog',\n  data() {\n    return {\n      loading: false,\n      bindLoding: false,\n      provideShopTable: {},\n      chosenShopTable: [],\n      formData: {\n        shop_id: ''\n      }\n    };\n  },\n  props: {\n    activeCountry: {\n      type: String,\n      required: true\n    }\n  },\n  computed: {\n    rules() {\n      return {\n        shop_id: [{ required: true, trigger: ['blur'], message: this.$t('skuMgt.shopIDrequired') }]\n      };\n    },\n    realShowTable() {\n      return Object.keys(this.provideShopTable).length === 0 ? [] : this.isAdded ? [this.provideShopTable] : [this.provideShopTable];\n    },\n    isAdded() { // 当前查询出来的数据是否已经添加\n      return !!this.chosenShopTable.find(item => item.shop_id === this.provideShopTable.shop_id);\n    }\n  },\n  methods: {\n    onReset() {\n      this.formData.shop_id = '';\n      this.chosenShopTable = [];\n      this.provideShopTable = {};\n    },\n    onCancel(index, row) {\n      this.chosenShopTable.splice(index, 1);\n    },\n    async onChooseSkus() {\n      const opt = {\n        country: this.provideShopTable.country\n      };\n      this.bindLoding = true;\n      const res = await getWarehouseListByCountry(opt);\n      this.commonFetchAction(res).then((data) => {\n        const chosenShopTableItem = {\n          shop_id: this.provideShopTable.shop_id,\n          shop_name: this.provideShopTable.shop_name,\n          multi_whs: 0,\n          whs_list: [],\n          checkbox: [],\n          radio: ''\n        };\n        data.warehouses.forEach(warehouses => {\n          const whs_disabled = warehouses.use_sku_is_sn_mgt === 1 ? false : this.provideShopTable.cb_option !== warehouses.cb_option;\n          const whs_item = {\n            whs_id: warehouses.whs_id,\n            disabled: whs_disabled\n          };\n          chosenShopTableItem.whs_list.push(whs_item);\n          if (chosenShopTableItem.multi_whs !== 1 && warehouses.multi_whs === 1) {\n            chosenShopTableItem.multi_whs = 1;\n          };\n        });\n        if (this.activeCountry === 'TW') {\n          chosenShopTableItem.shop_type === '';\n        }\n        this.chosenShopTable.push(chosenShopTableItem);\n        this.bindLoding = false;\n      }).catch(e => {\n        this.bindLoding = false;\n      });\n    },\n    onSearch() {\n      this.$refs.searchForm.validate(async(valid) => {\n        if (valid) {\n          this.loading = true;\n          const opt = {\n            country: this.activeCountry,\n            shop_id: this.formData.shop_id\n          };\n          const res = await getShopListById(formatParams(opt));\n          this.commonFetchAction(res).then(data => {\n            this.provideShopTable = data;\n            this.loading = false;\n          }).catch(e => {\n            this.loading = false;\n          });\n        }\n      });\n    },\n    async onConfirm() {\n      if (this.chosenShopTable.length < 1) return this.$message.error(this.$t('skuMgt.selectOneItem'));\n      if (this.activeCountry === 'TW') {\n        const emptyShopTypeList = this.chosenShopTable.find(item => !item.shop_type);\n        if (emptyShopTypeList) {\n          return this.$message.error(this.$t('approvalFlow.shopTypeIsRequired'));\n        }\n      }\n      const ids = this.chosenShopTable.map(item => {\n        return {\n          shop_id: item.shop_id,\n          whs_ids: item.multi_whs === 1 ? item.checkbox : [item.radio],\n          shop_type: item.shop_type || 0\n        };\n      });\n      const opt = {\n        shop_whs_ids: ids\n      };\n      const res = await bindWarehouse(opt);\n      this.commonFetchAction(res).then(() => {\n        this.onCloseDialog();\n        this.$emit('confirm');\n        this.$message.success(res.info);\n      });\n    },\n    commonFetchAction(res) {\n      if (res && res.retcode === 0) {\n        return Promise.resolve(res.data);\n      } else {\n        this.$message.error(res.info || 'failed to connect network, pls try it again later');\n        return Promise.reject();\n      }\n    },\n    onCloseDialog() {\n      this.onReset();\n      this.$emit('close');\n    }\n  }\n};\n</script>\n<style lang=\"scss\">\n  .searchFrom-input{\n    &.el-input{\n      width: 200px;\n    }\n  }\n</style>\n<style lang=\"scss\" scoped>\n  .shop-config-dialog {\n    padding-bottom: 25px;;\n    display: block;\n    .right-action-btn{\n      margin-top: 10px;\n      float:right;\n    }\n    .add-btn{\n      font-family: Helvetica;\n      font-size: 14px;\n      color: #3D6ED1;\n      letter-spacing: 0;\n      &-added{\n        opacity: 0.45;\n      }\n    }\n    .chosen-button {\n      text-align: center;\n      margin-top: 100px;\n    }\n    .added-shop-count{\n      color: rgba(0,0,0,0.85);\n      margin-bottom: 13px;\n    }\n    .chosen-sku {\n      flex-basis: 500px;\n    }\n    .title-wrapper {\n      font-size: 14px;\n      margin-bottom: 20px;\n    }\n    .require-sign{\n      color:red;\n      font-size:12px;\n      vertical-align: top;\n    }\n  }\n</style>\n<style lang=\"scss\">\n.shop-config-dialog{\n  .plain-btn{\n    color: #333333;\n    border: 1px solid #D9D9D9;\n    &.el-button--small{\n      font-size: 14px;\n      padding: 5px 15px;\n      border-radius: 2px;\n      span{\n        line-height: 22px;\n      }\n    }\n    &:hover,&:focus{\n      color: #3D6ED1;\n      border-color: #3D6ED1;\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/shopEditDialog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/shopListConfig.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":19,"column":66,"nodeType":"VIdentifier","messageId":"deprecated","endLine":19,"endColumn":72},{"ruleId":"vue/no-deprecated-destroyed-lifecycle","severity":2,"message":"The `beforeDestroy` lifecycle hook is deprecated. Use `beforeUnmount` instead.","line":330,"column":3,"nodeType":"Identifier","messageId":"deprecatedBeforeDestroy","endLine":330,"endColumn":16,"suggestions":[{"messageId":"insteadBeforeUnmount","fix":{"range":[13427,13440],"text":"beforeUnmount"},"desc":"Instead, change to `beforeUnmount`."}]}],"errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class='shop-config pms-ui'>\n    <el-container>\n      <p class=\"page-title\">Shop List Config</p>\n      <el-header class=\"shop-config-header\">\n        <el-tabs class='shop-tabs' tab-position='bottom' v-model=\"activeTab\" :before-leave='countryChange'>\n          <el-tab-pane v-for='item in countryList' :key='item' :label='item' :name='item'></el-tab-pane>\n        </el-tabs>\n        <div class=\"btns-warpper\">\n          <div v-if=\"canEdit\" class='btn' @click='onCreateShop'>\n            <span>\n              <i class=\"el-icon-plus\"></i>\n              {{$t('approvalFlow.newShop')}}\n            </span>\n          </div>\n        </div>\n      </el-header>\n      <el-main>\n        <el-form :model=\"searchForm\" label-width=\"130px\" @submit.native.prevent=\"onSearchForm\">\n          <el-button v-show=\"false\" native-type=\"submit\"></el-button>\n          <el-row>\n            <el-col :span=\"6\">\n              <el-form-item :label=\"$t('approvalFlow.shopID')\">\n                <el-input v-model='searchForm.shop_id' clearable></el-input>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"6\" :offset='1'>\n              <el-form-item :label=\"$t('approvalFlow.shopName')\">\n                <el-input v-model='searchForm.shop_name' clearable></el-input>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"6\" :offset=\"1\">\n              <el-form-item :label=\"$t('shopConfigFulfillmentTag')\">\n                <el-select v-model=\"searchForm.fbs_tag\" @change=\"onSearchForm\" clearable>\n                  <el-option v-for=\"item in shopConfigFulfillmentTags\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"></el-option>\n                </el-select>\n              </el-form-item>\n            </el-col>\n          </el-row>\n          <el-row>\n            <el-col :span=\"6\" v-if=\"activeTab === 'TW'\">\n              <el-form-item :label=\"$t('approvalFlow.shopType')\">\n                <el-select v-model='searchForm.shop_type' @change=\"onSearchForm\" clearable>\n                  <el-option :label=\"$t('approvalFlow.shopType24hours')\" :value=\"1\"></el-option>\n                  <el-option :label=\"$t('approvalFlow.shopTypeSBS')\" :value=\"2\"></el-option>\n                </el-select>\n              </el-form-item>\n            </el-col>\n            <el-form-item class='right-action-btn'>\n              <div class='list-btn' @click='onSearchForm'>{{$t('purchaseRequest.search')}}</div>\n              <div class='list-btn clear-btn' @click=\"onReset\">{{$t('purchaseRequest.clear')}}</div>\n            </el-form-item>\n          </el-row>\n        </el-form>\n        <el-table :data='shopConfigList' border v-loading=\"loading\" class=\"pms-ele-ui\">\n          <el-table-column prop='shop_id' :label=\"$t('approvalFlow.shopID')\"></el-table-column>\n          <el-table-column prop='shop_name' :label=\"$t('approvalFlow.shopName')\"></el-table-column>\n          <el-table-column :label=\"$t('approvalFlow.CBOption')\">\n            <template slot-scope=\"scope\">\n              {{scope.row.cb_option === 1 ? $t('approvalFlow.CBOptionYES') : scope.row.cb_option  === 0 ? $t('approvalFlow.CBOptionNO') : ''}}\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"fbs_tag\" :label=\"$t('shopConfigFulfillmentTag')\">\n            <template slot-scope=\"scope\">\n              {{ scope.row.fbs_tag ? 'Yes' : 'No' }}\n            </template>\n          </el-table-column>\n          <el-table-column :label=\"$t('userRole.roleList.status')\">\n            <template slot-scope=\"scope\">\n              {{scope.row.status === 0 ? $t('skuMgt.deleted') : $t('skuMgt.normal')}}\n            </template>\n          </el-table-column>\n          <el-table-column :label=\"$t('purchaseOrder.warehouse')\">\n             <template slot-scope=\"scope\">\n              {{Array.isArray(scope.row.whs_id_list) ? scope.row.whs_id_list.join(',') : ''}}\n            </template>\n          </el-table-column>\n          <el-table-column prop='creator' :label=\"$t('approvalFlow.createdBy')\" width=\"180px\"></el-table-column>\n          <el-table-column :label=\"$t('opHistory.ctime')\" width=\"120px\">\n            <template slot-scope=\"scope\">\n              {{moment(scope.row.ctime * 1000).format('YYYY-MM-DD HH:mm')}}\n            </template>\n          </el-table-column>\n          <!-- <el-table-column :label=\"$t('approvalFlow.SyncStatus')\" width=\"180px\">\n            <template slot-scope=\"scope\">\n              {{scope.row.sync_status === 0 ? $t('approvalFlow.SyncStatusFail') : scope.row.sync_status === 1 ? $t('approvalFlow.SyncStatusSuccess'): '' }}\n            </template>\n          </el-table-column> -->\n          <el-table-column :label=\"$t('approvalFlow.shopType')\" v-if=\"activeTab === 'TW'\" column-key=\"shopType\">\n            <template slot-scope=\"scope\">\n              {{scope.row.shop_type === 1 ? $t('approvalFlow.shopType24hours') :  scope.row.shop_type === 2 ? $t('approvalFlow.shopTypeSBS') : 'N.A'}}\n            </template>\n          </el-table-column>\n          <el-table-column :label=\"$t('shopConfigLastSyncStatus')\">\n            <template slot-scope=\"scope\">\n              {{formatLastSyncStatus(scope.row.last_sync_status)}}\n            </template>\n          </el-table-column>\n          <el-table-column :label=\"$t('shopConfigLastSyncBy')\" prop=\"last_sync_by\">\n            <template slot-scope=\"scope\">\n              {{scope.row.last_sync_by ? scope.row.last_sync_by : '/'}}\n            </template>\n          </el-table-column>\n          <el-table-column :label=\"$t('shopConfigLastSyncTime')\" width=\"180px\">\n            <template slot-scope=\"scope\">\n              {{scope.row.last_sync_time ? moment(scope.row.last_sync_time * 1000).format('YYYY-MM-DD HH:mm') : '/'}}\n            </template>\n          </el-table-column>\n          <el-table-column :label=\"$t('userRole.roleList.action')\" width=\"200px\">\n            <template slot-scope='scope'>\n              <el-button class='list-btn' size=\"mini\" v-loading=\"scope.row.syncLoading\" :disabled=\"!scope.row.canSync\" @click=\"onSync(scope.row)\">{{scope.row.canSync ? $t('shopConfigActionSync') : $t('shopConfigSyncStatusSyncing')}}</el-button>\n              <el-button class='list-btn' size=\"mini\" v-if=\"canEdit && (activeTab === 'TW' || isMultipleWhs)\" @click=\"onEdit(scope.row)\">{{$t('purchaseRequest.edit')}}</el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n        <section class='pagination-center'>\n          <el-pagination background layout=\"sizes, prev, pager, next\" :current-page='searchForm.page_no' :page-sizes='[10, 20, 50, 100]' :total.sync=\"total\" :page-size=\"searchForm.count\" @size-change=\"onSizeChange\" @current-change=\"onChangePageChangePage\"></el-pagination>\n        </section>\n      </el-main>\n    </el-container>\n    <el-dialog :title='$t(\"approvalFlow.newShop\")' :visible.sync=\"isShowDialog\" width=\"70%\">\n      <shop-dialog @close=\"onCloseDialog\" @confirm=\"onSearch\" :activeCountry=\"activeTab\"></shop-dialog>\n    </el-dialog>\n    <shopEditDialog :visible=\"editDialog\" :form=\"editForm\" :country=\"activeTab\" :isMultipleWhs=\"isMultipleWhs\" @close=\"closeEditDilag\" @success=\"changeShopTypeSuccess\"></shopEditDialog>\n  </div>\n</template>\n\n<script>\nimport { formatParams } from '@/utils/formatParams';\nimport { getShopList, syncShopSku } from '@/api/shopConfig';\nimport shopDialog from './shopConfigDialog';\nimport moment from 'moment';\nimport shopEditDialog from './shopEditDialog';\nimport { hasPermission } from '../../utils/permission';\nimport { ShopConfigSyncStatusObj, ShopConfigFulfillmentTags, Permission } from '@/utils/constant';\n\nexport default {\n  data() {\n    return {\n      loading: false,\n      isMultipleWhs: false, // 一店多仓\n      activeTab: this.$store.getters.country || 'TW',\n      searchForm: {\n        shop_id: '',\n        shop_name: '',\n        fbs_tag: '',\n        shop_type: '',\n        page_no: 1,\n        count: 10\n      },\n      syncSkuList: [],\n      timer: null,\n      shopConfigList: [],\n      isShowDialog: false,\n      activeUnit: {},\n      total: 0,\n      canEdit: false,\n      editDialog: false,\n      editForm: {},\n      shopConfigFulfillmentTags: ShopConfigFulfillmentTags\n    };\n  },\n  components: {\n    shopDialog, shopEditDialog\n  },\n  computed: {\n    countryList() {\n      return [...new Set([...this.$store.getters.countryList.map(item => item.country)])];\n    }\n  },\n  methods: {\n    moment,\n    formatLastSyncStatus(status) {\n      return ShopConfigSyncStatusObj[status] ? this.$t(ShopConfigSyncStatusObj[status]) : '';\n    },\n    changeShopTypeSuccess() {\n      this.onSearch();\n      this.closeEditDilag();\n    },\n    onEdit(row) {\n      this.editForm = row;\n      this.editDialog = true;\n    },\n    closeEditDilag() {\n      this.editDialog = false;\n    },\n    onReset() {\n      const resetParams = ['shop_id', 'shop_name', 'shop_type', 'fbs_tag'];\n      resetParams.forEach(key => {\n        this.searchForm[key] = '';\n      });\n      this.searchForm.page_no = 1;\n      this.onSearch();\n    },\n    async onSync(row) {\n      if (row.canSync) {\n        if (!this.syncSkuList.includes(row.shop_id)) {\n          this.syncSkuList.push(row.shop_id);\n        }\n        const params = {\n          shop_id: row.shop_id\n        };\n        const res = await syncShopSku(params);\n        this.commonFetchAction(res).then(() => {\n          this.$message.success(res.info || '');\n          row.last_sync_status = 0; // syncing\n          row.canSync = false;\n          if (!this.timer && this.syncSkuList.length) {\n            this.setTimer();\n          }\n        }).catch((e) => {\n          this.$message({ type: 'error', message: e });\n        });\n      }\n    },\n    setTimer() {\n      this.timer = setInterval(async() => {\n        const finishList = await this.checkSyncStatus().catch(() => {});\n        if (Array.isArray(finishList) && finishList.length) {\n          finishList.forEach(item => {\n            if (this.syncSkuList.includes(item.shop_id)) {\n              for (let i = 0; i < this.shopConfigList.length; i++) {\n                if (this.shopConfigList[i].shop_id === item.shop_id) {\n                  this.shopConfigList[i].canSync = true;\n                  this.shopConfigList[i].last_sync_status = item.last_sync_status;\n                  this.shopConfigList[i].last_sync_by = item.last_sync_by;\n                  this.shopConfigList[i].last_sync_time = item.last_sync_time;\n                  break;\n                }\n              }\n              this.syncSkuList.splice(this.syncSkuList.indexOf(item.shop_id), 1);\n              if (this.syncSkuList.length < 1) {\n                this.clearTimer();\n              }\n            }\n          });\n        }\n      }, 5000);\n    },\n    checkSyncStatus() {\n      return new Promise((resolve, reject) => {\n        const params = {\n          country: this.activeTab,\n          ...this.searchForm\n        };\n        getShopList(formatParams(params)).then(res => {\n          if (res && res.retcode === 0) {\n            resolve(\n              (res.data.shops || []).filter(item => item.last_sync_status !== 0)\n                .map(item => ({ shop_id: item.shop_id, last_sync_status: item.last_sync_status, last_sync_by: item.last_sync_by, last_sync_time: item.last_sync_time }))\n            );\n          } else {\n            this.$message({ type: 'error', message: res.info });\n            reject(null);\n          }\n        }).catch(e => {\n          this.$message({ type: 'error', message: e });\n          reject(null);\n        });\n      });\n    },\n    onCloseDialog() {\n      this.isShowDialog = false;\n    },\n    onCreateShop() {\n      this.isShowDialog = true;\n    },\n    clearTimer() {\n      if (this.syncSkuList.length) {\n        this.syncSkuList = [];\n      }\n      if (this.timer) {\n        clearInterval(this.timer);\n        this.timer = null;\n      }\n    },\n    onChangePageChangePage(page_no) {\n      this.searchForm.page_no = page_no;\n      this.onSearch();\n    },\n    onSizeChange(count) {\n      this.searchForm.count = count;\n      this.onSearch();\n    },\n    onSearchForm() {\n      this.searchForm.page_no = 1;\n      this.onSearch();\n    },\n    async onSearch() {\n      this.loading = true;\n      const params = {\n        country: this.activeTab,\n        ...this.searchForm\n      };\n      const res = await getShopList(formatParams(params));\n      this.commonFetchAction(res).then(data => {\n        this.shopConfigList = (data.shops || []).map(item => Object.assign({ canSync: item.last_sync_status !== 0 }, item));\n        this.isMultipleWhs = data.one_shop_with_multiple_whs;\n        this.total = data.total;\n        this.loading = false;\n        this.syncSkuList = this.shopConfigList.filter(item => item.last_sync_status === 0).map(item => item.shop_id);\n        if (this.syncSkuList.length && !this.timer) {\n          this.setTimer();\n        } else {\n          this.clearTimer();\n        }\n      }).catch((e) => {\n        this.$message({ type: 'error', message: e });\n        this.loading = false;\n      });\n    },\n    commonFetchAction(res) {\n      if (res && res.retcode === 0) {\n        return Promise.resolve(res.data);\n      } else {\n        return Promise.reject(res.info || 'failed to connect network, pls try it again later');\n      }\n    },\n    countryChange(country) {\n      this.activeTab = country;\n      this.onReset();\n      this.onSearch();\n      return true;\n    }\n  },\n  created() {\n    this.canEdit = hasPermission(Permission.SHOP_LIST_EDIT);\n    this.onSearch();\n  },\n  beforeDestroy() {\n    this.clearTimer();\n  }\n};\n</script>\n\n<style scoped lang=\"scss\">\n  .page-title{\n    font-size: 24px;\n    color: #333333;\n    text-align: left;\n    line-height: 36px;\n    margin: 0 20px;\n  }\n  .shop-tabs {\n    margin-top: 11px;\n    height: 60px;\n  }\n  .btns-warpper{\n    display: flex;\n    justify-content: flex-end;\n    margin-top: -52px;\n    position: absolute;\n    right: 20px;\n    .btn{\n      font-size: 14px;\n      color: #FFFFFF;\n      background: #3D6ED1;\n      border-radius: 2px;\n      height: 32px;\n      padding: 5px 12px;\n      margin-left: 12px;\n      min-width: 72px;\n      text-align: center;\n      cursor: pointer;\n      span{\n        display: inline-block;\n        height: 22px;\n        line-height: 22px;\n        i{\n          font-weight: 600;\n          margin-right: 4px;\n        }\n      }\n      &.plain{\n        color: #333333;\n        background: #FFFFFF;\n        border: 1px solid #D9D9D9;\n      }\n    }\n  }\n  .add-btn {\n    display: inline-block;\n    margin: 0 5px -10px -20px;\n  }\n  .disabled-btn {\n    background-color: #f56c6c;\n  }\n  .right-action-btn {\n    float: right;\n  }\n  .hidden-btn {\n    width: 0;\n    height: 0;\n    visibility: hidden;\n  }\n  .pagination-center {\n    display: flex;\n    justify-content: center;\n    margin-top: 20px;\n  }\n</style>\n<style lang=\"scss\">\n.shop-config{\n  .el-header{\n    position: relative;\n    max-width: 75%;\n  }\n  .shop-config-header{\n    max-width: 100%;\n  }\n  .pms-ele-ui{\n    &.el-table {\n      th,td {\n        .cell{\n          word-break: break-word;\n        }\n      }\n    }\n    .list-btn {\n      &.is-disabled {\n        background-color: rgba(61,97,209,0.50);\n      }\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/supplierInfoConfig/actionLog.vue","messages":[{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"config_type\" is not in camelCase.","line":66,"column":5,"nodeType":"Property","endLine":68,"endColumn":6}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-dialog\n    :visible.sync=\"dialogVisible\"\n    width=\"800px\"\n    lock-scroll\n    custom-class=\"pms-dialog\"\n    :title=\"$t('commonActionLog')\"\n    @close=\"onClose\"\n  >\n    <section v-loading=\"loading\" class=\"log-item-wrapper pms-log-table\">\n      <div class=\"log-item\" v-for=\"(log, index) in tableList\" :key=\"index\">\n        <div v-if=\"log.type === 1\" class=\"log-item-creation\">\n           <span>{{$t('commonLogRequestCreation', { operator:log.operator, mtime: moment(new Date(log.modify_time * 1000)).format('YYYY/MM/DD HH:mm:ss')})}}</span>\n        </div>\n        <div v-else>\n        <span class=\"log-item-operator\">{{log.operator}}</span>\n        <span class=\"log-item-time\" >{{moment(new Date(log.modify_time * 1000)).format('YYYY/MM/DD HH:mm:ss')}}</span>\n        <el-table class=\"log-table\" :data=\"log.content\">\n          <el-table-column :label=\"$t('commonLogContent')\">\n            <template slot-scope=\"scope\">\n              <span class=\"log-field\">{{scope.row.field}}</span>\n              <span class=\"log-action\" :class=\"{'red': scope.row.action === 3}\">{{formatAction(scope.row.action)}}</span>\n            </template>\n          </el-table-column>\n          <el-table-column :label=\"$t('commonLogBefore')\">\n             <template slot-scope=\"scope\">\n               {{scope.row.before == '' ? 'N/A' : formatLogContent(scope.row, scope.row.before)}}\n            </template>\n          </el-table-column>\n          <el-table-column :label=\"$t('commonLogAfter')\">\n            <template slot-scope=\"scope\">\n               {{scope.row.after == '' ? 'N/A' : formatLogContent(scope.row, scope.row.after)}}\n            </template>\n          </el-table-column>\n        </el-table>\n        </div>\n      </div>\n    </section>\n    <section slot=\"footer\">\n      <el-pagination\n        small\n        layout=\"slot, prev, next\"\n        background\n        :total=\"total\"\n        :page-size=\"pager.count\"\n        @current-change=\"handleCurrentChange\"\n        class=\"pms-ele-ui pms-pagination pms-float-left\"\n      >\n        <span class=\"pagination-info\">{{$t('commonPagination', { firstItem, lastItem, total})}}</span>\n      </el-pagination>\n      <el-button class=\"list-btn\" @click=\"onClose\">{{$t('commonOK')}}</el-button>\n    </section>\n  </el-dialog>\n</template>\n\n<script>\nimport { getActionLog } from '@/api/supplierConfig';\nimport { supplierConfigActions, supplierConfigOptionsList } from '@/utils/constant';\nimport moment from 'moment';\n\nexport default {\n  props: {\n    region: {\n      required: true\n    },\n    config_type: {\n      required: true\n    },\n    visible: {\n      type: Boolean,\n      required: true,\n      default: false\n    }\n  },\n  data() {\n    return {\n      pager: {\n        count: 10,\n        page_no: 1\n      },\n      total: 0,\n      dialogVisible: false,\n      tableList: [],\n      loading: false\n    };\n  },\n  watch: {\n    visible(value) {\n      this.dialogVisible = value;\n      if (value) {\n        this.getActionLog();\n      }\n    }\n  },\n  computed: {\n    firstItem() {\n      return this.pager.count * (this.pager.page_no - 1) + 1;\n    },\n    lastItem() {\n      return (\n        this.pager.count * (this.pager.page_no - 1) + this.tableList.length\n      );\n    }\n  },\n  methods: {\n    moment,\n    formatLogContent(row, value) {\n      const fieldArr = ['supplier_payment_type',\n        'trading_term_start_date',\n        'trading_term_end_date',\n        'supplier_registration_form',\n        'contract', 'legal_document',\n        'bank_info',\n        'trading_certificate',\n        'other',\n        'tax_registration_number',\n        'description',\n        'bank_branch_name',\n        'payment_type',\n        'payment_term',\n        'supplier_bd_phone',\n        'supplier_bd_email',\n        'bank_country',\n        'with_holding_tax',\n        'bank_name',\n        'bank_number',\n        'bank_address', 'bank_branch_name', 'bank_branch_number',\n        'bank_bic', 'bank_branch_type', 'bank_account_number',\n        'bank_account_name', 'bank_account_currency', 'bank_start_date',\n        'bank_inactive_date', 'bank_iban'];\n      if (fieldArr.includes(row.field) || (row.type && row.type === 'self-define')) {\n        return this.formatMandatoryOptions(value);\n      }\n      if (row.field === 'email_notification') {\n        return this.formatOnOff(value);\n      }\n      return value;\n    },\n    formatOnOff(value) {\n      return value === 1 ? this.$t('supplierConfigOn') : value === 2 ? this.$t('supplierConfigOff') : '';\n    },\n    formatMandatoryOptions(value) {\n      const output = (supplierConfigOptionsList.find(item => item.value === value) || {}).label;\n      if (output) {\n        return this.$t(output);\n      } else {\n        return '';\n      }\n    },\n    formatAction(action) {\n      const output = (\n        supplierConfigActions.find(item => item.value === action) || {\n          label: ''\n        }\n      ).label;\n      if (output) {\n        return this.$t(output);\n      } else {\n        return '';\n      }\n    },\n    handleCurrentChange(index) {\n      this.pager.page_no = index;\n      this.getActionLog();\n    },\n    async getActionLog() {\n      try {\n        this.loading = true;\n        const params = {\n          region: this.region,\n          config_type: this.config_type,\n          ...this.pager\n        };\n        const res = await getActionLog(params);\n        if (res && res.retcode === 0) {\n          this.tableList = res.data.change_list;\n          this.total = res.data.total;\n        } else {\n          this.$message({ type: 'error', message: res.info });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loading = false;\n      }\n    },\n    onClose() {\n      this.$emit('close');\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n@import '~@/styles/variables.scss';\n.log-item-wrapper {\n  height: 500px;\n  overflow: auto;\n  .log-item {\n    font-size: 14px;\n    margin-top: 24px;\n    &:first-child {\n      margin-top: 0;\n    }\n    .log-item-creation{\n      font-weight: bold;\n      color: $black;\n    }\n    .log-item-operator,\n    .log-item-time {\n      color: rgba(51, 51, 51, 0.65);\n    }\n    .log-item-time {\n      margin-left: 4px;\n    }\n    .log-table {\n      margin-top: 8px;\n    }\n    .log-action {\n      font-size: 12px;\n      color: $green;\n      padding: 4px;\n      margin-left: 8px;\n      background: #ebf9ef;\n      border-radius: 2px;\n      border-radius: 2px;\n      &.red {\n        color: #ee4d2d;\n        background: #fff1f0;\n      }\n    }\n  }\n}\n</style>\n<style lang=\"scss\">\n@import \"~@/styles/common.scss\"; // ~@ = @ = 'src' webpack alias path\n.pms-dialog {\n  .el-dialog__body {\n    padding: 8px 24px 16px;\n  }\n}\n.pms-log-table {\n  .el-table {\n    .el-table__header-wrapper {\n      th {\n        height: 54px;\n        background-color: #f5f5f5;\n        font-size: 14px;\n        line-height: 1.5em;\n        font-weight: normal;\n        .cell {\n           word-break: break-word;\n        }\n\n      }\n    }\n    .el-table__body {\n      td {\n        height: 70px;\n        .cell{\n          word-break: break-word;\n        }\n      }\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/supplierInfoConfig/index.vue","messages":[{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":1168,"column":24,"nodeType":"ArrowFunctionExpression","messageId":"unexpectedSpace","endLine":1168,"endColumn":25,"fix":{"range":[39342,39343],"text":""}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <el-main class=\"supplier-info-config pms-ele-ui\">\n    <section class=\"config-header-section\">\n      <header class=\"wrapper-title\">{{ $t('supplierInfoConfig') }}</header>\n      <!-- <el-tabs class=\"pms-ele-ui wrapper-countrylist-tabs\" tab-position=\"bottom\" v-model=\"region\" :before-leave=\"onBeforeLeaveRegion\">\n        <el-tab-pane v-for=\"item in countryList\" :key=\"item\" :label=\"item\" :name=\"item\"></el-tab-pane>\n      </el-tabs> -->\n      <search-form\n        ref=\"searchForm\"\n        :actionSchema=\"actionSchema\"\n        :searchSchema=\"searchSchema\"\n        @selectChange=\"searchSelectChange\"\n      ></search-form>\n    </section>\n    <section class=\"config-tab-section\">\n      <el-tabs\n        v-model=\"activeConfigType\"\n        type=\"card\"\n        class=\"pms-ele-ui wrapper-tab-card\"\n        :before-leave=\"onBeforeLeaveCofigType\"\n      >\n        <el-tab-pane v-for=\"item in configTypes\" :key=\"item.value\" :label=\"item.label\" :name=\"item.value\"></el-tab-pane>\n      </el-tabs>\n    </section>\n    <section class=\"config-content-section\" v-loading=\"loading\">\n      <div class=\"btn-wrapper pms-clearfix pms-ele-ui\">\n        <div class=\"pms-float-right\">\n          <el-button type=\"text\" @click=\"onClickActionLog\" class=\"pms-btn-ui action-log-btn\">{{\n            $t('commonActionLog')\n          }}</el-button>\n          <!-- <a @click=\"onClickActionLog\" class=\"link-btn action-log\">{{$t('commonActionLog')}}</a> -->\n          <div class=\"list-btn white\" v-if=\"isEdit\" @click=\"onCancel\">{{ $t('commonCancel') }}</div>\n          <div class=\"list-btn\" v-if=\"isEdit\" @click=\"onSave\">{{ $t('commonSave') }}</div>\n          <div class=\"list-btn\" v-if=\"!isEdit && canOperate\" @click=\"onEdit\">{{ $t('commonEdit') }}</div>\n        </div>\n      </div>\n\n      <el-form\n        :show-message=\"isEdit\"\n        :hide-required-asterisk=\"true\"\n        ref=\"basicInfoForm\"\n        :model=\"basicInfoForm\"\n        :rules=\"baseInfoRules\"\n        class=\"config-form pms-ele-ui\"\n        label-width=\"220px\"\n        label-position=\"left\"\n      >\n        <section class=\"contract-info-section\">\n          <h5 class=\"form-title\">{{ $t('supplierConfigBaseInformation') }}</h5>\n          <el-form-item\n            :label=\"$t(item.label) + ':'\"\n            v-for=\"item in baseSchema\"\n            :key=\"item.label\"\n            class=\"form-item\"\n            :prop=\"item.field\"\n          >\n            <span v-if=\"!isEdit\">{{ formatConfigOption(basicInfoForm[item.field]) }}</span>\n            <el-radio-group v-else v-model=\"basicInfoForm[item.field]\">\n              <el-radio\n                v-for=\"option in optionsList.filter((item) => item.label !== 'supplierConfigNotRequired')\"\n                :key=\"option.label\"\n                :label=\"option.value\"\n                >{{ $t(option.label) }}</el-radio\n              >\n            </el-radio-group>\n          </el-form-item>\n        </section>\n      </el-form>\n\n      <el-form\n        :show-message=\"isEdit\"\n        :hide-required-asterisk=\"true\"\n        ref=\"picContactInfoForm\"\n        :model=\"picContactInfoForm\"\n        :rules=\"picContactInfoRules\"\n        class=\"config-form pms-ele-ui\"\n        label-width=\"220px\"\n        label-position=\"left\"\n      >\n        <section class=\"contract-info-section\">\n          <h5 class=\"form-title\">{{ $t('picContactInformation') }}</h5>\n          <el-form-item\n            :label=\"$t(item.label) + ':'\"\n            v-for=\"item in picContactSchema\"\n            :key=\"item.label\"\n            class=\"form-item\"\n            :prop=\"item.field\"\n          >\n            <span v-if=\"!isEdit\">{{ formatConfigOption(picContactInfoForm[item.field]) }}</span>\n            <el-radio-group v-else v-model=\"picContactInfoForm[item.field]\">\n              <el-radio\n                v-for=\"option in optionsList.filter((item) => item.label !== 'supplierConfigNotRequired')\"\n                :key=\"option.label\"\n                :label=\"option.value\"\n                >{{ $t(option.label) }}</el-radio\n              >\n            </el-radio-group>\n          </el-form-item>\n        </section>\n      </el-form>\n\n      <el-form\n        :show-message=\"isEdit\"\n        :hide-required-asterisk=\"true\"\n        ref=\"bankInfoForm\"\n        :model=\"bankInfoForm\"\n        :rules=\"bankInfoRules\"\n        class=\"config-form pms-ele-ui\"\n        label-width=\"220px\"\n        label-position=\"left\"\n      >\n        <section class=\"contract-info-section\">\n          <h5 class=\"form-title\">{{ $t('supplierConfigBankInformation') }}</h5>\n          <el-form-item\n            :label=\"$t(item.label) + ':'\"\n            v-for=\"item in bankSchema\"\n            :key=\"item.label\"\n            class=\"form-item\"\n            :prop=\"item.field\"\n          >\n            <span v-if=\"!isEdit\">{{ formatConfigOption(bankInfoForm[item.field]) }}</span>\n            <el-radio-group v-else v-model=\"bankInfoForm[item.field]\">\n              <el-radio\n                v-for=\"option in optionsList.filter((item) => item.label !== 'supplierConfigNotRequired')\"\n                :key=\"option.label\"\n                :label=\"option.value\"\n                >{{ $t(option.label) }}</el-radio\n              >\n            </el-radio-group>\n          </el-form-item>\n        </section>\n      </el-form>\n\n      <el-form\n        :hide-required-asterisk=\"true\"\n        ref=\"contractInfoForm\"\n        :model=\"contractInfoForm\"\n        :rules=\"contractRules\"\n        class=\"config-form pms-ele-ui\"\n        label-width=\"220px\"\n        label-position=\"left\"\n      >\n        <section class=\"contract-info-section\">\n          <h5 class=\"form-title\">{{ $t('supplierConfigContractInformation') }}</h5>\n          <el-form-item\n            :label=\"$t(item.label) + ':'\"\n            v-for=\"item in contractSchema\"\n            :key=\"item.label\"\n            class=\"form-item\"\n            :prop=\"item.field\"\n          >\n            <span v-if=\"!isEdit\">{{ formatConfigOption(contractInfoForm[item.field]) }}</span>\n            <el-radio-group v-else v-model=\"contractInfoForm[item.field]\">\n              <el-radio\n                v-for=\"option in optionsList.filter(\n                  (optionItem) => item.field === 'with_holding_tax' || optionItem.label !== 'supplierConfigNotRequired'\n                )\"\n                :key=\"option.label\"\n                :label=\"option.value\"\n                >{{ $t(option.label) }}</el-radio\n              >\n            </el-radio-group>\n          </el-form-item>\n        </section>\n      </el-form>\n\n      <el-form\n        :hide-required-asterisk=\"true\"\n        ref=\"uploadFilesForm\"\n        :model=\"uploadFilesForm\"\n        :rules=\"uploadFilesRules\"\n        class=\"config-form pms-ele-ui\"\n        label-width=\"220px\"\n        label-position=\"left\"\n      >\n        <section class=\"contract-uploadFile-section\">\n          <h5 class=\"form-title\">\n            {{ $t('supplierConfigContractUploadedFiles') }}\n            <el-popover popper-class=\"supplier-config-break-word\" placement=\"top\" width=\"400\" trigger=\"hover\">\n              <div class=\"icon-tips-wrapper\">\n                {{ $t('supplierConfigContractUploadedFilesTips') }}\n              </div>\n              <svg-icon slot=\"reference\" iconClass=\"question-circle\" class=\"question-icon\"></svg-icon>\n            </el-popover>\n          </h5>\n          <el-form-item\n            :label=\"$t(item.label) + ':'\"\n            v-for=\"item in uploadFilesSchema\"\n            :key=\"item.label\"\n            class=\"form-item\"\n            :prop=\"item.field\"\n          >\n            <span v-if=\"!isEdit\">{{ formatConfigOption(uploadFilesForm[item.field]) }}</span>\n            <el-radio-group v-else v-model=\"uploadFilesForm[item.field]\">\n              <el-radio v-for=\"option in optionsList\" :key=\"option.label\" :label=\"option.value\">{{\n                $t(option.label)\n              }}</el-radio>\n            </el-radio-group>\n          </el-form-item>\n          <el-form-item\n            v-for=\"(item, index) in uploadFilesForm.others_file\"\n            :key=\"item.no\"\n            :class=\"{ 'newFile-form-item': isEdit }\"\n          >\n            <template slot=\"label\">\n              <span v-if=\"!isEdit\" class=\"other-file-span\">{{ item.name }}</span>\n              <el-form-item v-else :prop=\"'others_file.' + index + '.name'\" :rules=\"othersFileNameRules\">\n                <el-input\n                  v-model=\"item.name\"\n                  placeholder=\"New File Type\"\n                  class=\"uploadFile-input\"\n                  :maxlength=\"128\"\n                ></el-input>\n                <span class=\"pms-error-tip error-tip\" v-if=\"item.name.length >= 128\"\n                  ><span class=\"red\">128</span>/128</span\n                >\n              </el-form-item>\n            </template>\n\n            <span v-if=\"!isEdit\" class=\"other-file-span\">{{ formatConfigOption(item.config) }}</span>\n            <el-form-item v-else :prop=\"'others_file.' + index + '.config'\" :rules=\"othersFileConfigRules\">\n              <el-radio-group v-model=\"item.config\">\n                <el-radio\n                  v-for=\"option in optionsList.filter((obj) => obj.label !== 'supplierConfigNotRequired')\"\n                  :key=\"option.label\"\n                  :label=\"option.value\"\n                  >{{ $t(option.label) }}</el-radio\n                >\n              </el-radio-group>\n              <i class=\"el-icon-error newFile-close-icon\" @click=\"onDeleteSelfOption(index)\"></i>\n            </el-form-item>\n          </el-form-item>\n\n          <el-button\n            v-if=\"isEdit && uploadFilesForm.others_file && uploadFilesForm.others_file.length < 2\"\n            type=\"text\"\n            class=\"addNewFile-btn\"\n            @click=\"onAddNewFileType\"\n          >\n            <i class=\"el-icon-circle-plus-outline add-icon\"></i>\n            {{ $t('supplierConfigAddNewFileType') }}\n          </el-button>\n        </section>\n      </el-form>\n\n      <el-form\n        :hide-required-asterisk=\"true\"\n        ref=\"emailConfigForm\"\n        :model=\"emailConfigForm\"\n        :rules=\"emailConfigRules\"\n        class=\"config-form pms-ele-ui\"\n        label-width=\"220px\"\n        label-position=\"left\"\n      >\n        <section class=\"email-info-section\">\n          <h5 class=\"form-title email-title\">{{ $t('supplierConfigEmailConfig') }}</h5>\n          <el-form-item class=\"form-item\">\n            <template slot=\"label\">\n              <span>{{ $t('supplierConfigEmailNotification') }}</span>\n              <el-popover popper-class=\"supplier-config-break-word\" placement=\"top\" width=\"400\" trigger=\"hover\">\n                <div class=\"icon-tips-wrapper\">\n                  {{ $t('supplierConfigEmailNotificationTips') }}\n                </div>\n                <svg-icon slot=\"reference\" iconClass=\"question-circle\" class=\"question-icon\"></svg-icon>\n              </el-popover>\n            </template>\n            <span v-if=\"!isEdit\" :class=\"{ 'pms-ele-ui word-green': emailConfigForm.email_notification === 1 }\">{{\n              emailConfigForm.email_notification === 1\n                ? $t('supplierConfigOn')\n                : emailConfigForm.email_notification === 2\n                ? $t('supplierConfigOff')\n                : ''\n            }}</span>\n            <el-switch\n              v-else\n              :width=\"48\"\n              :active-value=\"1\"\n              :inactive-value=\"2\"\n              @change=\"handleChangeEmailNotification\"\n              v-model=\"emailConfigForm.email_notification\"\n              active-color=\"#13ce66\"\n              inactive-color=\"#a8a8a8\"\n            ></el-switch>\n          </el-form-item>\n          <section v-if=\"emailConfigForm.email_notification === 1\">\n            <el-form-item class=\"form-item\" prop=\"reminding_time\">\n              <template slot=\"label\">\n                <span>{{ $t('supplierConfigRemindingTime') }}</span>\n                <el-popover popper-class=\"supplier-config-break-word\" placement=\"top\" width=\"400\" trigger=\"hover\">\n                  <div class=\"icon-tips-wrapper\">\n                    {{ $t('supplierConfigEmailRemindingTimeTips') }}\n                  </div>\n\n                  <svg-icon slot=\"reference\" iconClass=\"question-circle\" class=\"question-icon\"></svg-icon>\n                </el-popover>\n              </template>\n              <span v-if=\"!isEdit\">{{ emailConfigForm.reminding_time }}</span>\n              <el-input v-else class=\"reminding-time-input\" v-model.number=\"emailConfigForm.reminding_time\"></el-input>\n              <span>{{ $t('supplierConfigDays') }}</span>\n            </el-form-item>\n\n            <el-form-item :label=\"$t('supplierConfigRecipients')\" class=\"form-item\">\n              <div v-if=\"!isEdit\" class=\"other-recipient-box\">\n                <div\n                  v-for=\"(recipent, index) in emailConfigForm.recipents.filter((option) => option !== 'other')\"\n                  :key=\"index\"\n                >\n                  {{\n                    recipent === 'merchandiser'\n                      ? $t('supplierConfigMerchandisers')\n                      : recipent === 'sourcer'\n                      ? $t('supplierConfigSourcers')\n                      : ''\n                  }}\n                </div>\n                <div v-if=\"emailConfigForm.recipients_others.length\">\n                  {{ $t('supplierConfigOtherRecipient') }}\n                  <span\n                    class=\"other-recipient-span\"\n                    v-for=\"(other, index) in emailConfigForm.recipients_others\"\n                    :key=\"index\"\n                    >{{ other.value + other.emailType }}</span\n                  >\n                </div>\n              </div>\n              <div v-else>\n                <el-form-item prop=\"recipents\">\n                  <el-checkbox-group class=\"pms-ele-ui\" v-model=\"emailConfigForm.recipents\" @change=\"onChangeRecipents\">\n                    <el-checkbox class=\"recipents-check-box\" label=\"merchandiser\">{{\n                      $t('supplierConfigMerchandisers')\n                    }}</el-checkbox>\n                    <el-checkbox class=\"recipents-check-box\" label=\"sourcer\">{{\n                      $t('supplierConfigSourcers')\n                    }}</el-checkbox>\n                    <el-checkbox class=\"recipents-check-box\" label=\"other\">{{\n                      $t('supplierConfigOtherRecipient')\n                    }}</el-checkbox>\n                  </el-checkbox-group>\n                </el-form-item>\n                <div class=\"others-recipients\" v-if=\"isIncludesOther\">\n                  <el-form-item\n                    :prop=\"'recipients_others.' + index\"\n                    v-for=\"(recipient, index) in (emailConfigForm.recipients_others || [])\"\n                    :key=\"index\"\n                    :rules=\"otherRecipentRules\"\n                    class=\"others-input-wrapper\"\n                  >\n                    <el-input\n                      class=\"others-input\"\n                      :ref=\"`emailInput${index}`\"\n                      v-model=\"recipient.value\"\n                      :maxlength=\"128\"\n                    ></el-input>\n                    <el-select\n                      class=\"el-input-group-email\"\n                      v-model=\"recipient.emailType\"\n                      placeholder=\"Select\"\n                      @change=\"(...args) => chengeEmailType(index, ...args)\"\n                    >\n                      <el-option :label=\"item\" :value=\"item\" v-for=\"item in emailTypes\" :key=\"item\"></el-option>\n                    </el-select>\n                    <i class=\"el-icon-error others-close-icon\" @click=\"onDeleteRecipient(index)\"></i>\n                    <span class=\"pms-error-tip error-tip\" v-if=\"recipient.value.length >= 128\"\n                      ><span class=\"red\">128</span>/128</span\n                    >\n                  </el-form-item>\n                  <el-button\n                    type=\"text\"\n                    class=\"addNewFile-btn\"\n                    @click=\"onAddNewRecipient\"\n                    v-if=\"\n                      isIncludesOther &&\n                      emailConfigForm.recipients_others &&\n                      emailConfigForm.recipients_others.length < 10\n                    \"\n                  >\n                    <i class=\"el-icon-circle-plus-outline add-icon\"></i>\n                    {{ $t('supplierConfigAddNewRecipient') }}\n                  </el-button>\n                </div>\n              </div>\n            </el-form-item>\n          </section>\n        </section>\n      </el-form>\n    </section>\n    <ActionLog\n      :region=\"region\"\n      :config_type=\"Number(activeConfigType)\"\n      :visible=\"actionLogVisible\"\n      @close=\"closeActionLog\"\n    ></ActionLog>\n  </el-main>\n</template>\n\n<script>\nimport { hasPermission } from '@/utils/permission';\nimport { Permission, emailTypes } from '@/utils/constant';\nimport { getSupplierConfig, updateSupplierConfig } from '@/api/supplierConfig';\nimport ActionLog from './actionLog';\nimport { isValidEmail } from '@/utils/validate';\nimport SearchForm from '@/components/ApproveList/search';\n\nexport default {\n  components: { ActionLog, SearchForm },\n  data() {\n    return {\n      actionSchema: [{ type: 'search' }, { type: 'clear' }],\n      canNotCBConsignView: false,\n      canNotCBConsignEdit: false,\n      canNotCBOutrightView: false,\n      canNotCBOutrightEdit: false,\n      canCBConsignmentView: false,\n      canCBConsignmentEdit: false,\n      actionLogVisible: false,\n      actionLogList: [],\n      contractInfoForm: {},\n      basicInfoForm: {},\n      bankInfoForm: {},\n      picContactInfoForm: {},\n      uploadFilesForm: {},\n      emailConfigForm: {\n        recipents: []\n      },\n      region: this.$store.getters.country || '',\n      activeConfigType: '1',\n      isEdit: false,\n      loading: false,\n      optionsList: [\n        {\n          label: 'supplierConfigMandatory',\n          value: 1\n        },\n        {\n          label: 'supplierConfigOptional',\n          value: 2\n        },\n        {\n          label: 'supplierConfigNotRequired',\n          value: 3\n        }\n      ],\n      baseSchema: [\n        {\n          label: 'taxRegistrationNumber',\n          field: 'tax_registration_number'\n        },\n        {\n          label: 'description',\n          field: 'description'\n        },\n        {\n          label: 'paymentTerm',\n          field: 'payment_method'\n        },\n        {\n          label: 'supplier.returnAddress',\n          field: 'return_address'\n        },\n        {\n          label: 'supplierSupplyCategory',\n          field: 'supply_category'\n        }\n      ],\n      picContactSchema: [\n        {\n          label: 'supplierBdEmail',\n          field: 'supplier_bd_email'\n        },\n        {\n          label: 'supplierBdPhone',\n          field: 'supplier_bd_phone'\n        },\n        {\n          label: 'supplierFinanceEmail',\n          field: 'supplier_finance_email'\n        },\n        {\n          label: 'supplierFinancePhone',\n          field: 'supplier_finance_phone'\n        },\n        {\n          label: 'shopeeSourceEmail',\n          field: 'shopee_sourcer_email'\n        },\n        {\n          label: 'shopeeSourcerPhone',\n          field: 'shopee_sourcer_phone'\n        },\n        {\n          label: 'shopeeMerchandiserEmail',\n          field: 'shopee_merchandiser_email'\n        },\n        {\n          label: 'shopeeMerchandiserPhone',\n          field: 'shopee_merchandiser_phone'\n        }\n      ],\n      bankSchema: [\n        {\n          label: 'bankCountry',\n          field: 'bank_country'\n        },\n        {\n          label: 'bankName',\n          field: 'bank_name'\n        },\n        {\n          label: 'bankNumber',\n          field: 'bank_number'\n        },\n        {\n          label: 'bankAddress',\n          field: 'bank_address'\n        },\n        {\n          label: 'bankBranchName',\n          field: 'bank_branch_name'\n        },\n        {\n          label: 'bankBranchNumber',\n          field: 'bank_branch_number'\n        },\n        {\n          label: 'bankBic',\n          field: 'bank_bic'\n        },\n        {\n          label: 'bankAccountName',\n          field: 'bank_account_name'\n        },\n        {\n          label: 'bankBranchType',\n          field: 'bank_branch_type'\n        },\n        {\n          label: 'bankAccountNumber',\n          field: 'bank_account_number'\n        },\n        {\n          label: 'bankAccountCurrency',\n          field: 'bank_account_currency'\n        },\n        {\n          label: 'bankStartDate',\n          field: 'bank_start_date'\n        },\n        {\n          label: 'bankInactiveDate',\n          field: 'bank_inactive_date'\n        },\n        {\n          label: 'bankIban',\n          field: 'bank_iban'\n        }\n      ],\n      contractSchema: [\n        {\n          label: 'supplierConfigSupplierPaymentType',\n          field: 'supplier_payment_type'\n        },\n        {\n          label: 'supplierConfigTradingTermStartDate',\n          field: 'trading_term_start_date'\n        },\n        {\n          label: 'supplierConfigTradingTermEndDate',\n          field: 'trading_term_end_date'\n        },\n        {\n          label: 'with_holding_tax',\n          field: 'with_holding_tax'\n        }\n      ],\n      uploadFilesSchema: [\n        {\n          label: 'supplierConfigSupplierRegistrationForm',\n          field: 'supplier_registration_form'\n        },\n        {\n          label: 'supplierConfigTradingCertificate',\n          field: 'trading_certificate'\n        },\n        {\n          label: 'supplierConfigContract',\n          field: 'contract'\n        },\n        {\n          label: 'supplierConfigLegalDocument',\n          field: 'legal_document'\n        },\n        {\n          label: 'supplierConfigBankInfo',\n          field: 'bank_info'\n        },\n        {\n          label: 'supplierConfigOther',\n          field: 'other'\n        }\n      ],\n      cacheFrom: {\n        contractInfoForm: {},\n        basicInfoForm: {},\n        bankInfoForm: {},\n        picContactInfoForm: {},\n        uploadFilesForm: {},\n        emailConfigForm: {\n          recipents: []\n        }\n      },\n      emailTypes\n    };\n  },\n  created() {\n    this.canNotCBConsignView = hasPermission(Permission.supplierConfigNotCBConsignView);\n    this.canNotCBConsignEdit = hasPermission(Permission.supplierConfigNotCBConsignEdit);\n    this.canNotCBOutrightView = hasPermission(Permission.supplierConfigNotCBOutrightView);\n    this.canNotCBOutrightEdit = hasPermission(Permission.supplierConfigNotCBOutrightEdit);\n    this.canCBConsignmentView = hasPermission(Permission.supplierConfigCBConsignView);\n    this.canCBConsignmentEdit = hasPermission(Permission.supplierConfigCBConsignEdit);\n    if (this.canNotCBOutrightView || this.canNotCBOutrightEdit) {\n      this.activeConfigType = '1';\n    } else if (this.canNotCBConsignView || this.canNotCBConsignEdit) {\n      this.activeConfigType = '2';\n    } else {\n      this.activeConfigType = '3';\n    }\n    this.getConfigByType();\n  },\n  computed: {\n    searchSchema() {\n      return [\n        {\n          field: 'region',\n          label: this.$t('commonRegion'),\n          options: this.countryList.map((value) => ({ label: value, value })),\n          type: 'select',\n          defaultValue: this.region\n        }\n      ];\n    },\n    canOperate() {\n      if (this.activeConfigType === '1' && this.canNotCBOutrightEdit) {\n        return true;\n      }\n      if (this.activeConfigType === '2' && this.canNotCBConsignEdit) {\n        return true;\n      }\n      if (this.activeConfigType === '3' && this.canCBConsignmentEdit) {\n        return true;\n      }\n      return false;\n    },\n    configTypes() {\n      return [\n        { value: '1', label: 'Local-Outright', show: this.canNotCBOutrightView || this.canNotCBOutrightEdit },\n        { value: '2', label: 'Local-Consignment', show: this.canNotCBConsignView || this.canNotCBConsignEdit },\n        { value: '3', label: 'CB-Consignment', show: this.canCBConsignmentView || this.canCBConsignmentEdit }\n      ].filter((item) => item.show);\n    },\n    countryList() {\n      return this.$store.getters.countrySelectList.map((item) => item.value);\n    },\n    contractRules() {\n      return {\n        supplier_payment_type: [\n          {\n            validator: this.requiredvalidator(),\n            trigger: 'change'\n          }\n        ],\n        trading_term_start_date: [\n          {\n            validator: this.requiredvalidator(),\n            trigger: 'change'\n          }\n        ],\n        trading_term_end_date: [\n          {\n            validator: this.requiredvalidator(),\n            trigger: 'change'\n          }\n        ]\n      };\n    },\n    bankInfoRules() {\n      return {\n        bank_country: [\n          {\n            validator: this.requiredvalidator(),\n            trigger: 'change'\n          }\n        ],\n        bank_name: [\n          {\n            validator: this.requiredvalidator(),\n            trigger: 'change'\n          }\n        ],\n        bank_number: [\n          {\n            validator: this.requiredvalidator(),\n            trigger: 'change'\n          }\n        ],\n        bank_address: [\n          {\n            validator: this.requiredvalidator(),\n            trigger: 'change'\n          }\n        ],\n        bank_branch_name: [\n          {\n            validator: this.requiredvalidator(),\n            trigger: 'change'\n          }\n        ],\n        bank_branch_number: [\n          {\n            validator: this.requiredvalidator(),\n            trigger: 'change'\n          }\n        ],\n        bank_bic: [\n          {\n            validator: this.requiredvalidator(),\n            trigger: 'change'\n          }\n        ],\n        bank_branch_type: [\n          {\n            validator: this.requiredvalidator(),\n            trigger: 'change'\n          }\n        ],\n        bank_account_number: [\n          {\n            validator: this.requiredvalidator(),\n            trigger: 'change'\n          }\n        ],\n        bank_account_name: [\n          {\n            validator: this.requiredvalidator(),\n            trigger: 'change'\n          }\n        ],\n        bank_account_currency: [\n          {\n            validator: this.requiredvalidator(),\n            trigger: 'change'\n          }\n        ],\n        bank_start_date: [\n          {\n            validator: this.requiredvalidator(),\n            trigger: 'change'\n          }\n        ],\n        bank_inactive_date: [\n          {\n            validator: this.requiredvalidator(),\n            trigger: 'change'\n          }\n        ],\n        bank_iban: [\n          {\n            validator: this.requiredvalidator(),\n            trigger: 'change'\n          }\n        ]\n      };\n    },\n    baseInfoRules() {\n      return {\n        tax_registration_number: [\n          {\n            validator: this.requiredvalidator(),\n            trigger: 'change'\n          }\n        ],\n        description: [\n          {\n            validator: this.requiredvalidator(),\n            trigger: 'change'\n          }\n        ],\n        payment_method: [\n          {\n            validator: this.requiredvalidator(),\n            trigger: 'change'\n          }\n        ],\n        bank_branch_name: [\n          {\n            validator: this.requiredvalidator(),\n            trigger: 'change'\n          }\n        ]\n      };\n    },\n    picContactInfoRules() {\n      return {\n        supplier_bd_email: [\n          {\n            validator: this.requiredvalidator(),\n            trigger: 'change'\n          }\n        ],\n        supplier_bd_phone: [\n          {\n            validator: this.requiredvalidator(),\n            trigger: 'change'\n          }\n        ]\n      };\n    },\n    uploadFilesRules() {\n      return {\n        supplier_registration_form: {\n          validator: this.requiredvalidator(),\n          trigger: 'change'\n        },\n        trading_certificate: {\n          validator: this.requiredvalidator(),\n          trigger: 'change'\n        },\n        contract: {\n          validator: this.requiredvalidator(),\n          trigger: 'change'\n        },\n        legal_document: {\n          validator: this.requiredvalidator(),\n          trigger: 'change'\n        },\n        bank_info: {\n          validator: this.requiredvalidator(),\n          trigger: 'change'\n        },\n        others: {\n          validator: this.requiredvalidator(),\n          trigger: 'change'\n        }\n      };\n    },\n    othersFileNameRules() {\n      return [\n        {\n          required: true,\n          message: this.$t('commonIsRequired', {\n            target: this.$t('supplierConfigFileTypeName')\n          }),\n          trigger: 'blur'\n        },\n        {\n          validator: (rule, value, cb) => {\n            if (this.uploadFilesForm.others_file.length > 1) {\n              const fileName = new Set();\n              const isDupName = this.uploadFilesForm.others_file.find((item) => {\n                const name = String(item.name).trim();\n                if (fileName.has(name)) {\n                  return true;\n                } else {\n                  fileName.add(name);\n                  return false;\n                }\n              });\n              if (isDupName && isDupName.name === value) {\n                return cb(new Error(this.$t('supplierConfigDuplicatedFileType')));\n              }\n            }\n            cb();\n          },\n          trigger: 'blur'\n        }\n      ];\n    },\n    othersFileConfigRules() {\n      return {\n        validator: this.requiredvalidator(),\n        trigger: 'change'\n      };\n    },\n    otherRecipentRules() {\n      let rules = [];\n      if (this.isIncludesOther) {\n        rules = [\n          {\n            required: true,\n            trigger: 'blur',\n            message: this.$t('commonIsRequired', {\n              target: this.$t('supplierConfigRecipentsAccount')\n            })\n          },\n          {\n            validator: (rule, value, cb) => {\n              const currentEmail = `${value.value}${value.emailType}`;\n              if (!this.emailTypes.includes(value.emailType) || !isValidEmail(currentEmail)) {\n                return cb(new Error(this.$t('supplierConfigInvalidEmailFormat')));\n              }\n              if (this.emailConfigForm.recipients_others.length > 1) {\n                const fileName = new Set();\n                const DupNameObj = this.emailConfigForm.recipients_others.find((item) => {\n                  const name = String(`${item.value}${item.emailType}`).trim();\n                  if (fileName.has(name)) {\n                    return true;\n                  } else {\n                    fileName.add(name);\n                    return false;\n                  }\n                });\n                if (DupNameObj && `${DupNameObj.value}${DupNameObj.emailType}` === currentEmail) {\n                  return cb(new Error(this.$t('supplierConfigDuplicatedAccount')));\n                }\n              }\n              cb();\n            },\n            trigger: ['blur', 'change']\n          }\n        ];\n      }\n      return rules;\n    },\n\n    emailConfigRules() {\n      return {\n        reminding_time: [\n          {\n            required: true,\n            trigger: 'change',\n            message: this.$t('commonIsRequired', {\n              target: this.$t('supplierConfigRemindingTime')\n            })\n          },\n          { validator: this.remindTimeValidator, trigger: 'change' }\n        ],\n        recipents: this.emailConfigForm.email_notification\n          ? {\n              validator: (rule, value, cb) => {\n                if (!Array.isArray(value) || value.length < 1) {\n                  return cb(\n                    new Error(\n                      this.$t('commonIsRequired', {\n                        target: this.$t('supplierConfigRecipients')\n                      })\n                    )\n                  );\n                }\n                cb();\n              },\n              trigger: 'change'\n            }\n          : {}\n      };\n    },\n    isIncludesOther() {\n      return this.emailConfigForm.recipents.includes('other');\n    },\n    isIncludesMerchandiser() {\n      return this.emailConfigForm.recipents.includes('merchandiser');\n    },\n    isIncludesSourcer() {\n      return this.emailConfigForm.recipents.includes('sourcer');\n    }\n  },\n\n  methods: {\n    async searchSelectChange(field, value) {\n      if (field === 'region') {\n        try {\n          await this.onBeforeLeaveRegion(value);\n        } catch (e) {\n          this.$refs.searchForm.setSearchForm('region', this.region);\n        }\n      }\n    },\n    chengeEmailType(index, value) {\n      const ref = this.$refs[`emailInput${index}`];\n      if (ref) {\n        ref.focus();\n        ref.blur();\n      }\n    },\n    requiredvalidator() {\n      return (rules, value, cb) => {\n        if (!value) {\n          return cb(new Error(this.$t('commonPleaseChooseAtLeastOneOption')));\n        }\n        cb();\n      };\n    },\n    remindTimeValidator(rules, value, cb) {\n      if (typeof value !== 'number' || value <= 0 || /\\./.test(value)) {\n        return cb(new Error(this.$t('supplierConfigMustBePositiveNumber')));\n      }\n      cb();\n    },\n    onChangeRecipents(checkList) {\n      if (this.isIncludesOther && this.emailConfigForm.recipients_others.length < 1) {\n        this.onAddNewRecipient();\n      }\n    },\n    onBeforeLeaveRegion(activeName) {\n      if (this.isEdit) {\n        return new Promise((resolve, reject) => {\n          this.$confirm(this.$t('supplierConfigChangeTypeTips'), 'Warning', {\n            showCancel: true\n          })\n            .then((resp) => {\n              this.isEdit = false;\n              this.region = activeName;\n              this.getConfigByType();\n              resolve();\n            })\n            .catch(() => {\n              reject();\n            });\n        });\n      } else {\n        this.region = activeName;\n        this.getConfigByType();\n        return true;\n      }\n    },\n    onBeforeLeaveCofigType(activeName) {\n      if (this.isEdit) {\n        return new Promise((resolve, reject) => {\n          this.$confirm(this.$t('supplierConfigChangeTypeTips'), 'Warning', {\n            showCancel: true\n          })\n            .then((resp) => {\n              this.activeConfigType = activeName;\n              this.getConfigByType();\n              resolve();\n              this.isEdit = false;\n            })\n            .catch(() => {\n              reject();\n            });\n        });\n      } else {\n        this.activeConfigType = activeName;\n        this.getConfigByType();\n        return true;\n      }\n    },\n    formatConfigOption(value) {\n      return this.$t((this.optionsList.find((item) => item.value === value) || { label: '' }).label);\n    },\n    onCheckRecipents() {\n      this.$refs.emailConfigForm.validateField('recipents');\n    },\n    onDeleteRecipient(index) {\n      this.emailConfigForm.recipients_others.splice(index, 1);\n      if (this.isIncludesOther && this.emailConfigForm.recipients_others.length < 1) {\n        this.emailConfigForm.recipents.splice(this.emailConfigForm.recipents.indexOf('other'), 1);\n        this.onCheckRecipents();\n      }\n    },\n    onAddNewRecipient() {\n      const { recipients_others } = this.emailConfigForm;\n      recipients_others.push({\n        value: '',\n        no: (recipients_others[recipients_others.length - 1] || { no: -1 }).no + 1,\n        emailType: '@shopee.com'\n      });\n      this.onCheckRecipents();\n    },\n    onAddNewFileType() {\n      const { others_file } = this.uploadFilesForm;\n      others_file.push({\n        no: (others_file[others_file.length - 1] || { no: -1 }).no + 1,\n        name: '',\n        config: 0\n      });\n    },\n    onDeleteSelfOption(index) {\n      this.uploadFilesForm.others_file.splice(index, 1);\n    },\n    onClickActionLog() {\n      this.actionLogVisible = true;\n    },\n    closeActionLog() {\n      if (this.actionLogVisible) {\n        this.actionLogVisible = false;\n      }\n    },\n    onCancel() {\n      this.contractInfoForm = JSON.parse(JSON.stringify(this.cacheFrom.contractInfoForm));\n      this.basicInfoForm = JSON.parse(JSON.stringify(this.cacheFrom.basicInfoForm));\n      this.bankInfoForm = JSON.parse(JSON.stringify(this.cacheFrom.bankInfoForm));\n      this.picContactInfoForm = JSON.parse(JSON.stringify(this.cacheFrom.picContactInfoForm));\n      this.uploadFilesForm = JSON.parse(JSON.stringify(this.cacheFrom.uploadFilesForm));\n      this.emailConfigForm = JSON.parse(JSON.stringify(this.cacheFrom.emailConfigForm));\n      this.isEdit = false;\n    },\n    onSave() {\n      this.$refs.contractInfoForm.validate((isContractValid) => {\n        this.$refs.uploadFilesForm.validate((isUploadValid) => {\n          this.$refs.emailConfigForm.validate((isEmailVaild) => {\n            this.$refs.basicInfoForm.validate((isBaseInfoVaild) => {\n              this.$refs.picContactInfoForm.validate((isPictureInfoVaild) => {\n                this.$refs.bankInfoForm.validate((isBankInfoVaild) => {\n                  if (\n                    isContractValid &&\n                    isUploadValid &&\n                    isBaseInfoVaild &&\n                    isEmailVaild &&\n                    isPictureInfoVaild &&\n                    isBankInfoVaild\n                  ) {\n                    this.submitConfig();\n                  }\n                });\n              });\n            });\n          });\n        });\n      });\n    },\n    async submitConfig() {\n      try {\n        const { email_notification, reminding_time } = this.emailConfigForm;\n        const email_config = {\n          email_notification,\n          reminding_time,\n          recipients_merchandiser: this.isIncludesMerchandiser ? 1 : 2,\n          recipients_sourcer: this.isIncludesSourcer ? 1 : 2,\n          recipients_others: this.isIncludesOther\n            ? (this.emailConfigForm.recipients_others || []).map((item) => `${item.value}${item.emailType}`)\n            : []\n        };\n        const params = {\n          region: this.region,\n          config_type: Number(this.activeConfigType),\n          contract_info: this.contractInfoForm,\n          basic_info: this.basicInfoForm,\n          bank_info: this.bankInfoForm,\n          pic_contact_info: this.picContactInfoForm,\n          contract_upload_file: {\n            supplier_registration_form: this.uploadFilesForm.supplier_registration_form,\n            trading_certificate: this.uploadFilesForm.trading_certificate,\n            contract: this.uploadFilesForm.contract,\n            legal_document: this.uploadFilesForm.legal_document,\n            bank_info: this.uploadFilesForm.bank_info,\n            other: this.uploadFilesForm.other,\n            configurable_files: this.uploadFilesForm.others_file\n          },\n          email_config\n        };\n        const res = await updateSupplierConfig(params);\n        if (res && res.retcode === 0) {\n          this.$message({ type: 'success', message: res.info });\n          this.cacheFrom = {\n            contractInfoForm: JSON.parse(JSON.stringify(this.contractInfoForm)),\n            basicInfoForm: JSON.parse(JSON.stringify(this.basicInfoForm)),\n            bankInfoForm: JSON.parse(JSON.stringify(this.bankInfoForm)),\n            picContactInfoForm: JSON.parse(JSON.stringify(this.picContactInfoForm)),\n            uploadFilesForm: JSON.parse(JSON.stringify(this.uploadFilesForm)),\n            emailConfigForm: JSON.parse(JSON.stringify(this.emailConfigForm))\n          };\n          this.isEdit = false;\n        } else if (res.retcode === 4350) {\n          this.$confirm(res.info, this.$t('commonTips'), {\n            cancelButtonText: this.$t('commonCancel'),\n            confirmButtonText: this.$t('commonConfirm')\n          })\n            .then(async () => {\n              params.confirm_contract_move = 1;\n              const secondResponse = await updateSupplierConfig(params);\n              if (secondResponse && secondResponse.retcode === 0) {\n                this.$message({ type: 'success', message: secondResponse.info });\n                this.isEdit = false;\n              } else {\n                this.$message({ type: 'error', message: secondResponse.info });\n              }\n            })\n            .catch(() => {\n              this.isEdit = false;\n            });\n        } else {\n          this.$message({ type: 'error', message: res.info });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    onEdit() {\n      this.isEdit = true;\n    },\n    handleChangeEmailNotification(newStatus) {\n      if (newStatus === 2) {\n        // notification off\n        this.emailConfigForm.reminding_time = 0;\n        this.emailConfigForm.recipents = [];\n        this.emailConfigForm.recipients_others = [];\n      }\n    },\n    async getConfigByType() {\n      try {\n        this.loading = true;\n        const params = {\n          region: this.region,\n          config_type: Number(this.activeConfigType)\n        };\n        const res = await getSupplierConfig(params);\n        if (res && res.retcode === 0) {\n          this.contractInfoForm = res.data.contract_info;\n          this.basicInfoForm = res.data.basic_info;\n          this.bankInfoForm = res.data.bank_info;\n          this.picContactInfoForm = res.data.pic_contact_info;\n          this.uploadFilesForm = {\n            ...res.data.contract_upload_file,\n            others_file: []\n          };\n          this.uploadFilesForm.others_file = this.uploadFilesForm.configurable_files.map((item, no) =>\n            Object.assign(item, { no })\n          );\n          this.emailConfigForm = { ...res.data.email_config, recipents: [] };\n          this.emailConfigForm.recipients_others = (this.emailConfigForm.recipients_others || []).map((item, no) => ({\n            value: item.substring(item.indexOf('@'), 0),\n            no,\n            emailType: item.slice(item.indexOf('@'))\n          }));\n          if (this.emailConfigForm.recipients_merchandiser === 1) {\n            this.emailConfigForm.recipents.push('merchandiser');\n          }\n          if (this.emailConfigForm.recipients_sourcer === 1) {\n            this.emailConfigForm.recipents.push('sourcer');\n          }\n          if (this.emailConfigForm.recipients_others.length > 0) {\n            this.emailConfigForm.recipents.push('other');\n          }\n          this.cacheFrom = {\n            contractInfoForm: JSON.parse(JSON.stringify(this.contractInfoForm)),\n            basicInfoForm: JSON.parse(JSON.stringify(this.basicInfoForm)),\n            picContactInfoForm: JSON.parse(JSON.stringify(this.picContactInfoForm)),\n            bankInfoForm: JSON.parse(JSON.stringify(this.bankInfoForm)),\n            uploadFilesForm: JSON.parse(JSON.stringify(this.uploadFilesForm)),\n            emailConfigForm: JSON.parse(JSON.stringify(this.emailConfigForm))\n          };\n        } else {\n          this.$message({ type: 'error', message: res.info });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};\n</script>\n\n<style scoped lang=\"scss\">\n@import '~@/styles/variables.scss';\n.supplier-info-config {\n  padding:0 20px;\n  color: #333;\n  .wrapper-title {\n    font-size: 24px;\n    line-height: 36px;\n    margin-bottom: 20px;\n  }\n  .wrapper-countrylist-tabs {\n    // margin-top: 24px;\n  }\n  .config-tab-section {\n    margin-top: 24px;\n  }\n  .config-content-section {\n    padding: 16px 32px;\n    border: 1px solid #dcdfe6;\n    border-top: 0;\n    .btn-wrapper {\n      overflow: hidden;\n      .action-log {\n        margin-right: 8px;\n      }\n    }\n    .config-form {\n      width: 80%;\n      .form-title {\n        color: #333;\n        font-weight: normal;\n        font-size: 16px;\n        margin-bottom: 20px;\n      }\n      .form-item {\n        padding-left: 32px;\n      }\n    }\n    .contract-uploadFile-section {\n      position: relative;\n      .newFile-form-item {\n        background: rgba(190, 190, 190, 0.15);\n        border-radius: 2px;\n        border-radius: 2px;\n        width: calc(100% - 32px);\n        margin-bottom: 4px;\n        margin-top: 20px;\n        padding: 8px;\n        padding-left: 32px;\n        vertical-align: middle;\n        .newFile-close-icon {\n          position: absolute;\n          right: -36px;\n          top: 50%;\n          transform: translateY(-50%);\n          font-size: 18px;\n          color: #c0c4cc;\n          cursor: pointer;\n        }\n      }\n      .uploadFile-input {\n        width: 180px;\n        height: 36px;\n        line-height: 36px;\n      }\n      .addNewFile-btn {\n        color: #3d62d1;\n      }\n      .add-icon {\n        font-size: 16px;\n        line-height: 16px;\n        vertical-align: middle;\n        margin-right: 4px;\n      }\n      .other-file-span {\n        display: inline-block;\n        padding-left: 32px;\n        width: 200px;\n        word-break: break-word;\n      }\n      .error-tip {\n        position: absolute;\n        top: 29px;\n        left: 132px;\n      }\n    }\n    .question-icon {\n      font-size: 15px;\n      margin-left: 8px;\n      fill: $black;\n    }\n    .email-info-section {\n      .email-title {\n        margin-top: 24px;\n      }\n      .reminding-time-input {\n        width: 92px;\n        margin-right: 8px;\n      }\n      .recipents-check-box {\n        display: block;\n      }\n      .others-recipients {\n        margin-top: 24px;\n        margin-left: 24px;\n        .others-input-wrapper {\n          margin-bottom: 22px;\n          .el-input-group-email {\n            width: 150px;\n            margin-left: -5px;\n          }\n        }\n        .others-input {\n          width: 240px;\n        }\n        .addNewFile-btn {\n          color: #3d62d1;\n        }\n        .add-icon {\n          font-size: 16px;\n          line-height: 16px;\n          vertical-align: middle;\n          margin-right: 4px;\n        }\n        .others-close-icon {\n          font-size: 16px;\n          color: #c0c4cc;\n          margin-left: 4px;\n          cursor: pointer;\n        }\n        .error-tip {\n          position: absolute;\n          top: 28px;\n          left: 190px;\n        }\n      }\n      .other-recipient-box {\n        width: 100%;\n        word-break: break-word;\n        .other-recipient-span {\n          margin-left: 8px;\n        }\n      }\n    }\n  }\n}\n</style>\n<style lang=\"scss\">\n@import '~@/styles/common.scss'; // ~@ = @ = 'src' webpack alias path\n.supplier-config-break-word {\n  word-break: break-word;\n  .icon-tips-wrapper {\n    text-align: left;\n    display: flex;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/unitConfig.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":14,"column":65,"nodeType":"VIdentifier","messageId":"deprecated","endLine":14,"endColumn":71}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class='unit-config pms-ui'>\n    <el-container>\n      <el-header>\n        <el-tabs class='unit-header' tab-position='bottom' v-model=\"activeTab\" :before-leave='countryChange'>\n          <el-tab-pane v-for='item in countryList' :key='item' :label='item' :name='item'></el-tab-pane>\n        </el-tabs>\n        <div v-if=\"canEdit\" class='create-btn' @click='onCreateUnit'>\n          <span class='sprite-entry-add add-btn'></span>\n          {{$t('approvalFlow.newUnit')}}\n        </div>\n      </el-header>\n      <el-main>\n        <el-form :model=\"searchForm\" label-width=\"90px\" @submit.native.prevent='onSearch'>\n          <el-row>\n            <el-col :span=\"6\">\n              <el-form-item :label=\"$t('approvalFlow.unitID')\">\n                <el-input v-model='searchForm.unitID'></el-input>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"6\" :offset='1'>\n              <el-form-item :label=\"$t('approvalFlow.unitName')\">\n                <el-input v-model='searchForm.unitName'></el-input>\n              </el-form-item>\n            </el-col>\n          </el-row>\n          <el-row>\n            <el-form-item class='right-action-btn'>\n              <div class='list-btn' @click='onSearch'>{{$t('purchaseRequest.search')}}</div>\n              <div class='list-btn clear-btn' @click=\"onReset\">{{$t('purchaseRequest.clear')}}</div>\n              <el-button native-type='submit' class='hidden-btn'></el-button>\n            </el-form-item>\n          </el-row>\n        </el-form>\n        <el-table :data='unitConfigList' border>\n          <el-table-column prop='unit_id' :label=\"$t('approvalFlow.unitID')\"></el-table-column>\n          <el-table-column prop='unit_name' :label=\"$t('approvalFlow.unitName')\"></el-table-column>\n          <el-table-column prop='base_unit_quantity' :label=\"$t('approvalFlow.basePOUnitQty')\"></el-table-column>\n          <el-table-column prop='inbound_quantity' :label=\"$t('approvalFlow.inboundQty')\"></el-table-column>\n          <el-table-column prop='created_by' :label=\"$t('approvalFlow.createdBy')\"></el-table-column>\n          <el-table-column :label=\"$t('opHistory.ctime')\">\n            <template slot-scope=\"scope\">\n              {{moment(scope.row.ctime * 1000).format('HH:mm DD/MM/YYYY')}}\n            </template>\n          </el-table-column>\n          <el-table-column prop='status' :label=\"$t('userRole.roleList.status')\">\n            <template slot-scope=\"scope\">\n              {{scope.row.status === 0 ? 'Available' : 'Unavailable'}}\n            </template>\n          </el-table-column>\n          <el-table-column :label=\"$t('userRole.roleList.action')\">\n            <template slot-scope='scope'>\n              <div class='list-btn' @click=\"showDetailDialog(scope.row)\">{{$t('opHistory.detail')}}</div>\n              <div v-if='scope.row.status === 0 && canEdit' class='list-btn disabled-btn' @click=\"changeUnitStatus(scope.row)\">{{$t('userRole.userList.disable')}}</div>\n              <div v-else-if=\"canEdit\" class='list-btn' @click=\"changeUnitStatus(scope.row)\">{{$t('userRole.userList.enable')}}</div>\n            </template>\n          </el-table-column>\n        </el-table>\n        <section class='pagination-center'>\n          <el-pagination background layout=\"prev, pager, next\" :current-page='pageIndex' :total.sync=\"total\" :page-size=\"10\" @current-change=\"handleChangePage\"></el-pagination>\n        </section>\n      </el-main>\n    </el-container>\n    <unit-dialog :mode='dialogMode' :country='activeTab' :unitData='activeUnit' :visible='detailDialogShow' @close='closeDetailDialog' @searchList='onSearch'></unit-dialog>\n  </div>\n</template>\n\n<script>\nimport { formatParams } from '@/utils/formatParams';\nimport { getUnitList, enableUnit, disableUnit } from '@/api/unitConfig';\nimport unitDialog from './unitDialog';\nimport moment from 'moment';\nimport { hasPermission } from '@/utils/permission';\nimport { Permission } from '@/utils/constant';\nexport default {\n  data() {\n    return {\n      activeTab: this.$store.getters.country,\n      canEdit: false,\n      searchForm: {\n        unitID: '',\n        unitName: ''\n      },\n      unitConfigList: [],\n      dialogMode: '',\n      detailDialogShow: false,\n      activeUnit: {},\n      pageIndex: 1,\n      total: 0\n    };\n  },\n  components: {\n    unitDialog\n  },\n  computed: {\n    countryList() {\n      return [...new Set([...this.$store.getters.countryList.map(item => item.country)])];\n    }\n  },\n  methods: {\n    moment,\n    onReset() {\n      this.searchForm = {\n        unitID: '',\n        unitName: ''\n      };\n    },\n    onCreateUnit() {\n      this.dialogMode = 'create';\n      this.detailDialogShow = true;\n    },\n    handleChangePage(pageIndex) {\n      this.pageIndex = pageIndex;\n      this.onSearch('', pageIndex);\n    },\n    onSearch(event, pageIndex, country) {\n      if (typeof pageIndex !== 'number') {\n        this.pageIndex = 1;\n      }\n      const params = {\n        skip: (this.pageIndex - 1) * 10,\n        country: country || this.activeTab,\n        ...formatParams(this.searchForm, {\n          unitID: 'unit_id',\n          unitName: 'unit_name'\n        })\n      };\n      getUnitList(params).then(resp => {\n        if (resp.status !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.total = resp.data.total;\n          this.unitConfigList = resp.data.unit_rate_list || [];\n        }\n      });\n    },\n    showDetailDialog(row) {\n      this.activeUnit = row;\n      this.dialogMode = 'edit';\n      this.detailDialogShow = true;\n    },\n    closeDetailDialog() {\n      this.activeUnit = {};\n      this.detailDialogShow = false;\n    },\n    changeUnitStatus(row) {\n      const params = {\n        unit_id: row.unit_id\n      };\n      const requestFun = row.status === 1 ? enableUnit : disableUnit;\n      requestFun(params).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.$message.success('success');\n          row.status = row.status === 1 ? 0 : 1;\n        }\n      });\n    },\n    countryChange(country) {\n      this.onReset();\n      this.onSearch('', '', country);\n      return true;\n    }\n  },\n  created() {\n    this.canEdit = hasPermission(Permission.UNIT_EDIT);\n    this.onSearch();\n  }\n};\n</script>\n\n<style scoped>\n  .unit-header {\n    /* margin-top: 11px; */\n    height: 60px;\n    max-width: 75%;\n  }\n  .add-btn {\n    display: inline-block;\n    margin: 0 5px -10px -20px;\n  }\n  .disabled-btn {\n    background-color: #f56c6c;\n  }\n  .right-action-btn {\n    float: right;\n  }\n  .hidden-btn {\n    width: 0;\n    height: 0;\n    visibility: hidden;\n  }\n  .pagination-center {\n    display: flex;\n    justify-content: center;\n    margin-top: 20px;\n  }\n  .cell .list-btn + .list-btn {\n    margin-top: 10px;\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/unitDialog.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":5,"column":66,"nodeType":"VIdentifier","messageId":"deprecated","endLine":5,"endColumn":72},{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":14,"column":94,"nodeType":"ThisExpression","endLine":14,"endColumn":98},{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"unitDialog\" is not PascalCase.","line":27,"column":9,"nodeType":"Literal","endLine":27,"endColumn":21,"fix":{"range":[1487,1497],"text":"UnitDialog"}}],"errorCount":3,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <el-dialog :title='mode === \"create\" ? $t(\"approvalFlow.createUnit\") : \"\"' :visible.sync=\"dialogVisible\" @close='$emit(\"close\")'>\n    <el-container>\n      <el-main>\n        <el-form :disabled='formDisabled' ref='unitForm' @submit.native.prevent :model='unitForm' :rules='formRules' label-width='200px'>\n          <el-form-item v-for='item in formSchema' :key='item.field' :label='item.label' :prop='item.field'>\n            <el-input v-if='item.type === \"number\"' type='number' :disabled='!!item.disabled' v-model.number='unitForm[item.field]'></el-input>\n            <el-input v-else :disabled='!!item.disabled' v-model='unitForm[item.field]'></el-input>\n          </el-form-item>\n        </el-form>\n      </el-main>\n      <el-footer align='center' class='pms-ui dialog-footer'>\n        <div v-if='formDisabled && canModify' class='list-btn' @click=\"onModifyConfig\">{{$t('userRole.userList.modify')}}</div>\n        <el-button v-else-if=\"canModify\" class='list-btn' @click=\"onConfirmConfig\" :loading='this.confirmLoading'>{{$t('purchaseRequest.confirm')}}</el-button>\n        <div class='list-btn' @click=\"onCloseDialog\">{{$t('userRole.userList.close')}}</div>\n      </el-footer>\n    </el-container>\n  </el-dialog>\n</template>\n\n<script>\nimport { formatParams } from '@/utils/formatParams';\nimport { createUnit, modifyUnit } from '@/api/unitConfig';\nimport { hasPermission } from '@/utils/permission';\nimport { Permission } from '@/utils/constant';\nexport default {\n  name: 'unitDialog',\n  data() {\n    return {\n      dialogVisible: false,\n      confirmLoading: false,\n      isModifyStatus: false,\n      canModify: false,\n      unitForm: {\n        unit_name: '',\n        base_unit_quantity: 1,\n        inbound_quantity: ''\n      },\n      formRules: {\n        unit_name: [{ required: true, type: 'string', max: 40, trigger: 'blur' }],\n        base_unit_quantity: [{ required: true, trigger: 'blur' }],\n        inbound_quantity: [{ required: true, type: 'integer', min: 1, trigger: 'blur' }]\n      }\n    };\n  },\n  computed: {\n    formSchema() {\n      const mode = this.$props.mode || 'create';\n      const createGroup = [\n        { label: this.$t('approvalFlow.unitName'), field: 'unit_name' },\n        { label: this.$t('approvalFlow.basePOUnitQty'), field: 'base_unit_quantity', disabled: true },\n        { label: this.$t('approvalFlow.inboundQty'), field: 'inbound_quantity', type: 'number' }\n      ];\n      if (mode === 'create') {\n        return createGroup;\n      } else {\n        return [\n          { label: this.$t('approvalFlow.unitID'), field: 'id', disabled: true },\n          ...createGroup\n        ];\n      }\n    },\n    formDisabled() {\n      return this.mode === 'edit' && !this.isModifyStatus;\n    }\n  },\n  props: {\n    visible: {\n      default: false\n    },\n    unitData: {\n      required: true,\n      type: Object,\n      default: () => {}\n    },\n    mode: {\n      required: true,\n      type: String\n    },\n    country: {\n      required: true,\n      type: String\n    }\n  },\n  methods: {\n    onModifyConfig() {\n      this.isModifyStatus = true;\n    },\n    onConfirmConfig() {\n      this.unitForm.unit_name = `${this.unitForm.unit_name}`.trim();\n      this.$refs.unitForm.validate(valid => {\n        if (valid) {\n          const formData = this.unitForm;\n          const requestFun = this.mode === 'create' ? createUnit : modifyUnit;\n          const params = formatParams({\n            country: this.mode === 'create' ? this.country : '',\n            unit_id: formData.unit_id,\n            unit_name: formData.unit_name,\n            base_unit_quantity: formData.base_unit_quantity,\n            inbound_quantity: formData.inbound_quantity\n          });\n          this.confirmLoading = true;\n          requestFun(params).then(resp => {\n            if (resp.retcode !== 0) {\n              this.$message.error(resp.info);\n              this.confirmLoading = false;\n            } else {\n              this.$message.success('success');\n              this.confirmLoading = false;\n              this.$emit('close');\n              this.$emit('searchList');\n            }\n          }).catch(() => {\n            this.$message.error('failed');\n            this.confirmLoading = false;\n          });\n        }\n      });\n    },\n    onCloseDialog() {\n      this.$emit('close');\n    }\n  },\n  watch: {\n    '$props.visible': {\n      handler(now, prev) {\n        this.dialogVisible = now;\n        if (now) {\n          this.confirmLoading = false;\n          this.isModifyStatus = false;\n          this.unitForm = Object.assign({}, {\n            unit_name: '',\n            base_unit_quantity: 1,\n            inbound_quantity: ''\n          }, this.unitData || {});\n          this.canModify = hasPermission(Permission.UNIT_EDIT);\n        }\n      },\n      immediate: true\n    }\n  }\n};\n</script>\n\n<style scoped>\n  .role-info {\n    height: 36px;\n    line-height: 36px;\n    font-weight: 700;\n    padding-left: 10px;\n    margin-bottom: 20px;\n    background-color: #F0F4F9;\n  }\n  .el-main {\n    padding: 0;\n    width: 600px;\n    margin: 0 auto;\n  }\n  .dialog-footer {\n    margin-top: 20px;\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/warehouseChannel/ScrollBar.vue","messages":[{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":4,"column":67,"nodeType":"ThisExpression","endLine":4,"endColumn":71}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"scroll-bar-warpper\">\n    <div class=\"bar\" :style=\"{height: barHeight}\">\n      <div class=\"active-round\" :style=\"{transform: `translateY(${this.scrollBarHeight}px)`}\"></div>\n    </div>\n    <div class=\"container\">\n      <div v-for=\"(item, index) in whsIds\"\n      :key=\"item\" :class=\"{'container-text': true,\n      active: isActiveIndex === index}\"\n      @click=\"jumpTo(item)\"\n      >{{item}}</div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ScrollBar',\n  props: {\n    whsIds: {\n      type: Array,\n      default: () => [],\n      required: true\n    },\n    scrollActive: {\n      type: String\n    }\n  },\n  data() {\n    return {\n      itemHeight: 22,\n      marginBottom: 20,\n      timer: null\n    };\n  },\n  computed: {\n    barHeight() {\n      return this.whsIds.length * this.itemHeight + (this.whsIds.length - 1) * this.marginBottom + 4 + 'px';\n    },\n    isActiveIndex() {\n      return this.whsIds.indexOf(this.scrollActive);\n    },\n    scrollBarHeight() {\n      return this.isActiveIndex >= 0 ? 6 + this.isActiveIndex * 42 + 1 : 9;\n    }\n  },\n  methods: {\n    jumpTo(whs) {\n      this.$emit('jump', whs);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.scroll-bar-warpper{\n  display: flex;\n  text-align: center;\n  margin-left: 45%;\n  position: fixed;\n  padding:29px 0;\n  margin-left: 120px;\n\n  .bar{\n    width: 2px;\n    background: #F1F2F5;\n    border-radius: 1px;\n    margin-right: 12px;\n    position: relative;\n    .active-round{\n      position: absolute;\n      margin-left: -3px;\n      border-radius: 50%;\n      background: #FFFFFF;\n      width: 8px;\n      height: 8px;\n      border: 1px solid #3D6ED1;\n    }\n  }\n  .container{\n    font-family: Helvetica;\n    font-size: 18px;\n    color: rgba(0,0,0,0.85);\n    padding:2px 0;\n    .container-text{\n      height: 22px;\n      margin-bottom: 20px;\n      cursor: pointer;\n      &.active{\n        color: #3D6ED1;\n      }\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/warehouseChannel/fullfillmentItem.vue","messages":[{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":106,"column":21,"nodeType":"ThisExpression","endLine":106,"endColumn":25},{"ruleId":"vue/return-in-computed-property","severity":2,"message":"Expected to return a value in \"tableData\" computed property.","line":166,"column":14,"nodeType":"FunctionExpression","endLine":176,"endColumn":6}],"errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"fullfillment-channel-item\" :ref=\"maskItem.channel_id\" :id=\"maskItem.channel_id\">\n      <el-row>\n        <el-col :span=\"24\">\n          <div>\n          <h2 class=\"mask-channel-title\" v-if=\"isToggleOpen\">\n            <span v-if=\"maskItem.channel_id !== 0\">\n              Mask Channel: {{maskItem.channel_id}} - {{maskItem.channel_name || 'channe_name'}}\n              <span :class=\"`mask-channel-status-text ${maskStatus ? 'status-on' : ''}`\">[ {{$t('commonStatus')}}:\n                <span>{{maskStatus ? 'On' : 'Off'}}</span>\n                ]\n              </span>\n              <span :class=\"`mask-channel-status-text ${codStatus ? 'status-on' : ''}`\">[ COD:\n                <span>{{codStatus ? 'On' : 'Off'}}</span>\n                ]\n              </span>\n            </span>\n            <span v-else>{{$t('commonOtherCheckoutChannels')}}</span>\n          </h2>\n          <p v-if=\"tableData.length === 0 && action !== 'edit'\">\n            <span v-if=\"maskItem.channel_id !== 0\">{{$t('ruleWarehouseConfigMaskNoFulfillmentTip')}}</span>\n            <span v-else>{{$t('ruleWarehouseNoChannelData')}}</span>\n          </p>\n          <el-table :data=\"tableData\" :empty-text=\"$t('ruleWarehouseNoChannelData')\" v-else>\n            <template v-if=\"action === 'edit'\">\n              <el-table-column type=\"index\" label=\"No.\"></el-table-column>\n              <el-table-column :label=\"$t('skuMgtChannelId')\">\n                <template slot-scope=\"scope\">\n                  <div>\n                    <span>{{scope.row.channel_id}}</span>\n                      <el-popover trigger=\"hover\" v-if=\"scope.row.channel_limit && Object.getOwnPropertyNames(scope.row.channel_limit).length\">\n                        <div>\n                          <p v-for=\"limit in channelLimitParams\" :key=\"limit.param\">\n                            <span>{{limit.param}}: {{scope.row.channel_limit[limit.param] || '/'}}{{(scope.row.channel_limit[limit.param] && limit.label) || ''}}</span>\n                          </p>\n                        </div>\n                        <svg-icon iconClass=\"question\" slot=\"reference\" className=\"question-icon\"></svg-icon>\n                    </el-popover>\n                  </div>\n                </template>\n              </el-table-column>\n              <el-table-column :label=\"$t('skuMgtChannelName')\">\n                <template slot-scope=\"scope\">\n                  <span v-if=\"!scope.row.isAdd\">{{scope.row.channel_name}}</span>\n                  <el-select class=\"pms-ele-ui\" v-else v-model=\"scope.row.channel_id\" @change=\"getChannelName\">\n                    <el-option v-for=\"item in newLogisticsChannels\"  :key=\"item.channel_id\" :label=\"item.channel_name\" :value=\"item.channel_id\" />\n                  </el-select>\n                </template>\n              </el-table-column>\n              <el-table-column :label=\"$t('commonStatus')\">\n                <template slot-scope=\"scope\" >\n                  <el-switch\n                    v-model=\"scope.row.channel_status\"\n                    active-color=\"#13ce66\"\n                    :active-value=\"1\"\n                    :inactive-value=\"0\"\n                    @change=\"channelStatusChange(scope.row)\"\n                  >\n                  </el-switch>\n                </template>\n              </el-table-column>\n              <el-table-column :label=\"$t('skuMgtChannelCodStatus')\">\n                <template slot-scope=\"scope\" >\n                  <el-switch\n                    v-model=\"scope.row.channel_cod_status\"\n                    active-color=\"#13ce66\"\n                    :disabled=\"!scope.row.channel_status\"\n                    :active-value=\"1\"\n                    :inactive-value=\"0\">\n                  </el-switch>\n                </template>\n              </el-table-column>\n            </template>\n            <template v-else>\n              <el-table-column type=\"index\" label=\"No.\"></el-table-column>\n              <el-table-column :label=\"$t('skuMgtChannelId')\">\n                <template slot-scope=\"scope\">\n                  <div>\n                    <span>{{scope.row.channel_id}}</span>\n                      <el-popover trigger=\"hover\" v-if=\"scope.row.channel_limit && Object.getOwnPropertyNames(scope.row.channel_limit).length\">\n                        <div>\n                          <p v-for=\"limit in channelLimitParams\" :key=\"limit.param\">\n                            <span>{{limit.param}}: {{scope.row.channel_limit[limit.param] || '/'}}{{(scope.row.channel_limit[limit.param] && limit.label) || ''}}</span>\n                          </p>\n                        </div>\n                        <svg-icon iconClass=\"question\" slot=\"reference\" className=\"question-icon\"></svg-icon>\n                    </el-popover>\n                  </div>\n                </template>\n              </el-table-column>\n              <el-table-column :label=\"$t('skuMgtChannelName')\" prop=\"channel_name\"/>\n              <el-table-column :label=\"$t('commonStatus')\">\n                <template slot-scope=\"scope\">\n                  <span :class=\"{'status-on': scope.row.channel_status}\">{{scope.row.channel_status ? $t('commonOn') : $t('commonOff')}}</span>\n                </template>\n              </el-table-column>\n              <el-table-column :label=\"$t('skuMgtChannelCodStatus')\">\n                <template slot-scope=\"scope\">\n                  <span :class=\"{'status-on': scope.row.channel_cod_status}\">{{scope.row.channel_cod_status ? $t('commonOn') : $t('commonOff')}}</span>\n                </template>\n              </el-table-column>\n            </template>\n          </el-table>\n          <div v-if=\"action === 'edit'\" class=\"add-channel\" @click=\"addChannel\">\n            <i class=\"el-icon-circle-plus-outline\"></i>\n            <span>{{this.$t('ruleAddNewWHSChannel')}}</span>\n          </div>\n          </div>\n        </el-col>\n      </el-row>\n    </div>\n</template>\n\n<script>\nexport default {\n  name: 'ChannelItem',\n  props: {\n    action: {\n      type: String,\n      required: true\n    },\n    region: {\n      type: String,\n      required: true\n    },\n    maskItem: {\n      type: Object,\n      required: false\n    },\n    list: {\n      type: Array,\n      default: () => []\n    },\n    logisticsChannels: {\n      type: Array,\n      default: () => []\n    },\n    isToggleOpen: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      initChannelList: {\n        channel_name: '',\n        channel_id: '',\n        channel_status: 1,\n        channel_cod_status: 0,\n        whs_id: '',\n        channel_limit: undefined,\n        isAdd: true\n      },\n      channelList: []\n    };\n  },\n  computed: {\n    channelLimitParams() {\n      return [\n        { param: 'item_max_dimension_int', label: '(cm)' },\n        { param: 'item_min_weight', label: '(kg)' },\n        { param: 'dimension_sum', label: '(cm)'},\n        { param: 'item_max_weight', label: '(kg)'},\n        { param: 'item_max_dimension', label: '(cm)'}];\n    },\n    tableData() {\n      if (this.action === 'edit') {\n        return this.channelList.concat([this.initChannelList]);\n      } else if (this.action === 'save') {\n        return this.channelList.filter(item => item.channel_name);\n      } else if (this.action === 'cancel') {\n        return this.channelList.filter(item => item.channel_name && !item.isNew);\n      } else if (this.action === 'view') {\n        return this.channelList;\n      }\n    },\n    maskStatus() {\n      return this.tableData.some(fulfillment => {\n        return fulfillment.channel_status && fulfillment.channel_id;\n      });\n    },\n    codStatus() {\n      if (!this.maskStatus) {\n        return false;\n      }\n      return this.tableData.some(fulfillment => {\n        return fulfillment.channel_cod_status && fulfillment.channel_id;\n      });\n    },\n    newLogisticsChannels() {\n      const result = this.logisticsChannels.filter(item => {\n        return !this.channelList.find(configChannel => (configChannel.channel_id === item.channel_id)) && item.mask_channel_id === this.maskItem.channel_id;\n      });\n      return result;\n    }\n  },\n  watch: {\n    action(nv, ov) {\n      if (nv === 'save') {\n        const { channel_name, channel_id, channel_status, channel_cod_status, whs_id } = this.initChannelList;\n        const list = channel_name ? this.tableData.concat([{ channel_name, channel_id, channel_status, channel_cod_status, whs_id, mask_channel_id: this.maskItem.channel_id || 0 }]) : this.tableData;\n        this.$emit('getChannelList', list);\n      } else if (nv === 'edit') {\n        this.initChannelList = {\n          channel_name: '',\n          channel_id: '',\n          channel_status: 1,\n          channel_cod_status: 0,\n          channel_limit: undefined,\n          whs_id: '',\n          isAdd: true\n        };\n      } else if (nv === 'cancel') {\n        this.$emit('cancel');\n      }\n    },\n    list(nv) {\n      this.channelList = nv;\n    },\n    channelList(nv) {\n    }\n  },\n  created() {\n  },\n  mounted() {\n    this.channelList = this.list || [];\n  },\n  methods: {\n    isAdded(channel_id) {\n      return this.channelList.find(item => item.channel_id === channel_id);\n    },\n    getChannelName(channel_id) {\n      const active = this.logisticsChannels.find(item => item.channel_id === channel_id) || {};\n      this.initChannelList.channel_id = active.channel_id;\n      this.initChannelList.channel_name = active.channel_name;\n      this.initChannelList.channel_limit = active.channel_limit;\n      this.initChannelList.whs_id = active.whs_id;\n    },\n    addChannel() {\n      const { channel_name, channel_id, channel_status, channel_cod_status, channel_limit, whs_id } = this.initChannelList;\n      const newChannel = {\n        channel_name,\n        mask_channel_id: this.maskItem.channel_id,\n        channel_id,\n        channel_status: Number(channel_status),\n        channel_cod_status: Number(channel_cod_status),\n        channel_limit: channel_limit,\n        whs_id,\n        isNew: true\n      };\n      if (channel_name) {\n        this.channelList.push(newChannel);\n        this.initChannelList = {\n          channel_name: '',\n          channel_id: '',\n          channel_limit: undefined,\n          channel_status: 1,\n          channel_cod_status: 0,\n          whs_id: '',\n          isAdd: true\n        };\n      } else {\n        return this.$message.error(this.$t('skuMgt.selectOneItem'));\n      }\n    },\n    channelStatusChange(row) {\n      // false -> true需要校验\n      if (!row.channel_status) { // false联动channel_cod_status为false\n        row.channel_cod_status = 0;\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import '~@/styles/common.scss';\n\n.fullfillment-channel-item{\n  font-family: Helvetica;\n  font-size: 14px;\n  color: rgba(0,0,0,0.85);\n  margin-bottom: 43px;\n  .mask-channel-title {\n    font-size: 15px;\n    margin-bottom: 10px;\n    font-weight: 600;\n  }\n  .mask-channel-status-text {\n    font-size: 14px;\n    padding: 0 5px;\n  }\n  .title-warpper{\n    display: flex;\n    align-items: center;\n    margin-bottom: 24px;\n    .title-icon{\n      width: 4px;\n      height: 17px;\n      background: #3D6ED1;\n      margin-right: 10px;\n    }\n    .title-text{\n      font-family: Helvetica-Bold;\n      font-size: 24px;\n      height: 29px;\n      line-height: 30px;\n    }\n  }\n  .detail-info{\n    margin-left: 14px;\n    .el-row{\n      margin-bottom: 30px;\n    }\n    .status-on{\n      color: #55CC77;\n    }\n    .add-channel{\n      color: #3D62D1;\n      font-size: 18px;\n      font-family: Helvetica-Bold;\n      margin-top: 20px;\n      width: 200px;\n      cursor: pointer;\n      i{\n        font-weight: 600;\n      }\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/warehouseChannel/index.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"warehouseConfig\" is not PascalCase.","line":107,"column":9,"nodeType":"Literal","endLine":107,"endColumn":26,"fix":{"range":[4036,4051],"text":"WarehouseConfig"}},{"ruleId":"vue/no-deprecated-destroyed-lifecycle","severity":2,"message":"The `beforeDestroy` lifecycle hook is deprecated. Use `beforeUnmount` instead.","line":327,"column":3,"nodeType":"Identifier","messageId":"deprecatedBeforeDestroy","endLine":327,"endColumn":16,"suggestions":[{"messageId":"insteadBeforeUnmount","fix":{"range":[10517,10530],"text":"beforeUnmount"},"desc":"Instead, change to `beforeUnmount`."}]}],"errorCount":2,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div ref=\"whsConfig\" class=\"whs-channel pms-ui rule-management-warehouse-config\">\n    <el-container>\n      <el-header>\n        <el-tabs class=\"whs-header\" tab-position=\"bottom\" v-model=\"activeTab\" @tab-click=\"changeTab\" >\n          <el-tab-pane v-for=\"tab in countryList\" :key=\"tab\" :label=\"tab\" :name=\"tab\"/>\n        </el-tabs>\n      </el-header>\n      <div class=\"btns-warpper\">\n        <template v-if=\"action !== 'edit'\">\n          <el-button @click=\"switchActionLog(true)\">{{$t('commonActionLog')}}</el-button>\n          <div class=\"btn\" @click=\"addNewWHS\" v-if=\"canEdit\">\n            <span >\n              <i class=\"el-icon-plus\"></i>\n              {{$t('ruleNewWHS')}}\n            </span>\n          </div>\n          <div v-if=\"!isEmpty && canEdit\" class=\"btn\" @click=\"switchAction('edit')\"><span>{{$t('commonEdit')}}</span></div>\n        </template>\n        <template v-else>\n          <div class=\"btn\" @click=\"switchAction('save')\"><span>{{$t('commonSave')}}</span></div>\n          <div class=\"btn plain\" @click=\"switchAction('cancel')\"><span>{{$t('commonCancel')}}</span></div>\n        </template>\n      </div>\n\n      <el-main class=\"main-warpper\" v-cloak v-loading=\"loading\">\n        <div v-if=\"isEmpty\" class=\"no-data\">\n          <svg-icon icon-class=\"noData\" class-name=\"no-data_icon\"></svg-icon>\n          <p>{{$t('ruleWarehouseNoData')}}</p>\n        </div>\n        <div v-else class=\"whs-channel\">\n          <div v-if=\"action === 'edit'\" class=\"edit-tip\">\n            <svg-icon icon-class='tip'></svg-icon>\n            <p class=\"tip-text\">{{$t('ruleWarehouseEditTip')}}</p>\n          </div>\n          <el-row>\n            <el-col :span=\"20\">\n               <channel-item\n                v-for=\"item in savedWhsIds\"\n                :ref=\"item\"\n                :key=\"item\"\n                :action=\"action\"\n                :region=\"activeTab\"\n                :whs-id=\"item\"\n                :address=\"getWarehouseaddress(item)\"\n                :list=\"getChannelListByWarehouse(item)\"\n                :selection=\"getUnSelectedChannel(item)\"\n                :isToggleOpen=\"isToggleOpen\"\n                @getChannelList=\"getChannelList\"\n                @cancel=\"cancel\" />\n            </el-col>\n            <el-col :span=\"4\">\n              <scroll-bar\n              v-if=\"savedWhsIds.length\"\n              :whs-ids=\"savedWhsIds\"\n              :scroll-active=\"scrollActive\"\n              @jump=\"jumpToWhs\"\n              ></scroll-bar>\n            </el-col>\n          </el-row>\n        </div>\n      </el-main>\n    </el-container>\n\n    <el-dialog :title=\"$t('ruleAddNewWHS')\" :visible.sync=\"dialogVisible\" width=\"574px\">\n      <el-form>\n        <el-form-item label=\"Warehouse:\">\n          <el-checkbox-group v-model=\"whsIds\">\n            <el-checkbox\n              v-for=\"item in warehouseList\"\n              :disabled=\"!!item.on_use && whsIds.includes(item.whs_id)\"\n              :key=\"item.whs_id\"\n              :label=\"item.whs_id\"/>\n          </el-checkbox-group>\n        </el-form-item>\n      </el-form>\n        <div class=\"btns-warpper dialog-footer\">\n          <div class=\"btn\" @click=\"submitNewWHS\"><span>{{$t('commonAdd')}}</span></div>\n          <div class=\"btn plain\" @click=\"() => dialogVisible = false\"><span>{{$t('commonCancel')}}</span></div>\n        </div>\n    </el-dialog>\n    <action-log\n      :visible=\"showActionLog\"\n      @close=\"switchActionLog(false)\"\n      type=\"field\"\n      :params=\"{\n          log_type: 'whs_channel',\n          biz_type: 'WhsChannel',\n          show_type: 2,\n          object_id: activeTab\n          }\"\n    />\n\n  </div>\n</template>\n\n<script>\nimport channelItem from './whsChannelItem';\nimport ScrollBar from './ScrollBar';\nimport { hasPermission } from '@/utils/permission';\nimport { Permission } from '@/utils/constant';\nimport { commonFetchAction } from '@/utils';\nimport actionLog from '@/components/actionLogDialog/actionLog';\nimport { getWarehouseList, createWarehouse, getWarehouseBySingleRegion, saveChannels } from '@/api/warehouseConfig';\n\nexport default {\n  name: 'warehouseConfig',\n  components: { actionLog, channelItem, ScrollBar},\n  data() {\n    return {\n      activeTab: this.$store.getters.country || 'VN',\n      loading: false,\n      showActionLog: false,\n      whsIds: [],\n      warehouseList: [],\n      warehouseChannel: [], // 所有的channel信息\n      warehouseUnconfigChannel: [], // 未添加fulfillment channel的信息\n      canEdit: false,\n      action: 'view', // view edit save cancel\n      dialogVisible: false,\n      saveChannels: [],\n      getChannelListCount: 0,\n      scrollActive: '',\n      scrollEl: null,\n      offsetTopArr: [],\n      savedWhsIds: [], //  已经添加成功的whs\n      isToggleOpen: false\n    };\n  },\n  computed: {\n    countryList() {\n      return [...new Set([...this.$store.getters.countryList.map(item => item.country)])];\n    },\n    isEmpty() {\n      return !this.savedWhsIds.length;\n    }\n  },\n  created() {\n    this.canEdit = hasPermission(Permission.WHS_CHANNEL_CONFIG_EDIT);\n    this.getWarehouseChannel();\n    this.getWarehouseList();\n  },\n  mounted() {\n    // 添加滚动事件\n    this.scrollEl = this.$refs.whsConfig;\n    this.scrollEl.addEventListener('scroll', this.scrollCallback);\n  },\n  methods: {\n    switchActionLog(isOpen) {\n      this.showActionLog = isOpen;\n    },\n    // 切换tab 重新获取数据\n    changeTab(tab) {\n      this.restData();\n      this.getWarehouseChannel();\n      this.getWarehouseList();\n    },\n    // 获取仓库配置项\n    async getWarehouseList() {\n      const res = await getWarehouseList({ region: this.activeTab });\n      commonFetchAction(res, data => {\n        this.warehouseList = data.warehouseList || [];\n        this.whsIds = this.warehouseList\n          .filter(item => {\n            return item.status;\n          })\n          .map(item => item.whs_id);\n        this.getSavedWhsIds();\n      });\n    },\n    // 获取仓库渠道信息\n    async getWarehouseChannel(isEdit = false) {\n      this.loading = true;\n      const params = {\n        region: this.activeTab,\n        is_edit: isEdit ? 1 : 0\n      };\n      const res = await getWarehouseBySingleRegion(params);\n      this.loading = false;\n      commonFetchAction(res, data => {\n        // 这里返回的是所有的channelList\n        this.warehouseChannel = data.channel_config_list || [];\n        this.warehouseUnconfigChannel = data.channel_unconfig_list || [];\n        this.isToggleOpen = data.mask_toggle || false;\n        this.getOffsetTopArr();\n      });\n    },\n    getSavedWhsIds() {\n      this.savedWhsIds = this.whsIds;\n      this.getOffsetTopArr();\n    },\n    // 根据whs_id获取对应address\n    getWarehouseaddress(whs_id) {\n      const data = this.warehouseList.find(item => item.whs_id === whs_id);\n      return data && data.address;\n    },\n    // 通过warehouse 获取对应的channelList\n    getChannelListByWarehouse(whs_id) {\n      return this.warehouseChannel.filter(item => item.whs_id === whs_id);\n    },\n    getUnSelectedChannel(whs_id) {\n      return this.warehouseUnconfigChannel.filter(item => item.whs_id === whs_id);\n    },\n    addNewWHS() {\n      this.dialogVisible = true;\n      this.getWarehouseList();\n    },\n    async submitNewWHS() {\n      if (!this.whsIds.length) return this.$message.error(this.$t('skuMgt.selectOneItem'));\n      const whs_ids = this.warehouseList.map(item => {\n        return item.whs_id;\n      });\n      const status = this.warehouseList.map(item => {\n        return Number(this.whsIds.includes(item.whs_id));\n      });\n\n      const params = {\n        whs_ids,\n        region: this.activeTab,\n        status\n      };\n      const res = await createWarehouse(params);\n      commonFetchAction(res, data => {\n        // 获取添加完成的所有\n        this.getSavedWhsIds();\n        this.getWarehouseChannel();\n        this.dialogVisible = false;\n      });\n    },\n    // 获取各个单元的偏移量\n    getOffsetTopArr() {\n      this.$nextTick(() => {\n        const divArr = document.querySelectorAll('.whs-channel-item');// 获取右边的div数组\n        this.offsetTopArr = Array.prototype.map.call(divArr, item => {\n          return item.offsetTop || 100;\n        });\n      });\n    },\n    switchAction(val) {\n      this.action = val || 'view';\n      if (val === 'edit') {\n        this.getWarehouseChannel(true);\n      } else if (val === 'cancel') {\n        this.getWarehouseChannel(false);\n      }\n      this.getOffsetTopArr();\n    },\n    // 获取子组件数据\n    async getChannelList(data) {\n      this.saveChannels = this.saveChannels.concat(data);\n      if (this.getChannelListCount < this.whsIds.length - 1) {\n        this.getChannelListCount++;\n      } else {\n        const params = {\n          region: this.activeTab,\n          channel_list: this.saveChannels\n        };\n        saveChannels(params).then(res => {\n          if (res.retcode === 0) {\n            this.$message.success(res.info);\n          } else {\n            this.$message.error(res.info || 'Failed to connect network, please try it again later');\n          }\n        }).finally(() => {\n          // 获取添加完成的所有\n          this.getWarehouseChannel();\n          this.getOffsetTopArr();\n          this.switchAction();\n          this.saveChannels = [];\n          this.getChannelListCount = 0;\n        });\n      }\n    },\n    cancel() {\n      this.getWarehouseChannel();\n      this.switchAction();\n      this.saveChannels = [];\n    },\n    restData() {\n      this.switchAction();\n      this.whsIds = [];\n      this.warehouseList = [];\n      this.warehouseChannel = [];\n      this.savedWhsIds = [];\n      this.getChannelListCount = 0;\n      this.saveChannels = [];\n    },\n    // 切换whs 事件\n    jumpToWhs(whs) {\n      this.savedWhsIds.some((item, index) => {\n        if (item === whs) {\n          this.scrollEl.scrollTo(0, this.offsetTopArr[index]);\n          this.scrollActive = whs;\n        }\n        return item === whs;\n      });\n    },\n    // 滚动事件\n    scrollCallback() {\n      const scroll = this.scrollEl.scrollTop;\n      let index = 0;\n      const length = this.offsetTopArr.length;\n      for (let i = 0; i < length; i++) {\n        if (i < length - 1) {\n          if (i === 0) {\n            if (scroll < this.offsetTopArr[i]) {\n              index = i;\n              break;\n            }\n          } else {\n            if (scroll >= this.offsetTopArr[i - 1] && scroll < this.offsetTopArr[i]) {\n              index = i - 1;\n              break;\n            } else if (scroll >= this.offsetTopArr[i] && scroll < this.offsetTopArr[i + 1]) {\n              index = i;\n              break;\n            }\n          }\n        } else {\n          index = length - 1;\n          break;\n        }\n      }\n      this.scrollActive = this.whsIds[index];\n    }\n  },\n  beforeDestroy() {\n    this.scrollEl.removeEventListener('scroll', this.scrollCallback);\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.whs-channel{\n  .whs-header{\n    // margin-top: 11px;\n    height: 60px;\n  }\n  .btns-warpper{\n    display: flex;\n    justify-content: flex-end;\n    margin: 20px 20px 0px;\n    .btn{\n      font-size: 14px;\n      color: #FFFFFF;\n      background: #3D6ED1;\n      border-radius: 2px;\n      height: 32px;\n      padding: 5px 12px;\n      margin-left: 12px;\n      min-width: 72px;\n      text-align: center;\n      cursor: pointer;\n      span{\n        display: inline-block;\n        height: 22px;\n        line-height: 22px;\n        i{\n          font-weight: 600;\n          margin-right: 4px;\n        }\n      }\n      &.plain{\n        color: #333333;\n        background: #FFFFFF;\n        border: 1px solid #D9D9D9;\n      }\n    }\n  }\n  .main-warpper{\n    margin: 0px 16px;\n    padding: 20px 0;\n    .no-data{\n      color: #999999;\n      text-align: center;\n      margin: 40px auto;\n      &_icon{\n        font-size: 96px;\n      }\n    }\n    .edit-tip{\n      display: flex;\n      background: #FFF6E1;\n      border-radius: 4px;\n      padding: 12px 13px;\n      margin-bottom: 24px;\n      .tip-text{\n        font-family: PingFangSC-Regular;\n        font-size: 14px;\n        color: #555555;\n        margin-left: 16px;\n      }\n    }\n  }\n  .dialog-footer{\n    margin: 24px 0px 0px 0px;\n  }\n}\n</style>\n\n<style lang=\"scss\" scoped>\n.rule-management-warehouse-config {\n  height: calc(100vh - 85px);\n  overflow-y: scroll;\n  overflow-x: hidden;\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/rule/warehouseChannel/whsChannelItem.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/skuManagement/detail.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/skuManagement/lifetimeDetail.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/skuManagement/list.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/skuManagement/massUpdateLifecycle.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"massUpdate\" is not PascalCase.","line":37,"column":9,"nodeType":"Literal","endLine":37,"endColumn":21,"fix":{"range":[1495,1505],"text":"MassUpdate"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div class=\"massUpdateLifecycle-wrapper\">\n    <el-select class=\"massUpdateLifecycle-el-select\" v-model=\"searchParams.task_type\" @change=\"changeSelectTaskType\">\n      <el-option v-if=\"canUpdateLifecycle\" :label=\"$t('skuMgt.UpdateLifecycle')\" :value=\"2\"></el-option>\n      <el-option v-if=\"canUpdateTax\" :label=\"$t('skuMgt.UpdateTaxInfo')\" :value=\"3\"></el-option>\n      <el-option v-if=\"canUpdateSwop\" :label=\"$t('skuMgtUpdateSWOP')\" :value=\"701\"></el-option>\n    </el-select>\n    <upload-btn-group ref=\"uploadBtnGroup\"\n      :disabledUpload=\"!actionUrl\"\n      :actionUrl=\"actionUrl\"\n      :tableSchema=\"uploadTableSchema\"\n      :searchParams=\"searchParams\"\n      :loading=\"loading\"\n      :dataList=\"historyList\"\n      :uploadParams=\"uploadParams\"\n      @onBtnClick=\"dropDownClick\"\n      @onHistory=\"getHistoryList\"\n      @uploadSuccess=\"uploadSuccess\">\n    </upload-btn-group>\n  </div>\n\n</template>\n\n<script>\nconst lifecycleURL = '/api/scbs/shelflife/sku/upload/';\nconst TaxInfoURL = '/api/scbs/tax/sku/upload/';\n// const FbsTagUrl = '/api/scbs/fbs/sku/upload/';\nconst swopURL = '/api/scbs/sku/swop/upload/';\n\nimport { uploadLifecycleHistory, downloadHistoryResult } from '@/api/lifecycle';\nimport UploadBtnGroup from '@/components/upload/uploadBtnGroup';\nimport { downloadBlobFile } from '@/utils/downloadFile';\nimport moment from 'moment';\nimport { hasPermission } from '@/utils/permission';\nimport { Permission, getContentType } from '@/utils/constant';\nexport default {\n  name: 'massUpdate',\n  props: {\n    hasFbsTag: {\n      type: Boolean,\n      dafault: false\n    },\n    country: {\n      type: String,\n      dafault: ''\n    }\n  },\n  data() {\n    return {\n      actionUrl: lifecycleURL,\n      canUpdateLifecycle: false,\n      canUpdateTax: false,\n      canUpdateSwop: true,\n      historyList: [],\n      loading: false,\n      uploadParams: {\n        btnText: 'skuMgt.massUpdateLifecycle'\n      },\n      searchParams: {\n        page_no: 1,\n        count: 10,\n        total: 0,\n        task_type: 2\n      }\n    };\n  },\n  computed: {\n    uploadTableSchema() {\n      return [\n        { label: this.$t('approvalFlow.uploadTime'), field: 'ctime',\n          render: (schema, row) => `${row.ctime ? moment(row.ctime * 1000).format('YYYY-MM-DD HH:mm') : '-'}`\n        },\n        { label: this.$t('userRole.userList.username'), field: 'operator' },\n        { label: this.$t('userRole.userList.status'), field: 'status', type: 'enum',\n          options: [\n            { label: 'Processing', value: 1 },\n            { label: 'Success', value: 2 },\n            { label: 'Failure', value: 3 }\n          ]\n        },\n        { columnKey: 'action',\n          label: this.$t('purchaseRequest.action'),\n          width: '180px',\n          render: (schema, row) => {\n            return [\n              'el-button',\n              {\n                class: 'action-btn',\n                props: { type: 'default', size: 'mini', disabled: !row.result_link },\n                on: { click: () => this.downloadResult(row) }\n              },\n              this.$t('purchaseRequest.download')\n            ];\n          }\n        }\n      ];\n    }\n  },\n  components: {\n    UploadBtnGroup\n  },\n  created() {\n    this.canUpdateLifecycle = hasPermission(Permission.SKU_DETAIL_LIFECYCLE_PROCESS);\n    this.canUpdateTax = hasPermission(Permission.EDIT_TAX_INFO);\n    this.canUpdateSwop = hasPermission(Permission.EDIT_SWOP);\n\n    const initArr = [\n      { perm: false, task_type: 2 },\n      { perm: false, task_type: 3 },\n      { perm: false, task_type: 701 }\n    ];\n\n    for (const { perm, task_type } of initArr) {\n      if (perm) {\n        this.searchParams.task_type = task_type;\n        this.changeSelectTaskType(task_type);\n        break;\n      }\n    }\n  },\n  methods: {\n    changeSelectTaskType(value) {\n      if (value === 2) {\n        this.uploadParams.btnText = 'skuMgt.massUpdateLifecycle';\n        this.actionUrl = lifecycleURL;\n      } else if (value === 3) {\n        this.uploadParams.btnText = 'skuMgt.massUpdateTaxInfo';\n        this.actionUrl = TaxInfoURL;\n      } else if (value === 701) {\n        this.uploadParams.btnText = 'skuMgtUpdateSWOP';\n        this.actionUrl = swopURL;\n      }\n    },\n    dropDownClick(btn) {\n      if (!btn) return;\n      let url = '';\n      if (this.searchParams.task_type === 2) {\n        url = '/admin/data/lifecycleTemplate.xlsx';\n      } else if (this.searchParams.task_type === 3) {\n        url = '/admin/data/taxInfoTemplate.xlsx';\n      } else if (this.searchParams.task_type === 701) {\n        url = '/admin/data/SWOPTemplate.xlsx';\n      }\n      window.open(url);\n    },\n    downloadResult(row) {\n      downloadHistoryResult({ task_id: row.task_id, result_link: row.result_link }).then(resp => {\n        if (resp.type === 'application/json') {\n          const reader = new FileReader();\n          reader.onloadend = () => {\n            const result = JSON.parse(reader.result);\n            if (result.retcode !== 0) {\n              this.$message.error(result.info);\n            }\n          };\n          reader.readAsText(resp);\n        } else {\n          const fileName = `${row.task_id}.${getContentType(resp.type)}`;\n          downloadBlobFile(resp, fileName);\n        }\n      }).catch(() => { this.$message.error('Download Failed'); });\n    },\n    getHistoryList(form) {\n      this.loading = true;\n      this.searchParams = { ...this.searchParams, ...form };\n      uploadLifecycleHistory(form).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.historyList = resp.data.task_history_list || [];\n          this.searchParams.total = resp.data.total || 0;\n        }\n        this.loading = false;\n      }).catch(() => { this.loading = false; });\n    },\n    uploadSuccess() {\n      this.$message.success('File uploaded, please find the result in “Upload History”!');\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.massUpdateLifecycle-wrapper{\n  display: inline-block;\n}\n</style>\n<style lang=\"scss\">\n.massUpdateLifecycle-el-select{\n  width: 170px;\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/skuManagement/orderList/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/skuManagement/orderList/list.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/skuManagement/productInfo/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/skuManagement/skuInventoryDetail.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/skuManagement/skuList.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":4,"column":44,"nodeType":"VIdentifier","messageId":"deprecated","endLine":4,"endColumn":50},{"ruleId":"vue/no-template-shadow","severity":2,"message":"Variable 'item' is already declared in the upper scope.","line":13,"column":37,"nodeType":"Identifier","endLine":13,"endColumn":41},{"ruleId":"vue/no-deprecated-filter","severity":2,"message":"Filters are deprecated.","line":94,"column":19,"nodeType":"VFilterSequenceExpression","messageId":"noDeprecatedFilter","endLine":94,"endColumn":51},{"ruleId":"vue/no-deprecated-filter","severity":2,"message":"Filters are deprecated.","line":99,"column":20,"nodeType":"VFilterSequenceExpression","messageId":"noDeprecatedFilter","endLine":99,"endColumn":68},{"ruleId":"vue/no-side-effects-in-computed-properties","severity":2,"message":"Unexpected side effect in \"canSearchStatus\" computed property.","line":193,"column":18,"nodeType":"AssignmentExpression","endLine":193,"endColumn":45},{"ruleId":"vue/no-unused-components","severity":2,"message":"The \"categorySearch\" component has been registered but not used.","line":218,"column":47,"nodeType":"Property","endLine":218,"endColumn":61}],"errorCount":6,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-container class=\"pms-new-ui pms-ui sku-list-wrapper\">\n    <el-main>\n      <el-form :model=\"searchForm\" @submit.native.prevent=\"onResetPageNoSearch\">\n          <el-button v-show=\"false\" native-type=\"submit\"></el-button>\n          <el-row>\n            <el-col v-for='item in searchSchema' :key='item.field' :span='item.width' :offset='item.offset || 0'>\n              <el-form-item label-width=\"134px\" :class='item.class || \"\"' :label=\"item.label\">\n                <el-select v-if='item.type === \"select\"'  clearable v-model=\"searchForm[item.field]\" :disabled=\"item.disabled || false\" @change=\"(...argus) => onChangeSelection(item.field, ...argus)\">\n                  <el-option v-for='(option,index) in item.options || []' :key='`${option.value}${index}`' :label='option.label' :value='option.value'></el-option>\n                </el-select>\n                <el-select v-else-if=\"item.type === 'categoryName'\" clearable collapse-tags :multiple=\"item.multiple\" @change='onResetPageNoSearch' :placeholder='searchForm.country ? \"select\" : \"please select a region first\"' v-model=\"searchForm[item.field]\">\n                  <el-option v-for='item in item.options' :key='item.catid' :label='item.display_name' :value='item.catid'></el-option>\n                </el-select>\n                <el-select v-if='item.type === \"shopIDName\"' clearable filterable remote :remote-method=\"getShopIdName\" v-model=\"searchForm[item.field]\" :disabled=\"item.disabled || false\" @change=\"onResetPageNoSearch\">\n                  <el-option v-for='option in item.options || []' :key='option.value' :label='option.label' :value='option.value'></el-option>\n                </el-select>\n                <el-input v-if='item.type === \"input\"' v-model=\"searchForm[item.field]\" clearable></el-input>\n              </el-form-item>\n            </el-col>\n          </el-row>\n          <el-row>\n            <el-col v-if=\"canMassUpdate\" :span=\"10\">\n              <mass-update-lifecycle :has-fbs-tag=\"hasFbsTag && !!searchForm.country\" :country=\"searchForm.country\"></mass-update-lifecycle>\n            </el-col>\n            <el-form-item class='right-action-btn'>\n               <div class='export-history-btn list-btn' @click=\"showExportHistory\">\n                <i class=\"el-icon-upload\"></i>\n                <span>{{$t('purchaseRequest.exportHistory')}}</span>\n              </div>\n              <div class='list-btn' @click='onResetPageNoSearch'>{{$t('purchaseRequest.search')}}</div>\n              <div class='list-btn clear-btn' @click=\"onReset\">{{$t('purchaseRequest.clear')}}</div>\n              <div class='list-btn' @click=\"onExport\">{{$t('purchaseRequest.export')}}</div>\n              <div class='list-btn' @click=\"onSync\" :class=\"{'disabled': !canSync}\">{{$t('purchaseRequest.sync')}}</div>\n              <div class='list-btn update-channel' @click=\"onUpdateChannel\">{{$t('updateChannel')}}</div>\n            </el-form-item>\n          </el-row>\n        </el-form>\n      <el-checkbox-group v-model=\"checkedRows\">\n        <el-table :data='tableList' border v-loading=\"loading\" @row-click=\"onRowClick\" @selection-change=\"onSelectionChange\" ref=\"multipleTable\">\n            <el-table-column column-key=\"action\" width=\"100px\" align=\"center\">\n              <template #header>\n                  <span @click=\"resetCheckedType\" :class=\"`el-checkbox__input ${checkedStyle}`\">\n                    <span :class=\"`el-checkbox__inner ${checkedStyle}`\"></span>\n                  </span>\n                  <el-dropdown\n                    placement=\"bottom\"\n                    trigger=\"click\"\n                    class=\"select-page-dropdown\"\n                    @command=\"changeSelectPageType\"\n                    split-button>\n                  <el-dropdown-menu class=\"options-field-menu\" slot=\"dropdown\">\n                      <el-dropdown-item command=\"current\">{{$t('commonCurrentPage')}}</el-dropdown-item>\n                      <el-dropdown-item command=\"all\">{{$t('commonAllPage')}}</el-dropdown-item>\n                    </el-dropdown-menu>\n                  </el-dropdown>\n              </template>\n              <template slot-scope=\"scope\">\n                <el-checkbox :disabled=\"checkedType === 'all'\" :label=\"scope.row.sku_id\" :key=\"scope.row.sku_id\">{{''}}</el-checkbox>\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"sku_id\" :label=\"$t('purchaseOrder.skuID')\" min-width=\"150px\">\n              <template slot-scope=\"scope\">\n                {{scope.row.sku_id}}\n                  <span v-if=\"scope.row.is_default\" class=\"pms-tag-label\">{{$t('Default')}}</span>\n                  <span v-if=\"scope.row.is_deprecated\" class=\"pms-tag-label\">{{$t('Deprecated')}}</span>\n                  <span v-if=\"scope.row.has_virtual_sku\" class=\"pms-tag-label\">{{$t('VirtualPackageItem')}}</span>\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"sku_name\" :label=\"$t('purchaseRequest.skuName')\" min-width=\"150px\"></el-table-column>\n            <el-table-column prop=\"country\"  align='center' :label=\"$t('purchaseRequest.region')\"></el-table-column>\n            <el-table-column prop=\"category_name\" :label=\"$t('userRole.userList.categoryName')\"></el-table-column>\n            <el-table-column prop='shop_id' :label=\"$t('approvalFlow.shopID')\" width=\"120px\"></el-table-column>\n            <el-table-column prop='shop_name' :label=\"$t('approvalFlow.shopName')\"></el-table-column>\n            <el-table-column prop='fbs_shop' :label=\"$t('commonFbsShop')\">\n              <template slot-scope=\"scope\">\n                {{formatFbsShop(scope.row.fbs_shop)}}\n              </template>\n            </el-table-column>\n            <el-table-column :label=\"$t('skuMgt.FEStatus')\" width=\"120px\">\n              <template slot-scope=\"scope\">\n                {{formatStatus(scope.row.status)}}\n              </template>\n            </el-table-column>\n            <el-table-column :label=\"$t('skuMgtCBOption')\" width=\"120px\">\n              <template slot-scope=\"scope\">\n                {{formatCBOption(scope.row.cb_option)}}\n              </template>\n            </el-table-column>\n            <el-table-column :label=\"$t('commonBrand')\" width=\"120px\" prop=\"brand\">\n            </el-table-column>\n            <el-table-column v-if=\"hasFbsTag\" :label=\"$t('skuMgtFulfillmentTag')\">\n              <template slot-scope=\"scope\">\n                {{scope.row.fbs_tag | filterFbsTag}}\n              </template>\n            </el-table-column>\n            <el-table-column v-if=\"hasFbsTag\" :label=\"$t('skuMgtWithWHSChannel')\">\n              <template slot-scope=\"scope\">\n                {{ scope.row.has_enable_whs_channels | filterFbsTag }}\n              </template>\n            </el-table-column>\n          </el-table>\n      </el-checkbox-group>\n      <section class='pagination-center'>\n        <el-pagination background layout=\"sizes, prev, pager, next\" :current-page='searchForm.page_no' :total.sync=\"total\" :page-sizes='[10, 20, 50, 100]' :page-size=\"searchForm.count\" @size-change='handleSizeChange' @current-change=\"handleChangePage\"></el-pagination>\n      </section>\n    </el-main>\n    <export-history-dialog :interval=\"15000\" :taskType=\"12\" :visible=\"isShowExportHistory\" @close=\"closeExportHistory\"></export-history-dialog>\n  </el-container>\n</template>\n\n<script>\nimport { getSkuManagementList, exportSku, syncSku, getFbsCountry, apiUpdateChannel } from '@/api/skuMgt';\nimport { getShopListByIdOrName } from '@/api/shopConfig';\nimport MassUpdateLifecycle from './massUpdateLifecycle';\nimport { formatParams } from '@/utils/formatParams';\nimport { FESKUStatus, CBOptionList, SkuListYesOrNo, VPITagOptions, Permission, FBSShopOptions } from '@/utils/constant';\nimport categorySearch from '@/components/BaseRenderItem/categorySearch';\nimport { getCategoryList } from '@/api/userRole';\n// import { downloadBlobFile } from '@/utils/downloadFile';\n// import moment from 'moment';\nimport { hasPermission } from '@/utils/permission';\nimport ExportHistoryDialog from '@/components/ApproveList/exportHistoryDialog';\n\nexport default {\n  data() {\n    const defaultCountry = this.$store.getters.countrySelectList.length > 1 ? '' : (this.$store.getters.countrySelectList[0] || { value: '' }).value;\n    return {\n      checkedType: '',\n      loading: false,\n      isShowExportHistory: false,\n      shopIDSelectOptions: [],\n      categoryList: [],\n      searchForm: {\n        item_id: '',\n        sku_id: '',\n        shop_id: '',\n        country: defaultCountry,\n        status: '',\n        category_ids: [],\n        fbs_tag: '',\n        has_enable_whs_channels: '',\n        page_no: 1,\n        count: 10\n      },\n      lastSearchForm: {},\n      total: 0,\n      tableList: [],\n      checkedRows: [],\n      timer: {},\n      canSync: true,\n      canMassUpdate: false,\n      fbsTagCountry: []\n    };\n  },\n  created() {\n    this.canMassUpdate = hasPermission(Permission.SKU_DETAIL_LIFECYCLE_PROCESS) ||\n      hasPermission(Permission.EDIT_TAX_INFO);\n    this.onSearch();\n    if (this.searchForm.country) {\n      this.regionChange(this.searchForm.country);\n    }\n    this.getFbsCountry();\n  },\n  filters: {\n    filterFbsTag(val) {\n      return typeof val === 'number' ? (SkuListYesOrNo.find(i => i.value === val) || { label: '' }).label : '';\n    }\n  },\n  computed: {\n    checkedStyle() {\n      if (this.checkedType === 'all') {\n        return 'is-checked';\n      } else if (Array.isArray(this.checkedRows) && this.checkedRows.length > 0) {\n        if (this.checkedRows.length === this.total) {\n          return 'is-checked';\n        }\n        return 'is-indeterminate';\n      } else {\n        return '';\n      }\n    },\n    formatCheckedType() {\n      return this.checkedType === 'all' ? this.$t('commonAllPage') : this.$t('commonCurrentPage');\n    },\n    countryList() {\n      const noRepeatList = [...new Set([...this.$store.getters.countryList.map(item => item.country)])];\n      const formatList = noRepeatList.map(item => ({ label: item, value: item }));\n      return [{ label: 'All', value: '' }].concat(formatList);\n    },\n    canSearchStatus() {\n      const flag = this.searchForm.sku_id !== '' || this.searchForm.shop_id !== '' || this.searchForm.country !== '';\n      if (!flag) this.searchForm.status = '';\n      return flag;\n    },\n    hasFbsTag() {\n      return this.fbsTagCountry.includes(this.searchForm.country);\n    },\n    searchSchema() {\n      const baseForm = [\n        { type: 'select', width: 5, field: 'country', label: this.$t('commonRegion'), options: this.countryList },\n        { type: 'shopIDName', offset: 1, width: 5, field: 'shop_id', label: this.$t('skuMgtShopIDName'), options: this.shopIDSelectOptions },\n        { type: 'categoryName', offset: 1, width: 5, field: 'category_ids', label: this.$t('commonCategory'), options: this.categoryList, multiple: true, class: 'multiple-select-limit' },\n        { type: 'select', offset: 1, width: 5, field: 'cb_option', label: this.$t('skuMgtCBOption'), options: CBOptionList },\n        { type: 'select', width: 5, field: 'status', label: this.$t('skuMgtFEStatus'), options: FESKUStatus, disabled: !this.canSearchStatus },\n        { type: 'input', offset: 1, width: 5, field: 'sku_pattern', label: this.$t('skuMgtSkuItemID') },\n        { type: 'select', offset: 1, width: 5, field: 'has_virtual_sku', label: this.$t('skuVPITag'), options: VPITagOptions },\n        { type: 'select', offset: 1, width: 5, field: 'fbs_shop', label: this.$t('commonFbsShop'), options: FBSShopOptions}\n      ];\n      if (this.hasFbsTag) {\n        baseForm.push({ type: 'select', offset: 1, width: 5, field: 'fbs_tag', label: this.$t('skuMgtFulfillmentTag'), options: SkuListYesOrNo },\n          { type: 'select', offset: 1, width: 5, field: 'has_enable_whs_channels', label: this.$t('skuMgtWithWHSChannel'), options: SkuListYesOrNo });\n      }\n      return baseForm;\n    }\n  },\n  components: {\n    MassUpdateLifecycle, ExportHistoryDialog, categorySearch\n  },\n  methods: {\n    getFbsCountry() {\n      getFbsCountry().then(res => {\n        if (res.retcode === 0) {\n          this.fbsTagCountry = res.data.split(',');\n          this.fbsTagCountry.push(' ');\n        } else {\n          this.$message.error(res.info);\n        }\n      });\n    },\n    onChangeSelection(field, value) {\n      if (field === 'country') {\n        this.regionChange(value);\n      } else {\n        this.onResetPageNoSearch();\n      }\n    },\n    regionChange(region) {\n      this.searchForm.category_ids = [];\n      this.shopIDSelectOptions = [];\n      if (region) {\n        getCategoryList({ catids: 0, country: region, cs_status_list: 1 }).then(catResp => {\n          if (catResp.status !== 0) {\n            this.$message.error(catResp.info);\n          } else {\n            this.categoryList = catResp.data.cats || [];\n          }\n        });\n      } else {\n        this.categoryList = [];\n      }\n      this.onResetPageNoSearch();\n    },\n    showExportHistory() {\n      this.isShowExportHistory = true;\n    },\n    closeExportHistory() {\n      this.isShowExportHistory = false;\n    },\n    changeSelectPageType(type) {\n      this.checkedType = type;\n      this.checkedRows = this.tableList.map(item => item.sku_id);\n    },\n    resetCheckedType() {\n      this.checkedType = '';\n      this.checkedRows = [];\n    },\n    getShopIdName(query) {\n      if (query !== '') {\n        const params = {\n          search_type: 0,\n          shop_id_or_name: query,\n          page_no: 1,\n          count: 20\n        };\n        getShopListByIdOrName(params).then(res => {\n          if (res && res.retcode === 0) {\n            let shopListFilterCountry = res.data.shop_list;\n            if (this.searchForm.country) {\n              shopListFilterCountry = res.data.shop_list.filter(item => item.country === this.searchForm.country);\n            }\n            this.shopIDSelectOptions = shopListFilterCountry.map(item => ({ value: item.shop_id, label: `${item.shop_id}(${item.shop_name})` }));\n          }\n        }).catch(e => {\n          this.$message.error(e);\n        });\n      }\n    },\n    formatStatus(status) {\n      return (FESKUStatus.find(item => item.value === status) || {}).label;\n    },\n    formatFbsShop(status) {\n      return (FBSShopOptions.find(item => item.value === status) || {}).label;\n    },\n    formatCBOption(status) {\n      return (CBOptionList.find(item => item.value === status) || { label: '' }).label;\n    },\n    handleSizeChange(count) {\n      this.searchForm.count = count;\n      this.onSearch(false);\n    },\n    onResetPageNoSearch() {\n      this.searchForm.page_no = 1;\n      this.onSearch();\n    },\n    handleChangePage(page_no) {\n      this.searchForm.page_no = page_no;\n      this.onSearch(false);\n    },\n    onSelectionChange(val) {\n      this.checkedRows = val.map(item => item.sku_id);\n    },\n    onRowClick(row, column) {\n      if (column.columnKey !== 'action') {\n        this.$store.commit('setActiveTab', { module: 'skuManagement', tab: 'skuList' });\n        this.$store.commit('setSearchForm', {\n          module: 'skuManagement',\n          form: this.lastSearchForm,\n          field: 'skuList'\n        });\n        this.$router.push({ name: 'skuDetail', params: { id: row.sku_id } });\n      }\n    },\n    onReset() {\n      const resetList = ['sku_pattern', 'shop_id', 'country', 'status', 'cb_option', 'fbs_tag', 'has_enable_whs_channels', 'has_virtual_sku', 'fbs_shop'];\n      resetList.forEach(item => {\n        this.searchForm[item] = '';\n      });\n      this.searchForm.category_ids = [];\n      this.searchForm.page_no = 1;\n      this.categoryList = [];\n      this.onSearch();\n    },\n    onUpdateChannel() {\n      if (this.checkedRows.length < 1) {\n        this.$message({ type: 'warning', message: this.$t('commonPleaseChooseAtLeastOneOption') });\n        return;\n      }\n      let params = {};\n      if (this.checkedType !== 'all') {\n        params.sku_ids = this.checkedRows || [];\n      } else {\n        params = this.getParamsAfterFormat();\n      }\n      apiUpdateChannel(params).then(res => {\n        if (res.retcode === 0) {\n          this.$message.success(this.$t('commonSuccess'));\n          this.resetCheckedType();\n        } else {\n          this.$message.error(res.info);\n        }\n      }).catch(err => {\n        this.$message.error(err.message);\n      });\n    },\n    async onSync() {\n      if (this.checkedRows.length < 1) return;\n      if (!this.canSync) return this.$message.info(this.$t('skuMgt.repeatSyncTips'));\n      const opt = {\n        sku_ids: this.checkedRows || []\n      };\n      const res = await syncSku(opt);\n      this.commonFetchAction(res).then(() => {\n        this.canSync = false;\n        this.timer = setTimeout(() => {\n          this.canSync = true;\n          clearTimeout(this.timer);\n        }, 10 * 60 * 1000);\n      }).catch(e => {\n        this.$message({ type: 'error', message: e });\n      });\n    },\n    getParamsAfterFormat() {\n      return formatParams({\n        sku_pattern: this.searchForm.sku_pattern,\n        has_virtual_sku: this.searchForm.has_virtual_sku,\n        shop_id: this.searchForm.shop_id,\n        country: this.searchForm.country,\n        status: this.searchForm.status,\n        category_ids: this.searchForm.category_ids.join(','),\n        cb_option: this.searchForm.cb_option,\n        fbs_tag: this.searchForm.fbs_tag,\n        has_enable_whs_channels: this.searchForm.has_enable_whs_channels,\n        fbs_shop: this.searchForm.fbs_shop\n      });\n    },\n    async onExport() {\n      try {\n        if (this.checkedRows.length < 1) {\n          this.$message({ type: 'warning', message: this.$t('commonPleaseChooseAtLeastOneOption') });\n          return;\n        }\n        const opt = {\n          export_type: this.checkedType === 'all' ? 2 : 1\n        };\n        if (opt.export_type === 2) {\n          opt.sku_filter_params = this.getParamsAfterFormat();\n        } else {\n          opt.sku_id_list = this.checkedRows || [];\n        }\n        const resp = await exportSku(opt);\n        if (resp && resp.retcode === 0) {\n          this.$message({ type: 'success', message: this.$t('commonExportHistorySuccessTips') });\n        } else {\n          this.$message({ type: 'error', message: resp.info });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', messaeg: e });\n      }\n    },\n    commonFetchAction(res) {\n      if (res && res.retcode === 0) {\n        return Promise.resolve(res.data);\n      } else {\n        return Promise.reject(res.info || 'failed to connect network, pls try it again later');\n      }\n    },\n    async onSearch(resetType = true) {\n      const params = formatParams({\n        sku_pattern: this.searchForm.sku_pattern,\n        has_virtual_sku: this.searchForm.has_virtual_sku,\n        shop_id: this.searchForm.shop_id,\n        country: this.searchForm.country,\n        status: this.searchForm.status,\n        category_ids: this.searchForm.category_ids.join(','),\n        cb_option: this.searchForm.cb_option,\n        fbs_tag: this.searchForm.fbs_tag,\n        fbs_shop: this.searchForm.fbs_shop,\n        has_enable_whs_channels: this.searchForm.has_enable_whs_channels,\n        page_no: this.searchForm.page_no,\n        count: this.searchForm.count\n      });\n      this.loading = true;\n      if (resetType) {\n        this.resetCheckedType();\n      }\n      const res = await getSkuManagementList(params);\n      this.commonFetchAction(res).then(data => {\n        // 选中的是所有页的话，拿到数据后全部勾选\n        this.tableList = data.skus;\n        if (this.checkedType === 'all') {\n          this.checkedRows = this.tableList.map(item => item.sku_id);\n        }\n        this.total = data.total > 5000 ? 5000 : data.total;\n        this.lastSearchForm = params;\n        this.loading = false;\n      }).catch(e => {\n        this.loading = false;\n        this.$message({ type: 'error', message: e });\n      });\n    }\n\n  },\n  props: {\n    form: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  watch: {\n    '$props.form': {\n      handler(form) {\n        this.searchForm = { ...this.searchForm, ...form };\n        this.onSearch();\n      },\n      immediate: true\n    }\n  }\n};\n</script>\n<style lang=\"scss\">\n@import '~@/styles/common.scss';\n.sku-list-wrapper{\n  .select-page-dropdown {\n    padding: 0;\n    margin-left: -20px;\n    .el-button {\n      border: none;\n      background: unset;\n      display: inline-block;\n      padding: 10px 0 10px 3px;\n      color: #000;\n      &:nth-child(1) {\n        width: 20px;\n        padding: 0 10px 0 5px;\n      }\n      &::before {\n        width: 0;\n      }\n    }\n  }\n  .multiple-select-limit {\n    .el-select__tags {\n      .el-tag {\n        max-width: calc(100% - 80px);\n        overflow: hidden;\n        text-overflow: ellipsis;\n      }\n    }\n  }\n}\n</style>\n<style lang=\"scss\" scoped>\n  .disabled{\n    background-color: #ccc;\n  }\n.right-action-btn {\n  float: right;\n}\n.update-channel {\n  width: 120px;\n}\n.pagination-center {\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n}\n.is-default{\n  width: 4em;\n  font-size: 16px;\n}\n.is-deprecated{\n  width: 5em;\n  font-size: 16px;\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/skuManagement/unhealthySkuDetail.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/statementManagement/actionLog.vue","messages":[{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"st_id\" is not in camelCase.","line":64,"column":5,"nodeType":"Property","endLine":66,"endColumn":6}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-dialog\n    :visible.sync=\"dialogVisible\"\n    width=\"800px\"\n    lock-scroll\n    custom-class=\"pms-dialog\"\n    :title=\"$t('commonActionLog')\"\n    @close=\"onClose\"\n  >\n    <section v-loading=\"loading\" class=\"log-item-wrapper pms-log-table\">\n      <div v-if=\"tableList.length\">\n        <div class=\"log-item\" v-for=\"(log, index) in tableList\" :key=\"index\">\n          <span class=\"log-item-operator\">{{log.operator || 'N/A'}}</span>\n          <span class=\"log-item-time\">{{moment(log.ctime * 1000).format('YYYY-MM-DD HH:mm')}}</span>\n          <el-table class=\"log-table\" :data=\"log.change_list\">\n            <el-table-column :label=\"$t('commonLogContent')\">\n              <template slot-scope=\"scope\">\n                <span class=\"log-field\">{{scope.row.field}}</span>\n                <span\n                  class=\"log-action\"\n                  :class=\"{'red': scope.row.action === 3}\"\n                >{{formatAction(scope.row.action)}}</span>\n              </template>\n            </el-table-column>\n            <el-table-column :label=\"$t('commonLogBefore')\">\n              <template\n                slot-scope=\"scope\"\n              >{{scope.row.before === -1 || scope.row.before === ''? 'N/A' : scope.row.before}}</template>\n            </el-table-column>\n            <el-table-column :label=\"$t('commonLogAfter')\">\n              <template\n                slot-scope=\"scope\"\n              >{{scope.row.after === -1 || scope.row.after === '' ? 'N/A' : scope.row.after}}</template>\n            </el-table-column>\n          </el-table>\n        </div>\n      </div>\n      <div v-else class=\"no-data\">{{$t('commonNoData')}}</div>\n    </section>\n    <section slot=\"footer\">\n      <el-pagination\n        small\n        layout=\"slot, prev, next\"\n        background\n        :total=\"total\"\n        :page-size=\"pager.count\"\n        @current-change=\"handleCurrentChange\"\n        class=\"pms-ele-ui pms-pagination pms-float-left\"\n      >\n        <span class=\"pagination-info\">{{$t('commonPagination', { firstItem, lastItem, total})}}</span>\n      </el-pagination>\n      <el-button class=\"list-btn\" @click=\"onClose\">{{$t('commonOK')}}</el-button>\n    </section>\n  </el-dialog>\n</template>\n\n<script>\nimport { getStatementActionLog } from '@/api/statementManagement';\nimport { crReportActions } from '@/utils/constant';\nimport moment from 'moment';\n\nexport default {\n  props: {\n    st_id: {\n      required: true\n    },\n    visible: {\n      type: Boolean,\n      required: true,\n      default: false\n    }\n  },\n  data() {\n    return {\n      pager: {\n        count: 10,\n        page_no: 1\n      },\n      total: 0,\n      dialogVisible: false,\n      tableList: [],\n      loading: false\n    };\n  },\n  watch: {\n    visible(value) {\n      this.dialogVisible = value;\n      if (value) {\n        this.getActionLog();\n      }\n    }\n  },\n  computed: {\n    firstItem() {\n      return this.pager.count * (this.pager.page_no - 1) + 1;\n    },\n    lastItem() {\n      return (\n        this.pager.count * (this.pager.page_no - 1) + this.tableList.length\n      );\n    }\n  },\n  methods: {\n    moment,\n    formatAction(action) {\n      const output = (\n        crReportActions.find(item => item.value === action) || {\n          label: ''\n        }\n      ).label;\n      if (output) {\n        return this.$t(output);\n      } else {\n        return '';\n      }\n    },\n    handleCurrentChange(index) {\n      this.pager.page_no = index;\n      this.getActionLog();\n    },\n    async getActionLog() {\n      try {\n        this.loading = true;\n        const params = {\n          st_id: this.st_id,\n          ...this.pager\n        };\n        const res = await getStatementActionLog(params);\n        if (res && res.retcode === 0) {\n          this.tableList = res.data.action_log_list || [];\n          this.total = res.data.total;\n        } else {\n          this.$message({ type: 'error', message: res.info });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loading = false;\n      }\n    },\n    onClose() {\n      this.$emit('close');\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n@import \"~@/styles/variables.scss\";\n.log-item-wrapper {\n  max-height: 500px;\n  overflow: auto;\n  .log-item {\n    font-size: 14px;\n    margin-top: 24px;\n    &:first-child {\n      margin-top: 0;\n    }\n    .log-item-creation {\n      font-weight: bold;\n      color: $black;\n    }\n    .log-item-operator,\n    .log-item-time {\n      color: rgba(51, 51, 51, 0.65);\n    }\n    .log-item-time {\n      margin-left: 4px;\n    }\n    .log-table {\n      margin-top: 8px;\n    }\n    .log-action {\n      font-size: 12px;\n      color: #55cc77;\n      padding: 4px;\n      margin-left: 8px;\n      background: #ebf9ef;\n      border-radius: 2px;\n      border-radius: 2px;\n      &.red {\n        color: #ee4d2d;\n        background: #fff1f0;\n      }\n    }\n  }\n}\n</style>\n<style lang=\"scss\">\n@import \"~@/styles/common.scss\"; // ~@ = @ = 'src' webpack alias path\n.pms-dialog {\n  .el-dialog__body {\n    padding: 8px 24px 16px;\n  }\n}\n.pms-log-table {\n  .el-table {\n    .el-table__header-wrapper {\n      th {\n        height: 54px;\n        background-color: #f5f5f5;\n        font-size: 14px;\n        line-height: 1.5em;\n        font-weight: normal;\n        .cell {\n          word-break: break-word;\n        }\n      }\n    }\n    .el-table__body {\n      td {\n        height: 70px;\n        .cell {\n          word-break: break-word;\n        }\n      }\n    }\n  }\n  .no-data {\n    height: 50px;\n    line-height: 50px;\n    text-align: center;\n    color: #757575;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/statementManagement/common/formatSearchForm.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/statementManagement/detail.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/statementManagement/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/statementManagement/list/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/stockAdjustment/list.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/stockAdjustment/rejectDialog.vue","messages":[{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":7,"column":13,"nodeType":"ThisExpression","endLine":7,"endColumn":17}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-dialog\n    :visible.sync=\"dialogVisible\"\n    width=\"500px\"\n    lock-scroll\n    custom-class=\"pms-new-ui pms-dialog\"\n    :title=\"this.$t('commonConformToRejectIt')\"\n    @close=\"onClose\"\n  >\n    <el-form :model=\"form\" label-width=\"120px\" ref=\"form\">\n      <el-form-item :label=\"$t('commonRejectReason')\" prop=\"rejectReason\" :rules=\"{ message: 'Reject reason is required', trigger: 'blur', required: true }\" message=\"\">\n        <el-input type=\"textarea\" v-model=\"form.rejectReason\" :maxlength=\"100\" show-word-limit ></el-input>\n      </el-form-item>\n    </el-form>\n    <section slot=\"footer\">\n      <el-button class=\"white-blue\" @click=\"onClose\">{{ $t('commonCancel') }}</el-button>\n      <el-button @click=\"onConfirm\">{{ $t('commonConfirm') }}</el-button>\n    </section>\n  </el-dialog>\n</template>\n\n<script>\n\nexport default {\n  props: {\n    visible: {\n      type: Boolean,\n      required: true,\n      default: false\n    }\n  },\n  data() {\n    return {\n      form: {\n        rejectReason: ''\n      },\n      dialogVisible: false\n    };\n  },\n  watch: {\n    visible: {\n      handler(value) {\n        this.dialogVisible = value;\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    onClose() {\n      this.$emit('close');\n    },\n    onConfirm() {\n      this.$refs.form.validate((isPass) => {\n        if (isPass) {\n          this.$emit('confirm', this.form.rejectReason);\n        }\n      });\n    }\n  }\n};\n</script>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/stockAdjustment/stockAdjustmentDetail.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/subFeeManagement/common/validate.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/subFeeManagement/common/validateMixin.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/subFeeManagement/create/actionLog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/subFeeManagement/create/addPoDialog.vue","messages":[{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":21,"column":54,"nodeType":"ThisExpression","endLine":21,"endColumn":58},{"ruleId":"vue/require-valid-default-prop","severity":2,"message":"Type of the default value for 'basicForm' prop must be a function.","line":47,"column":16,"nodeType":"Literal","endLine":47,"endColumn":20}],"errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"add-po-dialog pms-ele-ui\">\n    <el-dialog :close-on-click-modal=\"false\" :title=\"$t('addPo')\" :visible.sync=\"addPoVisible\" width=\"800px\" height=\"600px\" @close=\"closeDialog\">\n      <search-form @modify=\"modifyForm\" :schemaList=\"schemaList\" :form=\"searchForm\" @search=\"onSearch\"></search-form>\n      <list-view\n        v-if=\"addPoVisible\"\n        class=\"po-list\"\n        v-loading=\"loading\"\n        :dataList=\"poInboundList\"\n        :config=\"tableConfig\"\n        :tableSchema=\"tableSchema\"\n        @selectionChange=\"onSelectionChange\">\n      </list-view>\n      <!-- 分页 -->\n      <el-pagination\n        :current-page=\"Pager.pageIndex\" background layout=\"sizes, prev, pager, next\" :total.sync=\"Pager.total\"\n        :page-size=\"Pager.size\" :page-sizes=\"[10, 20, 50, 100]\"\n        @current-change=\"handleCurrentChange\" @size-change=\"handlePagerChange\"\n      ></el-pagination>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <div class=\"select-info\"><span class=\"num\">{{this.selectedTables.length}}</span><span>{{showOrderType}} {{$t(`commonSelected`)}}</span></div>\n        <el-button @click=\"closeDialog\">{{$t('commonCancel')}}</el-button>\n        <el-button class=\"list-btn confirm-btn\" @click=\"confirmDialog\">{{$t('commonConfirm')}}</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport SearchForm from './search';\nimport { getSelectOptions } from '@/components/BaseItem/formItem';\nimport { getSupplierList } from '@/api/supplier';\nimport { getPoListSearch } from '@/api/purchaseOrder';\nimport ListView from '@/components/ApproveList/list';\nimport { PurchaseOrderStatus, InboundRequestStatus } from '@/utils/constant';\nimport { formatParams } from '@/utils/formatParams';\nconst ORDER_TYPE = [{ label: 'PO', value: 1 }, { label: 'Inbound', value: 2 }];\n\nexport default {\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    basicForm: {\n      type: Object,\n      default: true\n    }\n  },\n  data() {\n    return {\n      searchForm: {\n        inbound_date: [],\n        submission_time: [],\n        status: '',\n        order_id: '',\n        po_type: 1,\n        supplier_id: '',\n        cacheSupplier: '',\n        status_list: ''\n      },\n      poInboundList: [],\n      loading: false,\n      tableConfig: {\n        align: 'center',\n        showCheckBox: true,\n        maxHeight: '322px'\n      },\n      selectedTables: [],\n      Pager: {\n        pageIndex: 1,\n        size: 10,\n        total: 0\n      },\n      addPoVisible: false\n    };\n  },\n  components: {\n    SearchForm,\n    ListView\n  },\n  computed: {\n    showOrderType() {\n      return (ORDER_TYPE.find(item => item.value === this.searchForm.po_type) || {}).label;\n    },\n    isPoType() {\n      return this.searchForm.po_type === 1;\n    },\n    tableSchema() {\n      const tableList = [\n        { field: 'order_id', label: this.$t('commonOrderID') },\n        { field: 'supplier_id', label: this.$t('commonVendorSiteID') },\n        { field: 'status', label: this.$t('commonStatus'), render: (schema, row) => {\n          if (this.searchForm.po_type === 1) {\n            return (PurchaseOrderStatus.find(item => item.value === row[schema.field]) || {}).label;\n          } else {\n            return (InboundRequestStatus.find(item => item.value === row[schema.field]) || {}).label;\n          }\n        }\n        }\n      ];\n      return tableList;\n    },\n    countryList() {\n      return [...new Set([...this.$store.getters.countryList.map(item => item.country)])];\n    },\n    schemaList() {\n      return [\n        // status  po_type supplier_id  order_id start_expected_inbound_date end_expected_inbound_date  Submission Time 是什么？ ctime_left ctime_right\n        { field: 'po_type', type: 'select', label: this.$t('orderType'),\n          getChildren: (h) => {\n            return getSelectOptions(ORDER_TYPE, h);\n          },\n          on: {\n            change: (val) => {\n              this.changeType();\n              this.onSearch();\n            }\n          }\n        },\n        { field: 'supplier_id', type: 'autocomplete', labelWidth: '216px', width: 8,\n          label: `${this.$t('commonVendorSiteID')}`,\n          on: {\n            blur: this.onSupplierBlur,\n            select: this.onSupplierSelect\n          },\n          class: {\n            'supplier-id': true\n          },\n          props: {\n            placeholder: 'Please Input',\n            'trigger-on-focus': false,\n            'value-key': 'value',\n            'fetch-suggestions': (value, callback) => this.getSuppliers(value, callback)\n          }\n        },\n        { field: 'order_id', type: 'input', label: this.$t('commonOrderID'),\n          attrs: {\n            placeholder: 'Please Input'\n          }\n        },\n        // PO 状态下的 status\n        { field: 'status', type: 'select', label: this.$t('commonStatus'),\n          getChildren: (h) => {\n            return getSelectOptions(([{ label: 'All', value: '' }]).concat(PurchaseOrderStatus), h);\n          },\n          on: { change: () => this.onSearch() },\n          hidden: !this.isPoType\n        },\n        // Inbound 状态下的 status\n        { field: 'status_list', type: 'select', label: this.$t('commonStatus'),\n          getChildren: (h) => {\n            return getSelectOptions([{ label: 'All', value: '' }].concat(InboundRequestStatus), h);\n          },\n          on: { change: () => this.onSearch() },\n          hidden: this.isPoType\n        },\n        { field: 'inbound_date', widthClass: 'long-col', type: 'date-picker', label: this.$t('expectInboundTime'),\n          props: {\n            type: 'daterange',\n            rangeSeparator: 'to',\n            startPlaceholder: 'Begin',\n            endPlaceholder: 'End',\n            placeholder: 'Please Select',\n            valueFormat: 'yyyy-MM-dd'\n          }\n        },\n        { field: 'submission_time', widthClass: 'long-col', type: 'date-picker', label: this.$t('submissionTime'),\n          props: {\n            type: 'daterange',\n            rangeSeparator: 'to',\n            startPlaceholder: 'Begin',\n            endPlaceholder: 'End',\n            placeholder: 'Please Select',\n            valueFormat: 'yyyy-MM-dd'\n          }\n        }\n      ].filter(item => !item.hidden);\n    }\n  },\n  watch: {\n    visible(newVal) {\n      this.addPoVisible = newVal;\n    }\n  },\n  methods: {\n    changeType() {\n      this.schemaList.forEach(schema => {\n        if (schema.field !== 'po_type') {\n          this.searchForm[schema.field] = schema.defaultValue === null ? undefined : schema.defaultValue || '';\n        }\n      });\n    },\n    closeDialog() {\n      this.$emit('close');\n    },\n    confirmDialog() {\n      this.$emit('confirm', this.selectedTables);\n    },\n    onSelectionChange(val) {\n      this.selectedTables = val;\n    },\n    handleCurrentChange(page) {\n      this.Pager.pageIndex = page || this.Pager.pageIndex;\n      this.onSearch(this.Pager.pageIndex);\n    },\n    handlePagerChange(size) {\n      this.Pager.size = size || this.Pager.size;\n      this.onSearch();\n    },\n    getSearchParams(pageIndex) {\n      const result = {};\n      this.Pager.pageIndex = typeof pageIndex === 'number' ? pageIndex : 1;\n      result.count = this.Pager.size;\n      result.page_no = this.Pager.pageIndex;\n      if (Array.isArray(this.searchForm.inbound_date) && this.searchForm.inbound_date.length > 0) {\n        result.start_expected_inbound_time = `${this.searchForm.inbound_date[0]} 00:00:00`;\n        result.end_expected_inbound_time = `${this.searchForm.inbound_date[1]} 23:59:59`;\n      }\n      if (Array.isArray(this.searchForm.submission_time) && this.searchForm.submission_time.length > 0) {\n        result.start_submission_time = `${this.searchForm.submission_time[0]} 00:00:00`;\n        result.end_submission_time = `${this.searchForm.submission_time[1]} 23:59:59`;\n      }\n      if (this.isPoType) {\n        if (this.searchForm.status) {\n          result.status = this.searchForm.status;\n        }\n      } else {\n        result.status_list = this.searchForm.status_list ? [this.searchForm.status_list] : InboundRequestStatus.map(item => item.value);\n      }\n      result.order_id = this.searchForm.order_id;\n      result.po_type = this.searchForm.po_type;\n      result.supplier_id = this.searchForm.supplier_id;\n      result.region = this.basicForm.region;\n      return result;\n    },\n    onSearch(pageIndex) {\n      this.loading = true;\n      const params = formatParams(this.getSearchParams(pageIndex));\n\n      getPoListSearch(params).then(res => {\n        if (res.retcode === 0) {\n          this.poInboundList = res.data.po_list;\n          this.Pager.total = res.data.total || 0;\n        } else {\n          this.$message.error(res.info);\n          this.Pager.total = 0;\n        }\n      }).catch(() => {\n        this.$message.error('Get PO / Inbound Request List failed');\n      }).finally(() => {\n        this.loading = false;\n      });\n    },\n    getSuppliers(value, callback) {\n      const params = { pageno: 1, count: 20, key: `${value}`.trim(), approval_country: this.countryList.join('_') };\n      getSupplierList(params).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          const { list = [] } = resp.data || {};\n          if (Array.isArray(list) && list.length) {\n            return callback(list.map(item => ({ ...item, value: `${item.supplier_id}` })));\n          } else {\n            this.$message.error('This Supplier ID is not exist');\n          }\n        }\n        callback([]);\n      }).catch(() => {\n        this.$message.error('Get Supplier Failed');\n        callback([]);\n      });\n    },\n    modifyForm(field, value) {\n      this.searchForm[field] = value;\n    },\n    onSupplierBlur() {\n      if (this.searchForm.cacheSupplier !== this.searchForm.supplier_id) {\n        this.$set(this.searchForm, 'cacheSupplier', '');\n        this.$set(this.searchForm, 'supplier_id', '');\n      }\n    },\n    onSupplierSelect(item) {\n      this.searchForm.cacheSupplier = item.supplier_id;\n      this.searchForm.supplier_id = item.value;\n      this.onSearch();\n    }\n  },\n  created() {\n    this.onSearch();\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import '~@/styles/common.scss';\n.add-po-dialog {\n  .el-dialog__body {\n    padding: 0 20px;\n  }\n  .el-dialog__header {\n    padding: 10px 20px 0;\n  }\n  .el-pagination {\n    text-align: center;\n    margin-top: 10px;\n  }\n  .select-info {\n    display: inline-block;\n    margin-right: 20px;\n    font-family: Roboto-Regular;\n    font-size: 14px;\n    color: #303844;\n    .num {\n      color: #3D6ED1;\n      margin: 0 5px;\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/subFeeManagement/create/bulkyDefinition.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/subFeeManagement/create/campaignFee.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/subFeeManagement/create/categoryDiscount.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/subFeeManagement/create/chargingDefinitionTab.vue","messages":[{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":9,"column":31,"nodeType":"ThisExpression","endLine":9,"endColumn":35},{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":9,"column":61,"nodeType":"ThisExpression","endLine":9,"endColumn":65}],"errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"charging-definition-table\">\n    <div class=\"title\">Charging Definition</div>\n    <div class=\"tabs\">\n      <span class=\"tab\" v-for=\"tab in tabs\" :key=\"tab.id\" @click=\"handleTab(tab)\"\n      :class=\"{ 'active': tab.id === activeTab}\">{{$t(tab.text)}}</span>\n    </div>\n    <section class=\"tab\">\n      <circular-tier :config=\"this.optionConfig\" :canEdit=\"!this.isDetailMode\"\n        :list=\"getListByTab\" ></circular-tier>\n    </section>\n  </div>\n</template>\n\n<script>\nimport CircularTier from './circularTier';\n\nexport default {\n  name: 'ChargingDefinitionTab',\n  components: { CircularTier },\n  props: {\n    bulkyRuleList: {\n      type: Array,\n      default: () => ([])\n    },\n    nonBulkyRuleList: {\n      type: Array,\n      default: () => ([])\n    },\n    isDetailMode: {\n      type: Boolean,\n      default: false\n    },\n    optionConfig: {\n      type: Object,\n      required: true,\n      default: () => ({})\n    }\n  },\n  data() {\n    return {\n      tabs: [{\n        id: 'bulky',\n        text: 'Bulky'\n      }, {\n        id: 'non-bulky',\n        text: 'nonBulky'\n      }],\n      activeTab: 'bulky'\n    };\n  },\n  computed: {\n    getListByTab() {\n      const result = {\n        'bulky': this.bulkyRuleList,\n        'non-bulky': this.nonBulkyRuleList\n      };\n      return result[this.activeTab];\n    }\n  },\n  methods: {\n    handleTab(tab) {\n      this.activeTab = tab.id;\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.charging-definition-table {\n  .title {\n    padding: 20px 0px 10px;\n  }\n  .tabs {\n    display: flex;\n    .tab {\n      display: block;\n      width: 100px;\n      padding: 8px;\n      border: 1px solid #ccc;\n      border-radius: 5px 5px 0 0;\n      border-bottom: none;\n      text-align: center;\n      margin: 0 5px;\n      background: #f0f3fa;\n    }\n    .tab.active {\n      background: #ffffff;\n      color: #3D62D1;\n      font-weight: bold;\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/subFeeManagement/create/circularTier.vue","messages":[{"ruleId":"vue/no-use-v-if-with-v-for","severity":2,"message":"This 'v-if' should be moved to the wrapper element.","line":13,"column":75,"nodeType":"VAttribute","endLine":13,"endColumn":97}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-form>\n    <!-- 编辑态 -->\n    <ul v-if=\"canEdit\" class=\"sub-fee-rule-list\">\n      <!-- 行头 -->\n      <li class=\"rule-row rule-title\">\n        <div class=\"cell-no\">No.</div>\n        <div class=\"cell-input-y\">{{config.titleConfig.y}}</div>\n        <div class=\"cell-input-value\">{{config.titleConfig.fee}}</div>\n        <div class=\"cell-action\"></div>\n      </li>\n      <!-- 规则表格内容 -->\n      <li v-for=\"(rule, index) in ruleList\" :key=\"index\" class=\"rule-row\" v-if=\"ruleList.length\">\n        <div class=\"cell-no\">\n          <section class=\"cell-row cell-input-bottom\">{{ index + 1 }}</section>\n        </div>\n        <!-- Y轴 -->\n        <div class=\"cell-input-y\">\n          <section class=\"cell-row cell-input-bottom\">\n            <span class=\"circular-text\">{{ rule.is_circular_tier ? 'Repeat every ' : config.titleConfig.circularText }}</span>\n            <el-input-number :precision=\"config.titleConfig.yPrecision === 0 ? 0 : 2\" v-model=\"rule.on_day\"\n              class=\"cell-row-left\" :controls=\"false\"></el-input-number>\n            <span class=\"circular-text\">{{ rule.is_circular_tier ? ' Days' : '' }}</span>\n          </section>\n        </div>\n        <div class=\"cell-input-value\" :class=\"`cell-input-value ${hasMultiFee ? 'cell-multi-fee' : ''}`\">\n          <section v-if=\"!hasMultiFee\" class=\"cell-row cell-input-bottom\">\n            <el-input-number :precision=\"2\" :min=\"0\" v-model=\"rule.fee\" :controls=\"false\"></el-input-number>\n          </section>\n          <section v-else class=\"cell-row cell-input-bottom cb-fee-setting\">\n            <multi-per-sku-fee :multiPerSkuFee=\"rule.multi_fee\" :optionConfig=\"config\" :isDetailMode=\"!canEdit\"></multi-per-sku-fee>\n          </section>\n        </div>\n        <div class=\"cell-action\">\n          <i @click=\"removeOption(index)\" class=\"el-icon-error delete-icon\"></i>\n        </div>\n      </li>\n      <el-popover popper-class=\"circular-tier\"\n        placement=\"bottom\"\n        trigger=\"hover\"\n        v-if=\"!hasCircularTier\">\n        <p class=\"tier-btn\" @click=\"addOption(false)\">Fixed Tier</p>\n        <p class=\"tier-btn\" @click=\"addOption(true)\">Circular Tier</p>\n        <li  class=\"add-rule\" slot=\"reference\">\n          <i class=\"el-icon-circle-plus-outline add-icon\"></i>\n          <span class=\"add-text\">Add New</span>\n        </li>\n      </el-popover>\n    </ul>\n    <!-- 查看态 -->\n    <el-table :data=\"ruleList\" v-else class=\"rule-table-list\" border>\n      <el-table-column width=\"40px\" type=\"index\" :label=\"`No.`\"></el-table-column>\n      <el-table-column min-width=\"160px\" prop=\"on_day\" :label=\"config.titleConfig.y\">\n        <template slot-scope=\"scope\">\n          <span class=\"circular-text\">{{ scope.row.is_circular_tier ? 'Repeat every ' : config.titleConfig.circularText }}</span>\n          <span>{{scope.row.on_day}}</span>\n          <span class=\"circular-text\">{{ scope.row.is_circular_tier ? ' Days' : '' }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column :min-width=\"`${hasMultiFee ? '300px' : '160px'}`\" prop=\"fee\" :label=\"config.titleConfig.fee\">\n        <template slot-scope=\"scope\">\n          <div>\n            <span v-if=\"!hasMultiFee || !scope.row.multi_fee\">{{scope.row.fee}}</span>\n            <div v-else>\n              <multi-per-sku-fee :multiPerSkuFee=\"scope.row.multi_fee\" :optionConfig=\"config\" :isDetailMode=\"!canEdit\"></multi-per-sku-fee>\n            </div>\n          </div>\n        </template>\n      </el-table-column>\n    </el-table>\n  </el-form>\n</template>\n\n<script>\nimport MultiPerSkuFee from './multiPerSkuFee';\nexport default {\n  name: 'CircularTier',\n  data() {\n    return {\n      ruleList: []\n    };\n  },\n  components: { MultiPerSkuFee },\n  props: {\n    list: {\n      type: Array,\n      required: true\n    },\n    canEdit: {\n      type: Boolean,\n      default: true\n    },\n    config: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  watch: {\n    list: {\n      handler(curr = []) {\n        this.ruleList = curr;\n      },\n      immediate: true\n    }\n  },\n  computed: {\n    hasCircularTier() {\n      return this.ruleList.some(item => item.is_circular_tier);\n    },\n    hasMultiFee() {\n      return this.config.hasMultiFee;\n    }\n  },\n  methods: {\n    addOption(isCircularTier) {\n      const rule = {\n        on_day: undefined,\n        fee: undefined,\n        is_circular_tier: isCircularTier\n      };\n      if (this.hasMultiFee) {\n        rule.multi_fee = { 'ShopeeNominated': undefined, 'SellerNominated': undefined,\n          'SellerShippedExtra': undefined, 'NA': undefined };\n      }\n      this.ruleList.push(rule);\n      this.$emit('modify', this.ruleList);\n    },\n    removeOption(index) {\n      this.ruleList.splice(index, 1);\n      this.$emit('modify', this.ruleList);\n    },\n    formatXLabel(row) {\n      const end = !row.dimension_x_end || row.dimension_x_end === -1 ? 'Infinity' : row.dimension_x_end;\n      return `${row.dimension_x_start}-${end} (${end})`;\n    },\n    formatYLabel(row) {\n      const end = !row.dimension_y_end || row.dimension_y_end === -1 ? 'Infinity' : row.dimension_y_end;\n      return `${row.dimension_y_start}-${end} (${end})`;\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  .sub-fee-rule-list {\n    margin-top: 5px;\n    border: 1px solid #F1F2F5;\n    color: #333333;\n    .rule-row {\n      display: flex;\n      padding: 0 13px;\n      border-bottom: 1px solid #F1F2F5;\n      font-size: 12px;\n      color: #333333;\n      flex-wrap: nowrap;\n      align-items: center;\n      .cell-no {\n        width: 22px;\n        margin-right: 17px;\n        font-size: 12px;\n      }\n      .cell-input-top {\n        display: flex;\n        align-items: center;\n        width: 100%;\n        height: 34px;\n        line-height: 34px;\n      }\n      .cell-input-bottom {\n        display: flex;\n        // width: 100%;\n        margin-top: 11px;\n        margin-bottom: 11px;\n        align-items: center;\n        // height: 32px;\n        // line-height: 32px;\n      }\n      .cell-input-connector {\n        margin: 0 36px 0 0;\n        width: 68px;\n      }\n      .cell-row {\n        display: flex;\n        .circular-text {\n          margin: 0 5px;\n        }\n        .cell-row-left, .cell-row-right {\n          width: 118px;\n        }\n        .cell-row-connector {\n          width: 21px;\n          text-align: center;\n        }\n        .right-tips {\n          cursor: pointer;\n          font-size: 12px;\n          color: #A1A1A1;\n        }\n      }\n      .el-input-number {\n        width: 118px;\n        height: 32px;\n        line-height: 32px;\n        font-size: 14px;\n        color: #333333;\n      }\n      .el-select {\n        width: 68px;\n      }\n      .cell-input-x, .cell-input-y {\n        width: 293px;\n      }\n      // .cell-input-value {\n      //   width: 118px;\n      // }\n      .cell-multi-fee {\n        width: 360px;\n        .cb-fee-setting {\n          width: 100%;\n          height: auto;\n          flex-wrap: wrap;\n          .cb-fee-section {\n            width: 100%;\n            margin-bottom: 10px;\n          }\n        }\n      }\n      .cell-action {\n        // display: flex;\n        margin-left: 8px;\n        // padding: 34px 0 11px;\n        // align-items: center;\n        .delete-icon {\n          font-size: 18px;\n          color: #C0C4CC;\n          cursor: pointer;\n        }\n      }\n    }\n    .rule-title {\n      height: 32px;\n      line-height: 32px;\n      background: #F1F2F5;\n      font-size: 12px;\n      font-weight: bold;\n      color: rgba(51,51,51,0.80);\n    }\n    .add-rule {\n      display: flex;\n      width: fit-content;\n      align-items: center;\n      height: 40px;\n      padding-left: 14px;\n      cursor: pointer;\n      .add-icon {\n        font-size: 16px;\n        color: #3D62D1;\n      }\n      .add-text {\n        margin-left: 7px;\n        font-size: 14px;\n        color: #3D62D1;\n      }\n    }\n  }\n  .rule-table-list {\n    margin-top: 8px;\n  }\n</style>\n\n<style lang=\"scss\">\n  .add-sub-fee .sub-fee-rule-list .rule-row {\n    .el-input-number .el-input__inner {\n      padding-left: 9px;\n      padding-right: 9px;\n      text-align: left;\n    }\n  }\n  .circular-tier .tier-btn:hover {\n    cursor: pointer;\n    color: #3D62D1;\n    padding: 2px;\n  }\n  .add-sub-fee .rule-table-list {\n    .cell {\n      color: #A0A0A0;\n    }\n    th > .cell {\n      font-weight: bold;\n    }\n    .logic-cell {\n      font-weight: bold;\n    }\n  }\n  .sub-fee-rule-tips-popover {\n    max-width: 240px;\n    padding: 16px;\n    transform: translateY(2px);\n    color: #333333;\n    font-size: 14px;\n    line-height: 18px;\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/subFeeManagement/create/freePo.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/subFeeManagement/create/index.vue","messages":[{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":42,"column":34,"nodeType":"ThisExpression","endLine":42,"endColumn":38},{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":42,"column":57,"nodeType":"ThisExpression","endLine":42,"endColumn":61},{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":43,"column":52,"nodeType":"ThisExpression","endLine":43,"endColumn":56}],"errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"pms-ui add-sub-fee\">\n    <!-- 头部区域：返回以及按钮等 -->\n    <section class=\"create-header\">\n      <i @click=\"goBack\" class=\"el-icon-arrow-left back-icon\"></i>\n      <span class=\"title\">\n        {{`${mode === 'create' ? 'New Sub Fee' : basicForm.sub_fee_name}`}}\n        <span v-if=\"mode !== 'create'\" :class=\"`pms-status-tag pms-status-tag-${isActive ? 'active' : 'inactive'}`\">\n        {{isActive ? $t('CRTStatusActive') : $t('CRTStatusInactive')}}</span>\n      </span>\n      <div v-if=\"mode === 'create'\" class=\"right-action\">\n        <el-button @click=\"goBack\" :loading=\"loading\" class=\"clear-btn cancel-btn list-btn\">{{$t('commonCancel')}}</el-button>\n        <el-button @click=\"submitSubFee\" :loading=\"loading\" class=\"submit-btn list-btn\">{{$t('commonSubmit')}}</el-button>\n      </div>\n      <div v-else-if=\"mode === 'edit'\" class=\"right-action\">\n        <el-button @click=\"changeSubFeeStatus\" v-if=\"canEdit && !editing\" :loading=\"loading\"\n          :class=\"`${!isActive ? 'active' : 'inactive'}-btn list-btn`\">{{isActive ? $t('CRTStatusInactive') : $t('CRTStatusActive')}}</el-button>\n        <el-button v-if=\"isDetailMode\" @click=\"showActionLog\" class=\"action-log-btn list-btn\">{{$t('commonActionLog')}}</el-button>\n        <el-button @click=\"editSubFee\" v-if=\"!editing && canEdit\" :loading=\"loading\" class=\"submit-btn list-btn\">{{$t('commonEdit')}}</el-button>\n        <el-button @click=\"cancelEditSubFee\" v-if=\"editing && canEdit\" :loading=\"loading\" class=\"clear-btn cancel-btn list-btn\">{{$t('commonCancel')}}</el-button>\n        <el-button @click=\"saveSubFee\" v-if=\"editing && canEdit\" :loading=\"loading\" class=\"submit-btn list-btn\">{{$t('commonSave')}}</el-button>\n      </div>\n    </section>\n    <section class=\"gap-line\"></section>\n    <section class=\"main\">\n      <!-- 基础表单 -->\n      <el-form label-position=\"left\" class=\"sub-fee-form\" ref=\"SubFeeForm\" :model=\"basicForm\" :rules=\"basicRules\" label-width=\"180px\">\n        <el-row class=\"form-row\" v-for='item in basicSchema' :key='item.field' :span=\"item.width || 24\" :offset=\"item.offset || 0\">\n          <el-form-item :required=\"isDetailMode ? false : item.required\" :prop=\"item.field\" :label=\"`${item.label} :`\">\n            <pms-form-item @input=\"modifyForm\" :renderData=\"{ schema: item, form: basicForm }\"></pms-form-item>\n            <span class=\"black-stock\" v-if=\"item.field === 'option' && subFeeBlackStockLimitOn\">\n              {{$t('subFeeBlackStockLimitOn')}}\n              <el-popover\n                placement=\"top-start\"\n                trigger=\"hover\"\n                :content=\"$t('subFeeBlackStockLimitTip')\">\n                <svg-icon slot=\"reference\" icon-class=\"question\" class=\"el-icon-question right-tips\"></svg-icon>\n              </el-popover>\n            </span>\n          </el-form-item>\n        </el-row>\n        <div v-if=\"optionTextMap[this.currentOption] && this.isShowText\" class=\"text-list\">\n          <p v-for=\"(item, index) in optionTextMap[this.currentOption]\" :key=\"item + index\">{{$t(item)}}</p></div>\n        <!-- 根据基础表单不同的组合展示不同的内容 -->\n        <el-row v-if=\"!isOptionBlank\" class=\"option-setting\">\n          <section :class=\"[{ 'percentage-mode': isShowPercentageInput }, 'detail-mode']\">\n            <pms-form-item v-for=\"item in optionsSchema\" :renderData=\"{ schema: item, form: basicForm }\" :key='item.field'></pms-form-item>\n          </section>\n        </el-row>\n        <!-- Free PO 组件：相对独立的组件，不放在 option Detail 中 -->\n        <free-po v-if=\"showFreePO\" class=\"free-po\" :basicForm=\"basicForm\" :canEdit=\"!isDetailMode\" @modify=\"modifyDiscountPoList\"></free-po>\n      </el-form>\n    </section>\n    <action-log :config=\"optionConfig\" @close=\"closeActionLog\" :id=\"basicForm.sub_fee_id\" :visible=\"dialogVisible\" :basicForm=\"basicForm\"></action-log>\n  </div>\n</template>\n\n<script>\n// todo refactor\nimport PMSFormItem, { getSelectOptions } from '@/components/BaseItem/formItem';\nimport ActionLog from './actionLog';\nimport OptionsSetting from './options';\nimport CircularTier from './circularTier';\nimport { getSubFeeDetail, createSubFee, updateSubFee, getSbuFeeOptionConfig } from '@/api/subFeeManagement';\nimport { SubFeePeriodTypeList, getSubFeeTypeOptionsMap, SubFeeSupportSupplierList, optionTextMap,\n  getFixedTypeList, Permission, getCalculationOptionTitle, SubFeeSupplierTypeList, gubFeeTypeList } from '@/utils/constant';\nimport moment from 'moment';\nimport { formatParams } from '@/utils/formatParams';\nimport { hasPermission } from '@/utils/permission';\nimport MinMaxFee from './minMaxFee';\nimport TierOption from './tierOption';\nimport MultiPerSkuFee from './multiPerSkuFee';\nimport CategoryDiscount from './categoryDiscount';\nimport FreePo from './freePo';\nimport PercentageInput from './percentageInput';\nimport SubFeeFixedTypeSelect from './subFeeFixedTypeSelect';\nimport PerSkuFeeInput from './perSkuFeeInput';\nimport SettingErrorMessage from './settingErrorMessage';\nimport CampaignFee from './campaignFee';\nimport bulkyDefinition from './bulkyDefinition';\nimport PerSkuFeeBySize from './perSkuFeeBySize';\nimport chargingDefinitionTab from './chargingDefinitionTab';\nimport validateMixin from '../common/validateMixin'; // 所有的校验逻辑收归到这里\n\nexport default {\n  name: 'SubFee',\n  mixins: [validateMixin],\n  data() {\n    return {\n      mode: this.$route.params.id ? 'edit' : 'create',\n      SubFeeSupportSupplierList,\n      editing: false,\n      canEdit: false,\n      dialogVisible: false,\n      basicForm: { // 所有的数据\n        region: '',\n        typeList: [],\n        default_display_name: '',\n        support_supplier_type: 1,\n        option: '',\n        supplier_purchase_type: '',\n        option_detail: { // options 中的所有数据\n          per_sku_fee: undefined,\n          fixed_fee_type: 1,\n          sale_value_percentage: undefined,\n          is_fee_range_set: false,\n          fee_range: { min: undefined, max: undefined },\n          sold_tier_list: [],\n          sku_rule_list: [],\n          aging_tier_list: [],\n          multi_per_sku_fee: { 'ShopeeNominated': undefined, 'SellerNominated': undefined,\n            'SellerShippedExtra': undefined, 'NA': undefined },\n          sale_value_percentage_rule: { rule_type: 1, value_list: [ // 目前 rule_type 只有 1\n              { sale_value_percentage: undefined, rule_list: [6, 9, 11, 12] },\n              { sale_value_percentage: undefined, rule_list: [] }\n            ]\n          },\n          bulky_non_bulky: { bulky_definition_list: [{ warehouse: 'default', longest_side_cm: undefined, weight_kg: undefined}], bulky_rule_list: [], non_bulky_rule_list: [] },\n          component_fee: { small_fee: undefined, medium_fee: undefined, large_fee: undefined }\n        },\n        category_discount_switch: false,\n        discount_category_list: [],\n        discount_po_list: []\n      },\n      optionErrorMessage: '',\n      loading: false,\n      subFeeProps: {\n        expandTrigger: 'hover'\n      },\n      cacheDetail: null,\n      optionConfigList: [], // 配置页面的配置\n      optionTextMap\n    };\n  },\n  components: {\n    ActionLog,\n    'pms-form-item': PMSFormItem,\n    FreePo\n  },\n  computed: {\n    currentOption() {\n      return this.basicForm.option;\n    },\n    optionsDetail: {\n      get() {\n        return this.basicForm.option_detail;\n      },\n      set(newVal) {\n        this.basicForm.option_detail = newVal;\n      }\n    },\n    showFreePO() { // option:6【Region= ID 或 PH】 &  【Supplier Type=CB】\n      return (this.basicForm.region === 'ID' || this.basicForm.region === 'PH') && !this.isLocalOption && this.currentOption === 6;\n    },\n    isShowCategoryDiscount() { // option 1，25 &【Region= ID】 & 【Supplier Type=CB】\n      return this.basicForm.region === 'ID' && !this.isLocalOption && [1, 25].includes(this.currentOption);\n    },\n    isShowPercentageInput() { // option 8, 12, 15, 25\n      return [25, 8, 12, 15, 29].includes(this.currentOption);\n    },\n    isShowCampaignFee() {\n      return this.isTWLocal && [16].includes(this.currentOption);\n    },\n    isShowFixedFeeSelected() {\n      // option 5一定是 Local 或者 option 6 一定是 Local 或者 Option 为 1\n      return ([5].includes(this.currentOption) && this.isLocalOption) ||\n      ([6].includes(this.currentOption) && this.isLocalOption) ||\n      [1].includes(this.currentOption);\n    },\n    isShowPerSkuFee() {\n      // Option 为 5 而且选择了 Local 而且选中 Fixed Fee for All Inbound\n      // option 为 1 而且没有坎级而且选择了 Fixed Fee For All Sold 而且一定是 Local\n      // option 为 21, 31, 32, 34, 35\n      return ([5].includes(this.currentOption) && this.isLocalOption && this.optionsDetail.fixed_fee_type === 1) ||\n      ([1].includes(this.currentOption) && !this.hasTierOption && this.optionsDetail.fixed_fee_type === 1 && this.isLocalOption) || [21, 31, 32, 34, 35].includes(this.currentOption);\n    },\n    isShowMultiPerSkuFee() {\n      // option === 5 && support_supplier_type === 1（CB）\n      // 没有坎级而且option 为1 而且选择了 fixed_fee_type为 Fixed Fee for All Sold 而且选择 CB\n      return ([5].includes(this.currentOption) && !this.isLocalOption) ||\n      (!this.hasTierOption && [1].includes(this.currentOption) && this.optionsDetail.fixed_fee_type === 1 && !this.isLocalOption);\n    },\n    isShowOptionSetting() {\n      // option 为5而且选择了 fixed Type 为2【fixed Fee For Each Size】而且没有坎级\n      // option 为 为 6\n      // option 为 1而且选择了 fixed Type 为2 【fixed Fee For  Each Size】而且没有坎级\n      // option 为 23 或者 22 或者 28\n      return ([6].includes(this.currentOption) && !this.hasTierOption) ||\n      ([1, 5].includes(this.currentOption) && this.optionsDetail.fixed_fee_type === 2 && !this.hasTierOption) ||\n      ([22, 23, 28].includes(this.currentOption));\n    },\n    isShowCircularTier() {\n      return [24, 30].includes(this.currentOption);\n    },\n    isShowText() {\n      return [9, 10, 11, 13, 14, 17, 18, 19, 20].includes(this.currentOption);\n    },\n    isShowBulkyDefinition() {\n      return [27].includes(this.currentOption);\n    },\n    isShowPerSkuBySie() {\n      return this.currentOption === 33;\n    },\n    SubFeeFixedTypeList() {\n      return getFixedTypeList(this.currentOption) || [];\n    },\n    getSubFeeSupplierTypeList() {\n      if (this.basicForm.region === 'TW') {\n        return SubFeeSupplierTypeList.filter(item => item.value !== 2);\n      }\n      return SubFeeSupplierTypeList;\n    },\n    regionList() {\n      return this.$store.getters.countrySelectList || [];\n    },\n    currency() {\n      return this.$store.getters.currencyMap[this.basicForm.region] || '';\n    },\n    isActive() {\n      return this.basicForm.sub_fee_status === 1;\n    },\n    // 是详情页（查看态）\n    isDetailMode() {\n      return this.mode === 'edit' && !this.editing;\n    },\n    // 1——CB，2——Local\n    isLocalOption() {\n      return this.basicForm.support_supplier_type !== 1;\n    },\n    isOptionBlank() { // 没有 option 或者 4 和 7 和 26 的时候，空白\n      const option = this.currentOption || 0;\n      return !option || [4, 7, 26].includes(option) || this.isShowText;\n    },\n    isTWLocal() { // 针对TW和Local会有较多的业务需求：https://confluence.shopee.io/pages/viewpage.action?pageId=176517742\n      return this.basicForm.region === 'TW' && this.isLocalOption;\n    },\n    SubFeeTypeList() {\n      return gubFeeTypeList({ isTWLocal: this.isTWLocal, isLocalOption: this.isLocalOption });\n    },\n    SubFeeTypeOptionsMap() {\n      return getSubFeeTypeOptionsMap({ isTWLocal: this.isTWLocal, isLocalOption: this.isLocalOption });\n    },\n    isHiddenDimensionX() {\n      return ([6, 28].includes(this.currentOption) && this.optionsDetail.fixed_fee_type === 1) || [22, 23, 27].includes(this.currentOption);\n    },\n    // 展示多行金额输入\n    hasMultiFee() {\n      return ([6].includes(this.currentOption) && !this.isLocalOption) || ([27].includes(this.currentOption));\n    },\n    // Option 内的一些配置\n    optionConfig() {\n      const hiddenDimensionX = this.isHiddenDimensionX; // 隐藏 X轴配置\n      const titleConfig = getCalculationOptionTitle(this.currentOption, this.currency,\n        hiddenDimensionX ? 'stock' : '') || {}; // 不同的 option，对应的 label 不同\n      const hasTierOption = this.hasTierOption;\n      const tierRateThresholdBy = this.currOptionConfig.tier_rate_threshold_by;\n      const isLocalOption = this.isLocalOption;\n      return {\n        currency: this.currency,\n        hiddenDimensionX,\n        hasMultiFee: this.hasMultiFee,\n        titleConfig,\n        hasTierOption,\n        tierRateThresholdBy,\n        isLocalOption,\n        isTieredHasMulti: this.isTieredHasMulti,\n        isTieredHasPerFee: this.isTieredHasPerFee,\n        isTieredHasOptionSetting: this.isTieredHasOptionSetting\n      };\n    },\n    basicRules() {\n      return {\n        'region': { required: !this.isDetailMode, message: 'Region is required' },\n        'supplier_purchase_type': { required: !this.isDetailMode, message: 'Client Type is required' },\n        'sub_fee_name': [\n          { required: !this.isDetailMode, message: 'Sub Fee Name is required' },\n          { max: 30, message: 'Sub Fee Name cannot be longer than 30 characters' }\n        ],\n        'default_display_name': [\n          { required: !this.isDetailMode, message: 'Sub Fee Default Display Name is required' },\n          { max: 30, message: 'Sub Fee Default Display Name cannot be longer than 30 characters' }\n        ],\n        'period_type': { required: !this.isDetailMode, message: 'Period Type is required' },\n        'typeList': { required: !this.isDetailMode, message: 'Fee Type is required' },\n        'option': { required: !this.isDetailMode, message: 'Calculation Option is required' },\n        'period_start_str': { required: !this.isDetailMode, message: 'Start Date is required' },\n        'period_end_str': [\n          { required: !this.isDetailMode, message: 'End Date is required' },\n          { validator: this.checkEndDate }\n        ]\n      };\n    },\n    optionsSchema() {\n      return [{ field: 'PercentageInput', type: 'PercentageInput',\n        render: (schema, row, h) => {\n          return [PercentageInput, {\n            class: ['percentage-container'], on: { change: this.updatePercentage },\n            props: { percentage: this.optionsDetail.sale_value_percentage, isDetailMode: this.isDetailMode, config: this.optionConfig }\n          }];\n        },\n        validator: this.validPercentage,\n        hidden: !this.isShowPercentageInput\n      }, {\n        field: 'CampaignFee', type: 'CampaignFee',\n        render: (schema, row, h) => {\n          return [CampaignFee, {\n            props: { campaignFeeList: this.optionsDetail.sale_value_percentage_rule.value_list, isDetailMode: this.isDetailMode }\n          }];\n        },\n        validator: this.validCampaign,\n        hidden: !this.isShowCampaignFee\n      }, { field: 'bulkyDefinition',\n        render: (schema, row, h) => {\n          return [bulkyDefinition, {\n            props: { bulkyDefinitionList: this.optionsDetail.bulky_non_bulky.bulky_definition_list,\n            isDetailMode: this.isDetailMode, region: this.basicForm.region }\n          }];\n        },\n        validator: this.validBulkyDefinition,\n        hidden: !this.isShowBulkyDefinition\n      }, {\n        field: 'chargingDefinitionTab',\n        render: (schema, row, h) => {\n          return [chargingDefinitionTab, {\n            props: { bulkyRuleList: this.optionsDetail.bulky_non_bulky.bulky_rule_list,\n            nonBulkyRuleList: this.optionsDetail.bulky_non_bulky.non_bulky_rule_list,\n            optionConfig: this.optionConfig,\n            isDetailMode: this.isDetailMode }\n          }];\n        },\n        validator: this.validBulkyTab,\n        hidden: !this.isShowBulkyDefinition\n      }, { field: 'SubFeeFixedTypeSelect', type: 'SubFeeFixedTypeSelect',\n        render: (schema, row, h) => {\n          return [SubFeeFixedTypeSelect, {\n            props: {\n              basicForm: this.basicForm, isDetailMode: this.isDetailMode,\n              SubFeeFixedTypeList: this.SubFeeFixedTypeList\n            },\n            on: { change: this.clearOptionDetail }\n          }];\n        },\n        hidden: !this.isShowFixedFeeSelected\n      },\n      { field: 'PerSkuFeeInput', type: 'PerSkuFeeInput',\n        render: (schema, row, h) => {\n          return [PerSkuFeeInput, {\n            props: { perSkuFee: this.basicForm.option_detail.per_sku_fee, isDetailMode: this.isDetailMode,\n              optionConfig: this.optionConfig\n            },\n            on: { change: this.updatePerSkuFee }\n          }];\n        },\n        validator: this.validPerSkuFee,\n        hidden: !this.isShowPerSkuFee\n      }, { field: 'PerSkuFeeBySize', type: 'PerSkuFeeBySize',\n        render: (schema, row, h) => {\n          return [PerSkuFeeBySize, {\n            props: { componentFee: this.optionsDetail.component_fee, isDetailMode: this.isDetailMode,\n              optionConfig: this.optionConfig\n            }\n          }];\n        },\n        validator: this.validPerSkuBySize,\n        hidden: !this.isShowPerSkuBySie\n      },\n      { field: 'multi-per-sku-fee', type: 'multi-per-sku-fee',\n        render: (schema, row, h) => {\n          return [MultiPerSkuFee, {\n            class: ['cb-fee-setting'],\n            props: {\n              multiPerSkuFee: this.optionsDetail.multi_per_sku_fee,\n              isDetailMode: this.isDetailMode, optionConfig: this.optionConfig\n            }\n          }];\n        },\n        validator: this.validMultiPerSkuFee,\n        hidden: !this.isShowMultiPerSkuFee\n      }, { field: 'min-max-fee', type: 'min-max-fee',\n        render: (schema, row, h) => {\n          return [MinMaxFee, {\n            props: {\n              feeRange: this.optionsDetail.fee_range,\n              multiPerSkuFee: this.optionsDetail.multi_per_sku_fee,\n              isFeeRangeSet: this.optionsDetail.is_fee_range_set,\n              currency: this.currency,\n              isDetailMode: this.isDetailMode,\n              optionConfig: this.optionConfig\n            },\n            on: { modify: this.updateFeeRange }\n          }];\n        },\n        validator: this.validMinMaxFee,\n        hidden: !this.hasMinMAxOption\n      }, { field: 'SettingErrorMessage', type: 'SettingErrorMessage',\n        render: (schema, row, h) => {\n          return [SettingErrorMessage, {\n            props: { optionErrorMessage: this.optionErrorMessage }\n          }];\n        },\n        hidden: !this.optionErrorMessage\n      }, { field: 'tier-option', type: 'tier-option',\n        render: (schema, row, h) => {\n          return [TierOption, {\n            props: { config: this.optionConfig, canEdit: !this.isDetailMode,\n              tierRateThresholdBy: this.currOptionConfig.tier_rate_threshold_by,\n              list: this.optionsDetail.sold_tier_list || []\n            },\n            on: { modify: this.updateTierList }\n          }];\n        },\n        validator: this.validTired,\n        hidden: !this.hasTierOption\n      }, { field: 'options-setting',\n        render: (schema, row, h) => {\n          return [OptionsSetting, {\n            props: { config: this.optionConfig, canEdit: !this.isDetailMode,\n              list: this.optionsDetail.sku_rule_list || []\n            },\n            on: { modify: this.updateRuleList }\n          }];\n        },\n        validator: this.validOptionSetting,\n        hidden: !this.isShowOptionSetting\n      }, { field: 'circular-tier',\n        render: (schema, row, h) => {\n          return [CircularTier, {\n            props: { config: this.optionConfig, canEdit: !this.isDetailMode,\n              list: this.optionsDetail.aging_tier_list || []\n            },\n            on: { modify: this.updateCircularRules }\n          }];\n        },\n        validator: this.validCircularTier,\n        hidden: !this.isShowCircularTier\n      }, { field: 'category-discount', type: 'category-discount',\n        render: (schema, row, h) => {\n          return [CategoryDiscount, {\n            props: { canEdit: !this.isDetailMode, basicForm: this.basicForm },\n            on: { modify: this.updateDiscount }\n          }];\n        },\n        hidden: !this.isShowCategoryDiscount,\n        validator: this.validCategoryDiscount\n      }].filter(item => !item.hidden);\n    },\n    basicSchema() {\n      const typeList = this.basicForm.typeList || [];\n      const subTypeList = [];\n      this.SubFeeTypeList.forEach(item => subTypeList.push(item, ...item.children || []));\n      const isDetailMode = this.isDetailMode;\n      return [\n        { field: 'sub_fee_id', type: 'text', label: this.$t('subFeeID'), hidden: this.mode === 'create' },\n        { field: 'region', required: true, type: this.mode !== 'create' ? 'text' : 'select', label: this.$t('commonRegion'),\n          getChildren: (h) => getSelectOptions(this.regionList, h),\n          on: { change: () => { this.basicForm.supplier_purchase_type = ''; this.resetFeeTypeAndOptions(); }}\n        },\n        { field: 'supplier_purchase_type', required: true, type: this.mode !== 'create' ? 'text' : 'select', label: this.$t('commonClientType'),\n          getChildren: (h) => getSelectOptions(this.getSubFeeSupplierTypeList, h),\n          on: { change: () => { this.resetFeeTypeAndOptions(); }},\n          render: this.mode !== 'create' ? (schema, row, h) => {\n            return (SubFeeSupplierTypeList.find(item => item.value === row.supplier_purchase_type) || {}).label;\n          } : null\n        },\n        { field: 'sub_fee_name', type: isDetailMode ? 'text' : 'input', label: this.$t('subFeeName'), required: true,\n          render: isDetailMode ? null : (schema, row, h) => {\n            return ['el-input', {\n              props: { value: row[schema.field] },\n              on: { input: (value) => { this.modifyForm(schema, value); } }\n            }, [\n              h('span', { slot: 'suffix' }, `${(row[schema.field] || '').length || 0} / 30`)\n            ]];\n          }\n        },\n        { field: 'default_display_name', type: isDetailMode ? 'text' : 'input',\n          label: this.$t('subFeeDefaultDisplayName'), required: true,\n          render: isDetailMode ? null : (schema, row, h) => {\n            return ['el-input', {\n              props: { value: row[schema.field] },\n              on: { input: (value) => { this.modifyForm(schema, value); } }\n            }, [\n              h('span', { slot: 'suffix' }, `${(row[schema.field] || '').length || 0} / 30`)\n            ]];\n          }\n        },\n        { field: 'period_type', required: true, type: 'select', label: this.$t('subFeePeriodType'),\n          getChildren: (h) => getSelectOptions(SubFeePeriodTypeList.slice(1), h),\n          render: isDetailMode ? (schema, row) => {\n            return (SubFeePeriodTypeList.find(item => item.value === row[schema.field]) || {}).label || '';\n          } : null\n        },\n        { field: 'period_start_str', type: isDetailMode ? 'text' : 'date-picker', label: this.$t('backMargin.startDate'), required: true,\n          props: { type: 'date', 'value-format': 'yyyy-MM-dd', editable: false }, hidden: this.basicForm.period_type !== 2\n        },\n        { field: 'period_end_str', type: isDetailMode ? 'text' : 'date-picker', label: this.$t('backMargin.endDate'), required: true,\n          props: { type: 'date', 'value-format': 'yyyy-MM-dd', editable: false },\n          hidden: this.basicForm.period_type !== 2\n        },\n        { field: 'typeList', type: 'select', label: this.$t('subFeeType'), required: true,\n          render: (schema, row, h) => this.mode !== 'create' ? typeList.map(type => {\n            return (subTypeList.find(item => item.value === type) || {}).label || '';\n          }).join(' / ') : ['el-cascader', {\n            props: {\n              clearable: true, value: typeList, options: this.SubFeeTypeList, props: this.subFeeProps\n            },\n            on: {\n              input: (value) => { this.modifyForm(schema, value); },\n              change: (value) => { this.basicForm.option = undefined; }\n            }\n          }]\n        },\n        { field: 'option', required: true, type: 'select', label: this.$t('subFeeCalculationOption'),\n          props: { disabled: typeList.length < 1 },\n          on: { change: () => {\n            this.resetOption();\n          } },\n          getChildren: (h) => getSelectOptions(this.SubFeeTypeOptionsMap[typeList[typeList.length - 1]] || [], h),\n          render: this.mode !== 'create' ? (schema, row) => {\n            const list = this.SubFeeTypeOptionsMap[typeList[typeList.length - 1]] || [];\n            return (list.find(item => item.value === row[schema.field]) || {}).label || '';\n          } : null\n        }\n      ].filter(item => !item.hidden);\n    },\n    // option 为 6，根据库龄\n    isFixedFeePerAgingSkuQty() {\n      return this.currentOption === 6;\n    },\n    // 配置，注意详情中的配置和创建时候的配置不一样\n    currOptionConfig() {\n      const optionConfig = (this.optionConfigList.find(item => {\n        return item.option === this.currentOption;\n      }) || { config: false }).config;\n      if (this.$route.params.id) { // 详情中的配置\n        return {\n          black_stock_limit: optionConfig.black_stock_limit,\n          fee_cap_per_sku_per_order: this.optionsDetail.is_fee_range_config_set,\n          tier_rate_threshold_by: this.optionsDetail.tier_rate_threshold_by,\n          tiered_rates_based_on_sold_qty: this.optionsDetail.is_sold_tier_set\n        };\n      } else { // 创建的配置\n        return optionConfig;\n      }\n    },\n    subFeeBlackStockLimitOn() {\n      return this.isFixedFeePerAgingSkuQty && this.currOptionConfig && this.currOptionConfig.black_stock_limit;\n    },\n    // fee_cap_per_sku_per_order 开关打开\n    hasMinMAxOption() {\n      return this.currOptionConfig && this.currOptionConfig.fee_cap_per_sku_per_order;\n    },\n    // tiered_rates_based_on_sold_qty 打开坎级开关\n    hasTierOption() {\n      return (this.currentOption === 1 || this.currentOption === 6) && this.currOptionConfig && this.currOptionConfig.tiered_rates_based_on_sold_qty;\n    },\n    isTieredHasMulti() { // 坎级内显示多行金额\n      return [1].includes(this.currentOption) && this.optionsDetail.fixed_fee_type === 1 && !this.isLocalOption;\n    },\n    isTieredHasPerFee() { // 坎级内显示单行金额\n      return [1].includes(this.currentOption) && this.optionsDetail.fixed_fee_type === 1 && this.isLocalOption;\n    },\n    isTieredHasOptionSetting() { // 坎级内显示配置\n      return ([1].includes(this.currentOption) && this.optionsDetail.fixed_fee_type === 2) || [6].includes(this.currentOption);\n    },\n    hasBoldRegionAndSupplierPurchaseType() {\n      return this.basicForm.region && this.basicForm.supplier_purchase_type;\n    }\n  },\n  watch: {\n    basicForm: {\n      handler(newVal, oldVal) {\n        if (newVal.region && newVal.supplier_purchase_type &&\n        (newVal.region !== oldVal.region || newVal.supplier_purchase_type !== oldVal.supplier_purchase_type)) {\n          this.getSbuFeeOptionConfig();\n        };\n        if (newVal.supplier_purchase_type) {\n          this.basicForm.support_supplier_type = newVal.supplier_purchase_type === 1 ? 1 : 2; // 除了选择 CB，其他的都是 Local\n        }\n      },\n      immediate: true,\n      deep: true\n    },\n    hasTierOption(nv) {\n      const optionDetail = this.optionsDetail;\n      if (this.hasTierOption && !optionDetail.sold_tier_list) {\n        optionDetail.sold_tier_list = this.handlerHasTierOptionNoSoldTierList(optionDetail);\n        this.cacheDetail = JSON.stringify(this.basicForm);\n      }\n    },\n    // 如果隐藏了，就设置为1\n    isShowFixedFeeSelected(val) {\n      if (!val) {\n        this.optionsDetail.fixed_fee_type = 1;\n      }\n    }\n  },\n  methods: {\n    updateDiscount(field, value) {\n      this.basicForm[field] = value;\n    },\n    modifyDiscountPoList(list) {\n      this.basicForm.discount_po_list = list;\n    },\n    goBack() {\n      this.$router.replace(`/admin/finance/subFee/list`);\n    },\n    checkEndDate(rule, value, callback) {\n      if (this.basicForm.period_start_str) {\n        const nowValue = moment().valueOf();\n        const endValue = moment(`${value} 23:59:59`, 'YYYY-MM-DD HH:mm:ss').valueOf();\n        const startValue = moment(this.basicForm.period_start_str, 'YYYY-MM-DD').valueOf();\n        if (endValue < startValue) {\n          callback(new Error('End Date must be later than Start Date'));\n        } else if (endValue < nowValue) {\n          callback(new Error('End Date can not be earlier than Toady'));\n        } else {\n          callback();\n        }\n      } else {\n        callback();\n      }\n    },\n    editSubFee() {\n      this.editing = true;\n    },\n    clearFixedType() {\n      this.basicForm.option_detail.fixed_fee_type = 1;\n      this.clearOptionDetail();\n    },\n    resetFeeTypeAndOptions() {\n      this.basicForm.typeList = [];\n      this.basicForm.option = '';\n      this.resetOption();\n    },\n    resetOption() { // 重置所有跟 option 相关\n      this.basicForm.discount_category_list = [];\n      this.basicForm.discount_po_list = [];\n      this.basicForm.option_detail.fixed_fee_type = 1;\n      this.clearOptionDetail();\n    },\n    clearOptionDetail() { // 重置跟 Sub Fee Fixed Type 相关。\n      this.optionsDetail.multi_per_sku_fee = {\n        'ShopeeNominated': undefined,\n        'SellerNominated': undefined,\n        'SellerShippedExtra': undefined,\n        'NA': undefined\n      };\n      this.optionErrorMessage = '';\n      this.optionsDetail.per_sku_fee = undefined;\n      this.optionsDetail.sale_value_percentage = undefined;\n      this.optionsDetail.sku_rule_list = [];\n      this.optionsDetail.aging_tier_list = [];\n      this.optionsDetail.sold_tier_list = [];\n      this.optionsDetail.fee_range = { min: undefined, max: undefined };\n      this.optionsDetail.sale_value_percentage_rule = { rule_type: 1, value_list: [ // 目前 rule_type 只有 1\n          { sale_value_percentage: undefined, rule_list: [6, 9, 11, 12] },\n          { sale_value_percentage: undefined, rule_list: [] }\n        ]\n      };\n      this.optionsDetail.bulky_non_bulky = { bulky_definition_list: [{ warehouse: 'default', longest_side_cm: undefined, weight_kg: undefined }], bulky_rule_list: [], non_bulky_rule_list: [] };\n    },\n    cancelEditSubFee() {\n      this.getDetail(this.basicForm.sub_fee_id);\n      this.editing = false;\n    },\n    getSubmitParams() {\n      const getBasicParamsForm = JSON.parse(JSON.stringify(this.basicForm));\n      const optionsDetail = JSON.parse(JSON.stringify(this.optionsDetail));\n      const typeList = getBasicParamsForm.typeList;\n      const isShortTerm = getBasicParamsForm.period_type === 2;\n      // 没有坎级\n      if (!this.hasTierOption) {\n        const skuRuleList = (optionsDetail.sku_rule_list || []).map(rule => {\n          return this.handleSkuRuleList(rule);\n        });\n        optionsDetail.sku_rule_list = skuRuleList;\n      // 有坎级\n      } else {\n        (optionsDetail.sold_tier_list || []).forEach(item => {\n          if (item.sold_tier_end === undefined) {\n            item.sold_tier_end = -1;\n          }\n          item.sku_rule_list = (item.sku_rule_list || []).map(rule => {\n            return this.handleSkuRuleList(rule);\n          });\n        });\n        optionsDetail.tier_rate_threshold_by = this.currOptionConfig.tier_rate_threshold_by;\n      }\n\n      if (this.hasMinMAxOption && optionsDetail.fee_range) {\n        const { min, max } = optionsDetail.fee_range;\n        if (min === undefined) {\n          optionsDetail.fee_range.min = -1;\n        }\n        if (max === undefined) {\n          optionsDetail.fee_range.max = -1;\n        }\n      }\n\n      getBasicParamsForm.option_detail = {\n        ...optionsDetail,\n        is_sold_tier_set: !!this.currOptionConfig.tiered_rates_based_on_sold_qty\n      };\n      return {\n        ...formatParams(getBasicParamsForm),\n        period_start_str: isShortTerm && getBasicParamsForm.period_start_str ? `${getBasicParamsForm.period_start_str} 00:00:00` : '',\n        period_end_str: isShortTerm && getBasicParamsForm.period_end_str ? `${getBasicParamsForm.period_end_str} 23:59:59` : '',\n        main_fee_type: typeList[0],\n        sub_fee_type: typeList[typeList.length - 1]\n      };\n    },\n\n    handleSkuRuleList(data) {\n      const item = { ...data };\n      if (item.dimension_x_end === undefined) {\n        item.dimension_x_end = -1;\n      }\n      if (item.dimension_y_end === undefined) {\n        item.dimension_y_end = -1;\n      }\n      return item;\n    },\n    requestSaveSubFee(isCreate = true) {\n      // 校验原则：就是出现才校验\n      this.$refs.SubFeeForm.validate(valid => {\n        if (valid) {\n          // 校验 PO discount\n          if (this.showFreePO && !this.validFreePo()) { return; }\n          const validAllItem = this.optionsSchema.every(optionItem => {\n            if (optionItem.validator && !optionItem.validator()) {\n              return false;\n            }\n            return true;\n          });\n          if (!validAllItem) {\n            return;\n          }\n          // 校验 sku rules 的填写校验\n          const errorMessage = this.validSubFeeOptions();\n          this.optionErrorMessage = errorMessage || '';\n          if (errorMessage) {\n            return;\n          }\n          this.loading = true;\n          const cacheFormData = JSON.stringify(this.basicForm);\n          const params = this.getSubmitParams();\n          const requestFun = isCreate ? createSubFee : updateSubFee;\n          requestFun(params).then(resp => {\n            this.loading = false;\n            if (resp.retcode !== 0) {\n              this.basicForm = JSON.parse(cacheFormData);\n              this.$message.error(resp.message);\n            } else {\n              this.$message.success('Success');\n              if (isCreate) {\n                this.goBack();\n              } else {\n                this.editing = false;\n                this.getDetail(this.basicForm.sub_fee_id);\n              }\n            }\n          }).catch(() => {\n            this.$message.error('Failed');\n            this.loading = false;\n          });\n        }\n      });\n    },\n    saveSubFee() {\n      if (JSON.stringify(this.basicForm) === this.cacheDetail) {\n        return this.$message.info('No need to save');\n      }\n      this.requestSaveSubFee(false);\n    },\n    submitSubFee() {\n      this.requestSaveSubFee(true);\n    },\n    // 修改状态\n    changeSubFeeStatus() {\n      const status = this.basicForm.sub_fee_status === 1 ? 2 : 1;\n      this.loading = true;\n      updateSubFee({ ...this.getSubmitParams(), sub_fee_status: status }).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.message);\n        } else {\n          this.$message.success('Success');\n          this.basicForm.sub_fee_status = status;\n          this.getDetail(this.basicForm.sub_fee_id);\n        }\n        this.loading = false;\n      }).catch(() => { this.loading = false; });\n    },\n    modifyForm(schema, value) {\n      this.$set(this.basicForm, schema.field, value);\n    },\n    updateRuleList(list = []) {\n      this.optionsDetail.sku_rule_list = list;\n    },\n    updateCircularRules(list = []) {\n      this.$set(this.optionsDetail, 'aging_tier_list', list);\n    },\n    updateTierList(list = []) {\n      this.optionsDetail.sold_tier_list = list;\n    },\n    updateFeeRange({ feeRange = {}, required = false }) {\n      this.optionsDetail.fee_range = feeRange;\n      this.optionsDetail.is_fee_range_set = required;\n    },\n    updatePerSkuFee(fee) {\n      this.basicForm.option_detail.per_sku_fee = fee;\n    },\n    updatePercentage(value) {\n      this.optionsDetail.sale_value_percentage = value;\n    },\n    // 获取详情\n    getDetail(id) {\n      this.loading = true;\n      this.optionErrorMessage = '';\n      getSubFeeDetail({ sub_fee_id: id }).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.message);\n        } else {\n          const data = resp.data || {};\n          const optionDetail = this.handleOptionDetail(data.option_detail);\n          this.basicForm = { ...this.basicForm, ...data,\n            option_detail: optionDetail,\n            typeList: [data.main_fee_type, data.sub_fee_type],\n            period_start_str: data.period_start_str\n              ? moment(data.period_start_str, 'YYYY-MM-DD HH:mm:ss').format('YYYY-MM-DD') : '',\n            period_end_str: data.period_end_str\n              ? moment(data.period_end_str, 'YYYY-MM-DD HH:mm:ss').format('YYYY-MM-DD') : '',\n            sku_rule_list: (data.sku_rule_list || []).map(rule => {\n              if (rule.dimension_x_end === -1) {\n                rule.dimension_x_end = undefined;\n              }\n              if (rule.dimension_y_end === -1) {\n                rule.dimension_y_end = undefined;\n              }\n              return rule;\n            }),\n            discount_po_list: (data.discount_po_list || []).map(poItem => {\n              // 是否是新建的，如果从接口获取到的就是 false\n              this.$set(poItem, 'isNewCreate', false);\n              return poItem;\n            })\n          };\n          this.cacheDetail = JSON.stringify(this.basicForm);\n        }\n        this.loading = false;\n      }).catch(() => {\n        this.$message.error('Get Sub Fee Failed');\n        this.loading = false;\n      });\n    },\n    handleOptionDetail(optionDetail) {\n      const ret = { ...optionDetail };\n      if (ret.sold_tier_list) {\n        ret.sold_tier_list.forEach(tier => {\n          const skuRuleList = tier.sku_rule_list;\n          if (tier.sold_tier_end === -1) {\n            tier.sold_tier_end = undefined;\n          }\n          if (skuRuleList) {\n            skuRuleList.forEach(rule => {\n              if (rule.dimension_x_end === -1) {\n                rule.dimension_x_end = undefined;\n              }\n              if (rule.dimension_y_end === -1) {\n                rule.dimension_y_end = undefined;\n              }\n            });\n          }\n        });\n      }\n      if (ret.sku_rule_list) {\n        const skuRuleList = ret.sku_rule_list;\n        skuRuleList.forEach(rule => {\n          if (rule.dimension_x_end === -1) {\n            rule.dimension_x_end = undefined;\n          }\n          if (rule.dimension_y_end === -1) {\n            rule.dimension_y_end = undefined;\n          }\n        });\n      }\n      if (ret.fee_range) {\n        if (ret.fee_range.min === -1) {\n          ret.fee_range.min = undefined;\n        }\n        if (ret.fee_range.max === -1) {\n          ret.fee_range.max = undefined;\n        }\n      }\n      if (this.hasTierOption && !ret.sold_tier_list) {\n        ret.sold_tier_list = this.handlerHasTierOptionNoSoldTierList(ret);\n      }\n      return ret;\n    },\n    handlerHasTierOptionNoSoldTierList(optionDetail) {\n      const { sku_rule_list, per_sku_fee } = optionDetail;\n      let soleTierList = [];\n      soleTierList = [\n        {\n          sold_tier_start: 0,\n          sold_tier_end: undefined,\n          sku_rule_list,\n          per_sku_fee\n        }\n      ];\n      return soleTierList;\n    },\n    showActionLog() {\n      this.dialogVisible = true;\n    },\n    closeActionLog() {\n      this.dialogVisible = false;\n    },\n    // 获取配置\n    getSbuFeeOptionConfig() {\n      getSbuFeeOptionConfig({\n        region: this.basicForm.region,\n        supplier_purchase_type: this.basicForm.supplier_purchase_type\n      }).then(resp => {\n        if (resp.retcode === 0) {\n          this.optionConfigList = resp.data.option_config_list;\n        } else {\n          this.$message.error(resp.message);\n        }\n      });\n    }\n  },\n  created() {\n    this.canEdit = hasPermission(Permission.EDIT_SUB_FEE);\n    // 解决发送两次问题\n    this.$watch(\n      function() {\n        return this.basicForm.region && this.basicForm.supplier_purchase_type;\n      },\n      function(newVal, oldVal) {\n        if (newVal) {\n          this.getSbuFeeOptionConfig();\n        }\n      }\n    );\n    if (this.$route.params.id) this.getDetail(this.$route.params.id);\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  .add-sub-fee {\n    margin: 22px 16px 0 19px;\n    .create-header {\n      display: flex;\n      align-items: center;\n      .back-icon {\n        color: #666666;\n        font-size: 18px;\n        cursor: pointer;\n      }\n      .title {\n        margin-left: 4px;\n        flex: 1;\n        display: flex;\n        align-items: center;\n        color: #333333;\n        font-size: 24px;\n        .pms-status-tag {\n          margin-left: 8px;\n        }\n      }\n      .right-action {\n        width: fit-content;\n        text-align: right;\n        .submit-btn {\n          margin-left: 5px;\n        }\n        .list-btn {\n          border-radius: 2px;\n        }\n        .action-log-btn {\n          width: 88px;\n          border: 1px solid #3D6ED1;\n          background-color: #fff;\n          color: #3D6ED1;\n        }\n        .inactive-btn {\n          border: 1px solid #DE3A3A;\n          background-color: #fff;\n          color: #DE3A3A;\n        }\n        .active-btn {\n          border: 1px solid #1BAF9D;\n          background-color: #fff;\n          color: #1BAF9D;\n        }\n        .submit-btn {\n          background: #3D6ED1;\n          border: 1px solid #3D6ED1;\n        }\n      }\n    }\n    .gap-line {\n      margin-top: 9px;\n      height: 2px;\n      background-color: #EDEEF2;\n    }\n    .text-list {\n      margin-top: -15px;\n      font-family: Roboto-Regular;\n      font-size: 12px;\n      color: #666666;\n      line-height: 24px;\n      margin-left: 180px;\n    }\n    .sub-fee-form {\n      margin-top: 33px;\n      .form-row {\n        min-height: 56px;\n        line-height: 56px;\n        overflow: hidden;\n        .el-form-item {\n          height: inherit;\n          line-height: inherit;\n        }\n      }\n      .el-select, .el-input, .el-cascader, .el-input-number, .el-textarea {\n        width: 300px;\n        height: 32px !important;\n        line-height: 32px;\n      }\n      .cb-type-select {\n        display: inline-block;\n        margin-bottom: 10px;\n      }\n      .cb-fee-section {\n        display: block;\n        width: 100%;\n        min-width: 500px;\n        margin-top: 10px;\n        .cb-fee-input {\n          width: 280px;\n        }\n      }\n      /deep/ .option-error-message {\n        display: flex;\n        align-items: center;\n        min-height: 40px;\n        background: #FFF1F0;\n        border-radius: 4px;\n        margin: 12px 0;\n        .error-icon {\n          color: #FF4742;\n          font-size: 23px;\n          margin: 0 17.2px 0 16.1px;\n        }\n        .error-message-text {\n          font-size: 14px;\n          color: #555555;\n        }\n      }\n      .option-setting {\n        display: flex;\n        align-items: center;\n        margin-left: 180px;\n        color: #333333;\n        .percentage-mode {\n          width: 100%;\n          line-height: 43px;\n          padding-left: 11px;\n          padding-bottom: 8px;\n          border: 1px dashed #DCDFE6;\n          box-sizing: border-box;\n          font-size: 14px;\n          /deep/ .el-input-number {\n            width: 74px;\n          }\n        }\n        .detail-mode {\n          padding: 10px;\n          border: 1px dashed #DCDFE6;\n          box-sizing: border-box;\n          /deep/ .type-select {\n            width: 280px;\n          }\n          /deep/ .sold-mode {\n            font-size: 14px;\n            .el-input-number {\n              width: 120px;\n              margin-top: 10px;\n            }\n          }\n        }\n      }\n      .black-stock{\n        color: #999;\n        margin-left: 10px;\n      }\n    }\n    .right-tips{\n      cursor: pointer;\n      font-size: 12px;\n      color: #A1A1A1;\n    }\n    .free-po {\n      margin-top: 32px;\n    }\n  }\n\n  .add-sub-fee .sub-fee-form /deep/ .cb-fee-section {\n    display: block;\n    width: 100%;\n    min-width: 500px;\n    margin-top: 10px;\n    .cb-fee-input {\n      width: 140px;\n    }\n  }\n</style>\n\n<style lang=\"scss\">\n  .add-sub-fee .sub-fee-form {\n    .el-input__inner {\n      height: 32px;\n    }\n    .el-input--suffix .el-input__inner {\n      padding-right: 48px;\n    }\n    .el-select .el-input--suffix .el-input__inner {\n      padding-right: 30px;\n    }\n    .el-cascader .el-input__inner {\n      height: 32px !important;\n    }\n    .el-cascader__tags {\n      .el-tag {\n        max-width: calc(100% - 60px);\n        overflow: hidden;\n        text-overflow: ellipsis;\n      }\n    }\n    .option-setting .number-input .el-input__inner {\n      text-align: left;\n      padding: 1px;\n      font-size: 12px;\n    }\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/subFeeManagement/create/minMaxFee.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/subFeeManagement/create/multiPerSkuFee.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/subFeeManagement/create/options.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/subFeeManagement/create/perSkuFeeBySize.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"perSkuFee\" is not PascalCase.","line":26,"column":9,"nodeType":"Literal","endLine":26,"endColumn":20,"fix":{"range":[1181,1190],"text":"PerSkuFee"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div class=\"component-qty-sold-mode\">\n    <div class=\"item\">\n      <el-input-number v-if=\"!isDetailMode\" v-model=\"componentFee.small_fee\" :min=\"0\" :precision=\"2\"\n        placeholder=\"Please input\" class=\"number-input\" :controls=\"false\"></el-input-number>\n      <span class=\"number-input\" v-else>{{componentFee.small_fee}}</span>\n      <span>{{optionConfig.titleConfig.sTitle}}</span>\n    </div>\n    <div class=\"item\">\n      <el-input-number v-if=\"!isDetailMode\" v-model=\"componentFee.medium_fee\" :min=\"0\" :precision=\"2\"\n        placeholder=\"Please input\" class=\"number-input\" :controls=\"false\"></el-input-number>\n      <span class=\"number-input\" v-else>{{componentFee.medium_fee}}</span>\n      <span>{{optionConfig.titleConfig.mTitle}}</span>\n    </div>\n    <div class=\"item\">\n      <el-input-number v-if=\"!isDetailMode\" v-model=\"componentFee.large_fee\" :min=\"0\" :precision=\"2\"\n        placeholder=\"Please input\" class=\"number-input\" :controls=\"false\"></el-input-number>\n      <span class=\"number-input\" v-else>{{componentFee.large_fee}}</span>\n      <span>{{optionConfig.titleConfig.lTitle}}</span>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'perSkuFee',\n  props: {\n    componentFee: {\n      required: true\n    },\n    isDetailMode: {\n      type: Boolean,\n      required: true,\n      default: false\n    },\n    optionConfig: {\n      type: Object,\n      required: true,\n      default: () => ({})\n    }\n  },\n  data() {\n    return {\n    };\n  },\n  methods: {\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.component-qty-sold-mode {\n  .item {\n    margin-top: 10px;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/subFeeManagement/create/perSkuFeeInput.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"perSkuFee\" is not PascalCase.","line":12,"column":9,"nodeType":"Literal","endLine":12,"endColumn":20,"fix":{"range":[415,424],"text":"PerSkuFee"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div class=\"sold-mode\">\n    <el-input-number v-if=\"!isDetailMode\" v-model=\"ownPerSkuFee\" :min=\"0\" :precision=\"2\"\n      placeholder=\"Please input\" class=\"number-input\" :controls=\"false\" @input=\"inputPerSkuFee\"></el-input-number>\n    <span class=\"number-input\" v-else>{{ownPerSkuFee}}</span>\n    <span>{{optionConfig.titleConfig.allValue}}</span>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'perSkuFee',\n  props: {\n    perSkuFee: {\n      required: true\n    },\n    isDetailMode: {\n      type: Boolean,\n      required: true,\n      default: false\n    },\n    optionConfig: {\n      type: Object,\n      required: true,\n      default: () => ({})\n    }\n  },\n  watch: {\n    perSkuFee: {\n      handler(newVal) {\n        this.ownPerSkuFee = newVal;\n      },\n      immediate: true\n    }\n  },\n  data() {\n    return {\n      ownPerSkuFee: ''\n    };\n  },\n  methods: {\n    inputPerSkuFee() {\n      this.$emit('change', this.ownPerSkuFee);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/subFeeManagement/create/percentageInput.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/subFeeManagement/create/search.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":2,"column":48,"nodeType":"VIdentifier","messageId":"deprecated","endLine":2,"endColumn":54}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-form class=\"sub-fee-search-form\" @submit.native.prevent=\"onSearch\">\n    <div class=\"search-form-row\">\n      <el-form-item v-for=\"schema in schemaList\" :key=\"schema.field\"\n        :class=\"schema.widthClass\" :label=\"schema.label\">\n        <pms-form-item @input=\"modifyForm\" :renderData=\"{ schema, form }\"></pms-form-item>\n      </el-form-item>\n    </div>\n    <!-- TODO:GP可以将这两个按钮做成可选的 -->\n    <el-row class=\"action-row\">\n      <div class=\"right-action-btn\">\n        <div class=\"list-btn search-btn\" @click=\"onSearch\">{{$t(\"rule.search\")}}</div>\n        <div class=\"list-btn clear-btn\" @click=\"onReset\">{{$t(\"purchaseRequest.clear\")}}</div>\n        <el-button native-type=\"submit\" class=\"hidden-btn\"></el-button>\n      </div>\n    </el-row>\n  </el-form>\n</template>\n\n<script>\nimport PMSFormItem from '@/components/BaseItem/formItem';\n\nexport default {\n  data() {\n    return {\n    };\n  },\n  props: {\n    schemaList: {\n      type: Array,\n      default: () => ([])\n    },\n    form: {\n      type: Object,\n      required: true\n    }\n  },\n  components: {\n    'pms-form-item': PMSFormItem\n  },\n  watch: {\n\n  },\n  computed: {\n  },\n  methods: {\n    modifyForm(schema, value) {\n      this.$emit('modify', schema.field, value);\n    },\n    onSearch() {\n      this.$emit('search');\n    },\n    onReset() {\n      this.schemaList.forEach(schema => {\n        if (schema.field !== 'po_type') {\n          this.$emit('modify', schema.field, schema.defaultValue === null ? undefined : schema.defaultValue || '');\n        }\n      });\n      this.$emit('search');\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.sub-fee-search-form {\n  margin: 5px 18px 20px 19px;\n  .el-col {\n    height: 58px;\n    line-height: 58px;\n  }\n  .search-form-row {\n    display: grid;\n    grid-auto-flow: row dense;\n    grid-gap: 12px;\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n    margin-bottom: 20px;\n  }\n  .long-col {\n    grid-column-start: span 2;\n  }\n  .action-row {\n    margin: -16px -4px -18px 0;\n  }\n  .right-action-btn {\n    text-align: right;\n    margin:10px 10px;\n    height: 36px;\n    .search-btn {\n      background: #3D6ED1;\n      border-radius: 2px;\n    }\n    .clear-btn {\n      background: #ffffff;\n      color: #3D6ED1;\n      border: 1px solid #3D6ED1;\n      border-radius: 2px;\n    }\n    .hidden-btn {\n      margin-left: -10px;\n      padding: 0;\n      width: 0;\n      height: 0;\n      visibility: hidden;\n    }\n  }\n}\n</style>\n\n<style lang=\"scss\">\n.sub-fee-search-form {\n  input.el-range-input {\n    background: #ffffff;\n    border: none;\n  }\n  .el-date-editor--daterange {\n    vertical-align: 0px;\n  }\n  .el-input__inner:focus {\n    outline: none;\n  }\n  .el-form-item__label, .el-form-item__content {\n    display: inline-block;\n  }\n  .el-form-item__label {\n    background: #FAFBFD;\n    border-radius: 3px 0 0 3px;\n    font-family: Roboto-Regular;\n    font-size: 14px;\n    color: #222933;\n    padding: 0 8px;\n    border: 1px solid #E2E6EC;\n    height: 32px;\n    line-height: 32px;\n  }\n  .el-form-item__content {\n    line-height: 32px;\n    border-left: none;\n    flex: 1;\n  }\n  .el-input__inner {\n    background: #FFFFFF;\n    border: 1px solid #E2E6EC;\n    border-radius: 0 4px 4px 0;\n    border-left: none;\n    padding-left: 8px;\n  }\n  input::placeholder {\n    font-family: Roboto-Regular;\n    font-size: 14px;\n    color: #B5BBC6;\n  }\n  .el-form-item {\n    display: flex;\n    margin-bottom: 0px;\n  }\n}\n.sub-fee-search-form {\n  .el-autocomplete {\n    width: 100%;\n  }\n  .el-input__inner {\n    height: 32px;\n  }\n  .el-date-editor.el-input, .el-date-editor.el-input__inner {\n    width: 100%;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/subFeeManagement/create/settingErrorMessage.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/subFeeManagement/create/subFeeFixedTypeSelect.vue","messages":[{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"SubFeeFixedTypeList\" is not in camelCase.","line":25,"column":5,"nodeType":"Property","endLine":29,"endColumn":6}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div>\n    <el-select @change=\"clearOptionDetail\" v-if=\"!isDetailMode\" v-model=\"basicForm.option_detail.fixed_fee_type\" class=\"type-select\">\n      <el-option v-for=\"item in SubFeeFixedTypeList\" :key=\"item.value\"\n        :label=\"item.label\" :value=\"item.value\"></el-option>\n    </el-select>\n    <span class=\"type-select\" v-else>{{(SubFeeFixedTypeList.find(item => item.value === basicForm.option_detail.fixed_fee_type) || {}).label || ''}}</span>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'SubFeeFixedTypeSelect',\n  props: {\n    basicForm: {\n      type: Object,\n      required: true,\n      default: () => ({})\n    },\n    isDetailMode: {\n      type: Boolean,\n      required: true,\n      default: false\n    },\n    SubFeeFixedTypeList: {\n      type: Array,\n      required: true,\n      default: () => ([])\n    }\n  },\n  methods: {\n    clearOptionDetail() {\n      this.$emit('change');\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/subFeeManagement/create/tierOption.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/subFeeManagement/dataList.vue","messages":[{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"SubFeePager\" is not in camelCase.","line":39,"column":5,"nodeType":"Property","endLine":39,"endColumn":24}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"sub-fee-table pms-ui\">\n    <list-view\n      :dataList=\"itemList\"\n      :config=\"tableConfig\"\n      :tableSchema=\"tableSchema\"\n      @rowClick=\"rowClick\"\n    ></list-view>\n    <el-pagination\n      :current-page=\"SubFeePager.pageIndex\" background layout=\"sizes, prev, pager, next\" :total.sync=\"SubFeePager.total\"\n      :page-size=\"SubFeePager.size\" :page-sizes=\"[10, 20, 50, 100]\"\n      @current-change=\"handleChangePageIndex\" @size-change=\"handleChangePageSize\"\n    ></el-pagination>\n  </div>\n</template>\n\n<script>\nimport ListView from '@/components/ApproveList/list';\nimport { getAllFeeTypeList, SubFeePeriodTypeList, SubFeeSupplierTypeList } from '@/utils/constant';\nimport moment from 'moment';\n\nexport default {\n  data() {\n    return {\n      tableConfig: {\n        showCheckBox: false,\n        align: 'center'\n      }\n    };\n  },\n  components: {\n    ListView\n  },\n  props: {\n    itemList: {\n      type: Array,\n      default: () => []\n    },\n    SubFeePager: Object\n  },\n  methods: {\n    handleChangePageIndex(index) {\n      this.$emit('getItemList', index);\n    },\n    handleChangePageSize(size) {\n      this.$emit('getItemList', 1, size);\n    },\n    rowClick(row, column) {\n      this.$router.push(`/admin/finance/subFee/edit/${row.sub_fee_id}`);\n    }\n  },\n  computed: {\n    tableSchema() {\n      const subTypeList = [];\n      getAllFeeTypeList().forEach(item => subTypeList.push(item, ...item.children || []));\n      return [\n        { field: 'sub_fee_id', label: this.$t('subFeeID') },\n        { field: 'sub_fee_name', label: this.$t('subFeeName') },\n        { field: 'supplier_purchase_type', label: this.$t('commonClientType'),\n          type: 'enum', options: SubFeeSupplierTypeList\n        },\n        { field: 'main_fee_type', label: this.$t('feeType'),\n          render: (schema, row, index, h) => {\n            const MainFeeType = (getAllFeeTypeList().find(item => item.value === row.main_fee_type) || {}).label;\n            const SubFeeType = (subTypeList.find(item => item.value === row.sub_fee_type) || {}).label;\n            return `${MainFeeType}/${SubFeeType}`;\n          }\n        },\n        { field: 'period_type', label: this.$t('subFeePeriodType'), width: '130px',\n          render: (schema, row, index, h) => row[schema.field] === 2\n            ? ['div', { class: 'sub-fee-period-type-cell' }, [\n              h('div', { class: 'short-term-title' }, 'Short Term'),\n              h('div', { class: 'short-term-date' },\n                `${moment(row.period_start_str, 'YYYY-MM-DD HH:mm:ss').format('YYYY-MM-DD')}~`),\n              h('div', { class: 'short-term-date' },\n                `${moment(row.period_end_str, 'YYYY-MM-DD HH:mm:ss').format('YYYY-MM-DD')}`)\n            ]] : (SubFeePeriodTypeList.find(item => {\n              return item.value === row[schema.field];\n            }) || {}).label || ''\n        },\n        { field: 'sub_fee_status', label: this.$t('subFeeStatus'),\n          render: (schema, row) => ['span', {\n            class: `pms-status-tag pms-status-tag-${row[schema.field] === 1 ? 'active' : 'inactive'}`\n          }, row[schema.field] === 1 ? 'Active' : 'Inactive']\n        },\n        { field: 'creator', label: this.$t('subFeeCreatedBy') },\n        { field: 'ctime', label: this.$t('subFeeCreatedTime'),\n          render: (schema, row) => moment(row[schema.field] * 1000).format('YYYY-MM-DD HH:mm:ss')\n        },\n        { field: 'mtime', label: this.$t('subFeeModifyTime'),\n          render: (schema, row) => moment(row[schema.field] * 1000).format('YYYY-MM-DD HH:mm:ss')\n        }\n      ].filter(item => !item.hidden);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  .sub-fee-table {\n    margin: 0 20px;\n  }\n  .el-pagination {\n    margin-top: 14px;\n    text-align: center;\n  }\n</style>\n\n<style lang=\"scss\">\n  .sub-fee-table {\n    .sub-fee-period-type-cell {\n      .short-term-title {\n        padding-right: 2px;\n      }\n      .short-term-date {\n        display: inline-block;\n        width: 70px;\n        opacity: 0.35;\n        font-size: 12px;\n        color: #000000;\n        text-align: left;\n      }\n    }\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/subFeeManagement/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/subFeeManagement/searchForm.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":2,"column":40,"nodeType":"VIdentifier","messageId":"deprecated","endLine":2,"endColumn":46}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-form class=\"search-form\" @submit.native.prevent=\"onSearch\">\n    <el-row>\n      <el-col :span=\"schema.width || 6\" v-for=\"schema in schemaList\" :key=\"schema.field\">\n        <el-form-item :label-width=\"schema.labelWidth || '180px'\" :label=\"schema.label\">\n          <pms-form-item @input=\"modifyForm\" :renderData=\"{ schema, form }\"></pms-form-item>\n        </el-form-item>\n      </el-col>\n    </el-row>\n    <el-row class=\"action-row\">\n      <el-form-item class=\"right-action-btn\">\n        <div class=\"list-btn search-btn\" @click=\"onSearch\">{{$t(\"rule.search\")}}</div>\n        <div class=\"list-btn clear-btn\" @click=\"onReset\">{{$t(\"purchaseRequest.clear\")}}</div>\n        <el-button native-type=\"submit\" class=\"hidden-btn\"></el-button>\n      </el-form-item>\n    </el-row>\n  </el-form>\n</template>\n\n<script>\nimport PMSFormItem, { getSelectOptions } from '@/components/BaseItem/formItem';\nimport { SubFeeStatusList, SubFeePeriodTypeList, getAllFeeTypeList, SubFeeSupplierTypeList } from '@/utils/constant';\n\nexport default {\n  data() {\n    return {\n      subFeeProps: {\n        multiple: true,\n        expandTrigger: 'hover'\n      }\n    };\n  },\n  props: {\n    form: {\n      type: Object,\n      required: true\n    }\n  },\n  components: {\n    'pms-form-item': PMSFormItem\n  },\n  computed: {\n    isUniversalUser() {\n      return this.$store.getters.isUniversalUser;\n    },\n    regionList() {\n      return this.$store.getters.countrySelectList || [];\n    },\n    schemaList() {\n      return [\n        { field: 'region', type: 'select', label: this.$t('commonRegion'),\n          props: { disabled: !this.isUniversalUser },\n          on: { change: () => this.onSearch() },\n          defaultValue: this.$store.getters.country,\n          getChildren: (h) => getSelectOptions(this.regionList, h)\n        },\n        { field: 'sub_fee_id', type: 'input', label: this.$t('subFeeID') },\n        { field: 'sub_fee_name', type: 'input', label: this.$t('subFeeName') },\n        { field: 'period_type', type: 'select', label: this.$t('subFeePeriodType'),\n          getChildren: (h) => getSelectOptions(SubFeePeriodTypeList, h),\n          on: { change: () => this.onSearch() }\n        },\n        { field: 'creator', type: 'input', label: this.$t('subFeeCreatedBy') },\n        { field: 'sub_fee_type_list', type: 'select', label: this.$t('subFeeType'),\n          defaultValue: [],\n          render: (schema, row, h) => ['el-cascader', {\n            props: {\n              clearable: true, value: this.form.sub_fee_type_list, 'show-all-levels': false,\n              options: getAllFeeTypeList(), props: this.subFeeProps, 'collapse-tags': true\n            },\n            on: {\n              input: (value) => { this.modifyForm(schema, value); },\n              change: () => this.onSearch()\n            }\n          }]\n        },\n        { field: 'status', type: 'select', label: this.$t('commonStatus'),\n          props: { disabled: !this.isUniversalUser },\n          getChildren: (h) => getSelectOptions(SubFeeStatusList, h),\n          on: { change: () => this.onSearch() }\n        },\n        { field: 'supplier_purchase_type', type: 'select', label: this.$t('commonClientType'),\n          getChildren: (h) => getSelectOptions(([{ label: 'All', value: '' }]).concat(SubFeeSupplierTypeList), h),\n          on: { change: () => this.onSearch() }\n        }\n      ];\n    }\n  },\n  methods: {\n    modifyForm(schema, value) {\n      this.$emit('modify', schema.field, value);\n    },\n    onSearch() {\n      this.$emit('search');\n    },\n    onReset() {\n      this.schemaList.forEach(schema => {\n        this.$emit('modify', schema.field, schema.defaultValue === null ? undefined : schema.defaultValue || '');\n      });\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  .search-form {\n    margin: 22px 18px 20px 19px;\n    .el-col {\n      height: 58px;\n      line-height: 58px;\n    }\n    .action-row {\n      margin-top: -18px;\n      margin-right: -4px;\n    }\n    .right-action-btn {\n      float: right;\n      width: 154px;\n      height: 36px;\n      overflow: hidden;\n      .search-btn {\n        background: #3D6ED1;\n        border-radius: 2px;\n      }\n      .clear-btn {\n        color: #3D6ED1;\n        border: 1px solid #3D6ED1;\n        border-radius: 2px;\n      }\n      .hidden-btn {\n        margin-left: -10px;\n        padding: 0;\n        width: 0;\n        height: 0;\n        visibility: hidden;\n      }\n    }\n  }\n</style>\n\n<style lang=\"scss\">\n  .sub-fee-list .search-form {\n    .el-input__inner {\n      height: 32px;\n    }\n    .el-cascader .el-input__inner {\n      height: 32px !important;\n    }\n    .el-cascader__tags {\n      .el-tag {\n        max-width: calc(100% - 60px);\n        overflow: hidden;\n        text-overflow: ellipsis;\n      }\n    }\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplier/addSkuDialog.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":5,"column":50,"nodeType":"VIdentifier","messageId":"deprecated","endLine":5,"endColumn":56}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-dialog :visible.sync=\"selectDialogVisible\" class=\"add-sku\" width=\"80%\" :show-close=\"false\">\n    <section class=\"select-sku\">\n      <p class=\"sku-title\">{{$t('supplier.selectSku')}}</p>\n      <el-form :model=\"searchSelectForm\" @submit.native.prevent :inline=\"true\">\n        <el-form-item :label=\"$t('purchaseOrder.skuID')\">\n          <el-input v-model=\"searchSelectForm.sku_id\"></el-input>\n        </el-form-item>\n        <el-form-item :label=\"$t('purchaseOrder.skuName')\">\n          <el-input v-model=\"searchSelectForm.sku_name\"></el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"selectFormSearch\">{{$t('purchaseRequest.search')}}</el-button>\n          <el-button type=\"primary\" @click=\"selectFormClear\">{{$t('purchaseRequest.clear')}}</el-button>\n        </el-form-item>\n      </el-form>\n      <el-table :data=\"selectSkuTable\" border size=\"mini\" @selection-change=\"handleSelectionChange\" :row-key=\"getRowKey\" ref=\"multipleTable\">\n        <el-table-column type=\"selection\" :selectable=\"handleSelectable\" :reserve-selection=\"true\"></el-table-column>\n        <el-table-column align=\"center\" prop=\"sku_id\" :label=\"$t('purchaseOrder.skuID')\"></el-table-column>\n        <el-table-column align=\"center\" prop=\"name\" :label=\"$t('purchaseOrder.skuName')\"></el-table-column>\n        <el-table-column align=\"center\" prop=\"shopid\" :label=\"$t('supplier.shopID')\"></el-table-column>\n        <el-table-column align=\"center\" prop=\"category_name\" :label=\"$t('userRole.userList.categoryName')\"></el-table-column>\n      </el-table>\n      <div class=\"content-center padding-top-bottom\">\n        <el-pagination background layout=\"prev, pager, next\" :page-size=\"selectForm.count\" :current-page=\"selectForm.pageno\" @current-change=\"handleSelectPageChange\" :total=\"selectForm.total\" ></el-pagination>\n      </div>\n    </section>\n    <section class=\"chosen-button\">\n      <el-button type=\"primary\" circle icon=\"el-icon-arrow-right\" @click=\"handleChooseSkus\"></el-button>\n    </section>\n    <section class=\"chosen-sku\">\n      <p class=\"sku-title\">{{$t('supplier.chosenSku')}}</p>\n      <el-table :data=\"chosenSkuTable\" border size=\"mini\">\n        <el-table-column align=\"center\" prop=\"sku_id\" :label=\"$t('purchaseOrder.skuID')\"></el-table-column>\n        <el-table-column align=\"center\" prop=\"name\" :label=\"$t('purchaseOrder.skuName')\"></el-table-column>\n        <el-table-column align=\"center\" :label=\"$t('purchaseOrder.Action')\">\n          <template slot-scope=\"scope\">\n            <el-button size=\"mini\" type=\"text\" @click=\"onCancel(scope.$index, scope.row)\">{{$t('supplier.cancel')}}</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </section>\n    <div slot=\"footer\">\n      <el-button type=\"primary\" size=\"mini\" @click=\"handleNext\">{{$t('supplier.next')}}</el-button>\n      <el-button type=\"danger\" size=\"mini\" plain @click=\"handleCancelDialogue\">{{$t('supplier.cancel')}}</el-button>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      multipleSkuSelection: []\n    };\n  },\n  props: {\n    selectDialogVisible: Boolean,\n    selectForm: Object,\n    searchSelectForm: Object,\n    selectSkuTable: Array,\n    chosenSkuTable: Array\n  },\n  methods: {\n    selectFormSearch() {\n      this.selectForm.pageno = 1;\n      this.$emit('selectFormSearch');\n    },\n    selectFormClear() {\n      this.searchSelectForm.sku_id = '';\n      this.searchSelectForm.sku_name = '';\n    },\n    handleSelectPageChange(val) {\n      this.selectForm.pageno = val;\n      this.$emit('selectFormSearch');\n    },\n    handleSelectionChange(val) {\n      this.multipleSkuSelection = val;\n    },\n    onCancel(index, row) {\n      this.chosenSkuTable.splice(index, 1);\n      this.$refs.multipleTable.clearSelection();\n      this.chosenSkuTable.forEach(item => {\n        this.$refs.multipleTable.toggleRowSelection(item, true);\n      });\n    },\n    handleChooseSkus() {\n      this.$emit('handleChooseSkus', [...this.multipleSkuSelection]);\n    },\n    getRowKey(row) {\n      return row.sku_id;\n    },\n    handleSelectable(row) {\n      return !this.chosenSkuTable.find(item => item.sku_id === row.sku_id);\n    },\n    handleCancelDialogue() {\n      this.$refs.multipleTable.clearSelection();\n      this.$emit('handleCancelDialogue');\n    },\n    handleNext() {\n      this.$emit('handleNext');\n    }\n  }\n};\n</script>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\">\n.add-sku {\n  .el-dialog__body {\n    display: flex;\n    justify-content: space-between;\n  }\n  .chosen-button {\n    align-self: center;\n    margin: 0 10px;\n  }\n  .chosen-sku {\n    flex-basis: 500px;\n  }\n  .sku-title {\n    margin-bottom: 20px;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplier/bindSkuDialog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplier/contractActionLog.vue","messages":[{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"supplier_id\" is not in camelCase.","line":63,"column":5,"nodeType":"Property","endLine":65,"endColumn":6}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-dialog\n    :visible.sync=\"dialogVisible\"\n    width=\"800px\"\n    lock-scroll\n    custom-class=\"pms-dialog\"\n    :title=\"$t('commonActionLog')\"\n    @close=\"onClose\"\n  >\n    <section v-loading=\"loading\" class=\"log-item-wrapper pms-log-table\">\n      <div class=\"log-item\" v-for=\"(log, index) in tableList\" :key=\"index\">\n        <div v-if=\"log.type === 1\" class=\"log-item-creation\">\n           <span>{{$t('commonLogRequestCreation', { operator:log.operator || 'N/A', mtime: moment(new Date(log.modify_time * 1000)).format('YYYY/MM/DD HH:mm:ss')})}}</span>\n        </div>\n        <div v-else>\n        <span class=\"log-item-operator\">{{log.operator || 'N/A'}}</span>\n        <span class=\"log-item-time\" >{{moment(new Date(log.modify_time * 1000)).format('YYYY/MM/DD HH:mm:ss')}}</span>\n        <el-table class=\"log-table\" :data=\"log.content\">\n          <el-table-column :label=\"$t('commonLogContent')\">\n            <template slot-scope=\"scope\">\n              <span class=\"log-field\">{{formartField(scope.row.field)}}</span>\n              <span class=\"log-action\" :class=\"{'red': scope.row.action === 3}\">{{formatAction(scope.row.action)}}</span>\n            </template>\n          </el-table-column>\n          <el-table-column :label=\"$t('commonLogBefore')\">\n             <template slot-scope=\"scope\">\n               {{scope.row.before == '' ? 'N/A' : formatContent(scope.row.field, scope.row.before)}}\n            </template>\n          </el-table-column>\n          <el-table-column :label=\"$t('commonLogAfter')\">\n            <template slot-scope=\"scope\">\n               {{scope.row.after == '' ? 'N/A' : formatContent(scope.row.field, scope.row.after)}}\n            </template>\n          </el-table-column>\n        </el-table>\n        </div>\n      </div>\n    </section>\n    <section slot=\"footer\">\n      <el-pagination\n        small\n        layout=\"slot, prev, next\"\n        background\n        :total=\"total\"\n        :page-size=\"pager.count\"\n        @current-change=\"handleCurrentChange\"\n        class=\"pms-ele-ui pms-pagination pms-float-left\"\n      >\n        <span class=\"pagination-info\">{{$t('commonPagination', { firstItem, lastItem, total})}}</span>\n      </el-pagination>\n      <el-button class=\"list-btn\" @click=\"onClose\">{{$t('commonOK')}}</el-button>\n    </section>\n  </el-dialog>\n</template>\n\n<script>\nimport { getContractActionLog } from '@/api/supplier';\nimport { supplierConfigActions } from '@/utils/constant';\nimport moment from 'moment';\n\nexport default {\n  props: {\n    supplier_id: {\n      required: true\n    },\n    visible: {\n      type: Boolean,\n      required: true,\n      default: false\n    }\n  },\n  data() {\n    return {\n      pager: {\n        count: 10,\n        page_no: 1\n      },\n      total: 0,\n      dialogVisible: false,\n      tableList: [],\n      loading: false\n    };\n  },\n  watch: {\n    visible(value) {\n      this.dialogVisible = value;\n      if (value) {\n        this.getActionLog();\n      }\n    }\n  },\n  computed: {\n    firstItem() {\n      return this.pager.count * (this.pager.page_no - 1) + 1;\n    },\n    lastItem() {\n      return (\n        this.pager.count * (this.pager.page_no - 1) + this.tableList.length\n      );\n    }\n  },\n  methods: {\n    moment,\n    formartField(value) {\n      if (value === 'trading_term_end_date_str') {\n        return 'trading_term_end_date';\n      }\n      if (value === 'trading_term_start_date_str') {\n        return 'trading_term_start_date';\n      }\n      return value;\n    },\n    formatContent(field, value) {\n      if (['site_start_date', 'site_end_date', 'supplier_end_date'].includes(field)) {\n        return this.formatSiteDate(value);\n      }\n      if (['trading_term_start_date', 'trading_term_end_date'].includes(field)) {\n        return moment(parseInt(value) * 1000).format('YYYY-MM-DD');\n      }\n      return value;\n    },\n    formatSiteDate(dateStr) {\n      if (!dateStr) {\n        return 'N/A';\n      }\n      return moment(dateStr, 'YYYYMMDDHHmmss').format('YYYY-MM-DD');\n    },\n    formatAction(action) {\n      const output = (\n        supplierConfigActions.find(item => item.value === action) || {\n          label: ''\n        }\n      ).label;\n      if (output) {\n        return this.$t(output);\n      } else {\n        return '';\n      }\n    },\n    handleCurrentChange(index) {\n      this.pager.page_no = index;\n      this.getActionLog();\n    },\n    async getActionLog() {\n      try {\n        this.loading = true;\n        const params = {\n          supplier_id: this.supplier_id,\n          data: {\n            ...this.pager\n          }\n        };\n        const res = await getContractActionLog(params);\n        if (res && res.retcode === 0) {\n          this.tableList = res.data.change_list;\n          this.total = res.data.total;\n        } else {\n          this.$message({ type: 'error', message: res.info });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loading = false;\n      }\n    },\n    onClose() {\n      this.$emit('close');\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n@import '~@/styles/variables.scss';\n.log-item-wrapper {\n  height: 500px;\n  overflow: auto;\n  .log-item {\n    font-size: 14px;\n    margin-top: 24px;\n    &:first-child {\n      margin-top: 0;\n    }\n    .log-item-creation{\n      font-weight: bold;\n      color: $black;\n    }\n    .log-item-operator,\n    .log-item-time {\n      color: rgba(51, 51, 51, 0.65);\n    }\n    .log-item-time {\n      margin-left: 4px;\n    }\n    .log-table {\n      margin-top: 8px;\n    }\n    .log-action {\n      font-size: 12px;\n      color: #55cc77;\n      padding: 4px;\n      margin-left: 8px;\n      background: #ebf9ef;\n      border-radius: 2px;\n      border-radius: 2px;\n      &.red {\n        color: #ee4d2d;\n        background: #fff1f0;\n      }\n    }\n  }\n}\n</style>\n<style lang=\"scss\">\n@import \"~@/styles/common.scss\"; // ~@ = @ = 'src' webpack alias path\n.pms-dialog {\n  .el-dialog__body {\n    padding: 8px 24px 16px;\n  }\n}\n.pms-log-table {\n  .el-table {\n    .el-table__header-wrapper {\n      th {\n        height: 54px;\n        background-color: #f5f5f5;\n        font-size: 14px;\n        line-height: 1.5em;\n        font-weight: normal;\n        .cell {\n           word-break: break-word;\n        }\n\n      }\n    }\n    .el-table__body {\n      td {\n        height: 70px;\n        .cell{\n          word-break: break-word;\n        }\n      }\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplier/contractInfo.vue","messages":[{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"site_end_date\" is not in camelCase.","line":134,"column":5,"nodeType":"Property","endLine":136,"endColumn":6}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"pms-ele-ui\">\n    <div class=\"pms-clearfix\" v-if=\"canEdit\">\n      <div class=\"pms-float-right\">\n        <el-button\n          type=\"primary\"\n          class=\"list-btn\"\n          v-if=\"!isEdit\"\n          @click=\"onEdit\"\n        >{{$t('commonEdit')}}</el-button>\n        <el-button\n          type=\"primary\"\n          class=\"list-btn\"\n          v-if=\"isEdit\"\n          :loading=\"loading\"\n          @click=\"onSave\"\n        >{{$t('commonSave')}}</el-button>\n        <el-button v-if=\"isEdit\" class=\"list-btn white\" @click=\"onCancel\">{{$t('commonCancel')}}</el-button>\n      </div>\n    </div>\n    <el-form\n      :validate-on-rule-change=\"false\"\n      :model=\"formData\"\n      :rules=\"rules\"\n      ref=\"formData\"\n      label-width=\"232px\"\n      label-position=\"left\"\n      class=\"contract-info-form-wrapper\"\n    >\n      <el-form-item :label=\"$t('supplierConfigSupplierPaymentType')\" prop=\"payment_type\">\n        <span v-if=\"!isEdit\">{{formatPaymentType(formData.payment_type)}}</span>\n        <el-select v-model=\"formData.payment_type\" v-else clearable>\n          <el-option\n            v-for=\"option in PaymentTypes\"\n            :key=\"option.value\"\n            :label=\"option.label\"\n            :value=\"option.value\"\n          ></el-option>\n        </el-select>\n      </el-form-item>\n      <el-form-item\n        :label=\"$t('supplierConfigTradingTermStartDate')\"\n        prop=\"trading_term_start_date\"\n      >\n        <span v-if=\"!isEdit\">{{formData.trading_term_start_date ||  '/'}}</span>\n        <el-date-picker\n          v-else\n          value-format=\"yyyy-MM-dd\"\n          type=\"date\"\n          :popper-class=\"'pms-ele-ui'\"\n          prefix-icon=\"el-icon-date\"\n          format=\"yyyy-MM-dd\"\n          clearable\n          v-model=\"formData.trading_term_start_date\"\n        ></el-date-picker>\n      </el-form-item>\n      <el-form-item :label=\"$t('supplierConfigTradingTermEndDate')\" prop=\"trading_term_end_date\">\n        <span v-if=\"!isEdit\">{{formData.trading_term_end_date || '/'}}</span>\n        <el-date-picker\n          v-else\n          type=\"date\"\n          value-format=\"yyyy-MM-dd\"\n          :popper-class=\"'pms-ele-ui'\"\n          prefix-icon=\"el-icon-date\"\n          format=\"yyyy-MM-dd\"\n          clearable\n          :picker-options=\"endTimeDisableOptions\"\n          v-model=\"formData.trading_term_end_date\"\n        ></el-date-picker>\n      </el-form-item>\n      <el-form-item v-for=\"item in uploadFileList\" :key=\"item.field\">\n        <template slot=\"label\">\n          <el-form-item :prop=\"item.field\">\n            <span\n              :class=\"{'uploadFile-form-label': typeof rules[item.field] === 'object'&& rules[item.field].required}\"\n            >{{$t(item.label) + ': '}}</span>\n            <el-checkbox-group v-show=\"false\" v-model=\"formData[item.field]\"></el-checkbox-group>\n          </el-form-item>\n        </template>\n        <file-list-attachment\n          :ref=\"`fileList_${item.field}`\"\n          :attachmentList=\"formData[item.field]\"\n          :mode=\"isEdit ? 'edit' : 'view' \"\n          @setAttachmentList=\"(...argu) => setGeneralFiles(item.field, ...argu)\"\n        ></file-list-attachment>\n      </el-form-item>\n      <el-form-item\n        v-for=\"(item, index) in formData.configurable_files\"\n        :key=\"item.contract_name + index\"\n      >\n        <template slot=\"label\">\n          <el-form-item :prop=\"`other_file_${index}`\">\n            <span :class=\"{'uploadFile-form-label': typeof rules[`other_file_${index}`] === 'object'&& rules[`other_file_${index}`].required}\">{{item.contract_name + ': '}}</span>\n            <el-checkbox-group v-show=\"false\" v-model=\"formData[`other_file_${index}`]\"></el-checkbox-group>\n          </el-form-item>\n        </template>\n        <file-list-attachment\n          :ref=\"`configurableFiles_${index}`\"\n          :attachmentList=\"item.file_list\"\n          :mode=\"isEdit ? 'edit' : 'view' \"\n          @setAttachmentList=\"(...argu) => setConfigurableFiles(index, ...argu)\"\n        ></file-list-attachment>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\nimport {\n  // Permission,\n  PaymentTypes\n} from '@/utils/constant';\nimport {\n  getSupplierConfig,\n  getContractInfo,\n  updateContractInfo\n} from '@/api/supplierConfig';\nimport FileListAttachment from '@/components/fileListAttachment';\nimport moment from 'moment';\n\nexport default {\n  components: { FileListAttachment },\n  props: {\n    canEdit: {\n      type: Boolean,\n      default: false\n    },\n    region: {\n      required: true\n    },\n    configType: {\n      required: true\n    },\n    site_end_date: {\n      required: true\n    }\n  },\n  data() {\n    return {\n      isEdit: false,\n      loading: false,\n      PaymentTypes,\n      formData: {},\n      cacheFormData: {},\n      uploadFileList: [],\n      contractConfig: {\n        contract_info: {},\n        contract_upload_file: {},\n        email_config: {}\n      }\n    };\n  },\n  computed: {\n    endTimeDisableOptions() {\n      const startDateTimeStamp = this.formatTimeStamp(this.formData.trading_term_start_date);\n      return {\n        disabledDate(date) {\n          return date.getTime() <= Math.max(startDateTimeStamp - 86400000, Date.now());\n        }\n      };\n    },\n    rules() {\n      const { contract_info, contract_upload_file } = this.contractConfig;\n      const baseRules = {\n        payment_type: {\n          required: contract_info.supplier_payment_type === 1,\n          trigger: 'change',\n          message: this.$t('commonIsRequired', {\n            target: this.$t('supplierConfigSupplierPaymentType')\n          })\n        },\n        trading_term_start_date: [\n          {\n            required: contract_info.trading_term_start_date === 1,\n            trigger: 'change',\n            message: this.$t('commonIsRequired', {\n              target: this.$t('supplierConfigTradingTermStartDate')\n            })\n          }\n        ],\n        trading_term_end_date: [\n          {\n            required: contract_info.trading_term_end_date === 1,\n            trigger: 'change',\n            message: this.$t('commonIsRequired', {\n              target: this.$t('supplierConfigTradingTermEndDate')\n            })\n          },\n          {\n            validator: (rule, value, cb) => {\n              if (value && this.formData.trading_term_start_date && this.formatTimeStamp(this.formData.trading_term_start_date) > this.formatTimeStamp(value)) {\n                return cb(new Error(this.$t('supplierConfigTradingStratTimeLaterTradingEndTime')));\n              }\n              if (\n                this.site_end_date && value &&\n                this.site_end_date < this.formatTimeStamp(value)\n              ) {\n                return cb(\n                  new Error(this.$t('supplierConfigTradingEndTimeCanotLaterSiteEndDate'))\n                );\n              }\n              cb();\n            },\n            trigger: ['change', 'blur']\n          }\n        ],\n        supplier_registration_form: {\n          required: contract_upload_file.supplier_registration_form === 1,\n          trigger: 'change',\n          message: this.$t('commonPleaseUploadFiles')\n        },\n        contract: {\n          required: contract_upload_file.contract === 1,\n          trigger: 'change',\n          message: this.$t('commonPleaseUploadFiles')\n        },\n        legal_document: {\n          required: contract_upload_file.legal_document === 1,\n          trigger: 'change',\n          message: this.$t('commonPleaseUploadFiles')\n        },\n        bank_info: {\n          required: contract_upload_file.bank_info === 1,\n          trigger: 'change',\n          message: this.$t('commonPleaseUploadFiles')\n        },\n        trading_certificate: {\n          required: contract_upload_file.trading_certificate === 1,\n          trigger: 'change',\n          message: this.$t('commonPleaseUploadFiles')\n        },\n        other: {\n          required: contract_upload_file.other === 1,\n          trigger: 'change',\n          message: this.$t('commonPleaseUploadFiles')\n        }\n      };\n\n      if (\n        this.formData.configurable_files &&\n        this.formData.configurable_files.length\n      ) {\n        this.formData.configurable_files.forEach((item, index) => {\n          const configItem = contract_upload_file.configurable_files.find(\n            config => config.name === item.contract_name\n          );\n          if (configItem && configItem.config === 1) {\n            baseRules[`other_file_${index}`] = {\n              required: true,\n              trigger: 'change',\n              message: this.$t('commonPleaseUploadFiles')\n            };\n          }\n        });\n      }\n      return baseRules;\n    }\n  },\n  mounted() {\n    this.getContractConfig().then(() => {\n      this.getContractInfo();\n    });\n  },\n  methods: {\n    moment,\n    formatTimeStamp(dateStr) {\n      if (dateStr) {\n        return moment(dateStr, 'YYYY-MM-DD').format('x');\n      }\n      return 0;\n    },\n    setConfigurableFiles(index, fileList) {\n      this.formData[`other_file_${index}`] = fileList;\n      this.formData.configurable_files[index].file_list = fileList;\n    },\n    setGeneralFiles(field, attachmentList) {\n      if (Array.isArray(this.formData[field])) {\n        this.formData[field] = attachmentList;\n      }\n    },\n    formatPaymentType(type) {\n      return (PaymentTypes.find(item => item.value === type) || { label: '' })\n        .label;\n    },\n    hasNoFinishFile() {\n      let didNotFinish = this.uploadFileList.some(item => {\n        if (this.$refs[`fileList_${item.field}`]) {\n          const { isAllFinish } = this.$refs[`fileList_${item.field}`][0].checkFileListStatus();\n          return isAllFinish !== undefined && !isAllFinish;\n        } else {\n          return false;\n        }\n      });\n      if (!didNotFinish) {\n        didNotFinish = this.formData.configurable_files.some((item, index) => {\n          if (this.$refs[`configurableFiles_${index}`]) {\n            const { isAllFinish } = this.$refs[`configurableFiles_${index}`][0].checkFileListStatus();\n            return isAllFinish !== undefined && !isAllFinish;\n          } else {\n            return false;\n          }\n        });\n      }\n      return didNotFinish;\n    },\n    onSave() {\n      this.$refs.formData.validate(isValid => {\n        if (isValid) {\n          if (this.hasNoFinishFile()) {\n            return this.$message.error(this.$t('attachmentFileUploading'));\n          }\n          if (this.formData.trading_term_end_date &&\n            this.formatTimeStamp(this.formData.trading_term_end_date) - Date.now() < 86400000 * 59\n          ) {\n            this.$confirm(\n              this.$t('supplierConfigEndTimeinner60days'),\n              this.$t('commonTips'),\n              {\n                customClass: 'pms-ele-ui',\n                confirmButtonText: this.$t('commonConfirm'),\n                cancelButtonText: this.$t('commonCancel'),\n                confirmButtonClass: 'list-btn',\n                cancelButtonClass: 'list-btn white'\n              }\n            ).then(() => {\n              this.submitData();\n            }).catch(() => {});\n          } else {\n            this.submitData();\n          }\n        }\n      });\n    },\n    async submitData() {\n      try {\n        this.loading = true;\n        const params = {\n          supplier_id: this.$route.params.supplier_id,\n          data: {\n            payment_type: this.formData.payment_type === '' ? 0 : this.formData.payment_type,\n            supplier_registration_form: this.formData.supplier_registration_form,\n            legal_document: this.formData.legal_document,\n            configurable_files: this.formData.configurable_files,\n            contract: this.formData.contract,\n            other: this.formData.other,\n            bank_info: this.formData.bank_info,\n            trading_certificate: this.formData.trading_certificate,\n            trading_term_start_date_str: this.formData.trading_term_start_date || '',\n            trading_term_end_date_str: this.formData.trading_term_end_date || ''\n          }\n        };\n        const res = await updateContractInfo(params);\n        if (res && res.retcode === 0) {\n          this.$message({\n            type: 'success',\n            message: this.$t('commonSubmitSuccess')\n          });\n          this.isEdit = false;\n          this.getContractInfo();\n        } else {\n          this.$message({ type: 'error', message: res.info });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loading = false;\n      }\n    },\n    onEdit() {\n      this.isEdit = true;\n    },\n    onCancel() {\n      this.formData = JSON.parse(JSON.stringify(this.cacheFormData));\n      this.initAttachment();\n      this.isEdit = false;\n    },\n    clearFormValidate() {\n      this.$refs.formData && this.$refs.formData.clearValidate();\n    },\n    getContractConfig() {\n      return new Promise(async(resolve, reject) => {\n        try {\n          const params = {\n            region: this.region,\n            config_type: this.configType\n          };\n          const res = await getSupplierConfig(params);\n          if (res && res.retcode === 0) {\n            this.contractConfig = res.data;\n            this.setUploadFileConfig(this.contractConfig.contract_upload_file);\n            resolve();\n          } else {\n            reject();\n            this.$message({ type: 'error', message: res.info });\n          }\n        } catch (e) {\n          reject();\n          this.$message({ type: 'error', message: e });\n        }\n      });\n    },\n    parserConfigLabel(key) {\n      let label = '';\n      switch (key) {\n        case 'supplier_registration_form':\n          label = 'supplierConfigSupplierRegistrationForm';\n          break;\n        case 'trading_certificate':\n          label = 'supplierConfigTradingCertificate';\n          break;\n        case 'contract':\n          label = 'supplierConfigContract';\n          break;\n        case 'legal_document':\n          label = 'supplierConfigLegalDocument';\n          break;\n        case 'bank_info':\n          label = 'supplierConfigBankInfo';\n          break;\n        case 'other':\n          label = 'supplierConfigOther';\n          break;\n      }\n      return label;\n    },\n    setUploadFileConfig(configUploadObj) {\n      this.uploadFileList = [];\n      Object.entries(configUploadObj).map(([key, value]) => {\n        if (typeof value === 'number') {\n          if (value !== 3) {\n            this.uploadFileList.push({\n              label: this.parserConfigLabel(key),\n              field: key,\n              isRequired: value === 1\n            });\n          }\n        }\n      });\n    },\n    async getContractInfo() {\n      try {\n        const supplier_id = this.$route.params.supplier_id;\n        const res = await getContractInfo(supplier_id);\n        if (res && res.retcode === 0) {\n          this.formData = {\n            ...res.data,\n            payment_type: res.data.payment_type === 0 ? '' : res.data.payment_type,\n            trading_term_start_date: res.data.trading_term_start_date_str || '',\n            trading_term_end_date: res.data.trading_term_end_date_str || '',\n            other_file_0: [],\n            other_file_1: []\n          };\n          this.formData.configurable_files.forEach((item, index) => {\n            this.formData[`other_file_${index}`] = item.file_list;\n          });\n          this.cacheFormData = JSON.parse(JSON.stringify(this.formData));\n          this.initAttachment();\n        } else {\n          this.$message({ type: 'error', message: res.info });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loading = false;\n      }\n    },\n    initAttachment() {\n      this.$nextTick(() => {\n        this.uploadFileList.forEach(item => {\n          if (this.$refs[`fileList_${item.field}`]) {\n            this.$refs[`fileList_${item.field}`][0].initAttachmentList();\n          }\n        });\n        this.formData.configurable_files.forEach((item, index) => {\n          this.$refs[`configurableFiles_${index}`][0].initAttachmentList &&\n            this.$refs[`configurableFiles_${index}`][0].initAttachmentList();\n        });\n        this.clearFormValidate();\n      });\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.contract-info-form-wrapper {\n  .el-select {\n    width: 254px;\n  }\n  .el-input {\n    &,\n    &.el-date-editor {\n      width: 254px !important;\n    }\n    .el-input__inner {\n      width: 100%;\n    }\n  }\n}\n</style>\n<style lang=\"scss\" scoped>\n@import \"~@/styles/variables.scss\";\n.uploadFile-form-label {\n  &:before {\n    content: \"*\";\n    color: $red;\n    display: inline-block;\n    height: 8px;\n    width: 8px;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplier/detail.vue","messages":[{"ruleId":"vue/no-unused-components","severity":2,"message":"The \"ActionLogDialog\" component has been registered but not used.","line":134,"column":5,"nodeType":"Property","endLine":134,"endColumn":20}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div id=\"app-container\" class=\"pms-ui pms-ele-ui supplier-detail\">\n    <div class=\"pms-layout-container\">\n      <el-button type=\"text\" class=\"pms-btn-ui pms-float-right action-log-btn\" @click='openActionLogDialog'>{{$t('purchaseRequest.actionLog')}}</el-button>\n      <h2>{{$t('purchaseOrder.supplierDetail')}}</h2>\n      <section class=\"header-tab-section\">\n        <el-tabs\n          v-model=\"activeTab\"\n          type=\"card\"\n          class=\"pms-ele-ui wrapper-tab-card\"\n        >\n          <el-tab-pane\n            v-for=\"item in titleTabs\"\n            :key=\"item.value\"\n            :label=\"$t(item.label)\"\n            :name=\"item.value\"\n          ></el-tab-pane>\n        </el-tabs>\n      </section>\n      <el-main class=\"detail-content\">\n        <el-form ref=\"form\" :model=\"form\" label-position=\"left\" label-width=\"260px\">\n          <!-- Basic information form, Delivery information form -->\n          <section v-if=\"activeTab === 'basic'\">\n            <div class=\"pms-clearfix\" v-if=\"canSupplierDetailBasicInfoEdit\">\n              <div class=\"pms-float-right\">\n                <el-button type=\"primary\" class=\"list-btn\" v-if=\"!isBasicEdit\" @click=\"onEdit('Basic')\">{{$t('commonEdit')}}</el-button>\n                <el-button type=\"primary\" class=\"list-btn\" v-if=\"isBasicEdit\" @click=\"onSave('Basic')\">{{$t('commonSave')}}</el-button>\n                <el-button v-if=\"isBasicEdit\" class=\"list-btn white\" @click=\"onCancel('Basic')\">{{$t('commonCancel')}}</el-button>\n              </div>\n            </div>\n              <detailInfoItem\n                :infoSchema=\"basicInfoList\"\n                :canEdit=\"isBasicEdit\"\n                :realData=\"form\"/>\n             <detailInfoItem\n              :infoSchema=\"deliveryInfoList\"\n              :realData=\"form\"\n              :canEdit=\"isBasicEdit\"\n              />\n          </section>\n\n          <!-- Contact information form shopee PIC information form -->\n          <section v-if=\"activeTab === 'PIC'\" >\n            <div class=\"pms-clearfix\" v-if=\"canSupplierDetailPICEdit\">\n              <div class=\"pms-float-right\">\n                <el-button type=\"primary\" class=\"list-btn\" v-if=\"!isPICEdit\" @click=\"onEdit('PIC')\">{{$t('commonEdit')}}</el-button>\n                <el-button type=\"primary\" class=\"list-btn\" v-if=\"isPICEdit\" @click=\"onSave('PIC')\">{{$t('commonSave')}}</el-button>\n                <el-button v-if=\"isPICEdit\" class=\"list-btn white\" @click=\"onCancel('PIC')\">{{$t('commonCancel')}}</el-button>\n              </div>\n            </div>\n             <detailInfoItem\n              :infoSchema=\"contactInfoList\"\n              :canEdit=\"isPICEdit\"\n              :realData=\"form\"\n              :hasSpecialType=\"true\"\n              :specialTypes=\"BDInfoList\"\n              :canAdd=\"isPICEdit && BDInfoList.length < 3\"\n              @add=\"addBDInfo\"\n              @remove=\"removeBDInfo\"\n              />\n              <detailInfoItem\n                :infoSchema=\"shopeePICInfoList\"\n                :realData=\"form\"\n                :canEdit=\"isPICEdit\"\n                :hasSpecialType=\"true\"\n                :specialTypes=\"sourceInfoList\"\n                :canAdd=\"isPICEdit && sourceInfoList.length < 5\"\n                :specialTitle=\"{ email: 'supplier.shopeeSourceEmail', phone: 'supplier.shopeeSourcePhone' }\"\n                @add=\"addSourceInfo\"\n                @remove=\"removeSourceInfo\"\n                @autoCompleteFetch=\"autoCompleteFetch\"\n                @autoCompleteBlur=\"autoCompleteBlur\"\n                @autoCompleteSelect=\"autoCompleteSelect\"\n                @autoCompleteClear=\"autoCompleteClear\"\n              />\n          </section>\n\n          <!-- shopee PIC information form -->\n          <section v-if=\"activeTab === 'contract'\">\n            <div class=\"no-permission\" v-if=\"!canSupplierDetailContractInfoView && !canSupplierDetailContractInfoEdit\">\n              <div class=\"content-box\">\n              <svg-icon iconClass=\"noPermissions\" className=\"icon\"></svg-icon>\n              <p>{{$t('commonNoPermissionsTips')}}</p>\n\n              </div>\n            </div>\n            <contractInfo v-else :region=\"form.approval_country || form.country\" :canEdit=\"canSupplierDetailContractInfoEdit\" :configType=\"configType\" :site_end_date=\"formatSiteDateToTimeStamp(form.site_end_date)\"/>\n         </section>\n\n          <!-- shop information form -->\n\n          <shop-info v-if=\"activeTab === 'shop'\" :country=\"form.approval_country\" :canEdit=\"canSupplierDetailShopInfoEdit\"></shop-info>\n\n          <!-- Common SKU List -->\n          <section class=\"sku-section\" v-if=\"activeTab === 'sku'\">\n              <commonSku\n              ref=\"commonSku\"\n              :brandList=\"brandList\"\n              :sourcingStatusList=\"sourcingStatusList\"\n              :currency=\"currency\"\n             ></commonSku>\n          </section>\n        </el-form>\n      </el-main>\n    </div>\n    <contractActionLog\n      :supplier_id=\"$route.params.supplier_id\"\n      :visible=\"contractActionLogShow\"\n      @close=\"closeContractActionLog\"\n      ></contractActionLog>\n  </div>\n</template>\n\n<script>\nimport detailInfoItem from './detailInfoItem.vue';\nimport contractInfo from './contractInfo.vue';\nimport shopInfo from '@/components/supplier/shopInfo.vue';\nimport commonSku from '@/components/supplier/commonSku.vue';\nimport ActionLogDialog from '@/components/actionLogDialog/supplierActionLog';\nimport { getSupplierDetail, updateSupplierDetail } from '@/api/supplier';\nimport { getBrandList } from '@/api/brand';\nimport { getUsers } from '@/api/userRole';\nimport { SKUSourcingStatus, Permission, deliveryTypes, emailTypes } from '@/utils/constant';\nimport { hasPermission } from '@/utils/permission';\nimport { commonFetchAction, SupplierDetailKeyToName } from '@/utils';\nimport { isValidEmail } from '@/utils/validate';\nimport moment from 'moment';\nimport contractActionLog from './contractActionLog';\n\nconst SpecialEmailRegExp = /[sourcer,BD]\\-(\\d)/;\nconst isSourcerField = /sourcer(\\-\\d+)?/;\nexport default {\n  components: {\n    ActionLogDialog,\n    shopInfo,\n    commonSku,\n    detailInfoItem,\n    contractInfo,\n    contractActionLog\n  },\n  data() {\n    return {\n      activeTab: 'basic',\n      titleTabs: [\n        { value: 'basic', label: 'supplierBasicInformation' },\n        { value: 'PIC', label: 'supplierPICContactInfo' },\n        { value: 'contract', label: 'supplierContractInformation' },\n        { value: 'shop', label: 'supplierShopInformation' },\n        { value: 'sku', label: 'supplierSkuInformation' }\n      ],\n      canSupplierDetailBasicInfoEdit: false,\n      canSupplierDetailPICEdit: false,\n      canSupplierDetailContractInfoEdit: false,\n      canSupplierDetailContractInfoView: false,\n      canSupplierDetailShopInfoEdit: false,\n      merchandiserHasNoPhone: false,\n      sourcingStatusList: SKUSourcingStatus,\n      contractActionLogShow: false,\n      canEditShopType: false,\n      disabledShopType: true,\n      isBasicEdit: false,\n      isPICEdit: false,\n      isContractEdit: false,\n      cacheForm: {},\n      form: {},\n      supplierStatus: '',\n      supplierStatusList: [{\n        label: 'On',\n        value: true\n      }, {\n        label: 'Off',\n        value: false\n      }],\n      brandList: [],\n      unitList: [],\n      BDInfoList: [],\n      catchBDInfoList: [],\n      sourceInfoList: [],\n      catchsourceInfoList: [],\n      blurShopeeMerchandiser: {},\n      blurShopeeSourcerList: {},\n      emailTypes\n    };\n  },\n  computed: {\n    configType() {\n      const isCB = this.form.supplier_type === 'CB';\n      const isConsignment = this.form.purchase_type === 'Consignment';\n      if (!isCB && !isConsignment) {\n        return 1;\n      } else if (!isCB && isConsignment) {\n        return 2;\n      } else {\n        return 3; // 没有是cb，又是outright的类型\n      }\n    },\n    currency() {\n      return this.$store.getters.currencyMap[this.form.country] || '';\n    },\n    basicInfoList() {\n      const { form } = this;\n      return [\n        { label: this.$t('purchaseOrder.vendorSideID'), value: form.supplier_id },\n        { label: this.$t('purchaseOrder.supplierName'), value: form.name },\n        { label: this.$t('purchaseOrder.supplierType'), value: form.supplier_type },\n        { label: this.$t('purchaseOrder.purchaseType'), value: form.purchase_type },\n        { label: this.$t('purchaseOrder.contractType'), value: form.contract_type },\n        { label: this.$t('purchaseOrder.country'), value: form.approval_country },\n        { label: this.$t('purchaseOrder.ebsCompanyCode'), value: form.company_code },\n        { label: this.$t('supplier.paymentTerm'), value: form.payment_method },\n        { label: this.$t('purchaseRequest.taxCode'), value: form.tax_code },\n        { label: this.$t('purchaseRequest.tax'), value: form.tax_rate },\n        { label: this.$t('supplier.supplierStartDate'), value: this.formatSiteDate(form.site_start_date) },\n        { label: this.$t('supplier.supplierEndDate'), value: this.formatSiteDate(form.site_end_date) },\n        { label: this.$t('supplier.EBSSupplierNumber'), value: form.supplier_number },\n        { label: this.$t('supplier.supplierSiteCode'), value: form.supplier_site_code },\n        { label: this.$t('purchaseOrder.description'), value: form.description }\n      ];\n    },\n    contactInfoList() {\n      const { form } = this;\n      return [\n        { label: this.$t('supplier.addressName'), value: form.address_name },\n        { label: this.$t('supplier.officeAddress'), value: form.address },\n        { label: this.$t('purchaseOrder.addressCountry'), value: form.country },\n        { label: this.$t('supplier.addressPostalCode'), value: form.postal_code },\n        { label: this.$t('supplier.supplierFinanceEmail'), value: form.finance_email, editType: 'input', field: 'finance_email', max: 128 },\n        { label: this.$t('supplier.supplierFinancePhone'), value: form.finance_phone, editType: 'input', field: 'finance_phone', max: 32 },\n        { label: this.$t('supplier.supplierLegalEmail'), value: form.legal_email, editType: 'input', field: 'legal_email', max: 128 },\n        { label: this.$t('supplier.supplierLegalPhone'), value: form.legal_phone, editType: 'input', field: 'legal_phone', max: 32 },\n        { label: this.$t('supplier.supplierWarehouseEmail'), value: form.warehouse_email, editType: 'input', field: 'warehouse_email', max: 128 },\n        { label: this.$t('supplier.supplierWarehousePhone'), value: form.warehouse_phone, editType: 'input', field: 'warehouse_phone', max: 32 }\n      ];\n    },\n    deliveryInfoList() {\n      const { form } = this;\n      const SerializedOptions = [\n        { label: 'Yes', value: 1 },\n        { label: 'No', value: 2 }\n      ];\n      const formatSerialised = (SerializedOptions.find(item => item.value === form.is_serialised) || { label: '/' }).label;\n      return [\n        { label: this.$t('purchaseOrder.deliveryType'), value: form.delivery_type, editType: 'select', options: deliveryTypes, field: 'delivery_type' },\n        { label: this.$t('supplier.deliveryLeadTime'), value: form.delivery_lead_time, editType: 'input-number', field: 'delivery_lead_time', max: 30, min: 1 },\n        { label: this.$t('purchaseOrder.isSerialised'), value: formatSerialised, editType: 'select', options: SerializedOptions, field: 'is_serialised' },\n        { label: this.$t('purchaseOrder.minimumOrderQuantity'), value: form.minimum_order_quantity, editType: 'input-number', field: 'minimum_order_quantity' },\n        { label: this.$t('supplier.returnAddress'), value: form.return_address, editType: 'input', field: 'return_address', max: 256, min: 0 }\n      ];\n    },\n    shopeePICInfoList() {\n      const { form } = this;\n      return [\n        { label: this.$t('supplier.shopeeMerchandiserEmail'), value: form.shopee_merchandiser, editType: 'autoComplete', field: 'shopee_merchandiser', max: 128 },\n        { label: this.$t('supplier.shopeeMerchandiserPhone'), value: form.shopee_merchandiser_phone, editType: this.merchandiserHasNoPhone ? 'input' : '', field: 'shopee_merchandiser_phone' }\n      ];\n    }\n  },\n  methods: {\n    formatSiteDateToTimeStamp(dateStr) {\n      if (!dateStr) {\n        return '';\n      }\n      return moment(dateStr, 'YYYYMMDDHHmmss').format('x');\n    },\n    formatSiteDate(dateStr) {\n      if (!dateStr) {\n        return '';\n      }\n      return moment(dateStr, 'YYYYMMDDHHmmss').format('YYYY-MM-DD');\n    },\n    onContractEdit() {\n      this.isContractEdit = true;\n    },\n    addBDInfo() {\n      this.BDInfoList.push({ email: '', phone: '', field: 'BD' });\n    },\n    removeBDInfo(index) {\n      this.BDInfoList.splice(index, 1);\n    },\n    addSourceInfo() {\n      this.sourceInfoList.push({ email: '', phone: '', autoComplete: true, field: 'sourcer' });\n    },\n    removeSourceInfo(index) {\n      this.sourceInfoList.splice(index, 1);\n    },\n    autoCompleteFetch({ field, queryString, cb }) {\n      if (['shopee_merchandiser', 'sourcer', 'BD'].includes(field)) { // merchandiser or sourcer or BD\n        this.checkEmailInUserList(field, queryString, cb);\n      }\n    },\n    autoCompleteSelect({ field, selectedItem }) {\n      if (!isValidEmail(selectedItem.email)) {\n        selectedItem.email = '';\n        selectedItem.phone = '';\n        this.$message.error(this.$t('supplierConfigInvalidEmailFormat'));\n      }\n      if (field === 'shopee_merchandiser') {\n        this.selectMerchandiser(selectedItem);\n      }\n      if (SpecialEmailRegExp.test(field)) {\n        const indexArr = SpecialEmailRegExp.exec(field);\n        let index = indexArr[1];\n        if (index === 1) {\n          index = '';\n        }\n        this.selectSourcer(selectedItem, index);\n      }\n    },\n    autoCompleteClear({ field, index }) {\n      if (field === 'shopee_merchandiser') {\n        this.form.shopee_merchandiser_phone = '';\n        return;\n      }\n      if (field === 'sourcer') {\n        this.sourceInfoList[index - 1].phone = '';\n        return;\n      }\n    },\n    autoCompleteBlur({ field, value }) {\n      if (value.trim() === '') {\n        if (field === 'shopee_merchandiser') {\n          this.form.shopee_merchandiser_phone = '';\n          return;\n        }\n        if (isSourcerField.test(field)) {\n          const index = isSourcerField.exec(field)[1];\n          this.sourceInfoList[index - 1].phone = '';\n          return;\n        }\n      }\n      if (field === 'shopee_merchandiser') {\n        this.merchandiserEmailBlur();\n      }\n      if (SpecialEmailRegExp.test(field)) {\n        const indexArr = SpecialEmailRegExp.exec(field);\n        if (indexArr) {\n          this.blueSourcerEmail(indexArr[1]);\n        }\n      }\n    },\n    async checkEmailInUserList(field, value, cb) {\n      try {\n        const params = {\n          email: value\n        };\n        const res = await getUsers(params);\n        commonFetchAction(res, (data) => {\n          if ((isSourcerField.test(field) || field === 'shopee_merchandiser') && data.users.length < 1) {\n            return cb([{ value, email: value, phone: '' }]);\n          }\n          cb((data.users || []).map(user => {\n            return {\n              value: user.email,\n              email: user.email,\n              phone: user.phone\n            };\n          }).filter(user => this.emailTypes.includes(user.email.slice(user.email.indexOf('@')))));\n        });\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n        cb([]);\n      }\n    },\n    selectMerchandiser(selectedItem) {\n      this.form.shopee_merchandiser = selectedItem.email;\n      this.form.shopee_merchandiser_phone = selectedItem.phone;\n      if (!selectedItem.phone) {\n        this.merchandiserHasNoPhone = true;\n      } else {\n        this.merchandiserHasNoPhone = false;\n      }\n      this.blurShopeeMerchandiser = selectedItem;\n    },\n    merchandiserEmailBlur() {\n      if (Object.keys(this.blurShopeeMerchandiser).length) {\n        this.form.shopee_merchandiser = this.blurShopeeMerchandiser.email;\n        this.form.shopee_merchandiser_phone = this.blurShopeeMerchandiser.phone;\n      }\n    },\n    selectSourcer(selectedItem, index) {\n      index = index - 1;\n      this.sourceInfoList[index].email = selectedItem.email;\n      this.sourceInfoList[index].phone = selectedItem.phone;\n      if (!selectedItem.phone) {\n        this.sourceInfoList[index].hasNoPhone = true;\n      } else {\n        this.sourceInfoList[index].hasNoPhone = false;\n      }\n      this.blurShopeeSourcerList = JSON.parse(JSON.stringify(this.sourceInfoList));\n    },\n    blueSourcerEmail(index) {\n      if (this.blurShopeeSourcerList.length) {\n        index = index - 1;\n        this.sourceInfoList[index].email = this.blurShopeeSourcerList[index].email;\n        this.sourceInfoList[index].phone = this.blurShopeeSourcerList[index].phone;\n      }\n    },\n    onEdit(module) {\n      this.cacheForm = JSON.parse(JSON.stringify(this.form));\n      switch (module) {\n        case 'Basic': this.isBasicEdit = true; break;\n        case 'PIC': this.isPICEdit = true; break;\n      }\n    },\n    async onSave(type) {\n      try {\n        let paramsData = {};\n        const { form } = this;\n\n        if (type === 'PIC') {\n          if (!this.checkData()) return;\n          const bdEmailName = 'email';\n          const bdPhoneName = 'phone';\n          const sourceEmailName = 'shopee_sourcer';\n          const sourcePhoneName = 'shopee_sourcer_phone';\n          const tempObj = {};\n          this.BDInfoList.forEach((item, index) => {\n            const num = index === 0 ? '' : index + 1;\n            tempObj[bdEmailName + num] = item.email;\n            tempObj[bdPhoneName + num] = item.phone;\n          });\n          this.sourceInfoList.forEach((item, index) => {\n            const num = index === 0 ? '' : index + 1;\n            tempObj[sourceEmailName + num] = item.email;\n            tempObj[sourcePhoneName + num] = item.phone;\n          });\n          const dynamicName = ['email', 'email2', 'email3', 'phone', 'phone2', 'phone3',\n            'shopee_sourcer', 'shopee_sourcer2', 'shopee_sourcer3',\n            'shopee_sourcer_phone', 'shopee_sourcer_phone2', 'shopee_sourcer_phone3'];\n          dynamicName.forEach(key => {\n            if (!tempObj[key]) {\n              tempObj[key] = '';\n            }\n          });\n          paramsData = {\n            finance_email: form.finance_email,\n            finance_phone: form.finance_phone,\n            legal_email: form.legal_email,\n            legal_phone: form.legal_phone,\n            warehouse_email: form.warehouse_email,\n            warehouse_phone: form.warehouse_phone,\n            shopee_merchandiser: form.shopee_merchandiser,\n            shopee_merchandiser_phone: form.shopee_merchandiser_phone,\n            ...tempObj\n          };\n        } else if (type === 'Basic') {\n          paramsData = {\n            delivery_type: form.delivery_type,\n            delivery_lead_time: `${typeof form.delivery_lead_time === 'number' ? form.delivery_lead_time : ''}`,\n            is_serialised: form.is_serialised || 0,\n            minimum_order_quantity: `${typeof form.minimum_order_quantity === 'number' ? form.minimum_order_quantity : ''}`,\n            return_address: form.return_address\n          };\n        }\n\n        const params = {\n          supplier_id: this.$route.params.supplier_id,\n          data: paramsData\n        };\n        const res = await updateSupplierDetail(params);\n        commonFetchAction(res, () => {\n          this.$message({ type: 'success', message: 'Modify Successfully!' });\n          if (type === 'Basic') {\n            this.isBasicEdit = false;\n          } else if (type === 'PIC') {\n            this.isPICEdit = false;\n          }\n        });\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    checkData() {\n      const { form } = this;\n      if (form.shopee_merchandiser && !form.shopee_merchandiser_phone) {\n        this.$message.error(this.$t('commonIsRequired', { target: this.$t('supplier.shopeeMerchandiserPhone') }));\n        return false;\n      }\n      let isPass = true;\n\n      this.BDInfoList.some(item => {\n        if (item.email && !item.phone) {\n          this.$message({ type: 'error', message: this.$t('commonIsRequired', { target: this.$t('supplier.supplierBDPhone') }) });\n          isPass = false;\n          return true;\n        }\n        if (item.email && !isValidEmail(item.email)) {\n          this.$message({ type: 'error', message: this.$t(`supplier.supplierBDEmail`) + ' ' + this.$t('supplier.isInvalid') });\n          isPass = false;\n          return true;\n        }\n      });\n      if (isPass) {\n        this.sourceInfoList.some(item => {\n          if (item.email && !item.phone) {\n            this.$message({ type: 'error', message: this.$t('commonIsRequired', { target: this.$t('supplier.shopeeSourcePhone') }) });\n            isPass = false;\n            return true;\n          }\n          if (item.email && !isValidEmail((item.email))) {\n            this.$message({ type: 'error', message: this.$t(`supplier.shopeeSourceEmail`) + ' ' + this.$t('supplier.isInvalid') });\n            isPass = false;\n            return true;\n          }\n        });\n      }\n      if (isPass) {\n        const emailData = ['finance_email', 'legal_email', 'warehouse_email', 'shopee_merchandiser'];\n        emailData.some(key => {\n          if (form[key] && !isValidEmail(form[key])) {\n            this.$message({ type: 'error', message: this.$t(`supplier.${SupplierDetailKeyToName[key]}`) + ' ' + this.$t('supplier.isInvalid') });\n            isPass = false;\n            return true;\n          }\n        });\n      }\n      return isPass;\n    },\n    onCancel(module) {\n      this.form = this.cacheForm;\n      this.BDInfoList = JSON.parse(JSON.stringify(this.catchBDInfoList));\n      this.sourceInfoList = JSON.parse(JSON.stringify(this.catchsourceInfoList));\n      switch (module) {\n        case 'Basic': this.isBasicEdit = false; break;\n        case 'PIC': this.isPICEdit = false; break;\n      }\n    },\n    closeContractActionLog() {\n      this.contractActionLogShow = false;\n    },\n    openActionLogDialog() {\n      this.contractActionLogShow = true;\n    },\n    getCountryBrandList() {\n      return getBrandList({ pageno: 1, country: this.form.approval_country || this.form.country, count: 200, status: 0 }).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.brandList = (resp.data.brand_list || []).map(item => ({ label: item.brand_name, value: item.brand_id }));\n        }\n      });\n    },\n    getSupplierDetail() {\n      return getSupplierDetail(this.$route.params.supplier_id).then(resp => {\n        if (resp.status !== 0) {\n          this.$message({\n            message: resp.info,\n            type: 'error'\n          });\n        } else {\n          this.form = resp.data['supplier_info'];\n          if (this.form.is_serialised === 0) {\n            this.form.is_serialised = '';\n          }\n          this.BDInfoList = [];\n          ['', 2, 3].forEach(item => {\n            const key_email = 'email' + item;\n            const key_phone = 'phone' + item;\n            if (this.form[key_email] || this.form[key_phone]) {\n              const obj = {};\n              obj.email = this.form[key_email] || '';\n              obj.phone = this.form[key_phone] || '';\n              obj.field = 'BD';\n              this.BDInfoList.push(obj);\n            }\n          });\n          this.catchBDInfoList = JSON.parse(JSON.stringify(this.BDInfoList));\n\n          this.sourceInfoList = [];\n          ['', 2, 3, 4, 5].forEach(item => {\n            const key_email = 'shopee_sourcer' + item;\n            const key_phone = 'shopee_sourcer_phone' + item;\n            if (this.form[key_email] || this.form[key_phone]) {\n              const obj = {};\n              obj.email = this.form[key_email] || '';\n              obj.phone = this.form[key_phone] || '';\n              obj.hasNoPhone = false;\n              obj.autoComplete = true;\n              obj.field = 'sourcer';\n              this.sourceInfoList.push(obj);\n            }\n          });\n          this.catchsourceInfoList = JSON.parse(JSON.stringify(this.sourceInfoList));\n        }\n      }).catch((e) => {\n        this.$message({\n          type: 'error',\n          message: 'Get Supplier Detail Failed!' + e\n        });\n        this.$router.push({ path: '/admin/' });\n      });\n    }\n  },\n  async created() {\n    // this.canEdit = hasPermission(Permission.SUPPLIER_INFO_EDIT);\n    this.canSupplierDetailBasicInfoEdit = hasPermission(Permission.SupplierDetailBasicInfoEdit);\n    this.canSupplierDetailPICEdit = hasPermission(Permission.SupplierDetailPICEdit);\n    this.canSupplierDetailContractInfoView = hasPermission(Permission.SupplierDetailContractInfoView);\n    this.canSupplierDetailContractInfoEdit = hasPermission(Permission.SupplierDetailContractInfoEdit);\n    await this.getSupplierDetail();\n    Promise.all([this.getCountryBrandList()]);\n  }\n};\n</script>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\n\n.detail-content{\n  border: 1px solid #DCDFE6;\n  border-top: 0px;\n  text-align: left;\n  padding: 16px 32px;\n}\n  .header-tab-section{\n    margin-top: 24px;\n  }\n    .no-permission{\n      text-align: center;\n      font-size: 16px;\n      color: #333333;\n      min-height: 300px;\n      position: relative;\n      .content-box{\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n      }\n      .icon {\n        width:100px;\n        height: 100px;\n      }\n      .text {\n        margin-top:16px;\n      }\n}\n</style>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\">\n.supplier-detail {\n  .el-date-editor.el-input, .el-date-editor.el-input__inner {\n    width: 140px;\n  }\n  .el-input--prefix {\n    .el-input__inner {\n      padding-left: 30px;\n    }\n  }\n  .el-input--medium .el-input__icon {\n    line-height: 28px;\n  }\n  .el-input-number--medium {\n    line-height: 28px;\n  }\n  .select-unit .el-input__inner {\n    padding-left: 20px;\n  }\n  .el-icon-remove {\n    color: #f56c6c;\n    font-size: 18px;\n  }\n  .el-icon-remove:hover, .el-icon-remove:focus {\n    color: #f78989;\n  }\n  .el-icon-circle-plus {\n    color: #409EFF;\n    font-size: 18px;\n  }\n  .el-icon-circle-plus:hover, .el-icon-circle-plus:focus {\n    color: #66b1ff;\n  }\n}\n</style>\n<style lang=\"scss\">\n@import '~@/styles/common.scss'; // ~@ = @ = 'src' webpack alias path\n.pms-layout-container{\n  padding: 16px 24px;\n}\n\n</style>\n\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplier/detailInfoItem.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplier/list.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplier/search.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplier/supplierList.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":8,"column":17,"nodeType":"VIdentifier","messageId":"deprecated","endLine":8,"endColumn":23}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-container class=\"supplier-list\">\n    <el-main>\n      <el-form\n        ref=\"form\"\n        :model=\"form\"\n        label-width=\"200px\"\n        @submit.native.prevent=\"handleCurrentChange(1)\"\n      >\n        <el-row>\n          <el-col :span=\"5\">\n            <el-form-item label-width=\"160px\" :label=\"$t('purchaseRequest.region')\">\n              <el-select @change=\"onSearch\" v-model=\"form.approval_country\">\n                <el-option label=\"All\" value></el-option>\n                <el-option v-for=\"item in countryList\" :key=\"item\" :label=\"item\" :value=\"item\"></el-option>\n              </el-select>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"7\">\n            <el-form-item :label=\"$t('purchaseOrder.supplierIdOrName')\" clearable>\n              <el-input v-model=\"form.key\" clearable></el-input>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"7\">\n            <el-form-item :label=\"$t(`supplierSBSVendorID`)\" clearable>\n              <!-- <el-input v-model=\"form.sbs_vendor_id\" clearable></el-input> -->\n              <el-autocomplete\n              class=\"el-autocomplete_width\"\n              v-model=\"form.sbs_vendor_id\"\n              :fetch-suggestions=\"getSbsVendorID\"\n              clearable\n              placeholder=\"Please input SBS Vendor ID\"\n              @select=\"handleSBSVendorIDSelect\"\n            ></el-autocomplete>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"5\">\n            <el-form-item label-width=\"160px\" :label=\"$t('supplier.purchaseType')\">\n              <el-select @change=\"onSearch\" v-model=\"form.purchase_type\">\n                <el-option\n                  v-for=\"item in PurchaseTypeList\"\n                  :key=\"item.value\"\n                  :label=\"item.label\"\n                  :value=\"item.value\"\n                ></el-option>\n              </el-select>\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :span=\"7\">\n            <el-form-item :label=\"$t(`supplier.supplierBDEmail`)\" clearable>\n              <el-input v-model=\"form.bd_email\" clearable></el-input>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"7\">\n            <el-form-item :label=\"$t('supplier.shopeeMerchandiserEmail')\" clearable>\n              <el-input\n                v-model=\"form.shopee_merchandiser_search\"\n                clearable\n                @change=\"handleCurrentChange(1)\"\n              ></el-input>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"7\">\n            <el-form-item :label=\"$t('supplier.shopeeSourceEmail')\" clearable>\n              <el-input\n                v-model=\"form.shopee_sourcer_search\"\n                clearable\n                @change=\"handleCurrentChange(1)\"\n              ></el-input>\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :span=\"9\" v-if=\"!!form.approval_country\">\n            <el-form-item :label=\"$t('supplierTradingTermDate')\" clearable>\n              <el-date-picker\n                @change=\"handleCurrentChange(1)\"\n                popper-class=\"pms-ui\"\n                v-model=\"form.trading_term_date\"\n                type=\"daterange\"\n                format=\"yyyy-MM-dd\"\n                value-format=\"yyyy-MM-dd\"\n                start-placeholder=\"Begin\"\n                end-placeholder=\"End\"\n                :default-time=\"['00:00:00', '23:59:59']\"\n              ></el-date-picker>\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <div class=\"option-box\">\n          <div class=\"float-left\">\n            <div\n              class=\"list-btn white-blue\"\n              @click=\"onExport\"\n              v-loading=\"exportLoading\"\n            >{{ $t('purchaseRequest.export') }}</div>\n            <el-upload\n              v-if=\"canSupplierListUploadFile\"\n              action=\"/api/supplier/contract_info/mass_upload/\"\n              class=\"upload-demo el-button--medium\"\n              :http-request=\"handleMassUploadRequest\"\n              :with-credentials=\"true\"\n              :limit=\"1\"\n              ref=\"massUpload\"\n              :show-file-list=\"false\"\n            >\n              <div\n                class=\"mass-approve-btn list-btn white-blue\"\n              >{{ $t('purchaseRequest.massUpload') }}</div>\n              <span class=\"download-wrap\">\n                <i class=\"el-icon-download\" @click=\"onDownTmp\">\n                  {{\n                  $t('purchaseRequest.template')\n                  }}\n                </i>\n              </span>\n            </el-upload>\n          </div>\n          <div class=\"float-right\">\n            <div class=\"list-btn\" @click=\"handleCurrentChange(1)\">{{ $t('purchaseOrder.Search') }}</div>\n            <div class=\"list-btn white-blue\" @click=\"onReset\">{{ $t('purchaseRequest.clear') }}</div>\n          </div>\n        </div>\n        <el-button v-show=\"false\" native-type=\"submit\"></el-button>\n      </el-form>\n\n      <!-- <div class=\"padding-top-bottom\"></div> -->\n      <el-checkbox-group v-model=\"checkedRows\">\n        <list-view\n          :dataList=\"tableData\"\n          :config=\"tableConfig\"\n          @selectionChange=\"selectionChange\"\n          :tableSchema=\"tableSchema\"\n        >\n          <template slot=\"checkColumn\">\n            <el-table-column\n              column-key=\"action\"\n              width=\"80px\"\n              align=\"center\"\n              class-name=\"select-all-table-cell\"\n            >\n              <template slot-scope=\"scope\" slot=\"header\">\n                <el-dropdown\n                  @click=\"resetCheckedType\"\n                  placement=\"bottom\"\n                  split-button\n                  trigger=\"click\"\n                  class=\"pms-ele-ui select-page-dropdown\"\n                  @command=\"changeSelectPageType\"\n                >\n                  <span\n                    :class=\"\n                      `el-checkbox__input ${checkedType ? 'is-checked' : ''}`\n                    \"\n                  >\n                    <span\n                      :class=\"\n                        `el-checkbox__inner ${checkedType ? 'is-checked' : ''}`\n                      \"\n                    ></span>\n                  </span>\n                  <!-- {{formatCheckType}} -->\n                  <el-dropdown-menu class=\"options-field-menu\" slot=\"dropdown\">\n                    <el-dropdown-item command=\"current\">Current Page</el-dropdown-item>\n                    <el-dropdown-item command=\"all\">All Pages</el-dropdown-item>\n                  </el-dropdown-menu>\n                </el-dropdown>\n              </template>\n              <template slot-scope=\"scope\">\n                <el-checkbox :disabled=\"checkedType === 'all'\" :label=\"scope.row\">{{ '' }}</el-checkbox>\n              </template>\n            </el-table-column>\n          </template>\n          <template slot=\"end\">\n            <el-table-column width=\"20\" fixed=\"right\" class-name=\"display-options\">\n              <template slot-scope=\"scope\" slot=\"header\">\n                <options-field\n                  :btnType=\"'icon'\"\n                  class=\"option-field-wrapper\"\n                  @fieldChange=\"displayOptionsChange\"\n                  :dropdownText=\"$t('commonDisplayOptions')\"\n                  :fieldList=\"fieldConfig.list || []\"\n                  :defaultList=\"fieldConfig.default\"\n                ></options-field>\n              </template>\n            </el-table-column>\n          </template>\n        </list-view>\n      </el-checkbox-group>\n      <div class=\"content-center padding-top-bottom\">\n        <el-pagination\n          background\n          layout=\"sizes, prev, pager, next\"\n          :page-sizes=\"[10, 20, 50, 100]\"\n          :page-size=\"pageSize\"\n          :current-page=\"current_page\"\n          @current-change=\"handleCurrentChange\"\n          @size-change=\"handleSizeChange\"\n          :total=\"total_count\"\n        ></el-pagination>\n      </div>\n    </el-main>\n  </el-container>\n</template>\n\n<script>\nimport {\n  getSupplierList,\n  exportSupplierList,\n  massUploadFileSupplierList\n} from '@/api/supplier';\nimport {\n  Permission,\n  PurchaseTypeList,\n  SupplierListDefaultDisplayList,\n  SupplierListDisplayFieldList,\n  PaymentTypes\n} from '@/utils/constant';\nimport { hasPermission } from '@/utils/permission';\nimport { formatParams } from '@/utils/formatParams';\nimport ListView from '@/components/ApproveList/list';\nimport OptionsField from '@/components/ApproveList/optionsField';\nimport { downloadBlobFile } from '@/utils/downloadFile';\nimport moment from 'moment';\nimport {\n  getSuppliervagueQuery\n} from '@/api/supplierRequest';\n// import { divMod } from '../../utils/numberUtils';\n\nconst StorageKey = 'pmsSupplierListDisplayFields';\n\nexport default {\n  components: { ListView, OptionsField },\n  data() {\n    const storageList = localStorage.getItem(StorageKey);\n    const countrySelectList = this.$store.getters.countrySelectList || [];\n    return {\n      canCreateSupplier: false,\n      canUpdateSupplier: false,\n      canChooseSupplierSKU: false,\n      canModifySupplierSKU: false,\n      canDeleteSupplierSKU: false,\n      canSupplierListUploadFile: false,\n      checkedType: '',\n      checkedRows: [],\n      form: {\n        key: '',\n        bd_email: '',\n        approval_country:\n          countrySelectList.length === 1 ? countrySelectList[0].value : '',\n        purchase_type: '',\n        shopee_merchandiser_search: '',\n        shopee_sourcer_search: '',\n        trading_term_date: [],\n        sbs_vendor_id: ''\n      },\n      PurchaseTypeList,\n\n      tableData: [],\n      pageSize: 10,\n      current_page: 1,\n      total_count: 10,\n      tableConfig: {\n        showCheckBox: false,\n        align: 'center'\n      },\n      exportLoading: false,\n      showTableSchemaList: storageList\n        ? JSON.parse(storageList)\n        : SupplierListDefaultDisplayList\n    };\n  },\n  computed: {\n    // formatCheckType() {\n    //   return this.checkedType === 'current' ? this.$t('commonCurrentPage') : this.checkedType === 'all' ? this.$t('commonAllPage') : ''\n    // },\n    countryList() {\n      return [\n        ...new Set([\n          ...this.$store.getters.countryList.map((item) => item.country)\n        ])\n      ];\n    },\n    fieldConfig() {\n      const storageList = localStorage.getItem(StorageKey);\n      return {\n        list: SupplierListDisplayFieldList.map((item) => ({\n          ...item,\n          label: this.$t(item.label)\n        })),\n        default: storageList\n          ? JSON.parse(storageList)\n          : SupplierListDefaultDisplayList\n      };\n    },\n    tableSchema() {\n      return [\n        {\n          columnKey: 'supplier_name',\n          field: 'name',\n          label: this.$t('purchaseOrder.supplierName'),\n          render: (schema, row, index, h) => {\n            // 兼容旧数据，不存在is_edited或者为true时，不显示提示\n            if (row.is_edited !== false) return row.name;\n            return [\n              'div',\n              {},\n              [\n                h(\n                  'el-tooltip',\n                  {\n                    props: {\n                      content: this.$t(\n                        'Please complete the information for the new supplier'\n                      ),\n                      placement: 'top',\n                      effect: 'light',\n                      popperClass: 'pms-tooltip',\n                      hideAfter: 30000\n                      // value: true //用于调试\n                    }\n                  },\n                  [\n                    h('svg-icon', {\n                      class: 'cue-icon',\n                      props: {\n                        iconClass: 'cue'\n                      }\n                    })\n                  ]\n                ),\n                row.name\n              ]\n            ];\n          }\n        },\n        {\n          columnKey: 'sbs_vendor_id',\n          field: 'sbs_vendor_id',\n          label: this.$t('supplierSBSVendorID')\n        },\n        {\n          columnKey: 'supplier_id',\n          field: 'supplier_id',\n          label: this.$t('purchaseOrder.vendorSideID')\n        },\n        {\n          columnKey: 'supplier_type',\n          field: 'supplier_type',\n          label: this.$t('purchaseOrder.supplierType')\n        },\n        {\n          columnKey: 'purchase_type',\n          field: 'purchase_type',\n          label: this.$t('purchaseOrder.purchaseType')\n        },\n        {\n          columnKey: 'contract_type',\n          field: 'contract_type',\n          label: this.$t('purchaseOrder.contractType')\n        },\n        {\n          columnKey: 'approval_country',\n          field: 'approval_country',\n          label: this.$t('purchaseOrder.country')\n        },\n        {\n          columnKey: 'company_code',\n          field: 'company_code',\n          label: this.$t('purchaseOrder.ebsCompanyCode')\n        },\n        {\n          columnKey: 'payment_method',\n          field: 'payment_method',\n          label: this.$t('supplier.paymentTerm')\n        },\n        {\n          columnKey: 'tax_code',\n          field: 'tax_code',\n          label: this.$t('purchaseRequest.taxCode')\n        },\n        {\n          columnKey: 'tax_rate',\n          field: 'tax_rate',\n          label: this.$t('purchaseRequest.tax')\n        },\n        {\n          columnKey: 'site_start_date',\n          field: 'site_start_date',\n          label: this.$t('supplier.supplierStartDate'),\n          render: (schema, row) => {\n            return this.formatSiteDate(row.site_start_date);\n          }\n        },\n        {\n          columnKey: 'site_end_date',\n          field: 'site_end_date',\n          label: this.$t('supplier.supplierEndDate'),\n          render: (schema, row) => {\n            return this.formatSiteDate(row.site_end_date);\n          }\n        },\n        {\n          columnKey: 'supplier_number',\n          field: 'supplier_number',\n          label: this.$t('supplier.EBSSupplierNumber')\n        },\n        {\n          columnKey: 'payment_type',\n          field: 'payment_type',\n          label: this.$t('supplierConfigSupplierPaymentType'),\n          render: (schema, row) => {\n            return this.formatPaymentType(row.payment_type);\n          }\n        },\n        {\n          columnKey: 'description',\n          field: 'description',\n          label: this.$t('purchaseOrder.description')\n        },\n        {\n          columnKey: 'shopee_merchandiser',\n          field: 'shopee_merchandiser',\n          label: this.$t('supplier.shopeeMerchandiserEmail')\n        },\n        {\n          columnKey: 'shopee_sourcer',\n          field: 'shopee_sourcer',\n          label: this.$t('supplier.shopeeSourceEmail')\n        },\n        {\n          columnKey: 'shopee_sourcer2',\n          field: 'shopee_sourcer2',\n          label: this.$t('supplierShopeeSourceEmail2')\n        },\n        {\n          columnKey: 'shopee_sourcer3',\n          field: 'shopee_sourcer3',\n          label: this.$t('supplierShopeeSourceEmail3')\n        },\n        {\n          columnKey: 'shopee_sourcer4',\n          field: 'shopee_sourcer4',\n          label: this.$t('supplierShopeeSourceEmail4')\n        },\n        {\n          columnKey: 'shopee_sourcer5',\n          field: 'shopee_sourcer5',\n          label: this.$t('supplierShopeeSourceEmail5')\n        },\n        {\n          columnKey: 'trading_term_start_date',\n          field: 'trading_term_start_date',\n          label: this.$t('supplierConfigTradingTermStartDate'),\n          render: (schema, row) => {\n            return !row.trading_term_start_date\n              ? '/'\n              : moment(row.trading_term_start_date * 1000).format('YYYY-MM-DD');\n          }\n        },\n        {\n          columnKey: 'trading_term_end_date',\n          field: 'trading_term_end_date',\n          label: this.$t('supplierConfigTradingTermEndDate'),\n          render: (schema, row) => {\n            return !row.trading_term_end_date\n              ? '/'\n              : moment(row.trading_term_end_date * 1000).format('YYYY-MM-DD');\n          }\n        },\n        {\n          columnKey: 'action',\n          field: 'action',\n          label: this.$t('purchaseRequest.action'),\n          width: '150px',\n          render: (schema, row, index, h) => {\n            return [\n              'div',\n              {},\n              [\n                {\n                  render: h(\n                    'el-button',\n                    {\n                      class: 'list-btn simple-blue',\n                      on: { click: () => this.onDetail(index, row) }\n                    },\n                    this.$t('commonDetail')\n                  )\n                }\n              ].map((item) => item.render)\n            ];\n          }\n        }\n      ].filter((item) => this.showTableSchemaList.includes(item.field));\n    }\n  },\n  methods: {\n    handleSBSVendorIDSelect(item) {\n      this.form.sbs_vendor_id = item.sbs_vendor_id;\n      this.onSearch();\n    },\n    async getSbsVendorID(value, cb) {\n      try {\n        const params = {\n          field_name: 'sbs_vendor_id',\n          value: value\n        };\n        const resp = await getSuppliervagueQuery(params);\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n          cb([]);\n        } else {\n          cb(\n            resp.data.list.map(item => {\n              return {\n                value: `${item['sbs_vendor_id']}`,\n                sbs_vendor_id: item['sbs_vendor_id']\n              };\n            })\n          );\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    formatPaymentType(type) {\n      return (\n        PaymentTypes.find((item) => item.value === type) || { label: '/' }\n      ).label;\n    },\n    formatSiteDate(dateStr) {\n      if (!dateStr) {\n        return '/';\n      }\n      return moment(dateStr, 'YYYYMMDDHHmmss').format('YYYY-MM-DD');\n    },\n    selectionChange(selection) {\n      this.checkedRows = selection;\n    },\n    onExport() {\n      if (!this.checkedRows.length) {\n        return this.$message.error('Please select some lines first!');\n      }\n      this.exportLoading = true;\n\n      let params = null;\n      if (this.checkedType !== 'all') {\n        params = {\n          supplier_ids: this.checkedRows.map((item) => item.supplier_id)\n        };\n      } else {\n        params = formatParams({\n          key: this.form.key,\n          email: this.form.email,\n          approval_country:\n            this.form.approval_country || this.countryList.join('_'),\n          purchase_type: this.form.purchase_type,\n          shopee_merchandiser_search: this.form.shopee_merchandiser_search,\n          shopee_sourcer_search: this.form.shopee_sourcer_search,\n          trading_term_start_date_str: Array.isArray(\n            this.form.trading_term_date\n          )\n            ? this.form.trading_term_date[0]\n            : '',\n          trading_term_end_date_str:\n            Array.isArray(this.form.trading_term_date) &&\n            this.form.trading_term_date.length > 1\n              ? this.form.trading_term_date[1]\n              : ''\n        });\n      }\n\n      exportSupplierList(params)\n        .then((resp) => {\n          if (resp.type === 'application/json') {\n            const reader = new FileReader();\n            reader.onloadend = () => {\n              const result = JSON.parse(reader.result);\n              if (result.retcode !== 0) {\n                this.$message.error(result.info);\n              }\n            };\n            reader.readAsText(resp);\n          } else {\n            downloadBlobFile(\n              resp,\n              `SupplierList${moment().format('YYYYMMDDHHmmss')}.csv`\n            );\n          }\n        })\n        .catch(() => {\n          this.$message.error('Failed');\n        })\n        .finally(() => {\n          this.exportLoading = false;\n        });\n    },\n    resetCheckedType() {\n      this.checkedType = '';\n      this.checkedRows = [];\n      this.$emit('checked', '', []);\n    },\n    changeSelectPageType(type) {\n      this.checkedType = type;\n      this.checkedRows = this.tableData;\n      this.$emit('checked', type, this.checkedRows);\n    },\n    displayOptionsChange(list) {\n      this.showTableSchemaList = list;\n      localStorage.setItem(StorageKey, JSON.stringify(list));\n    },\n    onDownTmp() {\n      window.open('/admin/data/SupplierContractInfoTemplate.xls');\n    },\n    handleMassUploadRequest({ file }) {\n      const formData = new FormData();\n      formData.append('attachments', file);\n      massUploadFileSupplierList(formData).then((resp) => {\n        if (resp.type === 'application/json') {\n          const reader = new FileReader();\n          reader.onloadend = () => {\n            const result = JSON.parse(reader.result);\n            if (result.retcode !== 0) {\n              this.$message.error(result.info);\n              this.$refs.massUpload.clearFiles();\n            } else {\n              this.$message.success(result.info);\n              this.$refs.massUpload.clearFiles();\n            }\n          };\n          reader.readAsText(resp);\n        } else {\n          downloadBlobFile(\n            resp,\n            `ErrorFile${moment().format('YYYYMMDDHHmmss')}.xls`\n          );\n          this.$refs.massUpload.clearFiles();\n        }\n      });\n    },\n    onSearch(event, current_page) {\n      const params = {\n        pageno: current_page || 1,\n        count: this.pageSize,\n        ...this.form,\n        key: `${this.form.key}`.trim(),\n        bd_email: `${this.form.bd_email}`.trim(),\n        shopee_sourcer_search: `${this.form.shopee_sourcer_search}`.trim(),\n        shopee_merchandiser_search: `${this.form.shopee_merchandiser_search}`.trim(),\n        merchant_type: 'SUPPLIER' // 这里只能查询supplier的数据\n      };\n      if (this.form.approval_country.trim() === '') {\n        params.approval_country = this.countryList.join('_');\n      }\n      if (\n        Array.isArray(this.form.trading_term_date) &&\n        this.form.trading_term_date.length > 1\n      ) {\n        params.trading_term_start_date_str =\n          this.form.trading_term_date[0] || '';\n        params.trading_term_end_date_str = this.form.trading_term_date[1] || '';\n      }\n      delete params.trading_term_date;\n      if (!current_page) {\n        this.current_page = 1;\n      }\n      getSupplierList(formatParams(params)).then((resp) => {\n        if (resp.status !== 0) {\n          this.$message({\n            message: resp.info,\n            type: 'error'\n          });\n        } else {\n          this.tableData = resp.data['list'];\n          this.total_count = resp.data['total'];\n        }\n      });\n    },\n    onReset() {\n      Object.keys(this.form).forEach((key) => {\n        if (Array.isArray(this.form[key])) {\n          this.form[key] = [];\n        } else {\n          this.form[key] = '';\n        }\n      });\n    },\n    handleSizeChange(size) {\n      this.pageSize = size;\n      this.onSearch();\n    },\n    handleCurrentChange(current_page) {\n      this.current_page = current_page;\n      this.onSearch('', this.current_page);\n    },\n    onDetail(index, row) {\n      var supplier_id = row.supplier_id;\n      this.$router.push({ name: 'supplier_detail', params: { id: supplier_id }});\n    }\n  },\n  mounted: function() {\n    this.canCreateSupplier = hasPermission(Permission.CREATE_SUPPLIER);\n    this.canUpdateSupplier = hasPermission(Permission.UPDATE_SUPPLIER);\n    // this.canDeleteSupplier = hasPermission(Permission.DELETE_SUPPLIER);\n    this.canChooseSupplierSKU = hasPermission(Permission.CHOOSE_SUPPLIER_SKU);\n    this.canModifySupplierSKU = hasPermission(Permission.MODIFY_SUPPLIER_SKU);\n    this.canDeleteSupplierSKU = hasPermission(Permission.DELETE_SUPPLIER_SKU);\n\n    this.canSupplierListUploadFile = hasPermission(\n      Permission.SupplierListUploadFile\n    );\n\n    this.onSearch();\n  }\n};\n</script>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\n.line {\n  text-align: center;\n}\n.mass-approve-btn {\n  width: 120px;\n}\n.template {\n  color: #3d6ed1;\n  margin-left: 2px;\n  margin-right: 10px;\n}\n.float-right {\n  float: right;\n}\n.float-left {\n  float: left;\n}\n.upload-demo {\n  display: inline-block;\n  padding-top: 0px;\n}\n.option-box {\n  display: table;\n  width: 100%;\n  padding: 4px 0 16px 0;\n  .el-button--medium {\n    padding: 0;\n    color: #3d6ed1;\n    vertical-align: baseline;\n  }\n}\n/deep/ .cue-icon {\n  font-size: 12px;\n  margin-right: 5px;\n}\n.option-field-wrapper {\n  float: none;\n}\n// .options-field-dropdown {\n//   padding: 0;\n//   position: absolute;\n//   left: 0;\n//   top: 0;\n// }\n// /deep/ .list-btn {\n//   background-color: transparent;\n//   width: 20px;\n//   margin: 0;\n// }\n</style>\n<style lang=\"scss\">\n@import '~@/styles/common.scss';\n.pms-ele-ui {\n  &.select-page-dropdown {\n    padding: 0;\n    margin-left: 0;\n    .el-button {\n      border: none;\n      background: unset;\n      padding: 0px;\n      &:nth-child(1) {\n        word-break: break-word;\n        white-space: normal;\n        width: 30px;\n        padding-right: 4px;\n      }\n      &::before {\n        width: 0;\n      }\n    }\n  }\n}\n.supplier-list {\n  .select-all-table-cell {\n    div.cell {\n      text-overflow: clip;\n    }\n  }\n  .display-options {\n    &.is-leaf {\n      background-color: rgba(0, 0, 0, 0.13);\n    }\n    .cell {\n      padding: 0;\n      text-align: center;\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplier/supplierRequest/actionLog.vue","messages":[{"ruleId":"vue/no-template-shadow","severity":2,"message":"Variable 'index' is already declared in the upper scope.","line":35,"column":46,"nodeType":"Identifier","endLine":35,"endColumn":51},{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"actionLog\" is not PascalCase.","line":68,"column":9,"nodeType":"Literal","endLine":68,"endColumn":20,"fix":{"range":[2911,2920],"text":"ActionLog"}}],"errorCount":2,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <el-dialog\n    :visible.sync=\"dialogVisible\"\n    width=\"841px\"\n    lock-scroll\n    custom-class=\"pms-dialog pms-ele-ui\"\n    :title=\"$t('commonActionLog')\"\n    @close=\"onClose\"\n  >\n    <div v-loading=\"loading\">\n      <section class=\"table-header\">\n        <div v-for=\"(item, index) in headerList\" :key=\"item.label\" class=\"table-header-item\" :class=\"index ?'':'ml-34'\" :style=\"{ width: item.width || '200px'}\">\n          {{$t(item.label)}}\n          </div>\n      </section>\n      <div v-if=\"tableData.length\" class=\"table-wrapper\">\n        <section class=\"content-wrapper\">\n          <div v-for=\"(item, index) in tableData\" :key=\"item.change_id\" class=\"content-item\">\n            <section class=\"base-info\">\n              <div class=\"base-info-item expend-action-icon\" @click=\"expend(item, index)\">\n                <i v-if=\"item.content && item.content.length\"  :class=\"[item.expansion ? 'el-icon-caret-bottom' : 'el-icon-caret-top']\"></i>\n              </div>\n              <div class=\"base-info-item other-width\">{{item.action}}</div>\n              <div class=\"base-info-item\">{{$t(status2Label(item.status))}}</div>\n              <div class=\"base-info-item other-width\">\n                <p>{{item.operator}}</p>\n                <p>{{formatTime(item.ctime)}}</p>\n              </div>\n              <div class=\"base-info-item\">\n                {{item.reason || '/'}}\n              </div>\n            </section>\n            <section v-if=\"item.expansion\" class=\"expend-info\">\n              <el-table :data=\"item.content\" size=\"mini\" border>\n                <el-table-column v-for=\"(col,index) in tableColumns\" :key=\"col.prop\"\n                  :label=\"$t(col.label)\" :prop=\"col.prop\" align=\"left\"  :class-name=\"index ? '' : 'pl30'\">\n                  <template slot-scope=\"scope\">\n                    {{scope.row[col.prop] !== '' ? scope.row[col.prop] : '/'}}\n                  </template>\n                </el-table-column>\n              </el-table>\n            </section>\n          </div>\n        </section>\n        <section class='pagination-center'>\n          <el-pagination background layout=\"sizes, prev, pager, next\" :current-page='pager.page_no' :page-sizes='[10, 20, 50, 100]' :total.sync=\"total\" :page-size=\"pager.count\" @size-change='handleSizeChange' @current-change=\"handleChangePage\"></el-pagination>\n        </section>\n      </div>\n      <div v-else class=\"empty-wrapper\">\n        {{$t('commonNoData')}}\n      </div>\n      <div class=\"list-right-btns-wrapper user-footer-btn\">\n        <div class=\"btn-action\" @click=\"onClose\">\n          <span>{{$t('commonClose')}}</span>\n        </div>\n      </div>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\n// TODO 真实数据需要放开\nimport { commonFetchAction } from '@/utils';\nimport { getSupplierActionLog } from '@/api/supplierRequest';\nimport { SupplierRequestStatus } from '@/utils/constant';\nimport moment from 'moment';\nexport default {\n  name: 'actionLog',\n  props: {\n    visible: {\n      type: Boolean,\n      default: false,\n      required: true\n    },\n    requestId: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      dialogVisible: false,\n      tableData: [],\n      headerList: [\n        {\n          label: 'backMarginAction',\n          width: '180px'\n        },\n        {\n          label: 'backMarginStatusAfterOperate',\n          width: ''\n        },\n        {\n          label: 'backMarginOperator',\n          width: '180px'\n        },\n        {\n          label: 'backMarginReason',\n          width: ''\n        }\n      ],\n      tableColumns: [\n        {\n          label: 'backMarginModifyField',\n          prop: 'field',\n          width: ''\n        },\n        {\n          label: 'backMarginBefore',\n          prop: 'before',\n          width: ''\n        },\n        {\n          label: 'backMarginAfter',\n          prop: 'after',\n          width: ''\n        }\n      ],\n      total: 0,\n      pager: {\n        count: 10,\n        page_no: 1\n      },\n      loading: false\n    };\n  },\n  watch: {\n    visible(nv) {\n      this.dialogVisible = nv;\n      if (nv) {\n        this.getActionLog();\n      }\n    }\n  },\n  mounted() {\n    this.dialogVisible = this.visible;\n    // this.getActionLog();\n  },\n  methods: {\n    formatTime(value) {\n      if (!value) {\n        return '/';\n      }\n      return moment(value * 1000).format('YYYY-MM-DD HH:mm:ss');\n    },\n    onClose() {\n      this.$emit('close');\n    },\n    expend(row, index) {\n      row.expansion = !row.expansion;\n      this.tableData.splice(index, 1, row);\n    },\n    handleChangePage(page_no) {\n      this.pager.page_no = page_no;\n      this.getActionLog();\n    },\n    handleSizeChange(count) {\n      this.pager.count = count;\n      this.pager.page_no = 1;\n      this.getActionLog();\n    },\n    // 查询数据\n    async getActionLog() {\n      try {\n        const params = {\n          ...this.pager,\n          request_id: this.requestId\n        };\n        // TODO 查询成功处理\n        this.loading = true;\n        const res = await getSupplierActionLog(params);\n        commonFetchAction(res, (data) => {\n          this.tableData = data.action_log_list || [];\n          this.tableData.forEach(item => {\n            item.expansion = false;\n          });\n          this.total = data.total || 0;\n          this.loading = false;\n        });\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n        this.loading = false;\n      }\n    },\n\n    status2Label(value) {\n      return SupplierRequestStatus[value].text;\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import \"~@/styles/common.scss\"; // ~@ = @ = 'src' webpack alias path\n.pms-dialog {\n  padding-bottom: 36px;\n  .el-dialog__body {\n    padding: 14px 24px 16px;\n  }\n  .table-header{\n    width: 100%;\n    height: 54px;\n    background: #F5F5F5;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    &-item{\n      font-family: Helvetica-Bold;\n      font-size: 12px;\n      color: rgba(0,0,0,0.85);\n      line-height: 22px;\n      min-width: 49px;\n    }\n  }\n  .ml-34{\n    margin-left: 34px;\n  }\n  .content-wrapper{\n    padding-left: 16px;\n    .content-item{\n      border-bottom: 1px solid #E8E8E8;\n      .base-info{\n        display: flex;\n        align-items: center;\n        font-family: Helvetica;\n        font-size: 14px;\n        color: #333333;\n        text-align: left;\n        height: 68px;\n        line-height: 22px;\n        &-item{\n          width: 200px;\n          &:last-child{\n            margin-right: 0px;\n          }\n          &.other-width {\n            width: 180px;\n          }\n        }\n        .ml-30{\n          margin-left: 30px;\n        }\n      }\n      .expend-action-icon{\n        margin-right: 6px;\n        width: 14px;\n        i{\n          cursor: pointer;\n          font-size: 12px;\n          color: #3D6ED1;\n        }\n      }\n      .expend-info{\n        padding: 0px 24px 16px 30px;\n        .el-table th{\n          font-size: 12px;\n          font-family: Helvetica-Bold;\n          font-weight: 600;\n          background: #EBEBEB;\n          color: rgba(51,51,51,0.80);\n        }\n        .el-table {\n          .pl30{\n            padding-left: 30px;\n          }\n          td{\n            .cell{\n              font-size: 12px;\n              color: #333333;\n            }\n          }\n        }\n      }\n    }\n  }\n  .pagination-center{\n    display: flex;\n    justify-content: center;\n    margin-top: 20px;\n  }\n  .empty-wrapper{\n    height: 68px;\n    line-height: 68px;\n    text-align: center;\n    margin-bottom: 16px;\n    border-bottom: 1px solid #E8E8E8;\n  }\n  .user-footer-btn{\n    margin-top: 4px;\n    .btn-action {\n      position: absolute;\n      right: 50px;\n      top: 50px;\n      font-size: 14px;\n      color: #fff;\n      background: #3d6ed1;\n      border-radius: 2px;\n      height: 32px;\n      line-height: 32px;\n      margin-left: 12px;\n      min-width: 72px;\n      text-align: center;\n      cursor: pointer;\n    }\n  }\n\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplier/supplierRequest/bankInfoCombine.vue","messages":[{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"bankInfoCombine\" is not PascalCase.","line":122,"column":9,"nodeType":"Literal","endLine":122,"endColumn":26,"fix":{"range":[3022,3037],"text":"BankInfoCombine"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div class=\"bank-info-combine\">\n    <div>\n      <label class=\"el-form-item__label item-label\" v-html=\"getLabel('bankName')\"> </label>\n      <p>\n        <span v-if=\"!isEdit\">{{ bankName.label || '/' }}</span>\n        <el-select\n          v-else\n          class=\"long-input\"\n          v-model=\"bankName\"\n          filterable\n          remote\n          reserve-keyword\n          :placeholder=\"$t('supplierSelect(supportfuzzysearchbybankcountryandbankname)')\"\n          :remote-method=\"getBankName\"\n          :loading=\"loading\"\n          value-key=\"label\"\n          @change=\"selectBankName\"\n          @visible-change=\"getBankNameFirst\"\n        >\n          <el-option v-for=\"(item, index) in bankNameOptions\" :key=\"item.label\" :label=\"item.label\" :value=\"item\">\n          </el-option>\n        </el-select>\n      </p>\n    </div>\n    <div>\n      <label class=\"el-form-item__label item-label\" v-html=\"getLabel('bankBranch')\"></label>\n      <p>\n        <span v-if=\"!isEdit\">{{ bankBranch.label || '/' }}</span>\n        <el-select\n          v-else\n          class=\"long-input\"\n          v-model=\"bankBranch\"\n          filterable\n          remote\n          reserve-keyword\n          :placeholder=\"$t('supplierSelect(supportfuzzysearchbybranchname)')\"\n          :remote-method=\"getBankBranch\"\n          :loading=\"loading\"\n          value-key=\"label\"\n          @change=\"selectBankBranch\"\n        >\n          <el-option v-for=\"(item, index) in bankBranchOptions\" :key=\"item.label\" :label=\"item.label\" :value=\"item\">\n          </el-option>\n        </el-select>\n      </p>\n    </div>\n  </div>\n</template>\n<script>\nimport { getBankCombine, getBankBranchCombine } from '@/api/supplierRequest';\n\nconst bankFields = {\n  bankName: [\n    {\n      ruleKey: 'bank_country',\n      field: 'bank_country',\n      label: 'bankCountry'\n    },\n    {\n      ruleKey: 'bank_name',\n      field: 'bank_name',\n      label: 'bankName'\n    },\n    {\n      ruleKey: 'bank_number',\n      field: 'bank_number',\n      label: 'bankNumber'\n    },\n    {\n      ruleKey: 'bank_address',\n      field: 'bank_address',\n      label: 'bankAddress'\n    }\n  ],\n  bankBranch: [\n    {\n      ruleKey: 'bank_branch_name',\n      field: 'bank_branch_name',\n      label: 'bankBranchName'\n    },\n    {\n      ruleKey: 'bank_branch_number',\n      field: 'bank_branch_number',\n      label: 'bankBranchNumber'\n    },\n    {\n      ruleKey: 'bank_bic',\n      field: 'bank_bic',\n      label: 'bankBic'\n    },\n    {\n      ruleKey: 'bank_branch_type',\n      field: 'bank_branch_type',\n      label: 'bankBranchType'\n    }\n  ]\n};\n\nfunction getInitData(type) {\n  const res = {};\n  bankFields[type].forEach(item => {\n    res[item.field] = '';\n  });\n\n  return res;\n}\n\nfunction formatOption(item, type) {\n  const res = {};\n  const keys = bankFields[type].map(item => item.field);\n  if (keys.some(key => item[key])) {\n    keys.forEach(key => {\n      res[key] = item[key];\n    });\n    res.label = keys.map(key => item[key] || 'Null').join('/');\n  }\n  return res;\n}\n\nexport default {\n  name: 'bankInfoCombine',\n  props: {\n    bankInfoForm: Object,\n    formConfig: Object,\n    isEdit: Boolean\n  },\n  data() {\n    return {\n      bankNameOptions: [],\n      bankBranchOptions: [],\n      bankName: {},\n      bankBranch: {},\n      loading: false\n    };\n  },\n  watch: {\n    bankInfoForm: {\n      immediate: true,\n      handler(value) {\n        this.bankName = formatOption(value, 'bankName');\n        if (this.bankName.label && !this.bankNameOptions.length) this.bankNameOptions.push({ ...this.bankName });\n\n        this.bankBranch = formatOption(value, 'bankBranch');\n        if (this.bankBranch.label && !this.bankBranchOptions.length) this.bankBranchOptions.push({ ...this.bankBranch });\n      }\n    }\n  },\n  methods: {\n    getLabel(type) {\n      const config = this.formConfig || {};\n      return bankFields[type].map(item => (config[item.field] === 1 ? '<span class=\"required-span\">*</span>' : '') + this.$t(item.label)).join('/');\n    },\n    getBankNameFirst(value) {\n      if (value && !this.bankBranchOptions.length) this.getBankName('');\n    },\n    async getBankName(query_term) {\n      this.loading = true;\n      const res = await getBankCombine({ query_term });\n      this.bankNameOptions = res.data.bank_list.map(item => formatOption(item, 'bankName')).filter(item => item.label);\n      this.loading = false;\n    },\n    selectBankName(item) {\n      this.bankBranch = getInitData('bankBranch');\n      this.bankBranchOptions = [];\n      this.getBankBranch();\n      this.emitSelect();\n    },\n    async getBankBranch(query_term) {\n      this.loading = true;\n      const res = await getBankBranchCombine({ query_term, ...this.getData(this.bankName) });\n      this.bankBranchOptions = res.data.bank_list.map(item => formatOption(item, 'bankBranch')).filter(item => item.label);\n      this.loading = false;\n    },\n    selectBankBranch(item) {\n      this.emitSelect();\n    },\n    getData(item) {\n      const res = { ...item };\n      delete res.label;\n      return res;\n    },\n    emitSelect() {\n      this.$emit('select', this.getData({ ...this.bankName, ...this.bankBranch }));\n    }\n  }\n};\n</script>\n<style lang=\"scss\">\n.bank-info-combine {\n  .item-label {\n    font-size: 14px;\n    float: none;\n  }\n  .required-span {\n    color: red;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplier/supplierRequest/bankInfoForm.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplier/supplierRequest/basicInfoForm.vue","messages":[{"ruleId":"vue/require-valid-default-prop","severity":2,"message":"Type of the default value for 'formRules' prop must be a function.","line":30,"column":16,"nodeType":"ObjectExpression","endLine":32,"endColumn":8}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div>\n    <base-form\n      ref=\"baseForm\"\n      :form=\"basicInfoForm\"\n      :schema=\"basicSchema\"\n      :rules=\"basicRules\"\n      @input=\"onInput\"\n      :formProp=\"formProp\"\n    ></base-form>\n  </div>\n</template>\n\n<script>\n// import PMSFormItem from '@/components/BaseItem/formItem';\nimport baseForm from '@/components/BaseItem/baseForm';\nimport { getPaymentTerm } from '@/utils/constant';\nimport { formProp, changeRuleConfig } from './config/common';\nimport { getCategoryList } from '@/api/userRole';\n\nimport formSchema from './config/basicSchema';\n// import moment from 'moment';\n\nexport default {\n  props: {\n    // 后台字段配置，仅配置是否必填\n    formRules: {\n      type: Object,\n      required: true,\n      default: {\n        basic_info: {}\n      }\n    },\n    /**\n     * [{\n          label: item.company_code,\n          value: item.company_code,\n          country: item.country\n        }]\n     */\n    ebsCompanyCodeList: {\n      type: Array,\n      required: true\n    },\n    showType: {\n      type: String, // create、noBasicInfo、（默认）为空全部显示\n      required: false\n    },\n    basicInfoForm: {\n      required: true\n    },\n    isEdit: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      formProp: formProp,\n      l1CategoryOptions: []\n    };\n  },\n  components: {\n    baseForm\n  },\n  created() {\n    if (!this.l1CategoryOptions.length) {\n      this.getL1Categorys(this.basicInfoForm.region);\n    }\n  },\n  watch: {\n    'basicInfoForm.region'(newVal) {\n      this.getL1Categorys(newVal);\n    }\n  },\n  computed: {\n    schema() {\n      const config = [\n        {\n          field: 'company_code',\n          options: this.ebsCompanyCodeList\n        },\n        'supplier_type',\n        'purchase_type',\n        'name',\n        'vendor_site_id',\n        'sbs_vendor_id',\n        'approval_country',\n        'alternative_supplier_name',\n        'tax_payer_id',\n        'tax_registration_number',\n        'description',\n        'contract_type',\n        {\n          field: 'payment_method',\n          options: getPaymentTerm(this.basicInfoForm.region)\n        },\n        'site_start_date',\n        'site_end_date',\n        'tax_code',\n        'tax_rate',\n        'delivery_type',\n        'delivery_lead_time',\n        'is_serialised',\n        'minimum_order_quantity',\n        'return_address_list',\n        {\n          field: 'supply_category',\n          options: this.l1CategoryOptions\n        }\n      ];\n\n      return formSchema.getBussSchemaByType(\n        {\n          config,\n          ruleConfig: changeRuleConfig(this.formRules.basic_info),\n          form: { showType: this.showType, ...this.basicInfoForm },\n          isEdit: this.isEdit\n        },\n        this.showType\n      );\n    },\n    basicRules() {\n      return formSchema.getRules(this.schema);\n    },\n    basicSchema() {\n      return this.schema.map(schemaItem => {\n        const item = Object.assign({}, schemaItem);\n        return item;\n      });\n    }\n  },\n  methods: {\n    async getL1Categorys(country) {\n      if (!country) return;\n      const res = await getCategoryList({\n        country,\n        cs_status_list: 1,\n        use_global: 1\n      });\n      this.l1CategoryOptions = (res.data.cats || [])\n        .filter(item => item.parent_category === 0)\n        .map(item => ({\n          label: item.display_name,\n          value: item.catid\n        }));\n    },\n    validateForm() {\n      return this.$refs['baseForm'].validateForm();\n    },\n    onInput(schema, value) {\n      if (schema.field === 'company_code') {\n        const countryItem = this.ebsCompanyCodeList.find(item => item.value === value);\n        this.basicInfoForm.region = countryItem.country;\n      }\n      this.basicInfoForm[schema.field] = value;\n      this.$emit('setForm', 'basic_info', JSON.parse(JSON.stringify(this.basicInfoForm)));\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n/deep/.el-input-number__decrease,\n/deep/.el-input-number__increase {\n  top: 2px;\n  bottom: 2px;\n  .el-icon-plus {\n    margin-top: -4px;\n    vertical-align: middle;\n  }\n}\n</style>\n\n<style lang=\"scss\">\n.supply-category-form-item {\n  width: 480px !important;\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplier/supplierRequest/config/basicSchema.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplier/supplierRequest/config/common.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplier/supplierRequest/config/picSchema.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplier/supplierRequest/constant.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplier/supplierRequest/contractActionLog.vue","messages":[{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"supplier_id\" is not in camelCase.","line":63,"column":5,"nodeType":"Property","endLine":65,"endColumn":6}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-dialog\n    :visible.sync=\"dialogVisible\"\n    width=\"800px\"\n    lock-scroll\n    custom-class=\"pms-dialog\"\n    :title=\"$t('commonActionLog')\"\n    @close=\"onClose\"\n  >\n    <section v-loading=\"loading\" class=\"log-item-wrapper pms-log-table\">\n      <div class=\"log-item\" v-for=\"(log, index) in tableList\" :key=\"index\">\n        <div v-if=\"log.type === 1\" class=\"log-item-creation\">\n           <span>{{$t('commonLogRequestCreation', { operator:log.operator || 'N/A', mtime: moment(new Date(log.modify_time * 1000)).format('YYYY/MM/DD HH:mm:ss')})}}</span>\n        </div>\n        <div v-else>\n        <span class=\"log-item-operator\">{{log.operator || 'N/A'}}</span>\n        <span class=\"log-item-time\" >{{moment(new Date(log.modify_time * 1000)).format('YYYY/MM/DD HH:mm:ss')}}</span>\n        <el-table class=\"log-table\" :data=\"log.content\">\n          <el-table-column :label=\"$t('commonLogContent')\">\n            <template slot-scope=\"scope\">\n              <span class=\"log-field\">{{formartField(scope.row.field)}}</span>\n              <span class=\"log-action\" :class=\"{'red': scope.row.action === 3}\">{{formatAction(scope.row.action)}}</span>\n            </template>\n          </el-table-column>\n          <el-table-column :label=\"$t('commonLogBefore')\">\n             <template slot-scope=\"scope\">\n               {{scope.row.before == '' ? 'N/A' : formatContent(scope.row.field, scope.row.before)}}\n            </template>\n          </el-table-column>\n          <el-table-column :label=\"$t('commonLogAfter')\">\n            <template slot-scope=\"scope\">\n               {{scope.row.after == '' ? 'N/A' : formatContent(scope.row.field, scope.row.after)}}\n            </template>\n          </el-table-column>\n        </el-table>\n        </div>\n      </div>\n    </section>\n    <section slot=\"footer\">\n      <el-pagination\n        small\n        layout=\"slot, prev, next\"\n        background\n        :total=\"total\"\n        :page-size=\"pager.count\"\n        @current-change=\"handleCurrentChange\"\n        class=\"pms-ele-ui pms-pagination pms-float-left\"\n      >\n        <span class=\"pagination-info\">{{$t('commonPagination', { firstItem, lastItem, total})}}</span>\n      </el-pagination>\n      <el-button class=\"list-btn\" @click=\"onClose\">{{$t('commonOK')}}</el-button>\n    </section>\n  </el-dialog>\n</template>\n\n<script>\nimport { getContractActionLog } from '@/api/supplier';\nimport { supplierConfigActions } from '@/utils/constant';\nimport moment from 'moment';\n\nexport default {\n  props: {\n    supplier_id: {\n      required: true\n    },\n    visible: {\n      type: Boolean,\n      required: true,\n      default: false\n    }\n  },\n  data() {\n    return {\n      pager: {\n        count: 10,\n        page_no: 1\n      },\n      total: 0,\n      dialogVisible: false,\n      tableList: [],\n      loading: false\n    };\n  },\n  watch: {\n    visible(value) {\n      this.dialogVisible = value;\n      if (value) {\n        this.getActionLog();\n      }\n    }\n  },\n  computed: {\n    firstItem() {\n      return this.pager.count * (this.pager.page_no - 1) + 1;\n    },\n    lastItem() {\n      return (\n        this.pager.count * (this.pager.page_no - 1) + this.tableList.length\n      );\n    }\n  },\n  methods: {\n    moment,\n    formartField(value) {\n      if (value === 'trading_term_end_date_str') {\n        return 'trading_term_end_date';\n      }\n      if (value === 'trading_term_start_date_str') {\n        return 'trading_term_start_date';\n      }\n      return value;\n    },\n    formatContent(field, value) {\n      if (['site_start_date', 'site_end_date', 'supplier_end_date'].includes(field)) {\n        return this.formatSiteDate(value);\n      }\n      if (['trading_term_start_date', 'trading_term_end_date'].includes(field)) {\n        return moment(parseInt(value) * 1000).format('YYYY-MM-DD');\n      }\n      return value;\n    },\n    formatSiteDate(dateStr) {\n      if (!dateStr) {\n        return 'N/A';\n      }\n      return moment(dateStr, 'YYYYMMDDHHmmss').format('YYYY-MM-DD');\n    },\n    formatAction(action) {\n      const output = (\n        supplierConfigActions.find(item => item.value === action) || {\n          label: ''\n        }\n      ).label;\n      if (output) {\n        return this.$t(output);\n      } else {\n        return '';\n      }\n    },\n    handleCurrentChange(index) {\n      this.pager.page_no = index;\n      this.getActionLog();\n    },\n    async getActionLog() {\n      try {\n        this.loading = true;\n        const params = {\n          supplier_id: this.supplier_id,\n          data: {\n            ...this.pager\n          }\n        };\n        const res = await getContractActionLog(params);\n        if (res && res.retcode === 0) {\n          this.tableList = res.data.change_list;\n          this.total = res.data.total;\n        } else {\n          this.$message({ type: 'error', message: res.info });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loading = false;\n      }\n    },\n    onClose() {\n      this.$emit('close');\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n@import '~@/styles/variables.scss';\n.log-item-wrapper {\n  height: 500px;\n  overflow: auto;\n  .log-item {\n    font-size: 14px;\n    margin-top: 24px;\n    &:first-child {\n      margin-top: 0;\n    }\n    .log-item-creation{\n      font-weight: bold;\n      color: $black;\n    }\n    .log-item-operator,\n    .log-item-time {\n      color: rgba(51, 51, 51, 0.65);\n    }\n    .log-item-time {\n      margin-left: 4px;\n    }\n    .log-table {\n      margin-top: 8px;\n    }\n    .log-action {\n      font-size: 12px;\n      color: #55cc77;\n      padding: 4px;\n      margin-left: 8px;\n      background: #ebf9ef;\n      border-radius: 2px;\n      border-radius: 2px;\n      &.red {\n        color: #ee4d2d;\n        background: #fff1f0;\n      }\n    }\n  }\n}\n</style>\n<style lang=\"scss\">\n@import \"~@/styles/common.scss\"; // ~@ = @ = 'src' webpack alias path\n.pms-dialog {\n  .el-dialog__body {\n    padding: 8px 24px 16px;\n  }\n}\n.pms-log-table {\n  .el-table {\n    .el-table__header-wrapper {\n      th {\n        height: 54px;\n        background-color: #f5f5f5;\n        font-size: 14px;\n        line-height: 1.5em;\n        font-weight: normal;\n        .cell {\n           word-break: break-word;\n        }\n\n      }\n    }\n    .el-table__body {\n      td {\n        height: 70px;\n        .cell{\n          word-break: break-word;\n        }\n      }\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplier/supplierRequest/contractInfoForm.vue","messages":[{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"site_end_date\" is not in camelCase.","line":132,"column":5,"nodeType":"Property","endLine":134,"endColumn":6}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"pms-ele-ui\">\n    <el-form\n      :validate-on-rule-change=\"false\"\n      :model=\"formData\"\n      :rules=\"rules\"\n      ref=\"formData\"\n      label-width=\"232px\"\n      label-position=\"left\"\n      class=\"contract-info-form-wrapper supplier-request-common\">\n      <el-form-item :label=\"`${$t('supplierConfigSupplierPaymentType')}:`\" prop=\"payment_type\">\n        <span v-if=\"!isEdit\">{{formatPaymentType(formData.payment_type)}}</span>\n        <el-select v-model=\"formData.payment_type\" v-else clearable>\n          <el-option\n            v-for=\"option in PaymentTypes\"\n            :key=\"option.value\"\n            :label=\"option.label\"\n            :value=\"option.value\"\n          ></el-option>\n        </el-select>\n      </el-form-item>\n      <el-form-item\n        :label=\"`${$t('supplierConfigTradingTermStartDate')}:`\"\n        prop=\"trading_term_start_date\">\n        <span v-if=\"!isEdit\">{{getDateByTimestamp(formData.trading_term_start_date)}}</span>\n        <el-date-picker\n          v-else\n          type=\"date\"\n          :popper-class=\"'pms-ele-ui'\"\n          prefix-icon=\"el-icon-date\"\n          format=\"yyyy-MM-dd\"\n          value-format=\"timestamp\"\n          clearable\n          v-model=\"formData.trading_term_start_date\"\n        ></el-date-picker>\n      </el-form-item>\n      <el-form-item :label=\"`${$t('supplierConfigTradingTermEndDate')}:`\" prop=\"trading_term_end_date\">\n        <span v-if=\"!isEdit\">{{getDateByTimestamp(formData.trading_term_end_date)}}</span>\n        <el-date-picker\n          v-else\n          type=\"date\"\n          :popper-class=\"'pms-ele-ui'\"\n          prefix-icon=\"el-icon-date\"\n          format=\"yyyy-MM-dd\"\n          value-format=\"timestamp\"\n          clearable\n          :picker-options=\"endTimeDisableOptions\"\n          v-model=\"formData.trading_term_end_date\"\n        ></el-date-picker>\n      </el-form-item>\n\n      <el-form-item v-if=\"[1, 2].includes(formConfig.contract_info && formConfig.contract_info.with_holding_tax)\" :label=\"`${$t('with_holding_tax')}:`\" prop=\"with_holding_tax\">\n        <span v-if=\"!isEdit\">{{getLabel(WithHoldingTaxTypes, formData.with_holding_tax)}}</span>\n        <el-select v-model=\"formData.with_holding_tax\" v-else clearable>\n          <el-option\n            v-for=\"option in WithHoldingTaxTypes\"\n            :key=\"option.value\"\n            :label=\"option.label\"\n            :value=\"option.value\"\n          ></el-option>\n        </el-select>\n      </el-form-item>\n\n      <!-- 配置的文件 -->\n      <el-form-item v-for=\"item in uploadFileList\" :key=\"item.field\">\n        <template slot=\"label\">\n          <el-form-item :prop=\"item.field\">\n            <span\n              :class=\"{'uploadFile-form-label': typeof rules[item.field] === 'object'&& rules[item.field].required}\"\n            >{{$t(item.label) + ': '}}</span>\n            <el-checkbox-group v-show=\"false\" v-model=\"formData[item.field]\"></el-checkbox-group>\n          </el-form-item>\n        </template>\n        <file-list-attachment\n          :ref=\"`fileList_${item.field}`\"\n          :attachmentList=\"formData[item.field] || []\"\n          :mode=\"isEdit ? 'edit' : 'view' \"\n          :limit=\"fileLimit\"\n          :accept=\"accept\"\n          @setAttachmentList=\"(...argu) => setGeneralFiles(item.field, ...argu)\"\n        ></file-list-attachment>\n      </el-form-item>\n      <!-- 自定义文件 -->\n      <el-form-item\n        v-for=\"(item, index) in configurable_files\"\n        :key=\"item.name + index\"\n      >\n        <template slot=\"label\">\n          <el-form-item :prop=\"`other_file_${index}`\">\n            <span :class=\"{'uploadFile-form-label': typeof rules[`other_file_${index}`] === 'object'&& rules[`other_file_${index}`].required}\">\n              {{item.name + ': '}}</span>\n            <el-checkbox-group v-show=\"false\" v-model=\"formData[`other_file_${index}`]\"></el-checkbox-group>\n          </el-form-item>\n        </template>\n        <file-list-attachment\n          :ref=\"`configurableFiles_${index}`\"\n          :attachmentList=\"formData[`other_file_${index}`] || []\"\n          :mode=\"isEdit ? 'edit' : 'view' \"\n          :limit=\"fileLimit\"\n          :accept=\"accept\"\n          @setAttachmentList=\"(...argu) => setConfigurableFiles(index, ...argu)\"\n        ></file-list-attachment>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\nimport {\n  PaymentTypes,\n  WithHoldingTaxTypes\n} from '@/utils/constant';\nimport FileListAttachment from '@/components/fileListAttachment';\nimport moment from 'moment';\n\nexport default {\n  components: { FileListAttachment },\n  props: {\n    formConfig: {\n      required: true\n    },\n    contractInfoObj: {\n      required: true\n    },\n    isEdit: {\n      required: true,\n      type: Boolean\n    },\n    isFromModify: {\n      type: Boolean\n    },\n    site_end_date: {\n      required: true\n    }\n  },\n  data() {\n    return {\n      accept: '.png, .jpg, .jpeg, .pdf, .xls, .xlsx',\n      fileLimit: {\n        size: 30,\n        count: 15\n      },\n      WithHoldingTaxTypes,\n      loading: false,\n      PaymentTypes,\n      formData: {\n        payment_type: '',\n        trading_term_start_date: '',\n        trading_term_end_date: '',\n        // personal\n        other_file_0: [],\n        other_file_1: [],\n        // common\n        supplier_registration_form: [],\n        trading_certificate: [],\n        contract: [],\n        bank_info: [],\n        legal_document: [],\n        other: []\n      },\n      cacheFormData: {},\n      uploadFileList: [], // 配置的文件\n      configurable_files: [] // 自定义配置的文件\n    };\n  },\n  watch: {\n    // isEdit(value) {\n    //   if (value) {\n    //     if (this.formConfig.contract_info.with_holding_tax !== 3 && !this.formData.with_holding_tax) {\n    //       this.formData.with_holding_tax = 2;\n    //     }\n    //   }\n    // },\n    contractInfoObj(value) {\n      // JSONvalue.contract\n      this.formData = JSON.parse(JSON.stringify(value)) || {};\n      this.initAttachment();\n    },\n    // 文件部分，需要通过 Supplier Info 配置是否需要展示\n    formConfig(value) {\n      const contract_upload_file = value.contract_upload_file ? value.contract_upload_file : {};\n      // set common file\n      this.setUploadFileConfig(contract_upload_file);\n      // set configurable file\n      this.configurable_files = contract_upload_file.configurable_files && contract_upload_file.configurable_files.map(item => {\n        item.file_list = [];\n        return item;\n      });\n      this.initAttachment();\n    }\n  },\n  computed: {\n    endTimeDisableOptions() {\n      const startDateTimeStamp = this.formData.trading_term_start_date;\n      return {\n        disabledDate(date) {\n          return date.getTime() <= Math.max(startDateTimeStamp - 86400000, Date.now());\n        }\n      };\n    },\n    rules() {\n      const contract_info = this.formConfig.contract_info || {};\n      const contract_upload_file = this.formConfig.contract_upload_file || {};\n      const baseRules = {\n        payment_type: {\n          required: contract_info.supplier_payment_type === 1,\n          trigger: 'change',\n          message: this.$t('commonIsRequired', {\n            target: this.$t('supplierConfigSupplierPaymentType')\n          })\n        },\n        with_holding_tax: {\n          required: contract_info.with_holding_tax === 1,\n          trigger: 'change',\n          message: this.$t('commonIsRequired', {\n            target: this.$t('with_holding_tax')\n          })\n        },\n        trading_term_start_date: [\n          {\n            required: contract_info.trading_term_start_date === 1,\n            trigger: 'change',\n            message: this.$t('commonIsRequired', {\n              target: this.$t('supplierConfigTradingTermStartDate')\n            })\n          }\n        ],\n        trading_term_end_date: [\n          {\n            required: contract_info.trading_term_end_date === 1,\n            trigger: 'change',\n            message: this.$t('commonIsRequired', {\n              target: this.$t('supplierConfigTradingTermEndDate')\n            })\n          },\n          {\n            validator: (rule, value, cb) => {\n              if (value && this.formData.trading_term_start_date && this.formData.trading_term_start_date > value) {\n                return cb(new Error(this.$t('supplierConfigTradingStratTimeLaterTradingEndTime')));\n              }\n              if (\n                this.site_end_date && value &&\n                this.site_end_date < value\n              ) {\n                return cb(\n                  new Error(this.$t('supplierConfigTradingEndTimeCanotLaterSiteEndDate'))\n                );\n              }\n              cb();\n            },\n            trigger: ['change', 'blur']\n          }\n        ],\n        supplier_registration_form: {\n          required: contract_upload_file.supplier_registration_form === 1,\n          trigger: 'change',\n          message: this.$t('commonPleaseUploadFiles')\n        },\n        contract: {\n          required: contract_upload_file.contract === 1,\n          trigger: 'change',\n          message: this.$t('commonPleaseUploadFiles')\n        },\n        legal_document: {\n          required: contract_upload_file.legal_document === 1,\n          trigger: 'change',\n          message: this.$t('commonPleaseUploadFiles')\n        },\n        bank_info: {\n          required: contract_upload_file.bank_info === 1,\n          trigger: 'change',\n          message: this.$t('commonPleaseUploadFiles')\n        },\n        trading_certificate: {\n          required: contract_upload_file.trading_certificate === 1,\n          trigger: 'change',\n          message: this.$t('commonPleaseUploadFiles')\n        },\n        other: {\n          required: contract_upload_file.other === 1,\n          trigger: 'change',\n          message: this.$t('commonPleaseUploadFiles')\n        }\n      };\n\n      if (\n        this.configurable_files &&\n        this.configurable_files.length\n      ) {\n        this.configurable_files.forEach((item, index) => {\n          const configItem = contract_upload_file.configurable_files && contract_upload_file.configurable_files.find(\n            config => config.name === item.name\n          );\n          if (configItem && configItem.config === 1) {\n            baseRules[`other_file_${index}`] = {\n              required: true,\n              trigger: 'change',\n              message: this.$t('commonPleaseUploadFiles')\n            };\n          }\n        });\n      }\n      return baseRules;\n    }\n  },\n  methods: {\n    moment,\n    getDateByTimestamp(timestamp) {\n      if (!timestamp) {\n        return '/';\n      }\n      const date = moment(timestamp, 'x');\n      if (!date.isValid()) return '';\n      return date.format('YYYY-MM-DD');\n    },\n    setConfigurableFiles(index, fileList) {\n      fileList = fileList.map((file, index) => {\n        return {\n          ...file,\n          file_size: file.file_size,\n          sequence_number: ++index\n        };\n      });\n      this.$set(this.formData, `other_file_${index}`, fileList);\n      // this.formData[`other_file_${index}`] = fileList;\n      this.configurable_files[index].file_list = fileList;\n    },\n    setGeneralFiles(field, attachmentList) {\n      attachmentList = attachmentList.map((file, index) => ({\n        ...file,\n        file_size: file.file_size,\n        sequence_number: ++index\n      }));\n      this.$set(this.formData, field, attachmentList);\n    },\n    formatPaymentType(type) {\n      if (type === 0) {\n        return '/';\n      }\n      return (PaymentTypes.find(item => item.value === type) || { label: '' })\n        .label;\n    },\n    getLabel(types, value) {\n      return (types.find(item => item.value === value) || {}).label || '/';\n    },\n    hasNoFinishFile() {\n      let didNotFinish = this.uploadFileList.some(item => {\n        if (this.$refs[`fileList_${item.field}`]) {\n          const { isAllFinish } = this.$refs[`fileList_${item.field}`][0].checkFileListStatus();\n          return isAllFinish !== undefined && !isAllFinish;\n        } else {\n          return false;\n        }\n      });\n      if (!didNotFinish) {\n        didNotFinish = this.configurable_files.some((item, index) => {\n          if (this.$refs[`configurableFiles_${index}`]) {\n            const { isAllFinish } = this.$refs[`configurableFiles_${index}`][0].checkFileListStatus();\n            return isAllFinish !== undefined && !isAllFinish;\n          } else {\n            return false;\n          }\n        });\n      }\n      return didNotFinish;\n    },\n    validateForm() {\n      const result = new Promise((resolve, reject) => {\n        this.$refs['formData'].validate((valid) => {\n          if (valid) {\n            if (this.hasNoFinishFile()) {\n              this.$message.error(this.$t('attachmentFileUploading'));\n              reject();\n            }\n            resolve();\n          } else {\n            reject();\n          }\n        });\n      });\n      return result;\n    },\n    clearFormValidate() {\n      this.$refs.formData && this.$refs.formData.clearValidate();\n    },\n    parserConfigLabel(key) {\n      let label = '';\n      switch (key) {\n        case 'supplier_registration_form':\n          label = 'supplierConfigSupplierRegistrationForm';\n          break;\n        case 'trading_certificate':\n          label = 'supplierConfigTradingCertificate';\n          break;\n        case 'contract':\n          label = 'supplierConfigContract';\n          break;\n        case 'legal_document':\n          label = 'supplierConfigLegalDocument';\n          break;\n        case 'bank_info':\n          label = 'supplierConfigBankInfo';\n          break;\n        case 'other':\n          label = 'supplierConfigOther';\n          break;\n      }\n      return label;\n    },\n    // 配置的文件是否需要展示，是否必填\n    setUploadFileConfig(configUploadObj) {\n      this.uploadFileList = [];\n      Object.entries(configUploadObj).map(([key, value]) => {\n        if (typeof value === 'number') {\n          /**\n           * 3 no required\n           * 2 optional\n           * 1 required\n           */\n          if (value !== 3) {\n            this.uploadFileList.push({\n              label: this.parserConfigLabel(key),\n              field: key,\n              isRequired: value === 1\n            });\n            // this.$set(this.formData, key, []);\n          }\n        }\n      });\n    },\n    initAttachment() {\n      this.$nextTick(() => {\n        this.uploadFileList && this.uploadFileList.forEach(item => {\n          if (this.$refs[`fileList_${item.field}`]) {\n            this.$refs[`fileList_${item.field}`][0].initAttachmentList &&\n            this.$refs[`fileList_${item.field}`][0].initAttachmentList();\n          }\n        });\n        this.configurable_files && this.configurable_files.forEach((item, index) => {\n          this.$refs[`configurableFiles_${index}`][0].initAttachmentList &&\n            this.$refs[`configurableFiles_${index}`][0].initAttachmentList();\n        });\n        this.clearFormValidate();\n      });\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.contract-info-form-wrapper {\n  .el-select {\n    width: 254px;\n  }\n  .el-input {\n    &,\n    &.el-date-editor {\n      width: 254px !important;\n      .el-input__inner {\n        padding-left: 30px;\n      }\n    }\n    .el-input__inner {\n      width: 100%;\n    }\n  }\n}\n</style>\n<style lang=\"scss\" scoped>\n@import \"~@/styles/variables.scss\";\n.uploadFile-form-label {\n  &:before {\n    content: \"*\";\n    color: $red;\n    display: inline-block;\n    height: 8px;\n    width: 8px;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplier/supplierRequest/detail.vue","messages":[{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":203,"column":21,"nodeType":"ThisExpression","endLine":203,"endColumn":25},{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"supplier-request-detail\" is not PascalCase.","line":310,"column":9,"nodeType":"Literal","endLine":310,"endColumn":34,"fix":{"range":[10679,10702],"text":"SupplierRequestDetail"}},{"ruleId":"vue/return-in-computed-property","severity":2,"message":"Expected to return a value in \"getSupplierId\" computed property.","line":381,"column":18,"nodeType":"FunctionExpression","endLine":388,"endColumn":6},{"ruleId":"vue/no-side-effects-in-computed-properties","severity":2,"message":"Unexpected side effect in \"showTabsList\" computed property.","line":439,"column":7,"nodeType":"AssignmentExpression","endLine":439,"endColumn":39},{"ruleId":"vue/no-side-effects-in-computed-properties","severity":2,"message":"Unexpected side effect in \"showTabsList\" computed property.","line":441,"column":9,"nodeType":"AssignmentExpression","endLine":441,"endColumn":69},{"ruleId":"vue/no-side-effects-in-computed-properties","severity":2,"message":"Unexpected side effect in \"showTabsList\" computed property.","line":444,"column":9,"nodeType":"AssignmentExpression","endLine":444,"endColumn":70}],"errorCount":6,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div class=\"pms-ele-ui supplier-request-detail layout-padding\">\n    <!-- 头部 -->\n    <section class=\"detail-header-wrapper\">\n      <div class=\"left-info\">\n        <i @click=\"goBack()\" class=\"el-icon-arrow-left go-back-icon\" ></i>\n        <span class=\"header-text\">{{isSupplierDetail? supplierId : requestId || $t('newSupplierRequest')}}</span>\n        <span v-if=\"supplierTag\" class=\"pms-tag-label\">{{supplierTag}}</span>\n        <span v-if=\"!isSupplierDetail && statusText\" :class=\"['common-status', `status-${statusType}`]\" >{{statusText}}</span>\n\n        <span class=\"header-status\" v-if=\"isSupplierDetail && allDetails.ebs_request_id \">\n          {{$t('LastEBSRequest')}}:\n          <router-link class=\"link\" :to=\"{ name: 'requestDetail', params: { id: allDetails.ebs_request_id }}\">\n            {{`${allDetails.ebs_request_id}(${getStatusText(allDetails.ebs_request_status)})`}}\n          </router-link>\n        </span>\n\n        <span class=\"header-status\" v-if=\"isSupplierDetail && allDetails.pms_request_id \">\n          {{$t('LastPMSRequest')}}:\n          <router-link class=\"link\" :to=\"{ name: 'requestDetail', params: { id: allDetails.pms_request_id }}\">\n            {{`${allDetails.pms_request_id}(${getStatusText(allDetails.pms_request_status)})`}}\n          </router-link>\n        </span>\n\n        <span class=\"header-status\" v-if=\"isSupplierDetail && allDetails.last_draft_id \">\n          {{$t('LastRequest')}}:\n          <router-link class=\"link\" :to=\"{ name: 'requestDetail', params: { id: allDetails.last_draft_id }}\">\n            {{`${allDetails.last_draft_id}(${getStatusText(7)})`}}\n          </router-link>\n        </span>\n      </div>\n      <!-- 按钮区 -->\n      <section class=\"right-top btn-wrapper\">\n        <el-button\n          v-show=\"isShowApproveBtn\"\n          class=\"list-btn reject-btn\"\n          @click=\"onReject\"\n        >{{$t('supplierReject')}} ({{allDetails.pending_count}})</el-button>\n        <el-button\n          v-show=\"isShowApproveBtn\"\n          class=\"list-btn approve-btn\"\n          @click=\"approveRequest\"\n        >{{$t('supplierApprove')}} ({{allDetails.pending_count}})</el-button>\n        <el-button\n          v-show=\"!isEdit && !isDraft\"\n          @click=\"onAction\"\n          class=\"list-btn white-blue\"\n        >{{$t('commonActionLog')}}</el-button>\n        <el-button\n          v-show=\"isShowCancelRequestBtn\"\n          @click=\"onCancelRequest\"\n          class=\"list-btn bg-blue\"\n        >{{$t('commonCancelRequest')}}</el-button>\n        <el-button\n          v-show=\"isShowEditBtn\"\n          @click=\"onEdit\"\n          class=\"list-btn bg-blue\"\n        >{{$t('commonEdit')}}</el-button>\n        <!-- 以下是编辑状态的按钮  -->\n        <el-button\n          v-show=\"isShowCancelBtn\"\n          @click=\"onCancel\"\n          class=\"list-btn white-grey\"\n        >{{$t('commonCancel')}}</el-button>\n        <el-button\n          v-show=\"isShowSaveAsDraftBtn\"\n          class=\"list-btn white-blue\"\n          @click=\"submitForm('save')\"\n        >{{$t('supplierSaveAsDraft')}}</el-button>\n        <el-button\n          v-show=\"isShowSubmitBtn\"\n          @click=\"submitForm('submit')\"\n          class=\"list-btn bg-blue\"\n        >{{$t('commonSubmit')}}</el-button>\n\n      </section>\n    </section>\n    <!-- 拒绝理由展示 -->\n    <div class=\"reject-text\" v-if=\"!isSupplierDetail && isRejected\">\n      <i class=\"el-icon-warning icon\"></i><span>{{allDetails.remark}}</span>\n    </div>\n    <div class=\"main-wrapper\">\n      <!-- tab -->\n      <el-tabs v-model=\"activeTab\" type=\"card\">\n        <el-tab-pane\n          :name=\"tab.name\"\n          v-for=\"(tab, index) in showTabsList\"\n          :key=\"index\">\n          <span slot=\"label\">\n            <i v-show=\"isEditing(tab.name)\" class=\"el-icon-edit edit-pan\"></i>\n            <span>{{$t(tab.label)}}</span>\n          </span>\n          </el-tab-pane>\n      </el-tabs>\n      <!-- base Info -->\n      <section v-show=\"activeTab === 'baseInfo'\">\n        <BasicInfoForm\n         class=\"base-info-form\"\n          ref=\"basicInfo\"\n          :ebs-company-code-list=\"ebsCompanyCodeList\"\n          :basic-info-form=\"allFormValue.basic_info\"\n          :show-type=\"basicShowType\"\n          @setForm=\"setForm\"\n          :isEdit=\"isEditing('baseInfo')\"\n          :form-rules=\"formConfig\"></BasicInfoForm>\n      </section>\n      <!-- pic Contact Info -->\n      <section v-show=\"activeTab === 'picContactInfo' && !isHiddenOthers\">\n        <PicContactInfoForm\n        class=\"base-info-form\"\n        ref=\"picContactInfo\"\n        :pic-info-form-obj=\"pic_info\"\n        :addressCountryList=\"addressCountryList\"\n        :formConfig=\"formConfig\"\n        :isEdit=\"isEditing('picContactInfo')\"\n        :isSupplierDetail=\"isSupplierDetail\"\n        :isFromModify=\"isFromModify\"></PicContactInfoForm>\n      </section>\n      <!-- bankInfo -->\n      <section v-show=\"activeTab === 'bankInfo' && !isHiddenOthers && viewPermission.canSupplierViewBank\">\n        <BankInfoForm\n          ref=\"bankInfo\"\n          :currencyList=\"currencyList\"\n          :bankInfoList=\"bank_info_list\"\n          :formConfig=\"formConfig\"\n          :isEdit=\"isEditing('bankInfo')\"\n          :isDraft=\"isDraft\"\n          :isFromModify=\"isFromModify\"></BankInfoForm>\n      </section>\n      <!-- contract Info -->\n      <section v-show=\"activeTab === 'contractInfo' && !isHiddenOthers && viewPermission.canSupplierDetailContractInfoView\">\n        <ContractInfoForm\n          ref=\"contractInfo\"\n          :formConfig=\"formConfig\"\n          :isEdit=\"isEditing('contractInfo')\"\n          :isFromModify=\"isFromModify\"\n          :contractInfoObj=\"contract_info\"\n          :site_end_date=\"allFormValue.basic_info.site_end_date\"></ContractInfoForm>\n      </section>\n      <!-- shop Info -->\n      <section v-show=\"activeTab === 'shopInfo' && !isHiddenOthers\">\n        <ShopInfoForm\n          ref=\"shopInfo\"\n          :country=\"allFormValue.basic_info.region\"\n          :shopInfoObj=\"shop_info\"\n          :isEdit=\"isEditing('shopInfo')\"\n          :isFromModify=\"isFromModify\"></ShopInfoForm>\n      </section>\n      <!-- Sku Info -->\n      <section v-if=\"activeTab === 'sku' && !isHiddenOthers\">\n        <commonSku\n          :brandList=\"currencyList\"\n          :sourcingStatusList=\"sourcingStatusList\"\n          :currency=\"currency\"\n          :supplierId=\"getSupplierId\"\n          ></commonSku>\n      </section>\n      <!-- remark Info -->\n      <section v-show=\"activeTab === 'remark' && !isHiddenOthers\">\n        <RemarkForm\n          v-if=\"isShowRemark\"\n          ref=\"remarkInfo\"\n          :isEdit=\"isEdit\"\n          :remarkInfoObj=\"request_remark\"></RemarkForm>\n      </section>\n      <!-- 没有权限的展示 -->\n      <section v-if=\"isShowNoPermission\">\n        <div class=\"no-permission\">\n          <img class=\"no-permission-img\" :src=\"NotFoundImage\" alt=\"\">\n          <p class=\"no-permission-msg\">{{$t('You do not have permission to view this informaction.')}}</p>\n        </div>\n      </section>\n\n      <!-- 拒绝理由弹窗 -->\n      <el-dialog\n      title=\"Reject\"\n      :visible.sync=\"dialogVisible\"\n      width=\"30%\">\n      <el-form\n        ref=\"rejectForm\"\n        :rules=\"rejectFormRules\" :model=\"rejectForm\" class=\"reason-textarea\">\n        <el-form-item prop=\"reason\" :label=\"`${$t('massRejectReason')}:`\" label-width=\"130px\">\n          <el-input :rows=\"4\"  type=\"textarea\" v-model=\"rejectForm.reason\">\n          </el-input>\n        </el-form-item>\n        <span class=\"font-num-count\">{{rejectForm.reason.length}}/1000}}</span>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\">{{$t('commonCancel')}}</el-button>\n        <el-button type=\"primary\" @click=\"rejectRequest\">{{$t('commonConfirm')}}</el-button>\n      </span>\n    </el-dialog>\n\n    <!-- supplier request 中的 Action Log -->\n    <ActionLog\n      v-if=\"!isSupplierDetail && requestId\"\n      :visible=\"actionLogVisible\"\n      :requestId=\"requestId\"\n      @close=\"closeActionLog\"></ActionLog>\n    <!-- Supplier Request 中的 Action Log -->\n    <contractActionLog\n      v-else\n      :supplier_id=\"this.supplierId\"\n      :visible=\"actionLogVisible\"\n      @close=\"closeActionLog\"\n      ></contractActionLog>\n    </div>\n  </div>\n</template>\n\n<script>\n// TODO 可以使用 schema 的方式做得更加灵活\nimport moment from 'moment';\nimport { hasPermission } from '@/utils/permission';\nimport NotFoundImage from '@/assets/images/no-permission.svg';\n\nimport BasicInfoForm from './basicInfoForm.vue';\nimport PicContactInfoForm from './newPicInfo.vue';\nimport BankInfoForm from './bankInfoForm.vue';\nimport ContractInfoForm from './contractInfoForm.vue';\nimport ShopInfoForm from './shopInfoForm.vue';\nimport RemarkForm from './remarkForm.vue';\nimport ActionLog from './actionLog.vue';\nimport contractActionLog from './contractActionLog';\n\nimport { getSupplierDetail } from '@/api/supplier';\nimport commonSku from '@/components/supplier/commonSku.vue';\nimport { getBrandList } from '@/api/brand';\nimport { isValidEmail } from '@/utils/validate';\nimport { SupplierDetailKeyToName } from '@/utils';\nimport { schema as picSchema } from './config/picSchema';\nimport { supplierRequestSide } from './constant';\n\nfunction getAtLeastOneList(list) {\n  // 获取一个数组，过滤空元素，至少包含一个元素\n  list = list || [];\n  const res = list.filter(item => item);\n  if (!res.length) res.push('');\n  return res;\n}\n\nfunction fillArray(list, count) {\n  if (list.length < count) {\n    list.concat(new Array(count - list.length).fill(''));\n  }\n\n  return list;\n}\n\nimport {\n  getSupplierConfig\n} from '@/api/supplierConfig';\n\nimport {\n  getSupplierRequestDetail,\n  approveSupplierRequest,\n  rejectApproveSupplierRequest,\n  cancelApproveSupplierRequest,\n  getEbsCompanyCode,\n  getSupplierAddressCountry,\n  getBankAccountCurrency,\n  submitSupplierRequest,\n  saveDraftSupplierRequest\n} from '@/api/supplierRequest';\nimport {\n  Permission,\n  SupplierRequestStatus,\n  SKUSourcingStatus,\n  EmptyBasicInfoForm,\n  EmptyPicInfoForm,\n  EmptyContractInfoForm,\n  EmptyShopInfoForm,\n  EmptyRemarkForm\n} from '@/utils/constant';\n\nconst basicTabList = [{\n  label: 'supplierRequestBasicInfo',\n  name: 'baseInfo'\n}, {\n  label: 'supplierRequestPicContactInfo',\n  name: 'picContactInfo'\n}, {\n  label: 'supplierRequestBankInfo',\n  name: 'bankInfo'\n}, {\n  label: 'supplierRequestContractInfo',\n  name: 'contractInfo'\n}, {\n  label: 'supplierRequestShopInfo',\n  name: 'shopInfo'\n}];\n\nexport const MaxEmailLength = 3;\nexport const MaxPhoneLength = 3;\nexport const ShopeeSourcerPhoneListLength = 5;\nexport const ShopeeSourcerEmailListLength = 5;\n\nexport default {\n  components: {\n    BasicInfoForm,\n    PicContactInfoForm,\n    BankInfoForm,\n    ContractInfoForm,\n    ShopInfoForm,\n    RemarkForm,\n    ActionLog,\n    contractActionLog,\n    commonSku\n  },\n  name: 'supplier-request-detail',\n  data() {\n    return {\n      NotFoundImage: NotFoundImage,\n      // 局部模块权限\n      editPermission: {\n        baseInfo: hasPermission(Permission.SupplierDetailBasicInfoEdit),\n        picContactInfo: hasPermission(Permission.SupplierDetailPICEdit),\n        contractInfo: hasPermission(Permission.SupplierDetailContractInfoEdit),\n        bankInfo: hasPermission(Permission.supplierEditBank),\n        shopInfo: hasPermission(Permission.SUPPLIER_BIND_SHOP)\n      },\n      viewPermission: {\n        // 浏览权限\n        canSupplierDetailContractInfoView: hasPermission(Permission.SupplierDetailContractInfoView),\n        canSupplierViewBank: hasPermission(Permission.supplierViewBank)\n      },\n      // 是否可以编辑创建的request权限\n      canSupplierRequestProcess: hasPermission(Permission.supplierRequestProcess),\n\n      activeTab: 'baseInfo',\n      tabsInfoList: [],\n      remarkTab: {\n        label: 'supplierRequestRemark',\n        name: 'remark'\n      },\n      skuInfoTab: {\n        name: 'sku',\n        label: 'supplierSkuInformation'\n      },\n      statusCode: -1,\n      allFormValue: {\n        basic_info: EmptyBasicInfoForm\n      },\n      bank_info_list: [],\n      pic_info: EmptyPicInfoForm,\n      contract_info: EmptyContractInfoForm,\n      shop_info: EmptyShopInfoForm,\n      request_remark: EmptyRemarkForm,\n      isEdit: false,\n      canEdit: false,\n      ebsCompanyCodeList: [],\n      addressCountryList: [],\n      formConfig: {},\n      currencyList: [],\n      requestId: '', // requestId\n      supplierId: '',\n      isFromModify: false,\n      canApprove: false,\n      dialogVisible: false,\n      rejectForm: {\n        reason: ''\n      },\n      rejectFormRules: {\n        reason: [\n          { required: true, message: 'Reject Reason is required.', trigger: 'blur' },\n          { max: 1000, message: 'Reject Reason cannot be longer than 80 characters', trigger: 'change' }]\n      },\n      actionLogVisible: false,\n      allDetails: {},\n      sourcingStatusList: SKUSourcingStatus,\n      brandList: []\n    };\n  },\n  computed: {\n    supplierTag() {\n      if (this.isSupplierDetail) return '';\n      const tag = supplierRequestSide[this.allDetails.request_side];\n      return tag;\n    },\n    // 获取到 supplier Id\n    getSupplierId() {\n      if (this.isSupplierDetail) {\n        return this.$route.params.id;\n      }\n      if (this.pageModel === 'modifyRequest') {\n        return this.allFormValue.basic_info.vendor_site_id;\n      }\n    },\n    isShowApproveBtn() {\n      return this.canApprove && this.isPendingApprove && this.requestId;\n    },\n    isRequester() {\n      return this.$store.getters.email === this.allDetails.requester;\n    },\n    currency() {\n      return this.$store.getters.currencyMap[this.pic_info.country] || '';\n    },\n    isShowNoPermission() {\n      if (this.activeTab === 'contractInfo') {\n        return !this.viewPermission.canSupplierDetailContractInfoView;\n      } else if (this.activeTab === 'bankInfo') {\n        return !this.viewPermission.canSupplierViewBank;\n      }\n      return false;\n    },\n    // 页面类型：createRequest,modifyRequest,supplierDetail\n    pageModel() {\n      if (this.$route.name === 'supplier_detail') {\n        return 'supplierDetail';\n      } else if (!this.requestId || !this.isFromModify) {\n        // 创建页面拥有全部模块权限\n        Object.keys(this.viewPermission).forEach(key => {\n          this.viewPermission[key] = true;\n        });\n        return 'createRequest';\n      }\n\n      return 'modifyRequest';\n    },\n    basicShowType() {\n      let type = 'modify';\n      // 如果是创建页面\n      if (this.pageModel === 'createRequest') {\n        if (this.isHiddenOthers) {\n          type = 'noBasicInfo';\n        } else {\n          type = 'create';\n        }\n      }\n      return type;\n    },\n    isShowRemark() {\n      return !this.isSupplierDetail || this.isEdit;\n    },\n    isShowSkuInfo() {\n      return this.pageModel === 'supplierDetail' || this.pageModel === 'modifyRequest';\n    },\n    showTabsList() {\n      this.tabsInfoList = basicTabList;\n      if (this.isShowRemark) {\n        this.tabsInfoList = this.tabsInfoList.concat(this.remarkTab);\n      }\n      if (this.isShowSkuInfo) {\n        this.tabsInfoList = this.tabsInfoList.concat(this.skuInfoTab);\n      }\n      return this.tabsInfoList;\n    },\n    // isShowRequestLink() {\n    //   return this.isSupplierDetail && (this.allDetails.ebs_request_id || this.allDetails.pms_request_id);\n    // },\n    isShowEditBtn() {\n      if (this.isEdit) return false;\n      if (this.pageModel === 'createRequest' && !this.canSupplierRequestProcess) return false;\n      if (!this.canEdit) return false;\n      return this.isSupplierDetail || this.isRejected || this.isDraft;\n    },\n    // 交互操作取消按钮\n    isShowCancelBtn() {\n      if (this.pageModel === 'createRequest' && !this.isDraft) {\n        // 创建页面不显示cancel\n        return false;\n      }\n      return !!this.isEdit;\n    },\n    // 草稿或者rejected状态，可以撤销request\n    isShowCancelRequestBtn() {\n      if (this.isEdit || !this.isRequester || this.pageModel === 'supplierDetail' || !this.canSupplierRequestProcess) return false;\n\n      // 单据状态\n      return this.isRejected || this.isDraft || (this.isPendingApprove && this.statusCode === 1);\n    },\n    isShowSaveAsDraftBtn() {\n      return this.isEdit && !this.isRejected;\n    },\n    // create/detail/draft/rejected状态下的编辑可提交\n    isShowSubmitBtn() {\n      if (this.isEdit) {\n        return !this.requestId || this.isRejected || this.isDraft || this.isSupplierDetail;\n      }\n      return false;\n    },\n    isSupplierDetail() {\n      return this.pageModel === 'supplierDetail';\n    },\n    statusType() {\n      if (!SupplierRequestStatus[this.statusCode]) return '';\n      return SupplierRequestStatus[this.statusCode] && SupplierRequestStatus[this.statusCode].type;\n    },\n    statusText() {\n      let roleName = '';\n      if (this.allDetails.next_role_name) {\n        roleName = `: ${this.allDetails.next_role_name}`;\n      }\n      if (!SupplierRequestStatus[this.statusCode]) return '';\n      return this.$t(SupplierRequestStatus[this.statusCode].text) + roleName;\n    },\n    isDraft() {\n      return this.statusType === 'draft';\n    },\n    isRejected() {\n      return this.statusType === 'rejected';\n    },\n    isPendingApprove() {\n      return this.statusType === 'pending';\n    },\n    isCompleted() {\n      return this.statusType === 'completed';\n    },\n    isCancelled() {\n      return this.statusType === 'cancelled';\n    },\n    isHiddenOthers() {\n      // if (this.requestId) {\n      //   return false;\n      // }\n      const basicInfoObj = this.allFormValue.basic_info;\n      const region = basicInfoObj.region;\n      const supplier_type = basicInfoObj.supplier_type;\n      const purchase_type = basicInfoObj.purchase_type;\n      const isHidden = !region || !supplier_type || !purchase_type;\n      const config_type = this.getConfigType(supplier_type, purchase_type);\n      if (!isHidden && config_type) {\n        this.getFormConfig(region, config_type);\n      } else if (!isHidden && !config_type) { // all has values.but not match.\n        this.$message.error(`Outright * CB module doesn't exist`);\n      }\n      return isHidden || !config_type;\n    },\n    getBasicRegion() {\n      return this.allFormValue.basic_info.region;\n    }\n  },\n  watch: {\n    '$route'(value) {\n      // 因为复用组件，当路由改变时需要刷新数据\n      this.init();\n    },\n    // 当 region，supplier_type，purchase_type 其中一个修改的时候，表单全部要置空\n    'allFormValue.basic_info.region'(value) {\n      if (!value) {\n        return;\n      }\n      this.resetFormData();\n    },\n    'allFormValue.basic_info.supplier_type'(value) {\n      this.resetFormData();\n    },\n    'allFormValue.basic_info.purchase_type'(value) {\n      this.resetFormData();\n    }\n  },\n  created() {\n    this.init();\n  },\n  methods: {\n    getStatusText(status) {\n      if (!SupplierRequestStatus[status]) return '';\n      return this.$t(SupplierRequestStatus[status].text);\n    },\n    changeShopBindType() {\n      if (this.getBasicRegion === 'TW') {\n        this.shop_info.bind_type = '';\n      }\n    },\n    // 置空表单\n    resetFormData() {\n      // 在不是创建页面的时候，不需要置空\n      if (this.requestId || this.supplierId || this.isDraft) {\n        return;\n      }\n      // 修改 region 的时候，会影响到 bindType，针对 TW 要置空。暂时不需要这个 TODO\n      // this.changeShopBindType();\n      // region, supplier_type, purchase_type 这三个保持不变\n      this.allFormValue.basic_info = Object.assign({}, EmptyBasicInfoForm, {\n        region: this.allFormValue.basic_info.region,\n        supplier_type: this.allFormValue.basic_info.supplier_type,\n        purchase_type: this.allFormValue.basic_info.purchase_type,\n        company_code: this.allFormValue.basic_info.company_code\n      });\n      // 不能直接赋值，要使用 Object.assign\n      this.pic_info = Object.assign({}, this.pic_info, EmptyPicInfoForm);\n      this.contract_info = Object.assign({}, this.contract_info, EmptyContractInfoForm);\n      this.request_remark = Object.assign({}, this.request_remark, EmptyRemarkForm);\n      this.bank_info_list = [];\n      this.shop_info = Object.assign({}, this.shop_info, EmptyShopInfoForm);\n    },\n    isEditing(moduleName) {\n      if (moduleName === 'remark') return this.isEdit;\n      if (this.pageModel === 'createRequest' || this.editPermission[moduleName]) {\n        return this.isEdit;\n      }\n      return false;\n    },\n    async init() {\n      this.getEbsCompanyCode();\n      this.getSupplierAddressCountry();\n      this.getBankAccountCurrency();\n      if (this.isSupplierDetail) {\n        this.isEdit = false;\n        this.supplierId = this.$route.params.id;\n        await this.getSupplierDetail();\n        Promise.all([this.getCountryBrandList()]);\n      } else {\n        this.requestId = this.$route.params.id;\n        if (!this.requestId) this.isEdit = true;\n        await this.getSupplierRequestDetails();\n        Promise.all([this.getCountryBrandList()]);\n      }\n    },\n    getCountryBrandList() {\n      return getBrandList({ pageno: 1, country: this.allFormValue.basic_info.approval_country || this.pic_info.country, count: 200, status: 0 }).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.brandList = (resp.data.brand_list || []).map(item => ({ label: item.brand_name, value: item.brand_id }));\n        }\n      });\n    },\n    formatDate(dateStr) {\n      const date = moment(dateStr, 'YYYYMMDDHHmmss');\n      if (!date.isValid()) return dateStr;\n      return date.format('x');\n    },\n    formatSubmitDate(value) {\n      const date = moment(value, 'x');\n      if (!date.isValid()) return value;\n      return date.format('YYYYMMDDHHmmss');\n    },\n    formatToRequestDetail(data) {\n      // 将list detail信息接口格式化为request detail\n      let pic_info = {};\n      if (this.isSupplierDetail) {\n        // 只在 supplierlist的detail需要这个字段\n        let pic_contact_info_prefix = '';\n        let pic_contact_info_suffix = '@shopee.com';\n        const picArr = `${(data.supplier_info || {}).pic_contact_info}`.split('@');\n        if (Array.isArray(picArr) && picArr.length > 1) {\n          pic_contact_info_prefix = picArr.slice(0, picArr.length - 1).join('');\n          pic_contact_info_suffix = `@${picArr[picArr.length - 1]}`;\n        }\n        pic_info = { emailAppend: pic_contact_info_suffix, pic_contact_info: pic_contact_info_prefix };\n      }\n      const detail = {\n        basic_info: Object.assign({}, data.supplier_info),\n        pic_info: Object.assign({}, data.supplier_info, pic_info),\n        bank_info_list: data.bank_info,\n        contract_info: Object.assign({}, data.supplier_contract_info),\n        shop_info: Object.assign({}, data.shop_info),\n        request_remark: {}\n      };\n      detail.contract_info.file_type = Object.assign({}, data.supplier_contract_info);\n\n      return detail;\n    },\n    async handleDetail(details) {\n      // 将request detail的格式转换为组件需要的数据\n      // basic_info\n      const basic_info = details.basic_info;\n      if (basic_info.payment_method === 'Immediately') {\n        basic_info.payment_method = 'CBD';\n      }\n      basic_info.site_end_date = this.formatDate(basic_info.site_end_date);\n      basic_info.site_start_date = this.formatDate(basic_info.site_start_date);\n\n      if (!Array.isArray(basic_info.return_address_list) || !basic_info.return_address_list.length) {\n        basic_info.return_address_list = [''];\n      }\n\n      basic_info.is_serialised = basic_info.is_serialised || ''; // 0转换为''\n      if (!Array.isArray(basic_info.supply_category)) {\n        basic_info.supply_category = [];\n      }\n\n      this.allFormValue.basic_info = basic_info;\n      this.allFormValue.basic_info.region = basic_info.approval_country;\n\n      // form config\n      const config_type = this.getConfigType(this.allFormValue.basic_info.supplier_type, this.allFormValue.basic_info.purchase_type);\n      await this.getFormConfig(this.allFormValue.basic_info.region, config_type);\n\n      // pic_info\n      const pic_info = details.pic_info;\n      pic_info.address_list = ['address', 'address2', 'address3', 'address4'].map(key => pic_info[key]);\n\n      ['address_list', 'email_list', 'phone_list', 'shopee_sourcer_phone_list', 'shopee_sourcer_list', 'supplier_finance_email_list', 'supplier_finance_phone_list'].forEach(key => {\n        pic_info[key] = getAtLeastOneList(pic_info[key]);\n      });\n\n      this.pic_info = {...pic_info};\n      // this.pic_info.email_list = this.pic_info.email_list.filter(item => item);\n      // this.pic_info.phone_list = this.pic_info.phone_list.filter(item => item);\n      // this.pic_info.shopee_sourcer_phone_list = this.pic_info.shopee_sourcer_phone_list.filter(item => item);\n      // this.pic_info.shopee_sourcer_list = this.pic_info.shopee_sourcer_list.filter(item => item);\n      // // 假如后台返回时空数组，需要往里面添加一项\n      // if (!this.pic_info.email_list.length) {\n      //   this.pic_info.email_list.push('');\n      // }\n      // if (!this.pic_info.phone_list.length) {\n      //   this.pic_info.phone_list.push('');\n      // }\n      // if (!this.pic_info.shopee_sourcer_phone_list.length) {\n      //   this.pic_info.shopee_sourcer_phone_list.push('');\n      // }\n      // if (!this.pic_info.shopee_sourcer_list.length) {\n      //   this.pic_info.shopee_sourcer_list.push('');\n      // }\n\n      // bank info\n      this.bank_info_list = (details.bank_info_list || []).filter(item => {\n        // 如果是空的bank则不展示\n        return Object.keys(item).some(key => {\n          if (['account_assignment_id', 'is_change'].includes(key)) return false;\n          return item[key];\n        });\n      });\n      this.bank_info_list.forEach(bank => {\n        bank.bank_start_date = this.formatDate(bank.bank_start_date);\n        bank.bank_inactive_date = this.formatDate(bank.bank_inactive_date);\n      });\n\n      // contract_info\n      this.contract_info = details.contract_info;\n      this.contract_info = Object.assign(this.contract_info, this.contract_info.file_type);\n      const configurable_files = this.formConfig.contract_upload_file.configurable_files;\n      if (this.contract_info.configurable_files) {\n        configurable_files.forEach((item, index) => {\n          // 后台返回的接口中有这个值\n          if (this.contract_info.configurable_files[item.name]) {\n            this.contract_info[`other_file_${index}`] = this.contract_info.configurable_files[item.name];\n          }\n        });\n        this.contract_info.configurable_files = Object.values(this.contract_info.configurable_files);\n      }\n      if (this.contract_info && this.contract_info.payment_type === 0) {\n        this.contract_info.payment_type = '';\n      }\n      this.contract_info.trading_term_end_date = this.formatDate(this.contract_info.trading_term_end_date);\n      this.contract_info.trading_term_start_date = this.formatDate(this.contract_info.trading_term_start_date);\n\n      // shopinfo\n      this.shop_info = details.shop_info;\n      const shopList = this.shop_info.shop_list;\n      // 不管返回的是4还是0，都统一处理成空字符展示\n      if (this.shop_info.bind_type === 4 || this.shop_info.bind_type === 0) {\n        this.shop_info.bind_type = '';\n      }\n      if (this.allFormValue.basic_info.region === 'TW') {\n        this.shop_info.shop_id_name = shopList.length > 0 ? `${shopList[0].shop_id}_${shopList[0].shop_name}` : '';\n      } else {\n        this.shop_info.shop_id_name = shopList && shopList.map(item => {\n          return `${item.shop_id}_${item.shop_name}`;\n        });\n      }\n      // remark\n      this.request_remark = details.request_remark;\n    },\n    getSupplierDetail() {\n      if (!this.supplierId) return false;\n      return getSupplierDetail(this.supplierId).then((res) => {\n        if (res.retcode === 0) {\n          // console.log(res);\n          this.allDetails = res.data;\n          this.isFromModify = true;\n          this.canEdit = res.data.editable;\n          this.requestId = res.data.request_id;\n          this.statusCode = res.data.request_status;\n          const details = this.formatToRequestDetail(res.data);\n          this.handleDetail(details);\n        } else {\n          this.$message.error(res.message);\n        }\n      });\n    },\n    getSupplierRequestDetails() {\n      if (!this.requestId) return false;\n      return getSupplierRequestDetail({ request_id: this.requestId }).then((res) => {\n        if (res.retcode === 0) {\n          this.handleDetailsSuccess(res);\n        } else {\n          this.$message.error(res.message);\n        }\n      });\n    },\n    handleDetailsSuccess(res) {\n      this.allDetails = res.data;\n      this.isEdit = false;\n      this.canEdit = res.data.editable;\n      this.statusCode = res.data.request_status;\n      this.canApprove = res.data.permit_approve;\n      this.isFromModify = res.data.request_type === 2;\n\n      const details = res.data.detail;\n      this.handleDetail(details);\n    },\n    onReject() {\n      this.dialogVisible = true;\n    },\n    onEdit() {\n      this.isEdit = true;\n    },\n    onCancel() {\n      this.init();\n      this.isEdit = false;\n    },\n    onAction() {\n      this.actionLogVisible = true;\n    },\n    onCancelRequest() {\n      cancelApproveSupplierRequest({\n        supplier_request_id: this.requestId\n      }).then((res) => {\n        if (res.retcode === 0) {\n          this.$message.success(res.message);\n          this.$router.go(0);\n        } else {\n          this.$message.error(res.message);\n        }\n      }).catch(err => {\n        this.$message.error(err.message);\n      });\n    },\n    closeActionLog() {\n      this.actionLogVisible = false;\n    },\n    rejectRequest() {\n      this.$refs['rejectForm'].validate(isValid => {\n        if (isValid) {\n          rejectApproveSupplierRequest({\n            supplier_request_id: this.requestId,\n            remark: this.rejectForm.reason,\n            next_request: true\n          }).then((res) => {\n            if (res.retcode === 0) {\n              if (res.data.request_id) {\n                // 还有下一个则直接跳转\n                this.$router.replace(`/admin/supplier/request/detail/${res.data.request_id}`);\n                // this.$router.go(0);\n              } else {\n                this.$message.success(res.message);\n              }\n              this.onCancel();\n              this.dialogVisible = false;\n            } else {\n              this.$message.error(res.message);\n            }\n          }).catch(err => {\n            this.$message.error(err.message);\n          });\n        }\n      });\n    },\n    approveRequest() {\n      approveSupplierRequest({\n        supplier_request_id: this.requestId,\n        next_request: true\n      }).then((res) => {\n        if (res.retcode === 0) {\n          if (res.data.request_id) {\n            // 还有下一个则直接跳转\n            this.$router.replace(`/admin/supplier/request/detail/${res.data.request_id}`);\n          } else {\n            this.$message.success(res.message);\n          }\n          this.onCancel();\n        } else {\n          this.$message.error(res.message);\n        }\n      }).catch(err => {\n        this.$message.error(err.message);\n      });\n    },\n    getConfigType(supplier_type, purchase_type) {\n      if (purchase_type === 'Consignment' && supplier_type === 'CB') {\n        return 3; // CB-Consignment\n      } else if (purchase_type === 'Consignment' && supplier_type !== 'CB') {\n        return 2; // local-Consignment\n      } else if (purchase_type === 'Outright' && supplier_type !== 'CB') {\n        return 1; // local-Consignment\n      } else {\n        return '';\n      }\n    },\n    setForm(name, formValue) {\n      this.allFormValue[name] = formValue;\n    },\n    async getFormConfig(region, config_type) {\n      const params = {\n        region: region,\n        config_type: config_type\n      };\n      const res = await getSupplierConfig(params);\n      if (res && res.retcode === 0) {\n        this.formConfig = res.data;\n      } else {\n        this.$message({ type: 'error', message: res.info });\n      }\n    },\n    goBack() {\n      this.$router.back();\n    },\n    async getEbsCompanyCode() {\n      const res = await getEbsCompanyCode();\n      this.ebsCompanyCodeList = res.data.list.map(item => {\n        return {\n          label: item.company_code,\n          value: item.company_code,\n          country: item.country\n        };\n      });\n    },\n    async getSupplierAddressCountry() {\n      const res = await getSupplierAddressCountry();\n      this.addressCountryList = res.data.country_list.map(item => {\n        return {\n          label: item.country,\n          value: item.abbreviation\n        };\n      });\n    },\n    async getBankAccountCurrency() {\n      const res = await getBankAccountCurrency();\n      this.currencyList = res.data.currency_list.map(item => {\n        return {\n          label: item.name,\n          value: item.symbol\n        };\n      });\n    },\n    async submitForm(type) {\n      try {\n        // 只有在 submit 的时候进行表单验证\n        if (type === 'submit') {\n          await this.validateAllForm();\n          await this.$confirm(\n            this.$t('supplierRequestSubmitConfirm'),\n            this.$t('commonTips'),\n            {\n              customClass: 'pms-ele-ui',\n              confirmButtonText: this.$t('commonConfirm'),\n              cancelButtonText: this.$t('commonCancel'),\n              confirmButtonClass: 'list-btn',\n              cancelButtonClass: 'list-btn white'\n            }\n          );\n        }\n\n        // 提交信息\n        const params = this.getSubmitParams();\n\n        let res = {};\n        if (type === 'submit') {\n          res = await submitSupplierRequest(params, this.pageModel === 'createRequest');\n        } else if (type === 'save') {\n          res = await saveDraftSupplierRequest(params, this.pageModel === 'createRequest');\n        }\n        if (res.retcode === 0) {\n          if (res.data.ebs_request_id && res.data.pms_request_id) {\n            this.$message.success(`Submit successfully! Request ID :${res.data.ebs_request_id}、${res.data.pms_request_id}`);\n          } else if (type === 'submit') {\n            this.$message.success(this.$t('submitSuccessfully'));\n          } else if (type === 'save') {\n            this.$message.success(this.$t('saveSuccessfully'));\n          }\n          if (this.pageModel === 'createRequest') {\n            this.$router.push({\n              path: `/admin/supplier/request/detail/${res.data.request_id}`,\n              replace: true\n            });\n            this.onCancel();\n          } else {\n            this.onCancel();\n          }\n        } else {\n          this.$message.error(res.message);\n        }\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(e);\n      }\n    },\n    validateAllForm() {\n      return new Promise((resolve, reject) => {\n        // 对 Bank Info 进行业务校验\n        const check = this.$refs['bankInfo'].combineValidate();\n        if (!check) {\n          reject();\n          return;\n        }\n\n        // 对Email进行校验\n        const picInfoForm = JSON.parse(JSON.stringify(this.pic_info));\n        if (!this.checkData(picInfoForm)) {\n          reject();\n          return;\n        }\n\n        // 触发表单校验\n        const p1 = this.$refs['basicInfo'].validateForm();\n        const p2 = this.$refs['picContactInfo'].validateForm();\n        const p3 = this.$refs['bankInfo'].validateForm();\n        const p4 = this.$refs['contractInfo'].validateForm();\n        const p5 = this.$refs['shopInfo'].validateForm();\n        const resultValidateArr = [p1, p2, p3, p4, p5];\n        Promise.all(resultValidateArr).then(() => {\n          resolve();\n        }).catch(() => {\n          reject();\n          this.$message.error('Uncompleted input');\n        });\n      });\n    },\n    /**\n     * shopee_merchandiser，Shopee Sourcer 的Email 和 Phone 必须成对出现\n     * 所有 Email 的格式要检验\n     */\n    checkData(form) {\n      // TODO: 这里校验逻辑可以优化\n      if (form.shopee_merchandiser && !form.shopee_merchandiser_phone) {\n        this.$message.error(this.$t('commonIsRequired', { target: this.$t('supplier.shopeeMerchandiserPhone') }));\n        return false;\n      }\n      let isPass = true;\n\n      form.email_list.some((item, index) => {\n        if (item && !isValidEmail(item)) {\n          this.$message({ type: 'error', message: this.$t(`supplier.supplierBDEmail`) + ' ' + this.$t('supplier.isInvalid') });\n          isPass = false;\n          return true;\n        }\n      });\n\n      form.supplier_finance_email_list.some((item, index) => {\n        if (item && !isValidEmail(item)) {\n          this.$message({ type: 'error', message: this.$t(`supplierFinanceEmail`) + ' ' + this.$t('supplier.isInvalid') });\n          isPass = false;\n          return true;\n        }\n      });\n\n      if (isPass) {\n        form.shopee_sourcer_list.some((item, index) => {\n          if (item && !form.shopee_sourcer_phone_list[index]) {\n            this.$message({ type: 'error', message: this.$t('commonIsRequired', { target: this.$t('supplier.shopeeSourcePhone') }) });\n            isPass = false;\n            return true;\n          }\n          if (item && !isValidEmail((item))) {\n            this.$message({ type: 'error', message: this.$t(`supplier.shopeeSourceEmail`) + ' ' + this.$t('supplier.isInvalid') });\n            isPass = false;\n            return true;\n          }\n        });\n      }\n      if (isPass) {\n        const emailData = ['legal_email', 'warehouse_email', 'shopee_merchandiser'];\n        emailData.some(key => {\n          if (form[key] && !isValidEmail(form[key])) {\n            this.$message({ type: 'error', message: this.$t(`supplier.${SupplierDetailKeyToName[key]}`) + ' ' + this.$t('supplier.isInvalid') });\n            isPass = false;\n            return true;\n          }\n        });\n      }\n      return isPass;\n    },\n    getSubmitParams() {\n      // basic info\n\n      const basic_info = JSON.parse(JSON.stringify(this.$refs['basicInfo'].basicInfoForm));\n      if (basic_info.payment_method === 'CBD') {\n        basic_info.payment_method = 'Immediately';\n      }\n      if (basic_info.delivery_lead_time) {\n        basic_info.delivery_lead_time += ''; // 后台为字符串\n      } else {\n        basic_info.delivery_lead_time = ''; // 后台为字符串\n      }\n      if (basic_info.minimum_order_quantity) {\n        basic_info.minimum_order_quantity += ''; // 后台为字符串\n      } else {\n        basic_info.minimum_order_quantity = ''; // 后台为字符串\n      }\n      basic_info.site_end_date = this.formatSubmitDate(basic_info.site_end_date);\n      basic_info.site_start_date = this.formatSubmitDate(basic_info.site_start_date);\n\n      basic_info.is_serialised = basic_info.is_serialised || 0; // ''转换为0\n\n      // 对 PIC Contact Info\n      const picInfoForm = JSON.parse(JSON.stringify(this.pic_info));\n\n      if (picInfoForm.address_list) {\n        ['address', 'address2', 'address3', 'address4'].forEach((key, index) => (picInfoForm[key] = picInfoForm.address_list[index] || ''));\n        delete picInfoForm.address_list;\n      }\n      if (picInfoForm.pic_contact_info) { // pic_contact_info 只是email的前缀，emailAppend是email的后缀\n        picInfoForm.pic_contact_info = `${picInfoForm.pic_contact_info}${picInfoForm.emailAppend}`;\n      }\n\n      ['email_list', 'phone_list', 'shopee_sourcer_phone_list', 'shopee_sourcer_list', 'supplier_finance_email_list', 'supplier_finance_phone_list'].forEach(key => {\n        const conunt = picSchema[key] && picSchema[key].props && picSchema[key].props.count;\n        picInfoForm[key] = fillArray(picInfoForm[key], conunt);\n      });\n\n      // while (picInfoForm.email_list && picInfoForm.email_list.length < MaxEmailLength) {\n      //   picInfoForm.email_list.push('');\n      // }\n      // while (picInfoForm.phone_list && picInfoForm.phone_list.length < MaxPhoneLength) {\n      //   picInfoForm.phone_list.push('');\n      // }\n      // while (picInfoForm.shopee_sourcer_phone_list && picInfoForm.shopee_sourcer_phone_list.length < ShopeeSourcerPhoneListLength) {\n      //   picInfoForm.shopee_sourcer_phone_list.push('');\n      // }\n      // while (picInfoForm.shopee_sourcer_list && picInfoForm.shopee_sourcer_list.length < ShopeeSourcerEmailListLength) {\n      //   picInfoForm.shopee_sourcer_list.push('');\n      // }\n\n      // 对Bank info 进行处理\n      const bankInfoList = JSON.parse(JSON.stringify(this.$refs['bankInfo'].bank_info_list));\n      bankInfoList.forEach(bank => {\n        bank.bank_start_date = this.formatSubmitDate(bank.bank_start_date);\n        bank.bank_inactive_date = this.formatSubmitDate(bank.bank_inactive_date);\n      });\n\n      // 对 contractInfo 表单进行处理\n      const contractInfoForm = JSON.parse(JSON.stringify(this.$refs['contractInfo'].formData));\n      const configurable_files = this.$refs['contractInfo'].configurable_files;\n      const contractInfoResult = {\n        payment_type: contractInfoForm.payment_type || 0, // 如果没有值的话，传 0\n        trading_term_start_date: this.formatSubmitDate(contractInfoForm.trading_term_start_date),\n        trading_term_end_date: this.formatSubmitDate(contractInfoForm.trading_term_end_date),\n        with_holding_tax: contractInfoForm.with_holding_tax || 2,\n        file_type: {\n          supplier_registration_form: contractInfoForm.supplier_registration_form,\n          trading_certificate: contractInfoForm.trading_certificate,\n          contract: contractInfoForm.contract,\n          bank_info: contractInfoForm.bank_info,\n          legal_document: contractInfoForm.legal_document,\n          other: contractInfoForm.other,\n          configurable_files: {}\n        }\n      };\n\n      configurable_files && configurable_files.forEach((configFile, index) => {\n        contractInfoResult.file_type.configurable_files[configFile.name] = contractInfoForm[`other_file_${index}`];\n      });\n\n      // 对 Shop Info 表单数据进行处理\n      const shopInfoForm = JSON.parse(JSON.stringify(this.$refs['shopInfo'].shopInfoForm));\n      // 如果为空，而且是台湾，则处理成 0 传值\n      if (shopInfoForm.bind_type === '' && this.getBasicRegion === 'TW') {\n        shopInfoForm.bind_type = 0;\n      }\n      // 如果是 TW，则传值为4\n      if (this.getBasicRegion !== 'TW') {\n        shopInfoForm.bind_type = 4;\n      }\n      shopInfoForm.shop_list = [];\n      if (Array.isArray(shopInfoForm.shop_id_name)) {\n        shopInfoForm.shop_id_name.map(item => {\n          const result = item.split('_');\n          shopInfoForm.shop_list.push({\n            shop_id: Number(result[0]),\n            shop_name: result[1]\n          });\n        });\n      } else if (typeof shopInfoForm.shop_id_name === 'string' && shopInfoForm.shop_id_name.length) {\n        shopInfoForm.shop_list.push({\n          shop_id: Number(shopInfoForm.shop_id_name.split('_')[0]),\n          shop_name: shopInfoForm.shop_id_name.split('_')[1]\n        });\n      }\n\n      const params = {\n        request_id: this.isSupplierDetail ? '' : this.requestId, // 如果是在Supplier List 中，都是新创建一个 Request，所有不会有request id\n        basic_info,\n        pic_info: picInfoForm,\n        bank_info_list: bankInfoList,\n        contract_info: contractInfoResult,\n        shop_info: shopInfoForm,\n        request_remark: this.$refs['remarkInfo'].requestRemarkForm\n      };\n      return params;\n    }\n  }\n};\n</script>\n<style lang=\"scss\">\n@import \"~@/styles/common.scss\";\n@import \"./suppierCommon.scss\";\n.supplier-request-detail {\n  .el-tabs__nav .is-active {\n    font-family: Helvetica-Bold;\n    font-size: 14px;\n    color: #3D6ED1;\n  }\n}\n</style>\n<style lang=\"scss\" scoped>\n@import \"~@/styles/variables.scss\";\n.supplier-request-detail {\n  .no-permission {\n    text-align: center;\n    padding-top: 80px;\n    .no-permission-msg {\n      color: #333;\n    }\n  }\n\n  .edit-pan {\n    margin-right: 5px;\n  }\n  .white-grey {\n    border-color: #D9D9D9;\n    background-color: #fff;\n    color: #333;\n  }\n  .reject-text {\n    display: flex;\n    align-items: center;\n    width: 100%;\n    height: auto;\n    padding: 20px;\n    background: #FFF1F0;\n    border-radius: 4px;\n    font-family: Helvetica;\n    font-size: 14px;\n    color: #555555;\n    .icon {\n      padding-right: 10px;\n      font-size: 23px;\n      color: red;\n    }\n  }\n  .font-num-count {\n    float: right;\n    font-family: Helvetica;\n    font-size: 12px;\n    color: rgba(51,51,51,0.45);\n  }\n  .common-status {\n    font-family: Helvetica-Bold;\n    font-size: 12px;\n    text-align: center;\n    border-radius: 2px;\n    vertical-align: middle;\n  }\n  .status-draft, .status-cancel {\n    background: rgba(153,153,153,0.10);\n    color: #999999;\n  }\n  .status-pending {\n    background: #FFF7E0;\n    color: #EDA500;\n  }\n  .status-completed {\n    background: rgba(61,110,209,0.10);\n    color: #3D6ED1;\n  }\n  .status-rejected {\n    background: rgba(222,58,58,0.10);\n    color: #DE3A3A;\n  }\n  &.layout-padding {\n    padding: 24px 32px;\n  }\n  .detail-header-wrapper {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border-bottom: 1px solid $border-color;\n    padding-bottom: 8px;\n    .left-info {\n      flex: 1;\n      font-size: 24px;\n      color: $black;\n      vertical-align: middle;\n      .go-back-icon {\n        color: #666666;\n        cursor: pointer;\n      }\n      .header-text {\n        margin-right: 8px;\n      }\n      .link {\n        cursor: pointer;\n        color: $blue;\n      }\n      .header-status {\n        white-space: nowrap;\n        font-size: 12px;\n        display: block;\n        padding: 2px;\n        border-radius: 2px;\n        // vertical-align: middle;\n         &.green {\n          color: $green;\n          background-color: $green-bg;\n        }\n        &.orange {\n          color: $orange;\n          background-color: $orange-bg;\n        }\n        &.red {\n          color: $red;\n          background-color: $red-bg;\n        }\n      }\n    }\n    .right-top {\n      text-align: right;\n      flex: auto;\n      .reject-btn, .approve-btn {\n        border: 1px solid #E02020;\n        border-radius: 2px;\n        font-family: Helvetica;\n        font-size: 14px;\n        color: #E02020;\n        text-align: center;\n        background: #fff;\n      }\n      .approve-btn {\n        border: 1px solid #55CC77;\n        color: #55CC77;\n      }\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplier/supplierRequest/list.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplier/supplierRequest/newPicInfo.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplier/supplierRequest/remarkForm.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplier/supplierRequest/shopInfoForm.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplier/supplierRequest/supplierRequestList.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":7,"column":42,"nodeType":"VIdentifier","messageId":"deprecated","endLine":7,"endColumn":48},{"ruleId":"vue/no-template-shadow","severity":2,"message":"Variable 'item' is already declared in the upper scope.","line":28,"column":24,"nodeType":"Identifier","endLine":28,"endColumn":28}],"errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"pms-ui supplier-request-list-layout\">\n    <div class=\"create-btn\" @click=\"onCreatePage\" v-if=\"canOperate\">\n      <span class=\"el-icon-plus add-btn\"></span>\n      {{ $t('createBtnText') }}\n    </div>\n    <el-form :model=\"searchForm\" @submit.native.prevent=\"onSearch\">\n      <el-button v-show=\"false\" native-type=\"submit\"></el-button>\n      <el-row>\n        <el-col v-for=\"item in searchSchema\" :key=\"item.field\" :span=\"item.width || 6\" :offset=\"item.offset\">\n          <el-form-item\n            v-if=\"item.type === 'select'\"\n            :label=\"item.label\"\n            :label-width=\"item.labelWidth || '160px'\"\n            :class=\"item.class || ''\"\n          >\n            <el-select\n              v-model=\"searchForm[item.field]\"\n              @change=\"\n                (...argus) => {\n                  onClickSearch();\n                }\n              \"\n              :placeholder=\"$t(item.placeholder)\"\n              :disabled=\"item.disabled\"\n            >\n              <el-option\n                v-for=\"item in item.options || []\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.value\"\n              ></el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item\n            v-else-if=\"item.type === 'input'\"\n            :label=\"item.label\"\n            :label-width=\"item.labelWidth || '160px'\"\n            :class=\"item.class || ''\"\n          >\n            <el-input v-model=\"searchForm[item.field]\" clearable></el-input>\n          </el-form-item>\n          <el-form-item\n            v-else-if=\"item.type === 'sbsVendorId'\"\n            :label=\"item.label\"\n            :label-width=\"item.labelWidth || '160px'\"\n            :class=\"item.class || ''\"\n          >\n            <el-autocomplete\n              class=\"el-autocomplete_width\"\n              v-model=\"searchForm[item.field]\"\n              :fetch-suggestions=\"getSbsVendorID\"\n              clearable\n              placeholder=\"Please input SBS Vendor ID\"\n              @select=\"handleSBSVendorIDSelect\"\n            ></el-autocomplete>\n          </el-form-item>\n          <el-form-item\n            v-else-if=\"item.type === 'requester'\"\n            :label=\"item.label\"\n            :label-width=\"item.labelWidth || '160px'\"\n            :class=\"item.class || ''\"\n          >\n            <el-autocomplete\n              class=\"el-autocomplete_width\"\n              v-model=\"searchForm[item.field]\"\n              :fetch-suggestions=\"getRequester\"\n              clearable\n              @select=\"handleRequesterSelect\"\n            ></el-autocomplete>\n          </el-form-item>\n        </el-col>\n      </el-row>\n      <el-row>\n        <el-form-item class=\"left-action-btn\" v-show=\"activeTab === 'myRequests'\">\n          <uploadBtnGroup\n            actionUrl=\"/api/supplier/request/mass_upload\"\n            :showHistory=\"true\"\n            :historyVersion=\"2\"\n            :historyProps=\"{\n              taskType: 111\n            }\"\n            :needDefaultSuccessTips=\"true\"\n            @onBtnClick=\"onDownloadTemplate\"\n          >\n          </uploadBtnGroup>\n        </el-form-item>\n        <el-form-item class=\"left-action-btn\" v-show=\"activeTab === 'myPendingApprovals'\">\n          <div class=\"mass-btn\" @click=\"massApprove\">{{ $t('commonMassApprove') }}</div>\n          <div class=\"mass-btn reject-btn\" @click=\"massReject\">{{ $t('commonMassReject') }}</div>\n        </el-form-item>\n        <el-form-item class=\"right-action-btn\">\n          <div class=\"list-btn\" @click=\"onClickSearch\">{{ $t('purchaseRequest.search') }}</div>\n          <div class=\"list-btn clear-btn\" @click=\"onReset\">{{ $t('purchaseRequest.clear') }}</div>\n        </el-form-item>\n      </el-row>\n    </el-form>\n    <commonTable\n      :dataList=\"tableData\"\n      v-loading=\"loading\"\n      @selectionChange=\"selectionChange\"\n      :config=\"{ showCheckBox: activeTab === 'myPendingApprovals', align: 'center' }\"\n      :tableSchema=\"tableSchema\"\n    >\n    </commonTable>\n    <section class=\"content-center\">\n      <el-pagination\n        background\n        layout=\"sizes, prev, pager, next \"\n        :current-page=\"pager.page_no\"\n        :total=\"total\"\n        :page-sizes=\"[10, 20, 50, 100]\"\n        :page-size=\"pager.count\"\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n      ></el-pagination>\n    </section>\n    <!-- 批量 Approve 弹窗 -->\n    <el-dialog title=\"Mass Approve\" :visible.sync=\"dialogApproveVisible\" width=\"30%\">\n      <div class=\"reason-tips\">\n        <span>You have selected </span>\n        <el-popover placement=\"top\" width=\"175\" trigger=\"hover\">\n          <h3 class=\"request-idlist-title\">Request ID({{ checkedRows.length }}) :</h3>\n          <div v-for=\"(item, index) in checkedRows\" :key=\"index\">\n            {{ item.request_id }}\n          </div>\n          <span class=\"num-check\" slot=\"reference\">{{ checkedRows.length }} requests</span>\n        </el-popover>\n        <span>,which will be mass approved.</span>\n      </div>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogApproveVisible = false\">{{ $t('commonCancel') }}</el-button>\n        <el-button type=\"primary\" @click=\"submitApprove\">{{ $t('commonConfirm') }}</el-button>\n      </span>\n    </el-dialog>\n    <!-- 批量 reject 弹窗 -->\n    <el-dialog title=\"Mass Reject\" :visible.sync=\"dialogVisible\" width=\"30%\">\n      <div class=\"reason-tips\">\n        <span>You have selected </span>\n        <el-popover placement=\"top\" width=\"175\" trigger=\"hover\">\n          <h3 class=\"request-idlist-title\">Request ID({{ checkedRows.length }}) :</h3>\n          <div v-for=\"(item, index) in checkedRows\" :key=\"index\">\n            {{ item.request_id }}\n          </div>\n          <span class=\"num-check\" slot=\"reference\">{{ checkedRows.length }} requests</span>\n        </el-popover>\n        <span>,which will be mass reject.Please input the reject reason.</span>\n      </div>\n      <el-form ref=\"rejectForm\" :rules=\"rejectFormRules\" :model=\"rejectForm\" class=\"reason-textarea\">\n        <el-form-item prop=\"reason\" :label=\"`${$t('massRejectReason')}:`\" label-width=\"130px\">\n          <el-input :rows=\"4\" type=\"textarea\" v-model=\"rejectForm.reason\"> </el-input>\n          <span class=\"font-num-count\">{{ rejectForm.reason.length }}/1000</span>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\">{{ $t('commonCancel') }}</el-button>\n        <el-button type=\"primary\" @click=\"submitReject\">{{ $t('commonConfirm') }}</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport {\n  getSupplierRequestList,\n  getPendingApprovalList,\n  getSuppliervagueQuery,\n  batchApproveSupplierRequest,\n  batchRejectApproveSupplierRequest\n} from '@/api/supplierRequest';\nimport commonTable from '@/components/ApproveList/list';\nimport moment from 'moment';\nimport { formatParams } from '@/utils/formatParams';\nimport { hasPermission } from '@/utils/permission';\nimport {\n  Permission,\n  SupplierTypeList,\n  PurchaseTypeList,\n  SupplierRequestType,\n  SupplierRequestStatus\n} from '@/utils/constant';\nimport uploadBtnGroup from '@/components/upload/uploadBtnGroup';\nimport { supplierRequestSide } from './constant';\n\nconst moduleName = 'SupplierRequestList';\n\n// const myPeddingApprovalStatusCodes = 1;\n\nexport default {\n  components: { commonTable, uploadBtnGroup },\n  props: {\n    activeTab: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      tableData: [],\n      loading: false,\n      canOperate: false,\n      checkedType: '',\n      checkedRows: [],\n      searchForm: {\n        request_id: '',\n        region:\n          this.$store.getters.countrySelectList.length > 1\n            ? ''\n            : this.$store.getters.countrySelectList.length > 0\n            ? this.$store.getters.countrySelectList[0].value\n            : '',\n        vendor_site_id: '',\n        sbs_vendor_id: '',\n        supplier_type: '',\n        purchase_type: '',\n        request_status: '',\n        request_type: '',\n        requester: ''\n      },\n      lastSearchForm: {},\n      cancelLoading: false,\n      closeLoading: false,\n      deleteLoading: false,\n      pager: {\n        count: 10,\n        page_no: 1\n      },\n      total: 0,\n      dialogVisible: false,\n      dialogApproveVisible: false,\n      rejectForm: {\n        reason: ''\n      },\n      rejectFormRules: {\n        reason: [\n          { required: true, message: 'Reject Reason is required.', trigger: 'blur' },\n          { max: 1000, message: 'Reject Reason cannot be longer than 80 characters', trigger: 'change' }\n        ]\n      }\n    };\n  },\n  watch: {\n    activeTab() {\n      this.initSearchData();\n      this.onSearch();\n    }\n  },\n  created() {\n    this.canOperate = hasPermission(Permission.supplierRequestProcess);\n    const cacheConditionObj = this.$store.getters.searchForm[moduleName];\n    this.initSearchData();\n    if (cacheConditionObj && cacheConditionObj.activeTab) {\n      const cacheCondition = cacheConditionObj[cacheConditionObj.activeTab];\n      this.pager.count = cacheCondition.count;\n      this.pager.page_no = cacheCondition.page_no;\n      this.activeTab = cacheConditionObj.activeTab;\n      [\n        'region',\n        'request_id',\n        'vendor_site_id',\n        'sbs_vendor_id',\n        'supplier_type',\n        'purchase_type',\n        'request_type',\n        'request_status',\n        'requester'\n      ].forEach(key => {\n        if (cacheCondition[key]) {\n          this.searchForm[key] = cacheCondition[key];\n        }\n      });\n    }\n    this.onSearch();\n  },\n  computed: {\n    defaultCountry() {\n      return this.$store.getters.countrySelectList.length > 1\n        ? ''\n        : this.$store.getters.countrySelectList.length > 0\n        ? this.$store.getters.countrySelectList[0].value\n        : '';\n    },\n    countryList() {\n      return [...new Set(this.$store.getters.countryList.map(item => item.country))];\n    },\n    searchSchema() {\n      const defaultSchema = [\n        {\n          type: 'select',\n          width: 5,\n          field: 'region',\n          label: this.$t('commonRegion'),\n          options: [{ label: 'All', value: '' }].concat(this.countryList.map(item => ({ label: item, value: item })))\n        },\n        {\n          type: 'input',\n          width: 5,\n          field: 'request_id',\n          label: this.$t('requstId')\n        },\n        {\n          type: 'input',\n          width: 5,\n          field: 'vendor_site_id',\n          labelWidth: '160px',\n          label: this.$t('paymentRequest.vendorSiteIDOrName')\n        },\n        {\n          type: 'sbsVendorId',\n          width: 5,\n          field: 'sbs_vendor_id',\n          labelWidth: '160px',\n          label: this.$t('supplierSBSVendorID')\n        },\n        {\n          type: 'select',\n          width: 5,\n          field: 'supplier_type',\n          label: this.$t('commonSupplierType'),\n          options: SupplierTypeList\n        },\n        {\n          type: 'select',\n          width: 5,\n          field: 'purchase_type',\n          label: this.$t('commonPurchaseType'),\n          options: PurchaseTypeList\n        },\n        {\n          type: 'select',\n          width: 5,\n          field: 'request_type',\n          label: this.$t('requestType'),\n          options: [\n            { label: 'All', value: '' },\n            { label: 'Modification', value: 2 },\n            { label: 'Creation', value: 1 }\n          ]\n        },\n        {\n          type: 'select',\n          width: 5,\n          field: 'request_status',\n          label: this.$t('requestStatus'),\n          options: [\n            { label: 'All', value: '' },\n            { label: 'Pending Approval', value: 1 },\n            { label: 'Rejected', value: 2 },\n            { label: 'Completed', value: 3 },\n            { label: 'Cancelled', value: 4 },\n            { label: 'Draft\t', value: 5 }\n          ]\n        },\n        {\n          type: 'requester',\n          width: 5,\n          field: 'requester',\n          label: this.$t('commonRequester')\n        }\n      ];\n\n      let result = [];\n      if (this.activeTab === 'myPendingApprovals') {\n        result = defaultSchema.filter(item => item.field !== 'request_status');\n      } else if (this.activeTab === 'myRequests') {\n        result = defaultSchema.filter(item => item.field !== 'requester');\n      } else {\n        result = defaultSchema;\n      }\n      return result;\n    },\n    tableSchema() {\n      const defaultSchema = [\n        {\n          label: this.$t('commonRequestID'),\n          field: 'request_id',\n          width: '220px',\n          render(schema, row, index, h) {\n            const tag = supplierRequestSide[row.request_side];\n            if (tag) {\n              return [\n                'span',\n                null,\n                [row[schema.field], h('span', { style: { marginLeft: '5px' }, class: 'pms-tag-label' }, tag)]\n              ];\n            }\n            return row[schema.field];\n          }\n        },\n        {\n          label: this.$t('commonRegion'),\n          field: 'region'\n        },\n        {\n          label: this.$t('commonVendorSiteID'),\n          field: 'vendor_site_id',\n          render: (schema, row) => {\n            if (!row[schema.field]) {\n              return '/';\n            } else {\n              return row[schema.field];\n            }\n          }\n        },\n        {\n          label: this.$t('supplierSBSVendorID'),\n          field: 'sbs_vendor_id',\n          render: (schema, row) => {\n            if (!row[schema.field]) {\n              return '/';\n            } else {\n              return row[schema.field];\n            }\n          }\n        },\n        {\n          label: this.$t('commonSupplierName'),\n          field: 'supplier_name'\n        },\n        {\n          label: this.$t('commonSupplierType'),\n          field: 'supplier_type'\n        },\n        {\n          label: this.$t('commonPurchaseType'),\n          field: 'purchase_type'\n        },\n        {\n          field: 'requester',\n          label: this.$t('commonRequester')\n        },\n        {\n          label: this.$t('commonCtime'),\n          field: 'ctime',\n          width: '100px',\n          render: (schema, row) => `${this.moment(row[schema.field] * 1000).format('YYYY-MM-DD HH:mm')}`\n        },\n        {\n          field: 'request_type',\n          label: this.$t('requestType'),\n          render: (schema, row) => {\n            return SupplierRequestType[row[schema.field]];\n          }\n        },\n        {\n          field: 'request_status',\n          label: this.$t('requestStatus'),\n          render: (schema, row, index, h) => {\n            const value = row[schema.field];\n            let className = '';\n            if (value === 7) {\n              className = 'common-status status-draft';\n            } else if (value === 1 || value === 2) {\n              className = 'common-status status-pending';\n            } else if (value === 3 || value === 4) {\n              className = 'common-status status-reject';\n            } else if (value === 5) {\n              className = 'common-status status-complete';\n            } else if (value === 6) {\n              className = 'common-status status-cancel';\n            }\n            let statusResult = '';\n            if (value === 1 && row.next_role_name) {\n              statusResult = `${this.$t(SupplierRequestStatus[value].text)}: ${row.next_role_name}`;\n            } else {\n              statusResult = `${this.$t(SupplierRequestStatus[value].text)}`;\n            }\n\n            return [\n              'div',\n              {},\n              [\n                {\n                  render: [\n                    'div',\n                    {\n                      class: className\n                    },\n                    statusResult\n                  ]\n                }\n              ].map(item => h(...item.render))\n            ];\n          }\n        },\n        {\n          columnKey: 'action',\n          label: this.$t('purchaseRequest.action'),\n          width: '100px',\n          render: (schema, row, index, h) => {\n            return [\n              'div',\n              { class: 'user-category' },\n              [\n                {\n                  render: [\n                    'el-button',\n                    {\n                      class: 'detail-btn',\n                      on: { click: () => this.routerToDetail(row) }\n                    },\n                    this.$t('opHistory.detail')\n                  ]\n                }\n              ].map(item => h(...item.render))\n            ];\n          }\n        }\n      ];\n      let result = defaultSchema;\n      if (this.activeTab === 'myPendingApprovals') {\n        result = defaultSchema.filter(item => item.field !== 'request_status');\n      }\n      return result;\n    }\n  },\n  methods: {\n    onDownloadTemplate() {\n      window.open('/admin/static/create_supplier_template.xlsx');\n    },\n    moment,\n    cacheSearchCondition(form) {\n      this.$store.commit('setActiveTab', { module: moduleName, tab: this.activeTab });\n      this.$store.commit('setSearchForm', {\n        module: moduleName,\n        form: form || null,\n        field: this.activeTab\n      });\n    },\n    massApprove() {\n      if (this.checkedRows.length === 0) {\n        this.$message.error(`${this.$t('pleaseChooseAtLeastOneRequest')}`);\n        return;\n      }\n      this.dialogApproveVisible = true;\n    },\n    massReject() {\n      if (this.checkedRows.length === 0) {\n        this.$message.error(`${this.$t('pleaseChooseAtLeastOneRequest')}`);\n        return;\n      }\n      this.dialogVisible = true;\n    },\n    submitApprove() {\n      const params = {\n        supplier_request_ids: []\n      };\n      this.checkedRows.forEach(row => {\n        params.supplier_request_ids.push(row.request_id);\n      });\n      batchApproveSupplierRequest(params)\n        .then(res => {\n          if (res.retcode === 0) {\n            this.$message.success(res.message);\n            this.dialogApproveVisible = false;\n            this.onClickSearch();\n          } else {\n            this.$message.error(res.message);\n          }\n        })\n        .catch(err => {\n          this.$message.error(err.message);\n        });\n    },\n    submitReject() {\n      this.$refs['rejectForm'].validate(isValid => {\n        if (isValid) {\n          const params = {\n            supplier_request_ids: [],\n            remark: this.rejectForm.reason\n          };\n          this.checkedRows.forEach(row => {\n            params.supplier_request_ids.push(row.request_id);\n          });\n          // params.supplier_request_ids = params.supplier_request_ids.join(',')\n          batchRejectApproveSupplierRequest(params)\n            .then(res => {\n              if (res.retcode === 0) {\n                this.$message.success(res.message);\n                this.dialogVisible = false;\n                this.onClickSearch();\n              } else {\n                this.$message.error(res.message);\n              }\n            })\n            .catch(err => {\n              this.$message.error(err.message);\n            });\n        }\n      });\n    },\n    initSearchData() {\n      if (this.activeTab === 'myPendingApprovals') {\n        this.searchForm.requester = '';\n        this.searchForm.request_status = '';\n      } else if (this.activeTab === 'myRequests') {\n        this.searchForm.requester = this.$store.getters.email;\n        this.searchForm.request_status = '';\n      } else {\n        this.searchForm.request_status = '';\n        this.searchForm.requester = '';\n      }\n    },\n\n    selectionChange(selection) {\n      this.checkedRows = selection;\n    },\n    resetCheckedType() {\n      this.checkedType = '';\n      this.checkedRows = [];\n    },\n    onReset() {\n      this.resetCheckedType();\n      this.initSearchData();\n      this.searchForm = {\n        request_id: '',\n        region:\n          this.$store.getters.countrySelectList.length > 1\n            ? ''\n            : this.$store.getters.countrySelectList.length > 0\n            ? this.$store.getters.countrySelectList[0].value\n            : '',\n        vendor_site_id: '',\n        sbs_vendor_id: '',\n        supplier_type: '',\n        purchase_type: '',\n        request_type: ''\n      };\n    },\n    async getRequester(value, cb) {\n      try {\n        const params = {\n          field_name: 'requester',\n          value: value\n        };\n        const resp = await getSuppliervagueQuery(params);\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n          cb([]);\n        } else {\n          cb(\n            resp.data.list.map(item => {\n              return {\n                value: `${item['requester']}`,\n                requester: item['requester']\n              };\n            })\n          );\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    async getSbsVendorID(value, cb) {\n      try {\n        const params = {\n          field_name: 'sbs_vendor_id',\n          value: value\n        };\n        const resp = await getSuppliervagueQuery(params);\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n          cb([]);\n        } else {\n          cb(\n            resp.data.list.map(item => {\n              return {\n                value: `${item['sbs_vendor_id']}`,\n                sbs_vendor_id: item['sbs_vendor_id']\n              };\n            })\n          );\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    handleSBSVendorIDSelect(item) {\n      this.searchForm.sbs_vendor_id = item.sbs_vendor_id;\n    },\n    handleRequesterSelect(item) {\n      this.searchForm.requester = item.requester;\n    },\n    onCreatePage() {\n      // window.open('/admin/finance/paymentRequest/create');\n      this.$router.push('/admin/supplier/request/detail');\n    },\n    routerToDetail(row) {\n      this.cacheSearchCondition(this.lastSearchForm);\n      this.$router.push(`/admin/supplier/request/detail/${row.request_id}`);\n    },\n    onClickSearch() {\n      this.resetCheckedType();\n      this.pager.page_no = 1;\n      this.onSearch();\n    },\n    handleSizeChange(count) {\n      this.pager.count = count;\n      this.onSearch();\n    },\n    handleCurrentChange(page_no) {\n      this.pager.page_no = page_no;\n      this.onSearch();\n    },\n    async onSearch() {\n      let func;\n      if (this.activeTab === 'myPendingApprovals') {\n        func = getPendingApprovalList;\n      } else {\n        func = getSupplierRequestList;\n      }\n      const params = formatParams({\n        ...this.pager,\n        ...this.searchForm\n      });\n      try {\n        this.loading = true;\n        const res = await func(params);\n        this.lastSearchForm = { ...params };\n        if (res && res.retcode === 0) {\n          this.tableData = res.data.supplier_request_list;\n          this.total = res.data.total || 0;\n        } else {\n          this.$message({ type: 'error', message: res.message });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.supplier-request-list-layout {\n  padding: 0 20px;\n  .request-idlist-title {\n    margin: 10px 0;\n  }\n  .font-num-count {\n    float: right;\n    opacity: 0.5;\n    font-family: Helvetica;\n    font-size: 12px;\n    color: #333333;\n  }\n  .reason-textarea {\n    padding-top: 30px;\n  }\n  .reason-tips {\n    font-family: Helvetica;\n    font-size: 14px;\n    color: #333333;\n  }\n  .num-check {\n    font-family: Helvetica-Bold;\n    font-size: 14px;\n    color: #3d6ed1;\n  }\n  .create-btn {\n    background: #3d6ed1;\n    border-radius: 2px;\n    height: 32px;\n    line-height: 32px;\n    font-family: Helvetica;\n    font-size: 14px;\n    color: #ffffff;\n  }\n  .add-btn {\n    display: inline-block;\n    margin: 0 5px -10px -20px;\n  }\n  .right-action-btn {\n    float: right;\n  }\n  .left-action-btn {\n    float: left;\n    .mass-btn {\n      cursor: pointer;\n      display: inline-block;\n      width: 112px;\n      font-family: Helvetica;\n      font-size: 14px;\n      color: #55cc77;\n      text-align: center;\n      padding: 0 5px;\n      border: 1px solid #55cc77;\n      border-radius: 2px;\n    }\n    .reject-btn {\n      color: #e02020;\n      border: 1px solid #e02020;\n    }\n  }\n  .mass-upload-wrapper {\n    position: relative;\n    top: -58px;\n    max-width: 400px;\n    margin-left: 20px;\n    margin-bottom: -20px;\n  }\n  .mass-upload {\n    display: inline-block;\n    .el-button--medium {\n      padding: 8px 15px;\n      background-color: #3d6ed1;\n      border-color: #3d6ed1;\n    }\n  }\n  .el-table {\n    margin-bottom: 20px;\n  }\n}\n</style>\n<style lang=\"scss\">\n@import '~@/styles/common.scss';\n\n.supplier-request-list-layout {\n  .exportGroup-btn {\n    margin-right: 8px;\n    vertical-align: middle;\n    .el-button--primary {\n      background-color: #3d6ed1;\n      border-color: #3d6ed1;\n    }\n    .el-button--medium {\n      padding: 8px 12px;\n    }\n    .el-dropdown__caret-button {\n      padding: 8px 6px;\n    }\n  }\n  .el-autocomplete_width {\n    width: 100%;\n  }\n  .el-dialog__wrapper .el-dialog__header {\n    font-family: Helvetica-Bold;\n    font-size: 18px;\n    color: #333333;\n  }\n  .el-dialog__wrapper .el-form-item__error {\n    margin-top: -30px;\n  }\n  .el-table {\n    .cell {\n      word-break: break-word;\n    }\n    .common-status {\n      font-family: Helvetica-Bold;\n      font-size: 12px;\n      text-align: center;\n      border-radius: 2px;\n      line-height: 14px;\n      padding: 3px 0;\n    }\n    .status-draft,\n    .status-cancel {\n      background: rgba(153, 153, 153, 0.1);\n      color: #999999;\n    }\n    .status-pending {\n      background: #fdf6ef;\n      color: #f4ab61;\n    }\n    .status-complete {\n      background: #e8f7f5;\n      color: #1baf9d;\n    }\n    .status-reject {\n      background: rgba(222, 58, 58, 0.1);\n      color: #de3a3a;\n    }\n    .detail-btn {\n      border: none;\n      color: #3d6ed1;\n    }\n  }\n  .user-category {\n    .el-button {\n      margin-bottom: 10px;\n      margin-left: 0px;\n      &.danger-btn {\n        background-color: #f56c6c;\n      }\n    }\n  }\n  .table-inbound-id {\n    .inbound-id-dividing-line {\n      border-top: 1px dashed #dedede;\n      transition: all 0.3s;\n    }\n    .hiddenEle {\n      display: none;\n    }\n    .el-icon-caret-bottom {\n      font-size: 16px;\n      transition: all 0.3s;\n    }\n    .inbound-id-caret {\n      transform: rotate(180deg);\n    }\n  }\n  .select-page-dropdown {\n    padding: 0;\n    margin-left: -10px;\n    .el-button {\n      border: none;\n      background: unset;\n      padding: 0 0 0 10px;\n      &:nth-child(1) {\n        width: 20px;\n        padding-right: 16px;\n      }\n      &::before {\n        width: 0;\n      }\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplierCenterAdmin/notificationCenter/an-annoucement.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplierCenterAdmin/notificationCenter/an-announceCreate.vue","messages":[{"ruleId":"vue/no-parsing-error","severity":2,"message":"Parsing error: invalid-first-character-of-tag-name.","line":112,"column":74,"nodeType":"VElement"},{"ruleId":"vue/no-unused-components","severity":2,"message":"The \"star\" component has been registered but not used.","line":151,"column":5,"nodeType":"Property","endLine":151,"endColumn":9}],"errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <layout-detail\n    :createTitle=\"isEdit ? $t('route.AnnouncementEdit') : $t('route.AnnouncementCreate')\"\n    :needDefaultBack=\"false\"\n    @goBack=\"goBack\"\n  >\n    <section v-if=\"canCreate\" slot=\"header-right\">\n      <el-button @click=\"onPreview\" class=\"white-blue\">{{$t('NC.preview')}}</el-button>\n      <el-button\n        @click=\"onSave(0)\"\n        :loading=\"actionLoading\"\n        class=\"white-blue\"\n      >{{$t('commonSaveAsDraft')}}</el-button>\n      <el-button @click=\"onSave(1)\" :loading=\"actionLoading\">{{$t('commonSubmit')}}</el-button>\n    </section>\n    <section slot=\"content\" class=\"annoucement-detail\">\n      <el-form\n        :model=\"form\"\n        :rules=\"rules\"\n        ref=\"announcementForm\"\n        label-position=\"left\"\n        label-width=\"190px\"\n      >\n        <el-form-item :label=\"$t('NC.applicableCountry')\">\n          <span>{{form.applicableCountry}}</span>\n        </el-form-item>\n        <el-form-item\n          :label=\"$t('NC.applicableChannel')\"\n          prop=\"applicableChannel\"\n          class=\"country-wrapper\"\n        >\n          <el-select v-model=\"form.applicableChannel\" :loading=\"loadingChannel\">\n            <el-option\n              v-for=\"item in channelList\"\n              :key=\"item.id\"\n              :label=\"item.name\"\n              :value=\"item.id\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item :label=\"$t('NC.importance')\" prop=\"importance\" class=\"country-wrapper\">\n          <editable-star @setStar=\"setImportance\" :defaultScore=\"form.importance\" />\n        </el-form-item>\n        <el-form-item :label=\"$t('NC.topic')\" prop=\"topic\">\n          <el-input v-model=\"form.topic\" show-word-limit :maxlength=\"100\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"sendingTimeType\">\n          <template slot=\"label\">\n            <span>{{$t('NCSendingTime')}}</span>\n            <span class=\"time-zone\">({{timeZone}})</span>\n            <el-popover\n              placement=\"top\"\n              width=\"300\"\n              trigger=\"hover\"\n              :content=\"$t('NCAnnouncementSendingTimeTip')\"\n              >\n               <svg-icon slot=\"reference\" iconClass=\"question-circle\" class=\"question-icon\"></svg-icon>\n            </el-popover>\n          </template>\n          <section class=\"supplier-section\">\n            <el-select class=\"supplier-select\" v-model=\"form.sendingTimeType\" :disabled=\"isRelease\">\n              <el-option\n                v-for=\"item in NCSendingTimeList\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.value\"\n              ></el-option>\n            </el-select>\n            <el-form-item label=\"\" label-width=\"0\" prop=\"sendTime\" v-if=\"form.sendingTimeType === 2\">\n              <el-date-picker\n                :disabled=\"isRelease\"\n                type=\"date\"\n                v-model=\"form.sendDate\"\n                format=\"yyyy-MM-dd\"\n                value-format=\"yyyy-MM-dd\"\n                :picker-options=\"sendTimePickerOptions\"\n              ></el-date-picker>\n              <el-time-select v-model=\"form.sendTime\" :disabled=\"isRelease\" :picker-options=\"{ start: '00:00', end: '23:00', step: '01:00'}\"></el-time-select>\n            </el-form-item>\n          </section>\n        </el-form-item>\n        <el-form-item required :label=\"$t('NC.vendorSiteId')\">\n          <section class=\"supplier-section\">\n            <el-select class=\"supplier-select\" v-model=\"form.supplierType\">\n              <el-option\n                v-for=\"item in SupplierNotificationType\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.value\"\n              ></el-option>\n            </el-select>\n            <supplier-editor\n              ref=\"supplierEditor\"\n              v-loading=\"checking\"\n              v-if=\"!!form.supplierType\"\n              :errorList=\"form.errorSupplierList\"\n              :supplierList=\"form.supplierList\"\n              @updateSupplierList=\"updateSupplierList\"\n            ></supplier-editor>\n            <span\n              v-if=\"!!form.supplierType\"\n              class=\"length-tips\"\n            >{{`${$t('NC.chosen')}: ${form.supplierList.length}`}}</span>\n          </section>\n        </el-form-item>\n        <el-form-item :label=\"$t('route.NCAnnouncement')\" prop=\"editorContent\" class=\"quill-editor-form-item\">\n          <quillEditor\n            ref=\"quillEditor\"\n            @updateEditor=\"updateEditor\"\n            :detialContent=\"detialContent\"\n          ></quillEditor>\n           <p class=\"content-length-tips\">{{form.editorContent.replace(/<([^>]|\\\\)+>/g, '').length}}/65535</p>\n        </el-form-item>\n      </el-form>\n      <attachment\n        :attachmentList=\"attachmentList\"\n        :isShowBtn=\"true\"\n        :isAllowDelete=\"true\"\n        @successUploadAttachment=\"handleSuccessUpload\"\n        @deleteAttachment=\"handleDeleteUpload\"\n        @setLoadingStatus=\"setLoadingStatus\"\n      />\n      <previewer\n        :htmlContent=\"form.editorContent\"\n        :topic=\"form.topic\"\n        :visible=\"previewDialogVisible\"\n        @close=\"onClosePreviewer\"\n      />\n    </section>\n  </layout-detail>\n</template>\n\n<script>\nimport supplierEditor from '@/components/Editor/supplierEditor';\nimport quillEditor from '@/components/quillEditor';\nimport { submitAnnouncement, getAnnouncementDetail, getChannelList, validateSupplierList } from '@/api/notificationCenter';\nimport editableStar from '@/components/star/editableStar';\nimport star from '@/components/star';\nimport { hasPermission } from '@/utils/permission';\nimport { Permission, SupplierNotificationType, NCSendingTimeList, TimeZoneByCountry } from '@/utils/constant';\nimport attachment from '@/components/Attachment';\nimport attachMixins from '@/components/Attachment/mixins';\nimport layoutDetail from '@/components/layout/detail';\nimport previewer from './previewer';\n\nexport default {\n  mixins: [attachMixins],\n  components: {\n    attachment,\n    editableStar,\n    star,\n    quillEditor,\n    supplierEditor,\n    layoutDetail,\n    previewer\n  },\n  data() {\n    return {\n      NCSendingTimeList,\n      canCreate: true,\n      isEdit: false,\n      detialContent: '',\n      previewDialogVisible: false,\n      loadingChannel: false,\n      actionLoading: false,\n      checking: false,\n      callBackType: null,\n      SupplierNotificationType,\n      detailId: null,\n      sendTimePickerOptions: {\n        disabledDate(time) {\n          return time.getTime() < Date.now() - 86400000;\n        }\n      },\n      form: {\n        applicableChannel: '',\n        applicableCountry: '',\n        sendDate: '',\n        sendTime: '',\n        sendingTimeType: 1,\n        errorSupplierList: [],\n        supplierType: 0,\n        supplierList: [],\n        topic: '',\n        importance: 0,\n        editorContent: '',\n        status: ''\n      },\n      attachmentList: [],\n      channelList: []\n    };\n  },\n  computed: {\n    timeZone() {\n      return TimeZoneByCountry[String(this.form.applicableCountry).toUpperCase()] || '';\n    },\n    countryList() {\n      return [...new Set([...this.$store.getters.countryList.map(item => item.country)])];\n    },\n    isRelease() {\n      return this.form.status === 'release';\n    },\n    rules() {\n      return {\n        topic: [\n          { required: true, trigger: 'blur', message: this.$t('NC.topicRequired') },\n          { max: 100, trigger: 'blur', message: this.$t('NC.maxSize100') }\n        ],\n        applicableCountry: [\n          { type: 'array', required: true, trigger: 'change', message: this.$t('NC.applicableCountryTip') }\n        ],\n        applicableChannel: [\n          { required: true, trigger: 'change', type: 'number', message: this.$t('NC.applicableChannelTip') }\n        ],\n        sendingTimeType: [\n          { required: true, trigger: 'blur', message: this.$t('NCSendingTimeRequired') }\n        ],\n        sendTime: [\n          { required: this.form.sendingTimeType === 2, trigger: 'blur', message: this.$t('NCSendingTimeRequired') }\n        ]\n      };\n    }\n  },\n  created() {\n    this.canCreate = hasPermission(Permission.ANNOUNCEMENT_PROCESS);\n    this.isEdit = this.$route.name === 'NCAnnouncementEdit';\n    if (!this.isEdit) {\n      this.form.applicableCountry = this.$route.query.region || '';\n    }\n    this.getChannelList();\n    const id = this.$route.params.id;\n    if (id !== null && id !== undefined && /^\\d+$/g.test(id)) {\n      this.detailId = Number(id);\n      this.getAnnouncementDetail(this.detailId);\n    }\n  },\n  methods: {\n    async getChannelList() {\n      try {\n        this.loadingChannel = true;\n        const params = {\n          region: this.$route.query.region\n        };\n        const res = await getChannelList(params);\n        if (res && res.retcode === 0) {\n          this.channelList = res.data;\n        } else {\n          this.$message({ type: 'error', message: res.info});\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loadingChannel = false;\n      }\n    },\n    setImportance(score) {\n      this.form.importance = score;\n    },\n    goBack() {\n      if (this.isEdit) {\n        this.$router.push(`/admin/srm/popup?tab=announcement&region=${this.$route.query.region}#tid=${this.form.applicableChannel}`);\n      } else {\n        this.$router.push(`/admin/srm/popup?tab=announcement&region=${this.$route.query.region}`);\n      }\n    },\n    includeCountryList(country) {\n      const itemCountryList = country.split(',');\n      return itemCountryList.every(itemCountry => {\n        return this.countryList.includes(itemCountry);\n      });\n    },\n    async getAnnouncementDetail(id) {\n      const res = await getAnnouncementDetail(id);\n      if (res && res.retcode === 0) {\n        const canEditThisPage = this.includeCountryList(res.data.applicable_country);\n        if (this.isEdit && !canEditThisPage) {\n          return this.$router.push({ name: 'NCPopup' });\n        }\n        this.detialContent = res.data.content;\n        this.form.editorContent = res.data.content;\n        this.form.topic = res.data.topic;\n        this.form.importance = res.data.importance;\n        this.form.applicableChannel = res.data.channel_id;\n        this.form.applicableCountry = res.data.applicable_country;\n        this.form.supplierType = res.data.associated_type || 0;\n        this.form.supplierList = res.data.vendor_site_id_list || [];\n        this.form.sendingTimeType = res.data.type || 1;\n        this.form.sendDate = res.data.send_time_str ? res.data.send_time_str.replace(/\\s\\d+:\\d+:\\d+/, '') : '';\n        this.form.sendTime = res.data.send_time_str ? res.data.send_time_str.replace(/\\d+\\-\\d+\\-\\d+\\s+(\\d+:\\d+):\\d+/, '$1') : '';\n        this.form.status = res.data.status || '';\n\n        if (res.data.attachment_list) {\n          this.resetAPIData(res.data.attachment_list);\n        }\n      } else {\n        this.$message({ type: 'error', message: res && res.info });\n      }\n    },\n    updateEditor(content) {\n      this.form.editorContent = content;\n    },\n    checkSupplierList(list = []) {\n      if (!this.form.applicableCountry.length || !this.form.supplierType) {\n        return;\n      }\n      this.checking = true;\n      return validateSupplierList({\n        applicable_country_list: [this.form.applicableCountry],\n        vendor_site_id_list: list\n      }).then(resp => {\n        this.checking = false;\n        if ([0, 1].includes(this.callBackType)) {\n          this.onSave(this.callBackType);\n          this.callBackType = null;\n        }\n        if (resp.retcode !== 0) {\n          throw new Error(resp.info);\n        } else {\n          const keyMap = {};\n          const errorList = [];\n          list.forEach(key => {\n            if (keyMap[key]) {\n              errorList.push(key);\n            } else {\n              keyMap[key] = true;\n            }\n          });\n          this.form.errorSupplierList = [\n            ...resp.data.illegal_vendor_site_id_list || [],\n            ...errorList\n          ];\n        }\n      }).catch(error => {\n        this.checking = false;\n        throw error;\n      });\n    },\n    updateSupplierList(list) {\n      this.form.supplierList = list || [];\n    },\n    onBlurSupplierEditor() {\n      this.$refs.supplierEditor && this.$refs.supplierEditor.onEditorBlur();\n    },\n    onBlurQuillEditor() {\n      this.$refs.quillEditor && this.$refs.quillEditor.onEditorBlur();\n    },\n    onPreview() {\n      this.onBlurQuillEditor();\n      this.previewDialogVisible = true;\n    },\n    onClosePreviewer() {\n      this.previewDialogVisible = false;\n    },\n    onSave(type) {\n      // 0-draft 1-submit\n      try {\n        this.onBlurQuillEditor();\n        this.onBlurSupplierEditor();\n      } catch (e) {\n        this.$message({ type: 'error', message: e});\n      }\n      this.$refs.announcementForm.validate(async(valid) => {\n        if (valid) {\n          if (this.form.editorContent === '') {\n            return this.$message.error(this.$t('NC.contentRequired'));\n          }\n          if (this.form.supplierType) {\n            if (this.checking) {\n              this.callBackType = type;\n              return this.$message.info(this.$t('NC.checkingSupplierTips'));\n            }\n            if (!this.form.supplierList.length) {\n              return this.$message.error(this.$t('NC.supplierEmptyTips'));\n            }\n            try {\n              await this.checkSupplierList(this.form.supplierList);\n            } catch (error) {\n              return this.$message.error(error.message);\n            }\n            if (this.form.errorSupplierList.length) {\n              return this.$message.error(this.$t('NC.supplierCheckTips'));\n            }\n          }\n          this._saveData(type);\n        }\n      });\n    },\n    async _saveData(type) {\n      try {\n        this.actionLoading = true;\n          const params = {\n            id: this.detailId || 0,\n            topic: this.form.topic,\n            content: this.form.editorContent,\n            importance: this.form.importance,\n            applicable_country: this.form.applicableCountry,\n            channel_id: this.form.applicableChannel,\n            channel_name: (this.channelList.find(item => item.id === this.form.applicableChannel) || {label: ''}).label,\n            status: type === 0 ? 'draft' : 'release',\n            type: this.form.sendingTimeType,\n            send_time: this.form.sendingTimeType === 2 ? `${this.form.sendDate} ${this.form.sendTime}:00` : '',\n            attachment_list: this.attachmentList,\n            associated_type: this.form.supplierType,\n            vendor_site_id_list: this.form.supplierType ? this.form.supplierList : []\n          };\n          const res = await submitAnnouncement(params);\n          if (res && res.retcode === 0) {\n            this.$message({ type: 'success', message: this.$t('commonSubmitSuccess') });\n            this.$router.push({ name: 'NCPopup', query: { tab: 'announcement', region: this.$route.query.region }, hash: `#tid=${this.form.applicableChannel}` }); // tid = channel id\n          } else {\n            this.$message({ type: 'error', message: res.info});\n          }\n          this.actionLoading = false;\n      } catch (e) {\n        this.$message({ type: 'error', message: e});\n      }\n    }\n  },\n  watch: {\n    'form.supplierList': {\n      handler(curr = [], prev = []) {\n        if (curr.length !== prev.length && curr.length) {\n          this.checkSupplierList(curr).catch(() => {});\n        } else {\n          const copyPrev = [...prev];\n          const hasDiff = curr.some(item => {\n            const index = copyPrev.findIndex(key => key === item);\n            if (index === -1) {\n              return true;\n            } else {\n              copyPrev.splice(index, 1);\n            }\n          });\n          if (hasDiff && curr.length) {\n            this.checkSupplierList(curr).catch(() => {});\n          }\n        }\n      }\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.supplier-section {\n  position: relative;\n  display: flex;\n  .supplier-select {\n    width: 220px;\n    margin-right: 8px;\n  }\n  .length-tips {\n    position: absolute;\n    bottom: 3px;\n    right: 1px;\n    color: $grey;\n    font-size: 12px;\n    padding: 2px 4px;\n    background: #fff;\n    line-height: 12px;\n  }\n}\n.quill-editor-form-item{\n  position: relative;\n}\n.content-length-tips{\n  position: absolute;\n  bottom: 0px;\n  right: 10px;\n  font-size:12px;\n  color:#909399;\n}\n.country-wrapper {\n  .el-select {\n    width: 220px;\n  }\n}\n.time-zone{\n  font-size:12px;\n  color:#a2a2a2;\n}\n</style>\n<style lang=\"scss\">\n.annoucement-detail{\n  .el-form-item--medium .el-form-item__content,\n  .el-form-item--medium .el-form-item__label {\n    line-height: 32px;\n  }\n  .ql-container {\n    .ql-editor {\n      line-height: 1.2em;\n      min-height: 30px;\n      padding: 8px 16px;\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplierCenterAdmin/notificationCenter/an-announceDetail.vue","messages":[{"ruleId":"vue/no-unused-components","severity":2,"message":"The \"quillEditor\" component has been registered but not used.","line":70,"column":5,"nodeType":"Property","endLine":70,"endColumn":16}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <layout-detail\n    :createTitle=\"$t('route.AnnouncementDetail')\"\n    :needDefaultBack=\"false\"\n    @goBack=\"goBack\"\n  >\n    <section slot=\"content\" class=\"annoucement-detail\">\n      <el-form\n        ref=\"announcementForm\"\n        label-position=\"right\"\n        label-width=\"150px\"\n      >\n        <el-form-item\n          :label=\"$t('NC.applicableCountry')\"\n        >\n          <span>{{form.applicableCountry}}</span>\n        </el-form-item>\n        <el-form-item\n          :label=\"$t('NC.applicableChannel')\"\n        >\n          <span>{{form.applicableChannelName}}</span>\n        </el-form-item>\n\n        <el-form-item :label=\"$t('NC.importance')\" >\n          <star :score=\"form.importance\" />\n        </el-form-item>\n        <el-form-item :label=\"$t('NC.topic')\">\n          <span>{{form.topic}}</span>\n        </el-form-item>\n        <el-form-item :label=\"$t('NCSendingTime')\">\n          <span>{{formatSendingTime}}</span>\n          <span v-if=\"form.sendingTimeType === 2\">{{form.sendTime}}</span>\n        </el-form-item>\n        <el-form-item :label=\"$t('NC.vendorSiteId')\">\n          <span>{{formatSupplierType}}</span>\n           <p v-if=\"form.supplierList.length\" class=\"vendor-site-id-wrapper\">{{form.supplierList.join(',')}}</p>\n        </el-form-item>\n        <el-form-item :label=\"$t('route.NCAnnouncement')\" prop=\"editorContent\">\n          <div class=\"ql-container ql-snow detail-quillEditor-content\">\n            <div class=\"ql-editor\" v-html=\"detialContent\"></div>\n          </div>\n        </el-form-item>\n      </el-form>\n      <attachment\n        :attachmentList=\"attachmentList\"\n        :isShowBtn=\"false\"\n        :isAllowDelete=\"false\"\n        @successUploadAttachment=\"handleSuccessUpload\"\n        @deleteAttachment=\"handleDeleteUpload\"\n        @setLoadingStatus=\"setLoadingStatus\"\n      />\n    </section>\n  </layout-detail>\n</template>\n\n<script>\nimport quillEditor from '@/components/quillEditor';\nimport { NCSendingTimeList, SupplierNotificationType } from '@/utils/constant';\nimport { getAnnouncementDetail } from '@/api/notificationCenter';\nimport star from '@/components/star';\nimport attachment from '@/components/Attachment';\nimport attachMixins from '@/components/Attachment/mixins';\nimport layoutDetail from '@/components/layout/detail';\n\nexport default {\n  mixins: [attachMixins],\n  components: {\n    attachment,\n    star,\n    quillEditor,\n    layoutDetail\n  },\n  data() {\n    return {\n      detialContent: '',\n      actionLoading: false,\n      detailId: null,\n      form: {\n        applicableChannel: '',\n        applicableChannelName: '',\n        applicableCountry: '',\n        errorSupplierList: [],\n        supplierType: 0,\n        supplierList: [],\n        topic: '',\n        importance: 0,\n        editorContent: '',\n        sendTime: '',\n        sendingTimeType: 1\n      }\n    };\n  },\n  computed: {\n     formatSendingTime() {\n      return (NCSendingTimeList.find((item) => item.value === this.form.sendingTimeType) || {}).label || '';\n    },\n    formatSupplierType() {\n      return (SupplierNotificationType.find((item) => item.value === this.form.supplierType) || {}).label || '';\n    }\n  },\n  created() {\n    const id = this.$route.params.id;\n    if (id !== null && id !== undefined && /^\\d+$/g.test(id)) {\n      this.detailId = Number(id);\n      this.getAnnouncementDetail(this.detailId);\n    }\n  },\n  methods: {\n    goBack() {\n      // 为了多个国家的旧数据做兼容\n      let region = this.form.applicableCountry;\n      if (this.form.applicableCountry.split(',').length > 1) {\n        region = this.$route.query.region;\n      }\n      this.$router.push(`/admin/srm/popup?tab=announcement&region=${region}#tid=${this.form.applicableChannel}`);\n    },\n    async getAnnouncementDetail(id) {\n      const res = await getAnnouncementDetail(id);\n      if (res && res.retcode === 0) {\n        this.detialContent = res.data.content;\n        this.form.editorContent = res.data.content;\n        this.form.topic = res.data.topic;\n        this.form.importance = res.data.importance;\n        this.form.applicableChannel = res.data.channel_id;\n        this.form.applicableChannelName = res.data.channel_name;\n        this.form.applicableCountry = res.data.applicable_country;\n        this.form.supplierType = res.data.associated_type || 0;\n        this.form.supplierList = res.data.vendor_site_id_list || [];\n        this.form.sendingTimeType = res.data.type || 1;\n        this.form.sendTime = res.data.send_time_str || '';\n        if (res.data.attachment_list) {\n          this.resetAPIData(res.data.attachment_list);\n        }\n      } else {\n        this.$message.error(res && res.info || 'failed to connect network, pls try it again later');\n      }\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.vendor-site-id-wrapper{\n  margin-top: 2px;\n  padding: 8px;\n  background: #F5F6F9;\n  border: 1px solid #ECF0F4;\n  border-radius: 4px;\n  line-height: 16px;\n}\n</style>\n<style lang=\"scss\">\n.annoucement-detail{\n  .ql-container {\n    &.ql-snow {\n      border-color: #eaeaea\n    }\n    .ql-editor {\n      line-height: 1.2em;\n      min-height: 30px;\n      padding: 8px 16px;\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplierCenterAdmin/notificationCenter/an-channelConfig.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplierCenterAdmin/notificationCenter/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplierCenterAdmin/notificationCenter/po-popupCreate.vue","messages":[{"ruleId":"vue/no-parsing-error","severity":2,"message":"Parsing error: invalid-first-character-of-tag-name.","line":99,"column":68,"nodeType":"VElement"},{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":285,"column":42,"nodeType":"ArrowFunctionExpression","messageId":"unexpectedSpace","endLine":285,"endColumn":43,"fix":{"range":[9824,9825],"text":""}}],"errorCount":2,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <layout-detail\n    :createTitle=\"isEdit ? $t('route.PopupEdit') : $t('route.PopupCreate')\"\n    :needDefaultBack=\"false\"\n    @goBack=\"goBack\"\n  >\n    <section v-if=\"canCreate\" slot=\"header-right\">\n      <el-button @click=\"onPreview\" class=\"white-blue\">{{$t('NC.preview')}}</el-button>\n      <el-button\n        @click=\"onSave(0)\"\n        :loading=\"actionLoading\"\n        class=\"white-blue\"\n      >{{$t('commonSaveAsDraft')}}</el-button>\n      <el-button @click=\"onSave(1)\" :loading=\"actionLoading\">{{$t('commonSubmit')}}</el-button>\n    </section>\n    <section slot=\"content\" class=\"popop-detail\">\n      <el-form\n        :model=\"form\"\n        :rules=\"rules\"\n        ref=\"popupForm\"\n        label-position=\"left\"\n        label-width=\"190px\"\n      >\n        <el-form-item\n          :label=\"$t('NC.applicableCountry')\"\n          prop=\"applicableCountry\"\n          class=\"country-wrapper\"\n        >\n          <span>{{form.applicableCountry}}</span>\n        </el-form-item>\n        <el-form-item :label=\"$t('NC.topic')\" prop=\"topic\">\n          <el-input v-model=\"form.topic\" show-word-limit :maxlength=\"100\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"sendingTimeType\">\n          <template slot=\"label\">\n            <span>{{$t('NCSendingTime')}}</span>\n            <span class=\"time-zone\">({{timeZone}})</span>\n            <el-popover\n              placement=\"top\"\n              width=\"300\"\n              trigger=\"hover\"\n              :content=\"$t('NCPopupSendingTimeTip')\"\n              >\n               <svg-icon slot=\"reference\" iconClass=\"question-circle\" class=\"question-icon\"></svg-icon>\n            </el-popover>\n          </template>\n          <section class=\"supplier-section\">\n            <el-select class=\"supplier-select\" v-model=\"form.sendingTimeType\">\n              <el-option\n                v-for=\"item in NCSendingTimeList\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.value\"\n              ></el-option>\n            </el-select>\n            <el-form-item label=\"\" label-width=\"0\" prop=\"sendTime\" v-if=\"form.sendingTimeType === 2\">\n              <el-date-picker\n                type=\"date\"\n                v-model=\"form.sendDate\"\n                format=\"yyyy-MM-dd\"\n                value-format=\"yyyy-MM-dd\"\n                :picker-options=\"sendTimePickerOptions\"\n              ></el-date-picker>\n              <el-time-select v-model=\"form.sendTime\" :picker-options=\"{ start: '00:00', end: '23:00', step: '01:00'}\"></el-time-select>\n            </el-form-item>\n          </section>\n        </el-form-item>\n        <el-form-item required :label=\"$t('NC.vendorSiteId')\">\n          <section class=\"supplier-section\">\n            <el-select class=\"supplier-select\" v-model=\"form.supplierType\">\n              <el-option\n                v-for=\"item in SupplierNotificationType\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.value\"\n              ></el-option>\n            </el-select>\n            <supplier-editor\n              ref=\"supplierEditor\"\n              v-loading=\"checking\"\n              v-if=\"!!form.supplierType\"\n              :errorList=\"form.errorSupplierList\"\n              :supplierList=\"form.supplierList\"\n              @updateSupplierList=\"updateSupplierList\"\n            ></supplier-editor>\n            <span\n              v-if=\"!!form.supplierType\"\n              class=\"length-tips\"\n            >{{`${$t('NC.chosen')}: ${form.supplierList.length}`}}</span>\n          </section>\n        </el-form-item>\n        <el-form-item :label=\"$t('NC.Popup')\" prop=\"editorContent\" class=\"quill-editor-form-item\">\n          <quillEditor\n            ref=\"quillEditor\"\n            @updateEditor=\"updateEditor\"\n            :detialContent=\"detialContent\"\n            :hiddenModules=\"['link', 'image']\"\n          ></quillEditor>\n          <p class=\"content-length-tips\">{{editorContent.replace(/<([^>]|\\\\)+>/g, '').length}}/65535</p>\n        </el-form-item>\n      </el-form>\n      <previewer\n        :htmlContent=\"editorContent\"\n        :topic=\"form.topic\"\n        :visible=\"previewDialogVisible\"\n        @close=\"onClosePreviewer\"\n      />\n    </section>\n  </layout-detail>\n</template>\n\n<script>\nimport supplierEditor from '@/components/Editor/supplierEditor';\nimport layoutDetail from '@/components/layout/detail';\nimport quillEditor from '@/components/quillEditor';\nimport { submitPopup, getPopupDetail, validateSupplierList } from '@/api/notificationCenter';\nimport { hasPermission } from '@/utils/permission';\nimport { Permission, SupplierNotificationType, NCSendingTimeList, TimeZoneByCountry } from '@/utils/constant';\nimport previewer from './previewer';\n\nexport default {\n  components: {\n    supplierEditor,\n    quillEditor,\n    layoutDetail,\n    previewer\n  },\n  data() {\n    return {\n      canCreate: false,\n      isEdit: false,\n      editorContent: '',\n      detialContent: '',\n      previewDialogVisible: false,\n      actionLoading: false,\n      callBackType: null,\n      checking: false,\n      detailId: null,\n      SupplierNotificationType,\n      NCSendingTimeList,\n      sendTimePickerOptions: {\n        disabledDate(time) {\n          return time.getTime() < Date.now() - 86400000;\n        }\n      },\n      form: {\n        supplierType: 0,\n        supplierList: [],\n        errorSupplierList: [],\n        applicableCountry: '',\n        sendDate: '',\n        sendTime: '',\n        sendingTimeType: 1,\n        topic: ''\n      }\n    };\n  },\n  computed: {\n    timeZone() {\n      return TimeZoneByCountry[String(this.form.applicableCountry).toUpperCase()] || '';\n    },\n    rules() {\n      return {\n        topic: [\n          { required: true, trigger: 'blur', message: this.$t('NC.topicRequired') },\n          { max: 100, trigger: 'blur', message: this.$t('NC.maxSize100') }\n        ],\n        sendingTimeType: [\n          { required: true, trigger: 'blur', message: this.$t('NCSendingTimeRequired') }\n        ],\n        sendTime: [\n          { required: this.form.sendingTimeType === 2, trigger: 'blur', message: this.$t('NCSendingTimeRequired') }\n        ]\n      };\n    }\n  },\n  created() {\n    this.canCreate = hasPermission(Permission.PROTOCOL_POPUP_PROCESS);\n    this.isEdit = this.$route.name === 'NCPopupEdit';\n    if (!this.isEdit) {\n      this.form.applicableCountry = this.$route.query.region || '';\n    }\n    const id = this.$route.params.id;\n    if (id !== null && id !== undefined && /\\d+/g.test(id)) {\n      this.detailId = Number(id);\n      this.getPopupDetail(this.detailId);\n    }\n  },\n  methods: {\n    goBack() {\n      this.$router.push(`/admin/srm/popup?tab=popupList&region=${this.form.applicableCountry}`);\n    },\n    async getPopupDetail(id) {\n      try {\n        const res = await getPopupDetail(id);\n        if (res && res.retcode === 0) {\n          if (this.isEdit && res.data.status !== 'draft') {\n            // 不是可编辑的单，就不给编辑\n            return this.$router.push({ name: 'NCPopup' });\n          }\n          this.editorContent = res.data.content;\n          this.detialContent = res.data.content;\n          this.form.topic = res.data.topic;\n          this.form.applicableCountry = res.data.applicable_country;\n          this.form.supplierType = res.data.associated_type || 0;\n          this.form.supplierList = res.data.vendor_site_id_list || [];\n          this.form.sendingTimeType = res.data.type || 1;\n          this.form.sendDate = res.data.send_time_str ? res.data.send_time_str.replace(/\\s\\d+:\\d+:\\d+/, '') : '';\n          this.form.sendTime = res.data.send_time_str ? res.data.send_time_str.replace(/\\d+\\-\\d+\\-\\d+\\s+(\\d+:\\d+):\\d+/, '$1') : '';\n        } else {\n          this.$message({ type: 'error', message: res && res.info });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    updateEditor(content) {\n      this.editorContent = content;\n    },\n    getSupplierErrorList(list = []) {\n      const keyMap = {};\n      const errorList = [];\n      list.forEach((key) => {\n        if (keyMap[key]) {\n          errorList.push(key);\n        } else {\n          keyMap[key] = true;\n        }\n      });\n      return errorList;\n    },\n    checkSupplierList(list = []) {\n      if (!this.form.applicableCountry.length || !this.form.supplierType) {\n        return;\n      }\n      this.checking = true;\n      return validateSupplierList({\n        applicable_country_list: [this.form.applicableCountry],\n        vendor_site_id_list: list\n      })\n        .then((resp) => {\n          this.checking = false;\n          if ([0, 1].includes(this.callBackType)) {\n            this.onSave(this.callBackType);\n            this.callBackType = null;\n          }\n          if (resp.retcode !== 0) {\n            throw new Error(resp.info);\n          } else {\n            this.form.errorSupplierList = [\n              ...(resp.data.illegal_vendor_site_id_list || []),\n              ...this.getSupplierErrorList(list)\n            ];\n          }\n        })\n        .catch((error) => {\n          this.checking = false;\n          this.$message({ type: 'error', message: error});\n        });\n    },\n    updateSupplierList(list) {\n      this.form.supplierList = list || [];\n    },\n    onBlurSupplierEditor() {\n      this.$refs.supplierEditor && this.$refs.supplierEditor.onEditorBlur();\n    },\n    onBlurQuillEditor() {\n      this.$refs.quillEditor && this.$refs.quillEditor.onEditorBlur();\n    },\n    onPreview() {\n      this.onBlurQuillEditor();\n      this.previewDialogVisible = true;\n    },\n    onClosePreviewer() {\n      this.previewDialogVisible = false;\n    },\n    onSave(type) {\n      // 0-draft 1-submit\n      try {\n        this.onBlurQuillEditor();\n        this.onBlurSupplierEditor();\n      } catch (e) {\n        this.$message({ type: 'error', message: e});\n      }\n      this.$refs.popupForm.validate(async (valid) => {\n        if (valid) {\n          if (this.editorContent === '') {\n            return this.$message.error(this.$t('NC.contentRequired'));\n          }\n          if (this.form.supplierType) {\n            if (this.checking) {\n              this.callBackType = type;\n              return this.$message.info(this.$t('NC.checkingSupplierTips'));\n            }\n            if (!this.form.supplierList.length) {\n              return this.$message.error(this.$t('NC.supplierEmptyTips'));\n            }\n            try {\n              await this.checkSupplierList(this.form.supplierList);\n            } catch (error) {\n              return this.$message.error(error.message);\n            }\n            if (this.form.errorSupplierList.length) {\n              return this.$message.error(this.$t('NC.supplierCheckTips'));\n            }\n          }\n          this._saveData(type);\n        }\n      });\n    },\n    async _saveData(type) {\n      try {\n        this.actionLoading = true;\n        const params = {\n          id: this.detailId || 0,\n          topic: this.form.topic,\n          content: this.editorContent,\n          applicable_country: this.form.applicableCountry,\n          status: type === 0 ? 'draft' : 'release',\n          type: this.form.sendingTimeType,\n          send_time: this.form.sendingTimeType === 2 ? `${this.form.sendDate} ${this.form.sendTime}:00` : '',\n          associated_type: this.form.supplierType,\n          vendor_site_id_list: this.form.supplierType ? this.form.supplierList : []\n        };\n        const res = await submitPopup(params);\n        if (res && res.retcode === 0) {\n          this.$message({ type: 'success', message: this.$t('commonSubmitSuccess')});\n          this.$router.push({ name: 'NCPopup', query: { tab: 'popopList', region: this.$route.query.region } });\n        } else {\n          this.$message({ type: 'error', message: res.info});\n        }\n        this.actionLoading = false;\n      } catch (e) {\n        this.$message({ type: 'error', message: e});\n      }\n    }\n  },\n  watch: {\n    'form.supplierList': {\n      handler(curr = [], prev = []) {\n        if (curr.length !== prev.length && curr.length) {\n          this.checkSupplierList(curr).catch(() => {});\n        } else {\n          const copyPrev = [...prev];\n          const hasDiff = curr.some((item) => {\n            const index = copyPrev.findIndex((key) => key === item);\n            if (index === -1) {\n              return true;\n            } else {\n              copyPrev.splice(index, 1);\n            }\n          });\n          if (hasDiff && curr.length) {\n            this.checkSupplierList(curr).catch(() => {});\n          }\n        }\n      }\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.supplier-section {\n  position: relative;\n  display: flex;\n  .supplier-select {\n    width: 220px;\n    margin-right: 8px;\n  }\n  .length-tips {\n    position: absolute;\n    bottom: 3px;\n    right: 1px;\n    color: $grey;\n    font-size: 12px;\n    padding: 2px 4px;\n    background: #fff;\n    line-height: 12px;\n  }\n}\n.country-wrapper {\n  .el-select {\n    width: 220px;\n  }\n}\n.quill-editor-form-item{\n  position: relative;\n}\n.content-length-tips{\n  position: absolute;\n  bottom: 0px;\n  right: 10px;\n  font-size:12px;\n  color:#909399;\n}\n.time-zone{\n  font-size:12px;\n  color:#a2a2a2;\n}\n</style>\n<style lang=\"scss\">\n.popop-detail {\n  .el-form-item--medium .el-form-item__content,\n  .el-form-item--medium .el-form-item__label {\n    line-height: 32px;\n  }\n  .ql-container {\n    .ql-editor {\n      line-height: 1.2em;\n      min-height: 30px;\n      padding: 8px 16px;\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplierCenterAdmin/notificationCenter/po-popupDetail.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplierCenterAdmin/notificationCenter/po-popupList.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplierCenterAdmin/notificationCenter/previewer.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplierCenterAdmin/outrightListingRequest/addUploador.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplierCenterAdmin/outrightListingRequest/baseInfo.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplierCenterAdmin/outrightListingRequest/constant.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplierCenterAdmin/outrightListingRequest/create.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":8,"column":55,"nodeType":"VIdentifier","messageId":"deprecated","endLine":8,"endColumn":61}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"listing-request-detail-container\" v-loading=\"loading\">\n    <header class=\"create-listing-request-header\">\n      <div class=\"left-info\">\n        <i @click=\"goBack()\" class=\"el-icon-arrow-left go-back-icon\" ></i><span>{{$t('createListingRequest')}}</span>\n      </div>\n      <div class=\"right-info\">\n        <el-button class=\"list-btn submit-btn\" @click.native=\"onSubmitData\">{{$t('commonSubmit')}}</el-button>\n      </div>\n    </header>\n    <el-form class=\"srm-element-ui hideRequiredSign\" label-width=\"180px\" label-position=\"right\" ref=\"mainform\" :model=\"formData\">\n    <!-- Select Shops -->\n    <div class=\"multi-options\">\n      <h3 class=\"title mt32\">{{$t('catalogueSelectShop')}}</h3>\n      <el-form-item required>\n        <label slot=\"label\">\n          <span>{{$t('catalogueSelectShopID')}}</span>\n          <el-popover width=\"400\" placement=\"top\" trigger=\"hover\" popper-class=\"break-word listing-request-detail-container\">\n            <ul class=\"select-shop-popover\">\n              <li class=\"select-shop-popover-item\">{{$t('catalogueSelectShopTipOne')}}</li>\n              <li class=\"select-shop-popover-item\">{{$t('catalogueSelectShopTipTwo')}}</li>\n              <li class=\"select-shop-popover-item\">{{$t('catalogueSelectShopTipThree')}}</li>\n            </ul>\n            <svg-icon iconClass=\"question-circle\"  slot=\"reference\" className=\"question-icon\"></svg-icon>\n          </el-popover>\n        </label>\n        <div class=\"medium-length\">\n          <div class=\"search-shop-input-box\">\n            <input v-model=\"searchShopText\" class=\"search-shop-input\" @keyup.enter=\"onSearchShopsInWhiteList\" :placeholder=\"$t('catalogueSelectShopPlaceHolder')\" />\n          </div>\n          <MpqTable :sourceList=\"selectShopList\" :loading=\"loadingSearch\" type=\"shop\" @delete=\"onDeleteShopList\" />\n        </div>\n       </el-form-item>\n    </div>\n\n    <!-- Basic Information -->\n    <BaseInfo\n      ref=\"baseInfoForm\"\n      :isFromCreate=\"true\"\n      :scRules=\"scRules\"\n      :sourceData=\"sourceData\"\n      :categoryOptions=\"categoryOptions\"\n      :originCategoryOptions=\"originCategoryOptions\"\n    />\n    <!-- Variations Information -->\n    <section class=\"multi-options\">\n      <h3 class=\"title\">{{$t('productsPriceAndInventory')}}</h3>\n      <multipleSKU ref=\"multipleSKU\"\n        :currency=\"currency\"\n        :config=\"multipleSKUConfig\"\n        @updateVariationImage=\"updateVariationImage\"\n        @clearVariationImage=\"clearVariationImage\"\n        @updateSpecification=\"updateSpecification\"\n        @updateTableList=\"updateTableList\"/>\n    </section>\n    <!-- 规格图 -->\n    <variation-image-uploader ref=\"variationImageUploader\" :scRules=\"scRules\" :variationList=\"specification\" :originPicList=\"variationImages\" @setPicList=\"setVariationPicList\"/>\n    </el-form>\n  </div>\n</template>\n\n<script>\nimport { isEmpty } from 'lodash';\nimport BaseInfo from './baseInfo';\nimport { getSkuCatalogueDetail, createSkuCatalogue } from '@/api/listingRequest';\nimport { getCategories } from '@/api/shop';\nimport { massGetShopListByID, getShopAttributes } from '@/api/shopConfig';\nimport { categoryTreeData } from '@/utils/treeData';\nimport multipleSKU from './multipleSKU';\nimport variationImageUploader from './variationImageUploader';\nimport { isNumber } from '@/utils/numberUtils';\nimport { fetchCommonToggle } from '@/api/common';\nimport MpqTable from './mpqTable';\n\nexport default {\n  name: 'ListingRequestCreate',\n  data() {\n    return {\n      searchShopText: '',\n      selectShopList: [],\n      formData: {\n        failReason: '',\n        shopId: '',\n        shopName: '',\n        item_id: 0,\n        picList: [], // attributes 对应的图片\n        skuList: [], // Variations 列表\n        categroyList: [], // 选中的 categroy\n        propertiesList: [], // attributes\n        name: '',\n        description: '',\n        preOder: false\n      },\n      sourceData: {}, // 存一份源数据\n      categoryOptions: [], // 所有的 categroyList\n      originCategoryOptions: [], // 未被转换为tree的 categroyList\n      logisticList: [],\n      priceTableData: [], // sku列表\n      specification: [], // 规格信息\n      scRules: {}, // listing 侧返回的规则\n      variationImages: [], // 规格图\n      selectShopDialogVisible: false,\n      loading: false,\n      multipleSKUConfig: { isShowSwop: false },\n      loadingSearch: false\n    };\n  },\n  components: {\n    BaseInfo,\n    // ShippingFee,\n    multipleSKU,\n    variationImageUploader,\n    MpqTable\n  },\n  computed: {\n    currency() {\n      return this.$store.getters.currencyMap[this.sourceData.region];\n    },\n    // 是否是失败状态\n    isFailedStatus() {\n      return this.formData.status === 3;\n    }\n  },\n  methods: {\n    onDeleteShopList(index) {\n      this.selectShopList.splice(index, 1);\n    },\n    async onSearchShopsInWhiteList() {\n      try {\n        if (this.searchShopText.length < 1) {\n          return;\n        }\n        const formatSearchTextList = this.onFormatSearchParams(this.searchShopText) || [];\n        this.loadingSearch = true;\n        const params = {\n          region: this.sourceData.region,\n          shop_id_list: formatSearchTextList.map(item => parseInt(item))\n        };\n        const res = await massGetShopListByID(params);\n        if (res && res.retcode === 0) {\n          // 要过滤掉 FBS Shop\n          const responstList = (res.data.shop_list || []).filter(item => !item.fbs_tag);\n          if (responstList.length !== params.shop_id_list.length) {\n            const responstListWithShopId = responstList.map(item => item.shop_id);\n            const lostShopIdList = (params.shop_id_list || []).filter(shopId => !responstListWithShopId.includes(shopId));\n            if (lostShopIdList.length) {\n              this.$message({ type: 'error', message: this.$t('catalogueCannotFindShops', { shop_ids: lostShopIdList.join(',')})});\n            }\n          }\n          const existShopIds = this.selectShopList.map(item => item.shop_id);\n          const differentShopList = responstList.filter(item => !existShopIds.includes(item.shop_id));\n          if (!differentShopList.length) return;\n          this.onCheckShopIsInWhiteList(differentShopList.map(item => item.shop_id)).then((list) => {\n            // console.log('differentShopList', differentShopList);\n            if (Array.isArray(list)) {\n              list.forEach(item => {\n                const target = differentShopList.find(diffItem => diffItem.shop_id === item.shop_id);\n                // console.log(target);\n                if (target) {\n                  target.canInputMPQ = item.is_mpq_mandatory === 1;\n                }\n              });\n            }\n            this.selectShopList = [...differentShopList.map(item => Object.assign(item, { min_purchase_qty: ''})), ...this.selectShopList];\n          });\n        } else {\n          this.$message({ type: 'error', message: res.info || res.message });\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      } finally {\n        this.loadingSearch = false;\n      }\n    },\n    onFormatSearchParams(text) {\n      const temp = text.split(/[\\n\\s+,，；;]/g);\n      for (let i = 0; i < temp.length; i++) {\n        if (temp[i] === '') {\n          // 删除数组中空值\n          temp.splice(i, 1);\n          i--;\n        }\n      }\n      return temp;\n    },\n    onCheckShopIsInWhiteList(shopList) {\n      return new Promise((resolve) => {\n        const params = {\n          shop_id_list: shopList\n        };\n        getShopAttributes(params).then(res => {\n          if (res && res.retcode === 0) {\n            resolve(res.data.shop_attribute_list);\n          } else {\n            resolve([]);\n            this.$message({ type: 'error', message: res.info || res.message });\n          }\n        }).catch(e => { this.$message({ type: 'error', message: e }); });\n      });\n    },\n\n    onSubmitData() {\n      if (!this.checkFormData()) return;\n      this._submitProduct();\n    },\n    checkFormData() {\n      if (!this.checkSkuList() ||\n        this.hasTheSameSupplierSKU() ||\n        this.hasTheSameSpecification() ||\n        !this.checkVariationImages() ||\n        !this.checkShopList()\n      ) {\n        return false;\n      }\n\n      const baseInfoForm = this.$refs['baseInfoForm'];\n      const validateBaseInfo = (baseInfoForm && baseInfoForm.checkComponentFormData(true)) || {};\n      this.setBaseInfoFormData(validateBaseInfo.formData || {});\n\n      return true;\n    },\n    checkShopList() {\n      if (isEmpty(this.selectShopList)) {\n        this.$message.error(this.$t('commonIsRequired', {target: this.$t('commonShop')}));\n        return false;\n      }\n      return true;\n    },\n    // 检测规格图片\n    checkVariationImages() {\n      // true -- pass ,false -- not pass\n      // 有规格情况，规格图片数要么为0，要么等于规格1的数目\n      if (this.specification.length > 0 && this.variationImages.length > 0 && this.specification[0].options.length !== this.variationImages.length) { // 有规格的情况\n        this.$message.error(this.$t('applicationVariationImageErrorTip'));\n        return false;\n      }\n      return true; // 无规格的情况\n    },\n    // 检测是否有重复的 SKu\n    hasTheSameSupplierSKU() {\n      const supplierSkuList = this.formData.skuList.map(item => item.supplier_sku_id);\n      if (new Set(supplierSkuList).size !== supplierSkuList.length) {\n        this.$message.error(this.$t('productTableTheSameSkuTip') + this.$t('tableCommonSupplierSKUID'));\n        return true;\n      }\n      return false;\n    },\n    // 检测是否有相同的规则名称或者值\n    hasTheSameSpecification() {\n      const { specification } = this;\n      const specificationNames = specification.map(item => item.name);\n      const specificationOptions = specification.map(item => item.options);\n      // check if has the same name\n      if (new Set(specificationNames).size !== specificationNames.length) {\n        this.$message.error(this.$t('repeatSpKey'));\n        return true;\n      }\n      const hasTheSameOption = specificationOptions.find(options => {\n        return new Set(options).size !== options.length;\n      });\n      if (hasTheSameOption) {\n        this.$message.error(this.$t('repeatSpValue'));\n        return hasTheSameOption;\n      }\n    },\n    // 检测 SKu\n    checkSkuList() {\n      // true -- pass ,false -- not pass\n      // 不能没有数据\n      if (this.formData.skuList.length < 1) {\n        this.resetSkuList();\n        this.$message.error(this.$t('productTableRequiredTip'));\n        return false;\n      }\n      this.formData.skuList.forEach(item => {\n        item.isCreateRow = false; // 提交过后，就不是刚创建的了\n      });\n      // 数据有没有空或者不是数字\n      const hasErrorSkuList = this.formData.skuList.find(item => {\n        return this.checkTableDatas(item);\n      });\n      if (hasErrorSkuList) {\n        this.$message.error(this.$t('productTableErrorTip'));\n        return false;\n      }\n      return true;\n    },\n    checkTableDatas(tableItem) {\n      const notEmptyAttributes = ['supplier_sku_id', 'recommended_retail_price', 'length', 'width', 'height', 'net_weight'];\n      const mustNumberAttributes = ['recommended_retail_price', 'length', 'width', 'height', 'net_weight'];\n      const hasOneOfEmptyStr = notEmptyAttributes.some(key => {\n        return tableItem[key] === '';\n      });\n      const hasOneOfNotNumber = mustNumberAttributes.some(key => {\n        return !isNumber(tableItem[key]);\n      });\n      return hasOneOfEmptyStr || hasOneOfNotNumber;\n    },\n    setBaseInfoFormData(value) {\n      const baseInfoProperties = [\n        'categroyList', 'propertiesList', 'global_brand', 'name', 'description', 'picList', 'parentSkuId'\n      ];\n      baseInfoProperties.forEach(item => {\n        this.formData[item] = value[item];\n      });\n    },\n    // 创建的时候不需要校验base info 中的信息\n    _submitProduct() {\n      try {\n        // 获取排序后的图片url\n        if (this.formData.picList.some(item => item.realSrc === '')) {\n          return this.$message.warning(this.$t('uploadingImageTips'));\n        }\n        const images = [];\n        for (let i = 0; i < this.formData.picList.length; i++) {\n          images[i] = this.formData.picList[i].realSrc;\n        }\n        // 设置 Sku List\n        const item_models = this.formData.skuList.map(item => ({\n          id: item.id,\n          model_id: item.model_id,\n          sku_tier_index: item.sku_tier_index,\n          supplier_sku_id: item.supplier_sku_id,\n          recommended_retail_price: parseFloat(item.recommended_retail_price),\n          length: parseFloat(item.length),\n          width: parseFloat(item.width),\n          height: parseFloat(item.height),\n          net_weight: parseInt(item.net_weight),\n          swop: item.swop,\n          selling_type: item.selling_type\n        }));\n        // 设置规格\n        const tier_variation_list = this.specification.map((item, index) => {\n          const obj = {\n            name: item.name,\n            options: item.options.map(opt => opt.name),\n            images: this.variationImages.map(item => item.src)\n          };\n          if (index === 1) {\n            obj.images = [];\n          }\n          return obj;\n        });\n        // 传递给接口的参数格式\n        const submitData = {\n          region: this.sourceData.region,\n          shop_id: this.sourceData.shop_id,\n          request_id: this.sourceData.request_id,\n          requester: this.sourceData.requester, // 这个requester 还是原来的 requester\n          item_id: this.formData.item_id || 0,\n          parent_sku_id: this.formData.parentSkuId,\n          item_name: this.formData.name,\n          item_description: this.formData.description,\n          category_id_l1_list: this.formData.categroyList,\n          model_list: item_models,\n          images: images,\n          global_brand: this.formData.global_brand || {},\n          attribute_list: this.formData.propertiesList || [],\n          tier_variation_list,\n          shop_list: this.selectShopList.map(item => ({shop_id: item.shop_id, min_purchase_qty: item.canInputMPQ ? item.min_purchase_qty || null : null }))\n        };\n        createSkuCatalogue(submitData).then((resp) => {\n          if (resp.retcode !== 0) {\n            this.$message.error(resp.info);\n          } else {\n            this.$message.success('success');\n            this.selectShopDialogVisible = false;\n            this.$router.push({ name: 'outrightListingRequest', query: {\n              activeTab: 'supplierCatalogue'\n            }});\n          }\n        }).catch(() => {});\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    // 设置规格图\n    setVariationPicList(picList) {\n      this.variationImages = picList.map(item => ({ src: item.realSrc, name: item.name }));\n    },\n    goBack() {\n      this.$router.back();\n    },\n    // 获取 sku catalogue 详情\n    getSkuCatalogueDetail(request_id) {\n      getSkuCatalogueDetail({ request_id }).then((resp) => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.message || resp.info);\n        } else {\n          this.sourceData = JSON.parse(JSON.stringify(resp.data.catalogue_request));\n          this.setFormDataFromAPI(resp.data.catalogue_request);\n          this.fetchCommonToggle({ key: 'swop' }); // depend on region\n        }\n      }).catch(() => {}).finally(() => {\n        this.loading = false;\n      });\n    },\n    // 更新规格图片\n    updateVariationImage(spIdx) {\n      this.$refs.variationImageUploader && typeof this.$refs.variationImageUploader.deletePic === 'function' && this.$refs.variationImageUploader.deletePic(spIdx);\n    },\n    // 清空规格图片\n    clearVariationImage() {\n      this.$refs.variationImageUploader && typeof this.$refs.variationImageUploader.resetPicList === 'function' && this.$refs.variationImageUploader.resetPicList();\n    },\n    // 更新规格信息\n    updateSpecification(specification) {\n      this.specification = specification;\n      if (this.specification.length === 0) {\n        this.resetSkuList();\n      }\n    },\n    // 清空规格信息\n    resetSkuList() {\n      this.$nextTick(() => {\n        this.formData.skuList = [\n          {\n            model_id: 0,\n            id: 0,\n            supplier_sku_id: '',\n            original_price: '', // 建议售价\n            barcode: '',\n            length: '',\n            width: '',\n            height: '',\n            net_weight: '',\n            lifecycle: '',\n            sku_tier_index: [],\n            isCreateRow: true,\n            isOldSku: false,\n            swop: 0\n          }\n        ];\n        const multipleSKUComp = this.$refs.multipleSKU;\n        if (multipleSKUComp && typeof multipleSKUComp.setTableList === 'function') {\n          multipleSKUComp.setTableList(this.formData.skuList);\n        }\n      });\n    },\n    updateTableList(skuList) {\n      this.formData.skuList = skuList;\n    },\n    async setFormDataFromAPI(data) {\n      // 处理 baseInfo 中的图片\n      if (Array.isArray(data.image_list)) {\n        this.formData.picList = data.image_list.map((imageUrl, i) => ({\n          key: i + imageUrl,\n          src: imageUrl,\n          realSrc: imageUrl,\n          seen: 'visible' }));\n      }\n      // 处理规格\n      this.specification = (data.tier_variation_list || []).map((tier, index) => {\n        const opt = {\n          name: tier.name,\n          options: (tier.options || []).map((item, itemIndex) => {\n            return {\n              name: item\n            };\n          })\n        };\n        if (tier.images && tier.images.length > 0) {\n          this.variationImages = tier.images.map((src, index) => {\n            return { src, name: tier.options[index] };\n          }) || [];\n        }\n        return opt;\n      });\n      // 处理规格图片\n      if (Array.isArray(this.variationImages) && this.variationImages.length > 0) {\n        this.$nextTick(() => {\n          this.$refs.variationImageUploader && this.$refs.variationImageUploader.setPicListFromFetch(this.variationImages);\n        });\n      }\n      // isOldSku: true, isCreateRow: true 这个 PMS 侧应该是不需要用到的？\n      this.formData.skuList = (data.model_list || []).map(model => {\n        const tier_name_model = this.formatTier(model.sku_tier_index);\n        return Object.assign({ isOldSku: true, isCreateRow: true }, tier_name_model, model); // todo selling type selling_type: 2\n      });\n\n      const multipleSKUComp = this.$refs.multipleSKU;\n      if (multipleSKUComp) {\n        if (typeof multipleSKUComp.setTableList === 'function') {\n          multipleSKUComp.setTableList(this.formData.skuList);\n        }\n        if (typeof multipleSKUComp.setSpecification === 'function') {\n          multipleSKUComp.setSpecification(this.specification);\n        }\n      }\n\n      // 处理category，attributes\n      const categroyList = data.category_ids;\n      this.formData.categroyList = categroyList;\n      this.formData.propertiesList = data.attribute_list;\n      this.formData.global_brand = data.global_brand;\n\n      // 一些基础值\n      this.formData.name = data.item_name;\n      this.formData.description = data.item_description;\n      this.formData.item_id = data.item_id;\n      this.formData.shopId = data.shop_id;\n      this.formData.shopName = data.shop_name;\n      this.formData.parentSkuId = data.parent_sku_id;\n      this.formData.preOder = Boolean(data.pre_order);\n      this.formData.failReason = data.fail_reason;\n\n      this.priceTableData = (data['model_list'] || []).map(item => {\n        const spOption = this.formatTier(item.sku_tier_index);\n        return Object.assign({ tier_index: item.sku_tier_index || [] }, spOption, item);\n      });\n      // 获取物流信息\n      this.shopId = data.shop_id;\n      this.getCategoryOptions(data.region);\n\n      this.$refs['baseInfoForm'].initFormFields(this.formData, {region: data.region});\n    },\n    formatTier(tierIndexList = []) {\n      let n = 0;\n      const result = {};\n      if (this.specification.length > 0 && Array.isArray(tierIndexList)) {\n        tierIndexList.forEach((tie) => {\n          if (n === 0) {\n            result.spOneValue = this.specification[n].options[tie].name;\n            n++;\n          } else if (n === 1) {\n            result.spTwoValue = this.specification[n].options[tie].name;\n          }\n        });\n      }\n      return result;\n    },\n    // 获取 Category 选项\n    getCategoryOptions(region) {\n      getCategories({ country: region, use_global: 1, cs_status_list: 1 }).then(({ data: { categories }}) => {\n        const allCategoriesOptions = categories || [];\n        const res = categoryTreeData(allCategoriesOptions, {\n          key: 'category_id'\n        });\n        this.categoryOptions = res;\n        this.originCategoryOptions = allCategoriesOptions;\n      }).catch(() => {});\n    },\n    async fetchCommonToggle(params) {\n      try {\n        const { data: { value = {} }, retcode, message } = await fetchCommonToggle(params);\n        if (retcode !== 0) {\n          this.$message.error(`Fetch Swop Toggle ${message}`);\n          return;\n        }\n        const region = this.sourceData.region;\n        this.multipleSKUConfig.isShowSwop = (value || {})[region];\n      } catch (e) {\n        this.$message.error(`Fetch Swop Toggle ${e}`);\n      }\n    }\n  },\n  created() {\n    this.loading = true;\n    const queryParams = this.$route.query || {};\n    this.getSkuCatalogueDetail(queryParams.request_id);\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.listing-request-detail-container {\n  .el-dialog__title {\n    font-family: Helvetica-Bold;\n    font-size: 18px;\n    color: #333333;\n  }\n  .expected-listing-shop {\n    margin-top: 20px;\n    .el-input__inner:focus {\n      outline: none;\n    }\n    .el-input__inner {\n      width: 240px;\n      background: #FFFFFF;\n      border: 1px solid #E5E5E5;\n      border-radius: 4px;\n    }\n  }\n  .shipping-fee-form {\n    margin-top: 20px;\n    .logistic-card {\n      margin-top: 0px;\n    }\n  }\n  .search-shop-input-box{\n    border: 1px solid #dedede;\n    border-radius: 3px;\n    height: 32px;\n    line-height: 32px;\n    .search-shop-input{\n      height: 30px;\n      width:100%;\n      line-height: 30px;\n      padding: 0 4px;\n      border: 0;\n      vertical-align: top;\n      &::-webkit-input-placeholder {\n        /* placeholder字体大小 */\n        font-size: 12px;\n      }\n    }\n\n  }\n}\n</style>\n\n<style lang=\"scss\" scoped>\n.listing-request-detail-container {\n  margin: 10px 40px 10px 20px;\n  .fail-reason {\n    margin: 10px 0;\n    width: 100%;\n    background: #FFF1F0;\n    border-radius: 4px;\n    padding: 10px;\n    font-family: Helvetica;\n    font-size: 14px;\n    color: #555555;\n    .warning-icon {\n      margin-left: 20px;\n    }\n  }\n  .medium-length{\n    width: 560px;\n  }\n  .create-listing-request-header {\n    position: sticky;\n    top: 0px;\n    padding: 10px 0;\n    z-index: 4;\n    background-color: #fff;\n    border-bottom: 2px solid #EDEEF2;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n  .multi-options .title {\n    font-weight: 700;\n    font-size: 16px;\n    color: rgba(0,0,0,0.85);\n    line-height: 30px;\n  }\n  .right-info .submit-btn {\n    background: #3D6ED1;\n    border-radius: 2px;\n    border-color: #3D6ED1;\n    color: #FFFFFF;\n    font-family: Helvetica;\n    font-size: 14px;\n  }\n  .left-info {\n    font-family: Helvetica;\n    font-size: 24px;\n    color: #333333;\n  }\n  .select-shop-popover{\n    font-size: 14px;\n    color: $black;\n    .select-shop-popover-item {\n      margin-bottom: 8px;\n      word-break: break-word;\n      &:last-child {\n        margin-bottom: 0;\n      }\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplierCenterAdmin/outrightListingRequest/dataList.vue","messages":[{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"Pager\" is not in camelCase.","line":69,"column":5,"nodeType":"Property","endLine":69,"endColumn":18}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"listing-creation-request-table pms-new-ui\">\n    <list-view\n      :dataList=\"itemList\"\n      :config=\"tableConfig\"\n      :tableSchema=\"tableSchema\"\n      @selectionChange=\"onSelectionChange\">\n      <!-- 设置按钮 -->\n      <template slot=\"end\">\n        <el-table-column width=\"20\" fixed=\"right\" class-name=\"display-options\">\n          <template slot-scope=\"scope\" slot=\"header\">\n            <options-field\n              :btnType=\"'icon'\"\n              class=\"option-field-wrapper\"\n              @fieldChange=\"displayOptionsChange\"\n              :dropdownText=\"$t('commonDisplayOptions')\"\n              :fieldList=\"fieldConfig.list || []\"\n              :defaultList=\"fieldConfig.default\"\n            ></options-field>\n          </template>\n        </el-table-column>\n      </template>\n    </list-view>\n    <!-- 分页 -->\n    <el-pagination\n      :current-page=\"Pager.pageIndex\" background layout=\"sizes, prev, pager, next\" :total.sync=\"Pager.total\"\n      :page-size=\"Pager.size\" :page-sizes=\"[10, 20, 50, 100]\"\n      @current-change=\"handleChangePageIndex\" @size-change=\"handleChangePageSize\"\n    ></el-pagination>\n  </div>\n</template>\n\n<script>\nimport ListView from '@/components/ApproveList/list';\nimport OptionsField from '@/components/ApproveList/optionsField';\nimport {\n  ListingCreationDefaultDisplayList,\n  ListingCreationDisplayFieldList,\n  ListingCreationRequestStatusList,\n  Permission\n} from '@/utils/constant';\nimport { hasPermission } from '@/utils/permission';\n\nconst StorageKey = 'pmsListingCreationDisplayFields';\n\nexport default {\n  data() {\n    const storageList = localStorage.getItem(StorageKey);\n    return {\n      tableConfig: {\n        showCheckBox: true,\n        align: 'left'\n      },\n      showTableSchemaList: storageList\n        ? JSON.parse(storageList)\n        : ListingCreationDefaultDisplayList,\n      checkedType: ''\n    };\n  },\n  components: {\n    ListView,\n    OptionsField\n  },\n  props: {\n    itemList: {\n      type: Array,\n      default: () => []\n    },\n    Pager: Object\n  },\n  methods: {\n    onSelectionChange(val) {\n      this.$emit('checked', val);\n    },\n    displayOptionsChange(list) {\n      this.showTableSchemaList = list;\n      localStorage.setItem(StorageKey, JSON.stringify(list));\n    },\n    handleChangePageIndex(index) {\n      this.$emit('getItemList', index);\n    },\n    handleChangePageSize(size) {\n      this.$emit('getItemList', 1, size);\n    },\n    rowClick(row, column) {\n      // srm/listing/detai => views/supplierCenterAdmin/outrightListingRequest/listingRequestDetail\n      // srm/outright/detail => supplierCenterAdmin/outrightListingRequest/detail\n      // 需要根据是否有权限进行跳转\n      this.$emit('rowClick');\n      if ((hasPermission(Permission.LISTING_CREATION_REQUEST_PENDING_LISTING_EDIT) && row.status === 2) ||\n        (hasPermission(Permission.LISTING_CREATION_REQUEST_EDIT_LISTING_FAILED) && row.status === 3)) {\n        this.$router.push(`/admin/srm/listing/detail/${row.request_id}`);\n      } else {\n        // 跳转到展示态\n        this.$router.push(`/admin/srm/outright/detail/${row.request_id}?isFromSupplierCatalogue=0`);\n      }\n    }\n  },\n  computed: {\n    fieldConfig() {\n      const storageList = localStorage.getItem(StorageKey);\n      return {\n        list: ListingCreationDisplayFieldList.map((item) => ({\n          ...item,\n          label: this.$t(item.label)\n        })),\n        default: storageList\n          ? JSON.parse(storageList)\n          : ListingCreationDefaultDisplayList\n      };\n    },\n    tableSchema() {\n      // 默认展示request ID，product name，shop ID/Name，category，region，application time，listing completed time, status，action。\n      // 还支持配置额外字段: variations，supplier name，vendor site ID，SBS vendor ID，requester，listing creator\n      return [\n        { field: 'request_id', label: this.$t('prRequestID'),\n          fixed: true,\n          width: '180px'\n        },\n        { field: 'item_id', label: this.$t('productId'), fixed: true,\n          render: (schema, row) => {\n            if (!row[schema['field']]) {\n              return '/';\n            } else {\n              return row[schema['field']];\n            };\n          }\n        },\n        { field: 'item_name', label: this.$t('productName'), fixed: true },\n        { field: 'shop_name', label: this.$t('commonShopIDOrName'), render: (schema, row) => `${row['shop_id']}/${row[schema.field]}` },\n        { field: 'category_name_l1', label: this.$t('commonCategory') },\n        { field: 'region', label: this.$t('commonRegion') },\n        { field: 'application_time_str', label: this.$t('applicationTime'), sortable: true },\n        { field: 'listing_completed_time_str', width: '120px', label: this.$t('listingCompletedTime') },\n        {\n          label: this.$t('Variations'),\n          field: 'tier_variation_list',\n          width: '180px',\n          render: (schema, row, index, h) => {\n            if (!(row.tier_variation_list && row.tier_variation_list.length)) return '';\n            if (row.tier_variation_list.length <= 3) {\n              return [\n                'div',\n                null,\n                row.tier_variation_list.map(item => {\n                  return h('p', null, item);\n                })\n              ];\n            } else {\n              return [\n                'div',\n                null,\n                [\n                  ...(row.tier_variation_list || []).slice(0, 3).map(item => {\n                    return h('p', null, item);\n                  }),\n                  h(\n                    'el-popover',\n                    {\n                      class: 'payment-request-list-wrapper list-popover',\n                      props: {\n                        placement: 'top',\n                        width: '200',\n                        trigger: 'click',\n                        popperClass: 'payment-request-list-wrapper list-popover'\n                      }\n                    },\n                    [\n                      h(\n                        'p',\n                        { class: 'list-popover-more', slot: 'reference' },\n                        [\n                          h(\n                            'span',\n                            { class: 'more-text' },\n                            this.$t('commonMore')\n                          ),\n                          h(\n                            'i',\n                            { class: 'down-icon el-icon-arrow-down' },\n                          )]\n                      ),\n                      ...(row.tier_variation_list || []).slice(3).map(item => {\n                        return h('p', null, item);\n                      })\n                    ]\n                  )\n                ]\n              ];\n            }\n          }\n        },\n        { field: 'supplier_name', label: this.$t('commonSupplierName') },\n        { field: 'sbs_vendor_id', label: this.$t('supplierSBSVendorID') },\n        { field: 'vendor_site_id', label: this.$t('commonVendorSiteID') },\n        { field: 'requester', label: this.$t('commonRequester') },\n        { field: 'listing_creator', label: this.$t('listingCreator') },\n        { field: 'status', label: this.$t('requestStatus'),\n          render: (schema, row) => (ListingCreationRequestStatusList.find(item => item.value === row[schema.field]) || {}).label\n        },\n        { field: 'action', label: this.$t('commonAction'), width: '100px', render: (schema, row) => ['el-button',\n          { class: 'white-blue', on: { click: () => { this.rowClick(row); } }}, this.$t('commonDetail')]\n        }\n      ].filter((item) => this.showTableSchemaList.includes(item.field)); ;\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  .listing-creation-request-table {\n    margin: -4px 18px 20px 12px;\n  }\n  .el-pagination {\n    margin-top: 14px;\n    text-align: center;\n  }\n  .select-page-dropdown {\n    padding: 0;\n    margin-left: -10px;\n  }\n</style>\n\n<style lang=\"scss\">\n  .pending-listing-creation-table, .listing-creation-request-table, .supplier-catalogue-table {\n    .list-popover-more {\n      font-family: Roboto-Regular;\n      font-size: 14px;\n      color: #3D6ED1;\n      .more-text {\n        padding-right: 5px;\n      }\n    }\n  }\n  .listing-creation-request-table {\n    .select-page-dropdown {\n      .el-button {\n        border: none;\n        background: unset;\n        padding: 0 0 0 10px;\n        &:nth-child(1) {\n          width: 20px;\n          padding-right: 16px;\n        }\n        &::before {\n          width: 0;\n        }\n      }\n    }\n    .option-field-wrapper {\n      float: none;\n    }\n    .display-options {\n      &.is-leaf {\n        background-color: rgba(0, 0, 0, 0.13);\n      }\n      .cell {\n        padding: 0;\n        text-align: center;\n      }\n    }\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplierCenterAdmin/outrightListingRequest/detail.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplierCenterAdmin/outrightListingRequest/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplierCenterAdmin/outrightListingRequest/listingCreationRequestList.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplierCenterAdmin/outrightListingRequest/listingRequestDetail.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":8,"column":78,"nodeType":"VIdentifier","messageId":"deprecated","endLine":8,"endColumn":84},{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":9,"column":62,"nodeType":"VIdentifier","messageId":"deprecated","endLine":9,"endColumn":68},{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":56,"column":86,"nodeType":"ThisExpression","endLine":56,"endColumn":90}],"errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"listing-request-detail-container pms-new-ui\" v-loading=\"pageLoading\">\n    <header class=\"create-listing-request-header\">\n      <div class=\"left-info\">\n        <i @click=\"goBack()\" class=\"el-icon-arrow-left go-back-icon\" ></i><span>{{requestId}}</span>\n      </div>\n      <div class=\"right-info\">\n        <el-button v-if=\"!isFailedStatus\" class=\"list-btn submit-btn\" @click.native=\"addProduct\">{{$t('submitNext')}}</el-button>\n        <el-button v-else class=\"list-btn submit-btn\" @click.native=\"addProduct\">{{$t('commonReSubmitAndNext')}}</el-button>\n      </div>\n    </header>\n    <!-- 失败原因 -->\n    <div class=\"fail-reason\" v-if=\"isFailedStatus\">\n      <svg-icon class=\"warning-icon\" icon-class=\"warn_red\" />\n      <span>{{formData.failReason}}</span>\n    </div>\n    <!-- Shop Info -->\n    <div class=\"form-container-info\">\n      <h3 class=\"title\">{{$t('supplierShopInformation')}}</h3>\n      <el-form label-position=\"right\" label-width=\"180px\" class=\"base-info-form is-edit\">\n        <el-form-item :label=\"`${$t('commonShop')}:`\">{{formData.shopName}}</el-form-item>\n        <el-form-item :label=\"`${$t('commonShopID')}:`\">{{formData.shopId}}</el-form-item>\n      </el-form>\n    </div>\n    <el-form class=\"srm-element-ui hideRequiredSign\" label-width=\"180px\" label-position=\"right\" ref=\"mainform\" :model=\"formData\">\n    <!-- Basic Information -->\n    <BaseInfo\n      ref=\"baseInfoForm\"\n      :isFromCreate=\"false\"\n      :scRules=\"scRules\"\n      :sourceData=\"sourceData\"\n      :categoryOptions=\"categoryOptions\"\n      :originCategoryOptions=\"originCategoryOptions\"\n      @changeCategroyList=\"changeCategroyList\"\n    />\n\n    <!-- Variations Information -->\n    <section class=\"multi-options\">\n      <h3 class=\"title\">{{$t('productsPriceAndInventory')}}</h3>\n      <multipleSKU ref=\"multipleSKU\"\n        :currency=\"currency\"\n        :config=\"multipleSKUConfig\"\n        @updateVariationImage=\"updateVariationImage\"\n        @clearVariationImage=\"clearVariationImage\"\n        @updateSpecification=\"updateSpecification\"\n        @updateTableList=\"updateTableList\"/>\n    </section>\n    <!-- 规格图 -->\n    <variation-image-uploader ref=\"variationImageUploader\" :scRules=\"scRules\" :variationList=\"specification\" :originPicList=\"variationImages\" @setPicList=\"setVariationPicList\"/>\n    </el-form>\n    <!-- Shipping  Information -->\n    <div class=\"form-container-info\">\n      <h3 class=\"title\">{{$t('shippingInformation')}}</h3>\n      <el-form label-position=\"right\" label-width=\"180px\" class=\"shipping-fee-form is-edit\">\n        <el-form-item :label=\"`${$t('shippingFee')}`\" required>\n          <shipping-fee v-loading=\"shippingFeeloading\" class=\"shipping-fee\" :region=\"this.sourceData.region\"\n            :logisticList=\"logisticList\" :priceTableData=\"priceTableData\" mode=\"edit\"></shipping-fee>\n        </el-form-item>\n      </el-form>\n    </div>\n    <!-- Other  Information -->\n    <div class=\"form-container-info\">\n      <h3 class=\"title\">{{$t('otherInformation')}}</h3>\n      <el-form label-position=\"right\" label-width=\"180px\" class=\"base-info-form is-edit\">\n        <el-form-item class=\"pre-order\" :label=\"`${$t('preOrder')}:`\">\n            <el-switch :disabled=\"!preOrderConfig.is_setting_on\" @change=\"changePreOrder\" v-model=\"formData.preOrder\" active-color=\"#13ce66\"></el-switch>\n            <section class='active-pre-order' v-if='formData.preOrder'>\n              <span>{{$t('supplier.iNeed')}}</span>\n              <el-input-number :disabled=\"!preOrderConfig.is_setting_on\" class=\"pre-order-days\" :controls=\"false\" :precision=\"0\" v-model=\"formData.item_estimated_days\"></el-input-number>\n              <span>{{$t('supplier.shipDays')}}</span><span> (between {{preOrderConfig.dts_min}} to {{preOrderConfig.dts_max}})</span>\n            </section>\n            <section class='active-pre-order full-width' v-else>\n              <span>{{$t('supplier.preOrderTips', { days: preOrderConfig.cat_non_preorder_dts})}}</span>\n            </section>\n        </el-form-item>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport BaseInfo from './baseInfo';\nimport { getListingCreationRequestDetail, getTypeRules, submitSkuCatalogue } from '@/api/listingRequest';\nimport { getCategories, getSkuCatalogueCalcFee, getPreOrderConfig, getLogistics } from '@/api/shop';\nimport { categoryTreeData } from '@/utils/treeData';\nimport ShippingFee from '../../productInfo/shippingFee';\nimport multipleSKU from './multipleSKU';\nimport variationImageUploader from './variationImageUploader';\nimport { isNumber } from '@/utils/numberUtils';\nimport { validateEnableLogistic } from '@/utils/productInfoValidate';\nimport { fetchCommonToggle } from '@/api/common';\n\nconst PreOrderDefaultDays = 3;\n\nexport default {\n  name: 'ListingRequestCreate',\n  data() {\n    return {\n      formData: {\n        failReason: '',\n        shopId: '',\n        shopName: '',\n        item_id: 0,\n        picList: [], // attributes 对应的图片\n        skuList: [], // Variations 列表\n        categroyList: [], // 选中的 categroy\n        propertiesList: [], // attributes\n        name: '',\n        description: '',\n        preOrder: false,\n        logistic_list: [],\n        is_mpq_mandatory: '',\n        min_purchase_qty: ''\n      },\n      mtime: 0,\n      sourceData: {}, // 存一份源数据\n      requestId: '',\n      categoryOptions: [], // 所有的 categroyList\n      originCategoryOptions: [], // 未被转换为tree的 categroyList\n      logisticList: [],\n      priceTableData: [], // sku列表\n      specification: [], // 规格信息\n      scRules: {}, // listing 侧返回的规则\n      variationImages: [], // 规格图\n      sizeInputLogisticIds: [],\n      total: 0,\n      pager: {\n        count: 10, // 每次查询的条数\n        page_no: 1 // 当前查询的页数，请求一次，则加1，假如没有 total，则表示已经全部查询完毕\n      },\n      sizeInputLogisticValues: {},\n      shippingFeeloading: false,\n      pageLoading: false,\n      preOrderConfig: {},\n      multipleSKUConfig: { isShowSwop: false },\n      region: ''\n    };\n  },\n  components: {\n    BaseInfo,\n    ShippingFee,\n    multipleSKU,\n    variationImageUploader\n  },\n  computed: {\n    currency() {\n      return this.$store.getters.currencyMap[this.sourceData.region];\n    },\n    enableLogistic() {\n      return (this.logisticList || []).filter(item => item.enabled);\n    },\n    // 是否是失败状态\n    isFailedStatus() {\n      return this.sourceData.request_status === 3;\n    }\n    // baseInfoFormData() {\n    //   return {\n    //     name: this.formData.name,\n    //     description: this.formData.description,\n    //     propertiesList: this.formData.propertiesList,\n    //     categroyList: this.formData.categroyList,\n    //     picList: this.formData.picList,\n    //     parentSkuId: this.formData.parentSkuId,\n    //     is_mpq_mandatory: this.formData.is_mpq_mandatory,\n    //     min_purchase_qty: this.formData.min_purchase_qty\n    //   };\n    // }\n  },\n  methods: {\n    changeCategroyList(val) {\n      this.getPreOrderSetting(val);\n    },\n    changePreOrder(value) {\n      if (value) {\n        this.formData.item_estimated_days = this.preOrderConfig.cat_non_preorder_dts || 3;\n      }\n    },\n    getPreOrderSetting(val) {\n      getPreOrderConfig({\n        shop_id: this.formData.shopId,\n        region: this.sourceData.region,\n        category_ids: val ? val.join(',') : this.formData.categroyList.join(',')\n      }).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.preOrderConfig = resp.data || {};\n          if (!resp.data.is_setting_on && this.formData.preOrder) {\n            this.formData.preOrder = false; // 设置开关值\n            this.formData.item_estimated_days = PreOrderDefaultDays; // 这个直接等于3\n          }\n        }\n      }).catch(() => {\n        this.$message.error('Get Pre Order Setting Failed!');\n        this.preOrderConfig = {};\n      });\n    },\n    isSizeInput(item) {\n      return item.fee_type === 'SIZE_INPUT';\n    },\n    // TODO:这里的校验，可以考虑优化\n    checkFormData() {\n      // check base info\n      const baseInfoForm = this.$refs['baseInfoForm'];\n      const validateBaseInfo = (baseInfoForm && baseInfoForm.checkComponentFormData()) || {};\n      if (validateBaseInfo.isPass) {\n        this.setBaseInfoFormData(validateBaseInfo.formData || {});\n      } else {\n        return false;\n      }\n      // check images\n      if (this.formData.picList.length < (this.scRules.imageLimit || 0)) { // SRM 1.0 优化\n        this.$message.error(this.$tc('uploadExceedAtLeast', 0, { num: this.scRules.imageLimit || 0 }));\n        return false;\n      }\n      if (!this.checkSkuList() || this.hasTheSameSupplierSKU() || this.hasTheSameSpecification() || !this.checkVariationImages()) {\n        return false;\n      }\n      // 这里要对规格列表进行校验，不能有空值！\n      if (!this.checkSpecification()) {\n        return false;\n      }\n      // 校验物流信息\n      const errorEnableLogistic = validateEnableLogistic(this.enableLogistic);\n      if (errorEnableLogistic) {\n        this.$message.error(errorEnableLogistic);\n        return false;\n      }\n      return true;\n    },\n    checkAndGetPreOrder(params) {\n      // 根据后台返回的结果进行判断校验和取值\n      const daysShip = Number(this.formData.item_estimated_days);\n      const { dts_min = 0, dts_max = 0 } = this.preOrderConfig;\n      if (params.item_is_pre_order && (daysShip >= dts_min && daysShip <= dts_max)) {\n        params.item_estimated_days = daysShip;\n      } else if (params.item_is_pre_order) {\n        this.$message.error(`Days to ship should be from ${dts_min} to ${dts_max} `);\n        return false;\n      } else if (!params.item_is_pre_order) {\n        params.item_estimated_days = this.preOrderConfig.cat_non_preorder_dts;\n      }\n      return true;\n    },\n    checkSpecification() {\n      const nameIsPass = this.specification.every(item => item.name);\n      const valueIsPass = this.specification.every(item => {\n        return item.options.every(option => {\n          return option.name;\n        });\n      });\n      if (!nameIsPass) {\n        this.$message.error(this.$t('variationNameRequired'));\n        return false;\n      }\n      if (!valueIsPass) {\n        this.$message.error(this.$t('variationValueRequired'));\n        return false;\n      }\n      return true;\n    },\n    // 检测规格图片\n    checkVariationImages() {\n      // true -- pass ,false -- not pass\n      // 有规格情况，规格图片数要么为0，要么等于规格1的数目\n      if (this.specification.length > 0 && this.variationImages.length > 0 && this.specification[0].options.length !== this.variationImages.length) { // 有规格的情况\n        this.$message.error(this.$t('applicationVariationImageErrorTip'));\n        return false;\n      }\n      return true; // 无规格的情况\n    },\n    // 检测是否有重复的 SKu\n    hasTheSameSupplierSKU() {\n      const supplierSkuList = this.formData.skuList.map(item => item.supplier_sku_id);\n      if (new Set(supplierSkuList).size !== supplierSkuList.length) {\n        this.$message.error(this.$t('productTableTheSameSkuTip') + this.$t('tableCommonSupplierSKUID'));\n        return true;\n      }\n      return false;\n    },\n    // 检测是否有相同的规则名称或者值\n    hasTheSameSpecification() {\n      const { specification } = this;\n      const specificationNames = specification.map(item => item.name);\n      const specificationOptions = specification.map(item => item.options);\n      // check if has the same name\n      if (new Set(specificationNames).size !== specificationNames.length) {\n        this.$message.error(this.$t('repeatSpKey'));\n        return true;\n      }\n      const hasTheSameOption = specificationOptions.find(options => {\n        return new Set(options).size !== options.length;\n      });\n      if (hasTheSameOption) {\n        this.$message.error(this.$t('repeatSpValue'));\n        return hasTheSameOption;\n      }\n    },\n    // 检测 SKu\n    checkSkuList() {\n      // true -- pass ,false -- not pass\n      // 不能没有数据\n      if (this.formData.skuList.length < 1) {\n        this.resetSkuList();\n        this.$message.error(this.$t('productTableRequiredTip'));\n        return false;\n      }\n      this.formData.skuList.forEach(item => {\n        item.isCreateRow = false; // 提交过后，就不是刚创建的了\n      });\n      // 数据有没有空或者不是数字\n      const hasErrorSkuList = this.formData.skuList.find(item => {\n        return this.checkTableDatas(item);\n      });\n      if (hasErrorSkuList) {\n        this.$message.error(this.$t('productTableErrorTip'));\n        return false;\n      }\n      return true;\n    },\n    checkTableDatas(tableItem) {\n      const notEmptyAttributes = ['supplier_sku_id', 'recommended_retail_price', 'length', 'width', 'height', 'net_weight'];\n      const mustNumberAttributes = ['recommended_retail_price', 'length', 'width', 'height', 'net_weight'];\n      const hasOneOfEmptyStr = notEmptyAttributes.some(key => {\n        return tableItem[key] === '';\n      });\n      const hasOneOfNotNumber = mustNumberAttributes.some(key => {\n        return !isNumber(tableItem[key]);\n      });\n      return hasOneOfEmptyStr || hasOneOfNotNumber;\n    },\n    setBaseInfoFormData(value) {\n      const baseInfoProperties = [\n        'categroyList', 'propertiesList', 'global_brand', 'name', 'description', 'picList', 'parentSkuId', 'is_mpq_mandatory', 'min_purchase_qty'\n      ];\n      baseInfoProperties.forEach(item => {\n        this.formData[item] = value[item];\n      });\n    },\n    async addProduct() {\n      if (!this.checkFormData()) return;\n      this.$refs.mainform.validate(async(isValid) => {\n        if (isValid) {\n          try {\n            // 获取排序后的图片url\n            if (this.formData.picList.some(item => item.realSrc === '')) {\n              return this.$message.warning(this.$t('uploadingImageTips'));\n            }\n            const images = [];\n            for (let i = 0; i < this.formData.picList.length; i++) {\n              images[i] = this.formData.picList[i].realSrc;\n            }\n            const item_models = this.formData.skuList.map(item => ({\n              model_id: item.model_id,\n              id: item.id,\n              sku_tier_index: item.sku_tier_index,\n              supplier_sku_id: item.supplier_sku_id,\n              recommended_retail_price: parseFloat(item.recommended_retail_price),\n              length: parseFloat(item.length),\n              width: parseFloat(item.width),\n              height: parseFloat(item.height),\n              net_weight: parseInt(item.net_weight),\n              swop: item.swop,\n              selling_type: item.selling_type\n            }));\n            const tier_variation_list = this.specification.map((item, index) => {\n              const obj = {\n                name: item.name,\n                options: item.options.map(opt => opt.name),\n                images: this.variationImages.map(item => item.src)\n              };\n              if (index === 1) {\n                obj.images = [];\n              }\n              return obj;\n            });\n            // 传递给接口的参数格式\n            const submitData = {\n              region: this.sourceData.region,\n              shop_id: this.sourceData.shop_id,\n              request_id: this.requestId,\n              requester: this.sourceData.requester,\n              item_id: this.formData.item_id || 0,\n              parent_sku_id: this.formData.parentSkuId,\n              item_name: this.formData.name,\n              item_description: this.formData.description,\n              category_id_l1_list: this.formData.categroyList,\n              global_brand: this.formData.global_brand || {},\n              attribute_list: this.formData.propertiesList || [],\n              model_list: item_models,\n              images: images,\n              tier_variation_list,\n              logistic_list: this.logisticList.map(item => ({\n                ...item,\n                shipping_fee: Math.round(Number(item.shipping_fee)) || 0,\n                size_id: item.size_id || 0,\n                is_enabled: Number(item.enabled),\n                cover_shipping_fee: Number(item.cover_shipping_fee),\n                has_set: Number(item.enabled) ? 1 : 0 // 只要开关打开过，就认为是操作过\n              })),\n              item_is_pre_order: Number(this.formData.preOrder),\n              min_purchase_qty: this.formData.min_purchase_qty || null,\n              mtime: this.mtime\n            };\n            if (!this.checkAndGetPreOrder(submitData)) {\n              return;\n            }\n            this.pageLoading = true;\n            submitSkuCatalogue(submitData).then((resp) => {\n              if (resp.retcode !== 0) {\n                this.$message.error(resp.info);\n              } else {\n                this.$message.success('success');\n                if (resp.data.next_id) {\n                  this.$router.push(`/admin/srm/listing/detail/${resp.data.next_id}`);\n                } else {\n                  this.$router.push({ name: 'outrightListingRequest', query: {\n                    activeTab: 'pendingListingCreation'\n                  }});\n                }\n                this.$router.go(0);\n              }\n            }).catch(() => {}).finally(() => {\n              this.pageLoading = false;\n            });\n          } catch (e) {\n          }\n        }\n      });\n    },\n    // 设置规格图\n    setVariationPicList(picList) {\n      this.variationImages = picList.map(item => ({ src: item.realSrc, name: item.name }));\n    },\n    goBack() {\n      this.$router.back();\n    },\n    // 获取 sku catalogue 详情\n    getListingCreationRequestDetail() {\n      this.pageLoading = true;\n      getListingCreationRequestDetail({ request_id: this.requestId }).then((resp) => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.message || resp.info);\n        } else {\n          this.sourceData = JSON.parse(JSON.stringify(resp.data.listing_request));\n          this.setFormDataFromAPI(resp.data.listing_request);\n          this.region = resp.data.listing_request.region;\n        }\n      }).catch(() => {}).finally(() => {\n        this.pageLoading = false;\n        this.fetchCommonToggle({ key: 'swop' });\n      });\n    },\n    // 获取 listing 校验规则\n    getTypeRules(shop_id) {\n      if (!shop_id) { return; }\n      getTypeRules({ shop_id }).then((resp) => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.message || resp.info);\n        } else {\n          const data = resp.data;\n          this.scRules = {\n            titleCharacterBlacklist: data.title_character_blacklist, // 字符黑名单\n            titleMin: data.title_length_min, // 名称最小个数\n            titleMax: data.title_length_max, // 名称最大个数\n            descMin: data.description_length_min, // 描述最短字符长度\n            descMax: data.description_length_max, // 描述最长字符长度\n            imageLimit: data.image_num_min, // 数量最小\n            imageHeight: data.image_height_min, // 高度\n            imageWidth: data.image_width_min, // 图片宽度\n            cateBlacklist: data.category_blacklist, // 种类黑名单\n            brandBlacklist: data.brand_blacklist // 品牌黑名单\n          };\n        }\n      }).catch(err => {\n        this.$message.error(err);\n      });\n    },\n    // 更新规格图片\n    updateVariationImage(spIdx) {\n      this.$refs.variationImageUploader && typeof this.$refs.variationImageUploader.deletePic === 'function' && this.$refs.variationImageUploader.deletePic(spIdx);\n    },\n    // 清空规格图片\n    clearVariationImage() {\n      this.$refs.variationImageUploader && typeof this.$refs.variationImageUploader.resetPicList === 'function' && this.$refs.variationImageUploader.resetPicList();\n    },\n    // 更新规格信息\n    updateSpecification(specification) {\n      this.specification = specification;\n      if (this.specification.length === 0) {\n        this.resetSkuList();\n      }\n    },\n    // 清空规格信息\n    resetSkuList() {\n      this.$nextTick(() => {\n        this.formData.skuList = [\n          {\n            model_id: 0,\n            id: 0,\n            supplier_sku_id: '',\n            original_price: '', // 建议售价\n            barcode: '',\n            length: '',\n            width: '',\n            height: '',\n            net_weight: '',\n            lifecycle: '',\n            sku_tier_index: [],\n            isCreateRow: true,\n            isOldSku: false,\n            swop: 0\n          }\n        ];\n        const multipleSKUComp = this.$refs.multipleSKU;\n        if (multipleSKUComp && typeof multipleSKUComp.setTableList === 'function') {\n          multipleSKUComp.setTableList(this.formData.skuList);\n        }\n      });\n    },\n    updateTableList(skuList) {\n      this.formData.skuList = skuList;\n    },\n    async setFormDataFromAPI(data) {\n      // 处理 baseInfo 中的图片\n      if (Array.isArray(data.image_list)) {\n        this.formData.picList = data.image_list.map((imageUrl, i) => ({\n          key: i,\n          src: imageUrl,\n          realSrc: imageUrl,\n          seen: 'visible' }));\n      }\n      // 处理规格\n      this.specification = (data.tier_variation_list || []).map((tier, index) => {\n        const opt = {\n          name: tier.name,\n          options: (tier.options || []).map((item, itemIndex) => {\n            return {\n              name: item\n            };\n          })\n        };\n        if (tier.images && tier.images.length > 0) {\n          this.variationImages = tier.images.map((src, index) => {\n            return { src, name: tier.options[index] };\n          }) || [];\n        }\n        return opt;\n      });\n      // 处理规格图片\n      if (Array.isArray(this.variationImages) && this.variationImages.length > 0) {\n        this.$nextTick(() => {\n          this.$refs.variationImageUploader && this.$refs.variationImageUploader.setPicListFromFetch(this.variationImages);\n        });\n      }\n      // isOldSku: true, isCreateRow: true 这个 PMS 侧应该是不需要用到的？\n      this.formData.skuList = (data.model_list || []).map(model => {\n        const tier_name_model = this.formatTier(model.sku_tier_index);\n        return Object.assign({ isOldSku: true, isCreateRow: true }, tier_name_model, model);\n      });\n\n      const multipleSKUComp = this.$refs.multipleSKU;\n      if (multipleSKUComp) {\n        if (typeof multipleSKUComp.setTableList === 'function') {\n          multipleSKUComp.setTableList(this.formData.skuList);\n        }\n        if (typeof multipleSKUComp.setSpecification === 'function') {\n          multipleSKUComp.setSpecification(this.specification);\n        }\n      }\n\n      // 处理category，attributes\n      const categroyList = data.category_ids;\n      this.formData.categroyList = categroyList;\n      this.formData.propertiesList = data.attribute_list;\n      this.formData.global_brand = data.global_brand;\n\n      // 一些基础值\n      this.formData.name = data.item_name;\n      this.formData.description = data.item_description;\n      this.formData.item_id = data.item_id;\n      this.formData.shopId = data.shop_id;\n      this.formData.shopName = data.shop_name;\n      this.formData.parentSkuId = data.parent_sku_id;\n      this.formData.preOrder = Boolean(data.item_is_pre_order);\n      this.formData.failReason = data.reject_remark;\n\n      // mpq信息\n      this.formData.is_mpq_mandatory = data.is_mpq_mandatory;\n      this.formData.min_purchase_qty = data.min_purchase_qty;\n\n      // 增加给后台的回参\n      this.mtime = data.mtime;\n\n      // 物流信息\n      this.formData.logistic_list = data.logistic_list;\n\n      this.priceTableData = (data['model_list'] || []).map(item => {\n        const spOption = this.formatTier(item.sku_tier_index);\n        return Object.assign({ tier_index: item.sku_tier_index || [] }, spOption, item);\n      });\n      // 获取物流信息\n      this.getLogistic();\n      this.shopId = data.shop_id;\n      this.getTypeRules(data.shop_id);\n      this.getCategoryOptions(data.region);\n\n      this.$refs['baseInfoForm'].initFormFields(this.formData, {region: data.region});\n    },\n    isFixedPrice(item) {\n      return item.fee_type === 'FIXED_DEFAULT_PRICE';\n    },\n    formatTier(tierIndexList = []) {\n      let n = 0;\n      const result = {};\n      if (this.specification.length > 0 && Array.isArray(tierIndexList)) {\n        tierIndexList.forEach((tie) => {\n          if (n === 0) {\n            result.spOneValue = this.specification[n].options[tie].name;\n            n++;\n          } else if (n === 1) {\n            result.spTwoValue = this.specification[n].options[tie].name;\n          }\n        });\n      }\n      return result;\n    },\n    getLogistic() {\n      const shop_id = this.formData.shopId;\n      if (!shop_id) {\n        this.formData.logistic_list = [];\n        this.logisticList = [];\n        return;\n      }\n      getLogistics({ shop_id }).then(async resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          // formData 中的 logistic_list，该商品配置了哪些物流，是否打开\n          const originLogistics = this.formData.logistic_list || [];\n          this.logisticList = (resp.data.logistics || []).filter(item => item.enabled).map(item => {\n            const originLogistic = originLogistics.find(logistic => logistic.logistic_id === item.logistic_id);\n            if (!originLogistic) {\n              item.enabled = false;\n              item.cover_shipping_fee = false;\n              item.has_set = false;\n            } else if (item.enabled) {\n              item.enabled = Boolean(originLogistic.is_enabled);\n              item.cover_shipping_fee = Boolean(originLogistic.cover_shipping_fee);\n              item.shipping_fee = Math.round(originLogistic.shipping_fee);\n              item.has_set = originLogistic.has_set;\n            }\n            // 若渠道id =x9999（x=1，2，3，4，5，7，8，9）时，I will cover the shipping fee默认勾选，且不允许去掉勾选\n            const coverRegex = /^[1|2|3|4|5|7|8|9](9999)$/;\n            if (coverRegex.test(item.logistic_id)) {\n              item.cover_shipping_fee = true;\n              this.$set(item, 'cannotChangeCoverShippingFee', true);\n            }\n            // FIXED_DEFAULT_PRICE 类型的话，将 detault_price 作为 shipping_fee\n            if (this.isFixedPrice(item)) {\n              item.shipping_fee = Math.round(item.default_price);\n            }\n            if (this.isSizeInput(item)) {\n              // 获取到所有的 Size Input 类型的 ids\n              this.sizeInputLogisticIds.push(item.logistic_id);\n            }\n            return item;\n          });\n          if (this.sizeInputLogisticIds.length) {\n            // 获取 Size Input 的 Fee\n            this.total = Math.ceil(this.sizeInputLogisticIds.length / this.pager.count);\n            this.shippingFeeloading = true;\n            await this.getSizeInputFee();\n            this.computedSizeInputFee();\n          }\n          this.getPreOrderSetting();\n        }\n      }).catch(() => {\n        this.$message.error('Get Logistics Failed!');\n        this.logisticList = [];\n      });\n    },\n    computedSizeInputFee() {\n      const allSizeInputIds = Object.keys(this.sizeInputLogisticValues);\n      this.logisticList = this.logisticList.map(item => {\n        if (allSizeInputIds.includes(item.logistic_id.toString())) {\n          item.shipping_fee = Math.round(this.sizeInputLogisticValues[item.logistic_id]);\n          return item;\n        } else {\n          return item;\n        }\n      });\n    },\n    async getSizeInputFee() {\n      // 由于后端查询时间时间较长，需要分页查询\n      const startIndex = (this.pager.page_no - 1) * this.pager.count;\n      const logisticIds = this.sizeInputLogisticIds.slice(startIndex, startIndex + this.pager.count);\n      const params = {\n        request_id: this.requestId,\n        shop_id: this.sourceData.shop_id,\n        logistic_ids: logisticIds,\n        region: this.sourceData.region\n      };\n      const result = await getSkuCatalogueCalcFee(params);\n      if (result.retcode !== 0) {\n        this.$message.error(result.message || result.info);\n        this.shippingFeeloading = false;\n      } else {\n        // 统计结果\n        this.sizeInputLogisticValues = {\n          ...this.sizeInputLogisticValues,\n          ...result.data.logistic_fee_map\n        };\n        this.pager.page_no++;\n        // 如果总总数大于等于当前页面，则接着请求。否则结束\n        if (this.total >= this.pager.page_no) {\n          await this.getSizeInputFee();\n        } else {\n          this.shippingFeeloading = false;\n        }\n      }\n    },\n    // 获取 Category 选项\n    getCategoryOptions(region) {\n      getCategories({ country: region, use_global: 1, cs_status_list: 1 }).then(({ data: { categories }}) => {\n        const allCategoriesOptions = categories || [];\n        const res = categoryTreeData(allCategoriesOptions, {\n          key: 'category_id'\n        });\n        this.categoryOptions = res;\n        this.originCategoryOptions = allCategoriesOptions;\n      }).catch(() => {});\n    },\n    async fetchCommonToggle(params) {\n      try {\n        const { data: { value = {} }, retcode, message } = await fetchCommonToggle(params);\n        if (retcode !== 0) {\n          this.$message.error(`Fetch Swop Toggle ${message}`);\n          return;\n        }\n        this.multipleSKUConfig.isShowSwop = (value || {})[this.region];\n      } catch (e) {\n        this.$message.error(`Fetch Swop Toggle ${e}`);\n      }\n    }\n  },\n  created() {\n    this.requestId = this.$route.params.id;\n    this.getListingCreationRequestDetail();\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.listing-request-detail-container {\n  .el-dialog__title {\n    font-family: Helvetica-Bold;\n    font-size: 18px;\n    color: #333333;\n  }\n  .expected-listing-shop {\n    margin-top: 20px;\n    .el-input__inner:focus {\n      outline: none;\n    }\n    .el-input__inner {\n      width: 240px;\n      background: #FFFFFF;\n      border: 1px solid #E5E5E5;\n      border-radius: 4px;\n    }\n  }\n  .multi-options .title {\n    font-weight: 700;\n    font-size: 16px;\n    color: rgba(0,0,0,0.85);\n    line-height: 30px;\n  }\n  .shipping-fee-form {\n    margin-top: 20px;\n    .logistic-card {\n      margin-top: 0px;\n      margin-left: 0px;\n    }\n  }\n  .specification-form {\n    input.el-input__inner::placeholder {\n      font-size: 12px;\n    }\n  }\n}\n</style>\n\n<style lang=\"scss\" scoped>\n.listing-request-detail-container {\n  margin: 10px 40px 10px 20px;\n  .fail-reason {\n    margin: 10px 0;\n    width: 100%;\n    background: #FFF1F0;\n    border-radius: 4px;\n    padding: 10px;\n    font-family: Helvetica;\n    font-size: 14px;\n    color: #555555;\n    .warning-icon {\n      margin-left: 20px;\n    }\n  }\n  .active-pre-order {\n    display: inline-block;\n    margin-left: 20px;\n  }\n  .pre-order-days {\n    width: 70px;\n    margin: 0 5px;\n  }\n  .create-listing-request-header {\n    position: sticky;\n    top: 0px;\n    padding: 10px 0;\n    border-bottom: 2px solid #EDEEF2;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-bottom: 20px;\n    background-color: #fff;\n    z-index: 4;\n  }\n  .right-info .submit-btn {\n    background: #3D6ED1;\n    border-radius: 2px;\n    border-color: #3D6ED1;\n    color: #FFFFFF;\n    font-family: Helvetica;\n    font-size: 14px;\n  }\n  .left-info {\n    font-family: Helvetica;\n    font-size: 24px;\n    color: #333333;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplierCenterAdmin/outrightListingRequest/massCreateSelectShop.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplierCenterAdmin/outrightListingRequest/mpqTable.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplierCenterAdmin/outrightListingRequest/multipleSKU.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplierCenterAdmin/outrightListingRequest/pendingListingCreationList.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplierCenterAdmin/outrightListingRequest/productSkuTable.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplierCenterAdmin/outrightListingRequest/searchForm.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":2,"column":56,"nodeType":"VIdentifier","messageId":"deprecated","endLine":2,"endColumn":62}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-form class=\"listing-product-search-form\" @submit.native.prevent=\"onSearch\">\n    <div class=\"search-form-row\">\n      <el-form-item v-for=\"schema in schemaList\" :key=\"schema.field\"\n        :class=\"getColLongClass(schema.field)\" :label=\"schema.label\">\n        <pms-form-item @input=\"modifyForm\" :renderData=\"{ schema, form }\"></pms-form-item>\n      </el-form-item>\n    </div>\n    <el-row class=\"action-row\">\n      <el-form-item class=\"right-action-btn\">\n        <div class=\"list-btn search-btn\" @click=\"onSearch\">{{$t(\"rule.search\")}}</div>\n        <div class=\"list-btn clear-btn\" @click=\"onReset\">{{$t(\"purchaseRequest.clear\")}}</div>\n        <el-button native-type=\"submit\" class=\"hidden-btn\"></el-button>\n      </el-form-item>\n    </el-row>\n  </el-form>\n</template>\n\n<script>\nimport PMSFormItem, { getSelectOptions } from '@/components/BaseItem/formItem';\nimport { ListingCreationRequestStatusList, NewProductOptions } from '@/utils/constant';\nimport { getSupplierList } from '@/api/supplier';\nimport { getCategoryList } from '@/api/userRole';\nimport { getShopListByIdOrName } from '@/api/shopConfig';\n\nexport default {\n  data() {\n    return {\n      categoryList: [],\n      showSearchFieldArr: []\n    };\n  },\n  props: {\n    form: {\n      type: Object,\n      required: true\n    },\n    isFromPendingListing: {\n      required: false,\n      type: Boolean,\n      default: false\n    }\n  },\n  components: {\n    'pms-form-item': PMSFormItem\n  },\n  watch: {\n    form: {\n      handler(newName, oldName) {\n        this.showSearchFieldArr = Object.keys(newName);\n      },\n      immediate: true,\n      deep: true\n    },\n    'form.region': {\n      handler(newVal, oldVal) {\n        if (newVal) {\n          this.onSelectChange('region', newVal);\n        } else {\n          this.categoryList = [];\n          this.$set(this.form, 'category_id_l1_list', []);\n          this.onSearch();\n        }\n      },\n      immediate: true\n    }\n  },\n  computed: {\n    isUniversalUser() {\n      return this.$store.getters.isUniversalUser;\n    },\n    regionList() {\n      return [{ label: 'All', value: '' }, ...this.$store.getters.countrySelectList || []];\n    },\n    countryList() {\n      return [...new Set([...this.$store.getters.countryList.map(item => item.country)])];\n    },\n    schemaList() {\n      return [\n        { field: 'region', type: 'select', label: this.$t('commonRegion'),\n          on: {\n            change: (value) => {\n              this.onSearch();\n            }\n          },\n          defaultValue: !this.isUniversalUser ? this.$store.getters.country : '',\n          props: { disabled: !this.isUniversalUser, clearable: true, placeholder: 'Please Select' },\n          getChildren: (h) => getSelectOptions(this.regionList, h)\n        },\n        { field: 'shop_id', type: 'autocomplete', labelWidth: '216px', width: 8,\n          label: `${this.$t('commonShopIDOrName')}`,\n          on: {\n            blur: this.onShopBlur,\n            select: this.onShopSelect\n          },\n          props: {\n            placeholder: 'Please Input',\n            'trigger-on-focus': false,\n            'value-key': 'value',\n            'fetch-suggestions': (value, callback) => this.getShopIdNames(value, callback)\n          }\n        },\n        { field: 'vendor_site_id', type: 'autocomplete', labelWidth: '216px', width: 8,\n          label: `${this.$t('backMargin.vendorSiteID')}/${this.$t('purchaseRequest.supplierName')}`,\n          on: {\n            blur: this.onSupplierBlur,\n            select: this.onSupplierSelect\n          },\n          'class': {\n            'long-col': true\n          },\n          props: {\n            placeholder: 'Please Input',\n            'trigger-on-focus': false,\n            'value-key': 'value',\n            'fetch-suggestions': (value, callback) => this.getSuppliers(value, callback)\n          }\n        },\n        { field: 'category_id_l1_list', type: 'select', label: this.$t('commonCategoryName'),\n          getChildren: (h) => getSelectOptions(this.categoryList, h),\n          props: {\n            multiple: true,\n            collapseTags: true\n          },\n          attrs: { placeholder: 'please select a region first' },\n          on: { change: () => this.onSearch() }\n        },\n        { field: 'status', type: 'select', label: this.$t('commonStatus'),\n          getChildren: (h) => {\n            let options = [];\n            if (this.isFromPendingListing) {\n              options = ListingCreationRequestStatusList.filter(item => item.value !== 1);\n            } else {\n              options = ListingCreationRequestStatusList;\n            }\n            return getSelectOptions(options, h);\n          },\n          on: { change: () => this.onSearch() }\n        },\n        { field: 'item_id', type: 'input', label: this.$t('productId'),\n          attrs: {\n            placeholder: 'Please Input'\n          }\n        },\n        { field: 'request_id', type: 'input', label: this.$t('commonRequestID'),\n          attrs: {\n            placeholder: 'Please Input'\n          }\n        },\n        { field: 'requester', type: 'input', label: this.$t('commonRequester'),\n          attrs: {\n            placeholder: 'Please Input'\n          }\n        },\n        { field: 'listing_creator', type: 'input', label: this.$t('listingCreator'),\n          attrs: {\n            placeholder: 'Please Input'\n          }\n        },\n        { field: 'listing_completed_date', type: 'date-picker', label: this.$t('listingCompletedDate'),\n          props: {\n            type: 'daterange',\n            rangeSeparator: 'to',\n            startPlaceholder: 'Begin',\n            endPlaceholder: 'End',\n            placeholder: 'Please Select',\n            valueFormat: 'yyyy-MM-dd'\n          }\n        }, { field: 'is_new', type: 'select', label: this.$t('newProduct'),\n          getChildren: (h) => getSelectOptions(NewProductOptions, h),\n          on: { change: () => this.onSearch() }\n        }\n      ].filter(item => this.showSearchFieldArr.includes(item.field));\n    }\n  },\n  methods: {\n    onSelectChange(field, value) {\n      if (field !== 'region') return;\n      // const categoryID = this.schemaList.find(schema => schema.field === 'request_id');\n      if (value) {\n        getCategoryList({ catids: 0, country: value }).then(catResp => {\n          if (catResp.status !== 0) {\n            this.$message.error(catResp.info);\n          } else {\n            this.categoryList = catResp.data.cats || [];\n            this.categoryList = this.categoryList.map(item => {\n              return {\n                label: item.display_name,\n                value: item.catid\n              };\n            });\n          }\n        });\n      }\n    },\n    getColLongClass(field) {\n      const longFieldArr = ['listing_completed_date', 'shop_id', 'vendor_site_id', 'category_id_l1_list'];\n      return longFieldArr.includes(field) ? 'long-col' : '';\n    },\n    modifyForm(schema, value) {\n      this.$emit('modify', schema.field, value);\n    },\n    onSearch() {\n      this.$emit('search');\n    },\n    onReset() {\n      this.schemaList.forEach(schema => {\n        this.$emit('modify', schema.field, schema.defaultValue === null ? undefined : schema.defaultValue || '');\n      });\n      this.$emit('reset');\n    },\n    getShopIdNames(query, callback) {\n      if (query !== '') {\n        const params = {\n          search_type: 0,\n          shop_id_or_name: query,\n          page_no: 1,\n          count: 20\n        };\n        getShopListByIdOrName(params).then(res => {\n          if (res && res.retcode === 0) {\n            let shopListFilterCountry = res.data.shop_list;\n            if (this.form.region) {\n              shopListFilterCountry = res.data.shop_list.filter(item => item.country === this.form.region);\n            }\n            return callback(shopListFilterCountry.map(item => ({ value: `${item.shop_id} / ${item.shop_name}`, label: `${item.shop_id}_${item.shop_name}` })) || []);\n          } else {\n            this.$message.error(res.info);\n          }\n        }).catch(e => {\n          this.$message.error(e);\n        });\n      }\n    },\n    getSuppliers(value, callback) {\n      const params = { pageno: 1, count: 20, key: `${value}`.trim(), approval_country: this.countryList.join('_') };\n      getSupplierList(params).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          const { list = [] } = resp.data || {};\n          if (Array.isArray(list) && list.length) {\n            return callback(list.map(item => ({ ...item, value: `${item.supplier_id} / ${item.name}` })));\n          } else {\n            this.$message.error('This Supplier ID is not exist');\n          }\n        }\n        callback([]);\n      }).catch(() => {\n        this.$message.error('Get Supplier Failed');\n        callback([]);\n      });\n    },\n    onShopBlur() {\n      if (this.form.cacheShopId !== this.form.shop_id) {\n        this.$emit('modify', 'cacheShopId', '');\n        this.$emit('modify', 'shop_id', '');\n      }\n    },\n    onShopSelect(item) {\n      this.$emit('modify', 'cacheShopId', item.shop_id);\n      this.$emit('modify', 'shop_id', item.value);\n      this.$emit('search');\n    },\n    onSupplierBlur() {\n      if (this.form.cacheSupplier !== this.form.vendor_site_id) {\n        this.$emit('modify', 'cacheSupplier', '');\n        this.$emit('modify', 'vendor_site_id', '');\n      }\n    },\n    onSupplierSelect(item) {\n      this.$emit('modify', 'cacheSupplier', item.vendor_site_id);\n      this.$emit('modify', 'vendor_site_id', item.value);\n      this.$emit('search');\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  .listing-product-search-form {\n    margin: 22px 18px 20px 19px;\n    .el-col {\n      height: 58px;\n      line-height: 58px;\n    }\n    .search-form-row {\n      display: grid;\n      grid-auto-flow: row dense;\n      grid-gap: 12px;\n      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n      margin-bottom: 20px;\n    }\n    .long-col {\n      grid-column-start: span 2;\n    }\n    .action-row {\n      margin: -16px -4px -18px 0;\n    }\n    .right-action-btn {\n      float: right;\n      width: 154px;\n      height: 36px;\n      overflow: hidden;\n      .search-btn {\n        background: #3D6ED1;\n        border-radius: 2px;\n      }\n      .clear-btn {\n        color: #3D6ED1;\n        border: 1px solid #3D6ED1;\n        border-radius: 2px;\n      }\n      .hidden-btn {\n        margin-left: -10px;\n        padding: 0;\n        width: 0;\n        height: 0;\n        visibility: hidden;\n      }\n    }\n  }\n</style>\n\n<style lang=\"scss\">\n  .listing-product-search-form {\n    input.el-range-input {\n      background: #ffffff;\n      border: none;\n    }\n    .el-date-editor--daterange {\n      vertical-align: 0px;\n    }\n    .el-input__inner:focus {\n      outline: none;\n    }\n    .el-form-item__label, .el-form-item__content {\n      display: inline-block;\n    }\n    .el-form-item__label {\n      background: #FAFBFD;\n      border-radius: 3px 0 0 3px;\n      // font-family: Roboto-Regular;\n      font-size: 14px;\n      color: #222933;\n      padding: 0 8px;\n      border: 1px solid #E2E6EC;\n      height: 32px;\n      line-height: 32px;\n    }\n    .el-form-item__content {\n      line-height: 32px;\n      border-left: none;\n      flex: 1;\n    }\n    .el-input__inner {\n      background: #FFFFFF;\n      border: 1px solid #E2E6EC;\n      border-radius: 0 4px 4px 0;\n      border-left: none;\n      padding-left: 8px;\n    }\n    input::placeholder {\n      font-family: Roboto-Regular;\n      font-size: 14px;\n      color: #B5BBC6;\n    }\n    .el-form-item {\n      display: flex;\n      margin-bottom: 0px;\n    }\n  }\n  .outright-listing-request-list .listing-product-search-form {\n    .el-autocomplete {\n      width: 100%;\n    }\n    .el-input__inner {\n      height: 32px;\n    }\n    .el-date-editor.el-input, .el-date-editor.el-input__inner {\n      width: 100%;\n    }\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplierCenterAdmin/outrightListingRequest/selectShopes.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplierCenterAdmin/outrightListingRequest/supplierCatalogueList.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplierCenterAdmin/outrightListingRequest/variationImageUploader.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplierCenterAdmin/productApplication/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplierCenterAdmin/supplierAccounts/index.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":5,"column":56,"nodeType":"VIdentifier","messageId":"deprecated","endLine":5,"endColumn":62},{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":135,"column":109,"nodeType":"ThisExpression","endLine":135,"endColumn":113}],"errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"pms-ui\">\n    <div class=\"accounts-title\">{{$t('supplierCenterAccount')}}</div>\n    <el-main>\n      <el-form ref=\"form\" inline :model=\"form\" @submit.native.prevent='onBarSearch'>\n        <el-form-item :label=\"$t('purchaseOrder.supplierIdOrName')\">\n          <el-input v-model=\"form.supplier_key\" clearable></el-input>\n        </el-form-item>\n        <el-form-item :label=\"`${$t('purchaseRequest.region')}:`\">\n          <el-select v-model=\"form.country\" @change=\"onBarSearch\">\n            <el-option\n              label=\"All\"\n              value=\"\">\n            </el-option>\n            <el-option\n              v-for=\"item in countryList\"\n              :key=\"item\"\n              :label=\"item\"\n              :value=\"item\">\n            </el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item :label=\"$t('supplier.accountEmail')\" prop=\"email\" clearable>\n          <el-input v-model=\"form.email\" clearable></el-input>\n        </el-form-item>\n        <el-form-item :label=\"$t('supplierCenterUserRole')\">\n          <el-select v-model=\"form.user_type\" @change=\"onBarSearch\">\n            <el-option\n              label=\"All\"\n              value=\"\">\n            </el-option>\n            <el-option\n              v-for=\"item in userTypeList\"\n              :key=\"item.value\"\n              :label=\"item.label\"\n              :value=\"item.value\">\n            </el-option>\n          </el-select>\n        </el-form-item>\n        <el-button v-show=\"false\" native-type=\"submit\"></el-button>\n      </el-form>\n      <el-row class=\"create-row\">\n        <div class='list-btn' @click=\"onBarSearch\">{{$t('purchaseOrder.Search')}}</div>\n        <div class='list-btn clear-btn' @click=\"onReset\">{{$t('purchaseRequest.clear')}}</div>\n        <template  v-if=\"canActionAccount\">\n          <div class='list-btn' @click=\"onShowCreateDialog\" >{{$t('userRole.userList.createUser')}}</div>\n          <div class=\"action\" style=\"float: right; display: inline-flex;\">\n            <el-upload\n              class=\"mass_upload\"\n              ref=\"uploadMassSupplierSku\"\n              action=\"/api/supplier/srm/supplier_user/mass_create/upload/\"\n              :on-success=\"handleUploadSuccess\"\n              :on-error=\"handleUploadError\"\n              :headers=\"uploadHeader\"\n              :data=\"getCsrfData()\"\n              :show-file-list=\"false\">\n              <div class=\"list-btn mass-approve-btn\">{{$t(\"supplier.massUpload\")}}</div>\n            </el-upload>\n            <el-button type=\"text\" class=\"template\" @click=\"getTemplate\" icon=\"el-icon-download\">{{$t('supplier.template')}}</el-button>\n          </div>\n\n        </template>\n      </el-row>\n\n      <div class=\"padding-top-bottom\"></div>\n\n      <el-table :data=\"tableData\" border>\n        <el-table-column type=\"index\" :label=\"`No.`\"></el-table-column>\n\n        <el-table-column :label=\"$t('purchaseOrder.vendorSideID')\">\n          <template slot-scope=\"scope\">\n            <div><p>{{ scope.row.supplier_id }}</p></div>\n          </template>\n        </el-table-column>\n\n        <el-table-column :label=\"$t('purchaseOrder.supplierName')\">\n          <template slot-scope=\"scope\">\n            <div><p>{{ scope.row.supplier_name }}</p></div>\n          </template>\n        </el-table-column>\n\n        <el-table-column :label=\"$t('purchaseOrder.email')\">\n          <template slot-scope=\"scope\">\n            <div><p>{{ `${scope.row.email}`.toLowerCase() }}</p></div>\n          </template>\n        </el-table-column>\n        <el-table-column :label=\"$t('userRole.userList.username')\">\n          <template slot-scope=\"scope\">\n            <div><p>{{ scope.row.name }}</p></div>\n          </template>\n        </el-table-column>\n\n        <el-table-column width=\"128px\" :label=\"$t('supplierCenterUserRole')\">\n          <template slot-scope=\"scope\">\n            <div><p>{{ formatRoleName(scope.row) }}</p></div>\n          </template>\n        </el-table-column>\n\n        <el-table-column :label=\"$t('purchaseRequest.region')\">\n          <template slot-scope=\"scope\">\n            <div><p>{{ (scope.row.country || '').toUpperCase() }}</p></div>\n          </template>\n        </el-table-column>\n        <el-table-column :label=\"$t('userRole.userList.status')\">\n          <template slot-scope=\"scope\">\n            <div><p>{{ scope.row.status === 0 ? 'Inactive': 'Active' }}</p></div>\n          </template>\n        </el-table-column>\n\n        <el-table-column :label=\"$t('purchaseOrder.Action')\" width=\"200\" v-if=\"canActionAccount\">\n          <template slot-scope=\"scope\">\n            <div v-if=\"scope.row.user_type !== 3\">\n              <el-button class='list-btn' v-if=\"scope.row.status === 0\" size=\"mini\" @click=\"onEnable(scope.$index)\">{{$t('userRole.userList.enable')}}</el-button>\n              <el-button class='list-btn danger-btn' v-else size=\"mini\" @click=\"onDisable(scope.$index)\">{{$t('userRole.userList.disable')}}</el-button>\n              <el-button class='list-btn' size=\"mini\" @click=\"onEdit(scope.$index)\">{{$t('userRole.userList.edit')}}</el-button>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column :label=\"$t('userRole.userList.opHistory')\">\n          <template slot-scope=\"scope\">\n            <el-button v-if=\"scope.row.user_type !== 3\" class='list-btn' type=\"\" size=\"mini\" @click=\"onHistory(scope.row.supplier_user_id)\">{{$t('userRole.userList.history')}}</el-button>\n          </template>\n        </el-table-column>\n        <el-table-column :label=\"$t('userRole.userList.unlockAccount')\">\n          <template slot-scope=\"scope\">\n            <el-button class='list-btn' size=\"mini\" v-if=\"scope.row.locked\" @click=\"onUnlock(scope.$index)\">{{$t('userRole.userList.unlock')}}</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <div class=\"content-center padding-top-bottom\">\n        <el-pagination background layout=\"prev, pager, next\" :page-size=\"page_size\" :current-page=\"current_page\" @current-change=\"handleCurrentChange\" :total=\"total_count\" ></el-pagination>\n      </div>\n      <el-dialog :title=\"edit ? $t('userRole.userList.editUser') :$t('userRole.userList.createUser')\" :visible.sync=\"createUserForm.visible\" v-if=\"createUserForm.visible\">\n        <el-form ref=\"createUserForm\" :model=\"createUserForm.user\" :rules=\"createUserForm.rules\" label-width=\"165px\">\n          <el-form-item prop=\"supplier_id\" :rules=\"[{ required: true, trigger: ['blur', 'change'], message: this.$t('account.vendorSiteIdRequired')}]\"  :label=\"$t('purchaseOrder.vendorSideID')\">\n            <!-- <el-input v-model.trim=\"createUserForm.user.supplier_id\" clearable :disabled=\"edit\"></el-input> -->\n            <el-autocomplete\n                style=\"width:100%;\"\n                :disabled=\"edit\" clearable\n                v-model.trim=\"createUserForm.user.supplier_id\"\n                :fetch-suggestions=\"querySupplier\"\n                @blur=\"handleAutoCompleteBlur\"\n                @select=\"handleSelectSupplierID\"\n              >\n              </el-autocomplete>\n          </el-form-item>\n          <el-form-item prop=\"user_type\" :label=\"$t('supplierCenterUserRole')\">\n            <el-select v-model.number=\"createUserForm.user.user_type\" @change=\"handleUserRoleChange\">\n              <el-option v-for=\"item in SRMUserRoleList\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"></el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item prop=\"email\" :label=\"$t('userRole.userList.email')\">\n            <template v-if=\"isShopeeStaff && !edit\">\n              <el-input ref=\"emailInput\" class=\"el-input-group-email-input\"  v-model=\"createUserForm.user.email\" clearable></el-input>\n              <el-select class=\"el-input-group-email-select\" v-model=\"createUserForm.user.emailType\"  placeholder=\"Select\" @change=\"chengeEmailType\" clearable>\n                <el-option :label=\"item\" :value=\"item\" v-for=\"item in emailTypes\" :key=\"item\"></el-option>\n              </el-select>\n            </template>\n            <el-input v-else v-model=\"createUserForm.user.email\" clearable placeholder=\"please type in available email address\" :disabled=\"edit\" @change=\"checkExistSupplierName\"></el-input>\n          </el-form-item>\n          <el-form-item prop=\"name\" :label=\"$t('userRole.userList.username')\">\n            <el-input v-model=\"createUserForm.user.name\" clearable :disabled=\"!edit && isNameLockedByEmail\"></el-input>\n          </el-form-item>\n\n          <el-form-item :label=\"$t('chargingReportDisplay')\">\n            <el-switch\n              v-model=\"createUserForm.user.charging_report_display\">\n            </el-switch>\n          </el-form-item>\n\n        </el-form>\n        <div class=\"content-center\">\n          <el-button type=\"primary\" :loading=\"createUserForm.loading\" @click=\"onSubmit\">\n            {{edit ? $t('commonSave') : $t('userRole.userList.create')}}\n          </el-button>\n          <el-button @click=\"onCloseDialog(1)\">{{$t('userRole.userList.close')}}</el-button>\n        </div>\n      </el-dialog>\n\n      <el-dialog :title=\"$t('userRole.userList.opHistory')\" :visible.sync=\"historyList.visible\">\n        <el-table :data=\"historyList.data\">\n          <el-table-column :label=\"$t('opHistory.opTime')\">\n            <template slot-scope=\"scope\">\n              <span>{{moment(scope.row.ctime)}}</span>\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"operator\" :label=\"$t('opHistory.operator')\"></el-table-column>\n          <el-table-column prop=\"action\" :label=\"$t('opHistory.action')\"></el-table-column>\n        </el-table>\n        <div class=\"content-center history-pagination\">\n          <el-pagination background layout=\"prev, pager, next\" :page-size=\"historyList.page.count\" :current-page=\"historyList.page.pageno\" @current-change=\"handleHistoryCurrentChange\" :total=\"historyList.page.total\" ></el-pagination>\n        </div>\n\n      </el-dialog>\n    </el-main>\n  </div>\n</template>\n\n<script>\nimport { getSupplierUserData, toggleSupplierUserStatus, updateSupplierUser, createAccountSupplierUser, unlockAccountSupplierUser, historySupplierUser, getSupplierNameFromEmail, getSupplierList } from '@/api/supplier';\nimport { Permission, userTypeList, SRMUserRoleList, emailTypes } from '@/utils/constant';\nimport moment from 'moment';\nimport { hasPermission } from '@/utils/permission';\nimport { isValidEmail, validateEmail, getIsShopeeEmailValid } from '@/utils/validate';\nimport { formatParams } from '@/utils/formatParams';\nimport { getCsrfHeader, getCsrfData } from '@/utils/cookie';\n\nexport default {\n  data() {\n    return {\n      isNameLockedByEmail: false,\n      canActionAccount: false,\n      form: {\n        supplier_key: '',\n        email: '',\n        country: '',\n        user_type: ''\n      },\n      cacheUser: {\n        name: '',\n        user_type: -1\n      },\n      cacheSupplierID: null,\n      createUserForm: {\n        visible: false,\n        loading: false,\n        user: {\n          name: '',\n          email: '',\n          emailType: '',\n          user_type: 2, // 1: shopee staff, 2: supplier admin\n          supplier_id: '',\n          supplier_user_id: '',\n          charging_report_display: false\n        },\n        rules: {\n          name: [\n            { required: true, trigger: 'blur', max: 50 }\n          ],\n          email: [\n            { required: true, trigger: 'blur', validator: this.validateEmail }\n          ],\n          user_type: [{ required: true, trigger: 'change', message: this.$t('account.userTypeRequired') }]\n        }\n      },\n      userTypeList,\n      SRMUserRoleList,\n      emailTypes,\n      historyList: {\n        page: {\n          count: 10,\n          pageno: 1,\n          total: 0\n        },\n        visible: false,\n        data: []\n      },\n      tableData: [],\n      edit: false,\n      page_size: 10,\n      current_page: 1,\n      total_count: 10,\n      currentSupplierUserID: -1\n    };\n  },\n  computed: {\n    countryList() {\n      return [...new Set([...this.$store.getters.countryList.map(item => item.country)])];\n    },\n    uploadHeader() {\n      return Object.assign(this.getCsrfHeader(), this.$store.getters.uploadHeader);\n    },\n    isShopeeStaff() {\n      return this.createUserForm.user.user_type === 1;\n    }\n  },\n  watch: {\n    isShopeeStaff(nv) {\n      if (!this.edit) {\n        this.createUserForm.user.email = '';\n        this.createUserForm.user.emailType = '';\n        this.$refs.createUserForm.clearValidate('email');\n      }\n    }\n  },\n  created() {\n    this.canActionAccount = hasPermission(Permission.SUPPLIER_ACCOUNT_ACTION);\n    this.onSearch();\n  },\n  methods: {\n    getCsrfData,\n    getCsrfHeader,\n    validateEmail(rule, value, callback) {\n      const valideShopeeEmail = /^[a-zA-Z0-9]+([._\\\\-]*[a-zA-Z0-9])*@(shopee|sea|seamoney)\\.com$/;\n      if (this.isShopeeStaff && !this.edit) {\n        const email = value + this.createUserForm.user.emailType;\n        if (!valideShopeeEmail.test(email)) {\n          return callback(new Error('invalid email（only support shopee.com/sea.com/seamoney.com）'));\n        } else {\n          callback();\n        }\n      } else {\n        validateEmail(rule, value, callback);\n      }\n    },\n    handleUserRoleChange(value) {\n      if (!this.edit) {\n        return;\n      }\n      const isChangeToShopeeStaff = value === 1;\n      const isShopeeEmail = getIsShopeeEmailValid(this.createUserForm.user.email);\n      if (isChangeToShopeeStaff && !isShopeeEmail) {\n        this.createUserForm.user.user_type = 2;\n        this.$message.error(this.$t('supplierCenterAccountUserRoleChangeTip'));\n      }\n    },\n    async checkExistSupplierName() {\n      if (!this.isValidEmail()) {\n        return;\n      }\n      this.isNameLockedByEmail = false;\n      const params = {\n        email: `${this.createUserForm.user.email}`.toLowerCase()\n      };\n      const res = await getSupplierNameFromEmail(params);\n      if (res && res.retcode === 0) {\n        this.createUserForm.user.name = res.data.name;\n        this.isNameLockedByEmail = true;\n      }\n    },\n    moment(time) {\n      return moment(time * 1000).format('HH:mm  DD MMM YYYY');\n    },\n    isValidEmail() {\n      let value = this.createUserForm.user.email;\n      if (this.isShopeeStaff) {\n        value = value + this.createUserForm.user.emailType;\n      }\n      return isValidEmail(value);\n    },\n    handleAutoCompleteBlur() {\n      this.createUserForm.user.supplier_id = this.cacheSupplierID;\n    },\n    handleSelectSupplierID(item) {\n      this.cacheSupplierID = item.value;\n    },\n    querySupplier(queryString = '', cb) {\n      const params = {\n        pageno: 1,\n        count: 20,\n        key: `${queryString}`.trim(),\n        approval_country: this.countryList.join('_')\n      };\n      // if (this.countryList.length === 1) {\n      //   params.country = this.countryList[0];\n      // }\n      getSupplierList(params).then(resp => {\n        if (resp.status !== 0) {\n          this.$message.error(resp.info);\n          cb([]);\n        } else {\n          if (resp.data.list.length === 0) {\n            this.$message.error('this supplier ID is not exist.');\n            cb([]);\n            return;\n          }\n          cb(resp.data.list.map((supplier) => {\n            return {\n              value: supplier['supplier_id']\n            };\n          }));\n        }\n      });\n    },\n    handleHistoryCurrentChange(index) {\n      this.historyList.page.pageno = index;\n      this.onHistory();\n    },\n    formatRoleName(row = {}) {\n      const { user_type = '', role_list = [] } = row;\n      const roleName = ['', 'Shopee Staff', 'Supplier Admin'][user_type] || '';\n      if (roleName) return roleName;\n      return role_list.length ? role_list.map(role => role.role_name || '').join(', ') : '';\n    },\n    onShowCreateDialog() {\n      this.edit = false;\n      this.createUserForm.user.supplier_id = '';\n      this.createUserForm.user.name = '';\n      this.createUserForm.user.user_type = 2;\n      this.createUserForm.user.email = '';\n      this.createUserForm.user.emailType = '';\n      this.onShowDialog(1);\n    },\n    onShowDialog(flag) {\n      if (flag) {\n        this.isNameLockedByEmail = false;\n        this.createUserForm.visible = true;\n      } else {\n        this.historyList.visible = true;\n      }\n    },\n    onCloseDialog(flag) {\n      if (flag) {\n        this.createUserForm.visible = false;\n      } else {\n        this.historyList.visible = false;\n      }\n    },\n    onBarSearch() {\n      this.current_page = 1;\n      this.onSearch();\n    },\n    onSearch() {\n      const params = {\n        pageno: this.current_page,\n        count: this.page_size,\n        ...this.form,\n        email: `${this.form.email}`.toLowerCase(),\n        supplier_key: `${this.form.supplier_key}`.trim()\n      };\n      getSupplierUserData(formatParams(params)).then(resp => {\n        if (resp.status !== 0) {\n          this.$message({\n            message: resp.info,\n            type: 'error'\n          });\n        } else {\n          this.tableData = resp.data['supplier_users'];\n          this.total_count = resp.data['total'];\n        }\n      });\n    },\n    onReset() {\n      this.form = {\n        supplier_key: '',\n        email: '',\n        country: '',\n        user_type: ''\n      };\n    },\n    handleUploadSuccess(res) {\n      if (res.retcode !== 0) {\n        this.$alert(res.info, '', {\n          type: 'error'\n        });\n        this.$refs.uploadMassSupplierSku.clearFiles();\n      } else {\n        this.$message.success('Upload Success!');\n        this.$refs.uploadMassSupplierSku.clearFiles();\n        this.onSearch();\n      }\n    },\n    handleUploadError() {\n      this.$message.error('Upload Failed!');\n      this.$refs.uploadMassSupplierSku.clearFiles();\n    },\n    getTemplate() {\n      window.open('/admin/data/MassCreateSRMUserTemplate.xlsx');\n    },\n    handleCurrentChange(current_page) {\n      this.current_page = current_page;\n      this.onSearch();\n    },\n    onEnable(index) {\n      const sid = this.tableData[index].supplier_user_id;\n      this.toggleUserStatus(1, sid, () => {\n        this.tableData[index].status = 1;\n      });\n    },\n    onDisable(index) {\n      const sid = this.tableData[index].supplier_user_id;\n      this.toggleUserStatus(0, sid, () => {\n        this.tableData[index].status = 0;\n      });\n    },\n    async toggleUserStatus(flag, sid, cb) {\n      const opt = {\n        supplier_user_id: sid\n      };\n      opt.enable = flag === 1;\n      const res = await toggleSupplierUserStatus(opt);\n      if (res.retcode !== 0) {\n        this.$message.error(res.info);\n      } else {\n        this.$message.success(res.info);\n        cb && cb.call(this);\n      }\n    },\n    onEdit(index) {\n      const rowData = this.tableData[index];\n      this.createUserForm.user.supplier_id = rowData.supplier_id;\n      this.createUserForm.user.supplier_user_id = rowData.supplier_user_id;\n      this.createUserForm.user.name = rowData.name;\n      this.createUserForm.user.user_type = rowData.user_type;\n      this.createUserForm.user.charging_report_display = Boolean(rowData.charging_report_display);\n      this.createUserForm.user.email = `${rowData.email}`.toLowerCase();\n\n      this.cacheUser.name = rowData.name;\n      this.cacheUser.user_type = rowData.user_type;\n      this.cacheUser.charging_report_display = Boolean(rowData.charging_report_display);\n      this.edit = true;\n      this.onShowDialog(1);\n    },\n    async onHistory(sid) {\n      if (sid) {\n        this.currentSupplierUserID = sid;\n      }\n      const opt = {\n        pageno: this.historyList.page.pageno,\n        count: this.historyList.page.count,\n        supplier_user_id: this.currentSupplierUserID\n      };\n      const res = await historySupplierUser(opt);\n      if (res.retcode === 0) {\n        this.historyList.data = res.data.historys;\n        this.historyList.page.total = res.data.total;\n        this.historyList.page.pageno = res.data.pageno;\n        this.historyList.page.count = res.data.count;\n        this.onShowDialog(false);\n      } else {\n        this.$message.error(res.info);\n      }\n    },\n    async onUnlock(index) {\n      const opt = {\n        email: `${this.tableData[index].email}`.toLowerCase()\n      };\n      const res = await unlockAccountSupplierUser(opt);\n      if (res.retcode === 0) {\n        this.tableData[index].locked = false;\n        this.$message.success(res.info);\n      } else {\n        this.$message.error(res.info);\n      }\n    },\n    async onUpdate() {\n      const opt = {\n        supplier_user_id: this.createUserForm.user.supplier_user_id,\n        name: `${this.createUserForm.user.name}`.trim(),\n        user_type: this.createUserForm.user.user_type,\n        charging_report_display: Number(this.createUserForm.user.charging_report_display)\n      };\n      const res = await updateSupplierUser(opt);\n      if (res.retcode === 0) {\n        this.$message.success('Success');\n        this.onSearch();\n        this.onCloseDialog(1);\n      } else {\n        this.$message.error(res.info);\n      }\n    },\n    async onCreate() {\n      const opt = {\n        supplier_id: this.createUserForm.user.supplier_id,\n        name: `${this.createUserForm.user.name}`.trim(),\n        user_type: this.createUserForm.user.user_type,\n        email: this.isShopeeStaff ? `${this.createUserForm.user.email}${this.createUserForm.user.emailType}`.toLowerCase() : `${this.createUserForm.user.email}`.toLowerCase(),\n        charging_report_display: Number(this.createUserForm.user.charging_report_display)\n      };\n      const res = await createAccountSupplierUser(opt);\n      if (res.retcode === 0) {\n        this.$message.success('Success');\n        this.onSearch();\n        this.onCloseDialog(1);\n      } else {\n        this.$message.error(res.info);\n      }\n    },\n    isModifyInfo() {\n      let isModify = false;\n      Object.keys(this.cacheUser).map(key => {\n        if (this.cacheUser[key] !== this.createUserForm.user[key]) {\n          isModify = true;\n        }\n      });\n      return isModify;\n    },\n    onSubmit() {\n      this.$refs.createUserForm.validate(passValid => {\n        if (passValid) {\n          if (this.edit) {\n            if (this.isModifyInfo()) {\n              this.onUpdate();\n            } else {\n              this.$message.warning('Nothing has been changed!');\n            }\n          } else {\n            this.onCreate();\n          }\n        }\n      });\n    },\n    chengeEmailType(value) {\n      if (this.$refs.emailInput) {\n        this.$refs.emailInput.focus();\n        this.$refs.emailInput.blur();\n      }\n    }\n  }\n};\n</script>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\n.el-form .el-input, .el-form .el-select {\n  max-width: 136px;\n}\n.el-dialog .el-form {\n  .el-input, .el-select, .el-autocomplete {\n    max-width: 300px;\n  }\n  .el-input-group-email{\n    &-input{\n      width: 150px;\n    }\n    &-select{\n      width: 150px;\n      margin-left: -4px;\n    }\n  }\n}\n.create-row {\n  line-height: 36px;\n  margin-bottom: 20px;\n  float: right;\n}\n.accounts-title {\n  width: 100%;\n  padding: 0 20px;\n  line-height: 36px;\n  font-size: 24px;\n  color: #333333;\n}\n.danger-btn {\n   background-color: #f56c6c;\n }\n.line{\n  text-align: center;\n}\n.mass-approve-btn {\n  background-color: #50962B;\n  width: 120px;\n}\n.white-btn{\n  background-color: #fff;\n  color: #000;\n  border:1px solid #ccc;\n}\n.template {\n  color: #3d6ed1;\n  margin-left: 2px;\n  margin-right: 10px;\n}\n.right-btn-wrapper{\n  min-width:160px;\n  margin-left: 32px;\n  margin-top: 2px;\n}\n.history-pagination{\n  margin-top:16px;\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplierCenterAdmin/supplierCenterModule/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplierCenterAdmin/usageTracking/api.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplierCenterAdmin/usageTracking/detail.vue","messages":[{"ruleId":"vue/no-use-v-if-with-v-for","severity":2,"message":"This 'v-if' should be moved to the wrapper element.","line":51,"column":11,"nodeType":"VAttribute","endLine":51,"endColumn":31},{"ruleId":"vue/require-prop-type-constructor","severity":2,"message":"The \"region\" property should be a constructor.","line":120,"column":13,"nodeType":"Literal","endLine":120,"endColumn":15}],"errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div>\n    <div class=\"search-box\">\n      <listSearch :searchForm=\"searchForm\" :components=\"searchSchema\" @change=\"onChangeSearchForm\"> </listSearch>\n    </div>\n    <el-row>\n      <el-col class=\"pms-text-right mb16 mt16\">\n        <el-button class=\"list-btn white-blue\" @click=\"onClear\">{{ $t('commonClear') }}</el-button>\n        <el-button :loading=\"isLoading\" class=\"list-btn\" @click=\"onSearch\">{{ $t('commonSearch') }}</el-button>\n      </el-col>\n    </el-row>\n    <el-row type=\"flex\" justify=\"space-between\" class=\"mb16\">\n      <el-col :span=\"20\">\n        <exportBtnGroup\n          :api=\"exportConfig.api\"\n          :taskType=\"exportConfig.taskType\"\n          :params=\"searchParams\"\n        ></exportBtnGroup>\n      </el-col>\n    </el-row>\n    <el-row>\n      <p class=\"table-tips\" v-if=\"isShowTips\">\n        <i class=\"el-icon-warning tips-icon\"></i>\n        {{\n          $tt(\n            'Total click quantity based on tracking date, breakdown only displays a maximum of 7 days. Please Export to view more than the displayed 7 days range.',\n            'tracking',\n            'detail_tips2'\n          )\n        }}\n      </p>\n    </el-row>\n    <el-table\n      :data=\"tableList\"\n      border\n      v-loading=\"isLoading\"\n      row-key=\"id\"\n      :tree-props=\"{ children: 'children', hasChildren: 'hasChildren' }\"\n      lazy\n      :load=\"onLoad\"\n      :span-method=\"arraySpanMethod\"\n      @sort-change=\"sortChange\"\n    >\n      <el-table-column\n        v-for=\"(item, index) in computedTableSchema\"\n        :key=\"item.field\"\n        :label=\"getLabel(item.field)\"\n        :fixed=\"index < 3\"\n      >\n        <el-table-column\n          v-if=\"item.children\"\n          v-for=\"child in item.children\"\n          :key=\"child.field\"\n          :label=\"getLabel(child.field)\"\n          :prop=\"child.field\"\n          sortable\n        >\n          <span slot-scope=\"scope\">\n            {{ getValue(child, scope.row) }}\n          </span>\n        </el-table-column>\n        <template slot-scope=\"scope\">\n          {{ getValue(item, scope.row) }}\n        </template>\n      </el-table-column>\n    </el-table>\n    <section class=\"pagination-center\">\n      <el-pagination\n        background\n        layout=\"sizes, prev, pager, next\"\n        :current-page=\"pager.pageno\"\n        :page-sizes=\"[10, 20, 50, 100]\"\n        :total.sync=\"total\"\n        :page-size=\"pager.count\"\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleChangePage\"\n      ></el-pagination>\n    </section>\n  </div>\n</template>\n<script>\nimport listSearch from '@/components/common/listSearch';\nimport moment from 'moment';\nimport exportBtnGroup from '@/components/common/exportBtnGroup';\nimport { ajax } from '@/utils/request';\nimport { getSearchSchemaTemplate } from '@/components/BaseItem/schemaTemplate';\n\nimport { getTableSchema } from './table-schema';\nimport { getDateRangeSchema } from './search-schema';\nimport { getLabel } from './translate';\nimport api from './api';\nimport { getRangeDays } from './utils';\n\nconst PurchaseTypeList = [\n  { label: 'All', value: undefined }, // 如果需要all，则额外添加\n  { label: 'Unknown', value: 0 },\n  { label: 'Outright', value: 1 },\n  { label: 'Consignment', value: 2 }\n];\n\nconst defaultTimeRange = [\n  moment()\n    .subtract(1, 'days')\n    .format('YYYY-MM-DD'),\n  moment()\n    .subtract(1, 'days')\n    .format('YYYY-MM-DD')\n];\n\nexport default {\n  components: {\n    listSearch,\n    exportBtnGroup\n  },\n  created() {\n    this.searchForm.timeRange = this.dateRange && this.dateRange.length ? this.dateRange : defaultTimeRange;\n    this.getList();\n  },\n  props: {\n    region: '',\n    dateRange: Array\n  },\n  data() {\n    return {\n      isLoading: false,\n      exportConfig: {\n        api: api.exportDetail,\n        taskType: 39\n      },\n      searchForm: {\n        timeRange: []\n      },\n      // table\n      pager: {\n        pageno: 1,\n        count: 10\n      },\n      total: 0,\n      tableList: []\n    };\n  },\n  watch: {\n    region() {\n      this.searchForm = {\n        timeRange: defaultTimeRange\n      };\n      this.onSearch();\n    },\n    dateRange(newVal) {\n      if (newVal && newVal.length) {\n        this.searchForm.timeRange = newVal;\n        this.onSearch();\n      }\n    }\n  },\n  computed: {\n    isShowTips() {\n      if (this.searchForm.timeRange) {\n        const start = this.searchForm.timeRange[0];\n        const end = this.searchForm.timeRange[1];\n        if (start && end) {\n          if (getRangeDays(start, end) > 6) {\n            return true;\n          }\n        }\n      }\n      return false;\n    },\n    searchParams() {\n      const date = this.searchForm.timeRange || [];\n      return {\n        region: this.region,\n        track_date_start: date[0],\n        track_date_end: date[1],\n        order_by: this.searchForm.order_by,\n        purchase_type: this.searchForm.purchase_type,\n        vendor_site_id: this.searchForm.vendor_site_id\n      };\n    },\n    computedTableSchema() {\n      return getTableSchema({\n        region: this.region\n      });\n    },\n    searchSchema() {\n      const supplier = getSearchSchemaTemplate('supplier_id');\n      supplier.isLongCol = true;\n      supplier.props.field = 'vendor_site_id';\n      const purchase_type = getSearchSchemaTemplate('purchase_type');\n      purchase_type.props.options = PurchaseTypeList;\n      return [getDateRangeSchema(), supplier, purchase_type];\n    }\n  },\n  methods: {\n    ajax,\n    getLabel,\n    arraySpanMethod({ row, column, rowIndex, columnIndex }) {\n      if (!row.children) {\n        if (columnIndex === 0) {\n          return [1, 3];\n        } else if (columnIndex === 1 || columnIndex === 2) {\n          return [0, 0];\n        }\n      }\n    },\n    sortChange({ order, prop }) {\n      const value = (order === 'ascending' ? '' : '-') + prop;\n      this.$set(this.searchForm, 'order_by', value);\n      this.getList();\n    },\n    getValue(schema, row) {\n      let value = row[schema.field];\n      if (!row.children && schema.field === 'vendor_site_id') {\n        value = row.date;\n      } else if (schema.field === 'purchase_type') {\n        value = (PurchaseTypeList.find(item => item.value === value) || {}).label;\n      }\n      return value === -1 ? '/' : value;\n    },\n    onChangeSearchForm({ value, field }) {\n      this.$set(this.searchForm, field, value);\n    },\n    onClear() {\n      this.searchForm = {};\n    },\n    onSearch() {\n      this.pager.pageno = 1;\n      this.getList();\n    },\n    handleChangePage(pageno) {\n      this.pager.pageno = pageno;\n      this.getList();\n    },\n    handleSizeChange(count) {\n      this.pager.count = count;\n      this.onSearch();\n    },\n    onLoad(tree, treeNode, resolve) {\n      resolve(tree.children);\n    },\n    async getList() {\n      this.tableList = [];\n      const data = await this.ajax(api.getDetailList, { ...this.pager, ...this.searchParams });\n      if (data === false) return;\n      this.total = data.total || 0;\n      this.tableList = (data.tracking_data_detail || []).map((item, i) => {\n        item.children = item.detail.map((c, ci) => {\n          c.id = 'c' + ci + i;\n          return c;\n        });\n        item.id = 'p' + i;\n        item.hasChildren = !!item.detail.length;\n        return item;\n      });\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.search-box {\n  width: 100%;\n}\n.pagination-center {\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n}\n.table-tips {\n  font-size: 12px;\n  color: #333;\n  margin-bottom: 12px;\n}\n.tips-icon {\n  color: #eda500;\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplierCenterAdmin/usageTracking/echart-schema.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplierCenterAdmin/usageTracking/index.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplierCenterAdmin/usageTracking/search-schema.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplierCenterAdmin/usageTracking/table-schema.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplierCenterAdmin/usageTracking/translate.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplierCenterAdmin/usageTracking/trend.vue","messages":[{"ruleId":"vue/require-prop-type-constructor","severity":2,"message":"The \"region\" property should be a constructor.","line":38,"column":13,"nodeType":"Literal","endLine":38,"endColumn":15},{"ruleId":"vue/no-deprecated-destroyed-lifecycle","severity":2,"message":"The `destroyed` lifecycle hook is deprecated. Use `unmounted` instead.","line":53,"column":3,"nodeType":"Identifier","messageId":"deprecatedDestroyed","endLine":53,"endColumn":12,"suggestions":[{"messageId":"insteadUnmounted","fix":{"range":[1275,1284],"text":"unmounted"},"desc":"Instead, change to `unmounted`."}]}],"errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"trend-box\">\n    <div class=\"search-box\">\n      <listSearch :searchForm=\"searchForm\" :components=\"searchSchema\" @change=\"onChangeSearchForm\"> </listSearch>\n    </div>\n    <p class=\"trend-title\">\n      {{ $tt('View how many suppliers clicked on each To-Do item in the SRM Dashboard.', 'tracking', 'trend_title1') }}\n    </p>\n    <div class=\"trend-content\" v-loading=\"isLoading\">\n      <div id=\"trend-chart-box\" class=\"chart-box\"></div>\n    </div>\n  </div>\n</template>\n<script>\nimport moment from 'moment';\nimport listSearch from '@/components/common/listSearch';\nimport { ajax } from '@/utils/request';\nimport { getDateRangeSchema } from './search-schema';\n\nimport { getConfig } from './echart-schema';\nimport api from './api';\nimport { getRangeDays } from './utils';\n\nconst defaultTimeRange = [\n  moment()\n    .subtract(7, 'days')\n    .format('YYYY-MM-DD'),\n  moment()\n    .subtract(1, 'days')\n    .format('YYYY-MM-DD')\n];\n\nexport default {\n  components: {\n    listSearch\n  },\n  props: {\n    region: ''\n  },\n  watch: {\n    region() {\n      this.searchForm = {\n        timeRange: defaultTimeRange\n      };\n      this.getData();\n    }\n  },\n  created() {\n    this.init();\n    // 绑定事件委托\n    document.body.addEventListener('click', this.clickTips);\n  },\n  destroyed() {\n    document.body.removeEventListener('click', this.clickTips);\n  },\n  data() {\n    return {\n      myChart: null,\n      isLoading: true,\n      searchForm: {\n        timeRange: defaultTimeRange\n      },\n      searchSchema: [getDateRangeSchema(this)]\n    };\n  },\n  methods: {\n    ajax,\n    clickTips(e) {\n      if (e && e.target && e.target.id !== 'trend-tooltip-click') return;\n      const data = e.target.getAttribute('x-target');\n      this.$emit('showDetail', data);\n    },\n    async init() {\n      const echarts = await import('echarts');\n      this.myChart = echarts.init(document.getElementById('trend-chart-box'));\n      await this.getData();\n    },\n    async getData() {\n      const date = this.searchForm.timeRange || [];\n      const data = await this.ajax(api.getTracking, {\n        region: this.region,\n        track_date_start: date[0],\n        track_date_end: date[1]\n      });\n      if (data === false) return;\n      this.myChart.setOption(\n        getConfig({\n          data: data,\n          dates: this.searchForm.timeRange,\n          region: this.region\n        })\n      );\n    },\n    onChangeSearchForm({ value, field }) {\n      if (field === 'timeRange') {\n        const start = value[0];\n        const end = value[1];\n        if (start && end) {\n          // 如果范围小于4天\n          if (getRangeDays(start, end) < 4) {\n            this.$message.error('The date range must be greater than 4 days');\n            return;\n          }\n        }\n      }\n      this.$set(this.searchForm, field, value);\n      this.getData();\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.search-box {\n  width: 50%;\n}\n.trend-title {\n  margin: 30px 0 20px;\n}\n.trend-content {\n  padding: 0 20px;\n}\n.chart-box {\n  width: 100%;\n  height: 500px;\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplierCenterAdmin/usageTracking/utils.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplyInfoManagement/infoUpdateRequest/actionLog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplyInfoManagement/infoUpdateRequest/confirmDialog.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplyInfoManagement/infoUpdateRequest/dataList.vue","messages":[{"ruleId":"vue/prop-name-casing","severity":2,"message":"Prop \"Pager\" is not in camelCase.","line":32,"column":5,"nodeType":"Property","endLine":32,"endColumn":18}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"info-update-request-table pms-ui\">\n    <list-container\n      :dataList=\"itemList\"\n      :config=\"tableConfig\"\n      :tableSchema=\"tableSchema\"\n      @selectionChange=\"handleSelectionChange\"\n      v-bind=\"$attrs\"\n    />\n    <el-pagination\n      :current-page=\"Pager.pageIndex\" background layout=\"sizes, prev, pager, next\" :total.sync=\"Pager.total\"\n      :page-size=\"Pager.size\" :page-sizes=\"[10, 20, 50, 100]\"\n      @current-change=\"handleChangePageIndex\" @size-change=\"handleChangePageSize\"\n    ></el-pagination>\n  </div>\n</template>\n\n<script>\nimport { SkuChangeRequestStatusList, RequestType } from '@/utils/constant';\nimport { formatDateTimeByRegion } from '@/utils/format';\nimport listContainer from './listContainer.vue';\n\nexport default {\n  components: {\n    listContainer\n  },\n  props: {\n    itemList: {\n      type: Array,\n      default: () => []\n    },\n    Pager: Object,\n    handleSelectionChange: {\n      type: Function,\n      default: () => {}\n    }\n  },\n  methods: {\n    handleChangePageIndex(index) {\n      this.$emit('getItemList', index);\n    },\n    handleChangePageSize(size) {\n      this.$emit('getItemList', 1, size);\n    },\n    rowClick(row, column) {\n      this.$router.push(`/admin/supply/request/detail/${row.request_id}`);\n    }\n  },\n  computed: {\n    tableSchema() {\n      return [\n        { field: 'request_id', label: this.$t('prRequestID') },\n        { field: 'supplier_id', label: this.$t('commonVendorSiteID') },\n        { field: 'supplier_name', label: this.$t('commonSupplierName') },\n        { field: 'region', label: this.$t('commonRegion') },\n        { field: 'request_type', type: 'enum', options: RequestType, label: this.$t('requestType') },\n        { field: 'request_status', type: 'enum', options: SkuChangeRequestStatusList, label: this.$t('commonStatus') },\n        { field: 'pr_request_id', label: this.$t('prSourcePR') },\n        { field: 'ctime', label: this.$t('commonRequestedTime'),\n          render: (schema, row) => formatDateTimeByRegion(row[schema.field] * 1000, row.region)\n        },\n        { field: '', label: this.$t('commonAction'), render: (schema, row) => ['el-button',\n          { class: 'detail-btn', on: { click: () => { this.rowClick(row); } }}, this.$t('commonDetail')]\n        }\n      ];\n    },\n    tableConfig() {\n      return {\n        showCheckBox: true,\n        selectable: () => true,\n        reserveSelection: true,\n        align: 'left',\n        rowKey: 'id'\n      };\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  .info-update-request-table {\n    margin: 0 20px;\n  }\n  .el-pagination {\n    margin-top: 14px;\n    text-align: center;\n  }\n</style>\n\n<style lang=\"scss\">\n  .info-update-request-table {\n    .cell > .detail-btn {\n      background: #3D6ED1;\n      border: 1px solid #3D6ED1;\n      border-radius: 2px;\n      font-size: 14px;\n      color: #FFFFFF;\n    }\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplyInfoManagement/infoUpdateRequest/detail.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplyInfoManagement/infoUpdateRequest/index.vue","messages":[{"ruleId":"vue/no-unused-components","severity":2,"message":"The \"TabsHeader\" component has been registered but not used.","line":99,"column":5,"nodeType":"Property","endLine":99,"endColumn":15}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"pms-ui update-request-list\">\n    <el-tabs\n      class=\"tabs\"\n      tab-position=\"top\"\n      v-model=\"activeTab\"\n      @tab-click=\"onTabClick\"\n    >\n      <el-tab-pane\n        v-for=\"tab in tabs\"\n        :label=\"$t(tab.label)\"\n        :name=\"tab.key\"\n        :key=\"tab.key\"\n      >\n        <!-- nothing -->\n      </el-tab-pane>\n    </el-tabs>\n    <search-form\n      @search=\"handleFilterChange\"\n      @modify=\"modifyForm\"\n      :form=\"searchForm\"\n      :activeTab=\"activeTab\"\n      ref=\"searchForm\"\n    />\n    <div class=\"actions\">\n      <el-button class=\"list-btn white-blue\" @click=\"handleExportClick\">\n        {{$t('commonExport')}}\n      </el-button>\n      <el-button class=\"list-btn white-blue\" @click=\"toggleExportHistory\">\n        {{$t('commonExportHistory')}}\n      </el-button>\n    </div>\n    <data-list\n      ref=\"dataList\"\n      v-loading=\"loading\"\n      @getItemList=\"handlePagerChange\"\n      :itemList=\"list\"\n      :Pager=\"Pager\"\n      :handleSelectionChange=\"handleSelectionChange\"\n      :checkedType=\"checkedType\"\n      :changeSelectPageType=\"changeSelectPageType\"\n      :resetCheckedType=\"resetCheckedType\"\n      :selectedRows=\"selectedRows\"\n    />\n    <export-history-dialog\n      :interval=\"15000\"\n      :taskType=\"29\"\n      :visible=\"isShowExportHistory\"\n      @close=\"toggleExportHistory\"\n    />\n  </div>\n</template>\n\n<script>\nimport {isEmpty} from 'lodash';\nimport TabsHeader from '@/components/tabsHeader';\nimport exportHistoryDialog from '@/components/ApproveList/exportHistoryDialog';\nimport { getUpdateRequestList, exportUpdateRequests } from '@/api/updateRequest';\nimport { formatParams } from '@/utils/formatParams';\nimport SearchForm from './searchForm';\nimport DataList from './dataList';\n\nconst TABS = [\n  {key: 'ALL', label: 'commonChangeRequestList'},\n  {key: 'PENDING', label: 'commonMyPendingApprovals'}\n];\n\nexport default {\n  data() {\n    const defaultCountry =\n      this.$store.getters.countrySelectList.length > 1\n        ? ''\n        : (this.$store.getters.countrySelectList[0] || { value: '' }).value;\n    return {\n      canEdit: false,\n      loading: false,\n      searchForm: {\n        region: defaultCountry,\n        request_status: '',\n        supplier_id: '',\n        pr_request_id: ''\n      },\n      Pager: {\n        pageIndex: 1,\n        size: 10,\n        total: 0\n      },\n      list: [],\n      activeTab: 'ALL',\n      selectedRows: [],\n      checkedType: '',\n      isShowExportHistory: false,\n      tabs: TABS\n    };\n  },\n  components: {\n    SearchForm,\n    DataList,\n    TabsHeader,\n    exportHistoryDialog\n  },\n  methods: {\n    modifyForm(field, value) {\n      this.$set(this.searchForm, field, value);\n    },\n    handlePagerChange(page, size) {\n      this.Pager.pageIndex = page || this.Pager.pageIndex;\n      this.Pager.size = size || this.Pager.size;\n      this.onSearch(page);\n    },\n    handleFilterChange() {\n      this.onSearch();\n      this.resetSelectedRows();\n    },\n    onSearch(pageIndex) {\n      this.loading = true;\n      const page_no = typeof pageIndex === 'number' ? pageIndex : 1;\n      this.Pager.pageIndex = page_no;\n      const tab_type = this.activeTab === 'PENDING' ? 1 : null;\n      this.resetCheckedType();\n      getUpdateRequestList(formatParams({\n        page_no,\n        count: this.Pager.size,\n        ...this.searchForm,\n        tab_type\n      })).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n          this.list = [];\n          this.Pager.total = 0;\n        } else {\n          this.list = resp.data.sku_change_request_list || [];\n          this.Pager.total = resp.data.total || 0;\n        }\n        this.loading = false;\n      }).catch(() => {\n        this.$message.error('Get Update Request List Failed');\n        this.loading = false;\n      });\n    },\n    onTabClick() {\n      this.$nextTick(\n        () => {\n          this.$refs.searchForm.onReset();\n          this.onSearch();\n        }\n      );\n    },\n    async handleExportClick() {\n      if (isEmpty(this.selectedRows)) {\n        this.$message.error(this.$t('commonPleaseChooseAtLeastOneOption'));\n        return;\n      }\n\n      try {\n        const req_ids = this.selectedRows.map(item => item.request_id);\n        const params = this.checkedType === 'ALL' ? {filter: formatParams(this.searchForm)} : {req_ids};\n        const {retcode, info} = await exportUpdateRequests(params);\n        if (retcode === 0) {\n          this.$message.success(this.$t('commonExportHistorySuccessTips'));\n          this.resetSelectedRows();\n          this.resetCheckedType();\n        } else {\n          this.$message.error(info);\n        }\n      } catch (e) {\n        this.$message.error(e);\n      }\n    },\n    toggleExportHistory() {\n      this.isShowExportHistory = !this.isShowExportHistory;\n    },\n    handleSelectionChange(selection) {\n      this.selectedRows = selection;\n    },\n    resetCheckedType() {\n      this.selectedRows = [];\n      this.checkedType = '';\n    },\n    changeSelectPageType(type) {\n      this.checkedType = type;\n      this.selectedRows = [...this.list];\n    },\n    resetSelectedRows() {\n      this.$refs.dataList.$children[0].$refs.table.clearSelection();\n    }\n  },\n  created() {\n    this.onSearch();\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.update-request-list {\n  &-header {\n    padding: 0 24px 0 20px;\n    display: flex;\n    width: 100%;\n    height: 56px;\n    align-items: center;\n    box-sizing: border-box;\n    .header-title {\n      flex: 1;\n      font-size: 24px;\n      color: #333333;\n      text-align: left;\n      height: 36px;\n      line-height: 36px;\n    }\n    .header-action {\n      width: 138px;\n      height: 36px;\n      .create-sub-fee {\n        width: 138px;\n        height: 32px;\n        line-height: 32px;\n        margin-top: 2px;\n        border: 1px solid #3D6ED1;\n        border-radius: 2px;\n      }\n    }\n  }\n}\n.tabs {\n  padding: 20px 20px 0 20px;\n}\n\n.actions {\n  padding: 0 20px 10px 20px;\n\n  .list-btn {\n    width: auto !important;\n    padding: 0 10px;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplyInfoManagement/infoUpdateRequest/listContainer.vue","messages":[{"ruleId":"vue/require-valid-default-prop","severity":2,"message":"Type of the default value for 'selectedRows' prop must be a function.","line":113,"column":16,"nodeType":"ArrayExpression","endLine":113,"endColumn":18}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-checkbox-group :value=\"selectedRows\" @input=\"selectionChange\">\n    <el-table\n      class=\"list-container\"\n      :max-height=\"config.maxHeight\"\n      :span-method=\"config.spanMethod || undefined\"\n      :sort-by=\"config.sortBy || ''\"\n      border\n      @sort-change=\"sortChange\"\n      @row-click=\"rowClick\"\n      :data=\"dataList || []\"\n      :row-key=\"config.rowKey\"\n      ref=\"table\"\n    >\n      <el-table-column column-key=\"action\" width=\"100px\" align=\"center\" label-class-name=\"pms-ele-ui select-all-table-column\">\n        <template slot=\"header\" slot-scope=\"scope\">\n          <el-dropdown\n            split-button\n            :key=\"formatCheckedType\"\n            @click=\"resetCheckedType\"\n            placement=\"bottom\"\n            trigger=\"click\"\n            class=\"select-page-dropdown\"\n            @command=\"changeSelectPageType\"\n          >\n            {{formatCheckedType}}\n            <el-dropdown-menu class=\"options-field-menu\" slot=\"dropdown\">\n              <el-dropdown-item command=\"CURRENT\">{{$t('commonCurrentPage')}}</el-dropdown-item>\n              <el-dropdown-item command=\"ALL\">{{$t('commonAllPage')}}</el-dropdown-item>\n            </el-dropdown-menu>\n          </el-dropdown>\n        </template>\n        <template slot-scope=\"scope\">\n          <el-checkbox :disabled=\"checkedType === 'ALL'\" :label=\"scope.row\">{{''}}</el-checkbox>\n        </template>\n      </el-table-column>\n      <slot name=\"checkColumn\"></slot>\n      <el-table-column\n        :prop=\"schema.field\"\n        :sortable=\"schema.sortable || false\"\n        :width=\"schema.width || 'auto'\"\n        :column-key=\"schema.columnKey || ''\"\n        :align=\"schema.align || config.align || 'center'\"\n        :label=\"schema.label\"\n        v-for=\"schema in tableSchema\"\n        :key=\"schema.field\"\n        :sort-by=\"schema.sortBy || ''\"\n        :fixed=\"schema.fixed\"\n      >\n        <template slot-scope=\"scope\">\n          <pms-table-cell :renderData=\"getTableCellRender(schema, scope.row, scope.$index)\"></pms-table-cell>\n        </template>\n      </el-table-column>\n      <slot name=\"end\"></slot>\n      <slot name=\"displayOptions\"></slot>\n    </el-table>\n  </el-checkbox-group>\n</template>\n\n<script>\nimport {noop} from 'lodash';\n\nconst PMSTableCell = {\n  props: {\n    renderData: {\n      required: true\n    }\n  },\n  render(h) {\n    const { schema, row, index } = this.$props.renderData;\n    if (typeof schema.render === 'function') {\n      const data = schema.render(schema, row, index, h);\n      const renderElement = Array.isArray(data) ? data : ['span', data];\n      return h(...renderElement);\n    } else if (schema.type === 'enum') {\n      const options = schema.options || [];\n      const option =\n        options.find((item) => item.value === row[schema.field]) || {};\n      return h('span', option.label || '');\n    } else {\n      return h('span', row[schema.field]);\n    }\n  }\n};\nexport default {\n  props: {\n    dataList: {\n      type: Array,\n      required: true\n    },\n    tableSchema: {\n      type: Array,\n      required: true\n    },\n    config: {\n      type: Object,\n      default: () => ({})\n    },\n    checkedType: {\n      type: String,\n      default: ''\n    },\n    changeSelectPageType: {\n      type: Function,\n      default: noop\n    },\n    resetCheckedType: {\n      type: Function,\n      default: noop\n    },\n    selectedRows: {\n      type: Array,\n      default: []\n    }\n  },\n  components: {\n    'pms-table-cell': PMSTableCell\n  },\n  methods: {\n    getTableCellRender(schema, row, index) {\n      return { schema, row, index };\n    },\n    sortChange(row, column) {\n      this.$emit('sortChange', row, column);\n    },\n    rowClick(row, column, event) {\n      this.$emit('rowClick', row, column, event);\n    },\n    selectionChange(selection) {\n      this.$emit('selectionChange', selection);\n    }\n  },\n  computed: {\n    formatCheckedType() {\n      return this.checkedType === 'ALL' ? this.$t('commonAllPage') : this.$t('commonCurrentPage');\n    }\n  }\n};\n</script>\n<style lang=\"scss\">\n@import \"~@/styles/common.scss\";\n.list-container {\n  .po-action {\n    text-align: center;\n    .action-btn {\n      display: block;\n      font-size: 14px;\n      margin: 0 auto;\n    }\n    .action-btn.el-button--primary {\n      font-size: 14px;\n      color: #fff;\n      background-color: #3d6ed1;\n      // display: inline-block;\n      cursor: pointer;\n      text-align: center;\n      border-radius: 3px;\n      vertical-align: middle;\n      font-weight: 400;\n      border: none;\n    }\n    .action-btn + .action-btn {\n      margin: 10px auto;\n    }\n  }\n  &.el-table {\n    th>.cell {\n      line-height: 1em;\n    }\n    .caret-wrapper {\n      height: 22px;\n    }\n    .sort-caret.ascending {\n      top:0;\n    }\n    .sort-caret.descending {\n      bottom:0;\n    }\n  }\n}\n.pms-ele-ui.select-all-table-column {\n  div {\n    padding: 0;\n  }\n  .select-page-dropdown {\n    padding: 0;\n    margin-left: 0;\n    .el-button {\n      border: none;\n      background: unset;\n      padding: 0px;\n      &:nth-child(1) {\n        word-break: break-word;\n        white-space: normal;\n        width: 60px;\n        line-height: 16px;\n        padding-right: 0px;\n      }\n      &::before {\n        width: 0;\n      }\n    }\n  }\n}\n</style>\n\n<style lang=\"scss\" scoped>\n.supplier-id:hover {\n  text-decoration: underline;\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplyInfoManagement/infoUpdateRequest/searchForm.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":2,"column":40,"nodeType":"VIdentifier","messageId":"deprecated","endLine":2,"endColumn":46}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-form class=\"search-form\" @submit.native.prevent=\"onSearch\">\n    <div class=\"search-form-row\">\n      <div v-for=\"schema in schemaList\" :key=\"schema.field\" :class=\"getColLongClass(schema.field)\">\n        <el-form-item :label=\"schema.label\">\n          <pms-form-item @input=\"modifyForm\" :renderData=\"{ schema, form }\"></pms-form-item>\n        </el-form-item>\n      </div>\n    </div>\n    <el-row class=\"action-row\">\n      <el-form-item class=\"right-action-btn\">\n        <div class=\"list-btn search-btn\" @click=\"onSearch\">{{$t(\"rule.search\")}}</div>\n        <div class=\"list-btn clear-btn\" @click=\"onReset\">{{$t(\"purchaseRequest.clear\")}}</div>\n        <el-button native-type=\"submit\" class=\"hidden-btn\"></el-button>\n      </el-form-item>\n    </el-row>\n  </el-form>\n</template>\n\n<script>\nimport PMSFormItem, { getSelectOptions } from '@/components/BaseItem/formItem';\nimport { SkuChangeRequestStatusList, RequestType } from '@/utils/constant';\nimport { getSupplierList } from '@/api/supplier';\n\nexport default {\n  data() {\n    return {};\n  },\n  props: {\n    form: {\n      type: Object,\n      required: true\n    },\n    activeTab: {\n      type: String,\n      required: true\n    }\n  },\n  components: {\n    'pms-form-item': PMSFormItem\n  },\n  computed: {\n    isUniversalUser() {\n      return this.$store.getters.isUniversalUser;\n    },\n    regionList() {\n      return this.$store.getters.countrySelectList || [];\n    },\n    countryList() {\n      return [...new Set([...this.$store.getters.countryList.map(item => item.country)])];\n    },\n    schemaList() {\n      return [\n        { field: 'region', type: 'select', label: this.$t('commonRegion'),\n          on: { change: () => this.onSearch() },\n          defaultValue: !this.isUniversalUser ? this.$store.getters.country : '',\n          props: { disabled: !this.isUniversalUser, clearable: true, placeholder: 'Please Select' },\n          getChildren: (h) => getSelectOptions([{ label: 'All', value: '' }].concat(this.regionList), h)\n        },\n        { field: 'supplier_id', type: 'autocomplete', labelWidth: '216px', width: 8,\n          label: `${this.$t('backMargin.vendorSiteID')}/${this.$t('purchaseRequest.supplierName')}`,\n          on: {\n            blur: this.onSupplierBlur,\n            select: this.onSupplierSelect\n          },\n          props: {\n            placeholder: 'Please Input',\n            'trigger-on-focus': false,\n            'value-key': 'value',\n            'fetch-suggestions': (value, callback) => this.getSuppliers(value, callback)\n          }\n        },\n        { field: 'request_status', type: 'select', label: this.$t('commonStatus'),\n          getChildren: (h) => getSelectOptions(SkuChangeRequestStatusList, h),\n          on: { change: () => this.onSearch() },\n          defaultValue: this.activeTab === 'PENDING' ? 1 : '', // 1为Pending Confirmation\n          props: {disabled: this.activeTab === 'PENDING'}\n        },\n        { field: 'request_type', type: 'select', label: this.$t('requestType'),\n          getChildren: (h) => getSelectOptions(RequestType, h),\n          on: { change: () => this.onSearch() },\n          props: {\n            placeholder: 'Please Select'\n          }\n        },\n        { field: 'pr_request_id', type: 'input', label: this.$t('prSourcePR'),\n          attrs: {\n            placeholder: 'Please Input'\n          }\n        },\n        { field: 'request_id', type: 'input', label: this.$t('commonRequestID'),\n          attrs: {\n            placeholder: 'Please Input'\n          }\n        }\n      ];\n    }\n  },\n  methods: {\n    getColLongClass(field) {\n      return field === 'supplier_id' ? 'long-col' : '';\n    },\n    modifyForm(schema, value) {\n      this.$emit('modify', schema.field, value);\n    },\n    onSearch() {\n      this.$emit('search');\n    },\n    onReset() { // NOTE: 方法会被父组件调用\n      this.schemaList.forEach(schema => {\n        this.$emit('modify', schema.field, schema.defaultValue === null ? undefined : schema.defaultValue || '');\n      });\n    },\n    getSuppliers(value, callback) {\n      const params = { pageno: 1, count: 20, key: `${value}`.trim(), approval_country: this.countryList.join('_') };\n      getSupplierList(params).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          const { list = [] } = resp.data || {};\n          if (Array.isArray(list) && list.length) {\n            return callback(list.map(item => ({ ...item, value: `${item.supplier_id} ${item.name}` })));\n          } else {\n            this.$message.error('This Supplier ID is not exist');\n          }\n        }\n        callback([]);\n      }).catch(() => {\n        this.$message.error('Get Supplier Failed');\n        callback([]);\n      });\n    },\n    onSupplierBlur() {\n      if (this.form.cacheSupplier !== this.form.supplier_id) {\n        this.$emit('modify', 'cacheSupplier', '');\n        this.$emit('modify', 'supplier_id', '');\n      }\n    },\n    onSupplierSelect(item) {\n      this.$emit('modify', 'cacheSupplier', item.supplier_id);\n      this.$emit('modify', 'supplier_id', item.supplier_id);\n      this.$emit('search');\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  .search-form {\n    margin: 22px 18px 20px 19px;\n    .el-col {\n      height: 58px;\n      line-height: 58px;\n    }\n    .search-form-row {\n      display: grid;\n      grid-gap: 12px;\n      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n      margin-bottom: 10px;\n    }\n    .long-col {\n      grid-column-start: span 2;\n    }\n    .action-row {\n      margin: -16px -4px -18px 0;\n    }\n    .right-action-btn {\n      float: right;\n      width: 154px;\n      height: 36px;\n      overflow: hidden;\n      margin-bottom: 0;\n      .search-btn {\n        background: #3D6ED1;\n        border-radius: 2px;\n      }\n      .clear-btn {\n        color: #3D6ED1;\n        border: 1px solid #3D6ED1;\n        border-radius: 2px;\n      }\n      .hidden-btn {\n        margin-left: -10px;\n        padding: 0;\n        width: 0;\n        height: 0;\n        visibility: hidden;\n      }\n    }\n  }\n</style>\n\n<style lang=\"scss\">\n  .search-form {\n    .el-form-item__label, .el-form-item__content {\n      display: inline-block;\n    }\n    .el-form-item__label {\n      background: #FAFBFD;\n      border-radius: 3px 0 0 3px;\n      font-family: Roboto-Regular;\n      font-size: 14px;\n      color: #222933;\n      padding: 0 8px;\n      border: 1px solid #E2E6EC;\n      height: 32px;\n      line-height: 32px;\n    }\n    .el-form-item__content {\n      line-height: 32px;\n      border-left: none;\n      flex: 1;\n    }\n    .el-input__inner {\n      background: #FFFFFF;\n      border: 1px solid #E2E6EC;\n      border-radius: 0 4px 4px 0;\n      border-left: none;\n      padding-left: 8px;\n    }\n    input::placeholder {\n      font-family: Roboto-Regular;\n      font-size: 14px;\n      color: #B5BBC6;\n    }\n    .el-form-item {\n      display: flex;\n    }\n  }\n  .update-request-list .search-form {\n    .el-autocomplete {\n      width: 100%;\n    }\n    .el-input__inner {\n      height: 32px;\n    }\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplyInfoManagement/infoUpdateRequest/skuList.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplyInfoManagement/skuSupplierInfo/actionLogDialog/index.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":3,"column":22,"nodeType":"VIdentifier","messageId":"deprecated","endLine":3,"endColumn":28}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-dialog width=\"75%\" class='pms-ui' @close='onClose' :title=\"$t('purchaseRequest.actionLog')\" :visible.sync=\"dialogVisible\">\n    <el-form @submit.native.prevent=\"onSearchSKU\" :inline=\"true\" :model=\"searchForm\">\n      <el-form-item :label=\"$t('purchaseOrder.skuID')\">\n        <el-input v-model=\"searchForm.sku_id\" size=\"mini\" clearable></el-input>\n      </el-form-item>\n      <el-form-item :label=\"$t('NC.vendorSiteId')\">\n        <pms-form-item @input=\"modifyForm\" :renderData=\"{ schema: supplierSchema, form: searchForm }\"></pms-form-item>\n      </el-form-item>\n      <el-form-item :label=\"$t('supplierSBSVendorID')\">\n        <pms-form-item class=\"select-input\" @input=\"modifySbsVendorId\" :renderData=\"{ schema: sbsVendorIdSchema, form: searchForm}\"></pms-form-item>\n      </el-form-item>\n      <el-form-item>\n        <el-button class='list-btn' @click=\"onSearchSKU\" size=\"mini\">{{$t('purchaseRequest.search')}}</el-button>\n        <el-button class='list-btn' @click=\"onResetSearchForm\" size=\"mini\">{{$t('purchaseRequest.reset')}}</el-button>\n        <el-button native-type=\"submit\" v-show=\"false\"></el-button>\n      </el-form-item>\n    </el-form>\n    <el-table v-loading=\"loading\" :data=\"logList\" border size=\"mini\">\n      <el-table-column :label=\"$t('approvalFlow.time')\">\n        <template slot-scope=\"scope\">\n          {{scope.row.ctime ? `${moment(scope.row.ctime * 1000).format('YYYY-MM-DD HH:mm:ss')} (GMT+8)` : ''}}\n        </template>\n      </el-table-column>\n      <el-table-column min-width=\"100px\" prop=\"sku_id\" :label=\"$t('purchaseOrder.skuID')\"></el-table-column>\n      <el-table-column prop=\"vendor_site_id\" :label=\"$t('NC.vendorSiteId')\"></el-table-column>\n      <el-table-column prop=\"region\" :label=\"$t('purchaseRequest.region')\"></el-table-column>\n      <el-table-column width=\"400px\" :label=\"$t('purchaseRequest.action')\">\n        <template slot-scope=\"scope\">\n          <el-table border :data=\"scope.row.change_info || []\">\n            <el-table-column prop=\"field\" :label=\"$t('opHistory.field')\"></el-table-column>\n            <el-table-column prop=\"before\" :label=\"$t('opHistory.before')\"></el-table-column>\n            <el-table-column prop=\"after\" :label=\"$t('opHistory.after')\"></el-table-column>\n          </el-table>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"operator\" :label=\"$t('opHistory.operator')\"></el-table-column>\n    </el-table>\n    <div class=\"content-center padding-top-bottom\">\n      <el-pagination background layout=\"sizes, prev, pager, next\" :current-page='page' :page-sizes='[10, 20, 50, 100]' :total.sync=\"total\" :page-size=\"pageSize\" @size-change='handleSizeChange' @current-change=\"handleChangePage\"></el-pagination>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nimport PMSFormItem from '@/components/BaseItem/formItem';\nimport { getSupplierActionLog } from '@/api/supplierSKU';\nimport { getSupplierList, getSbsVendorSupplierSearch } from '@/api/supplier';\nimport { formatParams } from '@/utils/formatParams';\nimport moment from 'moment';\n\nexport default {\n  components: {\n    'pms-form-item': PMSFormItem\n  },\n  computed: {\n    countryList() {\n      return [...new Set(this.$store.getters.countryList.map(item => item.country))];\n    },\n    supplierSchema() {\n      return {\n        field: 'vendor_site_id', type: 'autocomplete', label: this.$t('backMargin.vendorSiteID'),\n        on: {\n          select: this.onSupplierSelect\n        },\n        props: {\n          'trigger-on-focus': false,\n          'value-key': 'supplier_id',\n          'fetch-suggestions': (value, callback) => this.getSuppliers(value, callback)\n        }\n      };\n    },\n    sbsVendorIdSchema() {\n      return {\n        width: '110px',\n        field: 'sbs_vendor_id', type: 'autocomplete', label: this.$t('backMargin.vendorSiteID'),\n        on: {\n          select: this.onSbsVendorIdSelect\n        },\n        props: {\n          'trigger-on-focus': false,\n          'value-key': 'sbs_vendor_id',\n          'fetch-suggestions': (value, callback) => this.getSbsVendorID(value, callback)\n        }\n      };\n    }\n  },\n  data() {\n    return {\n      dialogVisible: false,\n      loading: false,\n      searchForm: {\n        sku_id: '',\n        vendor_site_id: '',\n        sbs_vendor_id: ''\n      },\n      logList: [],\n      moment,\n      page: 1,\n      total: 0,\n      pageSize: 10\n    };\n  },\n  props: {\n    visible: {\n      type: Boolean,\n      required: true\n    }\n  },\n  methods: {\n    modifySbsVendorId(schema, value) {\n      this.searchForm.sbs_vendor_id = value;\n    },\n\n    onSbsVendorIdSelect(item) {\n      this.searchForm.sbs_vendor_id = item.sbs_vendor_id;\n    },\n\n    async getSbsVendorID(value, cb) {\n      try {\n        const params = { pageno: 1, count: 20, sbs_vendor_id: `${value}`.trim(), approval_country: this.countryList.join('_') };\n        const resp = await getSbsVendorSupplierSearch(params);\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n          cb([]);\n        } else {\n          const { list = [] } = resp.data || {};\n          if (Array.isArray(list) && list.length) {\n            return cb(list);\n          } else {\n            this.$message.error(`Supplier doesn't exist or supplier id is wrong.`);\n          }\n          cb([]);\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    modifyForm(schema, value) {\n      this.$set(this.searchForm, schema.field, value);\n    },\n    getSuppliers(value, callback) {\n      const params = { pageno: 1, count: 20, key: `${value}`.trim(), approval_country: this.countryList.join('_') };\n      getSupplierList(params).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          const { list = [] } = resp.data || {};\n          if (Array.isArray(list) && list.length) {\n            return callback(list);\n          } else {\n            this.$message.error(`Supplier doesn't exist or supplier id is wrong.`);\n          }\n        }\n        callback([]);\n      }).catch(() => {\n        this.$message.error(`Server error, please retry and report to dev if retry doesn't work.`);\n        callback([]);\n      });\n    },\n    onSupplierSelect(item) {\n      this.supplierID = item.supplier_id;\n      this.$set(this.searchForm, 'vendor_site_id', item.supplier_id);\n    },\n    onResetSearchForm() {\n      this.searchForm.sku_id = '';\n      this.searchForm.vendor_site_id = '';\n    },\n    onClose() {\n      this.$emit('close');\n    },\n    onSearchSKU() {\n      this.handleCurrentChange(1);\n    },\n    handleChangePage(pageIndex) {\n      this.page = pageIndex;\n      this.handleCurrentChange(pageIndex);\n    },\n    handleSizeChange(size) {\n      this.pageSize = size;\n      this.onSearchSKU();\n    },\n    handleCurrentChange(page) {\n      this.loading = true;\n      getSupplierActionLog(formatParams({\n        ...this.searchForm,\n        page_no: page || this.page,\n        count: this.pageSize\n      })).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.logList = resp.data.action_log_list || [];\n          this.total = resp.data.total || 0;\n        }\n        this.loading = false;\n      }).catch(() => {\n        this.loading = false;\n      });\n    }\n  },\n  watch: {\n    '$props.visible': function(now, prev) {\n      this.dialogVisible = now;\n      if (now) {\n        this.onResetSearchForm();\n        this.logList = [];\n        this.total = 0;\n        this.page = 1;\n        this.pageSize = 10;\n      }\n    }\n  }\n};\n</script>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplyInfoManagement/skuSupplierInfo/bindSkuDialog/addSkuInfo.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplyInfoManagement/skuSupplierInfo/bindSkuDialog/index.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":46,"column":44,"nodeType":"VIdentifier","messageId":"deprecated","endLine":46,"endColumn":50}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-dialog\n    @close=\"$emit('close')\" :visible.sync=\"dialogVisible\" class=\"add-sku\"\n    :width=\"modeConfig.width\" :title=\"$t(modeConfig.title)\" :show-close=\"false\">\n    <div class=\"steps-wrapper\">\n      <div class=\"step\" :class=\"{active: mode === 'search'}\">\n        <span class=\"num\">1</span>\n        Select Supplier\n      </div>\n      <div class=\"step-border\"></div>\n      <div class=\"step\" :class=\"{active: mode !== 'search'}\">\n        <span class=\"num\">2</span>\n        Edit Supplier & SKU Info\n      </div>\n    </div>\n    <section v-if=\"modeConfig.showSelect\" class=\"select-supplier-sku\">\n      <div class=\"select-area\">\n        <span class=\"select-title\">{{$t('supplier.selectSupplier')}}</span>\n        <section class=\"select-input-area\" v-if=\"defaultInfo.type !== 'supplier'\">\n          <label class=\"select-input-label\">{{$t('NC.vendorSiteId')}}</label>\n          <pms-form-item class=\"select-input\" @input=\"modifyForm\" :renderData=\"{ schema: supplierSchema, form: { vendor_site_id: supplierID }}\"></pms-form-item>\n          <label class=\"select-input-label\">{{$t('supplierSBSVendorID')}}</label>\n          <pms-form-item class=\"select-input\" @input=\"modifySbsVendorId\" :renderData=\"{ schema: sbsVendorIdSchema, form: { sbs_vendor_id: sbsVendorId }}\"></pms-form-item>\n          <!-- <el-input clearable @keyup.enter.native=\"searchSupplier\" :disabled=\"supplierDisabled\" class=\"select-input\" v-model=\"supplierID\"></el-input>\n          <el-button :disabled=\"supplierDisabled\" @click=\"searchSupplier\" class=\"dialog-list-btn select-input-btn\" :loading=\"supplierLoading\">\n            {{$t('purchaseRequest.search')}}\n          </el-button> -->\n        </section>\n        <el-table :data=\"supplierList\" border>\n          <el-table-column prop=\"supplier_id\" :label=\"$t('NC.vendorSiteId')\" :formatter=\"formatterSupplierId\"></el-table-column>\n          <el-table-column prop=\"sbs_vendor_id\" :label=\"$t('supplierSBSVendorID')\"></el-table-column>\n          <el-table-column prop=\"name\" :label=\"$t('purchaseRequest.supplierName')\"></el-table-column>\n          <el-table-column prop=\"purchase_type\" :label=\"$t('purchaseRequest.purchaseType')\"></el-table-column>\n          <el-table-column prop=\"approval_country\" :label=\"$t('purchaseRequest.region')\"></el-table-column>\n          <el-table-column v-if=\"defaultInfo.type !== 'supplier'\" :label=\"$t('purchaseRequest.action')\">\n            <template slot-scope=\"scope\">\n              <el-button class=\"list-btn\" @click=\"removeSupplier(scope.$index)\">{{$t('commonRemove')}}</el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n      </div>\n      <div class=\"select-area\">\n        <span class=\"select-title\">{{$t('supplier.selectSku')}}</span>\n        <section class=\"select-input-area\" v-if=\"defaultInfo.type !== 'sku'\">\n          <label class=\"select-input-label\">{{$t('purchaseOrder.skuID')}}</label>\n          <el-input clearable @keyup.enter.native=\"searchSku\" :disabled=\"skuDisabled\" class=\"select-input\" v-model=\"skuID\"></el-input>\n          <el-button :disabled=\"skuDisabled\" @click=\"searchSku\" class=\"dialog-list-btn select-input-btn\" :loading=\"skuLoading\">\n            {{$t('purchaseRequest.search')}}\n          </el-button>\n        </section>\n        <el-table :data=\"skuList\" border>\n          <el-table-column prop=\"sku_id\" :label=\"$t('purchaseOrder.skuID')\"></el-table-column>\n          <el-table-column prop=\"shop_id\" :label=\"$t('supplier.shopID')\"></el-table-column>\n          <el-table-column prop=\"sku_name\" :label=\"$t('purchaseRequest.skuName')\"></el-table-column>\n          <el-table-column prop=\"country\" :label=\"$t('purchaseRequest.region')\"></el-table-column>\n          <el-table-column v-if=\"defaultInfo.type !== 'sku'\" :label=\"$t('purchaseRequest.action')\">\n            <template slot-scope=\"scope\">\n              <el-button class=\"list-btn\" @click=\"removeSku(scope.$index)\">{{$t('commonRemove')}}</el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n      </div>\n    </section>\n    <add-sku-info :country=\"modeConfig.country\" :skuList=\"list\" v-else></add-sku-info>\n    <div slot=\"footer\">\n      <el-button type=\"danger\" size=\"mini\" plain @click=\"handleCancelDialogue\">{{$t('supplier.cancel')}}</el-button>\n      <el-button :loading=\"loading\" v-if=\"modeConfig.showSelect\" type=\"primary\" size=\"mini\" @click=\"handleNext\">{{$t('supplier.next')}}</el-button>\n      <el-button :loading=\"loading\" v-if=\"!modeConfig.showSelect\" type=\"primary\" size=\"mini\" @click=\"handleBack\">{{$t('supplier.back')}}</el-button>\n      <el-button :loading=\"loading\" v-if=\"!modeConfig.showSelect\" type=\"primary\" size=\"mini\" @click=\"handleConfirm\">{{$t('supplier.confirm')}}</el-button>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nimport { getSkuManagementList } from '@/api/skuMgt';\nimport { getSupplierList, getSbsVendorSupplierSearch, getUnitList } from '@/api/supplier';\nimport { supplierBindCheck, supplierBind } from '@/api/supplierSKU';\nimport AddSkuInfo from './addSkuInfo';\nimport PMSFormItem from '@/components/BaseItem/formItem';\nimport { validateSkuList } from '@/utils/supplierDetailValidate';\nimport { formatParams, getSomeKeys } from '@/utils/formatParams';\nimport { FESKUStatus } from '@/utils/constant';\n\nexport default {\n  components: {\n    AddSkuInfo,\n    'pms-form-item': PMSFormItem\n  },\n  data() {\n    return {\n      dialogVisible: false,\n      mode: 'search',\n      loading: false,\n      supplierList: [],\n      skuList: [],\n      supplierID: '',\n      sbsVendorId: '',\n      supplierIDCache: '',\n      skuID: '',\n      supplierLoading: false,\n      skuLoading: false,\n      list: [],\n      storeData: ''\n    };\n  },\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    defaultInfo: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  computed: {\n    countryList() {\n      return [...new Set([...this.$store.getters.countryList.map(item => item.country)])];\n    },\n    supplierDisabled() {\n      return this.defaultInfo.type === 'supplier' || (this.skuList.length > 1 && this.supplierList.length >= 1);\n    },\n    supplierSchema() {\n      return {\n        width: '100px',\n        field: 'vendor_site_id', type: 'autocomplete', label: this.$t('backMargin.vendorSiteID'),\n        on: {\n          select: this.onSupplierSelect\n        },\n        props: {\n          disabled: this.supplierDisabled,\n          'trigger-on-focus': false,\n          'value-key': 'supplier_id',\n          'fetch-suggestions': (value, callback) => this.getSuppliers(value, callback)\n        }\n      };\n    },\n    sbsVendorIdSchema() {\n      return {\n        width: '110px',\n        field: 'sbs_vendor_id', type: 'autocomplete',\n        label: this.$t('supplierSBSVendorID'),\n        on: {\n          select: this.onSbsVendorIdSelect\n        },\n        props: {\n          'trigger-on-focus': false,\n          'value-key': 'sbs_vendor_id',\n          'fetch-suggestions': (value, callback) => this.getSbsVendorID(value, callback)\n        }\n      };\n    },\n    skuDisabled() {\n      return this.defaultInfo.type === 'sku' || (this.supplierList.length > 1 && this.skuList.length >= 1);\n    },\n    modeConfig() {\n      return {\n        title: this.mode === 'bind' ? 'supplier.addSkuInfo' : 'supplier.addSupplierSku',\n        showSelect: this.mode !== 'bind',\n        country: (this.list[0] || {}).approval_country,\n        width: this.mode === 'bind' ? '90%' : '1228px'\n      };\n    }\n  },\n  methods: {\n    formatterSupplierId(row, column) {\n      return row.supplier_id || '/';\n    },\n    getUnitList(country) {\n      return new Promise((resolve, reject) => {\n        getUnitList({ country, limit: 500 }).then(resp => {\n          if (resp.status !== 0) {\n            this.$message({\n              message: resp.info,\n              type: 'error'\n            });\n            reject(resp.info);\n          } else {\n            resolve(resp.data.unit_rate_list.filter(item => item.status === 0));\n          }\n        }).catch((e) => {\n          this.$message({\n            message: e,\n            type: 'error'\n          });\n          reject(e);\n        });\n      });\n    },\n    handleNext() {\n      // 不能选择不同国家的supplier(sku catalogue需求加入)\n      if (new Set(this.supplierList.map(item => item.approval_country)).size > 1) {\n        return this.$message.error('Can not select suppliers from different country!');\n      }\n      // 不能选择不同国家的sku\n      if (new Set(this.skuList.map(item => item.country)).size > 1) {\n        return this.$message.error('Can not select skus from different country!');\n      }\n      // supplier和sku的国家必须一致\n      if (this.skuList[0].country !== this.supplierList[0].approval_country) {\n        return this.$message.error('The country of sku and supplier should be the same');\n      }\n\n      this.list = [];\n      const fieldList = ['supplier_id', 'supplier_name', 'sku_id', 'sku_name', 'country', 'approval_country', 'shop_id', 'sbs_vendor_id'];\n      const skuLength = this.skuList.length;\n      const supplierLength = this.supplierList.length;\n      if (!supplierLength) return this.$message.error('Supplier is required');\n      if (!skuLength) return this.$message.error('SKU is required');\n      for (let i = 0; i < skuLength; i++) {\n        for (let j = 0; j < supplierLength; j++) {\n          this.list.push({\n            ...getSomeKeys({ ...this.supplierList[j], ...this.skuList[i] }, fieldList),\n            source_status: 0,\n            replenishment_indicator: '',\n            indicator_remark: '',\n            selling_type: 2,\n            sku_unit_list: [{ unit_id: '', unit_name: '', guide_purchase_price: undefined }]\n          });\n        }\n      }\n      this.loading = true;\n      const paramsList = this.list.map(item => ({ sku_id: item.sku_id, supplier_id: item.supplier_id, sbs_vendor_id: item.sbs_vendor_id }));\n      supplierBindCheck({ sku_list: paramsList }).then(async(resp) => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.mode = 'bind';\n          if (Array.isArray(resp.data.pre_fill_sku_info_list)) {\n            const unitList = await this.getUnitList(this.skuList[0].country).catch(() => {});// sku和supplier的country在这里是一致的\n            const OneToOneUnit = (unitList || []).find(item => item.unit === 1) || {};\n            resp.data.pre_fill_sku_info_list.forEach((item, i) => {\n              if (item.have_set) {\n                this.$set(this.list[i], 'min_order_quantity', item.min_order_quantity);\n                this.$set(this.list[i], 'sku_unit_list', [\n                  {\n                    unit_id: OneToOneUnit.unit_id || '',\n                    unit_name: OneToOneUnit.unit_name || '',\n                    guide_purchase_price: item.guide_purchase_price\n                  }\n                ]);\n                this.$set(this.list[i], 'external_sku_id', item.supplier_sku_id);\n                this.$set(this.list[i], 'barcode', item.barcode);\n              }\n            });\n          }\n        }\n        this.loading = false;\n      }).catch(() => { this.loading = false; });\n    },\n    handleBack() {\n      this.mode = 'search';\n    },\n    handleConfirm() {\n      let errorMessage = '';\n      const hasError = this.list.some((row, index) => {\n        errorMessage = validateSkuList(row, index);\n        return errorMessage;\n      });\n      if (hasError) {\n        this.$message.error(errorMessage);\n        return;\n      }\n      const data = this.list.map(item => {\n        return {\n          ...formatParams(Object.assign({}, item, {\n            guide_price: (item.sku_unit_list.find(el => el.unit_id === item.checked) || {}).guide_purchase_price,\n            unit_id: item.checked,\n            unit_name: (item.sku_unit_list.find(el => el.unit_id === item.checked) || {}).unit_name,\n            sku_unit_list: item.sku_unit_list.map(el => {\n              return formatParams(el, { guide_purchase_price: 'guide_price' });\n            })\n          })),\n          available_date: item.available_date || '',\n          supplier_id: item.supplier_id || '',\n          replenishment_indicator: item.replenishment_indicator,\n          indicator_remark: item.indicator_remark\n        };\n      });\n      this.loading = true;\n      supplierBind({ sku_list: data }).then(resp => {\n        this.loading = false;\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.$message.success('Success');\n          this.$emit('close');\n          this.$emit('update');\n        }\n      }).catch(() => { this.loading = false; });\n    },\n    handleCancelDialogue() {\n      this.$emit('close');\n    },\n    modifyForm(schema, value) {\n      this.supplierID = value;\n    },\n    modifySbsVendorId(schema, value) {\n      this.sbsVendorId = value;\n    },\n    onSupplierSelect(item) {\n      this.sbsVendorId = item.sbs_vendor_id;\n      this.supplierID = item.supplier_id;\n      if (this.supplierList.find(supplier => supplier.supplier_id === this.supplierID)) {\n        return this.$message.error(`Supplier ${this.supplierID} already exists`);\n      }\n      this.supplierList.push({ ...item, supplier_name: item.name });\n    },\n    onSbsVendorIdSelect(item) {\n      this.sbsVendorId = item.sbs_vendor_id;\n      this.supplierID = item.supplier_id;\n      if (this.supplierList.find(supplier => supplier.sbs_vendor_id === this.sbsVendorId)) {\n        return this.$message.error(`Supplier ${this.sbsVendorId} already exists`);\n      }\n      this.supplierList.push({ ...item, supplier_name: item.name });\n    },\n    getSuppliers(value, callback) {\n      const params = { pageno: 1, count: 20, key: `${value}`.trim(), approval_country: this.countryList.join('_') };\n      getSupplierList(params).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          const { list = [] } = resp.data || {};\n          if (Array.isArray(list) && list.length) {\n            return callback(list);\n          } else {\n            this.$message.error(`Supplier doesn't exist or supplier id is wrong.`);\n          }\n        }\n        callback([]);\n      }).catch(() => {\n        this.$message.error(`Server error, please retry and report to dev if retry doesn't work.`);\n        callback([]);\n      });\n    },\n    async getSbsVendorID(value, cb) {\n      try {\n        const params = { pageno: 1, count: 20, sbs_vendor_id: `${value}`.trim(), approval_country: this.countryList.join('_') };\n        const resp = await getSbsVendorSupplierSearch(params);\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n          cb([]);\n        } else {\n          const { list = [] } = resp.data || {};\n          if (Array.isArray(list) && list.length) {\n            return cb(list);\n          } else {\n            this.$message.error(`Supplier doesn't exist or supplier id is wrong.`);\n          }\n          cb([]);\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    removeSupplier(index) {\n      this.supplierList.splice(index, 1);\n    },\n    searchSku() {\n      if (this.skuList.find(sku => sku.sku_id === this.skuID)) {\n        return this.$message.error(`SKU ${this.skuID} already exists`);\n      }\n      this.skuLoading = true;\n      const params = { sku_id: this.skuID, page_no: 1, count: 1 };\n      getSkuManagementList(params).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          const list = resp.data.skus || [];\n          const sku = list.find(item => item.sku_id === params.sku_id);\n          if (!sku) {\n            this.$message.error(`SCBS：SKU doesn't exist or sku id is wrong.`);\n          } else if (sku.status !== 1) {\n            const skuStatus = FESKUStatus.find(item => item.value === sku.status) || {};\n            this.$message.error(`SKU status is ${skuStatus.label || ''}`);\n          } else if (sku.has_virtual_sku) {\n            this.$message.error(`This is a virtual package item, you can't link it to supplier.`);\n          } else {\n            this.skuList.push(sku);\n          }\n        }\n        this.skuLoading = false;\n      }).catch(() => {\n        this.skuLoading = false;\n        this.$message.error(`SCBS server error, please retry and report to dev if retry doesn't work.`);\n      });\n    },\n    removeSku(index) {\n      this.skuList.splice(index, 1);\n    }\n  },\n  watch: {\n    '$props.visible': {\n      handler(curr) {\n        if (curr) {\n          this.mode = 'search';\n          this.supplierID = '';\n          this.sbsVendorId = '';\n          this.supplierLoading = false;\n          this.supplierList = this.defaultInfo.type === 'supplier' ? this.defaultInfo.list.map(item => {\n            const supplier = { ...item };\n            delete supplier.sku_id;\n            supplier.name = supplier.supplier_name;\n            return supplier;\n          }) : [];\n          this.skuID = '';\n          this.skuLoading = false;\n          this.skuList = this.defaultInfo.type === 'sku' ? this.defaultInfo.list.map(item => {\n            const sku = { ...item };\n            delete sku.supplier_id;\n            delete sku.sbs_vendor_id; // 要删除掉sbs_vendor_id，要不后面的参数报错\n            return sku;\n          }) : [];\n        }\n        this.dialogVisible = curr;\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  .add-sku {\n    .el-dialog__body {\n      display: flex;\n      justify-content: space-between;\n    }\n    .steps-wrapper {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      font-size: 14px;\n      height: 60px;\n      .step-border {\n        width: 80px;\n        height: 1px;\n        background: #979797;\n      }\n      .step {\n        opacity: 0.5;\n        font-family: Helvetica;\n        color: #333333;\n        margin: 0 5px;\n        .num {\n          display: inline-block;\n          width: 20px;\n          height: 20px;\n          border: 1px solid #9999;\n          border-radius: 50%;\n          text-align: center;\n        }\n      }\n      .step.active {\n        opacity: 1;\n        font-family: Helvetica-Bold;\n        .num {\n          background: #3D6ED1;\n          color: #ffffff;\n        }\n      }\n    }\n    .select-supplier-sku {\n      display: flex;\n      .select-area {\n        flex: 1;\n        &:first-child {\n          margin-right: 40px;\n        }\n        .select-title {\n          display: inline-block;\n          height: 32px;\n          line-height: 32px;\n          font-family: Helvetica-Bold;\n          font-size: 16px;\n          color: #333333;\n        }\n        .select-input-area {\n          display: flex;\n          width: 100%;\n          height: 32px;\n          margin: 20px 0;\n          align-items: center;\n          .select-input-label {\n            width: 110px;\n            padding-left: 8px;\n            // flex: 1;\n          }\n          .select-input {\n            width: 160px;\n            margin-left: 8px;\n          }\n          .select-input-btn {\n            width: 80px;\n            height: 28px;\n            margin-left: 20px;\n            line-height: 28px;\n            &:hover {\n              color: #fff;\n              background-color: #3d6ed1;\n              border-color: #c6e2ff;\n            }\n          }\n        }\n        .list-btn {\n          border: 1px solid #D9D9D9;\n          border-radius: 2px;\n          width: 72px;\n          height: 32px;\n          line-height: 32px;\n          background-color: transparent;\n          font-family: Helvetica;\n          font-size: 14px;\n          color: #333333;\n          text-align: center;\n        }\n      }\n    }\n  }\n</style>\n\n<style lang=\"scss\">\n  .select-supplier-sku {\n    .select-area {\n      .el-input__prefix, .el-input__suffix {\n        top: -4px;\n      }\n      .el-select {\n        .el-input__prefix, .el-input__suffix {\n          top: 0;\n        }\n      }\n    }\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplyInfoManagement/skuSupplierInfo/list.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplyInfoManagement/skuSupplierInfo/massUpload/massDelink.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplyInfoManagement/skuSupplierInfo/massUpload/massLink.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplyInfoManagement/skuSupplierInfo/massUpload/massUpdate.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplyInfoManagement/skuSupplierInfo/removeSkuDialog/index.vue","messages":[{"ruleId":"vue/this-in-template","severity":2,"message":"Unexpected usage of 'this'.","line":5,"column":40,"nodeType":"ThisExpression","endLine":5,"endColumn":44},{"ruleId":"vue/no-spaces-around-equal-signs-in-attribute","severity":2,"message":"Unexpected spaces found around equal signs.","line":37,"column":18,"nodeType":"VIdentifier","endLine":37,"endColumn":20,"fix":{"range":[1977,1979],"text":"="}}],"errorCount":2,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <el-dialog\n    @close=\"$emit('close')\" :visible.sync=\"dialogVisible\" class=\"unbind-sku\" width=\"800px\" :show-close=\"false\">\n    <div class=\"dialog-header\" slot=\"title\">\n      <span class=\"el-dialog__title\">{{this.$t('supplier.delinkingSupplierSku')}}</span>\n      <span class=\"info-title\">{{dialogTitle}}</span>\n    </div>\n    <div class=\"check-unbind-info\">\n      <section v-if=\"(checkInfo.associated_ticket_list || []).length\" class=\"check-orders\">\n        <div class=\"check-title\">\n          <i class=\"el-icon-warning\"></i>\n          Please close the following PMS orders.\n        </div>\n        <el-table :data=\"checkInfo.associated_ticket_list || []\" border>\n          <el-table-column width=\"100px\" :label=\"$t('purchaseRequest.orderType')\">\n            <template slot-scope=\"scope\">{{orderTypeMap[scope.row.ticket_type] || ''}}</template>\n          </el-table-column>\n          <el-table-column :label=\"$t('supplier.orderID')\">\n            <template slot-scope=\"scope\">\n              <router-link rel=\"noopener\" target=\"_blank\" class=\"text-decoration\" :to=\"getRouterLink(scope.row)\">{{scope.row.ticket_id}}</router-link>\n            </template>\n          </el-table-column>\n          <el-table-column :label=\"$t('purchaseRequest.status')\">\n            <template slot-scope=\"scope\">{{getStatusText(scope.row)}}</template>\n          </el-table-column>\n          <el-table-column :label=\"$t('purchaseRequest.requester')\" prop=\"requester\"></el-table-column>\n          <el-table-column width=\"100px\" :label=\"$t('purchaseRequest.action')\">\n            <template slot-scope=\"scope\">\n              <router-link rel=\"noopener\" target=\"_blank\" class=\"list-btn\" :to=\"getRouterLink(scope.row)\">Details</router-link>\n            </template>\n          </el-table-column>\n        </el-table>\n      </section>\n      <section v-if=\"checkInfo.wms_stock\" class=\"check-title check-inventory\">\n        <i class=\"el-icon-warning\"></i>\n        <span>SKU has</span>\n        <a target= '_blank' rel=\"noopener\" :href=\"wmsInventoryLink\">{{`[${checkInfo.wms_stock}] inventory`}}</a>\n        <span>in WMS. Please go to WMS and clear the inventory.</span>\n      </section>\n      <section v-if=\"checkInfo.exist_outstanding_bm\"  class=\"check-title check-bm\">\n        <span>Please note: this SKU has</span>\n        <a @click=\"handleBackMarginClick\">outstanding back margin.</a>\n      </section>\n    </div>\n    <div slot=\"footer\">\n      <div class=\"el-button el-button--danger el-button--mini\" @click=\"handleCancelDialogue\">{{$t('supplier.cancel')}}</div>\n      <div class=\"el-button el-button--mini dialog-btn\" @click=\"handleCheck\">{{$t('supplier.confirm')}}</div>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nimport { PurchaseRequestStatus, PurchaseOrderStatus, ASNStatusList } from '@/utils/constant';\n\nexport default {\n  data() {\n    const hostnameMap = {\n      'e-procurement.test.shopee.com': 'wms.test.shopeemobile.com',\n      'e-procurement.uat.shopee.com': 'wms.uat.shopeemobile.com',\n      'e-procurement.staging.shopee.com': 'wms.staging.shopeemobile.com',\n      'e-procurement.shopee.com': 'wms.shopeemobile.com'\n    };\n    return {\n      wmsHost: hostnameMap[location.hostname] || 'wms.test.shopeemobile.com',\n      dialogVisible: false,\n      orderTypeMap: {\n        1: 'PR',\n        2: 'PO',\n        3: 'ASN'\n      },\n      routerLinkMap: {\n        1: '/admin/purchase/request/detail/',\n        2: '/admin/purchase/order/podetail/',\n        3: '/admin/inbound/asn/tracking'\n      },\n      statusListMap: {\n        1: PurchaseRequestStatus,\n        2: PurchaseOrderStatus,\n        3: ASNStatusList.map(item => ({ ...item, value: Number(item.value) }))\n      }\n    };\n  },\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    checkInfo: {\n      type: Object,\n      required: true\n    }\n  },\n  computed: {\n    backMarginLink() {\n      const query = `bmType=2&delinkDate=now`;\n      return `/admin/skuMgt/list?activeTab=skuBMList&skuID=${this.checkInfo.sku_id}&supplierID=${this.checkInfo.vendor_site_id}&${query}`;\n    },\n    dialogTitle() {\n      const { sku_id = '', vendor_site_id = '' } = this.checkInfo;\n      return `[SKU: ${sku_id}, supplier: ${vendor_site_id}]`;\n    },\n    wmsInventoryLink() {\n      return `https://${this.checkInfo.approval_country === 'TW' ? 'tw.' : ''}${this.wmsHost}/ui/#/inventory_onhand`;\n    }\n  },\n  methods: {\n    handleCancelDialogue() {\n      this.$emit('close');\n    },\n    handleCheck() {\n      this.$emit('check', this.checkInfo);\n    },\n    getStatusText(row) {\n      const statusList = this.statusListMap[row.ticket_type] || [];\n      return (statusList.find(item => item.value === row.status) || {}).label;\n    },\n    getRouterLink(row) {\n      const link = this.routerLinkMap[row.ticket_type];\n      return row.ticket_type === 3 ? `${link}?country=${this.checkInfo.approval_country}&inboundID=${row.ticket_id}` : `${link}${row.ticket_id}`;\n    },\n    handleBackMarginClick() {\n      window.open(this.backMarginLink);\n    }\n  },\n  watch: {\n    '$props.visible': {\n      handler(curr) {\n        this.dialogVisible = curr;\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  .check-unbind-info {\n    .el-icon-warning {\n      margin-right: 8px;\n      font-size: 24px;\n      color:rgb(230, 116, 112);\n    }\n    .check-title {\n      display: flex;\n      align-items: center;\n      margin-bottom: 10px;\n      height: 24px;\n      line-height: 24px;\n      color: #303133;\n      a {\n        margin: 0 4px;\n        text-decoration: underline;\n        color: #409eff;\n      }\n    }\n    .check-inventory {\n      margin-top: 20px;\n    }\n    .check-bm {\n      margin-top: 20px;\n    }\n  }\n  .text-decoration {\n    text-decoration: underline;\n    color: #409eff;\n  }\n  .dialog-header {\n    line-height: 24px;\n  }\n  .dialog-btn {\n    color: #fff;\n    background-color: #409eff;\n    &:hover {\n      color: #fff;\n      background-color: #409eff;\n    }\n  }\n  .info-title {\n    font-size: 14px;\n    color: #606266;\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/supplyInfoManagement/skuSupplierInfo/skuSupplierInfo.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":6,"column":61,"nodeType":"VIdentifier","messageId":"deprecated","endLine":6,"endColumn":67}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <el-container class=\"sku-supplier-tab sku-info-container\">\n    <el-main>\n      <div v-if=\"canBind\" @click=\"showBindDialog\" class=\"create-btn bind-sku-btn\">{{$t('supplier.bindSupplierSku')}}</div>\n      <div @click=\"showLogDialog\" class=\"action-log-btn\">{{$t('purchaseRequest.actionLog')}}</div>\n      <el-form class=\"gap-row\" :model=\"searchForm\"  @submit.native.prevent=\"onSearch\">\n          <el-button v-show=\"false\" native-type=\"submit\"></el-button>\n          <el-row>\n            <el-col v-for='item in searchSchema' :key='item.field' :span='item.width' :offset='item.offset || 0'>\n              <el-form-item label-width=\"160px\" :class='item.class || \"\"' :label=\"item.label\">\n                <el-select v-if='item.type === \"select\"' v-model=\"searchForm[item.field]\" :disabled=\"item.disabled || false\" @change=\"onResetPageNoSearch\">\n                  <el-option v-for='(option, index) in item.options || []' :key='`${option.value}${index}`' :label='option.label' :value='option.value'></el-option>\n                </el-select>\n                <el-input v-if='item.type === \"input\"' v-model=\"searchForm[item.field]\"></el-input>\n                <el-autocomplete\n                  v-if=\"item.type === 'sbsVendorId'\"\n                  v-model=\"searchForm[item.field]\"\n                  :fetch-suggestions=\"getSbsVendorID\"\n                  clearable\n                  placeholder=\"Please input SBS Vendor ID\"\n                  @select=\"handleSBSVendorIDSelect\"\n                ></el-autocomplete>\n              </el-form-item>\n            </el-col>\n          </el-row>\n          <el-row>\n            <el-col :span=\"16\">\n              <MassLink v-if=\"canBind\"></MassLink>\n              <MassDelink :isShow=\"{canBind, canUnbind}\" v-if=\"canBind || canUnbind\"></MassDelink>\n              <MassUpdate :isShow=\"{ canBind, canUnbind }\" ></MassUpdate>\n            </el-col>\n            <el-form-item class='right-action-btn'>\n              <div class='list-btn' @click='onSearchBtnClick'>{{$t('purchaseRequest.search')}}</div>\n              <div class='list-btn clear-btn' @click=\"onReset\">{{$t('purchaseRequest.clear')}}</div>\n              <div class='list-btn' @click=\"onExport\">{{$t('purchaseRequest.export')}}</div>\n            </el-form-item>\n          </el-row>\n        </el-form>\n         <el-table :data=\"tableList\" border v-loading=\"loading\" @selection-change=\"onSelectionChange\" max-height=\"800px\">\n          <el-table-column type=\"selection\" :width='`32px`' fixed></el-table-column>\n\n          <el-table-column width='130px' :label=\"$t('purchaseOrder.skuID')\" prop=\"sku_id\" fixed>\n            <template slot-scope=\"scope\">\n              <div @click=\"handleClickSKUID(scope.row.sku_id)\"><p>{{ scope.row.sku_id }}</p></div>\n              <svg-icon v-if=\"scope.row.is_defualt\" class=\"is-default\" icon-class=\"default\" />\n              <svg-icon v-if=\"scope.row.is_deprecated\" class=\"is-deprecated\" icon-class=\"deprecated\" />\n            </template>\n          </el-table-column>\n\n          <el-table-column :label=\"$t('purchaseOrder.skuName')\" prop=\"sku_name\" width=\"200px\" fixed></el-table-column>\n          <el-table-column :label=\"$t('supplierSBSVendorID')\" prop=\"sbs_vendor_id\" width=\"200px\" fixed></el-table-column>\n\n          <el-table-column :label=\"$t('purchaseOrder.vendorSideID')\" prop=\"supplier_id\" width=\"120px\"></el-table-column>\n          <el-table-column :label=\"$t('purchaseRequest.supplierName')\" prop=\"supplier_name\" width=\"170px\"></el-table-column>\n          <el-table-column :label=\"$t('purchaseOrder.purchaseType')\" prop=\"purchase_type\" width=\"120px\"></el-table-column>\n          <el-table-column min-width='120px' :label=\"$t('purchaseOrder.externalSkuID')\">\n            <template slot-scope=\"scope\">\n              <el-input v-if=\"isEditColumn(scope.$index)\" clearable v-model.trim=\"scope.row.external_sku_id\" maxlength=80></el-input>\n              <div v-else>{{scope.row.external_sku_id}}</div>\n            </template>\n          </el-table-column>\n\n           <el-table-column width='120px' :label=\"$t('supplier.barCode')\">\n            <template slot-scope=\"scope\">\n              <el-input v-if=\"isEditColumn(scope.$index)\" clearable v-model.trim=\"scope.row.barcode\" maxlength=64 @change=\"formatBarcode(scope.$index)\"></el-input>\n              <div v-else>{{scope.row.barcode}}</div>\n            </template>\n          </el-table-column>\n\n          <el-table-column min-width='120px' :label=\"$t('commonSellingType')\">\n            <template slot-scope='scope'>{{formatSellingType(scope.row.selling_type)}}</template>\n          </el-table-column>\n\n         <el-table-column :label=\"$t('supplier.unit')\" width=\"180px\">\n           <template slot=\"header\" slot-scope='scope'>\n            <span>{{$t('commonUnit')}}</span>\n            <el-popover placement=\"top\" trigger=\"hover\" width=\"320px\" popper-class=\"break-word\" :content=\"$t('commonUnitForSellingTypeTips')\">\n              <svg-icon slot=\"reference\" iconClass=\"question\"></svg-icon>\n            </el-popover>\n          </template>\n            <template slot-scope=\"scope\" >\n              <template v-if=\"isEditColumn(scope.$index)\">\n                <el-row v-for=\"(item, index) in scope.row.sku_unit_list\" :key=\"`${item.unit_id}${index}`\" class=\"center unit-row\">\n                  <el-col :span=\"5\">\n                    <el-tooltip class=\"item\" effect=\"light\" :content=\"$t('supplier.setDefaultUnit')\" placement=\"top\">\n                      <el-radio v-model=\"scope.row.checked\" :label='item.unit_id'>&nbsp;</el-radio>\n                    </el-tooltip>\n                  </el-col>\n                  <el-col :span=\"15\">\n                    <el-select class=\"select-unit\" v-model=\"item.unit_id\" @change=\"handleSelectUnit(item)\">\n                      <el-option v-for=\"option in unitList\" :key=\"option.id\" :label=\"option.label\" :value=\"option.value\"></el-option>\n                    </el-select>\n                  </el-col>\n                  <el-col :span=\"2\"><span>&nbsp;</span></el-col>\n                  <el-col :span=\"2\">\n                    <span class=\"el-icon-remove\" v-if=\"scope.row.sku_unit_list.length !== 1\" @click=\"removeUnit(index, scope.row)\"></span>\n                  </el-col>\n                </el-row>\n                <el-row class=\"unit-row\">\n                  <el-col :span=\"2\" class=\"flr\">\n                    <span  class=\"el-icon-circle-plus\" @click=\"addUnit(scope.row)\"></span>\n                  </el-col>\n                </el-row>\n              </template>\n              <div v-else>{{scope.row.unit_name}}</div>\n            </template>\n          </el-table-column>\n\n          <el-table-column :label=\"$t('purchaseOrder.guidePurchasePrice')\" width=\"120px\">\n            <template slot-scope=\"scope\" >\n              <template v-if=\"isEditColumn(scope.$index)\">\n                <el-row class=\"center\" v-for=\"(item, index) in scope.row.sku_unit_list\" :key=\"`${item.unit_id}${index}`\">\n                  <el-input-number v-model=\"item.guide_purchase_price\" :controls=\"false\" :precision=\"2\"></el-input-number>\n                </el-row>\n                <el-row class=\"unit-row\"></el-row>\n              </template>\n              <div v-else>{{getGuidePurchasePrice(scope.row)}}&nbsp;<span>{{scope.row.currency}}</span></div>\n            </template>\n          </el-table-column>\n\n          <el-table-column width='120px' :label=\"$t('purchaseRequest.moq')\" align=\"left\">\n            <template slot-scope=\"scope\" >\n              <el-row>\n                <el-input-number v-if=\"isEditColumn(scope.$index)\" v-model=\"scope.row.min_order_quantity\" :controls=\"false\" :precision=\"0\" class=\"moq-input-number\" width=\"120px\">\n                </el-input-number>\n                <div v-else>{{scope.row.min_order_quantity}}</div>\n               </el-row>\n            </template>\n          </el-table-column>\n          <el-table-column width='150px' :label='$t(\"budget.brand\")'>\n           <template slot-scope=\"scope\">\n              <el-select v-if=\"isEditColumn(scope.$index)\" v-model=\"scope.row.brand_id\" @change=\"(...argu) => { changeRowBrand(scope.row, ...argu)}\" clearable>\n                <el-option v-for=\"item in brandList\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"></el-option>\n              </el-select>\n              <div v-else>{{(brandList.find(brand => brand.value === scope.row.brand_id) || {}).label || scope.row.brand_name}}</div>\n            </template>\n          </el-table-column>\n\n           <el-table-column :label=\"$t('purchaseOrder.sourcingStatus')\" width=\"150px\">\n            <template slot-scope=\"scope\">\n              <el-select @change=\"sourcingStatusChange(scope.$index)\" v-if=\"isEditColumn(scope.$index)\" v-model=\"scope.row.sourcing_status\">\n                <el-option v-for=\"item in SKUSourcingStatus\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"></el-option>\n              </el-select>\n              <div v-else>{{formatSourcingStatus(scope.row.sourcing_status)}}</div>\n            </template>\n          </el-table-column>\n\n          <el-table-column :label=\"$t('commonNextAvailableDate')\" width=\"160px\" >\n            <template slot-scope=\"scope\">\n              <el-date-picker class=\"sku-available-date\" :disabled=\"scope.row.sourcing_status !== 1\" v-if=\"isEditColumn(scope.$index)\" v-model=\"scope.row.available_date\" type=\"date\" :picker-options=\"pickerOptions\" format=\"yyyy-MM-dd\" value-format=\"dd/MM/yyyy\"></el-date-picker>\n              <div v-else>{{(scope.row.sourcing_status === 1 && scope.row.available_date) ? moment(scope.row.available_date, 'DD/MM/YYYY').format('YYYY-MM-DD') : ''}}</div>\n            </template>\n          </el-table-column>\n          <el-table-column :label=\"$t('commonReplenishmentIndicator')\" prop=\"replenishment_indicator\" width=\"200px\">\n            <template slot-scope=\"scope\">\n              <el-select v-if=\"isEditColumn(scope.$index)\" v-model=\"scope.row.replenishment_indicator\">\n                <el-option v-for=\"(item, index) in ReplenishmentIndicatorList\" :key=\"index\" :label=\"item.label\" :value=\"item.value\"></el-option>\n              </el-select>\n              <span v-else>{{formatReplenishmentIndicator(scope.row.replenishment_indicator)}}</span>\n            </template>\n          </el-table-column>\n          <el-table-column :label=\"$t('commonRemark')\" width=\"160px\" prop=\"indicator_remark\">\n            <template slot-scope=\"scope\">\n              <el-input v-if=\"isEditColumn(scope.$index)\" type=\"textarea\" v-model=\"scope.row.indicator_remark\" :maxlength=\"128\"></el-input>\n              <span v-else>{{scope.row.indicator_remark}}</span>\n            </template>\n          </el-table-column>\n\n          <el-table-column :label=\"$t('supplier.competitorPrice')\" min-width=\"90\">\n            <template slot-scope=\"scope\" >\n              <el-row class=\"center\">\n                  <el-input-number v-if=\"isEditColumn(scope.$index)\" :controls=\"false\" :precision=\"2\" v-model=\"scope.row.competitor_price\">\n                  </el-input-number>\n                  <div v-else>{{scope.row.competitor_price}}&nbsp;<span v-if=\"scope.row.competitor_price !== ''\">{{scope.row.currency}}</span></div>\n              </el-row>\n            </template>\n          </el-table-column>\n\n         <el-table-column :label=\"$t('supplier.competitorLink')\" min-width=\"90\">\n            <template slot-scope=\"scope\" >\n              <el-row class=\"center\">\n                  <el-input v-if=\"isEditColumn(scope.$index)\" v-model=\"scope.row.competitor_link\" clearable></el-input>\n                  <div v-else>{{scope.row.competitor_link}}</div>\n              </el-row>\n            </template>\n          </el-table-column>\n\n        <el-table-column :label=\"$t('purchaseOrder.modifyTime')\" width=\"100px\">\n          <template slot-scope=\"scope\">\n            {{moment(scope.row.mtime * 1000).format('YYYY-MM-DD')}}\n          </template>\n        </el-table-column>\n\n         <el-table-column class=\"action-btn-warp\" :label=\"$t('purchaseOrder.Action')\" fixed=\"right\" width=\"260\" v-if=\"canBind || canUnbind\">\n            <template slot-scope=\"scope\">\n              <el-row v-if=\"canBind\" class=\"gap-row\">\n                <el-button class=\"common-action\" icon=\"el-icon-circle-plus-outline\" v-if=\"scope.row.purchase_type !== 'Consignment'\" size=\"mini\" type=\"primary\" @click=\"showBindDialog('sku', scope.row)\">{{$t('supplier.addSupplier')}}</el-button>\n                <el-button class=\"common-action\" icon=\"el-icon-circle-plus-outline\" size=\"mini\" type=\"primary\" @click=\"showBindDialog('supplier', scope.row)\">{{$t('supplier.addSku')}}</el-button>\n              </el-row>\n              <el-row>\n                <el-button class=\"common-action\" icon=\"el-icon-edit\" v-if=\"isEditColumn(scope.$index)\" size=\"mini\" type=\"primary\" @click=\"onSkuSave(scope.$index, scope.row)\">{{$t('purchaseOrder.save')}}</el-button>\n                <el-button class=\"common-action cancel\" icon=\"el-icon-close\" v-if=\"isEditColumn(scope.$index)\" size=\"mini\" type=\"default\" @click=\"onSkuCancel(scope.$index, scope.row)\">{{$t('purchaseOrder.cancel')}}</el-button>\n                <el-button class=\"common-action\" icon=\"el-icon-edit\" v-if=\"canBind && activeColumn === null\" size=\"mini\" type=\"primary\" @click=\"onSkuEdit(scope.$index, scope.row)\">{{$t('purchaseOrder.edit')}}</el-button>\n                <el-button class=\"common-action remove\" icon=\"el-icon-delete\" v-if=\"canUnbind\" size=\"mini\" type=\"danger\" @click=\"supplierDelinkCheck(scope.row)\">{{$t('purchaseOrder.remove')}}</el-button>\n              </el-row>\n            </template>\n          </el-table-column>\n        </el-table>\n        <section class='pagination-center'>\n          <el-pagination background layout=\"sizes, prev, pager, next\" :current-page='page.page_no' :total.sync=\"total\" :page-sizes='[10, 20, 50, 100]' :page-size=\"page.count\" @size-change='handleSizeChange' @current-change=\"handleChangePage\"></el-pagination>\n        </section>\n    </el-main>\n    <action-log-dialog @close=\"closeLogDialog\" :visible=\"logDialogVisible\"></action-log-dialog>\n    <bind-sku-dialog @update=\"onSearch\" :defaultInfo=\"bindDefaultInfo\" @close=\"closeBindDialog\" :visible=\"bindDialogVisible\"></bind-sku-dialog>\n    <remove-sku-dialog @check=\"supplierDelinkCheck\" :checkInfo=\"checkInfo\" @close=\"closeRemoveDialog\" :visible=\"removeDialogVisible\"></remove-sku-dialog>\n  </el-container>\n</template>\n\n<script>\nimport ActionLogDialog from './actionLogDialog';\nimport BindSkuDialog from './bindSkuDialog';\nimport RemoveSkuDialog from './removeSkuDialog';\nimport MassLink from './massUpload/massLink';\nimport MassDelink from './massUpload/massDelink';\nimport MassUpdate from './massUpload/massUpdate';\nimport { supplierUnbindCheck, supplierUnbind } from '@/api/supplierSKU';\nimport { getSkuSupplierList, getSkuManagementList, exportSkuSupplier } from '@/api/skuMgt';\nimport { updateBinding, supplierContractCheck, getSbsVendorSupplierSearch } from '@/api/supplier';\nimport { formatParams } from '@/utils/formatParams';\nimport { getBrandList } from '@/api/brand';\nimport { PurchaseTypeList, PurchaseSupplierTypeList, SKUSourcingStatus, newSKUSourcingStatus, FESKUStatus, Permission, SourcingInfoStatus, SKUReplenishmentIndicatorList } from '@/utils/constant';\nimport { validateSkuList } from '@/utils/supplierDetailValidate';\nimport moment from 'moment';\nimport { hasPermission } from '@/utils/permission';\nimport { downloadBlobFile } from '@/utils/downloadFile';\nimport { formatSellingType } from '@/utils';\n\nexport default {\n  components: {\n    ActionLogDialog,\n    BindSkuDialog,\n    MassLink,\n    MassDelink,\n    MassUpdate,\n    RemoveSkuDialog\n  },\n  data() {\n    return {\n      loading: false,\n      searchForm: {\n        sku_id: this.$route.query.skuID || '',\n        shop_id: '',\n        supplier_id: '',\n        supplier_name: '',\n        sbs_vendor_id: '',\n        sourcing_status: '',\n        supplier_sku_status: '',\n        purchase_type: '',\n        supplier_type: '',\n        replenishment_indicator: '',\n        country: ''\n      },\n      page: {\n        page_no: 1,\n        count: 10\n      },\n      total: 0,\n      activeColumn: null,\n      tableList: [],\n      brandList: [],\n      selectedTables: [],\n      currentRow: {},\n      SKUSourcingStatus: newSKUSourcingStatus,\n      ReplenishmentIndicatorList: SKUReplenishmentIndicatorList,\n      pickerOptions: {\n        disabledDate(time) {\n          return time.getTime() <= Date.now();\n        }\n      },\n      bindDialogVisible: false,\n      bindDefaultInfo: {},\n      canBind: false,\n      canUnbind: false,\n      checkInfo: {},\n      logDialogVisible: false,\n      removeDialogVisible: false\n    };\n  },\n  computed: {\n    countryList() {\n      const noRepeatList = [...new Set([...this.$store.getters.countryList.map(item => item.country)])];\n      const formatList = noRepeatList.map(item => ({ label: item, value: item }));\n      return [{ label: 'All', value: '' }].concat(formatList);\n    },\n    countrySearchList() {\n      return [...new Set(this.$store.getters.countryList.map(item => item.country))];\n    },\n    searchSchema() {\n      return [\n        { type: 'input', offset: 0, width: 6, field: 'sku_id', label: `${this.$t('purchaseRequest.skuID')}/${this.$t('skuMgt.itemId')}` },\n        { type: 'input', offset: 0, width: 6, field: 'shop_id', label: this.$t('approvalFlow.shopID') },\n        { type: 'input', offset: 0, width: 6, field: 'supplier_id', label: this.$t('purchaseOrder.vendorSideID') },\n        {\n          type: 'sbsVendorId',\n          width: 6,\n          field: 'sbs_vendor_id',\n          labelWidth: '160px',\n          label: this.$t('supplierSBSVendorID')\n        },\n        { type: 'input', offset: 0, width: 6, field: 'supplier_name', label: this.$t('purchaseOrder.supplierName') },\n        { type: 'select', offset: 0, width: 6, field: 'country', label: this.$t('purchaseRequest.region'), options: this.countryList },\n        { type: 'select', offset: 0, width: 6, field: 'purchase_type', label: this.$t('purchaseRequest.purchaseType'), options: PurchaseTypeList },\n        { type: 'select', offset: 0, width: 6, field: 'sku_status', label: this.$t('skuMgt.FEStatus'), options: FESKUStatus, disabled: !this.canFEStatus },\n        { type: 'select', offset: 0, width: 6, field: 'supplier_type', label: this.$t('purchaseOrder.supplierType'), options: PurchaseSupplierTypeList },\n        { type: 'select', offset: 0, width: 6, field: 'sourcing_status', label: this.$t('purchaseRequest.sourcingStatus'), options: [{ value: '', label: 'All' }].concat(this.SKUSourcingStatus) },\n        { type: 'select', offset: 0, width: 6, field: 'replenishment_indicator', label: this.$t('commonReplenishmentIndicator'), options: [{ value: '', label: 'All' }].concat(this.ReplenishmentIndicatorList) },\n        { hidden: this.searchForm.country !== 'TW', type: 'select', offset: 0, width: 6, field: 'supplier_sku_status', label: this.$t('skuMgt.sourcingInfoStatus'), options: SourcingInfoStatus }\n      ].filter(item => !item.hidden);\n    },\n    allUnitList() {\n      return this.$store.getters.allUnitList || [];\n    },\n    unitList() {\n      return this.allUnitList.filter(item => item.country === this.currentRow.country);\n    },\n    currencyMap() {\n      return this.$store.getters.currencyMap || {};\n    },\n    canFEStatus() {\n      return Object.values(this.searchForm).find(value => {\n        if (value !== '') return true;\n      });\n    }\n  },\n  created() {\n    this.canBind = hasPermission(Permission.SKU_SUPPLIER_BIND);\n    this.canUnbind = hasPermission(Permission.SKU_SUPPLIER_UNBIND);\n    this.getAllUnitList();\n    if (this.searchForm.sku_id) this.onSearch();\n  },\n  methods: {\n    formatSellingType,\n    handleSBSVendorIDSelect(item) {\n      this.searchForm.sbs_vendor_id = item.value;\n    },\n    async getSbsVendorID(value, cb) {\n      try {\n        const params = { pageno: 1, count: 20, sbs_vendor_id: `${value}`.trim(),\n          approval_country: this.countrySearchList.join('_'), merchant_type: 'ALL' };\n        const resp = await getSbsVendorSupplierSearch(params);\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n          cb([]);\n        } else {\n          cb(\n            resp.data.list.map(item => {\n              return {\n                value: `${item['sbs_vendor_id']}`\n              };\n            })\n          );\n        }\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n      }\n    },\n    moment,\n    getCountryBrandList() {\n      return getBrandList({ pageno: 1, country: this.currentRow.country || this.searchForm.country, count: 200, status: 0 }).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.brandList = (resp.data.brand_list || []).map(item => ({ label: item.brand_name, value: item.brand_id }));\n        }\n      });\n    },\n    changeRowBrand(row, value) {\n      const selectedBrandItem = this.brandList.find(item => item.value === value);\n      if (selectedBrandItem) {\n        row.brand_name = selectedBrandItem.label;\n      }\n    },\n    handleClickSKUID(sku_id) {\n      this.$router.push(`/admin/skuMgt/detail/${sku_id}?originPath=supply`);\n    },\n    formatSourcingStatus(status) {\n      return (SKUSourcingStatus.find(item => item.value === status) || {}).label || '';\n    },\n    formatReplenishmentIndicator(value) {\n      return (this.ReplenishmentIndicatorList.find(item => item.value === value) || {}).label || '';\n    },\n    async getAllUnitList() {\n      if (this.allUnitList.length < 1) {\n        await this.$store.dispatch('GetAllUnitList');\n      }\n    },\n    handleSelectUnit(item) {\n      item.unit_name = this.unitList.find(el => el.value === item.unit_id).label;\n    },\n    addUnit(row) {\n      row.sku_unit_list.push({ unit_id: '', unit_name: '', guide_purchase_price: undefined });\n    },\n    removeUnit(index, row) {\n      row.sku_unit_list.splice(index, 1);\n    },\n    supplierContractCheck(sbs_vendor_id) {\n      return new Promise((resolve, reject) => {\n        supplierContractCheck({ sbs_vendor_id }).then(res => {\n          if (res && res.retcode !== 0) {\n            resolve({ code: res.retcode, message: res.info });\n          } else {\n            resolve(null);\n          }\n        }).catch(() => {\n          resolve(null);\n        });\n      });\n    },\n    async showBindDialog(type, row) {\n      if (type === 'sku' && row.purchase_type === 'Consignment') {\n        return this.$message.error('SKU is already linked to consignment supplier');\n      } else if (type === 'sku') {\n        const checkMessage = this.$message({\n          message: 'Checking sku status...',\n          iconClass: 'el-icon-loading',\n          duration: 0\n        });\n        return getSkuManagementList({ sku_id: row.sku_id, page_no: 1, count: 1 }).then(resp => {\n          checkMessage.close();\n          if (resp.retcode !== 0) {\n            this.$message.error(resp.info);\n          } else {\n            const list = resp.data.skus || [];\n            const sku = list.find(item => item.sku_id === row.sku_id);\n            if (!sku) {\n              this.$message.error(`SCBS：SKU doesn't exist or sku id is wrong.`);\n            } else if (sku.status === 1) {\n              this.bindDefaultInfo = { type, list: [row] };\n              this.bindDialogVisible = true;\n            } else {\n              const skuStatus = FESKUStatus.find(item => item.value === sku.status) || {};\n              return this.$message.error(`SKU status is ${skuStatus.label || ''}`);\n            }\n          }\n        }).catch(() => {\n          checkMessage.close();\n          this.$message.error(`SCBS server error, please retry and report to dev if retry doesn't work.`);\n        });\n      }\n      if (type === 'supplier') {\n        const res = await this.supplierContractCheck(row.sbs_vendor_id);\n        if (res && res.code !== 0) {\n          return this.$message.error(res.message);\n        }\n        this.bindDefaultInfo = { type, list: [row] };\n      }\n      this.bindDialogVisible = true;\n    },\n    closeBindDialog() {\n      this.bindDefaultInfo = {};\n      this.bindDialogVisible = false;\n    },\n    showLogDialog() {\n      this.logDialogVisible = true;\n    },\n    closeLogDialog() {\n      this.logDialogVisible = false;\n    },\n    delinkSupplier(params) {\n      const delinkMessage = this.$message({\n        message: 'Delinking in progress...',\n        iconClass: 'el-icon-loading',\n        duration: 0\n      });\n      supplierUnbind(params).then(resp => {\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.$message.success('Delink Succeed');\n          this.onSearch();\n          this.removeDialogVisible = false;\n        }\n        delinkMessage.close();\n      }).catch(() => { delinkMessage.close(); });\n    },\n    supplierDelinkCheck(row) {\n      const params = {\n        sku_id: row.sku_id,\n        vendor_site_id: row.supplier_id,\n        sbs_vendor_id: row.sbs_vendor_id\n      };\n      const { associated_ticket_list = [], wms_stock = 0, exist_outstanding_bm = false } = this.checkInfo;\n      if (this.removeDialogVisible && associated_ticket_list.length === 0 && wms_stock === 0 && exist_outstanding_bm) {\n        return this.delinkSupplier(params);\n      }\n      const checkMessage = this.$message({\n        message: 'Checking orders and stocks...',\n        iconClass: 'el-icon-loading',\n        duration: 0\n      });\n      supplierUnbindCheck(params).then(resp => {\n        checkMessage.close();\n        if (resp.retcode !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          const { associated_ticket_list = [], wms_stock = 0, exist_outstanding_bm = false } = resp.data;\n          if (associated_ticket_list.length === 0 && wms_stock === 0 && exist_outstanding_bm === false) {\n            this.$confirm(`SKU: ${params.sku_id}, supplier: ${params.vendor_site_id}`, 'Confirm to delink this SKU with supplier?', {\n              confirmButtonText: 'OK',\n              cancelButtonText: 'Cancel'\n            }).then(() => { this.delinkSupplier(params); }).catch(() => {});\n          } else {\n            this.checkInfo = {\n              ...resp.data,\n              supplier_id: params.vendor_site_id,\n              ...params\n            };\n            this.removeDialogVisible = true;\n          }\n        }\n      }).catch(() => { checkMessage.close(); });\n    },\n    closeRemoveDialog() {\n      this.checkInfo = {};\n      this.removeDialogVisible = false;\n    },\n    getGuidePurchasePrice(row) {\n      const sku_unit_list_item = (row.sku_unit_list || []).find(item => item.unit_id === row.checked) || {};\n      return sku_unit_list_item.guide_purchase_price || row.guide_purchase_price;\n    },\n    formatBarcode(index) {\n      this.$set(this.tableList[index], 'barcode', this.tableList[index].barcode.replace(/\\s/g, ''));\n    },\n    async onSkuSave(index, row) {\n      const errorMessage = validateSkuList(row);\n      if (errorMessage) {\n        this.$message.error(errorMessage);\n        return;\n      }\n      const data = Object.assign({}, row, {\n        guide_price: this.getGuidePurchasePrice(row),\n        unit_id: row.checked,\n        unit_name: (this.unitList.find(item => item.value === row.checked) || {}).label || row.unit_name,\n        sku_unit_list: row.sku_unit_list.map(item => {\n          return Object.assign(item, {\n            guide_price: item.guide_purchase_price\n          });\n        }),\n        source_status: row.sourcing_status,\n        replenishment_indicator: row.replenishment_indicator,\n        indicator_remark: row.indicator_remark\n      });\n      const resp = await updateBinding(row.supplier_id, { ...formatParams(data), available_date: data.available_date || '', supplier_id: row.supplier_id || '' });\n      if (resp && resp.status === 0) {\n        this.activeColumn = null;\n        this.$message.success('Success!');\n        this.$set(row, 'brand_name', (this.brandList.find(brand => brand.value === row.brand_id) || {}).label || '');\n        this.$set(row, 'unit_name', data.unit_name);\n      } else {\n        this.$message.error(resp.info || 'Connection timeout, please try again！');\n      }\n    },\n    onSkuCancel(index) {\n      this.activeColumn = null;\n      this.tableList.splice(index, 1, this.currentRow);\n      this.currentRow = {};\n    },\n    onSkuEdit(index, row) {\n      this.activeColumn = index;\n      this.currentRow = JSON.parse(JSON.stringify(row));\n      this.sourcingStatusChange(index);\n      this.getCountryBrandList();\n    },\n    sourcingStatusChange(index) {\n      const status = this.tableList[index].sourcing_status;\n      if (status !== 1) this.$set(this.tableList[index], 'available_date', '');\n    },\n    isEditColumn(index) {\n      return this.activeColumn === index;\n    },\n    handleSizeChange(count) {\n      this.page.count = count;\n      this.onSearch();\n    },\n    handleChangePage(page_no) {\n      this.page.page_no = page_no;\n      this.onSearch();\n    },\n    onResetPageNoSearch() {\n      this.handleChangePage(1);\n    },\n    onSelectionChange(val) {\n      this.selectedTables = val;\n    },\n    onReset() {\n      const resetList = ['sku_id', 'shop_id', 'country', 'supplier_id', 'supplier_name', 'sourcing_status', 'purchase_type', 'supplier_type', 'sku_status', 'supplier_sku_status', 'sbs_vendor_id', 'replenishment_indicator'];\n      resetList.forEach(item => {\n        this.searchForm[item] = '';\n      });\n    },\n    async onExport() {\n      if (this.selectedTables.length < 1) return;\n      const opt = {\n        supplier_sku_ids: this.selectedTables.map(item => item.id) || []\n      };\n      const resp = await exportSkuSupplier(opt);\n      if (resp.type === 'application/json') {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n          const result = JSON.parse(reader.result);\n          if (result.retcode !== 0) {\n            this.$message.error(result.info);\n          }\n        };\n        reader.readAsText(resp);\n      } else {\n        downloadBlobFile(resp, 'sku_suppliers' + moment().format('YYYYMMDDHHmm') + '.xls');\n      }\n    },\n    commonFetchAction(res) {\n      if (res && res.retcode === 0) {\n        return Promise.resolve(res.data);\n      } else {\n        return Promise.reject(res.info || 'failed to connect network, pls try it again later');\n      }\n    },\n    onSearchBtnClick() {\n      this.page.page_no = 1;\n      this.onSearch();\n    },\n    async onSearch() {\n      this.onSkuCancel();\n      this.loading = true;\n      const params = Object.assign(this.searchForm, this.page);\n      const res = await getSkuSupplierList(formatParams(params));\n      this.commonFetchAction(res).then(data => {\n        this.tableList = data.skus.map(item => {\n          const resetItem = {\n            competitor_price: (item.competitor_price === -1) ? undefined : item.competitor_price,\n            checked: item.unit_id,\n            currency: this.currencyMap[item.country] || '',\n            available_date: item.available_date ? moment(item.available_date * 1000).format('DD/MM/YYYY') : '',\n            sku_unit_list: item.sku_unit_list || []\n          };\n          return Object.assign(item, resetItem);\n        });\n        this.total = data.total;\n        this.loading = false;\n      }).catch(e => {\n        this.$message({ type: 'error', message: e });\n      });\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.sku-info-container {\n  button.common-action {\n    border: none;\n    background: transparent;\n    color: #3D6ED1;\n  }\n  button.remove {\n    color: #E02020;\n  }\n}\n</style>\n\n<style lang=\"scss\" scoped>\n.right-action-btn {\n  float: right;\n}\n.action-log-btn {\n  position: absolute;\n  right: 10px;\n  top: -10px;\n  z-index: 1;\n  cursor: pointer;\n  text-decoration: underline;\n}\n.gap-row {\n  margin-bottom: 10px;\n}\n.pagination-center {\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n}\n.unit-row {\n  height: 34px;\n  line-height: 34px;\n}\n.sku-supplier-tab {\n  position: relative;\n}\n.bind-sku-btn {\n  width: 135px;\n  height: 32px;\n  line-height: 32px;\n  font-family: Helvetica;\n  font-size: 14px;\n  color: #FFFFFF;\n  text-align: center;\n  float: none;\n  position: absolute;\n  right: 10px;\n  top: -1px;\n}\n.is-default{\n  width: 4em;\n  font-size: 16px;\n}\n.is-deprecated{\n  width: 5em;\n  font-size: 16px;\n}\n</style>\n\n<style lang=\"scss\">\n.pms-ui .el-table th>.cell {\n  word-break: break-word\n}\n.moq-input-number{\n  .el-input__inner{\n    width: 100px;\n  }\n}\n.sku-available-date.el-input {\n  width: 100%;\n  height: 28px;\n  line-height: 28px;\n  .el-input__icon {\n    line-height: 28px;\n  }\n}\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/table/index.vue","messages":[{"ruleId":"vue/no-deprecated-filter","severity":2,"message":"Filters are deprecated.","line":26,"column":26,"nodeType":"VFilterSequenceExpression","messageId":"noDeprecatedFilter","endLine":26,"endColumn":57},{"ruleId":"import/no-unresolved","severity":2,"message":"Unable to resolve path to module '@/api/table'.","line":40,"column":25,"nodeType":"Literal","endLine":40,"endColumn":38}],"errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"app-container\">\n    <el-table :data=\"list\" v-loading.body=\"listLoading\" element-loading-text=\"Loading\" border fit highlight-current-row>\n      <el-table-column align=\"center\" label='ID' width=\"95\">\n        <template slot-scope=\"scope\">\n          {{scope.$index}}\n        </template>\n      </el-table-column>\n      <el-table-column label=\"Title\">\n        <template slot-scope=\"scope\">\n          {{scope.row.title}}\n        </template>\n      </el-table-column>\n      <el-table-column label=\"Author\" width=\"110\" align=\"center\">\n        <template slot-scope=\"scope\">\n          <span>{{scope.row.author}}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"Pageviews\" width=\"110\" align=\"center\">\n        <template slot-scope=\"scope\">\n          {{scope.row.pageviews}}\n        </template>\n      </el-table-column>\n      <el-table-column class-name=\"status-col\" label=\"Status\" width=\"110\" align=\"center\">\n        <template slot-scope=\"scope\">\n          <el-tag :type=\"scope.row.status | statusFilter\">{{scope.row.status}}</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column align=\"center\" prop=\"created_at\" label=\"Display_time\" width=\"200\">\n        <template slot-scope=\"scope\">\n          <i class=\"el-icon-time\"></i>\n          <span>{{scope.row.display_time}}</span>\n        </template>\n      </el-table-column>\n    </el-table>\n  </div>\n</template>\n\n<script>\nimport { getList } from '@/api/table';\n\nexport default {\n  data() {\n    return {\n      list: null,\n      listLoading: true\n    };\n  },\n  filters: {\n    statusFilter(status) {\n      const statusMap = {\n        published: 'success',\n        draft: 'gray',\n        deleted: 'danger'\n      };\n      return statusMap[status];\n    }\n  },\n  created() {\n    this.fetchData();\n  },\n  methods: {\n    fetchData() {\n      this.listLoading = true;\n      getList(this.listQuery).then(response => {\n        this.list = response.data.items;\n        this.listLoading = false;\n      });\n    }\n  }\n};\n</script>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/userRole/create.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/userRole/history.vue","messages":[{"ruleId":"vue/v-on-style","severity":2,"message":"Expected '@' instead of 'v-on:'.","line":18,"column":38,"nodeType":"VAttribute","endLine":18,"endColumn":65,"fix":{"range":[837,842],"text":"@"}},{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"userOpHistory\" is not PascalCase.","line":29,"column":9,"nodeType":"Literal","endLine":29,"endColumn":24,"fix":{"range":[1088,1101],"text":"UserOpHistory"}}],"errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"<template>\n  <el-dialog :visible.sync=\"dialogVisible\" @close='$emit(\"close\")'>\n    <el-container>\n      <el-main>\n        <el-table :data=\"histories\" size=\"mini\">\n          <el-table-column prop=\"ctime\" :label=\"$t('purchaseOrder.modifyTime')\"></el-table-column>\n          <el-table-column prop=\"username\" :label=\"$t('opHistory.username')\"></el-table-column>\n          <el-table-column prop='action' :label=\"$t('opHistory.action')\"></el-table-column>\n        </el-table>\n\n        <!-- <div class=\"content-center padding-top-bottom\">\n          <template>\n            <el-pagination background layout=\"prev, pager, next\" :total.sync=\"total\" :page-size=\"10\" @current-change=\"handleCurrentChange\"></el-pagination>\n          </template>\n        </div> -->\n      </el-main>\n      <el-footer align='center'>\n        <div class='dialog-list-btn' v-on:click='$emit(\"close\")'>{{$t('purchaseRequest.close')}}</div>\n      </el-footer>\n    </el-container>\n  </el-dialog>\n</template>\n\n<script>\nimport { getAuditLog } from '@/api/history';\nimport { parseTime } from '@/utils';\n\nexport default {\n  name: 'userOpHistory',\n  data() {\n    return {\n      // total: 0,\n      histories: [],\n      dialogVisible: false\n    };\n  },\n  props: {\n    visible: {\n      default: false\n    },\n    dataID: {\n      required: true\n    },\n    type: {\n      default: 'user'\n    }\n  },\n  methods: {\n    // handleCurrentChange(page) {\n    //   const skip = (page - 1) * 10\n    //   const limit = 10\n    //   this.fetchHistories(this.$props.username, skip, limit)\n    // },\n    fetchHistories() {\n      const parmas = {\n        object_id: this.$props.dataID,\n        type: this.$props.type\n      };\n      getAuditLog(parmas).then(resp => {\n        if (resp.status !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.histories = resp.data.audit_list.map(h => {\n            return {\n              action: h['action'],\n              username: h['operator'],\n              ctime: parseTime(h['ctime'])\n            };\n          });\n          // this.total = resp.data.total\n        }\n      });\n    }\n  },\n  watch: {\n    '$props.visible': function(now, prev) {\n      this.dialogVisible = now;\n      if (now) {\n        this.fetchHistories();\n      }\n    }\n  }\n};\n</script>\n\n<style>\n.dialog-list-btn {\n  display: inline-block;\n  margin-right: 16px;\n  font-size: 14px;\n  color: #fff;\n  background-color: #3d6ed1;\n  height: 32px;\n  width: 70px;\n  cursor: pointer;\n  line-height: 32px;\n  text-align: center;\n  cursor: pointer;\n  border-radius: 3px;\n  vertical-align: middle;\n  font-weight: bolder;\n  padding: 0;\n  border: 0;\n  font-weight: 400;\n  font-family: \"Helvetica Light\",\"Helvetica Neue Light\",Helvetica,Arial,sans-serif;\n}\n</style>\n\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/userRole/role.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":14,"column":65,"nodeType":"VIdentifier","messageId":"deprecated","endLine":14,"endColumn":71},{"ruleId":"vue/component-definition-name-casing","severity":2,"message":"Property name \"roleList\" is not PascalCase.","line":139,"column":9,"nodeType":"Literal","endLine":139,"endColumn":19,"fix":{"range":[7132,7140],"text":"RoleList"}}],"errorCount":2,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"<template>\n  <div id=\"app-container\" class='role-list pms-ui'>\n    <el-container>\n      <el-header class='role-header'>\n        <el-tabs tab-position='bottom' :stretch=true style='width: 400px; height:60px;' v-model=\"activeTab\" @tab-click=\"handleTabClick\">\n          <el-tab-pane :label=\"$t('userRole.userList.title')\" name=\"1\"></el-tab-pane>\n          <el-tab-pane :label=\"$t('userRole.roleList.title')\" name=\"2\"></el-tab-pane>\n        </el-tabs>\n      </el-header>\n\n      <el-main>\n        <div class=\"block-padding\"></div>\n\n        <el-form :model=\"searchForm\" label-width=\"90px\" @submit.native.prevent='onSearch'>\n          <el-row>\n            <el-col :span=\"4\">\n              <el-form-item :label=\"$t('userRole.roleList.roleID')\">\n                <el-input v-model='searchForm.roleID'></el-input>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"4\" :offset='1'>\n              <el-form-item :label=\"$t('userRole.roleList.roleName')\">\n                <el-input v-model='searchForm.roleName'></el-input>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"4\" :offset='1'>\n              <el-form-item :label=\"$t('userRole.roleList.roleType')\">\n                <el-select v-model=\"searchForm.roleType\" @change='onSearch'>\n                  <el-option label=\"All\" value=\"\"></el-option>\n                  <el-option label=\"Country Role\" value=\"1\"></el-option>\n                  <el-option label=\"Universal Role\" value=\"0\"></el-option>\n                </el-select>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"6\" :offset='1'>\n              <el-form-item :label=\"$t('purchaseRequest.region')\">\n                <el-select v-model=\"searchForm.countryTag\" @change='onSearch'>\n                  <el-option label=\"All\" value=\"\"></el-option>\n                  <el-option v-for=\"item in organizationList\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\n                  </el-option>\n                </el-select>\n              </el-form-item>\n            </el-col>\n          </el-row>\n          <el-row>\n            <el-form-item style='float: right;'>\n              <div class='list-btn' @click='onSearch'>{{$t('purchaseRequest.search')}}</div>\n              <div class='list-btn clear-btn' @click=\"onReset\">{{$t('purchaseRequest.clear')}}</div>\n              <el-button native-type='submit' style='width: 0; height: 0; visibility: hidden;'></el-button>\n            </el-form-item>\n          </el-row>\n        </el-form>\n\n        <!-- display role list -->\n        <el-table :key='`roleTab`' :data=\"roleList\" border size=\"mini\" @row-click='rowClick'>\n          <el-table-column prop=\"id\" :label=\"$t('userRole.roleList.roleID')\"></el-table-column>\n          <el-table-column prop=\"name\" :label=\"$t('userRole.roleList.roleName')\"></el-table-column>\n          <el-table-column :label=\"$t('userRole.roleList.roleType')\">\n            <template slot-scope=\"scope\">\n              <div class='role-type'>{{scope.row.roleType === 0 ? 'Universal Role' : 'Country Role'}}</div>\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"countryTag\" :label=\"$t('purchaseRequest.region')\">\n            <template slot-scope=\"scope\">\n              <div>{{typeof scope.row.country === 'string' ? JSON.parse(scope.row.country).join(' ') : scope.row.country.join(' ')}}</div>\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"ctime\" :label=\"$t('userRole.roleList.ctime')\"></el-table-column>\n          <el-table-column :label=\"$t('userRole.roleList.status')\">\n            <template slot-scope=\"scope\">\n              <div class='role-status'>{{scope.row.status === 0 ? 'available' : 'unavailable'}}</div>\n            </template>\n          </el-table-column>\n          <el-table-column :column-key='`action`' :label=\"$t('userRole.roleList.action')\" width='240'>\n            <template v-if=\"canModifyRole\" slot-scope=\"scope\">\n              <el-button class='list-btn' style='width: 88px' type=\"primary\" size=\"mini\" @click=\"onOpHistory(scope.$index, scope.row)\">{{$t('userRole.userList.opHistory')}}</el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n        <div class=\"content-center padding-top-bottom\">\n          <template>\n            <el-pagination background layout=\"sizes, prev, pager, next\" :current-page='pageIndex' :total.sync=\"total\" :page-size=\"pageSize\" :page-sizes='[10, 20, 50, 100]' @current-change=\"handleChangePage\" @size-change='handleSizeChange'></el-pagination>\n          </template>\n        </div>\n\n        <!-- dialog for editing role information -->\n        <el-dialog width=\"800px\" title=\"Role Permission Config\" :visible.sync=\"editRoleForm.visible\">\n          <div class=\"dialog-body-section\">\n            <el-form disabled ref=\"editRoleForm\" :model=\"editRoleForm.role\" label-width=\"100px\">\n              <el-form-item prop=\"id\" :label=\"$t('userRole.roleList.roleID')\">\n                <span class='role-gap'>{{':'}}</span>\n                <span class='role-info'>\n                  {{editRoleForm.role.id || ''}}\n                </span>\n              </el-form-item>\n              <el-form-item prop=\"name\" :label=\"$t('userRole.roleList.roleName')\">\n                <span class='role-gap'>{{':'}}</span>\n                <span class='role-info'>\n                  {{editRoleForm.role.name || ''}}\n                </span>\n              </el-form-item>\n              <el-form-item prop=\"roleType\" :label=\"$t('userRole.roleList.roleType')\">\n                <span class='role-gap'>{{':'}}</span>\n                <span class='role-info'>\n                  {{editRoleForm.role.roleType === 0 ? 'Universal Role' : 'Country Role'}}\n                </span>\n              </el-form-item>\n              <el-form-item prop=\"countryTag\" :label=\"$t('purchaseRequest.region')\">\n                <span class='role-gap'>{{':'}}</span>\n                <span class='role-info'>\n                  {{(organizationList.find(item => item.value === editRoleForm.role.countryTag) || {}).label}}\n                </span>\n              </el-form-item>\n              <el-form-item prop=\"permissionAllowed\" :label=\"$t('userRole.roleList.permissions')\">\n                <span class='role-gap'>{{':'}}</span>\n                <span class='role-info'>\n                  <el-tree ref=\"tree\" :data=\"permissionTree\" :default-checked-keys=\"editRoleForm.role.permissionAllowed\" node-key='id' :props='permissionProps' show-checkbox default-expand-all :expand-on-click-node=false></el-tree>\n                </span>\n              </el-form-item>\n            </el-form>\n          </div>\n        </el-dialog>\n\n      </el-main>\n      <op-history :visible='historyVisible' :dataID='activeRoleID' @close='closeHistory' type='role'></op-history>\n    </el-container>\n  </div>\n</template>\n\n<script>\nimport { Permission } from '@/utils/constant';\nimport { hasPermission } from '@/utils/permission';\nimport { parseTime } from '@/utils';\nimport { getRoles } from '@/api/userRole';\nimport opHistory from './history';\nimport { flatTreeData } from '@/utils/treeData';\n\nexport default {\n  name: 'roleList',\n  data() {\n    return {\n      canModifyRole: false,\n      roleList: [],\n      permissionTree: [],\n      activeTab: '2',\n      searchForm: {\n        countryTag: '',\n        roleID: '',\n        roleName: '',\n        roleType: ''\n      },\n      editRoleForm: {\n        visible: false,\n        loading: false,\n        role: {\n          id: '',\n          name: '',\n          roleType: 0,\n          countryTag: '',\n          permissionAllowed: []\n        }\n      },\n      permissionProps: {\n        children: 'children',\n        label: 'label'\n      },\n      historyVisible: false,\n      activeRoleID: '',\n      total: 0,\n      pageSize: 10,\n      pageIndex: 1\n    };\n  },\n  components: {\n    opHistory\n  },\n  methods: {\n    // methods for role list page\n    handleTabClick(tab) {\n      if (tab.name === '1') {\n        this.$router.push('/admin/userRole/user');\n      }\n    },\n    onReset() {\n      this.searchForm = {\n        countryTag: '',\n        roleID: '',\n        roleName: '',\n        roleType: ''\n      };\n      this.onSearch();\n    },\n    handleSizeChange(size) {\n      this.pageSize = size;\n      this.onSearch();\n    },\n    onSearch(event, params) {\n      params = typeof params === 'object' ? params : { skip: 0, limit: this.pageSize || 10 };\n      const mapObj = {\n        roleID: 'role_id',\n        roleName: 'role_name',\n        roleType: 'role_type',\n        countryTag: 'organization_id'\n      };\n      Object.entries(this.searchForm).forEach(([key, value]) => {\n        if (value !== '' && value !== null && value !== undefined) {\n          params[mapObj[key] || key] = value;\n        }\n      });\n      this.fetchRoles(params);\n    },\n    onOpHistory(index, row) {\n      this.activeRoleID = row.id;\n      this.historyVisible = true;\n    },\n    closeHistory() {\n      this.historyVisible = false;\n    },\n    handleChangePage(page) {\n      const params = {\n        skip: (page - 1) * (this.pageSize || 10),\n        limit: this.pageSize || 10\n      };\n      this.onSearch('', params);\n    },\n    checkIsDeepNode(node, allowedList) {\n      if (node.children) {\n        return node.children.some(child => this.checkIsDeepNode(child, allowedList));\n      } else {\n        return !allowedList.includes(node.id);\n      }\n    },\n    clearHalfChecked(allowedList) {\n      const permissionTreeArr = flatTreeData(Object.values(this.permissionTree));\n      return allowedList.filter(item => {\n        const permissionTree = permissionTreeArr.find(permission => permission.id === item) || {};\n        return !(permissionTree.children && permissionTree.children.some(child => this.checkIsDeepNode(child, allowedList)));\n      });\n    },\n    fetchRoles(params = { skip: 0, limit: this.pageSize || 10 }) {\n      getRoles(params).then(resp => {\n        if (resp.status !== 0) {\n          this.$message.error(resp.info);\n        } else {\n          this.total = resp.data.total || 0;\n          this.pageIndex = resp.data.page || 1;\n          this.permissionTree = resp.data['permission_tree'];\n          this.roleList = resp.data['role_list'].map(role => {\n            return {\n              id: role['id'],\n              name: role['name'],\n              country: role['country'],\n              countryTag: role['organization_id'],\n              roleType: role['role_type'],\n              status: role['status'],\n              permissionAllowed: this.clearHalfChecked(role['permissions']),\n              ctime: parseTime(role['ctime'])\n            };\n          });\n        }\n      });\n    },\n    // methods for creating role dialog\n    rowClick(row, column, event) {\n      if (column.columnKey !== 'action') {\n        this.editRoleForm.role = row;\n        if (this.$refs.tree) {\n          this.$refs.tree.setCheckedKeys(row.permissionAllowed);\n        }\n        this.editRoleForm.visible = true;\n      }\n    }\n  },\n  computed: {\n    organizationList() {\n      const userRoles = this.$store.getters.roles.filter(role => role.role_type === 2);\n      const organizationID = this.$store.getters.organization;\n      const organization = this.$store.getters.organizations.filter(item => item.id === organizationID)[0] || {};\n      const list = userRoles.length > 0 ? this.$store.getters.organizations.map(item => ({\n        label: (typeof item.countries === 'string' && JSON.parse(item.countries).join(' ')) || item.countries.join(' '),\n        value: item.id\n      })) : [{\n        label: (typeof organization.countries === 'string' && JSON.parse(organization.countries).join(' ')) || (organization.countries || []).join(' '),\n        value: organization.id\n      }];\n      return list || [];\n    }\n  },\n  created() {\n    this.canModifyRole = hasPermission(Permission.MODIFY_ROLE);\n    this.fetchRoles({ skip: 0, limit: this.pageSize || 10 });\n  }\n};\n</script>\n\n<style>\n.block-padding {\n  padding-top: 15px;\n}\n.role-list .el-tabs__item {\n  display: inline-block;\n  height: 35px;\n  margin-bottom: 5px;\n  border-bottom: 2px solid transparent;\n  line-height: 35px;\n  font-size: 24px;\n  font-weight: 400;\n  color: #575757;\n}\n.role-list .el-tabs__item.is-active {\n  color: #3d6ed1;\n}\n</style>\n\n<style lang=\"scss\" scoped>\n  .add-btn {\n    display: inline-block;\n    margin: 0 5px -10px -20px;\n  }\n  .danger-btn {\n    background-color: #f56c6c;\n  }\n  .role-gap {\n    display: inline-block;\n    margin-left: 8px;\n    vertical-align: top;\n  }\n  .role-info {\n    display: inline-block;\n    max-width: 400px;\n    margin-left: 20px;\n    word-break: break-all;\n  }\n  .role-header {\n    margin-top: 11px;\n  }\n  .dialog-body-section {\n    display: flex;\n    .el-form {\n      flex: 1;\n      .el-tree {\n        max-height: 300px;\n        overflow-y: scroll;\n      }\n    }\n    .right-action-btn {\n      width: 200px;\n      text-align: center;\n    }\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/userRole/user.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/workHandover/create.vue","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]},{"filePath":"/Users/siqi.li/Documents/src/pms-frontend/src/views/workHandover/list.vue","messages":[{"ruleId":"vue/no-deprecated-v-on-native-modifier","severity":2,"message":"'.native' modifier on 'v-on' directive is deprecated.","line":16,"column":63,"nodeType":"VIdentifier","messageId":"deprecated","endLine":16,"endColumn":69},{"ruleId":"vue/no-template-shadow","severity":2,"message":"Variable 'item' is already declared in the upper scope.","line":25,"column":37,"nodeType":"Identifier","endLine":25,"endColumn":41}],"errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n    <el-container class='work-handvoer pms-ui pms-ele-ui'>\n      <tabsHeader\n        :createHidden=\"!canOperate\"\n        :tabs=\"countryList\"\n        :canTranslate=\"false\"\n        :defaultTab=\"searchForm.country\"\n        createBtnText=\"workHandover.newIssue\"\n        :stretch=\"false\"\n        @tabChange=\"beforeTabClick\"\n        @onCreate=\"onCreate\"\n        :tabStyle=\"tabStyle\"\n        :new-style=\"true\"\n      />\n      <el-main class=\"main-wrapper\">\n        <el-form :model=\"searchForm\" ref=\"searchForm\" @submit.native.prevent=\"onResetPageNoSearch\">\n          <el-button v-show=\"false\" native-type=\"submit\"></el-button>\n          <el-row>\n            <el-col v-for='item in searchSchema' :key='item.field' :span='item.width' :offset='item.offset || 0'>\n              <el-form-item  v-if='item.type === \"input\"' :label-width=\"item.labelWidth || '120px'\" :label=\"item.label\" >\n                 <el-input v-model=\"searchForm[item.field]\" clearable :disabled=\"!!item.disabled\"></el-input>\n              </el-form-item>\n              <el-form-item v-else-if=\"item.type === 'select'\" :label-width=\"item.labelWidth || '120px'\" :label=\"item.label\">\n                <el-select v-model=\"searchForm[item.field]\" clearable :placeholder=\"$t(item.placeholder)\" :disabled=\"item.disabled\" @change=\"(...argus) => onChangeSelection(item.field, ...argus)\">\n                  <el-option v-for=\"item in item.options || []\" :key=\"item.value\" :label=\"$t(item.label)\" :value=\"item.value\"></el-option>\n                </el-select>\n              </el-form-item>\n            </el-col>\n          </el-row>\n        </el-form>\n        <div class=\"list-right-btns-wrapper form-btn\">\n          <div class=\"btn\" @click=\"onSearch\">\n            <span>{{$t('commonSearch')}}</span>\n          </div>\n          <div class=\"btn plain\" @click=\"onReset\">\n            <span>{{$t('commonClear')}}</span>\n          </div>\n        </div>\n        <tableComps :tableSchema=\"tableSchema\" :dataList=\"tableData\" v-loading=\"loading\"/>\n        <section class='pagination-center'>\n          <el-pagination background layout=\"sizes, prev, pager, next\" :current-page='pager.page_no' :page-sizes='[10, 20, 50, 100]' :total.sync=\"total\" :page-size=\"pager.count\" @size-change='handleSizeChange' @current-change=\"handleChangePage\"></el-pagination>\n        </section>\n      </el-main>\n      <create-dialog @refresh=\"onSearch\" :visible=\"createVisible\" :country=\"searchForm.country\" @close=\"() => onSetCreateVisible(false)\" :detailID=\"detailID\"/>\n    </el-container>\n</template>\n\n<script>\nimport { formatParams } from '@/utils/formatParams';\nimport { commonFetchAction } from '@/utils';\nimport { Permission, handoverMattersList, mattersTypeSupplierList, mattersTypeOrderList } from '@/utils/constant';\nimport { getAllHandoverList } from '@/api/workHandover';\nimport tableComps from '@/components/ApproveList/list';\nimport createDialog from './create';\nimport tabsHeader from '@/components/tabsHeader';\nimport moment from 'moment';\nimport { hasPermission } from '@/utils/permission';\n\nexport default {\n  components: { tableComps, createDialog, tabsHeader },\n  data() {\n    return {\n      canOperate: false,\n      createVisible: false,\n      searchForm: {\n        handover: '',\n        respondent: '',\n        handover_matters: '',\n        country: this.$store.getters.country\n      },\n      loading: false,\n      pager: {\n        page_no: 1,\n        count: 10\n      },\n      total: 0,\n      tableData: [],\n      actionSchema: [\n        { type: 'search', hasPermission: true },\n        { type: 'clear', hasPermission: true }\n      ],\n      detailID: ''\n    };\n  },\n  computed: {\n    countryList() {\n      return [...new Set([...this.$store.getters.countryList.map(item => item.country)])].map(item => ({ name: item, label: item }));\n    },\n    searchSchema() {\n      return [\n        { type: 'input', width: 5, field: 'handover', label: this.$t('workHandover.handover') },\n        { type: 'input', width: 5, field: 'respondent', label: this.$t('workHandover.respondent') },\n        { type: 'select', width: 5, field: 'handover_matters', label: this.$t('workHandoverMatters'), options: handoverMattersList, labelWidth: '150px' }\n      ];\n    },\n    tabStyle() {\n      return {\n        height: '60px'\n      };\n    },\n    tableSchema() {\n      return [\n        { label: this.$t('workHandover.handover'), field: 'handover' },\n        { label: this.$t('workHandover.respondent'), field: 'respondent_list',\n          render: (schema, row) => row.respondent_list.join(',')\n        },\n        { label: this.$t('workHandoverMatters'), field: 'handover_matters',\n          render: (schema, row) => { return this.formatHandoverMatters(row.handover_matters); }\n        },\n        { label: this.$t('workHandoverMattersType'), field: 'matters_types',\n          render: (schema, row) => { return this.formatMattersType(row.matters_types, row.handover_matters); }\n        },\n        { label: this.$t('userRole.userList.createUser'), field: 'requester' },\n        { label: this.$t('userRole.userList.ctime'), field: 'ctime',\n          render: (schema, row) => moment(row.ctime * 1000).format('YYYY-MM-DD HH:mm')\n        },\n        { label: this.$t('userRole.userList.action'),\n          columnKey: 'action',\n          render: (schema, row) => {\n            return [\n              'el-button', {\n                class: 'action-btn',\n                props: { type: 'plain', size: 'mini' },\n                on: { click: () => this.onView(row) }\n              }, this.$t('purchaseRequest.view')\n            ];\n          }\n        }\n      ];\n    }\n  },\n  methods: {\n    onChangeSelection(field, value) {\n      this.onResetPageNoSearch();\n    },\n    onView(row) {\n      this.detailID = row.handover_id;\n      this.createVisible = true;\n    },\n    onCreate() {\n      this.detailID = '';\n      this.onSetCreateVisible(true);\n    },\n    formatHandoverMatters(value) {\n      const text = (handoverMattersList.find(item => item.value === value) || {}).label || '';\n      return this.$t(text);\n    },\n    formatMattersType(value, handoverMatters) {\n      const configArr = handoverMatters === 1 ? mattersTypeSupplierList : mattersTypeOrderList; // 1:supplier 2:order\n      const ret = [];\n      value.forEach(key => {\n        const label = (configArr.find(item => item.value === key) || {}).label;\n        ret.push(label);\n      });\n      return ret.join(',');\n    },\n    onSetCreateVisible(flag) {\n      this.createVisible = flag;\n    },\n    beforeTabClick(country) {\n      this.onReset();\n      this.searchForm.country = country.name;\n      this.onSearch();\n      return true;\n    },\n    onReset() {\n      // this.$refs.searchForm.resetFields();\n      const list = this.searchSchema;\n      if (Array.isArray(list) && list.length) {\n        list.forEach(item => {\n          this.$set(this.searchForm, item.field, item.defaultValue !== undefined ? item.defaultValue : '');\n        });\n      }\n      // this.$refs.searchComps.onReset && this.$refs.searchComps.onReset();\n    },\n    handleChangePage(page_no) {\n      this.pager.page_no = page_no;\n      this.onSearch();\n    },\n    handleSizeChange(count) {\n      this.pager.count = count;\n      this.pager.page_no = 1;\n      this.onSearch();\n    },\n    onEmitSearch(form) {\n      this.searchForm = { ...this.searchForm, ...form };\n      this.pager.page_no = 1;\n      this.onSearch();\n    },\n    onResetPageNoSearch() {\n      this.searchForm.page_no = 1;\n      this.onSearch();\n    },\n    async onSearch() {\n      const params = {\n        ...this.pager,\n        ...this.searchForm\n      };\n      this.loading = true;\n      try {\n        const res = await getAllHandoverList(formatParams(params));\n        commonFetchAction(res, (data) => {\n          this.tableData = data.requests || [];\n          this.total = data.total || 0;\n          this.loading = false;\n        });\n      } catch (e) {\n        this.$message({ type: 'error', message: e });\n        this.loading = false;\n      }\n    },\n    rowClick(row, column, event) {\n      if (column.columnKey !== 'action' && column.columnKey !== 'selection') {\n      }\n    }\n  },\n  created() {\n    this.canOperate = hasPermission(Permission.WORK_HANDOVER);\n    this.onSearch();\n  }\n};\n</script>\n\n<style scoped lang=\"scss\">\n  @import '~@/styles/common.scss';\n  .work-handvoer{\n    display: block;\n    .main-wrapper{\n      width: 100%;\n      position: relative;\n\n      .form-btn{\n        margin-top: -56px;\n        .plain{\n          color: #3D6ED1;\n          border: 1px solid #3D6ED1;\n        }\n      }\n    }\n    .pagination-center {\n      display: flex;\n      justify-content: center;\n      margin-top: 20px;\n    }\n    .add-btn{\n      display: inline-block;\n      margin: 0 5px -10px -20px;\n    }\n    .work-create-btn{\n      margin-top: 20px;\n      cursor: pointer;\n    }\n  }\n</style>\n<style lang=\"scss\">\n  .action-btn{\n    font-size: 14px;\n    height: 32px;\n    min-width: 72px;\n    padding: 5px 12px;\n    color: #3D6ED1;\n    border: 1px solid #3D6ED1;\n    background: #FFFFFF;\n    border-radius: 2px;\n    &:hover{\n      background: #FFFFFF;\n      color: #3D6ED1;\n      border: 1px solid #3D6ED1;\n    }\n  }\n</style>\n","usedDeprecatedRules":[{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]}]}]